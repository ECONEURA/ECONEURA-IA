{
  "statistics": {
    "detectionDate": "2025-09-26T15:42:09.277Z",
    "formats": {
      "typescript": {
        "sources": {
          "apps/api/src/application/use-cases/user/update-user.use-case.ts": {
            "lines": 149,
            "tokens": 1131,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 13,
            "duplicatedTokens": 115,
            "percentage": 8.72,
            "percentageTokens": 10.17,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/user/delete-user.use-case.ts": {
            "lines": 85,
            "tokens": 573,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/user/create-user.use-case.ts": {
            "lines": 141,
            "tokens": 1047,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 14,
            "duplicatedTokens": 106,
            "percentage": 9.93,
            "percentageTokens": 10.12,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/search/intelligent-search.use-case.ts": {
            "lines": 78,
            "tokens": 710,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 22,
            "duplicatedTokens": 181,
            "percentage": 28.21,
            "percentageTokens": 25.49,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/search/index-entity.use-case.ts": {
            "lines": 50,
            "tokens": 389,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 18,
            "duplicatedTokens": 134,
            "percentage": 36,
            "percentageTokens": 34.45,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/search/get-suggestions.use-case.ts": {
            "lines": 57,
            "tokens": 446,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 14,
            "duplicatedTokens": 115,
            "percentage": 24.56,
            "percentageTokens": 25.78,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/product/update-product.use-case.ts": {
            "lines": 300,
            "tokens": 2319,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 126,
            "duplicatedTokens": 945,
            "percentage": 42,
            "percentageTokens": 40.75,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/product/create-product.use-case.ts": {
            "lines": 231,
            "tokens": 1788,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 148,
            "duplicatedTokens": 1059,
            "percentage": 64.07,
            "percentageTokens": 59.23,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/predictive-analytics/update-predictive-analytics.use-case.ts": {
            "lines": 146,
            "tokens": 1282,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 48,
            "duplicatedTokens": 393,
            "percentage": 32.88,
            "percentageTokens": 30.66,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/predictive-analytics/train-model.use-case.ts": {
            "lines": 204,
            "tokens": 1493,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 58,
            "duplicatedTokens": 362,
            "percentage": 28.43,
            "percentageTokens": 24.25,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/predictive-analytics/generate-prediction.use-case.ts": {
            "lines": 115,
            "tokens": 809,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 155,
            "percentage": 16.52,
            "percentageTokens": 19.16,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/predictive-analytics/create-predictive-analytics.use-case.ts": {
            "lines": 150,
            "tokens": 1200,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 58,
            "duplicatedTokens": 516,
            "percentage": 38.67,
            "percentageTokens": 43,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/invoice/update-invoice.use-case.ts": {
            "lines": 234,
            "tokens": 1979,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 98,
            "duplicatedTokens": 899,
            "percentage": 41.88,
            "percentageTokens": 45.43,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/invoice/create-invoice.use-case.ts": {
            "lines": 185,
            "tokens": 1603,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 96,
            "duplicatedTokens": 869,
            "percentage": 51.89,
            "percentageTokens": 54.21,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/inventory-kardex/update-inventory-kardex.use-case.ts": {
            "lines": 146,
            "tokens": 1275,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 26,
            "duplicatedTokens": 225,
            "percentage": 17.81,
            "percentageTokens": 17.65,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/inventory-kardex/record-movement.use-case.ts": {
            "lines": 206,
            "tokens": 1470,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 53,
            "duplicatedTokens": 492,
            "percentage": 25.73,
            "percentageTokens": 33.47,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/inventory-kardex/create-inventory-kardex.use-case.ts": {
            "lines": 166,
            "tokens": 1227,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 48,
            "duplicatedTokens": 376,
            "percentage": 28.92,
            "percentageTokens": 30.64,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/interaction/update-interaction.use-case.ts": {
            "lines": 388,
            "tokens": 2816,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 135,
            "duplicatedTokens": 996,
            "percentage": 34.79,
            "percentageTokens": 35.37,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/interaction/create-interaction.use-case.ts": {
            "lines": 235,
            "tokens": 1583,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 74,
            "duplicatedTokens": 521,
            "percentage": 31.49,
            "percentageTokens": 32.91,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/deal/update-deal.use-case.ts": {
            "lines": 528,
            "tokens": 4035,
            "sources": 1,
            "clones": 14,
            "duplicatedLines": 216,
            "duplicatedTokens": 1701,
            "percentage": 40.91,
            "percentageTokens": 42.16,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/deal/create-deal.use-case.ts": {
            "lines": 342,
            "tokens": 2451,
            "sources": 1,
            "clones": 11,
            "duplicatedLines": 208,
            "duplicatedTokens": 1449,
            "percentage": 60.82,
            "percentageTokens": 59.12,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/database-schema/create-database-schema.use-case.ts": {
            "lines": 369,
            "tokens": 3126,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 304,
            "duplicatedTokens": 2569,
            "percentage": 82.38,
            "percentageTokens": 82.18,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/database-schema/analyze-database-schema.use-case.ts": {
            "lines": 138,
            "tokens": 945,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 58,
            "duplicatedTokens": 389,
            "percentage": 42.03,
            "percentageTokens": 41.16,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/contact/update-contact.use-case.ts": {
            "lines": 420,
            "tokens": 3946,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 227,
            "duplicatedTokens": 2160,
            "percentage": 54.05,
            "percentageTokens": 54.74,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/contact/create-contact.use-case.ts": {
            "lines": 377,
            "tokens": 3494,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 217,
            "duplicatedTokens": 2047,
            "percentage": 57.56,
            "percentageTokens": 58.59,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/company/update-company.use-case.ts": {
            "lines": 367,
            "tokens": 3137,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 154,
            "duplicatedTokens": 1270,
            "percentage": 41.96,
            "percentageTokens": 40.48,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/company/create-company.use-case.ts": {
            "lines": 310,
            "tokens": 2624,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 154,
            "duplicatedTokens": 1264,
            "percentage": 49.68,
            "percentageTokens": 48.17,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/architecture/create-architecture.use-case.ts": {
            "lines": 216,
            "tokens": 1803,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 133,
            "duplicatedTokens": 1220,
            "percentage": 61.57,
            "percentageTokens": 67.67,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/architecture/analyze-architecture.use-case.ts": {
            "lines": 120,
            "tokens": 797,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 40,
            "duplicatedTokens": 259,
            "percentage": 33.33,
            "percentageTokens": 32.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/user/update-user.use-case.d.ts": {
            "lines": 23,
            "tokens": 214,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 13,
            "duplicatedTokens": 115,
            "percentage": 56.52,
            "percentageTokens": 53.74,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/user/delete-user.use-case.d.ts": {
            "lines": 17,
            "tokens": 137,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/user/create-user.use-case.d.ts": {
            "lines": 25,
            "tokens": 211,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 14,
            "duplicatedTokens": 106,
            "percentage": 56,
            "percentageTokens": 50.24,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/search/intelligent-search.use-case.d.ts": {
            "lines": 29,
            "tokens": 264,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 22,
            "duplicatedTokens": 181,
            "percentage": 75.86,
            "percentageTokens": 68.56,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/search/index-entity.use-case.d.ts": {
            "lines": 25,
            "tokens": 216,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 18,
            "duplicatedTokens": 134,
            "percentage": 72,
            "percentageTokens": 62.04,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/search/get-suggestions.use-case.d.ts": {
            "lines": 19,
            "tokens": 167,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 14,
            "duplicatedTokens": 115,
            "percentage": 73.68,
            "percentageTokens": 68.86,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/product/update-product.use-case.d.ts": {
            "lines": 94,
            "tokens": 712,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 87,
            "duplicatedTokens": 642,
            "percentage": 92.55,
            "percentageTokens": 90.17,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/product/create-product.use-case.d.ts": {
            "lines": 93,
            "tokens": 683,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 86,
            "duplicatedTokens": 613,
            "percentage": 92.47,
            "percentageTokens": 89.75,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/predictive-analytics/update-predictive-analytics.use-case.d.ts": {
            "lines": 36,
            "tokens": 390,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 28,
            "duplicatedTokens": 291,
            "percentage": 77.78,
            "percentageTokens": 74.62,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/predictive-analytics/train-model.use-case.d.ts": {
            "lines": 35,
            "tokens": 289,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 24,
            "duplicatedTokens": 172,
            "percentage": 68.57,
            "percentageTokens": 59.52,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/predictive-analytics/generate-prediction.use-case.d.ts": {
            "lines": 27,
            "tokens": 254,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 155,
            "percentage": 70.37,
            "percentageTokens": 61.02,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/predictive-analytics/create-predictive-analytics.use-case.d.ts": {
            "lines": 35,
            "tokens": 366,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 27,
            "duplicatedTokens": 267,
            "percentage": 77.14,
            "percentageTokens": 72.95,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/invoice/update-invoice.use-case.d.ts": {
            "lines": 69,
            "tokens": 625,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 61,
            "duplicatedTokens": 526,
            "percentage": 88.41,
            "percentageTokens": 84.16,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/invoice/create-invoice.use-case.d.ts": {
            "lines": 67,
            "tokens": 595,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 59,
            "duplicatedTokens": 496,
            "percentage": 88.06,
            "percentageTokens": 83.36,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/inventory-kardex/update-inventory-kardex.use-case.d.ts": {
            "lines": 34,
            "tokens": 324,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 26,
            "duplicatedTokens": 225,
            "percentage": 76.47,
            "percentageTokens": 69.44,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/inventory-kardex/record-movement.use-case.d.ts": {
            "lines": 34,
            "tokens": 358,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 26,
            "duplicatedTokens": 259,
            "percentage": 76.47,
            "percentageTokens": 72.35,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/inventory-kardex/create-inventory-kardex.use-case.d.ts": {
            "lines": 39,
            "tokens": 340,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 31,
            "duplicatedTokens": 241,
            "percentage": 79.49,
            "percentageTokens": 70.88,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/interaction/update-interaction.use-case.d.ts": {
            "lines": 43,
            "tokens": 621,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 25,
            "duplicatedTokens": 183,
            "percentage": 58.14,
            "percentageTokens": 29.47,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/interaction/create-interaction.use-case.d.ts": {
            "lines": 35,
            "tokens": 480,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 22,
            "duplicatedTokens": 163,
            "percentage": 62.86,
            "percentageTokens": 33.96,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/deal/update-deal.use-case.d.ts": {
            "lines": 56,
            "tokens": 834,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 34,
            "duplicatedTokens": 263,
            "percentage": 60.71,
            "percentageTokens": 31.53,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/deal/create-deal.use-case.d.ts": {
            "lines": 47,
            "tokens": 627,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 33,
            "duplicatedTokens": 259,
            "percentage": 70.21,
            "percentageTokens": 41.31,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/database-schema/create-database-schema.use-case.d.ts": {
            "lines": 166,
            "tokens": 1460,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 158,
            "duplicatedTokens": 1361,
            "percentage": 95.18,
            "percentageTokens": 93.22,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/database-schema/analyze-database-schema.use-case.d.ts": {
            "lines": 41,
            "tokens": 327,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 33,
            "duplicatedTokens": 228,
            "percentage": 80.49,
            "percentageTokens": 69.72,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/contact/update-contact.use-case.d.ts": {
            "lines": 93,
            "tokens": 861,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 85,
            "duplicatedTokens": 787,
            "percentage": 91.4,
            "percentageTokens": 91.41,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/contact/create-contact.use-case.d.ts": {
            "lines": 93,
            "tokens": 855,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 85,
            "duplicatedTokens": 781,
            "percentage": 91.4,
            "percentageTokens": 91.35,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/company/update-company.use-case.d.ts": {
            "lines": 81,
            "tokens": 673,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 73,
            "duplicatedTokens": 599,
            "percentage": 90.12,
            "percentageTokens": 89,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/company/create-company.use-case.d.ts": {
            "lines": 81,
            "tokens": 667,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 73,
            "duplicatedTokens": 593,
            "percentage": 90.12,
            "percentageTokens": 88.91,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/architecture/create-architecture.use-case.d.ts": {
            "lines": 49,
            "tokens": 475,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 41,
            "duplicatedTokens": 376,
            "percentage": 83.67,
            "percentageTokens": 79.16,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/architecture/analyze-architecture.use-case.d.ts": {
            "lines": 32,
            "tokens": 262,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 24,
            "duplicatedTokens": 163,
            "percentage": 75,
            "percentageTokens": 62.21,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/__tests__/setup/test-setup.ts": {
            "lines": 31,
            "tokens": 272,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/shared/utils/validation.utils.ts": {
            "lines": 437,
            "tokens": 4338,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/shared/utils/error.utils.ts": {
            "lines": 527,
            "tokens": 4060,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 38,
            "duplicatedTokens": 287,
            "percentage": 7.21,
            "percentageTokens": 7.07,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/sepa/types.ts": {
            "lines": 21,
            "tokens": 142,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 16,
            "duplicatedTokens": 114,
            "percentage": 76.19,
            "percentageTokens": 80.28,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/sepa/reconciler.ts": {
            "lines": 37,
            "tokens": 625,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/sepa/parser.ts": {
            "lines": 61,
            "tokens": 804,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/sepa/index.ts": {
            "lines": 53,
            "tokens": 864,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/ai/azure-openai.service.ts": {
            "lines": 25,
            "tokens": 266,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/routes/user.routes.ts": {
            "lines": 213,
            "tokens": 1646,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/routes/search.routes.ts": {
            "lines": 184,
            "tokens": 952,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/routes/product.routes.ts": {
            "lines": 707,
            "tokens": 7687,
            "sources": 1,
            "clones": 32,
            "duplicatedLines": 608,
            "duplicatedTokens": 6174,
            "percentage": 86,
            "percentageTokens": 80.32,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/routes/predictive-analytics.routes.ts": {
            "lines": 327,
            "tokens": 3814,
            "sources": 1,
            "clones": 18,
            "duplicatedLines": 229,
            "duplicatedTokens": 3689,
            "percentage": 70.03,
            "percentageTokens": 96.72,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/routes/invoice.routes.ts": {
            "lines": 445,
            "tokens": 5260,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 135,
            "duplicatedTokens": 2106,
            "percentage": 30.34,
            "percentageTokens": 40.04,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/routes/inventory-kardex.routes.ts": {
            "lines": 390,
            "tokens": 4464,
            "sources": 1,
            "clones": 11,
            "duplicatedLines": 163,
            "duplicatedTokens": 2534,
            "percentage": 41.79,
            "percentageTokens": 56.77,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/routes/interaction.routes.ts": {
            "lines": 433,
            "tokens": 2568,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/routes/deal.routes.ts": {
            "lines": 532,
            "tokens": 3219,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/routes/contact.routes.ts": {
            "lines": 600,
            "tokens": 6971,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 251,
            "duplicatedTokens": 4238,
            "percentage": 41.83,
            "percentageTokens": 60.79,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/routes/company.routes.ts": {
            "lines": 436,
            "tokens": 5255,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 218,
            "duplicatedTokens": 3628,
            "percentage": 50,
            "percentageTokens": 69.04,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/routes/basic-ai.routes.ts": {
            "lines": 149,
            "tokens": 770,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/routes/architecture.routes.ts": {
            "lines": 333,
            "tokens": 3901,
            "sources": 1,
            "clones": 11,
            "duplicatedLines": 161,
            "duplicatedTokens": 2683,
            "percentage": 48.35,
            "percentageTokens": 68.78,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/routes/agents.routes.ts": {
            "lines": 387,
            "tokens": 1607,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/middleware/validation.middleware.ts": {
            "lines": 47,
            "tokens": 425,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/middleware/response.middleware.ts": {
            "lines": 71,
            "tokens": 673,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/middleware/error.middleware.ts": {
            "lines": 81,
            "tokens": 688,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/middleware/base.middleware.ts": {
            "lines": 325,
            "tokens": 2434,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/dto/user.dto.ts": {
            "lines": 209,
            "tokens": 2327,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 214,
            "percentage": 5.26,
            "percentageTokens": 9.2,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/dto/search.dto.ts": {
            "lines": 164,
            "tokens": 1940,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/dto/product.dto.ts": {
            "lines": 361,
            "tokens": 4933,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 70,
            "duplicatedTokens": 884,
            "percentage": 19.39,
            "percentageTokens": 17.92,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/dto/predictive-analytics.dto.ts": {
            "lines": 299,
            "tokens": 3865,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 26,
            "duplicatedTokens": 613,
            "percentage": 8.7,
            "percentageTokens": 15.86,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/dto/organization.dto.ts": {
            "lines": 257,
            "tokens": 3165,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/dto/invoice.dto.ts": {
            "lines": 303,
            "tokens": 3821,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 20,
            "duplicatedTokens": 362,
            "percentage": 6.6,
            "percentageTokens": 9.47,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/dto/inventory-kardex.dto.ts": {
            "lines": 330,
            "tokens": 4030,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/dto/interaction.dto.ts": {
            "lines": 373,
            "tokens": 3719,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 100,
            "duplicatedTokens": 893,
            "percentage": 26.81,
            "percentageTokens": 24.01,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/dto/deal.dto.ts": {
            "lines": 540,
            "tokens": 6070,
            "sources": 1,
            "clones": 14,
            "duplicatedLines": 214,
            "duplicatedTokens": 2523,
            "percentage": 39.63,
            "percentageTokens": 41.57,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/dto/database-schema.dto.ts": {
            "lines": 638,
            "tokens": 9058,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 84,
            "duplicatedTokens": 1328,
            "percentage": 13.17,
            "percentageTokens": 14.66,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/dto/contact.dto.ts": {
            "lines": 608,
            "tokens": 8155,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 52,
            "duplicatedTokens": 803,
            "percentage": 8.55,
            "percentageTokens": 9.85,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/dto/company.dto.ts": {
            "lines": 428,
            "tokens": 5633,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 21,
            "duplicatedTokens": 327,
            "percentage": 4.91,
            "percentageTokens": 5.81,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/dto/base.dto.ts": {
            "lines": 190,
            "tokens": 1605,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 13,
            "duplicatedTokens": 217,
            "percentage": 6.84,
            "percentageTokens": 13.52,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/dto/architecture.dto.ts": {
            "lines": 319,
            "tokens": 3950,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 68,
            "duplicatedTokens": 1289,
            "percentage": 21.32,
            "percentageTokens": 32.63,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/controllers/user.controller.ts": {
            "lines": 492,
            "tokens": 4132,
            "sources": 1,
            "clones": 18,
            "duplicatedLines": 270,
            "duplicatedTokens": 2146,
            "percentage": 54.88,
            "percentageTokens": 51.94,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/controllers/search.controller.ts": {
            "lines": 207,
            "tokens": 1702,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/controllers/product.controller.ts": {
            "lines": 661,
            "tokens": 6454,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 428,
            "duplicatedTokens": 4452,
            "percentage": 64.75,
            "percentageTokens": 68.98,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/controllers/predictive-analytics.controller.ts": {
            "lines": 382,
            "tokens": 3791,
            "sources": 1,
            "clones": 12,
            "duplicatedLines": 132,
            "duplicatedTokens": 1056,
            "percentage": 34.55,
            "percentageTokens": 27.86,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/controllers/invoice.controller.ts": {
            "lines": 450,
            "tokens": 4493,
            "sources": 1,
            "clones": 15,
            "duplicatedLines": 165,
            "duplicatedTokens": 1319,
            "percentage": 36.67,
            "percentageTokens": 29.36,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/controllers/inventory-kardex.controller.ts": {
            "lines": 463,
            "tokens": 4506,
            "sources": 1,
            "clones": 13,
            "duplicatedLines": 159,
            "duplicatedTokens": 1283,
            "percentage": 34.34,
            "percentageTokens": 28.47,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/controllers/interaction.controller.ts": {
            "lines": 803,
            "tokens": 7642,
            "sources": 1,
            "clones": 42,
            "duplicatedLines": 952,
            "duplicatedTokens": 9594,
            "percentage": 118.56,
            "percentageTokens": 125.54,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/controllers/company.controller.ts": {
            "lines": 745,
            "tokens": 6677,
            "sources": 1,
            "clones": 30,
            "duplicatedLines": 436,
            "duplicatedTokens": 3268,
            "percentage": 58.52,
            "percentageTokens": 48.94,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/controllers/basic-ai.controller.ts": {
            "lines": 398,
            "tokens": 2869,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 102,
            "duplicatedTokens": 754,
            "percentage": 25.63,
            "percentageTokens": 26.28,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/controllers/base.controller.ts": {
            "lines": 204,
            "tokens": 1584,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/controllers/architecture.controller.ts": {
            "lines": 430,
            "tokens": 4219,
            "sources": 1,
            "clones": 15,
            "duplicatedLines": 199,
            "duplicatedTokens": 1727,
            "percentage": 46.28,
            "percentageTokens": 40.93,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/controllers/agents.controller.ts": {
            "lines": 606,
            "tokens": 4470,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 136,
            "duplicatedTokens": 980,
            "percentage": 22.44,
            "percentageTokens": 21.92,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/performance/optimization.ts": {
            "lines": 36,
            "tokens": 340,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/system-cockpit/system-health.service.ts": {
            "lines": 483,
            "tokens": 3714,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 58,
            "duplicatedTokens": 410,
            "percentage": 12.01,
            "percentageTokens": 11.04,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/handlers/user-handlers.ts": {
            "lines": 178,
            "tokens": 1736,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/basic-ai/basic-ai.service.ts": {
            "lines": 509,
            "tokens": 3892,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 57,
            "duplicatedTokens": 466,
            "percentage": 11.2,
            "percentageTokens": 11.97,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/aggregates/user.ts": {
            "lines": 196,
            "tokens": 1323,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/infrastructure/observability/tracing.service.ts": {
            "lines": 396,
            "tokens": 3106,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 122,
            "duplicatedTokens": 951,
            "percentage": 30.81,
            "percentageTokens": 30.62,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/infrastructure/observability/metrics.service.ts": {
            "lines": 397,
            "tokens": 3280,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 92,
            "percentage": 2.77,
            "percentageTokens": 2.8,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/infrastructure/observability/logger.service.ts": {
            "lines": 298,
            "tokens": 2533,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 18,
            "duplicatedTokens": 135,
            "percentage": 6.04,
            "percentageTokens": 5.33,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/infrastructure/observability/index.ts": {
            "lines": 18,
            "tokens": 241,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/infrastructure/observability/health.service.ts": {
            "lines": 486,
            "tokens": 3807,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 31,
            "duplicatedTokens": 211,
            "percentage": 6.38,
            "percentageTokens": 5.54,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/infrastructure/observability/dashboard.service.ts": {
            "lines": 316,
            "tokens": 2856,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 20,
            "duplicatedTokens": 136,
            "percentage": 6.33,
            "percentageTokens": 4.76,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/infrastructure/observability/alerting.service.ts": {
            "lines": 592,
            "tokens": 4863,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 38,
            "duplicatedTokens": 337,
            "percentage": 6.42,
            "percentageTokens": 6.93,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/value-objects/money.vo.ts": {
            "lines": 276,
            "tokens": 2672,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/value-objects/email.vo.ts": {
            "lines": 109,
            "tokens": 744,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/value-objects/address.vo.ts": {
            "lines": 343,
            "tokens": 2549,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 44,
            "duplicatedTokens": 300,
            "percentage": 12.83,
            "percentageTokens": 11.77,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/services/user.domain.service.ts": {
            "lines": 407,
            "tokens": 3313,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/repositories/user.repository.ts": {
            "lines": 104,
            "tokens": 811,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 28,
            "duplicatedTokens": 225,
            "percentage": 26.92,
            "percentageTokens": 27.74,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/repositories/search.repository.ts": {
            "lines": 65,
            "tokens": 542,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/repositories/product.repository.ts": {
            "lines": 192,
            "tokens": 1804,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 85,
            "duplicatedTokens": 735,
            "percentage": 44.27,
            "percentageTokens": 40.74,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/repositories/predictive-analytics.repository.ts": {
            "lines": 272,
            "tokens": 2424,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 212,
            "duplicatedTokens": 1627,
            "percentage": 77.94,
            "percentageTokens": 67.12,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/repositories/organization.repository.ts": {
            "lines": 102,
            "tokens": 739,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 28,
            "duplicatedTokens": 226,
            "percentage": 27.45,
            "percentageTokens": 30.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/repositories/invoice.repository.ts": {
            "lines": 230,
            "tokens": 2219,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 127,
            "duplicatedTokens": 1010,
            "percentage": 55.22,
            "percentageTokens": 45.52,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/repositories/inventory-kardex.repository.ts": {
            "lines": 322,
            "tokens": 2934,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 250,
            "duplicatedTokens": 1882,
            "percentage": 77.64,
            "percentageTokens": 64.14,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/repositories/interaction.repository.ts": {
            "lines": 207,
            "tokens": 2049,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 75,
            "duplicatedTokens": 625,
            "percentage": 36.23,
            "percentageTokens": 30.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/repositories/deal.repository.ts": {
            "lines": 274,
            "tokens": 3075,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 137,
            "duplicatedTokens": 1487,
            "percentage": 50,
            "percentageTokens": 48.36,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/repositories/database-schema.repository.ts": {
            "lines": 350,
            "tokens": 3305,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 299,
            "duplicatedTokens": 2534,
            "percentage": 85.43,
            "percentageTokens": 76.67,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/repositories/contact.repository.ts": {
            "lines": 396,
            "tokens": 4218,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 329,
            "duplicatedTokens": 3106,
            "percentage": 83.08,
            "percentageTokens": 73.64,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/repositories/company.repository.ts": {
            "lines": 254,
            "tokens": 2528,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 196,
            "duplicatedTokens": 1791,
            "percentage": 77.17,
            "percentageTokens": 70.85,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/repositories/base.repository.ts": {
            "lines": 89,
            "tokens": 627,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 43,
            "duplicatedTokens": 306,
            "percentage": 48.31,
            "percentageTokens": 48.8,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/repositories/architecture.repository.ts": {
            "lines": 270,
            "tokens": 2416,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 221,
            "duplicatedTokens": 1887,
            "percentage": 81.85,
            "percentageTokens": 78.1,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/entities/user.entity.ts": {
            "lines": 323,
            "tokens": 2422,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 55,
            "duplicatedTokens": 412,
            "percentage": 17.03,
            "percentageTokens": 17.01,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/entities/search-result.entity.ts": {
            "lines": 280,
            "tokens": 2314,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/entities/product.entity.ts": {
            "lines": 365,
            "tokens": 3330,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 170,
            "duplicatedTokens": 1128,
            "percentage": 46.58,
            "percentageTokens": 33.87,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/entities/predictive-analytics.entity.ts": {
            "lines": 442,
            "tokens": 3820,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 122,
            "duplicatedTokens": 964,
            "percentage": 27.6,
            "percentageTokens": 25.24,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/entities/organization.entity.ts": {
            "lines": 435,
            "tokens": 3255,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 146,
            "duplicatedTokens": 1087,
            "percentage": 33.56,
            "percentageTokens": 33.39,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/entities/invoice.entity.ts": {
            "lines": 436,
            "tokens": 3936,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 66,
            "duplicatedTokens": 544,
            "percentage": 15.14,
            "percentageTokens": 13.82,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/entities/inventory-kardex.entity.ts": {
            "lines": 607,
            "tokens": 4898,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 84,
            "duplicatedTokens": 715,
            "percentage": 13.84,
            "percentageTokens": 14.6,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/entities/interaction.entity.ts": {
            "lines": 330,
            "tokens": 2781,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 110,
            "duplicatedTokens": 881,
            "percentage": 33.33,
            "percentageTokens": 31.68,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/entities/deal.entity.ts": {
            "lines": 528,
            "tokens": 4850,
            "sources": 1,
            "clones": 12,
            "duplicatedLines": 247,
            "duplicatedTokens": 1839,
            "percentage": 46.78,
            "percentageTokens": 37.92,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/entities/database-schema.entity.ts": {
            "lines": 651,
            "tokens": 5701,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 358,
            "duplicatedTokens": 2707,
            "percentage": 54.99,
            "percentageTokens": 47.48,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/entities/company.entity.ts": {
            "lines": 625,
            "tokens": 5470,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 176,
            "duplicatedTokens": 1561,
            "percentage": 28.16,
            "percentageTokens": 28.54,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/entities/base.entity.ts": {
            "lines": 76,
            "tokens": 526,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/entities/architecture.entity.ts": {
            "lines": 412,
            "tokens": 3732,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 144,
            "duplicatedTokens": 1097,
            "percentage": 34.95,
            "percentageTokens": 29.39,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/db/partitions/partition-manager.service.ts": {
            "lines": 529,
            "tokens": 4744,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 43,
            "duplicatedTokens": 316,
            "percentage": 8.13,
            "percentageTokens": 6.66,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/db/optimization/database-optimizer.service.ts": {
            "lines": 818,
            "tokens": 6013,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 98,
            "duplicatedTokens": 790,
            "percentage": 11.98,
            "percentageTokens": 13.14,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/db/indexes/index-manager.service.ts": {
            "lines": 418,
            "tokens": 3310,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 39,
            "duplicatedTokens": 294,
            "percentage": 9.33,
            "percentageTokens": 8.88,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/base.use-case.ts": {
            "lines": 116,
            "tokens": 907,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 18,
            "duplicatedTokens": 116,
            "percentage": 15.52,
            "percentageTokens": 12.79,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/services/user.application.service.ts": {
            "lines": 368,
            "tokens": 2874,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 69,
            "duplicatedTokens": 482,
            "percentage": 18.75,
            "percentageTokens": 16.77,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/shared/utils/validation.utils.d.ts": {
            "lines": 191,
            "tokens": 2782,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 35,
            "duplicatedTokens": 295,
            "percentage": 18.32,
            "percentageTokens": 10.6,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/shared/utils/error.utils.d.ts": {
            "lines": 153,
            "tokens": 2001,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 38,
            "duplicatedTokens": 287,
            "percentage": 24.84,
            "percentageTokens": 14.34,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/sepa/types.d.ts": {
            "lines": 20,
            "tokens": 140,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 16,
            "duplicatedTokens": 114,
            "percentage": 80,
            "percentageTokens": 81.43,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/routes/search.routes.d.ts": {
            "lines": 9,
            "tokens": 103,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/middleware/validation.middleware.d.ts": {
            "lines": 9,
            "tokens": 124,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/middleware/response.middleware.d.ts": {
            "lines": 10,
            "tokens": 115,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/middleware/error.middleware.d.ts": {
            "lines": 9,
            "tokens": 171,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/middleware/base.middleware.d.ts": {
            "lines": 17,
            "tokens": 426,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/dto/user.dto.d.ts": {
            "lines": 348,
            "tokens": 3885,
            "sources": 1,
            "clones": 14,
            "duplicatedLines": 260,
            "duplicatedTokens": 2739,
            "percentage": 74.71,
            "percentageTokens": 70.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/dto/search.dto.d.ts": {
            "lines": 437,
            "tokens": 4348,
            "sources": 1,
            "clones": 26,
            "duplicatedLines": 558,
            "duplicatedTokens": 5188,
            "percentage": 127.69,
            "percentageTokens": 119.32,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/dto/organization.dto.d.ts": {
            "lines": 942,
            "tokens": 8473,
            "sources": 1,
            "clones": 33,
            "duplicatedLines": 1327,
            "duplicatedTokens": 10559,
            "percentage": 140.87,
            "percentageTokens": 124.62,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/dto/base.dto.d.ts": {
            "lines": 253,
            "tokens": 2563,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 92,
            "duplicatedTokens": 878,
            "percentage": 36.36,
            "percentageTokens": 34.26,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/controllers/user.controller.d.ts": {
            "lines": 21,
            "tokens": 480,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/controllers/search.controller.d.ts": {
            "lines": 19,
            "tokens": 300,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/controllers/product.controller.d.ts": {
            "lines": 17,
            "tokens": 324,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/controllers/predictive-analytics.controller.d.ts": {
            "lines": 28,
            "tokens": 533,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/controllers/invoice.controller.d.ts": {
            "lines": 28,
            "tokens": 577,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/controllers/inventory-kardex.controller.d.ts": {
            "lines": 29,
            "tokens": 583,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/controllers/interaction.controller.d.ts": {
            "lines": 23,
            "tokens": 399,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/controllers/deal.controller.d.ts": {
            "lines": 26,
            "tokens": 465,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/controllers/contact.controller.d.ts": {
            "lines": 41,
            "tokens": 908,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/controllers/company.controller.d.ts": {
            "lines": 27,
            "tokens": 582,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/controllers/basic-ai.controller.d.ts": {
            "lines": 19,
            "tokens": 233,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/controllers/base.controller.d.ts": {
            "lines": 49,
            "tokens": 682,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/controllers/architecture.controller.d.ts": {
            "lines": 25,
            "tokens": 493,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/controllers/agents.controller.d.ts": {
            "lines": 19,
            "tokens": 373,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/system-cockpit/system-health.service.d.ts": {
            "lines": 84,
            "tokens": 625,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 58,
            "duplicatedTokens": 410,
            "percentage": 69.05,
            "percentageTokens": 65.6,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/handlers/user-handlers.d.ts": {
            "lines": 15,
            "tokens": 257,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/basic-ai/basic-ai.service.d.ts": {
            "lines": 63,
            "tokens": 495,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 34,
            "duplicatedTokens": 249,
            "percentage": 53.97,
            "percentageTokens": 50.3,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/aggregates/user.d.ts": {
            "lines": 28,
            "tokens": 298,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/infrastructure/observability/tracing.service.d.ts": {
            "lines": 56,
            "tokens": 816,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 17,
            "duplicatedTokens": 142,
            "percentage": 30.36,
            "percentageTokens": 17.4,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/infrastructure/observability/metrics.service.d.ts": {
            "lines": 46,
            "tokens": 686,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 92,
            "percentage": 23.91,
            "percentageTokens": 13.41,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/infrastructure/observability/logger.service.d.ts": {
            "lines": 45,
            "tokens": 570,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 18,
            "duplicatedTokens": 135,
            "percentage": 40,
            "percentageTokens": 23.68,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/infrastructure/observability/index.d.ts": {
            "lines": 12,
            "tokens": 231,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/infrastructure/observability/health.service.d.ts": {
            "lines": 75,
            "tokens": 644,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 31,
            "duplicatedTokens": 211,
            "percentage": 41.33,
            "percentageTokens": 32.76,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/infrastructure/observability/dashboard.service.d.ts": {
            "lines": 55,
            "tokens": 478,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 20,
            "duplicatedTokens": 136,
            "percentage": 36.36,
            "percentageTokens": 28.45,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/infrastructure/observability/alerting.service.d.ts": {
            "lines": 87,
            "tokens": 771,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 26,
            "duplicatedTokens": 242,
            "percentage": 29.89,
            "percentageTokens": 31.39,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/value-objects/money.vo.d.ts": {
            "lines": 52,
            "tokens": 529,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/value-objects/email.vo.d.ts": {
            "lines": 19,
            "tokens": 185,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/value-objects/address.vo.d.ts": {
            "lines": 34,
            "tokens": 298,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/services/user.domain.service.d.ts": {
            "lines": 44,
            "tokens": 565,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/repositories/user.repository.d.ts": {
            "lines": 54,
            "tokens": 712,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 28,
            "duplicatedTokens": 225,
            "percentage": 51.85,
            "percentageTokens": 31.6,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/repositories/search.repository.d.ts": {
            "lines": 38,
            "tokens": 489,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/repositories/product.repository.d.ts": {
            "lines": 133,
            "tokens": 1686,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 85,
            "duplicatedTokens": 735,
            "percentage": 63.91,
            "percentageTokens": 43.59,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/repositories/predictive-analytics.repository.d.ts": {
            "lines": 216,
            "tokens": 2309,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 180,
            "duplicatedTokens": 1401,
            "percentage": 83.33,
            "percentageTokens": 60.68,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/repositories/organization.repository.d.ts": {
            "lines": 53,
            "tokens": 641,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 28,
            "duplicatedTokens": 226,
            "percentage": 52.83,
            "percentageTokens": 35.26,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/repositories/invoice.repository.d.ts": {
            "lines": 170,
            "tokens": 2094,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 127,
            "duplicatedTokens": 1010,
            "percentage": 74.71,
            "percentageTokens": 48.23,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/repositories/inventory-kardex.repository.d.ts": {
            "lines": 265,
            "tokens": 2810,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 210,
            "duplicatedTokens": 1592,
            "percentage": 79.25,
            "percentageTokens": 56.65,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/repositories/interaction.repository.d.ts": {
            "lines": 132,
            "tokens": 1894,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 75,
            "duplicatedTokens": 625,
            "percentage": 56.82,
            "percentageTokens": 33,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/repositories/deal.repository.d.ts": {
            "lines": 219,
            "tokens": 2940,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 137,
            "duplicatedTokens": 1487,
            "percentage": 62.56,
            "percentageTokens": 50.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/repositories/database-schema.repository.d.ts": {
            "lines": 293,
            "tokens": 3189,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 257,
            "duplicatedTokens": 2228,
            "percentage": 87.71,
            "percentageTokens": 69.87,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/repositories/contact.repository.d.ts": {
            "lines": 318,
            "tokens": 4043,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 216,
            "duplicatedTokens": 2204,
            "percentage": 67.92,
            "percentageTokens": 54.51,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/repositories/company.repository.d.ts": {
            "lines": 187,
            "tokens": 2385,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 123,
            "duplicatedTokens": 1209,
            "percentage": 65.78,
            "percentageTokens": 50.69,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/repositories/base.repository.d.ts": {
            "lines": 57,
            "tokens": 563,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 43,
            "duplicatedTokens": 306,
            "percentage": 75.44,
            "percentageTokens": 54.35,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/repositories/architecture.repository.d.ts": {
            "lines": 219,
            "tokens": 2312,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 195,
            "duplicatedTokens": 1709,
            "percentage": 89.04,
            "percentageTokens": 73.92,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/entities/user.entity.d.ts": {
            "lines": 81,
            "tokens": 758,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 33,
            "duplicatedTokens": 230,
            "percentage": 40.74,
            "percentageTokens": 30.34,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/entities/search-result.entity.d.ts": {
            "lines": 342,
            "tokens": 3448,
            "sources": 1,
            "clones": 16,
            "duplicatedLines": 340,
            "duplicatedTokens": 3382,
            "percentage": 99.42,
            "percentageTokens": 98.09,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/entities/product.entity.d.ts": {
            "lines": 147,
            "tokens": 1497,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 90,
            "duplicatedTokens": 644,
            "percentage": 61.22,
            "percentageTokens": 43.02,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/entities/predictive-analytics.entity.d.ts": {
            "lines": 123,
            "tokens": 1461,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 79,
            "duplicatedTokens": 647,
            "percentage": 64.23,
            "percentageTokens": 44.28,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/entities/organization.entity.d.ts": {
            "lines": 117,
            "tokens": 1063,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 53,
            "duplicatedTokens": 366,
            "percentage": 45.3,
            "percentageTokens": 34.43,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/entities/invoice.entity.d.ts": {
            "lines": 131,
            "tokens": 1490,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 66,
            "duplicatedTokens": 544,
            "percentage": 50.38,
            "percentageTokens": 36.51,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/entities/inventory-kardex.entity.d.ts": {
            "lines": 119,
            "tokens": 1632,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 67,
            "duplicatedTokens": 580,
            "percentage": 56.3,
            "percentageTokens": 35.54,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/entities/interaction.entity.d.ts": {
            "lines": 79,
            "tokens": 1130,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 14,
            "duplicatedTokens": 105,
            "percentage": 17.72,
            "percentageTokens": 9.29,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/entities/deal.entity.d.ts": {
            "lines": 119,
            "tokens": 1637,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 32,
            "duplicatedTokens": 254,
            "percentage": 26.89,
            "percentageTokens": 15.52,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/entities/database-schema.entity.d.ts": {
            "lines": 280,
            "tokens": 2556,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 215,
            "duplicatedTokens": 1708,
            "percentage": 76.79,
            "percentageTokens": 66.82,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/entities/contact.entity.d.ts": {
            "lines": 253,
            "tokens": 2724,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 107,
            "percentage": 3.95,
            "percentageTokens": 3.93,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/entities/company.entity.d.ts": {
            "lines": 159,
            "tokens": 1672,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 70,
            "duplicatedTokens": 547,
            "percentage": 44.03,
            "percentageTokens": 32.72,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/entities/base.entity.d.ts": {
            "lines": 26,
            "tokens": 227,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/entities/architecture.entity.d.ts": {
            "lines": 128,
            "tokens": 1275,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 82,
            "duplicatedTokens": 663,
            "percentage": 64.06,
            "percentageTokens": 52,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/db/partitions/partition-manager.service.d.ts": {
            "lines": 65,
            "tokens": 539,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 28,
            "duplicatedTokens": 214,
            "percentage": 43.08,
            "percentageTokens": 39.7,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/db/optimization/database-optimizer.service.d.ts": {
            "lines": 91,
            "tokens": 709,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 47,
            "duplicatedTokens": 350,
            "percentage": 51.65,
            "percentageTokens": 49.37,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/db/indexes/index-manager.service.d.ts": {
            "lines": 54,
            "tokens": 450,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 24,
            "duplicatedTokens": 192,
            "percentage": 44.44,
            "percentageTokens": 42.67,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/base.use-case.d.ts": {
            "lines": 32,
            "tokens": 378,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 18,
            "duplicatedTokens": 116,
            "percentage": 56.25,
            "percentageTokens": 30.69,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/services/user.application.service.d.ts": {
            "lines": 71,
            "tokens": 780,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 31,
            "duplicatedTokens": 240,
            "percentage": 43.66,
            "percentageTokens": 30.77,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workers/src/utils/metrics.ts": {
            "lines": 313,
            "tokens": 2401,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workers/src/utils/logger.ts": {
            "lines": 140,
            "tokens": 1316,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workers/src/types/email.types.ts": {
            "lines": 263,
            "tokens": 2005,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workers/src/services/graph-service.ts": {
            "lines": 317,
            "tokens": 2341,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workers/src/services/cron-service.ts": {
            "lines": 441,
            "tokens": 3412,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workers/src/queues/job-queue.ts": {
            "lines": 429,
            "tokens": 4006,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 50,
            "duplicatedTokens": 617,
            "percentage": 11.66,
            "percentageTokens": 15.4,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workers/src/queues/job-queue-methods.ts": {
            "lines": 93,
            "tokens": 965,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 22,
            "duplicatedTokens": 281,
            "percentage": 23.66,
            "percentageTokens": 29.12,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workers/src/processors/email-processor.ts": {
            "lines": 371,
            "tokens": 3202,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workers/src/config/env.ts": {
            "lines": 108,
            "tokens": 987,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/types/econeura-shared.d.ts": {
            "lines": 49,
            "tokens": 299,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api-neura-comet/src/svc/memory.ts": {
            "lines": 149,
            "tokens": 1246,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api-neura-comet/src/routes/chat.ts": {
            "lines": 152,
            "tokens": 1269,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api-neura-comet/src/middleware/finops.ts": {
            "lines": 84,
            "tokens": 689,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 66,
            "duplicatedTokens": 557,
            "percentage": 78.57,
            "percentageTokens": 80.84,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api-agents-make/src/svc/runs.ts": {
            "lines": 160,
            "tokens": 1066,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api-agents-make/src/routes/trigger.ts": {
            "lines": 88,
            "tokens": 684,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api-agents-make/src/routes/events.ts": {
            "lines": 87,
            "tokens": 736,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api-agents-make/src/middleware/finops.ts": {
            "lines": 80,
            "tokens": 633,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 66,
            "duplicatedTokens": 557,
            "percentage": 82.5,
            "percentageTokens": 87.99,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/types/shims.d.ts": {
            "lines": 16,
            "tokens": 121,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/types/problem-details.types.ts": {
            "lines": 49,
            "tokens": 120,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/types/module-stubs.d.ts": {
            "lines": 18,
            "tokens": 151,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/types/express.d.ts": {
            "lines": 18,
            "tokens": 118,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/types/ambient.d.ts": {
            "lines": 13,
            "tokens": 77,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/shared/index.ts": {
            "lines": 36,
            "tokens": 127,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/web-search.service.ts": {
            "lines": 377,
            "tokens": 3691,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 23,
            "duplicatedTokens": 187,
            "percentage": 6.1,
            "percentageTokens": 5.07,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/stabilization.service.ts": {
            "lines": 16,
            "tokens": 142,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/sentiment-analysis.service.ts": {
            "lines": 762,
            "tokens": 7708,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 59,
            "duplicatedTokens": 444,
            "percentage": 7.74,
            "percentageTokens": 5.76,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/security-config.service.ts": {
            "lines": 517,
            "tokens": 3598,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 120,
            "duplicatedTokens": 648,
            "percentage": 23.21,
            "percentageTokens": 18.01,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/products.service.ts": {
            "lines": 29,
            "tokens": 245,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/predictive-ai.service.ts": {
            "lines": 260,
            "tokens": 2360,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 16,
            "duplicatedTokens": 118,
            "percentage": 6.15,
            "percentageTokens": 5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/observability-otel.service.ts": {
            "lines": 823,
            "tokens": 6587,
            "sources": 1,
            "clones": 13,
            "duplicatedLines": 263,
            "duplicatedTokens": 1849,
            "percentage": 31.96,
            "percentageTokens": 28.07,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/next-ai-platform.service.ts": {
            "lines": 34,
            "tokens": 236,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/mistral.local.ts": {
            "lines": 12,
            "tokens": 183,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/memory.service.ts": {
            "lines": 78,
            "tokens": 678,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 20,
            "duplicatedTokens": 164,
            "percentage": 25.64,
            "percentageTokens": 24.19,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/invoices.service.ts": {
            "lines": 26,
            "tokens": 231,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/health-checks.service.ts": {
            "lines": 27,
            "tokens": 199,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/finops.ts": {
            "lines": 29,
            "tokens": 365,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/external-integrations.service.ts": {
            "lines": 732,
            "tokens": 7205,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 102,
            "duplicatedTokens": 795,
            "percentage": 13.93,
            "percentageTokens": 11.03,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/document-management.service.ts": {
            "lines": 877,
            "tokens": 7303,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 77,
            "duplicatedTokens": 774,
            "percentage": 8.78,
            "percentageTokens": 10.6,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/customer-support.service.ts": {
            "lines": 974,
            "tokens": 7868,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 35,
            "duplicatedTokens": 413,
            "percentage": 3.59,
            "percentageTokens": 5.25,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/content-management.service.ts": {
            "lines": 995,
            "tokens": 8542,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 112,
            "duplicatedTokens": 1379,
            "percentage": 11.26,
            "percentageTokens": 16.14,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/cockpit-integration.service.ts": {
            "lines": 714,
            "tokens": 6060,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 215,
            "duplicatedTokens": 1867,
            "percentage": 30.11,
            "percentageTokens": 30.81,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/cockpit-bff-live.service.ts": {
            "lines": 583,
            "tokens": 4636,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 46,
            "duplicatedTokens": 353,
            "percentage": 7.89,
            "percentageTokens": 7.61,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/breaker.ts": {
            "lines": 26,
            "tokens": 261,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/azure-openai.service.ts": {
            "lines": 410,
            "tokens": 3408,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 72,
            "duplicatedTokens": 553,
            "percentage": 17.56,
            "percentageTokens": 16.23,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/azure-integration.service.ts": {
            "lines": 525,
            "tokens": 4101,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 72,
            "duplicatedTokens": 529,
            "percentage": 13.71,
            "percentageTokens": 12.9,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/automl.service.ts": {
            "lines": 356,
            "tokens": 3133,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 23,
            "duplicatedTokens": 177,
            "percentage": 6.46,
            "percentageTokens": 5.65,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/analytics.service.ts": {
            "lines": 31,
            "tokens": 220,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/ai.ts": {
            "lines": 145,
            "tokens": 1434,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/ai-training.service.ts": {
            "lines": 834,
            "tokens": 6069,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 121,
            "duplicatedTokens": 994,
            "percentage": 14.51,
            "percentageTokens": 16.38,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/ai-security-compliance.service.ts": {
            "lines": 928,
            "tokens": 7897,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 136,
            "duplicatedTokens": 1177,
            "percentage": 14.66,
            "percentageTokens": 14.9,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/ai-performance-optimization.service.ts": {
            "lines": 917,
            "tokens": 7793,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 85,
            "duplicatedTokens": 704,
            "percentage": 9.27,
            "percentageTokens": 9.03,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/ai-model-management.service.ts": {
            "lines": 997,
            "tokens": 6877,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 184,
            "duplicatedTokens": 1445,
            "percentage": 18.46,
            "percentageTokens": 21.01,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/ai-dashboard-consolidation.service.ts": {
            "lines": 553,
            "tokens": 4813,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 222,
            "duplicatedTokens": 2060,
            "percentage": 40.14,
            "percentageTokens": 42.8,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/ai-cost-prediction.service.ts": {
            "lines": 981,
            "tokens": 8916,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 104,
            "duplicatedTokens": 929,
            "percentage": 10.6,
            "percentageTokens": 10.42,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/advanced-observability.service.ts": {
            "lines": 634,
            "tokens": 5172,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 121,
            "duplicatedTokens": 975,
            "percentage": 19.09,
            "percentageTokens": 18.85,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/advanced-cicd.service.ts": {
            "lines": 788,
            "tokens": 6289,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 85,
            "duplicatedTokens": 655,
            "percentage": 10.79,
            "percentageTokens": 10.42,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/security/security-manager.service.ts": {
            "lines": 853,
            "tokens": 6526,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 111,
            "duplicatedTokens": 830,
            "percentage": 13.01,
            "percentageTokens": 12.72,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/security/rbac.service.ts": {
            "lines": 819,
            "tokens": 7534,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 67,
            "duplicatedTokens": 469,
            "percentage": 8.18,
            "percentageTokens": 6.23,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/security/mfa.service.ts": {
            "lines": 833,
            "tokens": 6076,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 48,
            "duplicatedTokens": 405,
            "percentage": 5.76,
            "percentageTokens": 6.67,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/workflows.ts": {
            "lines": 468,
            "tokens": 3562,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/workers-integration.ts": {
            "lines": 330,
            "tokens": 2673,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 146,
            "duplicatedTokens": 1108,
            "percentage": 44.24,
            "percentageTokens": 41.45,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/warmup.ts": {
            "lines": 356,
            "tokens": 2806,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 17,
            "duplicatedTokens": 179,
            "percentage": 4.78,
            "percentageTokens": 6.38,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/supplier-scorecard.ts": {
            "lines": 471,
            "tokens": 5091,
            "sources": 1,
            "clones": 13,
            "duplicatedLines": 164,
            "duplicatedTokens": 1210,
            "percentage": 34.82,
            "percentageTokens": 23.77,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/stripe-receipts.ts": {
            "lines": 352,
            "tokens": 3335,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 52,
            "duplicatedTokens": 389,
            "percentage": 14.77,
            "percentageTokens": 11.66,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/status.ts": {
            "lines": 457,
            "tokens": 3756,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/stabilization.ts": {
            "lines": 14,
            "tokens": 153,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/social-media-management.ts": {
            "lines": 673,
            "tokens": 5864,
            "sources": 1,
            "clones": 26,
            "duplicatedLines": 373,
            "duplicatedTokens": 3034,
            "percentage": 55.42,
            "percentageTokens": 51.74,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/sepa.ts": {
            "lines": 24,
            "tokens": 414,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/sepa-robust.ts": {
            "lines": 334,
            "tokens": 3434,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 78,
            "duplicatedTokens": 563,
            "percentage": 23.35,
            "percentageTokens": 16.39,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/semantic-search-crm.ts": {
            "lines": 388,
            "tokens": 4213,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 30,
            "duplicatedTokens": 216,
            "percentage": 7.73,
            "percentageTokens": 5.13,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/security.ts": {
            "lines": 875,
            "tokens": 7349,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/security-config.ts": {
            "lines": 526,
            "tokens": 3927,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 24,
            "duplicatedTokens": 164,
            "percentage": 4.56,
            "percentageTokens": 4.18,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/rls-tenant-policies.ts": {
            "lines": 541,
            "tokens": 4104,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 82,
            "percentage": 2.22,
            "percentageTokens": 2,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/rls-generativa.ts": {
            "lines": 391,
            "tokens": 4091,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 87,
            "percentage": 3.07,
            "percentageTokens": 2.13,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/reportes-mensuales.ts": {
            "lines": 477,
            "tokens": 4551,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 42,
            "duplicatedTokens": 303,
            "percentage": 8.81,
            "percentageTokens": 6.66,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/rbac-granular.ts": {
            "lines": 357,
            "tokens": 2939,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/rate-limiting.ts": {
            "lines": 542,
            "tokens": 4400,
            "sources": 1,
            "clones": 28,
            "duplicatedLines": 304,
            "duplicatedTokens": 2733,
            "percentage": 56.09,
            "percentageTokens": 62.11,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/prompt-library.ts": {
            "lines": 182,
            "tokens": 1534,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/project-completion-deployment.ts": {
            "lines": 588,
            "tokens": 5145,
            "sources": 1,
            "clones": 36,
            "duplicatedLines": 430,
            "duplicatedTokens": 3332,
            "percentage": 73.13,
            "percentageTokens": 64.76,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/progress.ts": {
            "lines": 33,
            "tokens": 479,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/ping.ts": {
            "lines": 13,
            "tokens": 107,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/performance.ts": {
            "lines": 281,
            "tokens": 2537,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/performance-v2.ts": {
            "lines": 514,
            "tokens": 4537,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 104,
            "duplicatedTokens": 765,
            "percentage": 20.23,
            "percentageTokens": 16.86,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/openapi.ts": {
            "lines": 298,
            "tokens": 1463,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/observability-otel.ts": {
            "lines": 608,
            "tokens": 4638,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 82,
            "duplicatedTokens": 624,
            "percentage": 13.49,
            "percentageTokens": 13.45,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/notifications.ts": {
            "lines": 931,
            "tokens": 7715,
            "sources": 1,
            "clones": 44,
            "duplicatedLines": 532,
            "duplicatedTokens": 4246,
            "percentage": 57.14,
            "percentageTokens": 55.04,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/next-ai-platform.ts": {
            "lines": 810,
            "tokens": 2585,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 119,
            "duplicatedTokens": 506,
            "percentage": 14.69,
            "percentageTokens": 19.57,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/monitoring.ts": {
            "lines": 23,
            "tokens": 236,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/metrics.ts": {
            "lines": 311,
            "tokens": 2589,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/memory.routes.ts": {
            "lines": 17,
            "tokens": 128,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/memory-management.ts": {
            "lines": 603,
            "tokens": 5372,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 92,
            "duplicatedTokens": 672,
            "percentage": 15.26,
            "percentageTokens": 12.51,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/make-quotas.ts": {
            "lines": 275,
            "tokens": 2273,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/invoices.ts": {
            "lines": 492,
            "tokens": 4198,
            "sources": 1,
            "clones": 21,
            "duplicatedLines": 249,
            "duplicatedTokens": 2584,
            "percentage": 50.61,
            "percentageTokens": 61.55,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/inventory-kardex.ts": {
            "lines": 493,
            "tokens": 4924,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 47,
            "duplicatedTokens": 336,
            "percentage": 9.53,
            "percentageTokens": 6.82,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/interactions.ts": {
            "lines": 343,
            "tokens": 2885,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 78,
            "duplicatedTokens": 554,
            "percentage": 22.74,
            "percentageTokens": 19.2,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/interactions-sas-av.ts": {
            "lines": 408,
            "tokens": 4612,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 50,
            "duplicatedTokens": 363,
            "percentage": 12.25,
            "percentageTokens": 7.87,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/integrations.make.health.ts": {
            "lines": 11,
            "tokens": 148,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/index.ts": {
            "lines": 63,
            "tokens": 557,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/hitl-v2.ts": {
            "lines": 518,
            "tokens": 4777,
            "sources": 1,
            "clones": 18,
            "duplicatedLines": 280,
            "duplicatedTokens": 2199,
            "percentage": 54.05,
            "percentageTokens": 46.03,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/hitl-ownership-sla.ts": {
            "lines": 631,
            "tokens": 6979,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 38,
            "duplicatedTokens": 274,
            "percentage": 6.02,
            "percentageTokens": 3.93,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/hil.ts": {
            "lines": 66,
            "tokens": 1191,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/hil.approvals.v2.ts": {
            "lines": 49,
            "tokens": 954,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/hil.approvals.ts": {
            "lines": 34,
            "tokens": 468,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/hil.alias.ts": {
            "lines": 18,
            "tokens": 161,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/health.ts": {
            "lines": 244,
            "tokens": 2186,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/health-checks.ts": {
            "lines": 14,
            "tokens": 153,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/graph-wrappers.ts": {
            "lines": 560,
            "tokens": 4746,
            "sources": 1,
            "clones": 17,
            "duplicatedLines": 244,
            "duplicatedTokens": 2008,
            "percentage": 43.57,
            "percentageTokens": 42.31,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/graph-chaos-light.ts": {
            "lines": 214,
            "tokens": 1852,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/gdpr.ts": {
            "lines": 97,
            "tokens": 1329,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/gdpr-hitl.ts": {
            "lines": 616,
            "tokens": 4802,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/gdpr-compliance.ts": {
            "lines": 974,
            "tokens": 7722,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/fiscalidad-regional.ts": {
            "lines": 447,
            "tokens": 4636,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 27,
            "duplicatedTokens": 195,
            "percentage": 6.04,
            "percentageTokens": 4.21,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/fiscalidad-regional-ue.ts": {
            "lines": 531,
            "tokens": 4324,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 108,
            "percentage": 2.82,
            "percentageTokens": 2.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/finops-admin.ts": {
            "lines": 275,
            "tokens": 2086,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 64,
            "duplicatedTokens": 384,
            "percentage": 23.27,
            "percentageTokens": 18.41,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/external-integrations.ts": {
            "lines": 642,
            "tokens": 5116,
            "sources": 1,
            "clones": 28,
            "duplicatedLines": 408,
            "duplicatedTokens": 2654,
            "percentage": 63.55,
            "percentageTokens": 51.88,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/events.ts": {
            "lines": 136,
            "tokens": 1105,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 112,
            "percentage": 8.82,
            "percentageTokens": 10.14,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/email-marketing.ts": {
            "lines": 730,
            "tokens": 6490,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 147,
            "duplicatedTokens": 1429,
            "percentage": 20.14,
            "percentageTokens": 22.02,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/dunning-solid.ts": {
            "lines": 581,
            "tokens": 5288,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 80,
            "duplicatedTokens": 600,
            "percentage": 13.77,
            "percentageTokens": 11.35,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/dunning-3-toques.ts": {
            "lines": 482,
            "tokens": 3923,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 92,
            "duplicatedTokens": 704,
            "percentage": 19.09,
            "percentageTokens": 17.95,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/document-management.ts": {
            "lines": 563,
            "tokens": 4734,
            "sources": 1,
            "clones": 14,
            "duplicatedLines": 204,
            "duplicatedTokens": 1874,
            "percentage": 36.23,
            "percentageTokens": 39.59,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/dlg-grooming.ts": {
            "lines": 395,
            "tokens": 4200,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 67,
            "duplicatedTokens": 523,
            "percentage": 16.96,
            "percentageTokens": 12.45,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/deals.ts": {
            "lines": 662,
            "tokens": 5785,
            "sources": 1,
            "clones": 17,
            "duplicatedLines": 227,
            "duplicatedTokens": 1831,
            "percentage": 34.29,
            "percentageTokens": 31.65,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/deals-nba.ts": {
            "lines": 417,
            "tokens": 3426,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 68,
            "duplicatedTokens": 593,
            "percentage": 16.31,
            "percentageTokens": 17.31,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/database-optimization.ts": {
            "lines": 577,
            "tokens": 4808,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/data-analytics-dashboard.ts": {
            "lines": 621,
            "tokens": 5540,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 89,
            "duplicatedTokens": 1165,
            "percentage": 14.33,
            "percentageTokens": 21.03,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/customer-support.ts": {
            "lines": 554,
            "tokens": 4450,
            "sources": 1,
            "clones": 11,
            "duplicatedLines": 147,
            "duplicatedTokens": 1274,
            "percentage": 26.53,
            "percentageTokens": 28.63,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/csp-sri-banking.ts": {
            "lines": 473,
            "tokens": 4080,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 29,
            "duplicatedTokens": 335,
            "percentage": 6.13,
            "percentageTokens": 8.21,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/content-management.ts": {
            "lines": 748,
            "tokens": 7107,
            "sources": 1,
            "clones": 19,
            "duplicatedLines": 309,
            "duplicatedTokens": 3255,
            "percentage": 41.31,
            "percentageTokens": 45.8,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/contacts.ts": {
            "lines": 338,
            "tokens": 2802,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 119,
            "duplicatedTokens": 1067,
            "percentage": 35.21,
            "percentageTokens": 38.08,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/contacts-simple.ts": {
            "lines": 117,
            "tokens": 985,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 58,
            "duplicatedTokens": 419,
            "percentage": 49.57,
            "percentageTokens": 42.54,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/contacts-dedupe.ts": {
            "lines": 339,
            "tokens": 3884,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/connection-pool.ts": {
            "lines": 739,
            "tokens": 6454,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 29,
            "duplicatedTokens": 272,
            "percentage": 3.92,
            "percentageTokens": 4.21,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/configuration.ts": {
            "lines": 575,
            "tokens": 4271,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 14,
            "duplicatedTokens": 89,
            "percentage": 2.43,
            "percentageTokens": 2.08,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/companies.ts": {
            "lines": 318,
            "tokens": 2556,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 129,
            "duplicatedTokens": 1143,
            "percentage": 40.57,
            "percentageTokens": 44.72,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/companies-taxonomy.ts": {
            "lines": 368,
            "tokens": 2801,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/companies-simple.ts": {
            "lines": 160,
            "tokens": 1339,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 82,
            "duplicatedTokens": 628,
            "percentage": 51.25,
            "percentageTokens": 46.9,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/cockpit.ts": {
            "lines": 546,
            "tokens": 5169,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/cockpit-integration.ts": {
            "lines": 352,
            "tokens": 3139,
            "sources": 1,
            "clones": 16,
            "duplicatedLines": 195,
            "duplicatedTokens": 1756,
            "percentage": 55.4,
            "percentageTokens": 55.94,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/cockpit-bff-live.ts": {
            "lines": 449,
            "tokens": 3444,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 88,
            "duplicatedTokens": 636,
            "percentage": 19.6,
            "percentageTokens": 18.47,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/centralized-logging.ts": {
            "lines": 784,
            "tokens": 7344,
            "sources": 1,
            "clones": 17,
            "duplicatedLines": 285,
            "duplicatedTokens": 2439,
            "percentage": 36.35,
            "percentageTokens": 33.21,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/cache-warmup.ts": {
            "lines": 181,
            "tokens": 1439,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/blue-green-deployment.ts": {
            "lines": 362,
            "tokens": 3608,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 30,
            "duplicatedTokens": 216,
            "percentage": 8.29,
            "percentageTokens": 5.99,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/basic-ai.ts": {
            "lines": 15,
            "tokens": 170,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/backup-recovery.ts": {
            "lines": 643,
            "tokens": 5758,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 134,
            "duplicatedTokens": 1420,
            "percentage": 20.84,
            "percentageTokens": 24.66,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/azure-integration.ts": {
            "lines": 405,
            "tokens": 3080,
            "sources": 1,
            "clones": 14,
            "duplicatedLines": 309,
            "duplicatedTokens": 1920,
            "percentage": 76.3,
            "percentageTokens": 62.34,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/automated-testing.ts": {
            "lines": 623,
            "tokens": 5517,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 177,
            "duplicatedTokens": 1390,
            "percentage": 28.41,
            "percentageTokens": 25.19,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/automated-documentation.ts": {
            "lines": 599,
            "tokens": 5232,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 96,
            "duplicatedTokens": 790,
            "percentage": 16.03,
            "percentageTokens": 15.1,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/auth.ts": {
            "lines": 649,
            "tokens": 5310,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 70,
            "duplicatedTokens": 677,
            "percentage": 10.79,
            "percentageTokens": 12.75,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/audit-trail-crm-undo.ts": {
            "lines": 449,
            "tokens": 3985,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 30,
            "duplicatedTokens": 402,
            "percentage": 6.68,
            "percentageTokens": 10.09,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/antivirus-global.ts": {
            "lines": 511,
            "tokens": 4361,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 14,
            "duplicatedTokens": 145,
            "percentage": 2.74,
            "percentageTokens": 3.32,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/analytics.ts": {
            "lines": 14,
            "tokens": 150,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/ai-training.ts": {
            "lines": 618,
            "tokens": 4422,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 145,
            "duplicatedTokens": 893,
            "percentage": 23.46,
            "percentageTokens": 20.19,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/ai-security-compliance.ts": {
            "lines": 509,
            "tokens": 4059,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 168,
            "duplicatedTokens": 1348,
            "percentage": 33.01,
            "percentageTokens": 33.21,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/ai-performance-optimization.ts": {
            "lines": 623,
            "tokens": 4870,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 82,
            "duplicatedTokens": 607,
            "percentage": 13.16,
            "percentageTokens": 12.46,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/ai-model-management.ts": {
            "lines": 707,
            "tokens": 5527,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 155,
            "duplicatedTokens": 952,
            "percentage": 21.92,
            "percentageTokens": 17.22,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/ai-dashboard-consolidation.ts": {
            "lines": 323,
            "tokens": 2794,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 148,
            "duplicatedTokens": 1336,
            "percentage": 45.82,
            "percentageTokens": 47.82,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/ai-cost-prediction.ts": {
            "lines": 767,
            "tokens": 5725,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 82,
            "duplicatedTokens": 639,
            "percentage": 10.69,
            "percentageTokens": 11.16,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/ai-cost-optimization.ts": {
            "lines": 672,
            "tokens": 5391,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 82,
            "duplicatedTokens": 628,
            "percentage": 12.2,
            "percentageTokens": 11.65,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/ai-chat-advanced.ts": {
            "lines": 541,
            "tokens": 5073,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 95,
            "duplicatedTokens": 775,
            "percentage": 17.56,
            "percentageTokens": 15.28,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/ai-budget-ux.ts": {
            "lines": 485,
            "tokens": 3922,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 28,
            "duplicatedTokens": 258,
            "percentage": 5.77,
            "percentageTokens": 6.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/ai-analytics.ts": {
            "lines": 750,
            "tokens": 2679,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 89,
            "duplicatedTokens": 220,
            "percentage": 11.87,
            "percentageTokens": 8.21,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/agents.ts": {
            "lines": 125,
            "tokens": 1658,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/agents-simple.ts": {
            "lines": 474,
            "tokens": 5492,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/advanced-security.ts": {
            "lines": 439,
            "tokens": 3553,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 74,
            "duplicatedTokens": 482,
            "percentage": 16.86,
            "percentageTokens": 13.57,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/advanced-security-framework.ts": {
            "lines": 530,
            "tokens": 3958,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/advanced-reporting.ts": {
            "lines": 470,
            "tokens": 3482,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 124,
            "duplicatedTokens": 942,
            "percentage": 26.38,
            "percentageTokens": 27.05,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/advanced-performance-monitoring.ts": {
            "lines": 449,
            "tokens": 3987,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 58,
            "duplicatedTokens": 391,
            "percentage": 12.92,
            "percentageTokens": 9.81,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/advanced-observability.ts": {
            "lines": 621,
            "tokens": 5144,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 20,
            "duplicatedTokens": 178,
            "percentage": 3.22,
            "percentageTokens": 3.46,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/advanced-metrics-alerts.ts": {
            "lines": 712,
            "tokens": 6345,
            "sources": 1,
            "clones": 11,
            "duplicatedLines": 214,
            "duplicatedTokens": 1640,
            "percentage": 30.06,
            "percentageTokens": 25.85,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/advanced-features.ts": {
            "lines": 358,
            "tokens": 4058,
            "sources": 1,
            "clones": 28,
            "duplicatedLines": 280,
            "duplicatedTokens": 2948,
            "percentage": 78.21,
            "percentageTokens": 72.65,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/advanced-error-management.ts": {
            "lines": 557,
            "tokens": 6100,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 73,
            "duplicatedTokens": 555,
            "percentage": 13.11,
            "percentageTokens": 9.1,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/advanced-deployment-automation.ts": {
            "lines": 680,
            "tokens": 5914,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 72,
            "duplicatedTokens": 485,
            "percentage": 10.59,
            "percentageTokens": 8.2,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/advanced-configuration-management.ts": {
            "lines": 813,
            "tokens": 7240,
            "sources": 1,
            "clones": 13,
            "duplicatedLines": 151,
            "duplicatedTokens": 1498,
            "percentage": 18.57,
            "percentageTokens": 20.69,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/advanced-cicd.ts": {
            "lines": 631,
            "tokens": 4880,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 70,
            "duplicatedTokens": 516,
            "percentage": 11.09,
            "percentageTokens": 10.57,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/advanced-audit-compliance.ts": {
            "lines": 669,
            "tokens": 5371,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 36,
            "duplicatedTokens": 244,
            "percentage": 5.38,
            "percentageTokens": 4.54,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/advanced-analytics.ts": {
            "lines": 255,
            "tokens": 2297,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/admin.finops.ts": {
            "lines": 73,
            "tokens": 805,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/index.ts": {
            "lines": 55,
            "tokens": 450,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/openapi/spec.ts": {
            "lines": 579,
            "tokens": 4302,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 24,
            "duplicatedTokens": 190,
            "percentage": 4.15,
            "percentageTokens": 4.42,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/validation.ts": {
            "lines": 300,
            "tokens": 2570,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/validation.middleware.ts": {
            "lines": 147,
            "tokens": 1464,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 36,
            "duplicatedTokens": 244,
            "percentage": 24.49,
            "percentageTokens": 16.67,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/trace-propagation.middleware.ts": {
            "lines": 439,
            "tokens": 3039,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/security.ts": {
            "lines": 431,
            "tokens": 3534,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 173,
            "percentage": 4.41,
            "percentageTokens": 4.9,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/security.middleware.ts": {
            "lines": 378,
            "tokens": 3024,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 173,
            "percentage": 5.03,
            "percentageTokens": 5.72,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/security-enhanced.middleware.ts": {
            "lines": 527,
            "tokens": 3895,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 79,
            "duplicatedTokens": 369,
            "percentage": 14.99,
            "percentageTokens": 9.47,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/rls.ts": {
            "lines": 244,
            "tokens": 2011,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 126,
            "percentage": 4.51,
            "percentageTokens": 6.27,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/rls-tenant.middleware.ts": {
            "lines": 506,
            "tokens": 3876,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 126,
            "percentage": 2.17,
            "percentageTokens": 3.25,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/response-optimizer.ts": {
            "lines": 367,
            "tokens": 2842,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/raw-body.ts": {
            "lines": 10,
            "tokens": 192,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/rate-limiting.ts": {
            "lines": 218,
            "tokens": 1796,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/rate-limiter.ts": {
            "lines": 360,
            "tokens": 3003,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 18,
            "duplicatedTokens": 147,
            "percentage": 5,
            "percentageTokens": 4.9,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/rate-limit-org.ts": {
            "lines": 409,
            "tokens": 3375,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/performance.middleware.ts": {
            "lines": 325,
            "tokens": 2858,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/org.ts": {
            "lines": 39,
            "tokens": 439,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/observability.ts": {
            "lines": 205,
            "tokens": 2488,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/metrics.ts": {
            "lines": 324,
            "tokens": 2358,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/latency.ts": {
            "lines": 19,
            "tokens": 222,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/gateway.ts": {
            "lines": 285,
            "tokens": 2441,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 24,
            "duplicatedTokens": 226,
            "percentage": 8.42,
            "percentageTokens": 9.26,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/finops.ts": {
            "lines": 21,
            "tokens": 390,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/finops.guard.ts": {
            "lines": 92,
            "tokens": 1350,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/finops-enforce.ts": {
            "lines": 284,
            "tokens": 2158,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/finops-enforce-v2.ts": {
            "lines": 534,
            "tokens": 4632,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 45,
            "duplicatedTokens": 326,
            "percentage": 8.43,
            "percentageTokens": 7.04,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/feature-flags.ts": {
            "lines": 232,
            "tokens": 1998,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 92,
            "percentage": 5.17,
            "percentageTokens": 4.6,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/error-handler.ts": {
            "lines": 343,
            "tokens": 2547,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/correlation.ts": {
            "lines": 323,
            "tokens": 2235,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 14,
            "duplicatedTokens": 99,
            "percentage": 4.33,
            "percentageTokens": 4.43,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/chaos.ts": {
            "lines": 115,
            "tokens": 1288,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/auth.ts": {
            "lines": 66,
            "tokens": 683,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/aadRole.ts": {
            "lines": 10,
            "tokens": 211,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/aad.ts": {
            "lines": 27,
            "tokens": 464,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/workflows.ts": {
            "lines": 901,
            "tokens": 8611,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 91,
            "duplicatedTokens": 1058,
            "percentage": 10.1,
            "percentageTokens": 12.29,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/workflows.service.ts": {
            "lines": 691,
            "tokens": 7161,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 21,
            "duplicatedTokens": 300,
            "percentage": 3.04,
            "percentageTokens": 4.19,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/workflows-simple.ts": {
            "lines": 43,
            "tokens": 358,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/workers-integration.service.ts": {
            "lines": 495,
            "tokens": 3497,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 39,
            "duplicatedTokens": 285,
            "percentage": 7.88,
            "percentageTokens": 8.15,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/warmup.service.ts": {
            "lines": 556,
            "tokens": 4518,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/warmup-types.ts": {
            "lines": 563,
            "tokens": 3722,
            "sources": 1,
            "clones": 12,
            "duplicatedLines": 293,
            "duplicatedTokens": 2231,
            "percentage": 52.04,
            "percentageTokens": 59.94,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/warmup-system.service.ts": {
            "lines": 539,
            "tokens": 4469,
            "sources": 1,
            "clones": 15,
            "duplicatedLines": 185,
            "duplicatedTokens": 1925,
            "percentage": 34.32,
            "percentageTokens": 43.07,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/validation-manager.service.ts": {
            "lines": 484,
            "tokens": 4949,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 27,
            "duplicatedTokens": 210,
            "percentage": 5.58,
            "percentageTokens": 4.24,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/tracing.ts": {
            "lines": 262,
            "tokens": 2643,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 155,
            "percentage": 8.02,
            "percentageTokens": 5.86,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/trace.ts": {
            "lines": 47,
            "tokens": 868,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/threat-detection.service.ts": {
            "lines": 741,
            "tokens": 6545,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/testing-framework.ts": {
            "lines": 430,
            "tokens": 3247,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 31,
            "duplicatedTokens": 262,
            "percentage": 7.21,
            "percentageTokens": 8.07,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/swagger-config.ts": {
            "lines": 738,
            "tokens": 4113,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/supplier-scorecard.service.ts": {
            "lines": 992,
            "tokens": 9577,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 214,
            "duplicatedTokens": 1746,
            "percentage": 21.57,
            "percentageTokens": 18.23,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/structured-logger.ts": {
            "lines": 186,
            "tokens": 2117,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 174,
            "percentage": 11.29,
            "percentageTokens": 8.22,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/stripe-receipts.service.ts": {
            "lines": 598,
            "tokens": 5880,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 77,
            "duplicatedTokens": 546,
            "percentage": 12.88,
            "percentageTokens": 9.29,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/sse-manager.ts": {
            "lines": 270,
            "tokens": 2119,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/smart-cache.service.ts": {
            "lines": 550,
            "tokens": 4660,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/service-mesh.ts": {
            "lines": 333,
            "tokens": 2845,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 40,
            "duplicatedTokens": 289,
            "percentage": 12.01,
            "percentageTokens": 10.16,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/service-discovery.ts": {
            "lines": 396,
            "tokens": 3538,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 60,
            "duplicatedTokens": 597,
            "percentage": 15.15,
            "percentageTokens": 16.87,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/sepa.service.ts": {
            "lines": 890,
            "tokens": 8729,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 35,
            "duplicatedTokens": 249,
            "percentage": 3.93,
            "percentageTokens": 2.85,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/sepa-types.ts": {
            "lines": 67,
            "tokens": 473,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 61,
            "duplicatedTokens": 466,
            "percentage": 91.04,
            "percentageTokens": 98.52,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/sepa-robust.service.ts": {
            "lines": 794,
            "tokens": 7513,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 101,
            "duplicatedTokens": 828,
            "percentage": 12.72,
            "percentageTokens": 11.02,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/sepa-parser.service.ts": {
            "lines": 225,
            "tokens": 2081,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 20,
            "duplicatedTokens": 220,
            "percentage": 8.89,
            "percentageTokens": 10.57,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/semantic-search-crm.service.ts": {
            "lines": 884,
            "tokens": 8013,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 125,
            "duplicatedTokens": 966,
            "percentage": 14.14,
            "percentageTokens": 12.06,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/security.ts": {
            "lines": 653,
            "tokens": 5407,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 59,
            "duplicatedTokens": 424,
            "percentage": 9.04,
            "percentageTokens": 7.84,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/security.service.ts": {
            "lines": 471,
            "tokens": 3978,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 29,
            "duplicatedTokens": 223,
            "percentage": 6.16,
            "percentageTokens": 5.61,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/security-types.ts": {
            "lines": 678,
            "tokens": 5177,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 574,
            "duplicatedTokens": 5073,
            "percentage": 84.66,
            "percentageTokens": 97.99,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/security-manager.service.ts": {
            "lines": 623,
            "tokens": 5715,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 67,
            "duplicatedTokens": 529,
            "percentage": 10.75,
            "percentageTokens": 9.26,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/security-enhanced.service.ts": {
            "lines": 53,
            "tokens": 504,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/security-compliance-enhanced.service.ts": {
            "lines": 892,
            "tokens": 7328,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 93,
            "duplicatedTokens": 830,
            "percentage": 10.43,
            "percentageTokens": 11.33,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/rule-engine.service.ts": {
            "lines": 396,
            "tokens": 3483,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 90,
            "percentage": 2.78,
            "percentageTokens": 2.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/rls.ts": {
            "lines": 424,
            "tokens": 3018,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 25,
            "duplicatedTokens": 178,
            "percentage": 5.9,
            "percentageTokens": 5.9,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/rls-types.ts": {
            "lines": 331,
            "tokens": 2617,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 304,
            "duplicatedTokens": 2589,
            "percentage": 91.84,
            "percentageTokens": 98.93,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/rls-policy-validator.service.ts": {
            "lines": 687,
            "tokens": 5496,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/rls-policy-generator.service.ts": {
            "lines": 716,
            "tokens": 5051,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 216,
            "duplicatedTokens": 1258,
            "percentage": 30.17,
            "percentageTokens": 24.91,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/rls-policy-deployer.service.ts": {
            "lines": 507,
            "tokens": 4456,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 84,
            "percentage": 1.97,
            "percentageTokens": 1.89,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/rls-cicd.service.ts": {
            "lines": 652,
            "tokens": 3858,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/resource-management.service.ts": {
            "lines": 72,
            "tokens": 710,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/request-tracing.service.ts": {
            "lines": 65,
            "tokens": 555,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/reporting-engine.service.ts": {
            "lines": 654,
            "tokens": 6431,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/reportes-mensuales.service.ts": {
            "lines": 866,
            "tokens": 7192,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 205,
            "duplicatedTokens": 1463,
            "percentage": 23.67,
            "percentageTokens": 20.34,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/reconciliation.service.ts": {
            "lines": 204,
            "tokens": 1772,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 87,
            "percentage": 4.9,
            "percentageTokens": 4.91,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/real-time-collaboration.ts": {
            "lines": 853,
            "tokens": 7496,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 24,
            "duplicatedTokens": 168,
            "percentage": 2.81,
            "percentageTokens": 2.24,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/rbac.service.ts": {
            "lines": 693,
            "tokens": 6157,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 18,
            "duplicatedTokens": 118,
            "percentage": 2.6,
            "percentageTokens": 1.92,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/rbac-simple.ts": {
            "lines": 186,
            "tokens": 1806,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 165,
            "duplicatedTokens": 1394,
            "percentage": 88.71,
            "percentageTokens": 77.19,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/rbac-granular.ts": {
            "lines": 379,
            "tokens": 3318,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 104,
            "duplicatedTokens": 794,
            "percentage": 27.44,
            "percentageTokens": 23.93,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/rbac-basic.ts": {
            "lines": 174,
            "tokens": 1545,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 101,
            "duplicatedTokens": 919,
            "percentage": 58.05,
            "percentageTokens": 59.48,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/rate-limiting.ts": {
            "lines": 328,
            "tokens": 3106,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 133,
            "percentage": 5.79,
            "percentageTokens": 4.28,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/rate-limiting.service.ts": {
            "lines": 65,
            "tokens": 552,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/quiet-hours.service.ts": {
            "lines": 373,
            "tokens": 3282,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/quiet-hours-types.ts": {
            "lines": 484,
            "tokens": 3367,
            "sources": 1,
            "clones": 13,
            "duplicatedLines": 354,
            "duplicatedTokens": 2842,
            "percentage": 73.14,
            "percentageTokens": 84.41,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/prompt-library.service.ts": {
            "lines": 164,
            "tokens": 1609,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/process-manager.ts": {
            "lines": 453,
            "tokens": 3803,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 13,
            "duplicatedTokens": 85,
            "percentage": 2.87,
            "percentageTokens": 2.24,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/performance-optimizer.ts": {
            "lines": 439,
            "tokens": 3540,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 18,
            "duplicatedTokens": 120,
            "percentage": 4.1,
            "percentageTokens": 3.39,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/performance-optimizer.service.ts": {
            "lines": 576,
            "tokens": 4123,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 75,
            "duplicatedTokens": 592,
            "percentage": 13.02,
            "percentageTokens": 14.36,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/performance-optimizer-v3.service.ts": {
            "lines": 500,
            "tokens": 3703,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 38,
            "duplicatedTokens": 323,
            "percentage": 7.6,
            "percentageTokens": 8.72,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/performance-optimizer-v2.service.ts": {
            "lines": 685,
            "tokens": 4845,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 60,
            "duplicatedTokens": 405,
            "percentage": 8.76,
            "percentageTokens": 8.36,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/performance-optimization.service.ts": {
            "lines": 553,
            "tokens": 4948,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/oncall.service.ts": {
            "lines": 408,
            "tokens": 3464,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 22,
            "duplicatedTokens": 436,
            "percentage": 5.39,
            "percentageTokens": 12.59,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/observability.ts": {
            "lines": 155,
            "tokens": 1586,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/notification-intelligence.service.ts": {
            "lines": 586,
            "tokens": 4891,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/monitoring.service.ts": {
            "lines": 707,
            "tokens": 6418,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 74,
            "duplicatedTokens": 587,
            "percentage": 10.47,
            "percentageTokens": 9.15,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/monitoring-alerts.service.ts": {
            "lines": 641,
            "tokens": 5092,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 61,
            "duplicatedTokens": 485,
            "percentage": 9.52,
            "percentageTokens": 9.52,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/metrics.ts": {
            "lines": 126,
            "tokens": 1026,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 43,
            "duplicatedTokens": 349,
            "percentage": 34.13,
            "percentageTokens": 34.02,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/metrics.old.ts": {
            "lines": 294,
            "tokens": 2895,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/metrics.new.ts": {
            "lines": 59,
            "tokens": 474,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 43,
            "duplicatedTokens": 349,
            "percentage": 72.88,
            "percentageTokens": 73.63,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/memory-manager.service.ts": {
            "lines": 676,
            "tokens": 5412,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 86,
            "duplicatedTokens": 926,
            "percentage": 12.72,
            "percentageTokens": 17.11,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/matching-engine.service.ts": {
            "lines": 241,
            "tokens": 2158,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 90,
            "percentage": 4.56,
            "percentageTokens": 4.17,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/make-quotas.service.ts": {
            "lines": 249,
            "tokens": 2271,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 14,
            "duplicatedTokens": 92,
            "percentage": 5.62,
            "percentageTokens": 4.05,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/logger.ts": {
            "lines": 488,
            "tokens": 4085,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 176,
            "duplicatedTokens": 1435,
            "percentage": 36.07,
            "percentageTokens": 35.13,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/inventory.ts": {
            "lines": 964,
            "tokens": 9266,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 55,
            "duplicatedTokens": 736,
            "percentage": 5.71,
            "percentageTokens": 7.94,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/inventory-kardex.service.ts": {
            "lines": 947,
            "tokens": 9079,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 110,
            "duplicatedTokens": 878,
            "percentage": 11.62,
            "percentageTokens": 9.67,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/interactions.service.ts": {
            "lines": 646,
            "tokens": 6612,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 58,
            "duplicatedTokens": 475,
            "percentage": 8.98,
            "percentageTokens": 7.18,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/interactions-sas-av.service.ts": {
            "lines": 961,
            "tokens": 8858,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 136,
            "duplicatedTokens": 1114,
            "percentage": 14.15,
            "percentageTokens": 12.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/intelligent-search.service.ts": {
            "lines": 511,
            "tokens": 4379,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/intelligent-reporting.service.ts": {
            "lines": 662,
            "tokens": 6117,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 26,
            "duplicatedTokens": 224,
            "percentage": 3.93,
            "percentageTokens": 3.66,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/integrations.ts": {
            "lines": 216,
            "tokens": 1878,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/hitl-v2.service.ts": {
            "lines": 614,
            "tokens": 5653,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 83,
            "duplicatedTokens": 701,
            "percentage": 13.52,
            "percentageTokens": 12.4,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/health-monitor.ts": {
            "lines": 523,
            "tokens": 4729,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 51,
            "duplicatedTokens": 392,
            "percentage": 9.75,
            "percentageTokens": 8.29,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/health-modes.ts": {
            "lines": 209,
            "tokens": 1837,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/health-check.service.ts": {
            "lines": 327,
            "tokens": 2692,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 27,
            "duplicatedTokens": 213,
            "percentage": 8.26,
            "percentageTokens": 7.91,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/graph-wrappers.service.ts": {
            "lines": 621,
            "tokens": 4722,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 123,
            "duplicatedTokens": 850,
            "percentage": 19.81,
            "percentageTokens": 18,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/graph-chaos-light.service.ts": {
            "lines": 369,
            "tokens": 3036,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 34,
            "duplicatedTokens": 244,
            "percentage": 9.21,
            "percentageTokens": 8.04,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/graceful-shutdown.service.ts": {
            "lines": 60,
            "tokens": 498,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/gdpr-types.ts": {
            "lines": 185,
            "tokens": 1436,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 174,
            "duplicatedTokens": 1420,
            "percentage": 94.05,
            "percentageTokens": 98.89,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/gdpr-export.service.ts": {
            "lines": 417,
            "tokens": 3585,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/gdpr-erase.service.ts": {
            "lines": 423,
            "tokens": 3841,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/gdpr-audit.service.ts": {
            "lines": 435,
            "tokens": 3580,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/gateway.ts": {
            "lines": 498,
            "tokens": 4488,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 46,
            "duplicatedTokens": 354,
            "percentage": 9.24,
            "percentageTokens": 7.89,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/fiscalidad-regional.service.ts": {
            "lines": 821,
            "tokens": 7125,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 28,
            "duplicatedTokens": 209,
            "percentage": 3.41,
            "percentageTokens": 2.93,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/fiscalidad-regional-ue.service.ts": {
            "lines": 614,
            "tokens": 5209,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 92,
            "duplicatedTokens": 763,
            "percentage": 14.98,
            "percentageTokens": 14.65,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/finops.ts": {
            "lines": 565,
            "tokens": 5609,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 89,
            "duplicatedTokens": 723,
            "percentage": 15.75,
            "percentageTokens": 12.89,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/finops-types.ts": {
            "lines": 439,
            "tokens": 3596,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 406,
            "duplicatedTokens": 3495,
            "percentage": 92.48,
            "percentageTokens": 97.19,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/executive-dashboard.service.ts": {
            "lines": 64,
            "tokens": 606,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 16,
            "duplicatedTokens": 133,
            "percentage": 25,
            "percentageTokens": 21.95,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/events.ts": {
            "lines": 531,
            "tokens": 4577,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 84,
            "duplicatedTokens": 784,
            "percentage": 15.82,
            "percentageTokens": 17.13,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/escalation.service.ts": {
            "lines": 462,
            "tokens": 3700,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/errors.ts": {
            "lines": 125,
            "tokens": 1414,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/error-recovery.service.ts": {
            "lines": 56,
            "tokens": 593,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/error-manager.service.ts": {
            "lines": 537,
            "tokens": 4743,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 38,
            "duplicatedTokens": 289,
            "percentage": 7.08,
            "percentageTokens": 6.09,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/error-handler.ts": {
            "lines": 248,
            "tokens": 2027,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/error-handler.service.ts": {
            "lines": 444,
            "tokens": 3427,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 37,
            "duplicatedTokens": 271,
            "percentage": 8.33,
            "percentageTokens": 7.91,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/dunning-solid.service.ts": {
            "lines": 707,
            "tokens": 6245,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 103,
            "duplicatedTokens": 828,
            "percentage": 14.57,
            "percentageTokens": 13.26,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/dunning-3-toques.service.ts": {
            "lines": 565,
            "tokens": 4859,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 65,
            "duplicatedTokens": 525,
            "percentage": 11.5,
            "percentageTokens": 10.8,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/distributed-cache.ts": {
            "lines": 531,
            "tokens": 4016,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 20,
            "duplicatedTokens": 136,
            "percentage": 3.77,
            "percentageTokens": 3.39,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/deals.service.ts": {
            "lines": 698,
            "tokens": 6997,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 60,
            "duplicatedTokens": 487,
            "percentage": 8.6,
            "percentageTokens": 6.96,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/deals-nba.service.ts": {
            "lines": 554,
            "tokens": 5183,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 111,
            "duplicatedTokens": 899,
            "percentage": 20.04,
            "percentageTokens": 17.35,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/database.ts": {
            "lines": 88,
            "tokens": 769,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/database-pool.ts": {
            "lines": 574,
            "tokens": 5007,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 38,
            "duplicatedTokens": 297,
            "percentage": 6.62,
            "percentageTokens": 5.93,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/data-validator.ts": {
            "lines": 597,
            "tokens": 4672,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 28,
            "duplicatedTokens": 261,
            "percentage": 4.69,
            "percentageTokens": 5.59,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/data-encryption.service.ts": {
            "lines": 66,
            "tokens": 648,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/data-analytics-dashboard.service.ts": {
            "lines": 984,
            "tokens": 9514,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 231,
            "duplicatedTokens": 2279,
            "percentage": 23.48,
            "percentageTokens": 23.95,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/csp-sri-banking.service.ts": {
            "lines": 705,
            "tokens": 6751,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 79,
            "duplicatedTokens": 757,
            "percentage": 11.21,
            "percentageTokens": 11.21,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/cost-tracker.service.ts": {
            "lines": 546,
            "tokens": 5418,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/cost-optimizer.service.ts": {
            "lines": 617,
            "tokens": 5611,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 86,
            "percentage": 1.94,
            "percentageTokens": 1.53,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/contacts-dedupe.service.ts": {
            "lines": 652,
            "tokens": 5997,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 77,
            "duplicatedTokens": 682,
            "percentage": 11.81,
            "percentageTokens": 11.37,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/connection-pool.service.ts": {
            "lines": 837,
            "tokens": 6772,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 55,
            "duplicatedTokens": 428,
            "percentage": 6.57,
            "percentageTokens": 6.32,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/configuration.ts": {
            "lines": 513,
            "tokens": 4543,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 76,
            "duplicatedTokens": 947,
            "percentage": 14.81,
            "percentageTokens": 20.85,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/configuration.service.ts": {
            "lines": 479,
            "tokens": 4613,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 13,
            "duplicatedTokens": 242,
            "percentage": 2.71,
            "percentageTokens": 5.25,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/config-validation.service.ts": {
            "lines": 55,
            "tokens": 542,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/comprehensive-audit.service.ts": {
            "lines": 854,
            "tokens": 8126,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 97,
            "percentage": 1.17,
            "percentageTokens": 1.19,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/compliance-management.service.ts": {
            "lines": 649,
            "tokens": 5832,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 143,
            "percentage": 2.93,
            "percentageTokens": 2.45,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/companies-taxonomy.service.ts": {
            "lines": 195,
            "tokens": 1811,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 23,
            "duplicatedTokens": 160,
            "percentage": 11.79,
            "percentageTokens": 8.83,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/clients.ts": {
            "lines": 20,
            "tokens": 288,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/circuit-breaker.service.ts": {
            "lines": 284,
            "tokens": 2196,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 102,
            "percentage": 5.28,
            "percentageTokens": 4.64,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/centralized-logging.service.ts": {
            "lines": 973,
            "tokens": 9813,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 145,
            "duplicatedTokens": 1625,
            "percentage": 14.9,
            "percentageTokens": 16.56,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/cache.ts": {
            "lines": 372,
            "tokens": 3244,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/cache.service.ts": {
            "lines": 408,
            "tokens": 3411,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 17,
            "duplicatedTokens": 115,
            "percentage": 4.17,
            "percentageTokens": 3.37,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/cache-warmup.service.ts": {
            "lines": 286,
            "tokens": 2353,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 18,
            "duplicatedTokens": 117,
            "percentage": 6.29,
            "percentageTokens": 4.97,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/cache-manager.service.ts": {
            "lines": 488,
            "tokens": 3996,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 26,
            "duplicatedTokens": 184,
            "percentage": 5.33,
            "percentageTokens": 4.6,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/business-intelligence.service.ts": {
            "lines": 739,
            "tokens": 6738,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/budget-manager.service.ts": {
            "lines": 575,
            "tokens": 5577,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/blue-green-deployment.service.ts": {
            "lines": 858,
            "tokens": 7565,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 115,
            "duplicatedTokens": 935,
            "percentage": 13.4,
            "percentageTokens": 12.36,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/backup-recovery.service.ts": {
            "lines": 979,
            "tokens": 9246,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 146,
            "duplicatedTokens": 1365,
            "percentage": 14.91,
            "percentageTokens": 14.76,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/backup-recovery-automated.service.ts": {
            "lines": 850,
            "tokens": 7229,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 45,
            "duplicatedTokens": 368,
            "percentage": 5.29,
            "percentageTokens": 5.09,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/automated-testing.service.ts": {
            "lines": 743,
            "tokens": 7517,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 14,
            "duplicatedTokens": 105,
            "percentage": 1.88,
            "percentageTokens": 1.4,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/auth.ts": {
            "lines": 126,
            "tokens": 1021,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/auth.service.ts": {
            "lines": 617,
            "tokens": 5009,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 35,
            "duplicatedTokens": 227,
            "percentage": 5.67,
            "percentageTokens": 4.53,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/audit-trail-crm-undo.service.ts": {
            "lines": 604,
            "tokens": 4946,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 84,
            "duplicatedTokens": 735,
            "percentage": 13.91,
            "percentageTokens": 14.86,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/api-versioning.service.ts": {
            "lines": 540,
            "tokens": 4302,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 32,
            "duplicatedTokens": 238,
            "percentage": 5.93,
            "percentageTokens": 5.53,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/api-gateway.service.ts": {
            "lines": 543,
            "tokens": 4016,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 33,
            "duplicatedTokens": 228,
            "percentage": 6.08,
            "percentageTokens": 5.68,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/api-gateway-enhanced.service.ts": {
            "lines": 732,
            "tokens": 6209,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 52,
            "duplicatedTokens": 385,
            "percentage": 7.1,
            "percentageTokens": 6.2,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/antivirus-global.service.ts": {
            "lines": 554,
            "tokens": 4647,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 93,
            "duplicatedTokens": 801,
            "percentage": 16.79,
            "percentageTokens": 17.24,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/analytics.ts": {
            "lines": 887,
            "tokens": 7637,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 78,
            "duplicatedTokens": 642,
            "percentage": 8.79,
            "percentageTokens": 8.41,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/analytics-types.ts": {
            "lines": 547,
            "tokens": 3736,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 431,
            "duplicatedTokens": 3481,
            "percentage": 78.79,
            "percentageTokens": 93.17,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/analytics-schemas.ts": {
            "lines": 89,
            "tokens": 796,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/alerts.ts": {
            "lines": 496,
            "tokens": 4458,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 29,
            "duplicatedTokens": 264,
            "percentage": 5.85,
            "percentageTokens": 5.92,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/alerting-system.ts": {
            "lines": 590,
            "tokens": 4361,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 90,
            "duplicatedTokens": 586,
            "percentage": 15.25,
            "percentageTokens": 13.44,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/ai-router.ts": {
            "lines": 42,
            "tokens": 303,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 90,
            "percentage": 28.57,
            "percentageTokens": 29.7,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/ai-ml-types.ts": {
            "lines": 401,
            "tokens": 2947,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 206,
            "duplicatedTokens": 1626,
            "percentage": 51.37,
            "percentageTokens": 55.17,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/ai-chat-advanced.service.ts": {
            "lines": 812,
            "tokens": 7720,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 79,
            "duplicatedTokens": 618,
            "percentage": 9.73,
            "percentageTokens": 8.01,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/ai-budget-ux.service.ts": {
            "lines": 679,
            "tokens": 6466,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 47,
            "duplicatedTokens": 384,
            "percentage": 6.92,
            "percentageTokens": 5.94,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/agent-runtime.service.ts": {
            "lines": 827,
            "tokens": 6980,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 46,
            "duplicatedTokens": 570,
            "percentage": 5.56,
            "percentageTokens": 8.17,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/advanced-search.ts": {
            "lines": 683,
            "tokens": 6402,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/advanced-rate-limiter.ts": {
            "lines": 427,
            "tokens": 3316,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/advanced-performance-monitoring.service.ts": {
            "lines": 850,
            "tokens": 8230,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 108,
            "duplicatedTokens": 893,
            "percentage": 12.71,
            "percentageTokens": 10.85,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/advanced-monitoring-alerts.service.ts": {
            "lines": 792,
            "tokens": 6694,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 79,
            "duplicatedTokens": 698,
            "percentage": 9.97,
            "percentageTokens": 10.43,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/advanced-metrics-alerts.service.ts": {
            "lines": 894,
            "tokens": 9172,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 36,
            "duplicatedTokens": 306,
            "percentage": 4.03,
            "percentageTokens": 3.34,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/advanced-configuration-management.service.ts": {
            "lines": 873,
            "tokens": 8550,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 64,
            "duplicatedTokens": 927,
            "percentage": 7.33,
            "percentageTokens": 10.84,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/advanced-cache.ts": {
            "lines": 225,
            "tokens": 1816,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 18,
            "duplicatedTokens": 115,
            "percentage": 8,
            "percentageTokens": 6.33,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/advanced-audit-compliance.service.ts": {
            "lines": 654,
            "tokens": 6347,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 103,
            "duplicatedTokens": 908,
            "percentage": 15.75,
            "percentageTokens": 14.31,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/advanced-analytics.ts": {
            "lines": 380,
            "tokens": 4049,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 57,
            "duplicatedTokens": 488,
            "percentage": 15,
            "percentageTokens": 12.05,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/advanced-analytics.service.ts": {
            "lines": 707,
            "tokens": 7018,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/jobs/hil-autocancel.ts": {
            "lines": 26,
            "tokens": 414,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/hil/service.ts": {
            "lines": 14,
            "tokens": 154,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/finops/estimator.ts": {
            "lines": 8,
            "tokens": 165,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/index.ts": {
            "lines": 68,
            "tokens": 981,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 42,
            "duplicatedTokens": 831,
            "percentage": 61.76,
            "percentageTokens": 84.71,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/db/migrations.ts": {
            "lines": 199,
            "tokens": 1906,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/db/memory.repo.ts": {
            "lines": 160,
            "tokens": 1817,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/cron/hil-expirer.ts": {
            "lines": 17,
            "tokens": 182,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/controllers/memory.controller.ts": {
            "lines": 118,
            "tokens": 955,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 46,
            "duplicatedTokens": 320,
            "percentage": 38.98,
            "percentageTokens": 33.51,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/controllers/advanced-features.controller.ts": {
            "lines": 665,
            "tokens": 6061,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/config/environment.ts": {
            "lines": 33,
            "tokens": 266,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/config/env.ts": {
            "lines": 133,
            "tokens": 1217,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/config/agents.master.ts": {
            "lines": 42,
            "tokens": 500,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/index.ts": {
            "lines": 63,
            "tokens": 809,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 47,
            "duplicatedTokens": 734,
            "percentage": 74.6,
            "percentageTokens": 90.73,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/types/problem-details.types.d.ts": {
            "lines": 11,
            "tokens": 85,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/web-search.service.d.ts": {
            "lines": 65,
            "tokens": 558,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 23,
            "duplicatedTokens": 187,
            "percentage": 35.38,
            "percentageTokens": 33.51,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/social-media-management.service.d.ts": {
            "lines": 716,
            "tokens": 8233,
            "sources": 1,
            "clones": 31,
            "duplicatedLines": 621,
            "duplicatedTokens": 6167,
            "percentage": 86.73,
            "percentageTokens": 74.91,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/sentiment-analysis.service.d.ts": {
            "lines": 111,
            "tokens": 899,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 59,
            "duplicatedTokens": 444,
            "percentage": 53.15,
            "percentageTokens": 49.39,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/security-config.service.d.ts": {
            "lines": 142,
            "tokens": 1108,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 53,
            "duplicatedTokens": 404,
            "percentage": 37.32,
            "percentageTokens": 36.46,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/rls-tenant-policies.service.d.ts": {
            "lines": 256,
            "tokens": 2099,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 29,
            "duplicatedTokens": 219,
            "percentage": 11.33,
            "percentageTokens": 10.43,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/products.service.d.ts": {
            "lines": 14,
            "tokens": 131,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/predictive-ai.service.d.ts": {
            "lines": 40,
            "tokens": 341,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 16,
            "duplicatedTokens": 118,
            "percentage": 40,
            "percentageTokens": 34.6,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/observability-otel.service.d.ts": {
            "lines": 157,
            "tokens": 1447,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 76,
            "duplicatedTokens": 506,
            "percentage": 48.41,
            "percentageTokens": 34.97,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/next-ai-platform.service.d.ts": {
            "lines": 12,
            "tokens": 99,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/memory.service.d.ts": {
            "lines": 31,
            "tokens": 260,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/invoices.service.d.ts": {
            "lines": 13,
            "tokens": 127,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/health-checks.service.d.ts": {
            "lines": 9,
            "tokens": 81,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/gdpr-hitl.service.d.ts": {
            "lines": 164,
            "tokens": 1486,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/finops.d.ts": {
            "lines": 12,
            "tokens": 141,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/external-integrations.service.d.ts": {
            "lines": 255,
            "tokens": 2582,
            "sources": 1,
            "clones": 11,
            "duplicatedLines": 184,
            "duplicatedTokens": 1637,
            "percentage": 72.16,
            "percentageTokens": 63.4,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/email-marketing.service.d.ts": {
            "lines": 619,
            "tokens": 6836,
            "sources": 1,
            "clones": 21,
            "duplicatedLines": 405,
            "duplicatedTokens": 3635,
            "percentage": 65.43,
            "percentageTokens": 53.17,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/document-management.service.d.ts": {
            "lines": 585,
            "tokens": 6295,
            "sources": 1,
            "clones": 22,
            "duplicatedLines": 617,
            "duplicatedTokens": 5913,
            "percentage": 105.47,
            "percentageTokens": 93.93,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/customer-support.service.d.ts": {
            "lines": 369,
            "tokens": 3916,
            "sources": 1,
            "clones": 11,
            "duplicatedLines": 221,
            "duplicatedTokens": 1969,
            "percentage": 59.89,
            "percentageTokens": 50.28,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/content-management.service.d.ts": {
            "lines": 743,
            "tokens": 8037,
            "sources": 1,
            "clones": 30,
            "duplicatedLines": 875,
            "duplicatedTokens": 8389,
            "percentage": 117.77,
            "percentageTokens": 104.38,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/cockpit-integration.service.d.ts": {
            "lines": 127,
            "tokens": 914,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 98,
            "duplicatedTokens": 662,
            "percentage": 77.17,
            "percentageTokens": 72.43,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/cockpit-bff-live.service.d.ts": {
            "lines": 71,
            "tokens": 626,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 46,
            "duplicatedTokens": 353,
            "percentage": 64.79,
            "percentageTokens": 56.39,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/breaker.d.ts": {
            "lines": 10,
            "tokens": 102,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/azure-openai.service.d.ts": {
            "lines": 99,
            "tokens": 767,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 52,
            "duplicatedTokens": 367,
            "percentage": 52.53,
            "percentageTokens": 47.85,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/azure-integration.service.d.ts": {
            "lines": 100,
            "tokens": 756,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 72,
            "duplicatedTokens": 529,
            "percentage": 72,
            "percentageTokens": 69.97,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/automl.service.d.ts": {
            "lines": 56,
            "tokens": 530,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 23,
            "duplicatedTokens": 177,
            "percentage": 41.07,
            "percentageTokens": 33.4,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/analytics.service.d.ts": {
            "lines": 9,
            "tokens": 79,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/ai.d.ts": {
            "lines": 28,
            "tokens": 191,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/ai-training.service.d.ts": {
            "lines": 148,
            "tokens": 1329,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 111,
            "duplicatedTokens": 911,
            "percentage": 75,
            "percentageTokens": 68.55,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/ai-security-compliance.service.d.ts": {
            "lines": 304,
            "tokens": 3248,
            "sources": 1,
            "clones": 13,
            "duplicatedLines": 206,
            "duplicatedTokens": 1962,
            "percentage": 67.76,
            "percentageTokens": 60.41,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/ai-performance-optimization.service.d.ts": {
            "lines": 319,
            "tokens": 3206,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 175,
            "duplicatedTokens": 1568,
            "percentage": 54.86,
            "percentageTokens": 48.91,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/ai-model-management.service.d.ts": {
            "lines": 209,
            "tokens": 1829,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 174,
            "duplicatedTokens": 1362,
            "percentage": 83.25,
            "percentageTokens": 74.47,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/ai-dashboard-consolidation.service.d.ts": {
            "lines": 93,
            "tokens": 669,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 70,
            "duplicatedTokens": 477,
            "percentage": 75.27,
            "percentageTokens": 71.3,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/ai-cost-prediction.service.d.ts": {
            "lines": 267,
            "tokens": 2507,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 129,
            "duplicatedTokens": 1191,
            "percentage": 48.31,
            "percentageTokens": 47.51,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/ai-cost-optimization.service.d.ts": {
            "lines": 373,
            "tokens": 3659,
            "sources": 1,
            "clones": 12,
            "duplicatedLines": 220,
            "duplicatedTokens": 1969,
            "percentage": 58.98,
            "percentageTokens": 53.81,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/advanced-observability.service.d.ts": {
            "lines": 164,
            "tokens": 1408,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 121,
            "duplicatedTokens": 975,
            "percentage": 73.78,
            "percentageTokens": 69.25,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/advanced-cicd.service.d.ts": {
            "lines": 146,
            "tokens": 1372,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 85,
            "duplicatedTokens": 655,
            "percentage": 58.22,
            "percentageTokens": 47.74,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/security/security-manager.service.d.ts": {
            "lines": 124,
            "tokens": 1011,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 74,
            "duplicatedTokens": 556,
            "percentage": 59.68,
            "percentageTokens": 55,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/security/rbac.service.d.ts": {
            "lines": 110,
            "tokens": 923,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 67,
            "duplicatedTokens": 469,
            "percentage": 60.91,
            "percentageTokens": 50.81,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/security/mfa.service.d.ts": {
            "lines": 89,
            "tokens": 843,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 37,
            "duplicatedTokens": 296,
            "percentage": 41.57,
            "percentageTokens": 35.11,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/index.d.ts": {
            "lines": 35,
            "tokens": 419,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/openapi/spec.d.ts": {
            "lines": 776,
            "tokens": 4511,
            "sources": 1,
            "clones": 16,
            "duplicatedLines": 328,
            "duplicatedTokens": 1980,
            "percentage": 42.27,
            "percentageTokens": 43.89,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/validation.d.ts": {
            "lines": 99,
            "tokens": 1423,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/trace-propagation.middleware.d.ts": {
            "lines": 21,
            "tokens": 350,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/security.middleware.d.ts": {
            "lines": 37,
            "tokens": 509,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/security.d.ts": {
            "lines": 12,
            "tokens": 423,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/security-enhanced.middleware.d.ts": {
            "lines": 77,
            "tokens": 925,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 125,
            "percentage": 15.58,
            "percentageTokens": 13.51,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/rls.d.ts": {
            "lines": 15,
            "tokens": 279,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/rls-tenant.middleware.d.ts": {
            "lines": 17,
            "tokens": 320,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/response-optimizer.d.ts": {
            "lines": 14,
            "tokens": 187,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/rate-limiting.d.ts": {
            "lines": 9,
            "tokens": 169,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/rate-limiter.d.ts": {
            "lines": 49,
            "tokens": 913,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 18,
            "duplicatedTokens": 147,
            "percentage": 36.73,
            "percentageTokens": 16.1,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/org.d.ts": {
            "lines": 12,
            "tokens": 97,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/observability.d.ts": {
            "lines": 16,
            "tokens": 210,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/metrics.d.ts": {
            "lines": 33,
            "tokens": 513,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/gateway.d.ts": {
            "lines": 14,
            "tokens": 204,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/finops-enforce.d.ts": {
            "lines": 35,
            "tokens": 350,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/finops-enforce-v2.d.ts": {
            "lines": 91,
            "tokens": 869,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 45,
            "duplicatedTokens": 326,
            "percentage": 49.45,
            "percentageTokens": 37.51,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/feature-flags.d.ts": {
            "lines": 20,
            "tokens": 430,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 92,
            "percentage": 60,
            "percentageTokens": 21.4,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/error-handler.d.ts": {
            "lines": 22,
            "tokens": 380,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/correlation.d.ts": {
            "lines": 39,
            "tokens": 517,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 14,
            "duplicatedTokens": 99,
            "percentage": 35.9,
            "percentageTokens": 19.15,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/chaos.d.ts": {
            "lines": 19,
            "tokens": 202,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/workflows.service.d.ts": {
            "lines": 693,
            "tokens": 7119,
            "sources": 1,
            "clones": 39,
            "duplicatedLines": 949,
            "duplicatedTokens": 9130,
            "percentage": 136.94,
            "percentageTokens": 128.25,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/workflows.d.ts": {
            "lines": 860,
            "tokens": 9199,
            "sources": 1,
            "clones": 42,
            "duplicatedLines": 1199,
            "duplicatedTokens": 12212,
            "percentage": 139.42,
            "percentageTokens": 132.75,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/workflows-simple.d.ts": {
            "lines": 15,
            "tokens": 127,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/workers-integration.service.d.ts": {
            "lines": 62,
            "tokens": 473,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 39,
            "duplicatedTokens": 285,
            "percentage": 62.9,
            "percentageTokens": 60.25,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/warmup.service.d.ts": {
            "lines": 29,
            "tokens": 319,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/warmup-types.d.ts": {
            "lines": 466,
            "tokens": 3529,
            "sources": 1,
            "clones": 12,
            "duplicatedLines": 293,
            "duplicatedTokens": 2231,
            "percentage": 62.88,
            "percentageTokens": 63.22,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/warmup-system.service.d.ts": {
            "lines": 49,
            "tokens": 369,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 17,
            "duplicatedTokens": 133,
            "percentage": 34.69,
            "percentageTokens": 36.04,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/validation-manager.service.d.ts": {
            "lines": 50,
            "tokens": 428,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 27,
            "duplicatedTokens": 210,
            "percentage": 54,
            "percentageTokens": 49.07,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/tracing.d.ts": {
            "lines": 45,
            "tokens": 526,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 155,
            "percentage": 46.67,
            "percentageTokens": 29.47,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/threat-detection.service.d.ts": {
            "lines": 89,
            "tokens": 777,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/testing-framework.d.ts": {
            "lines": 77,
            "tokens": 719,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 31,
            "duplicatedTokens": 262,
            "percentage": 40.26,
            "percentageTokens": 36.44,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/supplier-scorecard.service.d.ts": {
            "lines": 261,
            "tokens": 2214,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 181,
            "duplicatedTokens": 1431,
            "percentage": 69.35,
            "percentageTokens": 64.63,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/structured-logger.d.ts": {
            "lines": 47,
            "tokens": 905,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 174,
            "percentage": 44.68,
            "percentageTokens": 19.23,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/stripe-receipts.service.d.ts": {
            "lines": 141,
            "tokens": 1143,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 77,
            "duplicatedTokens": 546,
            "percentage": 54.61,
            "percentageTokens": 47.77,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/sse-manager.d.ts": {
            "lines": 37,
            "tokens": 354,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/smart-cache.service.d.ts": {
            "lines": 37,
            "tokens": 466,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/service-mesh.d.ts": {
            "lines": 63,
            "tokens": 480,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 40,
            "duplicatedTokens": 289,
            "percentage": 63.49,
            "percentageTokens": 60.21,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/service-discovery.d.ts": {
            "lines": 93,
            "tokens": 971,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 60,
            "duplicatedTokens": 597,
            "percentage": 64.52,
            "percentageTokens": 61.48,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/sepa.service.d.ts": {
            "lines": 253,
            "tokens": 2577,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 137,
            "duplicatedTokens": 1125,
            "percentage": 54.15,
            "percentageTokens": 43.66,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/sepa-types.d.ts": {
            "lines": 62,
            "tokens": 468,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 61,
            "duplicatedTokens": 466,
            "percentage": 98.39,
            "percentageTokens": 99.57,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/sepa-robust.service.d.ts": {
            "lines": 154,
            "tokens": 1355,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 90,
            "duplicatedTokens": 723,
            "percentage": 58.44,
            "percentageTokens": 53.36,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/sepa-parser.service.d.ts": {
            "lines": 13,
            "tokens": 116,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/semantic-search-crm.service.d.ts": {
            "lines": 223,
            "tokens": 1811,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 125,
            "duplicatedTokens": 966,
            "percentage": 56.05,
            "percentageTokens": 53.34,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/security.service.d.ts": {
            "lines": 57,
            "tokens": 589,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 29,
            "duplicatedTokens": 223,
            "percentage": 50.88,
            "percentageTokens": 37.86,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/security.d.ts": {
            "lines": 99,
            "tokens": 970,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 59,
            "duplicatedTokens": 424,
            "percentage": 59.6,
            "percentageTokens": 43.71,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/security-types.d.ts": {
            "lines": 555,
            "tokens": 5033,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 554,
            "duplicatedTokens": 4905,
            "percentage": 99.82,
            "percentageTokens": 97.46,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/security-manager.service.d.ts": {
            "lines": 123,
            "tokens": 1036,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 67,
            "duplicatedTokens": 529,
            "percentage": 54.47,
            "percentageTokens": 51.06,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/security-enhanced.service.d.ts": {
            "lines": 18,
            "tokens": 164,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/security-consolidated.service.d.ts": {
            "lines": 136,
            "tokens": 1368,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/security-compliance-enhanced.service.d.ts": {
            "lines": 149,
            "tokens": 1216,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 81,
            "duplicatedTokens": 722,
            "percentage": 54.36,
            "percentageTokens": 59.38,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/rule-engine.service.d.ts": {
            "lines": 34,
            "tokens": 333,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/rls.d.ts": {
            "lines": 51,
            "tokens": 473,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 25,
            "duplicatedTokens": 178,
            "percentage": 49.02,
            "percentageTokens": 37.63,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/rls-types.d.ts": {
            "lines": 305,
            "tokens": 2591,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 304,
            "duplicatedTokens": 2589,
            "percentage": 99.67,
            "percentageTokens": 99.92,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/rls-policy-validator.service.d.ts": {
            "lines": 38,
            "tokens": 336,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/rls-policy-generator.service.d.ts": {
            "lines": 39,
            "tokens": 469,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/rls-policy-deployer.service.d.ts": {
            "lines": 43,
            "tokens": 470,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 84,
            "percentage": 23.26,
            "percentageTokens": 17.87,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/rls-generativa.service.d.ts": {
            "lines": 225,
            "tokens": 1814,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 29,
            "duplicatedTokens": 219,
            "percentage": 12.89,
            "percentageTokens": 12.07,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/rls-cicd.service.d.ts": {
            "lines": 39,
            "tokens": 573,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/resource-management.service.d.ts": {
            "lines": 18,
            "tokens": 209,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/request-tracing.service.d.ts": {
            "lines": 15,
            "tokens": 173,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/reporting-engine.service.d.ts": {
            "lines": 47,
            "tokens": 484,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/reportes-mensuales.service.d.ts": {
            "lines": 264,
            "tokens": 2022,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 205,
            "duplicatedTokens": 1463,
            "percentage": 77.65,
            "percentageTokens": 72.35,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/reconciliation.service.d.ts": {
            "lines": 37,
            "tokens": 356,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 87,
            "percentage": 27.03,
            "percentageTokens": 24.44,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/real-time-collaboration.d.ts": {
            "lines": 303,
            "tokens": 2960,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 92,
            "duplicatedTokens": 802,
            "percentage": 30.36,
            "percentageTokens": 27.09,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/rbac.service.d.ts": {
            "lines": 72,
            "tokens": 722,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 18,
            "duplicatedTokens": 118,
            "percentage": 25,
            "percentageTokens": 16.34,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/rbac-simple.d.ts": {
            "lines": 36,
            "tokens": 388,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 28,
            "duplicatedTokens": 332,
            "percentage": 77.78,
            "percentageTokens": 85.57,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/rbac-granular.d.ts": {
            "lines": 54,
            "tokens": 597,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 31,
            "duplicatedTokens": 224,
            "percentage": 57.41,
            "percentageTokens": 37.52,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/rbac-basic.d.ts": {
            "lines": 29,
            "tokens": 345,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 221,
            "percentage": 37.93,
            "percentageTokens": 64.06,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/rate-limiting.service.d.ts": {
            "lines": 17,
            "tokens": 139,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/rate-limiting.d.ts": {
            "lines": 50,
            "tokens": 417,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 133,
            "percentage": 38,
            "percentageTokens": 31.89,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/quiet-hours.service.d.ts": {
            "lines": 28,
            "tokens": 357,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 214,
            "percentage": 35.71,
            "percentageTokens": 59.94,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/quiet-hours-types.d.ts": {
            "lines": 407,
            "tokens": 3238,
            "sources": 1,
            "clones": 13,
            "duplicatedLines": 354,
            "duplicatedTokens": 2842,
            "percentage": 86.98,
            "percentageTokens": 87.77,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/quiet-hours-oncall-consolidated.service.d.ts": {
            "lines": 73,
            "tokens": 957,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 20,
            "duplicatedTokens": 446,
            "percentage": 27.4,
            "percentageTokens": 46.6,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/prompt-library.service.d.ts": {
            "lines": 41,
            "tokens": 456,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/project-completion-deployment.service.d.ts": {
            "lines": 295,
            "tokens": 2859,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 140,
            "duplicatedTokens": 1384,
            "percentage": 47.46,
            "percentageTokens": 48.41,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/process-manager.d.ts": {
            "lines": 67,
            "tokens": 563,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 13,
            "duplicatedTokens": 85,
            "percentage": 19.4,
            "percentageTokens": 15.1,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/performance-optimizer.service.d.ts": {
            "lines": 94,
            "tokens": 667,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 24,
            "duplicatedTokens": 152,
            "percentage": 25.53,
            "percentageTokens": 22.79,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/performance-optimizer.d.ts": {
            "lines": 64,
            "tokens": 513,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 18,
            "duplicatedTokens": 120,
            "percentage": 28.13,
            "percentageTokens": 23.39,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/performance-optimizer-v3.service.d.ts": {
            "lines": 79,
            "tokens": 583,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 26,
            "duplicatedTokens": 199,
            "percentage": 32.91,
            "percentageTokens": 34.13,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/performance-optimizer-v2.service.d.ts": {
            "lines": 116,
            "tokens": 797,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 152,
            "duplicatedTokens": 1010,
            "percentage": 131.03,
            "percentageTokens": 126.73,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/performance-optimization.service.d.ts": {
            "lines": 35,
            "tokens": 385,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/oncall.service.d.ts": {
            "lines": 25,
            "tokens": 409,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 232,
            "percentage": 40,
            "percentageTokens": 56.72,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/observability.d.ts": {
            "lines": 12,
            "tokens": 136,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/notifications.d.ts": {
            "lines": 129,
            "tokens": 1715,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 52,
            "duplicatedTokens": 1038,
            "percentage": 40.31,
            "percentageTokens": 60.52,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/notification-intelligence.service.d.ts": {
            "lines": 33,
            "tokens": 341,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/monitoring.service.d.ts": {
            "lines": 122,
            "tokens": 1139,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 74,
            "duplicatedTokens": 587,
            "percentage": 60.66,
            "percentageTokens": 51.54,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/monitoring-alerts.service.d.ts": {
            "lines": 116,
            "tokens": 874,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 37,
            "duplicatedTokens": 281,
            "percentage": 31.9,
            "percentageTokens": 32.15,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/metrics.old.d.ts": {
            "lines": 34,
            "tokens": 448,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/metrics.new.d.ts": {
            "lines": 13,
            "tokens": 133,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/metrics.d.ts": {
            "lines": 23,
            "tokens": 321,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/memory-manager.service.d.ts": {
            "lines": 112,
            "tokens": 798,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 56,
            "duplicatedTokens": 390,
            "percentage": 50,
            "percentageTokens": 48.87,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/matching-engine.service.d.ts": {
            "lines": 24,
            "tokens": 225,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/make-quotas.service.d.ts": {
            "lines": 47,
            "tokens": 469,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 14,
            "duplicatedTokens": 92,
            "percentage": 29.79,
            "percentageTokens": 19.62,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/logger.d.ts": {
            "lines": 289,
            "tokens": 2570,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 176,
            "duplicatedTokens": 1435,
            "percentage": 60.9,
            "percentageTokens": 55.84,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/inventory.d.ts": {
            "lines": 374,
            "tokens": 4366,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 215,
            "duplicatedTokens": 2246,
            "percentage": 57.49,
            "percentageTokens": 51.44,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/inventory-kardex.service.d.ts": {
            "lines": 184,
            "tokens": 1670,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 99,
            "duplicatedTokens": 773,
            "percentage": 53.8,
            "percentageTokens": 46.29,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/interactions.service.d.ts": {
            "lines": 198,
            "tokens": 2413,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 146,
            "duplicatedTokens": 1501,
            "percentage": 73.74,
            "percentageTokens": 62.2,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/interactions-sas-av.service.d.ts": {
            "lines": 229,
            "tokens": 1992,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 105,
            "duplicatedTokens": 811,
            "percentage": 45.85,
            "percentageTokens": 40.71,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/intelligent-search.service.d.ts": {
            "lines": 37,
            "tokens": 351,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/intelligent-reporting.service.d.ts": {
            "lines": 62,
            "tokens": 573,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/integrations.d.ts": {
            "lines": 26,
            "tokens": 341,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/hitl-v2.service.d.ts": {
            "lines": 116,
            "tokens": 1205,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 83,
            "duplicatedTokens": 701,
            "percentage": 71.55,
            "percentageTokens": 58.17,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/hitl-ownership-sla.service.d.ts": {
            "lines": 297,
            "tokens": 2508,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/health-monitor.d.ts": {
            "lines": 91,
            "tokens": 759,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 51,
            "duplicatedTokens": 392,
            "percentage": 56.04,
            "percentageTokens": 51.65,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/health-modes.d.ts": {
            "lines": 44,
            "tokens": 370,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/health-check.service.d.ts": {
            "lines": 60,
            "tokens": 537,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 27,
            "duplicatedTokens": 213,
            "percentage": 45,
            "percentageTokens": 39.66,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/graph-wrappers.service.d.ts": {
            "lines": 148,
            "tokens": 1252,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 123,
            "duplicatedTokens": 850,
            "percentage": 83.11,
            "percentageTokens": 67.89,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/graph-chaos-light.service.d.ts": {
            "lines": 68,
            "tokens": 517,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 34,
            "duplicatedTokens": 244,
            "percentage": 50,
            "percentageTokens": 47.2,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/graceful-shutdown.service.d.ts": {
            "lines": 16,
            "tokens": 155,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/gdpr-types.d.ts": {
            "lines": 175,
            "tokens": 1422,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 174,
            "duplicatedTokens": 1420,
            "percentage": 99.43,
            "percentageTokens": 99.86,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/gdpr-export.service.d.ts": {
            "lines": 33,
            "tokens": 305,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/gdpr-erase.service.d.ts": {
            "lines": 42,
            "tokens": 402,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/gdpr-consolidated.service.d.ts": {
            "lines": 109,
            "tokens": 1197,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/gdpr-audit.service.d.ts": {
            "lines": 39,
            "tokens": 611,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/gateway.d.ts": {
            "lines": 80,
            "tokens": 747,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 46,
            "duplicatedTokens": 354,
            "percentage": 57.5,
            "percentageTokens": 47.39,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/fiscalidad-regional.service.d.ts": {
            "lines": 243,
            "tokens": 1905,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 28,
            "duplicatedTokens": 209,
            "percentage": 11.52,
            "percentageTokens": 10.97,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/fiscalidad-regional-ue.service.d.ts": {
            "lines": 146,
            "tokens": 1164,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 92,
            "duplicatedTokens": 763,
            "percentage": 63.01,
            "percentageTokens": 65.55,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/finops.d.ts": {
            "lines": 102,
            "tokens": 944,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 83,
            "duplicatedTokens": 708,
            "percentage": 81.37,
            "percentageTokens": 75,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/finops-types.d.ts": {
            "lines": 415,
            "tokens": 3550,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 406,
            "duplicatedTokens": 3495,
            "percentage": 97.83,
            "percentageTokens": 98.45,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/finops-consolidated.service.d.ts": {
            "lines": 110,
            "tokens": 1095,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 77,
            "duplicatedTokens": 719,
            "percentage": 70,
            "percentageTokens": 65.66,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/executive-dashboard.service.d.ts": {
            "lines": 33,
            "tokens": 264,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 16,
            "duplicatedTokens": 133,
            "percentage": 48.48,
            "percentageTokens": 50.38,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/events.d.ts": {
            "lines": 133,
            "tokens": 1581,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 84,
            "duplicatedTokens": 784,
            "percentage": 63.16,
            "percentageTokens": 49.59,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/escalation.service.d.ts": {
            "lines": 27,
            "tokens": 306,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/errors.d.ts": {
            "lines": 19,
            "tokens": 288,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/error-recovery.service.d.ts": {
            "lines": 18,
            "tokens": 183,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/error-manager.service.d.ts": {
            "lines": 131,
            "tokens": 1072,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 38,
            "duplicatedTokens": 289,
            "percentage": 29.01,
            "percentageTokens": 26.96,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/error-handler.service.d.ts": {
            "lines": 83,
            "tokens": 640,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 37,
            "duplicatedTokens": 271,
            "percentage": 44.58,
            "percentageTokens": 42.34,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/error-handler.d.ts": {
            "lines": 54,
            "tokens": 687,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/dunning-solid.service.d.ts": {
            "lines": 156,
            "tokens": 1391,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 103,
            "duplicatedTokens": 828,
            "percentage": 66.03,
            "percentageTokens": 59.53,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/dunning-3-toques.service.d.ts": {
            "lines": 124,
            "tokens": 956,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 65,
            "duplicatedTokens": 525,
            "percentage": 52.42,
            "percentageTokens": 54.92,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/dlg-grooming.service.d.ts": {
            "lines": 194,
            "tokens": 1599,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/distributed-cache.d.ts": {
            "lines": 72,
            "tokens": 567,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 20,
            "duplicatedTokens": 136,
            "percentage": 27.78,
            "percentageTokens": 23.99,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/deals.service.d.ts": {
            "lines": 91,
            "tokens": 858,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 60,
            "duplicatedTokens": 489,
            "percentage": 65.93,
            "percentageTokens": 56.99,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/deals-nba.service.d.ts": {
            "lines": 146,
            "tokens": 1082,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 85,
            "duplicatedTokens": 632,
            "percentage": 58.22,
            "percentageTokens": 58.41,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/database.d.ts": {
            "lines": 18,
            "tokens": 200,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/database-pool.d.ts": {
            "lines": 130,
            "tokens": 1202,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 38,
            "duplicatedTokens": 297,
            "percentage": 29.23,
            "percentageTokens": 24.71,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/data-validator.d.ts": {
            "lines": 76,
            "tokens": 629,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 28,
            "duplicatedTokens": 261,
            "percentage": 36.84,
            "percentageTokens": 41.49,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/data-encryption.service.d.ts": {
            "lines": 20,
            "tokens": 193,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/data-analytics-dashboard.service.d.ts": {
            "lines": 518,
            "tokens": 5083,
            "sources": 1,
            "clones": 17,
            "duplicatedLines": 382,
            "duplicatedTokens": 3351,
            "percentage": 73.75,
            "percentageTokens": 65.93,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/csp-sri-banking.service.d.ts": {
            "lines": 230,
            "tokens": 2077,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 152,
            "duplicatedTokens": 1250,
            "percentage": 66.09,
            "percentageTokens": 60.18,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/cost-tracker.service.d.ts": {
            "lines": 75,
            "tokens": 726,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 31,
            "duplicatedTokens": 310,
            "percentage": 41.33,
            "percentageTokens": 42.7,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/cost-optimizer.service.d.ts": {
            "lines": 44,
            "tokens": 473,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 86,
            "percentage": 27.27,
            "percentageTokens": 18.18,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/contacts-dedupe.service.d.ts": {
            "lines": 98,
            "tokens": 849,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 57,
            "duplicatedTokens": 412,
            "percentage": 58.16,
            "percentageTokens": 48.53,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/connection-pool.service.d.ts": {
            "lines": 110,
            "tokens": 882,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 55,
            "duplicatedTokens": 428,
            "percentage": 50,
            "percentageTokens": 48.53,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/configuration.service.d.ts": {
            "lines": 173,
            "tokens": 2256,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 32,
            "duplicatedTokens": 332,
            "percentage": 18.5,
            "percentageTokens": 14.72,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/configuration.d.ts": {
            "lines": 92,
            "tokens": 1054,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 76,
            "duplicatedTokens": 947,
            "percentage": 82.61,
            "percentageTokens": 89.85,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/config-validation.service.d.ts": {
            "lines": 18,
            "tokens": 162,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/comprehensive-audit.service.d.ts": {
            "lines": 103,
            "tokens": 911,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 97,
            "percentage": 9.71,
            "percentageTokens": 10.65,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/compliance-management.service.d.ts": {
            "lines": 71,
            "tokens": 805,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 143,
            "percentage": 26.76,
            "percentageTokens": 17.76,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/companies-taxonomy.service.d.ts": {
            "lines": 38,
            "tokens": 313,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 23,
            "duplicatedTokens": 160,
            "percentage": 60.53,
            "percentageTokens": 51.12,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/circuit-breaker.service.d.ts": {
            "lines": 35,
            "tokens": 335,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 102,
            "percentage": 42.86,
            "percentageTokens": 30.45,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/centralized-logging.service.d.ts": {
            "lines": 336,
            "tokens": 3701,
            "sources": 1,
            "clones": 12,
            "duplicatedLines": 170,
            "duplicatedTokens": 1682,
            "percentage": 50.6,
            "percentageTokens": 45.45,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/cache.service.d.ts": {
            "lines": 53,
            "tokens": 624,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 17,
            "duplicatedTokens": 115,
            "percentage": 32.08,
            "percentageTokens": 18.43,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/cache.d.ts": {
            "lines": 86,
            "tokens": 782,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/cache-warmup.service.d.ts": {
            "lines": 39,
            "tokens": 308,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 18,
            "duplicatedTokens": 117,
            "percentage": 46.15,
            "percentageTokens": 37.99,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/cache-manager.service.d.ts": {
            "lines": 76,
            "tokens": 642,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 26,
            "duplicatedTokens": 184,
            "percentage": 34.21,
            "percentageTokens": 28.66,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/business-intelligence.service.d.ts": {
            "lines": 86,
            "tokens": 877,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/budget-manager.service.d.ts": {
            "lines": 40,
            "tokens": 424,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/blue-green-deployment.service.d.ts": {
            "lines": 198,
            "tokens": 1699,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 115,
            "duplicatedTokens": 935,
            "percentage": 58.08,
            "percentageTokens": 55.03,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/backup-recovery.service.d.ts": {
            "lines": 384,
            "tokens": 4032,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 179,
            "duplicatedTokens": 1571,
            "percentage": 46.61,
            "percentageTokens": 38.96,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/backup-recovery-automated.service.d.ts": {
            "lines": 146,
            "tokens": 1208,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 45,
            "duplicatedTokens": 368,
            "percentage": 30.82,
            "percentageTokens": 30.46,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/automated-testing.service.d.ts": {
            "lines": 233,
            "tokens": 2531,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 136,
            "duplicatedTokens": 1393,
            "percentage": 58.37,
            "percentageTokens": 55.04,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/automated-documentation.service.d.ts": {
            "lines": 351,
            "tokens": 3491,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 130,
            "duplicatedTokens": 1172,
            "percentage": 37.04,
            "percentageTokens": 33.57,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/auth.service.d.ts": {
            "lines": 85,
            "tokens": 665,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 35,
            "duplicatedTokens": 227,
            "percentage": 41.18,
            "percentageTokens": 34.14,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/auth.d.ts": {
            "lines": 18,
            "tokens": 284,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/audit-trail-crm-undo.service.d.ts": {
            "lines": 129,
            "tokens": 1170,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 74,
            "duplicatedTokens": 619,
            "percentage": 57.36,
            "percentageTokens": 52.91,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/api-versioning.service.d.ts": {
            "lines": 67,
            "tokens": 617,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 32,
            "duplicatedTokens": 238,
            "percentage": 47.76,
            "percentageTokens": 38.57,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/api-gateway.service.d.ts": {
            "lines": 74,
            "tokens": 569,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 33,
            "duplicatedTokens": 228,
            "percentage": 44.59,
            "percentageTokens": 40.07,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/api-gateway-enhanced.service.d.ts": {
            "lines": 119,
            "tokens": 1014,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 52,
            "duplicatedTokens": 385,
            "percentage": 43.7,
            "percentageTokens": 37.97,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/antivirus-global.service.d.ts": {
            "lines": 109,
            "tokens": 933,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 79,
            "duplicatedTokens": 656,
            "percentage": 72.48,
            "percentageTokens": 70.31,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/analytics.d.ts": {
            "lines": 128,
            "tokens": 1415,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 110,
            "duplicatedTokens": 1302,
            "percentage": 85.94,
            "percentageTokens": 92.01,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/analytics-types.d.ts": {
            "lines": 432,
            "tokens": 3603,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 431,
            "duplicatedTokens": 3481,
            "percentage": 99.77,
            "percentageTokens": 96.61,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/analytics-schemas.d.ts": {
            "lines": 358,
            "tokens": 4981,
            "sources": 1,
            "clones": 16,
            "duplicatedLines": 482,
            "duplicatedTokens": 6612,
            "percentage": 134.64,
            "percentageTokens": 132.74,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/analytics-consolidated.service.d.ts": {
            "lines": 196,
            "tokens": 1574,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 105,
            "duplicatedTokens": 797,
            "percentage": 53.57,
            "percentageTokens": 50.64,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/alerts.d.ts": {
            "lines": 69,
            "tokens": 641,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 18,
            "duplicatedTokens": 152,
            "percentage": 26.09,
            "percentageTokens": 23.71,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/alerting-system.d.ts": {
            "lines": 67,
            "tokens": 551,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 18,
            "duplicatedTokens": 168,
            "percentage": 26.87,
            "percentageTokens": 30.49,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/ai-router.d.ts": {
            "lines": 16,
            "tokens": 128,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 90,
            "percentage": 75,
            "percentageTokens": 70.31,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/ai-ml-types.d.ts": {
            "lines": 355,
            "tokens": 3297,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 230,
            "duplicatedTokens": 1846,
            "percentage": 64.79,
            "percentageTokens": 55.99,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/ai-chat-advanced.service.d.ts": {
            "lines": 140,
            "tokens": 1300,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 79,
            "duplicatedTokens": 618,
            "percentage": 56.43,
            "percentageTokens": 47.54,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/ai-budget-ux.service.d.ts": {
            "lines": 218,
            "tokens": 2177,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 125,
            "duplicatedTokens": 1138,
            "percentage": 57.34,
            "percentageTokens": 52.27,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/ai-agents-registry.service.d.ts": {
            "lines": 269,
            "tokens": 3016,
            "sources": 1,
            "clones": 14,
            "duplicatedLines": 257,
            "duplicatedTokens": 2726,
            "percentage": 95.54,
            "percentageTokens": 90.38,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/agent-runtime.service.d.ts": {
            "lines": 221,
            "tokens": 2346,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 127,
            "duplicatedTokens": 1308,
            "percentage": 57.47,
            "percentageTokens": 55.75,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/advanced-security.d.ts": {
            "lines": 257,
            "tokens": 2419,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/advanced-security-framework.service.d.ts": {
            "lines": 255,
            "tokens": 2203,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 38,
            "duplicatedTokens": 273,
            "percentage": 14.9,
            "percentageTokens": 12.39,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/advanced-search.d.ts": {
            "lines": 211,
            "tokens": 2174,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 44,
            "duplicatedTokens": 404,
            "percentage": 20.85,
            "percentageTokens": 18.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/advanced-rate-limiter.d.ts": {
            "lines": 67,
            "tokens": 536,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/advanced-performance-monitoring.service.d.ts": {
            "lines": 168,
            "tokens": 1506,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 108,
            "duplicatedTokens": 893,
            "percentage": 64.29,
            "percentageTokens": 59.3,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/advanced-monitoring-alerts.service.d.ts": {
            "lines": 126,
            "tokens": 1034,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 67,
            "duplicatedTokens": 574,
            "percentage": 53.17,
            "percentageTokens": 55.51,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/advanced-metrics-alerts.service.d.ts": {
            "lines": 335,
            "tokens": 3600,
            "sources": 1,
            "clones": 11,
            "duplicatedLines": 151,
            "duplicatedTokens": 1509,
            "percentage": 45.07,
            "percentageTokens": 41.92,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/advanced-error-management.service.d.ts": {
            "lines": 277,
            "tokens": 2343,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/advanced-deployment-automation.service.d.ts": {
            "lines": 277,
            "tokens": 2594,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/advanced-configuration-management.service.d.ts": {
            "lines": 346,
            "tokens": 3953,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 172,
            "duplicatedTokens": 1648,
            "percentage": 49.71,
            "percentageTokens": 41.69,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/advanced-cache.d.ts": {
            "lines": 44,
            "tokens": 353,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 18,
            "duplicatedTokens": 115,
            "percentage": 40.91,
            "percentageTokens": 32.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/advanced-audit-compliance.service.d.ts": {
            "lines": 164,
            "tokens": 1338,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 91,
            "duplicatedTokens": 727,
            "percentage": 55.49,
            "percentageTokens": 54.33,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/advanced-analytics.service.d.ts": {
            "lines": 62,
            "tokens": 604,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 13,
            "duplicatedTokens": 192,
            "percentage": 20.97,
            "percentageTokens": 31.79,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/advanced-analytics.d.ts": {
            "lines": 101,
            "tokens": 775,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 45,
            "duplicatedTokens": 307,
            "percentage": 44.55,
            "percentageTokens": 39.61,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/index.d.ts": {
            "lines": 50,
            "tokens": 953,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 42,
            "duplicatedTokens": 831,
            "percentage": 84,
            "percentageTokens": 87.2,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/db/memory.repo.d.ts": {
            "lines": 116,
            "tokens": 1154,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 26,
            "duplicatedTokens": 218,
            "percentage": 22.41,
            "percentageTokens": 18.89,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/controllers/advanced-features.controller.d.ts": {
            "lines": 44,
            "tokens": 653,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/config/environment.d.ts": {
            "lines": 15,
            "tokens": 109,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/config/env.d.ts": {
            "lines": 142,
            "tokens": 1491,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 116,
            "duplicatedTokens": 1056,
            "percentage": 81.69,
            "percentageTokens": 70.82,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/config/agents.master.d.ts": {
            "lines": 93,
            "tokens": 899,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 134,
            "duplicatedTokens": 1192,
            "percentage": 144.09,
            "percentageTokens": 132.59,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/index.d.ts": {
            "lines": 51,
            "tokens": 790,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 47,
            "duplicatedTokens": 734,
            "percentage": 92.16,
            "percentageTokens": 92.91,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workers/src/index.ts": {
            "lines": 572,
            "tokens": 5882,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workers/src/bootstrap.example.ts": {
            "lines": 220,
            "tokens": 1604,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 89,
            "percentage": 4.55,
            "percentageTokens": 5.55,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/types/shims.d.ts": {
            "lines": 11,
            "tokens": 53,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/types/db-shim.d.ts": {
            "lines": 12,
            "tokens": 76,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/voice/src/voice-recognition.ts": {
            "lines": 166,
            "tokens": 1224,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api-neura-comet/src/server.ts": {
            "lines": 77,
            "tokens": 570,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 51,
            "duplicatedTokens": 406,
            "percentage": 66.23,
            "percentageTokens": 71.23,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api-agents-make/src/server.ts": {
            "lines": 76,
            "tokens": 583,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 51,
            "duplicatedTokens": 406,
            "percentage": 67.11,
            "percentageTokens": 69.64,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/tests/setup-e2e.ts": {
            "lines": 80,
            "tokens": 469,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/test-e2e-advanced.ts": {
            "lines": 305,
            "tokens": 2196,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/test-all-endpoints.ts": {
            "lines": 235,
            "tokens": 2043,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/openapi.ts": {
            "lines": 100,
            "tokens": 621,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/index.final.ts": {
            "lines": 860,
            "tokens": 7197,
            "sources": 1,
            "clones": 20,
            "duplicatedLines": 585,
            "duplicatedTokens": 5420,
            "percentage": 68.02,
            "percentageTokens": 75.31,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/index.expanded.ts": {
            "lines": 272,
            "tokens": 2058,
            "sources": 1,
            "clones": 14,
            "duplicatedLines": 843,
            "duplicatedTokens": 6752,
            "percentage": 309.93,
            "percentageTokens": 328.09,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/bootstrap.example.ts": {
            "lines": 152,
            "tokens": 966,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 89,
            "percentage": 6.58,
            "percentageTokens": 9.21,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/scripts/smoke-pr-42.ts": {
            "lines": 18,
            "tokens": 249,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/scripts/rollback.ts": {
            "lines": 82,
            "tokens": 780,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/scripts/openapi.ts": {
            "lines": 650,
            "tokens": 4210,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 33,
            "duplicatedTokens": 267,
            "percentage": 5.08,
            "percentageTokens": 6.34,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/scripts/generate-openapi.ts": {
            "lines": 590,
            "tokens": 5143,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 105,
            "duplicatedTokens": 1193,
            "percentage": 17.8,
            "percentageTokens": 23.2,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/prisma/seed.ts": {
            "lines": 679,
            "tokens": 6823,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/prisma/seed.improved.ts": {
            "lines": 574,
            "tokens": 5745,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/test-e2e-advanced.d.ts": {
            "lines": 12,
            "tokens": 84,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/test-all-endpoints.d.ts": {
            "lines": 10,
            "tokens": 72,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/backup/index.working.backup.ts": {
            "lines": 621,
            "tokens": 4913,
            "sources": 1,
            "clones": 26,
            "duplicatedLines": 678,
            "duplicatedTokens": 5333,
            "percentage": 109.18,
            "percentageTokens": 108.55,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/backup/index.restored.backup.ts": {
            "lines": 165,
            "tokens": 1385,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 229,
            "duplicatedTokens": 1992,
            "percentage": 138.79,
            "percentageTokens": 143.83,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/backup/index.minimal.ts": {
            "lines": 135,
            "tokens": 1221,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 132,
            "duplicatedTokens": 1192,
            "percentage": 97.78,
            "percentageTokens": 97.62,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/backup/index.mega.ts": {
            "lines": 531,
            "tokens": 4174,
            "sources": 1,
            "clones": 12,
            "duplicatedLines": 556,
            "duplicatedTokens": 4206,
            "percentage": 104.71,
            "percentageTokens": 100.77,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/backup/index.intermediate.backup.ts": {
            "lines": 323,
            "tokens": 2610,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 305,
            "duplicatedTokens": 2449,
            "percentage": 94.43,
            "percentageTokens": 93.83,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/backup/index.expanded.ts": {
            "lines": 272,
            "tokens": 2058,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 272,
            "duplicatedTokens": 2058,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/backup/index.expanded.backup.ts": {
            "lines": 272,
            "tokens": 2058,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 272,
            "duplicatedTokens": 2058,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/next-env.d.ts": {
            "lines": 9,
            "tokens": 42,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 255518,
          "tokens": 2276887,
          "sources": 891,
          "clones": 1358,
          "duplicatedLines": 32527,
          "duplicatedTokens": 284311,
          "percentage": 12.73,
          "percentageTokens": 12.49,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "javascript": {
        "sources": {
          "apps/api/dist/application/use-cases/user/update-user.use-case.js": {
            "lines": 93,
            "tokens": 887,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 46,
            "duplicatedTokens": 365,
            "percentage": 49.46,
            "percentageTokens": 41.15,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/user/delete-user.use-case.js": {
            "lines": 52,
            "tokens": 435,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 30,
            "duplicatedTokens": 244,
            "percentage": 57.69,
            "percentageTokens": 56.09,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/user/create-user.use-case.js": {
            "lines": 85,
            "tokens": 810,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 16,
            "duplicatedTokens": 121,
            "percentage": 18.82,
            "percentageTokens": 14.94,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/search/intelligent-search.use-case.js": {
            "lines": 43,
            "tokens": 465,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/search/index-entity.use-case.js": {
            "lines": 23,
            "tokens": 212,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/search/get-suggestions.use-case.js": {
            "lines": 30,
            "tokens": 299,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/product/update-product.use-case.js": {
            "lines": 130,
            "tokens": 1491,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/product/create-product.use-case.js": {
            "lines": 87,
            "tokens": 1050,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/predictive-analytics/update-predictive-analytics.use-case.js": {
            "lines": 66,
            "tokens": 847,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 116,
            "percentage": 18.18,
            "percentageTokens": 13.7,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/predictive-analytics/train-model.use-case.js": {
            "lines": 97,
            "tokens": 1041,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 116,
            "percentage": 12.37,
            "percentageTokens": 11.14,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/predictive-analytics/generate-prediction.use-case.js": {
            "lines": 47,
            "tokens": 516,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/predictive-analytics/create-predictive-analytics.use-case.js": {
            "lines": 77,
            "tokens": 817,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/invoice/update-invoice.use-case.js": {
            "lines": 106,
            "tokens": 1286,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 175,
            "percentage": 10.38,
            "percentageTokens": 13.61,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/invoice/create-invoice.use-case.js": {
            "lines": 83,
            "tokens": 994,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 175,
            "percentage": 13.25,
            "percentageTokens": 17.61,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/inventory-kardex/update-inventory-kardex.use-case.js": {
            "lines": 60,
            "tokens": 880,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/inventory-kardex/record-movement.use-case.js": {
            "lines": 87,
            "tokens": 1016,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 27,
            "duplicatedTokens": 233,
            "percentage": 31.03,
            "percentageTokens": 22.93,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/inventory-kardex/create-inventory-kardex.use-case.js": {
            "lines": 82,
            "tokens": 859,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/interaction/update-interaction.use-case.js": {
            "lines": 216,
            "tokens": 2170,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 66,
            "duplicatedTokens": 593,
            "percentage": 30.56,
            "percentageTokens": 27.33,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/interaction/create-interaction.use-case.js": {
            "lines": 124,
            "tokens": 1113,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 26,
            "duplicatedTokens": 253,
            "percentage": 20.97,
            "percentageTokens": 22.73,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/deal/update-deal.use-case.js": {
            "lines": 296,
            "tokens": 3154,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 66,
            "duplicatedTokens": 603,
            "percentage": 22.3,
            "percentageTokens": 19.12,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/deal/create-deal.use-case.js": {
            "lines": 189,
            "tokens": 1802,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 26,
            "duplicatedTokens": 263,
            "percentage": 13.76,
            "percentageTokens": 14.59,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/database-schema/create-database-schema.use-case.js": {
            "lines": 169,
            "tokens": 1655,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 32,
            "duplicatedTokens": 296,
            "percentage": 18.93,
            "percentageTokens": 17.89,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/database-schema/analyze-database-schema.use-case.js": {
            "lines": 56,
            "tokens": 574,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/contact/update-contact.use-case.js": {
            "lines": 245,
            "tokens": 2949,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 63,
            "duplicatedTokens": 770,
            "percentage": 25.71,
            "percentageTokens": 26.11,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/contact/create-contact.use-case.js": {
            "lines": 225,
            "tokens": 2533,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 77,
            "duplicatedTokens": 893,
            "percentage": 34.22,
            "percentageTokens": 35.25,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/company/update-company.use-case.js": {
            "lines": 214,
            "tokens": 2355,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 29,
            "duplicatedTokens": 317,
            "percentage": 13.55,
            "percentageTokens": 13.46,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/company/create-company.use-case.js": {
            "lines": 175,
            "tokens": 1850,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 43,
            "duplicatedTokens": 440,
            "percentage": 24.57,
            "percentageTokens": 23.78,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/architecture/create-architecture.use-case.js": {
            "lines": 130,
            "tokens": 1308,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 78,
            "duplicatedTokens": 748,
            "percentage": 60,
            "percentageTokens": 57.19,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/architecture/analyze-architecture.use-case.js": {
            "lines": 47,
            "tokens": 491,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/cockpit.api/src/index.js": {
            "lines": 9,
            "tokens": 96,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/cockpit.api/src/app.js": {
            "lines": 42,
            "tokens": 488,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 51,
            "duplicatedTokens": 604,
            "percentage": 121.43,
            "percentageTokens": 123.77,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/cockpit.api/src/app-otel-snippet.js": {
            "lines": 15,
            "tokens": 183,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 183,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/__tests__/setup/test-setup.js": {
            "lines": 22,
            "tokens": 230,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/shared/utils/validation.utils.js": {
            "lines": 290,
            "tokens": 3552,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/shared/utils/error.utils.js": {
            "lines": 277,
            "tokens": 3203,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/sepa/reconciler.js": {
            "lines": 35,
            "tokens": 542,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/sepa/parser.js": {
            "lines": 49,
            "tokens": 747,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/sepa/index.js": {
            "lines": 48,
            "tokens": 696,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/ai/azure-openai.service.js": {
            "lines": 20,
            "tokens": 196,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/routes/user.routes.js": {
            "lines": 108,
            "tokens": 1440,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/routes/search.routes.js": {
            "lines": 53,
            "tokens": 726,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/routes/product.routes.js": {
            "lines": 584,
            "tokens": 7431,
            "sources": 1,
            "clones": 32,
            "duplicatedLines": 560,
            "duplicatedTokens": 6146,
            "percentage": 95.89,
            "percentageTokens": 82.71,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/routes/predictive-analytics.routes.js": {
            "lines": 196,
            "tokens": 3588,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 104,
            "duplicatedTokens": 2106,
            "percentage": 53.06,
            "percentageTokens": 58.7,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/routes/invoice.routes.js": {
            "lines": 300,
            "tokens": 5014,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 106,
            "duplicatedTokens": 1815,
            "percentage": 35.33,
            "percentageTokens": 36.2,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/routes/inventory-kardex.routes.js": {
            "lines": 245,
            "tokens": 4218,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 66,
            "duplicatedTokens": 1333,
            "percentage": 26.94,
            "percentageTokens": 31.6,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/routes/interaction.routes.js": {
            "lines": 50,
            "tokens": 1923,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/routes/deal.routes.js": {
            "lines": 61,
            "tokens": 2448,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/routes/contact.routes.js": {
            "lines": 413,
            "tokens": 6623,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 249,
            "duplicatedTokens": 4236,
            "percentage": 60.29,
            "percentageTokens": 63.96,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/routes/company.routes.js": {
            "lines": 312,
            "tokens": 5015,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 216,
            "duplicatedTokens": 3626,
            "percentage": 69.23,
            "percentageTokens": 72.3,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/routes/basic-ai.routes.js": {
            "lines": 60,
            "tokens": 670,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/routes/architecture.routes.js": {
            "lines": 209,
            "tokens": 3685,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 98,
            "duplicatedTokens": 1946,
            "percentage": 46.89,
            "percentageTokens": 52.81,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/routes/agents.routes.js": {
            "lines": 221,
            "tokens": 1468,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/middleware/validation.middleware.js": {
            "lines": 36,
            "tokens": 335,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/middleware/response.middleware.js": {
            "lines": 46,
            "tokens": 492,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/middleware/error.middleware.js": {
            "lines": 56,
            "tokens": 546,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/middleware/base.middleware.js": {
            "lines": 228,
            "tokens": 2044,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/dto/user.dto.js": {
            "lines": 152,
            "tokens": 1987,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/dto/search.dto.js": {
            "lines": 132,
            "tokens": 1722,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/dto/product.dto.js": {
            "lines": 317,
            "tokens": 4702,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 66,
            "duplicatedTokens": 888,
            "percentage": 20.82,
            "percentageTokens": 18.89,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/dto/predictive-analytics.dto.js": {
            "lines": 211,
            "tokens": 3409,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 26,
            "duplicatedTokens": 613,
            "percentage": 12.32,
            "percentageTokens": 17.98,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/dto/organization.dto.js": {
            "lines": 208,
            "tokens": 2915,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/dto/invoice.dto.js": {
            "lines": 219,
            "tokens": 3429,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 20,
            "duplicatedTokens": 362,
            "percentage": 9.13,
            "percentageTokens": 10.56,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/dto/inventory-kardex.dto.js": {
            "lines": 242,
            "tokens": 3596,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/dto/interaction.dto.js": {
            "lines": 256,
            "tokens": 2995,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 68,
            "duplicatedTokens": 667,
            "percentage": 26.56,
            "percentageTokens": 22.27,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/dto/deal.dto.js": {
            "lines": 398,
            "tokens": 5117,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 119,
            "duplicatedTokens": 1660,
            "percentage": 29.9,
            "percentageTokens": 32.44,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/dto/database-schema.dto.js": {
            "lines": 542,
            "tokens": 8526,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 84,
            "duplicatedTokens": 1328,
            "percentage": 15.5,
            "percentageTokens": 15.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/dto/contact.dto.js": {
            "lines": 553,
            "tokens": 7853,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 52,
            "duplicatedTokens": 803,
            "percentage": 9.4,
            "percentageTokens": 10.23,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/dto/company.dto.js": {
            "lines": 373,
            "tokens": 5331,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 21,
            "duplicatedTokens": 327,
            "percentage": 5.63,
            "percentageTokens": 6.13,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/dto/base.dto.js": {
            "lines": 104,
            "tokens": 1279,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/dto/architecture.dto.js": {
            "lines": 233,
            "tokens": 3513,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 68,
            "duplicatedTokens": 1289,
            "percentage": 29.18,
            "percentageTokens": 36.69,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/controllers/user.controller.js": {
            "lines": 386,
            "tokens": 3449,
            "sources": 1,
            "clones": 23,
            "duplicatedLines": 291,
            "duplicatedTokens": 2494,
            "percentage": 75.39,
            "percentageTokens": 72.31,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/controllers/search.controller.js": {
            "lines": 141,
            "tokens": 1481,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/controllers/product.controller.js": {
            "lines": 580,
            "tokens": 6049,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 424,
            "duplicatedTokens": 4442,
            "percentage": 73.1,
            "percentageTokens": 73.43,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/controllers/predictive-analytics.controller.js": {
            "lines": 281,
            "tokens": 3276,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 40,
            "duplicatedTokens": 297,
            "percentage": 14.23,
            "percentageTokens": 9.07,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/controllers/invoice.controller.js": {
            "lines": 335,
            "tokens": 3928,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 14,
            "duplicatedTokens": 105,
            "percentage": 4.18,
            "percentageTokens": 2.67,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/controllers/inventory-kardex.controller.js": {
            "lines": 337,
            "tokens": 3920,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 39,
            "duplicatedTokens": 320,
            "percentage": 11.57,
            "percentageTokens": 8.16,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/controllers/interaction.controller.js": {
            "lines": 641,
            "tokens": 6951,
            "sources": 1,
            "clones": 41,
            "duplicatedLines": 890,
            "duplicatedTokens": 9234,
            "percentage": 138.85,
            "percentageTokens": 132.84,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/controllers/deal.controller.js": {
            "lines": 886,
            "tokens": 9706,
            "sources": 1,
            "clones": 39,
            "duplicatedLines": 1114,
            "duplicatedTokens": 11868,
            "percentage": 125.73,
            "percentageTokens": 122.27,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/controllers/contact.controller.js": {
            "lines": 959,
            "tokens": 9499,
            "sources": 1,
            "clones": 59,
            "duplicatedLines": 766,
            "duplicatedTokens": 5995,
            "percentage": 79.87,
            "percentageTokens": 63.11,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/controllers/company.controller.js": {
            "lines": 596,
            "tokens": 5699,
            "sources": 1,
            "clones": 34,
            "duplicatedLines": 449,
            "duplicatedTokens": 3559,
            "percentage": 75.34,
            "percentageTokens": 62.45,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/controllers/basic-ai.controller.js": {
            "lines": 297,
            "tokens": 2505,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 84,
            "duplicatedTokens": 680,
            "percentage": 28.28,
            "percentageTokens": 27.15,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/controllers/base.controller.js": {
            "lines": 110,
            "tokens": 1001,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/controllers/architecture.controller.js": {
            "lines": 327,
            "tokens": 3714,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 92,
            "duplicatedTokens": 847,
            "percentage": 28.13,
            "percentageTokens": 22.81,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/controllers/agents.controller.js": {
            "lines": 453,
            "tokens": 3955,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 114,
            "duplicatedTokens": 920,
            "percentage": 25.17,
            "percentageTokens": 23.26,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/performance/optimization.js": {
            "lines": 27,
            "tokens": 277,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/system-cockpit/system-health.service.js": {
            "lines": 332,
            "tokens": 2744,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/handlers/user-handlers.js": {
            "lines": 132,
            "tokens": 1451,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/basic-ai/basic-ai.service.js": {
            "lines": 382,
            "tokens": 3165,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 23,
            "duplicatedTokens": 202,
            "percentage": 6.02,
            "percentageTokens": 6.38,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/aggregates/user.js": {
            "lines": 129,
            "tokens": 1060,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/infrastructure/observability/tracing.service.js": {
            "lines": 263,
            "tokens": 2366,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 123,
            "duplicatedTokens": 1039,
            "percentage": 46.77,
            "percentageTokens": 43.91,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/infrastructure/observability/metrics.service.js": {
            "lines": 255,
            "tokens": 2622,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/infrastructure/observability/logger.service.js": {
            "lines": 213,
            "tokens": 2020,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/infrastructure/observability/health.service.js": {
            "lines": 352,
            "tokens": 3087,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/infrastructure/observability/dashboard.service.js": {
            "lines": 257,
            "tokens": 2408,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/infrastructure/observability/alerting.service.js": {
            "lines": 425,
            "tokens": 3887,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 13,
            "duplicatedTokens": 95,
            "percentage": 3.06,
            "percentageTokens": 2.44,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/value-objects/money.vo.js": {
            "lines": 181,
            "tokens": 2239,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/value-objects/email.vo.js": {
            "lines": 64,
            "tokens": 592,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/value-objects/address.vo.js": {
            "lines": 263,
            "tokens": 2253,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 44,
            "duplicatedTokens": 300,
            "percentage": 16.73,
            "percentageTokens": 13.32,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/services/user.domain.service.js": {
            "lines": 287,
            "tokens": 2737,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/entities/user.entity.js": {
            "lines": 207,
            "tokens": 1859,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 44,
            "duplicatedTokens": 354,
            "percentage": 21.26,
            "percentageTokens": 19.04,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/entities/search-result.entity.js": {
            "lines": 144,
            "tokens": 1685,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/entities/product.entity.js": {
            "lines": 200,
            "tokens": 2128,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 22,
            "duplicatedTokens": 200,
            "percentage": 11,
            "percentageTokens": 9.4,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/entities/predictive-analytics.entity.js": {
            "lines": 261,
            "tokens": 2502,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 94,
            "duplicatedTokens": 810,
            "percentage": 36.02,
            "percentageTokens": 32.37,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/entities/organization.entity.js": {
            "lines": 286,
            "tokens": 2434,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 77,
            "duplicatedTokens": 688,
            "percentage": 26.92,
            "percentageTokens": 28.27,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/entities/invoice.entity.js": {
            "lines": 260,
            "tokens": 2744,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 80,
            "percentage": 4.23,
            "percentageTokens": 2.92,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/entities/inventory-kardex.entity.js": {
            "lines": 334,
            "tokens": 3499,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/entities/interaction.entity.js": {
            "lines": 203,
            "tokens": 2026,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 82,
            "duplicatedTokens": 745,
            "percentage": 40.39,
            "percentageTokens": 36.77,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/entities/deal.entity.js": {
            "lines": 362,
            "tokens": 3814,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 91,
            "duplicatedTokens": 790,
            "percentage": 25.14,
            "percentageTokens": 20.71,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/entities/database-schema.entity.js": {
            "lines": 307,
            "tokens": 3314,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 43,
            "duplicatedTokens": 369,
            "percentage": 14.01,
            "percentageTokens": 11.13,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/entities/contact.entity.js": {
            "lines": 795,
            "tokens": 7899,
            "sources": 1,
            "clones": 11,
            "duplicatedLines": 241,
            "duplicatedTokens": 2454,
            "percentage": 30.31,
            "percentageTokens": 31.07,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/entities/company.entity.js": {
            "lines": 445,
            "tokens": 4290,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 180,
            "duplicatedTokens": 1812,
            "percentage": 40.45,
            "percentageTokens": 42.24,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/entities/base.entity.js": {
            "lines": 40,
            "tokens": 372,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/entities/architecture.entity.js": {
            "lines": 241,
            "tokens": 2563,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 40,
            "duplicatedTokens": 361,
            "percentage": 16.6,
            "percentageTokens": 14.09,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/db/partitions/partition-manager.service.js": {
            "lines": 373,
            "tokens": 4050,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 93,
            "percentage": 2.95,
            "percentageTokens": 2.3,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/db/optimization/database-optimizer.service.js": {
            "lines": 615,
            "tokens": 5028,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 28,
            "duplicatedTokens": 268,
            "percentage": 4.55,
            "percentageTokens": 5.33,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/db/indexes/index-manager.service.js": {
            "lines": 300,
            "tokens": 2768,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 93,
            "percentage": 3.67,
            "percentageTokens": 3.36,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/cockpit.api/src/app.js": {
            "lines": 35,
            "tokens": 478,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 20,
            "duplicatedTokens": 237,
            "percentage": 57.14,
            "percentageTokens": 49.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/cockpit.api/src/app-otel-snippet.js": {
            "lines": 16,
            "tokens": 184,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 16,
            "duplicatedTokens": 184,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/use-cases/base.use-case.js": {
            "lines": 69,
            "tokens": 595,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/services/user.application.service.js": {
            "lines": 253,
            "tokens": 2167,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 62,
            "duplicatedTokens": 442,
            "percentage": 24.51,
            "percentageTokens": 20.4,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/redis.service.js": {
            "lines": 23,
            "tokens": 154,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/database.service.js": {
            "lines": 14,
            "tokens": 92,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/hil/service.js": {
            "lines": 10,
            "tokens": 91,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/web-search.service.js": {
            "lines": 274,
            "tokens": 2990,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/stabilization.service.js": {
            "lines": 16,
            "tokens": 118,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/social-media-management.service.js": {
            "lines": 862,
            "tokens": 8162,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 27,
            "duplicatedTokens": 406,
            "percentage": 3.13,
            "percentageTokens": 4.97,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/sentiment-analysis.service.js": {
            "lines": 542,
            "tokens": 6246,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/security-config.service.js": {
            "lines": 393,
            "tokens": 2998,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 87,
            "duplicatedTokens": 411,
            "percentage": 22.14,
            "percentageTokens": 13.71,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/rls-tenant-policies.service.js": {
            "lines": 633,
            "tokens": 6018,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 61,
            "duplicatedTokens": 749,
            "percentage": 9.64,
            "percentageTokens": 12.45,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/products.service.js": {
            "lines": 18,
            "tokens": 169,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/predictive-ai.service.js": {
            "lines": 200,
            "tokens": 1954,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/observability-otel.service.js": {
            "lines": 525,
            "tokens": 4942,
            "sources": 1,
            "clones": 14,
            "duplicatedLines": 166,
            "duplicatedTokens": 1449,
            "percentage": 31.62,
            "percentageTokens": 29.32,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/next-ai-platform.service.js": {
            "lines": 23,
            "tokens": 179,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/mistral.local.js": {
            "lines": 10,
            "tokens": 165,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/memory.service.js": {
            "lines": 69,
            "tokens": 635,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 20,
            "duplicatedTokens": 164,
            "percentage": 28.99,
            "percentageTokens": 25.83,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/invoices.service.js": {
            "lines": 16,
            "tokens": 148,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/health-checks.service.js": {
            "lines": 21,
            "tokens": 144,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/gdpr-hitl.service.js": {
            "lines": 704,
            "tokens": 6745,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/finops.js": {
            "lines": 27,
            "tokens": 275,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/external-integrations.service.js": {
            "lines": 494,
            "tokens": 5908,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 40,
            "duplicatedTokens": 344,
            "percentage": 8.1,
            "percentageTokens": 5.82,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/email-marketing.service.js": {
            "lines": 826,
            "tokens": 7638,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 88,
            "duplicatedTokens": 1093,
            "percentage": 10.65,
            "percentageTokens": 14.31,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/document-management.service.js": {
            "lines": 679,
            "tokens": 6460,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 38,
            "duplicatedTokens": 440,
            "percentage": 5.6,
            "percentageTokens": 6.81,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/customer-support.service.js": {
            "lines": 765,
            "tokens": 6913,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 23,
            "duplicatedTokens": 305,
            "percentage": 3.01,
            "percentageTokens": 4.41,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/content-management.service.js": {
            "lines": 791,
            "tokens": 7635,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 75,
            "duplicatedTokens": 1115,
            "percentage": 9.48,
            "percentageTokens": 14.6,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/cockpit-integration.service.js": {
            "lines": 480,
            "tokens": 4915,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 80,
            "duplicatedTokens": 941,
            "percentage": 16.67,
            "percentageTokens": 19.15,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/cockpit-bff-live.service.js": {
            "lines": 356,
            "tokens": 3781,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/breaker.js": {
            "lines": 21,
            "tokens": 221,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/azure-openai.service.js": {
            "lines": 274,
            "tokens": 2545,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/azure-integration.service.js": {
            "lines": 345,
            "tokens": 3179,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/automl.service.js": {
            "lines": 268,
            "tokens": 2541,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/analytics.service.js": {
            "lines": 25,
            "tokens": 167,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/ai.js": {
            "lines": 99,
            "tokens": 1088,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/ai-training.service.js": {
            "lines": 599,
            "tokens": 4510,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/ai-security-compliance.service.js": {
            "lines": 757,
            "tokens": 6843,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 54,
            "duplicatedTokens": 572,
            "percentage": 7.13,
            "percentageTokens": 8.36,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/ai-performance-optimization.service.js": {
            "lines": 767,
            "tokens": 6794,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 46,
            "duplicatedTokens": 397,
            "percentage": 6,
            "percentageTokens": 5.84,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/ai-model-management.service.js": {
            "lines": 675,
            "tokens": 4837,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/ai-dashboard-consolidation.service.js": {
            "lines": 359,
            "tokens": 3965,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 122,
            "duplicatedTokens": 1457,
            "percentage": 33.98,
            "percentageTokens": 36.75,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/ai-cost-prediction.service.js": {
            "lines": 768,
            "tokens": 7667,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 82,
            "duplicatedTokens": 739,
            "percentage": 10.68,
            "percentageTokens": 9.64,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/ai-cost-optimization.service.js": {
            "lines": 819,
            "tokens": 7528,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 69,
            "duplicatedTokens": 715,
            "percentage": 8.42,
            "percentageTokens": 9.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/advanced-observability.service.js": {
            "lines": 381,
            "tokens": 3600,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/services/advanced-cicd.service.js": {
            "lines": 491,
            "tokens": 4685,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/security/security-manager.service.js": {
            "lines": 603,
            "tokens": 5273,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 13,
            "duplicatedTokens": 99,
            "percentage": 2.16,
            "percentageTokens": 1.88,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/security/rbac.service.js": {
            "lines": 564,
            "tokens": 6321,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/security/mfa.service.js": {
            "lines": 598,
            "tokens": 5034,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/workflows.js": {
            "lines": 405,
            "tokens": 3386,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/workers-integration.js": {
            "lines": 266,
            "tokens": 2584,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 128,
            "duplicatedTokens": 1118,
            "percentage": 48.12,
            "percentageTokens": 43.27,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/warmup.js": {
            "lines": 276,
            "tokens": 2722,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 14,
            "duplicatedTokens": 177,
            "percentage": 5.07,
            "percentageTokens": 6.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/supplier-scorecard.js": {
            "lines": 426,
            "tokens": 5016,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 26,
            "duplicatedTokens": 198,
            "percentage": 6.1,
            "percentageTokens": 3.95,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/stripe-receipts.js": {
            "lines": 306,
            "tokens": 3259,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 28,
            "duplicatedTokens": 210,
            "percentage": 9.15,
            "percentageTokens": 6.44,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/status.js": {
            "lines": 419,
            "tokens": 3672,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/stabilization.js": {
            "lines": 13,
            "tokens": 153,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/social-media-management.js": {
            "lines": 510,
            "tokens": 5536,
            "sources": 1,
            "clones": 26,
            "duplicatedLines": 327,
            "duplicatedTokens": 3139,
            "percentage": 64.12,
            "percentageTokens": 56.7,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/sepa.js": {
            "lines": 23,
            "tokens": 334,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/sepa-robust.js": {
            "lines": 299,
            "tokens": 3379,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 24,
            "duplicatedTokens": 172,
            "percentage": 8.03,
            "percentageTokens": 5.09,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/semantic-search-crm.js": {
            "lines": 359,
            "tokens": 4164,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 28,
            "duplicatedTokens": 210,
            "percentage": 7.8,
            "percentageTokens": 5.04,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/security.js": {
            "lines": 668,
            "tokens": 6955,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/security-config.js": {
            "lines": 423,
            "tokens": 3471,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/rls-tenant-policies.js": {
            "lines": 415,
            "tokens": 3614,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/rls-generativa.js": {
            "lines": 361,
            "tokens": 4042,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 86,
            "percentage": 3.32,
            "percentageTokens": 2.13,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/reportes-mensuales.js": {
            "lines": 427,
            "tokens": 4444,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 40,
            "duplicatedTokens": 297,
            "percentage": 9.37,
            "percentageTokens": 6.68,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/rbac-granular.js": {
            "lines": 311,
            "tokens": 2770,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/rate-limiting.js": {
            "lines": 410,
            "tokens": 4052,
            "sources": 1,
            "clones": 13,
            "duplicatedLines": 132,
            "duplicatedTokens": 1294,
            "percentage": 32.2,
            "percentageTokens": 31.93,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/prompt-library.js": {
            "lines": 159,
            "tokens": 1402,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/project-completion-deployment.js": {
            "lines": 502,
            "tokens": 4862,
            "sources": 1,
            "clones": 37,
            "duplicatedLines": 444,
            "duplicatedTokens": 3587,
            "percentage": 88.45,
            "percentageTokens": 73.78,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/progress.js": {
            "lines": 28,
            "tokens": 460,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/ping.js": {
            "lines": 11,
            "tokens": 106,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/performance.js": {
            "lines": 243,
            "tokens": 2454,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/performance-v2.js": {
            "lines": 412,
            "tokens": 4413,
            "sources": 1,
            "clones": 12,
            "duplicatedLines": 161,
            "duplicatedTokens": 1541,
            "percentage": 39.08,
            "percentageTokens": 34.92,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/openapi.js": {
            "lines": 288,
            "tokens": 1399,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/observability-otel.js": {
            "lines": 499,
            "tokens": 4192,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 64,
            "duplicatedTokens": 536,
            "percentage": 12.83,
            "percentageTokens": 12.79,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/notifications.js": {
            "lines": 755,
            "tokens": 7160,
            "sources": 1,
            "clones": 20,
            "duplicatedLines": 206,
            "duplicatedTokens": 2092,
            "percentage": 27.28,
            "percentageTokens": 29.22,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/next-ai-platform.js": {
            "lines": 255,
            "tokens": 2466,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 126,
            "duplicatedTokens": 1201,
            "percentage": 49.41,
            "percentageTokens": 48.7,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/monitoring.js": {
            "lines": 19,
            "tokens": 209,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/metrics.js": {
            "lines": 217,
            "tokens": 2420,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/memory-management.js": {
            "lines": 486,
            "tokens": 5215,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 119,
            "duplicatedTokens": 1063,
            "percentage": 24.49,
            "percentageTokens": 20.38,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/make-quotas.js": {
            "lines": 239,
            "tokens": 2067,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/invoices.js": {
            "lines": 377,
            "tokens": 3879,
            "sources": 1,
            "clones": 15,
            "duplicatedLines": 188,
            "duplicatedTokens": 1936,
            "percentage": 49.87,
            "percentageTokens": 49.91,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/inventory-kardex.js": {
            "lines": 442,
            "tokens": 4841,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 20,
            "duplicatedTokens": 145,
            "percentage": 4.52,
            "percentageTokens": 3,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/interactions.js": {
            "lines": 293,
            "tokens": 2631,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 74,
            "duplicatedTokens": 546,
            "percentage": 25.26,
            "percentageTokens": 20.75,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/interactions-sas-av.js": {
            "lines": 371,
            "tokens": 4553,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 24,
            "duplicatedTokens": 172,
            "percentage": 6.47,
            "percentageTokens": 3.78,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/index.js": {
            "lines": 49,
            "tokens": 504,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/hitl-v2.js": {
            "lines": 455,
            "tokens": 4638,
            "sources": 1,
            "clones": 18,
            "duplicatedLines": 276,
            "duplicatedTokens": 2195,
            "percentage": 60.66,
            "percentageTokens": 47.33,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/hitl-ownership-sla.js": {
            "lines": 579,
            "tokens": 6896,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 83,
            "percentage": 2.07,
            "percentageTokens": 1.2,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/hil.js": {
            "lines": 56,
            "tokens": 1040,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/hil.approvals.v2.js": {
            "lines": 54,
            "tokens": 848,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 22,
            "duplicatedTokens": 326,
            "percentage": 40.74,
            "percentageTokens": 38.44,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/hil.approvals.js": {
            "lines": 27,
            "tokens": 447,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/hil.alias.js": {
            "lines": 12,
            "tokens": 152,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/health.js": {
            "lines": 182,
            "tokens": 1798,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/health-checks.js": {
            "lines": 13,
            "tokens": 153,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/graph-wrappers.js": {
            "lines": 469,
            "tokens": 4574,
            "sources": 1,
            "clones": 17,
            "duplicatedLines": 244,
            "duplicatedTokens": 2008,
            "percentage": 52.03,
            "percentageTokens": 43.9,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/graph-chaos-light.js": {
            "lines": 190,
            "tokens": 1818,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/gdpr.js": {
            "lines": 91,
            "tokens": 1192,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/gdpr-hitl.js": {
            "lines": 437,
            "tokens": 4478,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 97,
            "percentage": 2.52,
            "percentageTokens": 2.17,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/gdpr-compliance.js": {
            "lines": 714,
            "tokens": 7269,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 97,
            "percentage": 1.54,
            "percentageTokens": 1.33,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/fiscalidad-regional.js": {
            "lines": 411,
            "tokens": 4578,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 26,
            "duplicatedTokens": 191,
            "percentage": 6.33,
            "percentageTokens": 4.17,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/fiscalidad-regional-ue.js": {
            "lines": 423,
            "tokens": 4136,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 14,
            "duplicatedTokens": 105,
            "percentage": 3.31,
            "percentageTokens": 2.54,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/finops-admin.js": {
            "lines": 203,
            "tokens": 1916,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 64,
            "duplicatedTokens": 528,
            "percentage": 31.53,
            "percentageTokens": 27.56,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/external-integrations.js": {
            "lines": 503,
            "tokens": 4860,
            "sources": 1,
            "clones": 28,
            "duplicatedLines": 372,
            "duplicatedTokens": 2506,
            "percentage": 73.96,
            "percentageTokens": 51.56,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/events.js": {
            "lines": 111,
            "tokens": 1017,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 102,
            "percentage": 9.01,
            "percentageTokens": 10.03,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/email-marketing.js": {
            "lines": 569,
            "tokens": 6188,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 140,
            "duplicatedTokens": 1581,
            "percentage": 24.6,
            "percentageTokens": 25.55,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/dunning-solid.js": {
            "lines": 456,
            "tokens": 5056,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 80,
            "duplicatedTokens": 715,
            "percentage": 17.54,
            "percentageTokens": 14.14,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/dunning-3-toques.js": {
            "lines": 377,
            "tokens": 3729,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 68,
            "duplicatedTokens": 618,
            "percentage": 18.04,
            "percentageTokens": 16.57,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/document-management.js": {
            "lines": 424,
            "tokens": 4505,
            "sources": 1,
            "clones": 12,
            "duplicatedLines": 160,
            "duplicatedTokens": 1635,
            "percentage": 37.74,
            "percentageTokens": 36.29,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/dlg-grooming.js": {
            "lines": 358,
            "tokens": 4140,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 36,
            "duplicatedTokens": 323,
            "percentage": 10.06,
            "percentageTokens": 7.8,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/deals.js": {
            "lines": 518,
            "tokens": 5347,
            "sources": 1,
            "clones": 13,
            "duplicatedLines": 178,
            "duplicatedTokens": 1592,
            "percentage": 34.36,
            "percentageTokens": 29.77,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/deals-nba.js": {
            "lines": 329,
            "tokens": 3264,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 46,
            "duplicatedTokens": 479,
            "percentage": 13.98,
            "percentageTokens": 14.68,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/database-optimization.js": {
            "lines": 458,
            "tokens": 4576,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/data-analytics-dashboard.js": {
            "lines": 527,
            "tokens": 5215,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 84,
            "duplicatedTokens": 1159,
            "percentage": 15.94,
            "percentageTokens": 22.22,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/customer-support.js": {
            "lines": 425,
            "tokens": 4256,
            "sources": 1,
            "clones": 11,
            "duplicatedLines": 128,
            "duplicatedTokens": 1255,
            "percentage": 30.12,
            "percentageTokens": 29.49,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/csp-sri-banking.js": {
            "lines": 388,
            "tokens": 3858,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 27,
            "duplicatedTokens": 335,
            "percentage": 6.96,
            "percentageTokens": 8.68,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/content-management.js": {
            "lines": 597,
            "tokens": 6854,
            "sources": 1,
            "clones": 18,
            "duplicatedLines": 268,
            "duplicatedTokens": 3149,
            "percentage": 44.89,
            "percentageTokens": 45.94,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/contacts.js": {
            "lines": 257,
            "tokens": 2574,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 103,
            "duplicatedTokens": 932,
            "percentage": 40.08,
            "percentageTokens": 36.21,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/contacts-simple.js": {
            "lines": 95,
            "tokens": 907,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 50,
            "duplicatedTokens": 383,
            "percentage": 52.63,
            "percentageTokens": 42.23,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/contacts-dedupe.js": {
            "lines": 300,
            "tokens": 3650,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/connection-pool.js": {
            "lines": 607,
            "tokens": 6267,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 36,
            "duplicatedTokens": 399,
            "percentage": 5.93,
            "percentageTokens": 6.37,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/configuration.js": {
            "lines": 493,
            "tokens": 4041,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 13,
            "duplicatedTokens": 86,
            "percentage": 2.64,
            "percentageTokens": 2.13,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/companies.js": {
            "lines": 249,
            "tokens": 2346,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 124,
            "duplicatedTokens": 1116,
            "percentage": 49.8,
            "percentageTokens": 47.57,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/companies-taxonomy.js": {
            "lines": 293,
            "tokens": 2720,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 127,
            "percentage": 3.41,
            "percentageTokens": 4.67,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/companies-simple.js": {
            "lines": 129,
            "tokens": 1217,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 71,
            "duplicatedTokens": 567,
            "percentage": 55.04,
            "percentageTokens": 46.59,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/cockpit.js": {
            "lines": 456,
            "tokens": 4869,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/cockpit-integration.js": {
            "lines": 284,
            "tokens": 3065,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 53,
            "duplicatedTokens": 571,
            "percentage": 18.66,
            "percentageTokens": 18.63,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/cockpit-bff-live.js": {
            "lines": 330,
            "tokens": 3175,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 70,
            "duplicatedTokens": 606,
            "percentage": 21.21,
            "percentageTokens": 19.09,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/centralized-logging.js": {
            "lines": 678,
            "tokens": 6961,
            "sources": 1,
            "clones": 17,
            "duplicatedLines": 287,
            "duplicatedTokens": 2737,
            "percentage": 42.33,
            "percentageTokens": 39.32,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/cache-warmup.js": {
            "lines": 159,
            "tokens": 1300,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/blue-green-deployment.js": {
            "lines": 332,
            "tokens": 3556,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 28,
            "duplicatedTokens": 210,
            "percentage": 8.43,
            "percentageTokens": 5.91,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/basic-ai.js": {
            "lines": 14,
            "tokens": 170,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/backup-recovery.js": {
            "lines": 556,
            "tokens": 5633,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 119,
            "duplicatedTokens": 1314,
            "percentage": 21.4,
            "percentageTokens": 23.33,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/azure-integration.js": {
            "lines": 284,
            "tokens": 2904,
            "sources": 1,
            "clones": 14,
            "duplicatedLines": 229,
            "duplicatedTokens": 1936,
            "percentage": 80.63,
            "percentageTokens": 66.67,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/automated-testing.js": {
            "lines": 540,
            "tokens": 5189,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 180,
            "duplicatedTokens": 1552,
            "percentage": 33.33,
            "percentageTokens": 29.91,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/automated-documentation.js": {
            "lines": 515,
            "tokens": 4921,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 100,
            "duplicatedTokens": 861,
            "percentage": 19.42,
            "percentageTokens": 17.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/auth.js": {
            "lines": 516,
            "tokens": 4988,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 76,
            "duplicatedTokens": 804,
            "percentage": 14.73,
            "percentageTokens": 16.12,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/audit-trail-crm-undo.js": {
            "lines": 345,
            "tokens": 3828,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 116,
            "percentage": 2.9,
            "percentageTokens": 3.03,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/antivirus-global.js": {
            "lines": 401,
            "tokens": 4144,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 16,
            "duplicatedTokens": 156,
            "percentage": 3.99,
            "percentageTokens": 3.76,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/analytics.js": {
            "lines": 13,
            "tokens": 150,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/ai-training.js": {
            "lines": 458,
            "tokens": 4198,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 108,
            "duplicatedTokens": 882,
            "percentage": 23.58,
            "percentageTokens": 21.01,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/ai-security-compliance.js": {
            "lines": 410,
            "tokens": 3784,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 145,
            "duplicatedTokens": 1299,
            "percentage": 35.37,
            "percentageTokens": 34.33,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/ai-performance-optimization.js": {
            "lines": 507,
            "tokens": 4530,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 56,
            "duplicatedTokens": 449,
            "percentage": 11.05,
            "percentageTokens": 9.91,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/ai-model-management.js": {
            "lines": 536,
            "tokens": 5288,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 115,
            "duplicatedTokens": 980,
            "percentage": 21.46,
            "percentageTokens": 18.53,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/ai-dashboard-consolidation.js": {
            "lines": 263,
            "tokens": 2712,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 103,
            "duplicatedTokens": 1091,
            "percentage": 39.16,
            "percentageTokens": 40.23,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/ai-cost-prediction.js": {
            "lines": 657,
            "tokens": 5400,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 59,
            "duplicatedTokens": 480,
            "percentage": 8.98,
            "percentageTokens": 8.89,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/ai-cost-optimization.js": {
            "lines": 551,
            "tokens": 5042,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 84,
            "duplicatedTokens": 813,
            "percentage": 15.25,
            "percentageTokens": 16.12,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/ai-chat-advanced.js": {
            "lines": 456,
            "tokens": 4922,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 70,
            "duplicatedTokens": 526,
            "percentage": 15.35,
            "percentageTokens": 10.69,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/ai-budget-ux.js": {
            "lines": 389,
            "tokens": 3714,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 24,
            "duplicatedTokens": 242,
            "percentage": 6.17,
            "percentageTokens": 6.52,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/ai-analytics.js": {
            "lines": 278,
            "tokens": 2572,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 27,
            "duplicatedTokens": 220,
            "percentage": 9.71,
            "percentageTokens": 8.55,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/agents.js": {
            "lines": 105,
            "tokens": 1505,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/agents-simple.js": {
            "lines": 385,
            "tokens": 5202,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/advanced-security.js": {
            "lines": 339,
            "tokens": 3409,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 68,
            "duplicatedTokens": 476,
            "percentage": 20.06,
            "percentageTokens": 13.96,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/advanced-security-framework.js": {
            "lines": 368,
            "tokens": 3700,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 34,
            "duplicatedTokens": 430,
            "percentage": 9.24,
            "percentageTokens": 11.62,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/advanced-reporting.js": {
            "lines": 349,
            "tokens": 3168,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 122,
            "duplicatedTokens": 926,
            "percentage": 34.96,
            "percentageTokens": 29.23,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/advanced-performance-monitoring.js": {
            "lines": 408,
            "tokens": 3877,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 55,
            "duplicatedTokens": 384,
            "percentage": 13.48,
            "percentageTokens": 9.9,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/advanced-observability.js": {
            "lines": 474,
            "tokens": 4913,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/advanced-metrics-alerts.js": {
            "lines": 615,
            "tokens": 5942,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 221,
            "duplicatedTokens": 1911,
            "percentage": 35.93,
            "percentageTokens": 32.16,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/advanced-features.js": {
            "lines": 353,
            "tokens": 4046,
            "sources": 1,
            "clones": 28,
            "duplicatedLines": 308,
            "duplicatedTokens": 2992,
            "percentage": 87.25,
            "percentageTokens": 73.95,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/advanced-error-management.js": {
            "lines": 511,
            "tokens": 6025,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 54,
            "duplicatedTokens": 449,
            "percentage": 10.57,
            "percentageTokens": 7.45,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/advanced-deployment-automation.js": {
            "lines": 608,
            "tokens": 5748,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 68,
            "duplicatedTokens": 474,
            "percentage": 11.18,
            "percentageTokens": 8.25,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/advanced-configuration-management.js": {
            "lines": 694,
            "tokens": 7047,
            "sources": 1,
            "clones": 12,
            "duplicatedLines": 140,
            "duplicatedTokens": 1469,
            "percentage": 20.17,
            "percentageTokens": 20.85,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/advanced-cicd.js": {
            "lines": 465,
            "tokens": 4437,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 81,
            "duplicatedTokens": 589,
            "percentage": 17.42,
            "percentageTokens": 13.27,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/advanced-audit-compliance.js": {
            "lines": 541,
            "tokens": 5252,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 44,
            "duplicatedTokens": 371,
            "percentage": 8.13,
            "percentageTokens": 7.06,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/advanced-analytics.js": {
            "lines": 222,
            "tokens": 2143,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/advanced-ai-features.js": {
            "lines": 358,
            "tokens": 3377,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 95,
            "duplicatedTokens": 905,
            "percentage": 26.54,
            "percentageTokens": 26.8,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/routes/admin.finops.js": {
            "lines": 54,
            "tokens": 700,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/presentation/index.js": {
            "lines": 32,
            "tokens": 374,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/openapi/spec.js": {
            "lines": 580,
            "tokens": 4304,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 24,
            "duplicatedTokens": 190,
            "percentage": 4.14,
            "percentageTokens": 4.41,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/validation.middleware.js": {
            "lines": 115,
            "tokens": 1353,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 32,
            "duplicatedTokens": 236,
            "percentage": 27.83,
            "percentageTokens": 17.44,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/validation.js": {
            "lines": 196,
            "tokens": 2214,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/trace-propagation.middleware.js": {
            "lines": 254,
            "tokens": 2407,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 90,
            "percentage": 4.33,
            "percentageTokens": 3.74,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/security.middleware.js": {
            "lines": 245,
            "tokens": 2581,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 152,
            "percentage": 4.9,
            "percentageTokens": 5.89,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/security.js": {
            "lines": 329,
            "tokens": 3112,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 152,
            "percentage": 3.65,
            "percentageTokens": 4.88,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/security-enhanced.middleware.js": {
            "lines": 419,
            "tokens": 3486,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 87,
            "duplicatedTokens": 411,
            "percentage": 20.76,
            "percentageTokens": 11.79,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/rls.js": {
            "lines": 194,
            "tokens": 1688,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/rls-tenant.middleware.js": {
            "lines": 385,
            "tokens": 3341,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/response-optimizer.js": {
            "lines": 237,
            "tokens": 2387,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/raw-body.js": {
            "lines": 15,
            "tokens": 157,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/rate-limiting.js": {
            "lines": 162,
            "tokens": 1579,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/rate-limiter.js": {
            "lines": 273,
            "tokens": 2531,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/rate-limit-org.js": {
            "lines": 309,
            "tokens": 2774,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/performance.middleware.js": {
            "lines": 213,
            "tokens": 2368,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/org.js": {
            "lines": 24,
            "tokens": 328,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/observability.js": {
            "lines": 163,
            "tokens": 1984,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/metrics.js": {
            "lines": 230,
            "tokens": 2021,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/latency.js": {
            "lines": 17,
            "tokens": 186,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/gateway.js": {
            "lines": 211,
            "tokens": 2141,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 20,
            "duplicatedTokens": 222,
            "percentage": 9.48,
            "percentageTokens": 10.37,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/finops.js": {
            "lines": 25,
            "tokens": 340,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/finops.guard.js": {
            "lines": 73,
            "tokens": 1075,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/finops-enforce.js": {
            "lines": 171,
            "tokens": 1722,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/finops-enforce-v2.js": {
            "lines": 351,
            "tokens": 3709,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/feature-flags.js": {
            "lines": 161,
            "tokens": 1597,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/error-handler.js": {
            "lines": 202,
            "tokens": 1959,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/correlation.js": {
            "lines": 202,
            "tokens": 1792,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/chaos.js": {
            "lines": 90,
            "tokens": 1096,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/auth.js": {
            "lines": 42,
            "tokens": 531,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/aadRole.js": {
            "lines": 10,
            "tokens": 152,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/middleware/aad.js": {
            "lines": 31,
            "tokens": 434,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/workflows.service.js": {
            "lines": 547,
            "tokens": 6134,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/workflows.js": {
            "lines": 622,
            "tokens": 7019,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 22,
            "duplicatedTokens": 182,
            "percentage": 3.54,
            "percentageTokens": 2.59,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/workflows-simple.js": {
            "lines": 28,
            "tokens": 266,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/workers-integration.service.js": {
            "lines": 351,
            "tokens": 2860,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/warmup.service.js": {
            "lines": 430,
            "tokens": 4030,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/warmup-system.service.js": {
            "lines": 389,
            "tokens": 3936,
            "sources": 1,
            "clones": 14,
            "duplicatedLines": 154,
            "duplicatedTokens": 1778,
            "percentage": 39.59,
            "percentageTokens": 45.17,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/validation-manager.service.js": {
            "lines": 366,
            "tokens": 4300,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/tracing.js": {
            "lines": 197,
            "tokens": 2213,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/trace.js": {
            "lines": 64,
            "tokens": 642,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/threat-detection.service.js": {
            "lines": 552,
            "tokens": 5347,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/testing-framework.js": {
            "lines": 279,
            "tokens": 2497,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/swagger-config.js": {
            "lines": 722,
            "tokens": 4057,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/supplier-scorecard.service.js": {
            "lines": 666,
            "tokens": 7223,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 45,
            "duplicatedTokens": 369,
            "percentage": 6.76,
            "percentageTokens": 5.11,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/structured-logger.js": {
            "lines": 124,
            "tokens": 1446,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/stripe-receipts.service.js": {
            "lines": 415,
            "tokens": 4767,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/sse-manager.js": {
            "lines": 192,
            "tokens": 1761,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/smart-cache.service.js": {
            "lines": 395,
            "tokens": 3970,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/service-mesh.js": {
            "lines": 221,
            "tokens": 2252,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/service-discovery.js": {
            "lines": 256,
            "tokens": 2543,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/sepa.service.js": {
            "lines": 743,
            "tokens": 7717,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/sepa-robust.service.js": {
            "lines": 569,
            "tokens": 6061,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 107,
            "percentage": 1.93,
            "percentageTokens": 1.77,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/sepa-parser.service.js": {
            "lines": 191,
            "tokens": 1866,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 22,
            "duplicatedTokens": 222,
            "percentage": 11.52,
            "percentageTokens": 11.9,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/semantic-search-crm.service.js": {
            "lines": 599,
            "tokens": 6097,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/security.service.js": {
            "lines": 320,
            "tokens": 3204,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 239,
            "duplicatedTokens": 2492,
            "percentage": 74.69,
            "percentageTokens": 77.78,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/security.js": {
            "lines": 468,
            "tokens": 4322,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 101,
            "duplicatedTokens": 1092,
            "percentage": 21.58,
            "percentageTokens": 25.27,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/security-manager.service.js": {
            "lines": 433,
            "tokens": 4568,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/security-enhanced.service.js": {
            "lines": 35,
            "tokens": 357,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/security-consolidated.service.js": {
            "lines": 816,
            "tokens": 7919,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 326,
            "duplicatedTokens": 3348,
            "percentage": 39.95,
            "percentageTokens": 42.28,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/security-compliance-enhanced.service.js": {
            "lines": 707,
            "tokens": 5660,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/rule-engine.service.js": {
            "lines": 333,
            "tokens": 3099,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/rls.js": {
            "lines": 299,
            "tokens": 2433,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/rls-policy-validator.service.js": {
            "lines": 550,
            "tokens": 4834,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/rls-policy-generator.service.js": {
            "lines": 611,
            "tokens": 4471,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 216,
            "duplicatedTokens": 1258,
            "percentage": 35.35,
            "percentageTokens": 28.14,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/rls-policy-deployer.service.js": {
            "lines": 363,
            "tokens": 3636,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/rls-generativa.service.js": {
            "lines": 639,
            "tokens": 6276,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 61,
            "duplicatedTokens": 749,
            "percentage": 9.55,
            "percentageTokens": 11.93,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/rls-cicd.service.js": {
            "lines": 528,
            "tokens": 3118,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/resource-management.service.js": {
            "lines": 53,
            "tokens": 547,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/request-tracing.service.js": {
            "lines": 45,
            "tokens": 416,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/reporting-engine.service.js": {
            "lines": 549,
            "tokens": 5674,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/reportes-mensuales.service.js": {
            "lines": 576,
            "tokens": 5084,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/redis.service.js": {
            "lines": 17,
            "tokens": 147,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/reconciliation.service.js": {
            "lines": 125,
            "tokens": 1361,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/real-time-collaboration.js": {
            "lines": 652,
            "tokens": 6386,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 20,
            "duplicatedTokens": 162,
            "percentage": 3.07,
            "percentageTokens": 2.54,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/rbac.service.js": {
            "lines": 469,
            "tokens": 5097,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/rbac-simple.js": {
            "lines": 126,
            "tokens": 1412,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 79,
            "duplicatedTokens": 784,
            "percentage": 62.7,
            "percentageTokens": 55.52,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/rbac-granular.js": {
            "lines": 252,
            "tokens": 2616,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 29,
            "duplicatedTokens": 242,
            "percentage": 11.51,
            "percentageTokens": 9.25,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/rbac-basic.js": {
            "lines": 113,
            "tokens": 1207,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 50,
            "duplicatedTokens": 542,
            "percentage": 44.25,
            "percentageTokens": 44.9,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/rate-limiting.service.js": {
            "lines": 45,
            "tokens": 418,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/rate-limiting.js": {
            "lines": 238,
            "tokens": 2561,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/quiet-hours.service.js": {
            "lines": 243,
            "tokens": 2722,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 227,
            "duplicatedTokens": 2530,
            "percentage": 93.42,
            "percentageTokens": 92.95,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/quiet-hours-oncall-consolidated.service.js": {
            "lines": 835,
            "tokens": 8621,
            "sources": 1,
            "clones": 19,
            "duplicatedLines": 398,
            "duplicatedTokens": 4475,
            "percentage": 47.66,
            "percentageTokens": 51.91,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/prompt-library.service.js": {
            "lines": 136,
            "tokens": 1430,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/project-completion-deployment.service.js": {
            "lines": 788,
            "tokens": 7753,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 134,
            "percentage": 1.52,
            "percentageTokens": 1.73,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/process-manager.js": {
            "lines": 337,
            "tokens": 3092,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/performance-optimizer.service.js": {
            "lines": 354,
            "tokens": 3282,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 28,
            "duplicatedTokens": 268,
            "percentage": 7.91,
            "percentageTokens": 8.17,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/performance-optimizer.js": {
            "lines": 307,
            "tokens": 2974,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/performance-optimizer-v3.service.js": {
            "lines": 357,
            "tokens": 2891,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 130,
            "percentage": 3.36,
            "percentageTokens": 4.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/performance-optimizer-v2.service.js": {
            "lines": 436,
            "tokens": 3808,
            "sources": 1,
            "clones": 12,
            "duplicatedLines": 277,
            "duplicatedTokens": 2549,
            "percentage": 63.53,
            "percentageTokens": 66.94,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/performance-optimization.service.js": {
            "lines": 374,
            "tokens": 4129,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/oncall.service.js": {
            "lines": 267,
            "tokens": 2959,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 160,
            "duplicatedTokens": 1762,
            "percentage": 59.93,
            "percentageTokens": 59.55,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/observability.js": {
            "lines": 135,
            "tokens": 1277,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/notifications.js": {
            "lines": 756,
            "tokens": 6386,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/notification-intelligence.service.js": {
            "lines": 428,
            "tokens": 4222,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/monitoring.service.js": {
            "lines": 484,
            "tokens": 5068,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/monitoring-alerts.service.js": {
            "lines": 479,
            "tokens": 4183,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 25,
            "duplicatedTokens": 201,
            "percentage": 5.22,
            "percentageTokens": 4.81,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/metrics.old.js": {
            "lines": 213,
            "tokens": 2474,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/metrics.new.js": {
            "lines": 45,
            "tokens": 398,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 36,
            "duplicatedTokens": 338,
            "percentage": 80,
            "percentageTokens": 84.92,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/metrics.js": {
            "lines": 87,
            "tokens": 775,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 36,
            "duplicatedTokens": 338,
            "percentage": 41.38,
            "percentageTokens": 43.61,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/memory-manager.service.js": {
            "lines": 445,
            "tokens": 4381,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 30,
            "duplicatedTokens": 536,
            "percentage": 6.74,
            "percentageTokens": 12.23,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/matching-engine.service.js": {
            "lines": 190,
            "tokens": 1865,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/make-quotas.service.js": {
            "lines": 186,
            "tokens": 1862,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/logger.js": {
            "lines": 153,
            "tokens": 1520,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/inventory.js": {
            "lines": 673,
            "tokens": 7570,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/inventory-kardex.service.js": {
            "lines": 680,
            "tokens": 7444,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 17,
            "duplicatedTokens": 131,
            "percentage": 2.5,
            "percentageTokens": 1.76,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/interactions.service.js": {
            "lines": 505,
            "tokens": 5652,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 13,
            "duplicatedTokens": 93,
            "percentage": 2.57,
            "percentageTokens": 1.65,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/interactions-sas-av.service.js": {
            "lines": 657,
            "tokens": 6720,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 17,
            "duplicatedTokens": 131,
            "percentage": 2.59,
            "percentageTokens": 1.95,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/intelligent-search.service.js": {
            "lines": 342,
            "tokens": 3563,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/intelligent-reporting.service.js": {
            "lines": 489,
            "tokens": 5158,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 26,
            "duplicatedTokens": 224,
            "percentage": 5.32,
            "percentageTokens": 4.34,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/integrations.js": {
            "lines": 184,
            "tokens": 1664,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/hitl-v2.service.js": {
            "lines": 434,
            "tokens": 4365,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/hitl-ownership-sla.service.js": {
            "lines": 669,
            "tokens": 7754,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/health-monitor.js": {
            "lines": 396,
            "tokens": 3810,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/health-modes.js": {
            "lines": 157,
            "tokens": 1433,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/health-check.service.js": {
            "lines": 203,
            "tokens": 2093,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/graph-wrappers.service.js": {
            "lines": 422,
            "tokens": 3438,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/graph-chaos-light.service.js": {
            "lines": 268,
            "tokens": 2487,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/graceful-shutdown.service.js": {
            "lines": 42,
            "tokens": 370,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/gdpr-export.service.js": {
            "lines": 351,
            "tokens": 3086,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 223,
            "duplicatedTokens": 1657,
            "percentage": 63.53,
            "percentageTokens": 53.69,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/gdpr-erase.service.js": {
            "lines": 317,
            "tokens": 3189,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 35,
            "duplicatedTokens": 367,
            "percentage": 11.04,
            "percentageTokens": 11.51,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/gdpr-consolidated.service.js": {
            "lines": 929,
            "tokens": 9112,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 278,
            "duplicatedTokens": 2196,
            "percentage": 29.92,
            "percentageTokens": 24.1,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/gdpr-audit.service.js": {
            "lines": 303,
            "tokens": 2881,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/gateway.js": {
            "lines": 356,
            "tokens": 3571,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/fiscalidad-regional.service.js": {
            "lines": 507,
            "tokens": 5121,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/fiscalidad-regional-ue.service.js": {
            "lines": 384,
            "tokens": 3842,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/finops.js": {
            "lines": 399,
            "tokens": 4504,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 161,
            "duplicatedTokens": 1870,
            "percentage": 40.35,
            "percentageTokens": 41.52,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/finops-consolidated.service.js": {
            "lines": 769,
            "tokens": 8407,
            "sources": 1,
            "clones": 18,
            "duplicatedLines": 374,
            "duplicatedTokens": 4252,
            "percentage": 48.63,
            "percentageTokens": 50.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/executive-dashboard.service.js": {
            "lines": 39,
            "tokens": 386,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/events.js": {
            "lines": 311,
            "tokens": 3092,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/escalation.service.js": {
            "lines": 336,
            "tokens": 3201,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 39,
            "duplicatedTokens": 403,
            "percentage": 11.61,
            "percentageTokens": 12.59,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/errors.js": {
            "lines": 91,
            "tokens": 1116,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/error-recovery.service.js": {
            "lines": 38,
            "tokens": 441,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/error-manager.service.js": {
            "lines": 397,
            "tokens": 4313,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/error-handler.service.js": {
            "lines": 312,
            "tokens": 2801,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/error-handler.js": {
            "lines": 181,
            "tokens": 1591,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/dunning-solid.service.js": {
            "lines": 484,
            "tokens": 4758,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 97,
            "percentage": 2.48,
            "percentageTokens": 2.04,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/dunning-3-toques.service.js": {
            "lines": 357,
            "tokens": 3669,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/dlg-grooming.service.js": {
            "lines": 766,
            "tokens": 8022,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 22,
            "duplicatedTokens": 262,
            "percentage": 2.87,
            "percentageTokens": 3.27,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/distributed-cache.js": {
            "lines": 357,
            "tokens": 3360,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/deals.service.js": {
            "lines": 555,
            "tokens": 5969,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 39,
            "duplicatedTokens": 383,
            "percentage": 7.03,
            "percentageTokens": 6.42,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/deals-nba.service.js": {
            "lines": 394,
            "tokens": 3947,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 26,
            "duplicatedTokens": 267,
            "percentage": 6.6,
            "percentageTokens": 6.76,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/database.service.js": {
            "lines": 10,
            "tokens": 88,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/database.js": {
            "lines": 65,
            "tokens": 675,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/database-pool.js": {
            "lines": 411,
            "tokens": 3842,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/data-validator.js": {
            "lines": 418,
            "tokens": 3874,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/data-encryption.service.js": {
            "lines": 47,
            "tokens": 511,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/data-analytics-dashboard.service.js": {
            "lines": 643,
            "tokens": 7320,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 71,
            "duplicatedTokens": 1073,
            "percentage": 11.04,
            "percentageTokens": 14.66,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/csp-sri-banking.service.js": {
            "lines": 500,
            "tokens": 5529,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 27,
            "duplicatedTokens": 335,
            "percentage": 5.4,
            "percentageTokens": 6.06,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/cost-tracker.service.js": {
            "lines": 424,
            "tokens": 4613,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 169,
            "duplicatedTokens": 2004,
            "percentage": 39.86,
            "percentageTokens": 43.44,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/cost-optimizer.service.js": {
            "lines": 525,
            "tokens": 5015,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/contacts-dedupe.service.js": {
            "lines": 460,
            "tokens": 4986,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/connection-pool.service.js": {
            "lines": 571,
            "tokens": 5486,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/configuration.service.js": {
            "lines": 375,
            "tokens": 3904,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 13,
            "duplicatedTokens": 242,
            "percentage": 3.47,
            "percentageTokens": 6.2,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/configuration.js": {
            "lines": 371,
            "tokens": 3479,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/config-validation.service.js": {
            "lines": 43,
            "tokens": 422,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/comprehensive-audit.service.js": {
            "lines": 612,
            "tokens": 6706,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/compliance-management.service.js": {
            "lines": 480,
            "tokens": 4878,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 87,
            "duplicatedTokens": 856,
            "percentage": 18.13,
            "percentageTokens": 17.55,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/companies-taxonomy.service.js": {
            "lines": 144,
            "tokens": 1502,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/clients.js": {
            "lines": 24,
            "tokens": 219,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/circuit-breaker.service.js": {
            "lines": 185,
            "tokens": 1797,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/centralized-logging.service.js": {
            "lines": 748,
            "tokens": 8327,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 136,
            "duplicatedTokens": 1511,
            "percentage": 18.18,
            "percentageTokens": 18.15,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/cache.service.js": {
            "lines": 269,
            "tokens": 2781,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/cache.js": {
            "lines": 299,
            "tokens": 2772,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/cache-warmup.service.js": {
            "lines": 224,
            "tokens": 2048,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/cache-manager.service.js": {
            "lines": 342,
            "tokens": 3347,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/business-intelligence.service.js": {
            "lines": 545,
            "tokens": 5471,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/budget-manager.service.js": {
            "lines": 473,
            "tokens": 4951,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 44,
            "duplicatedTokens": 378,
            "percentage": 9.3,
            "percentageTokens": 7.63,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/blue-green-deployment.service.js": {
            "lines": 576,
            "tokens": 5673,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/backup-recovery.service.js": {
            "lines": 766,
            "tokens": 8071,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 95,
            "duplicatedTokens": 1132,
            "percentage": 12.4,
            "percentageTokens": 14.03,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/backup-recovery-automated.service.js": {
            "lines": 607,
            "tokens": 5627,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/automated-testing.service.js": {
            "lines": 581,
            "tokens": 6393,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/automated-documentation.service.js": {
            "lines": 902,
            "tokens": 8472,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 134,
            "percentage": 1.33,
            "percentageTokens": 1.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/auth.service.js": {
            "lines": 406,
            "tokens": 3830,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/auth.js": {
            "lines": 94,
            "tokens": 794,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/audit-trail-crm-undo.service.js": {
            "lines": 359,
            "tokens": 3611,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 116,
            "percentage": 2.79,
            "percentageTokens": 3.21,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/api-versioning.service.js": {
            "lines": 384,
            "tokens": 3495,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/api-gateway.service.js": {
            "lines": 392,
            "tokens": 3271,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/api-gateway-enhanced.service.js": {
            "lines": 530,
            "tokens": 4933,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/antivirus-global.service.js": {
            "lines": 382,
            "tokens": 3553,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 16,
            "duplicatedTokens": 156,
            "percentage": 4.19,
            "percentageTokens": 4.39,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/analytics.js": {
            "lines": 654,
            "tokens": 5914,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/analytics-schemas.js": {
            "lines": 68,
            "tokens": 691,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/analytics-consolidated.service.js": {
            "lines": 691,
            "tokens": 6588,
            "sources": 1,
            "clones": 17,
            "duplicatedLines": 428,
            "duplicatedTokens": 4183,
            "percentage": 61.94,
            "percentageTokens": 63.49,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/alerts.js": {
            "lines": 358,
            "tokens": 3587,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 111,
            "percentage": 2.79,
            "percentageTokens": 3.09,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/alerting-system.js": {
            "lines": 406,
            "tokens": 3560,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 52,
            "duplicatedTokens": 410,
            "percentage": 12.81,
            "percentageTokens": 11.52,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/ai-router.js": {
            "lines": 24,
            "tokens": 196,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/ai-ml-types.js": {
            "lines": 38,
            "tokens": 594,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/ai-chat-advanced.service.js": {
            "lines": 589,
            "tokens": 6173,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/ai-budget-ux.service.js": {
            "lines": 485,
            "tokens": 5385,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/ai-agents-registry.service.js": {
            "lines": 937,
            "tokens": 9364,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/agent-runtime.service.js": {
            "lines": 572,
            "tokens": 6043,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 36,
            "duplicatedTokens": 404,
            "percentage": 6.29,
            "percentageTokens": 6.69,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/advanced-security.js": {
            "lines": 822,
            "tokens": 8062,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 101,
            "duplicatedTokens": 1092,
            "percentage": 12.29,
            "percentageTokens": 13.55,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/advanced-security-framework.service.js": {
            "lines": 724,
            "tokens": 7160,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 47,
            "duplicatedTokens": 529,
            "percentage": 6.49,
            "percentageTokens": 7.39,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/advanced-search.js": {
            "lines": 523,
            "tokens": 5374,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/advanced-rate-limiter.js": {
            "lines": 269,
            "tokens": 2654,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/advanced-performance-monitoring.service.js": {
            "lines": 603,
            "tokens": 6373,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/advanced-monitoring-alerts.service.js": {
            "lines": 618,
            "tokens": 5388,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 130,
            "percentage": 1.94,
            "percentageTokens": 2.41,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/advanced-metrics-alerts.service.js": {
            "lines": 701,
            "tokens": 7824,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 25,
            "duplicatedTokens": 270,
            "percentage": 3.57,
            "percentageTokens": 3.45,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/advanced-error-management.service.js": {
            "lines": 773,
            "tokens": 8258,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 22,
            "duplicatedTokens": 262,
            "percentage": 2.85,
            "percentageTokens": 3.17,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/advanced-deployment-automation.service.js": {
            "lines": 749,
            "tokens": 7094,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/advanced-configuration-management.service.js": {
            "lines": 718,
            "tokens": 7564,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 48,
            "duplicatedTokens": 852,
            "percentage": 6.69,
            "percentageTokens": 11.26,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/advanced-cache.js": {
            "lines": 160,
            "tokens": 1460,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/advanced-audit-compliance.service.js": {
            "lines": 444,
            "tokens": 4828,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 155,
            "percentage": 2.7,
            "percentageTokens": 3.21,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/advanced-analytics.service.js": {
            "lines": 538,
            "tokens": 5913,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 177,
            "duplicatedTokens": 1966,
            "percentage": 32.9,
            "percentageTokens": 33.25,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/lib/advanced-analytics.js": {
            "lines": 255,
            "tokens": 3049,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 155,
            "percentage": 4.71,
            "percentageTokens": 5.08,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/jobs/hil-autocancel.js": {
            "lines": 27,
            "tokens": 373,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/hil/service.js": {
            "lines": 13,
            "tokens": 122,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/domain/index.js": {
            "lines": 16,
            "tokens": 204,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/db/migrations.js": {
            "lines": 146,
            "tokens": 1736,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/db/memory.repo.js": {
            "lines": 121,
            "tokens": 1525,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/cron/hil-expirer.js": {
            "lines": 17,
            "tokens": 173,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/controllers/memory.controller.js": {
            "lines": 102,
            "tokens": 872,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 40,
            "duplicatedTokens": 312,
            "percentage": 39.22,
            "percentageTokens": 35.78,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/controllers/advanced-features.controller.js": {
            "lines": 530,
            "tokens": 5221,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/config/environment.js": {
            "lines": 17,
            "tokens": 229,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/config/env.js": {
            "lines": 83,
            "tokens": 1095,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/config/agents.master.js": {
            "lines": 37,
            "tokens": 489,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/application/index.js": {
            "lines": 26,
            "tokens": 334,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workers/tests/stress-test.js": {
            "lines": 173,
            "tokens": 1711,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workers/tests/load-test.js": {
            "lines": 157,
            "tokens": 1575,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workers/scripts/optimize.js": {
            "lines": 352,
            "tokens": 2850,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workers/scripts/monitor.js": {
            "lines": 358,
            "tokens": 3381,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/test-e2e-advanced.js": {
            "lines": 218,
            "tokens": 1921,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/test-all-endpoints.js": {
            "lines": 158,
            "tokens": 1792,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/index.final.js": {
            "lines": 737,
            "tokens": 6576,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 107,
            "duplicatedTokens": 1087,
            "percentage": 14.52,
            "percentageTokens": 16.53,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/index.expanded.js": {
            "lines": 219,
            "tokens": 1944,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 77,
            "duplicatedTokens": 791,
            "percentage": 35.16,
            "percentageTokens": 40.69,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/dist/bootstrap.example.js": {
            "lines": 85,
            "tokens": 837,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/coverage/sorter.js": {
            "lines": 209,
            "tokens": 1761,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/coverage/block-navigation.js": {
            "lines": 86,
            "tokens": 606,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 164721,
          "tokens": 1669568,
          "sources": 509,
          "clones": 692,
          "duplicatedLines": 11722,
          "duplicatedTokens": 117538,
          "percentage": 7.12,
          "percentageTokens": 7.04,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      }
    },
    "total": {
      "lines": 420239,
      "tokens": 3946455,
      "sources": 1400,
      "clones": 2050,
      "duplicatedLines": 44249,
      "duplicatedTokens": 401849,
      "percentage": 10.53,
      "percentageTokens": 10.18,
      "newDuplicatedLines": 0,
      "newClones": 0
    }
  },
  "duplicates": [
    {
      "format": "typescript",
      "lines": 25,
      "fragment": "name: string;\n    sku: string;\n    price: {\n      amount: number;\n      currency: string;\n    };\n    compareAtPrice?: {\n      amount: number;\n      currency: string;\n    };\n    costPrice?: {\n      amount: number;\n      currency: string;\n    };\n    inventory: {\n      quantity: number;\n      reserved: number;\n      available: number;\n    };\n    attributes: Record<string, any>;\n    isActive: boolean;\n  }>;\n}\n\nexport interface CreateProductResponse",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\application\\use-cases\\product\\create-product.use-case.ts",
        "start": 66,
        "end": 90,
        "startLoc": {
          "line": 66,
          "column": 5,
          "position": 479
        },
        "endLoc": {
          "line": 90,
          "column": 22,
          "position": 629
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\product\\update-product.use-case.ts",
        "start": 67,
        "end": 91,
        "startLoc": {
          "line": 67,
          "column": 5,
          "position": 508
        },
        "endLoc": {
          "line": 91,
          "column": 22,
          "position": 658
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "crypto.randomUUID(),\n        name: variant.name,\n        sku: variant.sku,\n        price: Money.create(variant.price.amount, variant.price.currency),\n        compareAtPrice: variant.compareAtPrice ? Money.create(\n          variant.compareAtPrice.amount,\n          variant.compareAtPrice.currency\n        ) : undefined,\n        costPrice: variant.costPrice ? Money.create(\n          variant.costPrice.amount,\n          variant.costPrice.currency\n        ) : undefined,\n        inventory: variant.inventory,\n        attributes: variant.attributes,\n        isActive: variant.isActive,\n      })",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\application\\use-cases\\product\\create-product.use-case.ts",
        "start": 188,
        "end": 203,
        "startLoc": {
          "line": 188,
          "column": 2,
          "position": 1503
        },
        "endLoc": {
          "line": 203,
          "column": 2,
          "position": 1656
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\product\\update-product.use-case.ts",
        "start": 256,
        "end": 271,
        "startLoc": {
          "line": 256,
          "column": 2,
          "position": 2031
        },
        "endLoc": {
          "line": 271,
          "column": 2,
          "position": 2184
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": "> {\n    // ========================================================================\n    // VALIDATION\n    // ========================================================================\n\n    this.validateId(request.id, 'Predictive Analytics ID');\n\n    // ========================================================================\n    // FIND EXISTING PREDICTIVE ANALYTICS\n    // ========================================================================\n\n    const existingPredictiveAnalytics = await this.predictiveAnalyticsRepository.findById(request.id);\n    if (!existingPredictiveAnalytics) {\n      throw new Error(`Predictive analytics with ID '${request.id}' not found`);\n    }\n\n    // ========================================================================\n    // BUSINESS LOGIC VALIDATION\n    // ========================================================================\n\n    // Check if model is already training",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\application\\use-cases\\predictive-analytics\\train-model.use-case.ts",
        "start": 42,
        "end": 62,
        "startLoc": {
          "line": 42,
          "column": 19,
          "position": 287
        },
        "endLoc": {
          "line": 62,
          "column": 38,
          "position": 389
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\predictive-analytics\\update-predictive-analytics.use-case.ts",
        "start": 46,
        "end": 66,
        "startLoc": {
          "line": 46,
          "column": 34,
          "position": 406
        },
        "endLoc": {
          "line": 66,
          "column": 47,
          "position": 508
        }
      }
    },
    {
      "format": "typescript",
      "lines": 27,
      "fragment": "productId?: string;\n    description: string;\n    quantity: number;\n    unitPrice: {\n      amount: number;\n      currency: string;\n    };\n    totalPrice: {\n      amount: number;\n      currency: string;\n    };\n    taxRate?: number;\n    taxAmount?: {\n      amount: number;\n      currency: string;\n    };\n    discountRate?: number;\n    discountAmount?: {\n      amount: number;\n      currency: string;\n    };\n    notes?: string;\n  }>;\n  paymentMethod?: 'cash' | 'credit_card' | 'bank_transfer' | 'check' | 'paypal' | 'stripe' | 'other';\n  reference?: string;\n  notes?: string;\n  settings:",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\application\\use-cases\\invoice\\create-invoice.use-case.ts",
        "start": 21,
        "end": 47,
        "startLoc": {
          "line": 21,
          "column": 5,
          "position": 212
        },
        "endLoc": {
          "line": 47,
          "column": 2,
          "position": 410
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\invoice\\update-invoice.use-case.ts",
        "start": 23,
        "end": 49,
        "startLoc": {
          "line": 23,
          "column": 5,
          "position": 235
        },
        "endLoc": {
          "line": 49,
          "column": 2,
          "position": 433
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "this.generateId(),\n        productId: item.productId,\n        description: item.description,\n        quantity: item.quantity,\n        unitPrice: Money.create(item.unitPrice.amount, item.unitPrice.currency),\n        totalPrice: Money.create(item.totalPrice.amount, item.totalPrice.currency),\n        taxRate: item.taxRate,\n        taxAmount: item.taxAmount ? Money.create(item.taxAmount.amount, item.taxAmount.currency) : undefined,\n        discountRate: item.discountRate,\n        discountAmount: item.discountAmount ? Money.create(item.discountAmount.amount, item.discountAmount.currency) : undefined,\n        notes: item.notes,\n      })",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\application\\use-cases\\invoice\\create-invoice.use-case.ts",
        "start": 130,
        "end": 141,
        "startLoc": {
          "line": 130,
          "column": 2,
          "position": 1106
        },
        "endLoc": {
          "line": 141,
          "column": 2,
          "position": 1281
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\invoice\\update-invoice.use-case.ts",
        "start": 168,
        "end": 179,
        "startLoc": {
          "line": 168,
          "column": 2,
          "position": 1314
        },
        "endLoc": {
          "line": 179,
          "column": 2,
          "position": 1489
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "(\n    id: InteractionId,\n    organizationId: OrganizationId,\n    userId: UserId,\n    tag: string\n  ): Promise<UpdateInteractionResponse> {\n    const existingInteraction = await this.interactionRepository.findById(id);\n    if (!existingInteraction) {\n      throw createNotFoundError('Interaction', id);\n    }\n\n    const currentTags = existingInteraction.tags.",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\application\\use-cases\\interaction\\update-interaction.use-case.ts",
        "start": 324,
        "end": 335,
        "startLoc": {
          "line": 324,
          "column": 10,
          "position": 2336
        },
        "endLoc": {
          "line": 335,
          "column": 2,
          "position": 2431
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\interaction\\update-interaction.use-case.ts",
        "start": 300,
        "end": 311,
        "startLoc": {
          "line": 300,
          "column": 7,
          "position": 2164
        },
        "endLoc": {
          "line": 311,
          "column": 2,
          "position": 2259
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ".attachments.length > 5) {\n      throw createValidationError('Cannot have more than 5 attachments', 'attachments');\n    }\n\n    // ========================================================================\n    // BUSINESS LOGIC VALIDATION\n    // ========================================================================\n\n    // Check if user exists and has access to organization\n    const user = await this.userDomainService.findById(request.userId);\n    if (!user) {\n      throw createNotFoundError('User', request.userId);\n    }\n\n    if (user.organizationId !== request.organizationId) {\n      throw createConflictError('User', 'User does not belong to the specified organization');\n    }\n\n    // Check if user is active\n    if (user.status !== 'ACTIVE') {\n      throw createConflictError('User', 'User is not active');\n    }\n\n    // ========================================================================\n    // CREATE INTERACTION",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\application\\use-cases\\interaction\\create-interaction.use-case.ts",
        "start": 83,
        "end": 107,
        "startLoc": {
          "line": 83,
          "column": 8,
          "position": 650
        },
        "endLoc": {
          "line": 107,
          "column": 22,
          "position": 811
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\interaction\\update-interaction.use-case.ts",
        "start": 100,
        "end": 124,
        "startLoc": {
          "line": 100,
          "column": 8,
          "position": 881
        },
        "endLoc": {
          "line": 124,
          "column": 20,
          "position": 1042
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ", 'id');\n    }\n    if (!request.organizationId) {\n      throw createValidationError('Organization ID is required', 'organizationId');\n    }\n    if (!request.userId) {\n      throw createValidationError('User ID is required', 'userId');\n    }\n\n    // Validate updates\n    if (!request.updates || Object.keys(request.updates).length === 0) {\n      throw createValidationError('At least one update field is required', 'updates');\n    }\n\n    // Validate name length",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\application\\use-cases\\deal\\update-deal.use-case.ts",
        "start": 59,
        "end": 73,
        "startLoc": {
          "line": 59,
          "column": 22,
          "position": 437
        },
        "endLoc": {
          "line": 73,
          "column": 24,
          "position": 550
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\interaction\\update-interaction.use-case.ts",
        "start": 50,
        "end": 64,
        "startLoc": {
          "line": 50,
          "column": 29,
          "position": 354
        },
        "endLoc": {
          "line": 64,
          "column": 27,
          "position": 467
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ");\n    }\n\n    // Validate tags\n    if (request.updates.tags !== undefined && request.updates.tags && request.updates.tags.length > 10) {\n      throw createValidationError('Cannot have more than 10 tags', 'tags');\n    }\n\n    // Validate attachments\n    if (request.updates.attachments !== undefined && request.updates.attachments && request.updates.attachments.length > 5) {\n      throw createValidationError('Cannot have more than 5 attachments', 'attachments');\n    }\n\n    // Validate competitors",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\application\\use-cases\\deal\\update-deal.use-case.ts",
        "start": 105,
        "end": 118,
        "startLoc": {
          "line": 105,
          "column": 8,
          "position": 931
        },
        "endLoc": {
          "line": 118,
          "column": 24,
          "position": 1055
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\interaction\\update-interaction.use-case.ts",
        "start": 91,
        "end": 104,
        "startLoc": {
          "line": 91,
          "column": 11,
          "position": 786
        },
        "endLoc": {
          "line": 104,
          "column": 76,
          "position": 910
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": ");\n    }\n\n    // ========================================================================\n    // BUSINESS LOGIC VALIDATION\n    // ========================================================================\n\n    // Check if user exists and has access to organization\n    const user = await this.userDomainService.findById(request.userId);\n    if (!user) {\n      throw createNotFoundError('User', request.userId);\n    }\n\n    if (user.organizationId !== request.organizationId) {\n      throw createConflictError('User', 'User does not belong to the specified organization');\n    }\n\n    // Check if user is active\n    if (user.status !== 'ACTIVE') {\n      throw createConflictError('User', 'User is not active');\n    }\n\n    // ========================================================================\n    // FIND DEAL",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\application\\use-cases\\deal\\update-deal.use-case.ts",
        "start": 135,
        "end": 158,
        "startLoc": {
          "line": 135,
          "column": 13,
          "position": 1279
        },
        "endLoc": {
          "line": 158,
          "column": 13,
          "position": 1419
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\interaction\\update-interaction.use-case.ts",
        "start": 101,
        "end": 124,
        "startLoc": {
          "line": 101,
          "column": 14,
          "position": 902
        },
        "endLoc": {
          "line": 124,
          "column": 20,
          "position": 1042
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ".tags;\n    if (!currentTags.includes(tag)) {\n      currentTags.push(tag);\n    }\n\n    return this.execute({\n      id,\n      organizationId,\n      userId,\n      updates: { tags: currentTags }\n    });\n  }\n\n  async removeTag(\n    id: DealId",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\application\\use-cases\\deal\\update-deal.use-case.ts",
        "start": 406,
        "end": 420,
        "startLoc": {
          "line": 406,
          "column": 13,
          "position": 3143
        },
        "endLoc": {
          "line": 420,
          "column": 7,
          "position": 3228
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\interaction\\update-interaction.use-case.ts",
        "start": 311,
        "end": 325,
        "startLoc": {
          "line": 311,
          "column": 20,
          "position": 2257
        },
        "endLoc": {
          "line": 325,
          "column": 14,
          "position": 2342
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "(\n    id: DealId,\n    organizationId: OrganizationId,\n    userId: UserId,\n    tag: string\n  ): Promise<UpdateDealResponse> {\n    const existingDeal = await this.dealRepository.findById(id);\n    if (!existingDeal) {\n      throw createNotFoundError('Deal', id);\n    }\n\n    const currentTags = existingDeal.tags.",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\application\\use-cases\\deal\\update-deal.use-case.ts",
        "start": 419,
        "end": 430,
        "startLoc": {
          "line": 419,
          "column": 10,
          "position": 3222
        },
        "endLoc": {
          "line": 430,
          "column": 2,
          "position": 3317
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\deal\\update-deal.use-case.ts",
        "start": 395,
        "end": 406,
        "startLoc": {
          "line": 395,
          "column": 7,
          "position": 3050
        },
        "endLoc": {
          "line": 406,
          "column": 2,
          "position": 3145
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "(\n    id: DealId,\n    organizationId: OrganizationId,\n    userId: UserId,\n    competitor: string\n  ): Promise<UpdateDealResponse> {\n    const existingDeal = await this.dealRepository.findById(id);\n    if (!existingDeal) {\n      throw createNotFoundError('Deal', id);\n    }\n\n    const currentCompetitors = existingDeal.competitors.",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\application\\use-cases\\deal\\update-deal.use-case.ts",
        "start": 464,
        "end": 475,
        "startLoc": {
          "line": 464,
          "column": 17,
          "position": 3552
        },
        "endLoc": {
          "line": 475,
          "column": 2,
          "position": 3647
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\deal\\update-deal.use-case.ts",
        "start": 440,
        "end": 451,
        "startLoc": {
          "line": 440,
          "column": 14,
          "position": 3380
        },
        "endLoc": {
          "line": 451,
          "column": 2,
          "position": 3475
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "(\n    id: DealId,\n    organizationId: OrganizationId,\n    userId: UserId,\n    decisionMaker: string\n  ): Promise<UpdateDealResponse> {\n    const existingDeal = await this.dealRepository.findById(id);\n    if (!existingDeal) {\n      throw createNotFoundError('Deal', id);\n    }\n\n    const currentDecisionMakers = existingDeal.decisionMakers.",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\application\\use-cases\\deal\\update-deal.use-case.ts",
        "start": 509,
        "end": 520,
        "startLoc": {
          "line": 509,
          "column": 20,
          "position": 3882
        },
        "endLoc": {
          "line": 520,
          "column": 2,
          "position": 3977
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\deal\\update-deal.use-case.ts",
        "start": 485,
        "end": 496,
        "startLoc": {
          "line": 485,
          "column": 17,
          "position": 3710
        },
        "endLoc": {
          "line": 496,
          "column": 2,
          "position": 3805
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ";\n  expectedCloseDate?: Date;\n  nextStep?: string;\n  nextStepDate?: Date;\n  tags?: string[];\n  customFields?: Record<string, any>;\n  attachments?: string[];\n  notes?: string;\n  competitors?: string[];\n  decisionMakers?: string[];\n  budget?: number;\n  timeline?: string;\n  requirements?: string[];\n  objections?: string[];\n}\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\application\\use-cases\\deal\\create-deal.use-case.ts",
        "start": 22,
        "end": 38,
        "startLoc": {
          "line": 22,
          "column": 10,
          "position": 187
        },
        "endLoc": {
          "line": 38,
          "column": 7,
          "position": 314
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\deal\\update-deal.use-case.ts",
        "start": 22,
        "end": 36,
        "startLoc": {
          "line": 22,
          "column": 7,
          "position": 181
        },
        "endLoc": {
          "line": 36,
          "column": 2,
          "position": 307
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "> {\n    // ========================================================================\n    // VALIDATION\n    // ========================================================================\n\n    // Validate required fields\n    if (!request.organizationId) {\n      throw createValidationError('Organization ID is required', 'organizationId');\n    }\n    if (!request.contactId) {\n      throw createValidationError('Contact ID is required', 'contactId');\n    }\n    if (!request.userId) {\n      throw createValidationError('User ID is required', 'userId');\n    }\n    if (!request.name",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\application\\use-cases\\deal\\create-deal.use-case.ts",
        "start": 51,
        "end": 66,
        "startLoc": {
          "line": 51,
          "column": 19,
          "position": 404
        },
        "endLoc": {
          "line": 66,
          "column": 5,
          "position": 509
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\interaction\\create-interaction.use-case.ts",
        "start": 40,
        "end": 55,
        "startLoc": {
          "line": 40,
          "column": 26,
          "position": 305
        },
        "endLoc": {
          "line": 55,
          "column": 5,
          "position": 410
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ");\n    }\n\n    // Validate tags\n    if (request.tags && request.tags.length > 10) {\n      throw createValidationError('Cannot have more than 10 tags', 'tags');\n    }\n\n    // Validate attachments\n    if (request.attachments && request.attachments.length > 5) {\n      throw createValidationError('Cannot have more than 5 attachments', 'attachments');\n    }\n\n    // Validate competitors",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\application\\use-cases\\deal\\create-deal.use-case.ts",
        "start": 100,
        "end": 113,
        "startLoc": {
          "line": 100,
          "column": 8,
          "position": 831
        },
        "endLoc": {
          "line": 113,
          "column": 24,
          "position": 923
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\interaction\\create-interaction.use-case.ts",
        "start": 74,
        "end": 87,
        "startLoc": {
          "line": 74,
          "column": 13,
          "position": 587
        },
        "endLoc": {
          "line": 87,
          "column": 76,
          "position": 679
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": ".objections.length > 20) {\n      throw createValidationError('Cannot have more than 20 objections', 'objections');\n    }\n\n    // ========================================================================\n    // BUSINESS LOGIC VALIDATION\n    // ========================================================================\n\n    // Check if user exists and has access to organization\n    const user = await this.userDomainService.findById(request.userId);\n    if (!user) {\n      throw createNotFoundError('User', request.userId);\n    }\n\n    if (user.organizationId !== request.organizationId) {\n      throw createConflictError('User', 'User does not belong to the specified organization');\n    }\n\n    // Check if user is active\n    if (user.status !== 'ACTIVE') {\n      throw createConflictError('User', 'User is not active');\n    }\n\n    // Check if deal with same name already exists for this contact",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\application\\use-cases\\deal\\create-deal.use-case.ts",
        "start": 129,
        "end": 152,
        "startLoc": {
          "line": 129,
          "column": 8,
          "position": 1062
        },
        "endLoc": {
          "line": 152,
          "column": 64,
          "position": 1220
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\deal\\update-deal.use-case.ts",
        "start": 134,
        "end": 123,
        "startLoc": {
          "line": 134,
          "column": 8,
          "position": 1258
        },
        "endLoc": {
          "line": 123,
          "column": 76,
          "position": 1039
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "(\n    organizationId: OrganizationId,\n    contactId: ContactId,\n    userId: UserId,\n    name: string,\n    value: number,\n    currency: string = 'USD',\n    source: DealSource = 'WEBSITE',\n    companyId?: CompanyId\n  ): Promise<CreateDealResponse> {\n    return this.execute({\n      organizationId,\n      contactId,\n      userId,\n      name,\n      value,\n      currency,\n      source,\n      stage: 'QUALIFIED'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\application\\use-cases\\deal\\create-deal.use-case.ts",
        "start": 248,
        "end": 266,
        "startLoc": {
          "line": 248,
          "column": 16,
          "position": 1897
        },
        "endLoc": {
          "line": 266,
          "column": 12,
          "position": 2015
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\deal\\create-deal.use-case.ts",
        "start": 225,
        "end": 243,
        "startLoc": {
          "line": 225,
          "column": 11,
          "position": 1760
        },
        "endLoc": {
          "line": 243,
          "column": 7,
          "position": 1878
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "(\n    organizationId: OrganizationId,\n    contactId: ContactId,\n    userId: UserId,\n    name: string,\n    value: number,\n    currency: string = 'USD',\n    source: DealSource = 'WEBSITE',\n    companyId?: CompanyId\n  ): Promise<CreateDealResponse> {\n    return this.execute({\n      organizationId,\n      contactId,\n      userId,\n      name,\n      value,\n      currency,\n      source,\n      stage: 'PROPOSAL'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\application\\use-cases\\deal\\create-deal.use-case.ts",
        "start": 271,
        "end": 289,
        "startLoc": {
          "line": 271,
          "column": 15,
          "position": 2034
        },
        "endLoc": {
          "line": 289,
          "column": 11,
          "position": 2152
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\deal\\create-deal.use-case.ts",
        "start": 225,
        "end": 243,
        "startLoc": {
          "line": 225,
          "column": 11,
          "position": 1760
        },
        "endLoc": {
          "line": 243,
          "column": 7,
          "position": 1878
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "(\n    organizationId: OrganizationId,\n    contactId: ContactId,\n    userId: UserId,\n    name: string,\n    value: number,\n    currency: string = 'USD',\n    source: DealSource = 'WEBSITE',\n    companyId?: CompanyId\n  ): Promise<CreateDealResponse> {\n    return this.execute({\n      organizationId,\n      contactId,\n      userId,\n      name,\n      value,\n      currency,\n      source,\n      stage: 'NEGOTIATION'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\application\\use-cases\\deal\\create-deal.use-case.ts",
        "start": 294,
        "end": 312,
        "startLoc": {
          "line": 294,
          "column": 18,
          "position": 2171
        },
        "endLoc": {
          "line": 312,
          "column": 14,
          "position": 2289
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\deal\\create-deal.use-case.ts",
        "start": 225,
        "end": 243,
        "startLoc": {
          "line": 225,
          "column": 11,
          "position": 1760
        },
        "endLoc": {
          "line": 243,
          "column": 7,
          "position": 1878
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ";\n    constraints: Array<{\n      id: string;\n      name: string;\n      type: 'primary_key' | 'foreign_key' | 'unique' | 'check' | 'not_null' | 'default' | 'index';\n      columns: string[];\n      referencedTable?: string;\n      referencedColumns?: string[];\n      condition?: string;\n      description: string;\n      isDeferrable: boolean;\n      initiallyDeferred: boolean;\n      onDelete?: 'CASCADE' | 'SET NULL' | 'RESTRICT' | 'NO ACTION';\n      onUpdate?: 'CASCADE' | 'SET NULL' | 'RESTRICT' | 'NO ACTION';\n    }>;\n    indexes",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\application\\use-cases\\database-schema\\create-database-schema.use-case.ts",
        "start": 94,
        "end": 109,
        "startLoc": {
          "line": 94,
          "column": 2,
          "position": 798
        },
        "endLoc": {
          "line": 109,
          "column": 8,
          "position": 955
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\database-schema\\create-database-schema.use-case.ts",
        "start": 73,
        "end": 88,
        "startLoc": {
          "line": 73,
          "column": 4,
          "position": 595
        },
        "endLoc": {
          "line": 88,
          "column": 12,
          "position": 752
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ".constraints.map(constraint => ({\n          id: constraint.id,\n          name: constraint.name,\n          type: constraint.type,\n          columns: constraint.columns,\n          referencedTable: constraint.referencedTable,\n          referencedColumns: constraint.referencedColumns,\n          condition: constraint.condition,\n          description: constraint.description,\n          isDeferrable: constraint.isDeferrable,\n          initiallyDeferred: constraint.initiallyDeferred,\n          onDelete: constraint.onDelete,\n          onUpdate: constraint.onUpdate,\n          createdAt: new Date(),\n          updatedAt: new Date()\n        })),\n        indexes",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\application\\use-cases\\database-schema\\create-database-schema.use-case.ts",
        "start": 278,
        "end": 294,
        "startLoc": {
          "line": 278,
          "column": 6,
          "position": 2378
        },
        "endLoc": {
          "line": 294,
          "column": 8,
          "position": 2526
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\database-schema\\create-database-schema.use-case.ts",
        "start": 253,
        "end": 269,
        "startLoc": {
          "line": 253,
          "column": 7,
          "position": 2145
        },
        "endLoc": {
          "line": 269,
          "column": 12,
          "position": 2293
        }
      }
    },
    {
      "format": "typescript",
      "lines": 68,
      "fragment": ": 'low' | 'medium' | 'high' | 'urgent';\n  email?: string;\n  phone?: string;\n  mobile?: string;\n  fax?: string;\n  website?: string;\n  address?: {\n    street: string;\n    city: string;\n    state?: string;\n    postalCode: string;\n    country: string;\n    countryCode: string;\n  };\n  birthday?: Date;\n  anniversary?: Date;\n  gender?: 'male' | 'female' | 'other' | 'prefer_not_to_say';\n  maritalStatus?: 'single' | 'married' | 'divorced' | 'widowed' | 'separated';\n  children?: number;\n  education?: string;\n  profession?: string;\n  industry?: string;\n  experience?: number;\n  salary?: {\n    amount: number;\n    currency: string;\n  };\n  socialMedia?: {\n    linkedin?: string;\n    twitter?: string;\n    facebook?: string;\n    instagram?: string;\n    youtube?: string;\n    tiktok?: string;\n    other?: Record<string, string>;\n  };\n  communication?: {\n    preferredMethod?: 'email' | 'phone' | 'sms' | 'whatsapp' | 'linkedin' | 'other';\n    bestTimeToCall?: string;\n    timeZone?: string;\n    doNotCall?: boolean;\n    doNotEmail?: boolean;\n    doNotSms?: boolean;\n  };\n  settings?: {\n    notifications?: {\n      email?: boolean;\n      sms?: boolean;\n      push?: boolean;\n      phone?: boolean;\n    };\n    preferences?: {\n      language?: string;\n      timezone?: string;\n      currency?: string;\n      dateFormat?: string;\n      timeFormat?: string;\n    };\n    customFields?: Record<string, any>;\n    tags?: string[];\n    notes?: string;\n    internalNotes?: string;\n  };\n  assignedUserId?: string;\n  nextFollowUpDate?: Date;\n  leadScore?: number;\n  engagementScore?: number;\n  createdBy",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\application\\use-cases\\contact\\create-contact.use-case.ts",
        "start": 21,
        "end": 88,
        "startLoc": {
          "line": 21,
          "column": 9,
          "position": 232
        },
        "endLoc": {
          "line": 88,
          "column": 10,
          "position": 798
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\contact\\update-contact.use-case.ts",
        "start": 21,
        "end": 88,
        "startLoc": {
          "line": 21,
          "column": 2,
          "position": 238
        },
        "endLoc": {
          "line": 88,
          "column": 10,
          "position": 804
        }
      }
    },
    {
      "format": "typescript",
      "lines": 26,
      "fragment": "request.companyId && request.companyId.trim().length === 0) {\n      errors.push('Company ID cannot be empty');\n    }\n\n    // Validate children if provided\n    if (request.children !== undefined && (request.children < 0 || request.children > 20)) {\n      errors.push('Children count must be between 0 and 20');\n    }\n\n    // Validate experience if provided\n    if (request.experience !== undefined && (request.experience < 0 || request.experience > 50)) {\n      errors.push('Experience must be between 0 and 50 years');\n    }\n\n    // Validate lead score if provided\n    if (request.leadScore !== undefined && (request.leadScore < 0 || request.leadScore > 100)) {\n      errors.push('Lead score must be between 0 and 100');\n    }\n\n    // Validate engagement score if provided\n    if (request.engagementScore !== undefined && (request.engagementScore < 0 || request.engagementScore > 100)) {\n      errors.push('Engagement score must be between 0 and 100');\n    }\n\n    // Validate salary if provided\n    if (request.salary)",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\application\\use-cases\\contact\\create-contact.use-case.ts",
        "start": 299,
        "end": 324,
        "startLoc": {
          "line": 299,
          "column": 2,
          "position": 2690
        },
        "endLoc": {
          "line": 324,
          "column": 2,
          "position": 2948
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\contact\\update-contact.use-case.ts",
        "start": 331,
        "end": 356,
        "startLoc": {
          "line": 331,
          "column": 2,
          "position": 3040
        },
        "endLoc": {
          "line": 356,
          "column": 4,
          "position": 3299
        }
      }
    },
    {
      "format": "typescript",
      "lines": 41,
      "fragment": ") {\n      if (request.salary.amount < 0) {\n        errors.push('Salary cannot be negative');\n      }\n      if (!request.salary.currency || request.salary.currency.length !== 3) {\n        errors.push('Salary currency must be a 3-letter code');\n      }\n    }\n\n    // Validate social media URLs if provided\n    if (request.socialMedia) {\n      if (request.socialMedia.linkedin && !Contact.validateSocialMediaUrl(request.socialMedia.linkedin, 'linkedin')) {\n        errors.push('Invalid LinkedIn URL');\n      }\n      if (request.socialMedia.twitter && !Contact.validateSocialMediaUrl(request.socialMedia.twitter, 'twitter')) {\n        errors.push('Invalid Twitter URL');\n      }\n      if (request.socialMedia.facebook && !Contact.validateSocialMediaUrl(request.socialMedia.facebook, 'facebook')) {\n        errors.push('Invalid Facebook URL');\n      }\n      if (request.socialMedia.instagram && !Contact.validateSocialMediaUrl(request.socialMedia.instagram, 'instagram')) {\n        errors.push('Invalid Instagram URL');\n      }\n      if (request.socialMedia.youtube && !Contact.validateSocialMediaUrl(request.socialMedia.youtube, 'youtube')) {\n        errors.push('Invalid YouTube URL');\n      }\n      if (request.socialMedia.tiktok && !Contact.validateSocialMediaUrl(request.socialMedia.tiktok, 'tiktok')) {\n        errors.push('Invalid TikTok URL');\n      }\n    }\n\n    // Validate communication preferences if provided\n    if (request.communication) {\n      const validMethods = ['email', 'phone', 'sms', 'whatsapp', 'linkedin', 'other'];\n      if (request.communication.preferredMethod && !validMethods.includes(request.communication.preferredMethod)) {\n        errors.push('Invalid preferred communication method');\n      }\n    }\n\n    // Validate assigned user ID if provided\n    if (request.assignedUserId &&",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\application\\use-cases\\contact\\create-contact.use-case.ts",
        "start": 324,
        "end": 364,
        "startLoc": {
          "line": 324,
          "column": 7,
          "position": 2948
        },
        "endLoc": {
          "line": 364,
          "column": 3,
          "position": 3390
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\contact\\update-contact.use-case.ts",
        "start": 356,
        "end": 396,
        "startLoc": {
          "line": 356,
          "column": 10,
          "position": 3302
        },
        "endLoc": {
          "line": 396,
          "column": 4,
          "position": 3744
        }
      }
    },
    {
      "format": "typescript",
      "lines": 59,
      "fragment": ": 'website' | 'referral' | 'cold_call' | 'email' | 'social_media' | 'event' | 'other';\n  website?: string;\n  email?: string;\n  phone?: string;\n  address?: {\n    street: string;\n    city: string;\n    state?: string;\n    postalCode: string;\n    country: string;\n    countryCode: string;\n  };\n  billingAddress?: {\n    street: string;\n    city: string;\n    state?: string;\n    postalCode: string;\n    country: string;\n    countryCode: string;\n  };\n  shippingAddress?: {\n    street: string;\n    city: string;\n    state?: string;\n    postalCode: string;\n    country: string;\n    countryCode: string;\n  };\n  taxId?: string;\n  vatNumber?: string;\n  registrationNumber?: string;\n  description?: string;\n  annualRevenue?: {\n    amount: number;\n    currency: string;\n  };\n  employeeCount?: number;\n  foundedYear?: number;\n  parentCompanyId?: string;\n  assignedUserId?: string;\n  nextFollowUpDate?: Date;\n  leadScore?: number;\n  settings?: {\n    notifications?: {\n      email?: boolean;\n      sms?: boolean;\n      push?: boolean;\n    };\n    preferences?: {\n      language?: string;\n      timezone?: string;\n      currency?: string;\n      dateFormat?: string;\n    };\n    customFields?: Record<string, any>;\n    tags?: string[];\n    notes?: string;\n  };\n  createdBy",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\application\\use-cases\\company\\create-company.use-case.ts",
        "start": 18,
        "end": 76,
        "startLoc": {
          "line": 18,
          "column": 7,
          "position": 168
        },
        "endLoc": {
          "line": 76,
          "column": 10,
          "position": 610
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\company\\update-company.use-case.ts",
        "start": 18,
        "end": 76,
        "startLoc": {
          "line": 18,
          "column": 2,
          "position": 174
        },
        "endLoc": {
          "line": 76,
          "column": 10,
          "position": 616
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": "request.vatNumber && !Company.validateVatNumber(request.vatNumber)) {\n      errors.push('Invalid VAT number format');\n    }\n\n    // Validate employee count if provided\n    if (request.employeeCount !== undefined && (request.employeeCount < 0 || request.employeeCount > 1000000)) {\n      errors.push('Employee count must be between 0 and 1,000,000');\n    }\n\n    // Validate founded year if provided\n    if (request.foundedYear !== undefined) {\n      const currentYear = new Date().getFullYear();\n      if (request.foundedYear < 1800 || request.foundedYear > currentYear) {\n        errors.push(`Founded year must be between 1800 and ${currentYear}`);\n      }\n    }\n\n    // Validate lead score if provided\n    if (request.leadScore !== undefined && (request.leadScore < 0 || request.leadScore > 100)) {\n      errors.push('Lead score must be between 0 and 100');\n    }\n\n    // Validate annual revenue if provided\n    if (request.annualRevenue)",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\application\\use-cases\\company\\create-company.use-case.ts",
        "start": 269,
        "end": 292,
        "startLoc": {
          "line": 269,
          "column": 2,
          "position": 2246
        },
        "endLoc": {
          "line": 292,
          "column": 2,
          "position": 2475
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\company\\update-company.use-case.ts",
        "start": 315,
        "end": 338,
        "startLoc": {
          "line": 315,
          "column": 2,
          "position": 2667
        },
        "endLoc": {
          "line": 338,
          "column": 4,
          "position": 2897
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "layer.components.map(component => ({\n          id: component.id,\n          name: component.name,\n          type: component.type,\n          layer: layer.type,\n          description: component.description,\n          dependencies: component.dependencies,\n          interfaces: component.interfaces,\n          implementation: component.implementation,\n          tests: component.tests,\n          documentation: component.documentation,\n          createdAt: new Date(),\n          updatedAt: new Date()\n        }))\n      )",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\application\\use-cases\\architecture\\create-architecture.use-case.ts",
        "start": 152,
        "end": 166,
        "startLoc": {
          "line": 152,
          "column": 9,
          "position": 1308
        },
        "endLoc": {
          "line": 166,
          "column": 2,
          "position": 1438
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\architecture\\create-architecture.use-case.ts",
        "start": 121,
        "end": 134,
        "startLoc": {
          "line": 121,
          "column": 2,
          "position": 1003
        },
        "endLoc": {
          "line": 134,
          "column": 2,
          "position": 1131
        }
      }
    },
    {
      "format": "typescript",
      "lines": 27,
      "fragment": ",\n      layers: request.settings.layers.map(layer => ({\n        id: layer.id,\n        name: layer.name,\n        type: layer.type,\n        description: layer.description,\n        components: layer.components.map(component => ({\n          id: component.id,\n          name: component.name,\n          type: component.type,\n          layer: layer.type,\n          description: component.description,\n          dependencies: component.dependencies,\n          interfaces: component.interfaces,\n          implementation: component.implementation,\n          tests: component.tests,\n          documentation: component.documentation,\n          createdAt: new Date(),\n          updatedAt: new Date()\n        })),\n        dependencies: layer.dependencies,\n        responsibilities: layer.responsibilities,\n        patterns: layer.patterns,\n        createdAt: new Date(),\n        updatedAt: new Date()\n      })),\n      isActive",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\application\\use-cases\\architecture\\create-architecture.use-case.ts",
        "start": 166,
        "end": 192,
        "startLoc": {
          "line": 166,
          "column": 2,
          "position": 1439
        },
        "endLoc": {
          "line": 192,
          "column": 9,
          "position": 1685
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\architecture\\create-architecture.use-case.ts",
        "start": 115,
        "end": 141,
        "startLoc": {
          "line": 115,
          "column": 5,
          "position": 942
        },
        "endLoc": {
          "line": 141,
          "column": 9,
          "position": 1188
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "export interface UpdateUserRequest {\n    userId: string;\n    firstName?: string;\n    lastName?: string;\n    role?: 'admin' | 'manager' | 'editor' | 'viewer';\n    status?: 'active' | 'inactive' | 'suspended' | 'pending';\n    updatedBy: string;\n}\nexport interface UpdateUserResponse {\n    success: boolean;\n    user?: User;\n    error?: string;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\user\\update-user.use-case.d.ts",
        "start": 4,
        "end": 17,
        "startLoc": {
          "line": 4,
          "column": 1,
          "position": 39
        },
        "endLoc": {
          "line": 17,
          "column": 8,
          "position": 154
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\user\\update-user.use-case.ts",
        "start": 9,
        "end": 24,
        "startLoc": {
          "line": 9,
          "column": 1,
          "position": 47
        },
        "endLoc": {
          "line": 24,
          "column": 6,
          "position": 164
        }
      }
    },
    {
      "format": "javascript",
      "lines": 17,
      "fragment": "{\n    userRepository;\n    userDomainService;\n    constructor(userRepository, userDomainService) {\n        this.userRepository = userRepository;\n        this.userDomainService = userDomainService;\n    }\n    async execute(request) {\n        try {\n            const validation = this.validateRequest(request);\n            if (!validation.isValid) {\n                return {\n                    success: false,\n                    error: validation.errors.join(', ')\n                };\n            }\n            const canDelete",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\user\\delete-user.use-case.js",
        "start": 1,
        "end": 17,
        "startLoc": {
          "line": 1,
          "column": 2,
          "position": 6
        },
        "endLoc": {
          "line": 17,
          "column": 10,
          "position": 127
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\user\\update-user.use-case.js",
        "start": 1,
        "end": 17,
        "startLoc": {
          "line": 1,
          "column": 2,
          "position": 6
        },
        "endLoc": {
          "line": 17,
          "column": 5,
          "position": 127
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": "};\n        }\n        catch (error) {\n            return {\n                success: false,\n                error: error instanceof Error ? error.message : 'Unknown error occurred'\n            };\n        }\n    }\n    validateRequest(request) {\n        const errors = [];\n        if (!request.userId || request.userId.trim().length === 0) {\n            errors.push('User ID is required');\n        }\n        if (!request.deletedBy",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\user\\delete-user.use-case.js",
        "start": 27,
        "end": 41,
        "startLoc": {
          "line": 27,
          "column": 13,
          "position": 220
        },
        "endLoc": {
          "line": 41,
          "column": 10,
          "position": 343
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\user\\update-user.use-case.js",
        "start": 46,
        "end": 60,
        "startLoc": {
          "line": 46,
          "column": 13,
          "position": 404
        },
        "endLoc": {
          "line": 60,
          "column": 10,
          "position": 527
        }
      }
    },
    {
      "format": "javascript",
      "lines": 17,
      "fragment": "{\n    userRepository;\n    userDomainService;\n    constructor(userRepository, userDomainService) {\n        this.userRepository = userRepository;\n        this.userDomainService = userDomainService;\n    }\n    async execute(request) {\n        try {\n            const validation = this.validateRequest(request);\n            if (!validation.isValid) {\n                return {\n                    success: false,\n                    error: validation.errors.join(', ')\n                };\n            }\n            const canCreate",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\user\\create-user.use-case.js",
        "start": 3,
        "end": 19,
        "startLoc": {
          "line": 3,
          "column": 2,
          "position": 32
        },
        "endLoc": {
          "line": 19,
          "column": 10,
          "position": 153
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\user\\update-user.use-case.js",
        "start": 1,
        "end": 17,
        "startLoc": {
          "line": 1,
          "column": 2,
          "position": 6
        },
        "endLoc": {
          "line": 17,
          "column": 5,
          "position": 127
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "export interface CreateUserRequest {\n    email: string;\n    password: string;\n    firstName: string;\n    lastName: string;\n    role: 'admin' | 'manager' | 'editor' | 'viewer';\n    organizationId: string;\n    createdBy: string;\n}\nexport interface CreateUserResponse {\n    success: boolean;\n    user?: User;\n    error?: string;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\user\\create-user.use-case.d.ts",
        "start": 4,
        "end": 18,
        "startLoc": {
          "line": 4,
          "column": 1,
          "position": 39
        },
        "endLoc": {
          "line": 18,
          "column": 8,
          "position": 145
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\user\\create-user.use-case.ts",
        "start": 10,
        "end": 26,
        "startLoc": {
          "line": 10,
          "column": 1,
          "position": 60
        },
        "endLoc": {
          "line": 26,
          "column": 6,
          "position": 168
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": ", SearchFilters, SearchType } from '../../../domain/entities/search-result.entity.js';\nexport interface IntelligentSearchRequest {\n    query: string;\n    filters?: SearchFilters;\n    searchType?: SearchType;\n    page?: number;\n    limit?: number;\n    sortBy?: string;\n    sortOrder?: 'asc' | 'desc';\n    includeMetadata?: boolean;\n    highlightMatches?: boolean;\n}\nexport interface IntelligentSearchResponse {\n    results: SearchResult[];\n    totalCount: number;\n    page: number;\n    limit: number;\n    totalPages: number;\n    executionTime: number;\n    suggestions?: string[];\n    filters?: Record<string, any[]>;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\search\\intelligent-search.use-case.d.ts",
        "start": 3,
        "end": 25,
        "startLoc": {
          "line": 3,
          "column": 13,
          "position": 31
        },
        "endLoc": {
          "line": 25,
          "column": 8,
          "position": 212
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\search\\intelligent-search.use-case.ts",
        "start": 3,
        "end": 28,
        "startLoc": {
          "line": 3,
          "column": 12,
          "position": 34
        },
        "endLoc": {
          "line": 28,
          "column": 6,
          "position": 218
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "SearchResultType } from '../../../domain/entities/search-result.entity.js';\nexport interface IndexEntityRequest {\n    entity: any;\n    type: SearchResultType;\n    entityId: string;\n    title: string;\n    description: string;\n    content: string;\n    tags?: string[];\n    category?: string;\n    subcategory?: string;\n    metadata?: Record<string, any>;\n}\nexport interface IndexEntityResponse {\n    success: boolean;\n    indexedAt: Date;\n    executionTime: number;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\search\\index-entity.use-case.d.ts",
        "start": 3,
        "end": 21,
        "startLoc": {
          "line": 3,
          "column": 2,
          "position": 30
        },
        "endLoc": {
          "line": 21,
          "column": 8,
          "position": 164
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\search\\index-entity.use-case.ts",
        "start": 3,
        "end": 24,
        "startLoc": {
          "line": 3,
          "column": 2,
          "position": 33
        },
        "endLoc": {
          "line": 24,
          "column": 6,
          "position": 170
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "import { UseCase } from '../base.use-case.js';\nimport { SearchRepository } from '../../../domain/repositories/search.repository.js';\nimport { SearchSuggestion } from '../../../domain/entities/search-result.entity.js';\nexport interface GetSuggestionsRequest {\n    query: string;\n    limit?: number;\n    type?: string;\n    category?: string;\n}\nexport interface GetSuggestionsResponse {\n    suggestions: SearchSuggestion[];\n    totalCount: number;\n    executionTime: number;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\search\\get-suggestions.use-case.d.ts",
        "start": 1,
        "end": 15,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 15,
          "column": 8,
          "position": 115
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\search\\get-suggestions.use-case.ts",
        "start": 1,
        "end": 18,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 18,
          "column": 6,
          "position": 118
        }
      }
    },
    {
      "format": "typescript",
      "lines": 88,
      "fragment": "export interface UpdateProductRequest {\n    id: string;\n    name?: string;\n    description?: string;\n    shortDescription?: string;\n    sku?: string;\n    barcode?: string;\n    type?: 'physical' | 'digital' | 'service' | 'subscription' | 'bundle';\n    status?: 'active' | 'inactive' | 'discontinued' | 'draft' | 'archived';\n    category?: string;\n    brand?: string;\n    supplier?: string;\n    settings?: {\n        inventory?: {\n            trackInventory?: boolean;\n            lowStockThreshold?: number;\n            allowBackorder?: boolean;\n            allowPreorder?: boolean;\n        };\n        pricing?: {\n            costPrice?: {\n                amount: number;\n                currency: string;\n            };\n            sellingPrice?: {\n                amount: number;\n                currency: string;\n            };\n            compareAtPrice?: {\n                amount: number;\n                currency: string;\n            };\n            margin?: number;\n        };\n        shipping?: {\n            weight?: number;\n            dimensions?: {\n                length: number;\n                width: number;\n                height: number;\n            };\n            requiresShipping?: boolean;\n            freeShipping?: boolean;\n        };\n        seo?: {\n            metaTitle?: string;\n            metaDescription?: string;\n            slug?: string;\n        };\n        customFields?: Record<string, any>;\n        tags?: string[];\n        notes?: string;\n    };\n    images?: string[];\n    documents?: string[];\n    specifications?: Record<string, any>;\n    variants?: Array<{\n        id?: string;\n        name: string;\n        sku: string;\n        price: {\n            amount: number;\n            currency: string;\n        };\n        compareAtPrice?: {\n            amount: number;\n            currency: string;\n        };\n        costPrice?: {\n            amount: number;\n            currency: string;\n        };\n        inventory: {\n            quantity: number;\n            reserved: number;\n            available: number;\n        };\n        attributes: Record<string, any>;\n        isActive: boolean;\n    }>;\n}\nexport interface UpdateProductResponse {\n    success: true;\n    data: {\n        product: Product;\n    };\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\product\\update-product.use-case.d.ts",
        "start": 3,
        "end": 90,
        "startLoc": {
          "line": 3,
          "column": 1,
          "position": 26
        },
        "endLoc": {
          "line": 90,
          "column": 8,
          "position": 668
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\product\\update-product.use-case.ts",
        "start": 9,
        "end": 98,
        "startLoc": {
          "line": 9,
          "column": 1,
          "position": 47
        },
        "endLoc": {
          "line": 98,
          "column": 6,
          "position": 691
        }
      }
    },
    {
      "format": "typescript",
      "lines": 87,
      "fragment": "export interface CreateProductRequest {\n    organizationId: string;\n    name: string;\n    description?: string;\n    shortDescription?: string;\n    sku: string;\n    barcode?: string;\n    type: 'physical' | 'digital' | 'service' | 'subscription' | 'bundle';\n    status: 'active' | 'inactive' | 'discontinued' | 'draft' | 'archived';\n    category: string;\n    brand?: string;\n    supplier?: string;\n    settings: {\n        inventory: {\n            trackInventory: boolean;\n            lowStockThreshold: number;\n            allowBackorder: boolean;\n            allowPreorder: boolean;\n        };\n        pricing: {\n            costPrice?: {\n                amount: number;\n                currency: string;\n            };\n            sellingPrice: {\n                amount: number;\n                currency: string;\n            };\n            compareAtPrice?: {\n                amount: number;\n                currency: string;\n            };\n            margin?: number;\n        };\n        shipping: {\n            weight?: number;\n            dimensions?: {\n                length: number;\n                width: number;\n                height: number;\n            };\n            requiresShipping: boolean;\n            freeShipping: boolean;\n        };\n        seo: {\n            metaTitle?: string;\n            metaDescription?: string;\n            slug: string;\n        };\n        customFields: Record<string, any>;\n        tags: string[];\n        notes: string;\n    };\n    images?: string[];\n    documents?: string[];\n    specifications?: Record<string, any>;\n    variants?: Array<{\n        name: string;\n        sku: string;\n        price: {\n            amount: number;\n            currency: string;\n        };\n        compareAtPrice?: {\n            amount: number;\n            currency: string;\n        };\n        costPrice?: {\n            amount: number;\n            currency: string;\n        };\n        inventory: {\n            quantity: number;\n            reserved: number;\n            available: number;\n        };\n        attributes: Record<string, any>;\n        isActive: boolean;\n    }>;\n}\nexport interface CreateProductResponse {\n    success: true;\n    data: {\n        product: Product;\n    };\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\product\\create-product.use-case.d.ts",
        "start": 3,
        "end": 89,
        "startLoc": {
          "line": 3,
          "column": 1,
          "position": 26
        },
        "endLoc": {
          "line": 89,
          "column": 8,
          "position": 639
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\product\\create-product.use-case.ts",
        "start": 9,
        "end": 97,
        "startLoc": {
          "line": 9,
          "column": 1,
          "position": 47
        },
        "endLoc": {
          "line": 97,
          "column": 6,
          "position": 662
        }
      }
    },
    {
      "format": "typescript",
      "lines": 29,
      "fragment": "export interface UpdatePredictiveAnalyticsRequest extends BaseRequest {\n    id: string;\n    name?: string;\n    type?: 'sales_forecast' | 'demand_prediction' | 'churn_prediction' | 'revenue_forecast' | 'inventory_optimization' | 'customer_lifetime_value' | 'market_trend' | 'risk_assessment';\n    description?: string;\n    modelId?: string;\n    settings?: {\n        modelType?: 'linear_regression' | 'decision_tree' | 'random_forest' | 'neural_network' | 'time_series' | 'clustering' | 'classification' | 'deep_learning';\n        trainingPeriod?: number;\n        predictionHorizon?: number;\n        confidenceThreshold?: number;\n        autoRetrain?: boolean;\n        retrainFrequency?: number;\n        dataSource?: string[];\n        features?: string[];\n        targetVariable?: string;\n        validationMethod?: 'cross_validation' | 'holdout' | 'time_series_split';\n        hyperparameters?: Record<string, any>;\n        customFields?: Record<string, any>;\n        tags?: string[];\n        notes?: string;\n    };\n}\nexport interface UpdatePredictiveAnalyticsResponse extends BaseResponse {\n    data: {\n        predictiveAnalytics: PredictiveAnalytics;\n    };\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\predictive-analytics\\update-predictive-analytics.use-case.d.ts",
        "start": 4,
        "end": 32,
        "startLoc": {
          "line": 4,
          "column": 1,
          "position": 45
        },
        "endLoc": {
          "line": 32,
          "column": 8,
          "position": 336
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\predictive-analytics\\update-predictive-analytics.use-case.ts",
        "start": 9,
        "end": 39,
        "startLoc": {
          "line": 9,
          "column": 1,
          "position": 53
        },
        "endLoc": {
          "line": 39,
          "column": 6,
          "position": 346
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": "extends BaseUseCase {\n    predictiveAnalyticsRepository;\n    constructor(predictiveAnalyticsRepository) {\n        super();\n        this.predictiveAnalyticsRepository = predictiveAnalyticsRepository;\n    }\n    async execute(request) {\n        this.validateId(request.id, 'Predictive Analytics ID');\n        const existingPredictiveAnalytics = await this.predictiveAnalyticsRepository.findById(request.id);\n        if (!existingPredictiveAnalytics) {\n            throw new Error(`Predictive analytics with ID '${request.id}' not found`);\n        }\n        if (existingPredictiveAnalytics",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\predictive-analytics\\train-model.use-case.js",
        "start": 2,
        "end": 14,
        "startLoc": {
          "line": 2,
          "column": 2,
          "position": 19
        },
        "endLoc": {
          "line": 14,
          "column": 28,
          "position": 135
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\predictive-analytics\\update-predictive-analytics.use-case.js",
        "start": 2,
        "end": 14,
        "startLoc": {
          "line": 2,
          "column": 2,
          "position": 19
        },
        "endLoc": {
          "line": 14,
          "column": 8,
          "position": 135
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": "export interface TrainModelRequest extends BaseRequest {\n    id: string;\n    trainingData?: Record<string, any>[];\n    forceRetrain?: boolean;\n}\nexport interface TrainModelResponse extends BaseResponse {\n    data: {\n        predictiveAnalytics: PredictiveAnalytics;\n        trainingMetrics: {\n            accuracy: number;\n            precision: number;\n            recall: number;\n            f1Score: number;\n            mae: number;\n            mse: number;\n            rmse: number;\n            r2Score: number;\n            lastTrainingDate: Date;\n            trainingDuration: number;\n            dataPoints: number;\n            modelVersion: string;\n        };\n    };\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\predictive-analytics\\train-model.use-case.d.ts",
        "start": 4,
        "end": 28,
        "startLoc": {
          "line": 4,
          "column": 1,
          "position": 45
        },
        "endLoc": {
          "line": 28,
          "column": 8,
          "position": 217
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\predictive-analytics\\train-model.use-case.ts",
        "start": 9,
        "end": 35,
        "startLoc": {
          "line": 9,
          "column": 1,
          "position": 53
        },
        "endLoc": {
          "line": 35,
          "column": 6,
          "position": 227
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": "export interface GeneratePredictionRequest extends BaseRequest {\n    id: string;\n    inputData: Record<string, any>;\n    confidence?: number;\n}\nexport interface GeneratePredictionResponse extends BaseResponse {\n    data: {\n        prediction: {\n            id: string;\n            timestamp: Date;\n            inputData: Record<string, any>;\n            predictedValue: number | string | boolean;\n            confidence: number;\n            probability?: number;\n            metadata: Record<string, any>;\n        };\n        predictiveAnalytics: PredictiveAnalytics;\n    };\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\predictive-analytics\\generate-prediction.use-case.d.ts",
        "start": 4,
        "end": 23,
        "startLoc": {
          "line": 4,
          "column": 1,
          "position": 45
        },
        "endLoc": {
          "line": 23,
          "column": 8,
          "position": 200
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\predictive-analytics\\generate-prediction.use-case.ts",
        "start": 9,
        "end": 30,
        "startLoc": {
          "line": 9,
          "column": 1,
          "position": 53
        },
        "endLoc": {
          "line": 30,
          "column": 6,
          "position": 210
        }
      }
    },
    {
      "format": "typescript",
      "lines": 28,
      "fragment": "export interface CreatePredictiveAnalyticsRequest extends BaseRequest {\n    name: string;\n    type: 'sales_forecast' | 'demand_prediction' | 'churn_prediction' | 'revenue_forecast' | 'inventory_optimization' | 'customer_lifetime_value' | 'market_trend' | 'risk_assessment';\n    description?: string;\n    modelId?: string;\n    settings: {\n        modelType: 'linear_regression' | 'decision_tree' | 'random_forest' | 'neural_network' | 'time_series' | 'clustering' | 'classification' | 'deep_learning';\n        trainingPeriod: number;\n        predictionHorizon: number;\n        confidenceThreshold: number;\n        autoRetrain: boolean;\n        retrainFrequency: number;\n        dataSource: string[];\n        features: string[];\n        targetVariable: string;\n        validationMethod: 'cross_validation' | 'holdout' | 'time_series_split';\n        hyperparameters: Record<string, any>;\n        customFields: Record<string, any>;\n        tags: string[];\n        notes: string;\n    };\n}\nexport interface CreatePredictiveAnalyticsResponse extends BaseResponse {\n    data: {\n        predictiveAnalytics: PredictiveAnalytics;\n    };\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\predictive-analytics\\create-predictive-analytics.use-case.d.ts",
        "start": 4,
        "end": 31,
        "startLoc": {
          "line": 4,
          "column": 1,
          "position": 45
        },
        "endLoc": {
          "line": 31,
          "column": 8,
          "position": 312
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\predictive-analytics\\create-predictive-analytics.use-case.ts",
        "start": 9,
        "end": 38,
        "startLoc": {
          "line": 9,
          "column": 1,
          "position": 53
        },
        "endLoc": {
          "line": 38,
          "column": 6,
          "position": 322
        }
      }
    },
    {
      "format": "typescript",
      "lines": 62,
      "fragment": "export interface UpdateInvoiceRequest extends BaseRequest {\n    id: string;\n    invoiceNumber?: string;\n    type?: 'invoice' | 'credit_note' | 'debit_note' | 'proforma' | 'quote' | 'receipt';\n    status?: 'draft' | 'sent' | 'paid' | 'overdue' | 'cancelled' | 'refunded' | 'partially_paid';\n    paymentStatus?: 'pending' | 'paid' | 'partial' | 'overdue' | 'cancelled';\n    companyId?: string;\n    contactId?: string;\n    issueDate?: Date;\n    dueDate?: Date;\n    paidDate?: Date;\n    items?: Array<{\n        id?: string;\n        productId?: string;\n        description: string;\n        quantity: number;\n        unitPrice: {\n            amount: number;\n            currency: string;\n        };\n        totalPrice: {\n            amount: number;\n            currency: string;\n        };\n        taxRate?: number;\n        taxAmount?: {\n            amount: number;\n            currency: string;\n        };\n        discountRate?: number;\n        discountAmount?: {\n            amount: number;\n            currency: string;\n        };\n        notes?: string;\n    }>;\n    paymentMethod?: 'cash' | 'credit_card' | 'bank_transfer' | 'check' | 'paypal' | 'stripe' | 'other';\n    reference?: string;\n    notes?: string;\n    settings?: {\n        currency?: string;\n        taxInclusive?: boolean;\n        defaultTaxRate?: number;\n        paymentTerms?: number;\n        lateFeeRate?: number;\n        lateFeeAmount?: {\n            amount: number;\n            currency: string;\n        };\n        notes?: string;\n        footer?: string;\n        customFields?: Record<string, any>;\n        tags?: string[];\n    };\n    attachments?: string[];\n}\nexport interface UpdateInvoiceResponse extends BaseResponse {\n    data: {\n        invoice: Invoice;\n    };\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\invoice\\update-invoice.use-case.d.ts",
        "start": 4,
        "end": 65,
        "startLoc": {
          "line": 4,
          "column": 1,
          "position": 45
        },
        "endLoc": {
          "line": 65,
          "column": 8,
          "position": 571
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\invoice\\update-invoice.use-case.ts",
        "start": 10,
        "end": 73,
        "startLoc": {
          "line": 10,
          "column": 1,
          "position": 66
        },
        "endLoc": {
          "line": 73,
          "column": 6,
          "position": 594
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": "this.generateId(),\n                productId: item.productId,\n                description: item.description,\n                quantity: item.quantity,\n                unitPrice: Money.create(item.unitPrice.amount, item.unitPrice.currency),\n                totalPrice: Money.create(item.totalPrice.amount, item.totalPrice.currency),\n                taxRate: item.taxRate,\n                taxAmount: item.taxAmount ? Money.create(item.taxAmount.amount, item.taxAmount.currency) : undefined,\n                discountRate: item.discountRate,\n                discountAmount: item.discountAmount ? Money.create(item.discountAmount.amount, item.discountAmount.currency) : undefined,\n                notes: item.notes,\n            })",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\invoice\\create-invoice.use-case.js",
        "start": 45,
        "end": 56,
        "startLoc": {
          "line": 45,
          "column": 2,
          "position": 533
        },
        "endLoc": {
          "line": 56,
          "column": 2,
          "position": 708
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\invoice\\update-invoice.use-case.js",
        "start": 62,
        "end": 73,
        "startLoc": {
          "line": 62,
          "column": 2,
          "position": 668
        },
        "endLoc": {
          "line": 73,
          "column": 2,
          "position": 843
        }
      }
    },
    {
      "format": "typescript",
      "lines": 60,
      "fragment": "export interface CreateInvoiceRequest extends BaseRequest {\n    invoiceNumber: string;\n    type: 'invoice' | 'credit_note' | 'debit_note' | 'proforma' | 'quote' | 'receipt';\n    status: 'draft' | 'sent' | 'paid' | 'overdue' | 'cancelled' | 'refunded' | 'partially_paid';\n    paymentStatus: 'pending' | 'paid' | 'partial' | 'overdue' | 'cancelled';\n    companyId: string;\n    contactId?: string;\n    issueDate: Date;\n    dueDate: Date;\n    paidDate?: Date;\n    items: Array<{\n        productId?: string;\n        description: string;\n        quantity: number;\n        unitPrice: {\n            amount: number;\n            currency: string;\n        };\n        totalPrice: {\n            amount: number;\n            currency: string;\n        };\n        taxRate?: number;\n        taxAmount?: {\n            amount: number;\n            currency: string;\n        };\n        discountRate?: number;\n        discountAmount?: {\n            amount: number;\n            currency: string;\n        };\n        notes?: string;\n    }>;\n    paymentMethod?: 'cash' | 'credit_card' | 'bank_transfer' | 'check' | 'paypal' | 'stripe' | 'other';\n    reference?: string;\n    notes?: string;\n    settings: {\n        currency: string;\n        taxInclusive: boolean;\n        defaultTaxRate: number;\n        paymentTerms: number;\n        lateFeeRate?: number;\n        lateFeeAmount?: {\n            amount: number;\n            currency: string;\n        };\n        notes?: string;\n        footer?: string;\n        customFields: Record<string, any>;\n        tags: string[];\n    };\n    attachments?: string[];\n}\nexport interface CreateInvoiceResponse extends BaseResponse {\n    data: {\n        invoice: Invoice;\n    };\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\invoice\\create-invoice.use-case.d.ts",
        "start": 4,
        "end": 63,
        "startLoc": {
          "line": 4,
          "column": 1,
          "position": 45
        },
        "endLoc": {
          "line": 63,
          "column": 8,
          "position": 541
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\invoice\\create-invoice.use-case.ts",
        "start": 10,
        "end": 71,
        "startLoc": {
          "line": 10,
          "column": 1,
          "position": 66
        },
        "endLoc": {
          "line": 71,
          "column": 6,
          "position": 564
        }
      }
    },
    {
      "format": "typescript",
      "lines": 27,
      "fragment": "export interface UpdateInventoryKardexRequest extends BaseRequest {\n    id: string;\n    warehouseId?: string;\n    locationId?: string;\n    settings?: {\n        trackInventory?: boolean;\n        allowNegativeStock?: boolean;\n        lowStockThreshold?: number;\n        reorderPoint?: number;\n        reorderQuantity?: number;\n        costMethod?: 'fifo' | 'lifo' | 'average' | 'standard';\n        valuationMethod?: 'fifo' | 'lifo' | 'average' | 'standard';\n        autoReorder?: boolean;\n        trackExpiration?: boolean;\n        trackSerialNumbers?: boolean;\n        trackBatchNumbers?: boolean;\n        customFields?: Record<string, any>;\n        tags?: string[];\n        notes?: string;\n    };\n}\nexport interface UpdateInventoryKardexResponse extends BaseResponse {\n    data: {\n        inventoryKardex: InventoryKardex;\n    };\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\inventory-kardex\\update-inventory-kardex.use-case.d.ts",
        "start": 4,
        "end": 30,
        "startLoc": {
          "line": 4,
          "column": 1,
          "position": 45
        },
        "endLoc": {
          "line": 30,
          "column": 8,
          "position": 270
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\inventory-kardex\\update-inventory-kardex.use-case.ts",
        "start": 10,
        "end": 38,
        "startLoc": {
          "line": 10,
          "column": 1,
          "position": 66
        },
        "endLoc": {
          "line": 38,
          "column": 6,
          "position": 293
        }
      }
    },
    {
      "format": "typescript",
      "lines": 27,
      "fragment": "export interface RecordMovementRequest extends BaseRequest {\n    inventoryKardexId: string;\n    movementType: 'in' | 'out' | 'transfer' | 'adjustment' | 'return' | 'damage' | 'expired' | 'theft';\n    movementReason: 'purchase' | 'sale' | 'transfer_in' | 'transfer_out' | 'adjustment' | 'return' | 'damage' | 'expired' | 'theft' | 'production' | 'consumption' | 'other';\n    quantity: number;\n    unitCost?: {\n        amount: number;\n        currency: string;\n    };\n    reference?: string;\n    referenceId?: string;\n    notes?: string;\n    batchNumber?: string;\n    expirationDate?: Date;\n    serialNumber?: string;\n    supplierId?: string;\n    customerId?: string;\n    toWarehouseId?: string;\n    toLocationId?: string;\n}\nexport interface RecordMovementResponse extends BaseResponse {\n    data: {\n        inventoryKardex: InventoryKardex;\n        movement: any;\n    };\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\inventory-kardex\\record-movement.use-case.d.ts",
        "start": 4,
        "end": 30,
        "startLoc": {
          "line": 4,
          "column": 1,
          "position": 45
        },
        "endLoc": {
          "line": 30,
          "column": 8,
          "position": 304
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\inventory-kardex\\record-movement.use-case.ts",
        "start": 10,
        "end": 38,
        "startLoc": {
          "line": 10,
          "column": 1,
          "position": 66
        },
        "endLoc": {
          "line": 38,
          "column": 6,
          "position": 327
        }
      }
    },
    {
      "format": "typescript",
      "lines": 32,
      "fragment": "export interface CreateInventoryKardexRequest extends BaseRequest {\n    productId: string;\n    warehouseId?: string;\n    locationId?: string;\n    initialQuantity: number;\n    unitCost: {\n        amount: number;\n        currency: string;\n    };\n    settings: {\n        trackInventory: boolean;\n        allowNegativeStock: boolean;\n        lowStockThreshold: number;\n        reorderPoint: number;\n        reorderQuantity: number;\n        costMethod: 'fifo' | 'lifo' | 'average' | 'standard';\n        valuationMethod: 'fifo' | 'lifo' | 'average' | 'standard';\n        autoReorder: boolean;\n        trackExpiration: boolean;\n        trackSerialNumbers: boolean;\n        trackBatchNumbers: boolean;\n        customFields: Record<string, any>;\n        tags: string[];\n        notes: string;\n    };\n}\nexport interface CreateInventoryKardexResponse extends BaseResponse {\n    data: {\n        inventoryKardex: InventoryKardex;\n    };\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\inventory-kardex\\create-inventory-kardex.use-case.d.ts",
        "start": 4,
        "end": 35,
        "startLoc": {
          "line": 4,
          "column": 1,
          "position": 45
        },
        "endLoc": {
          "line": 35,
          "column": 8,
          "position": 286
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\inventory-kardex\\create-inventory-kardex.use-case.ts",
        "start": 10,
        "end": 43,
        "startLoc": {
          "line": 10,
          "column": 1,
          "position": 66
        },
        "endLoc": {
          "line": 43,
          "column": 6,
          "position": 309
        }
      }
    },
    {
      "format": "typescript",
      "lines": 26,
      "fragment": "export interface UpdateInteractionRequest {\n    id: InteractionId;\n    organizationId: OrganizationId;\n    userId: UserId;\n    updates: {\n        subject?: string;\n        description?: string;\n        status?: InteractionStatus;\n        priority?: InteractionPriority;\n        scheduledAt?: Date;\n        duration?: number;\n        outcome?: string;\n        nextAction?: string;\n        nextActionDate?: Date;\n        tags?: string[];\n        customFields?: Record<string, any>;\n        attachments?: string[];\n    };\n}\nexport interface UpdateInteractionResponse {\n    success: true;\n    data: {\n        interaction: Interaction;\n    };\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\interaction\\update-interaction.use-case.d.ts",
        "start": 4,
        "end": 29,
        "startLoc": {
          "line": 4,
          "column": 1,
          "position": 54
        },
        "endLoc": {
          "line": 29,
          "column": 8,
          "position": 237
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\interaction\\update-interaction.use-case.ts",
        "start": 10,
        "end": 37,
        "startLoc": {
          "line": 10,
          "column": 1,
          "position": 81
        },
        "endLoc": {
          "line": 37,
          "column": 6,
          "position": 266
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ".attachments.length > 5) {\n            throw createValidationError('Cannot have more than 5 attachments', 'attachments');\n        }\n        const user = await this.userDomainService.findById(request.userId);\n        if (!user) {\n            throw createNotFoundError('User', request.userId);\n        }\n        if (user.organizationId !== request.organizationId) {\n            throw createConflictError('User', 'User does not belong to the specified organization');\n        }\n        if (user.status !== 'ACTIVE') {\n            throw createConflictError('User', 'User is not active');\n        }\n        const interaction",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\interaction\\create-interaction.use-case.js",
        "start": 38,
        "end": 51,
        "startLoc": {
          "line": 38,
          "column": 8,
          "position": 400
        },
        "endLoc": {
          "line": 51,
          "column": 12,
          "position": 540
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\interaction\\update-interaction.use-case.js",
        "start": 46,
        "end": 59,
        "startLoc": {
          "line": 46,
          "column": 8,
          "position": 605
        },
        "endLoc": {
          "line": 59,
          "column": 20,
          "position": 745
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": "export interface CreateInteractionRequest {\n    organizationId: OrganizationId;\n    contactId: ContactId;\n    userId: UserId;\n    type: InteractionType;\n    subject: string;\n    description?: string;\n    priority?: InteractionPriority;\n    companyId?: CompanyId;\n    scheduledAt?: Date;\n    nextAction?: string;\n    nextActionDate?: Date;\n    tags?: string[];\n    customFields?: Record<string, any>;\n    attachments?: string[];\n}\nexport interface CreateInteractionResponse {\n    success: true;\n    data: {\n        interaction: Interaction;\n    };\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\interaction\\create-interaction.use-case.d.ts",
        "start": 4,
        "end": 26,
        "startLoc": {
          "line": 4,
          "column": 1,
          "position": 57
        },
        "endLoc": {
          "line": 26,
          "column": 8,
          "position": 220
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\interaction\\create-interaction.use-case.ts",
        "start": 10,
        "end": 34,
        "startLoc": {
          "line": 10,
          "column": 1,
          "position": 87
        },
        "endLoc": {
          "line": 34,
          "column": 6,
          "position": 252
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": ", 'id');\n        }\n        if (!request.organizationId) {\n            throw createValidationError('Organization ID is required', 'organizationId');\n        }\n        if (!request.userId) {\n            throw createValidationError('User ID is required', 'userId');\n        }\n        if (!request.updates || Object.keys(request.updates).length === 0) {\n            throw createValidationError('At least one update field is required', 'updates');\n        }\n        if (request.updates.name",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\deal\\update-deal.use-case.js",
        "start": 12,
        "end": 23,
        "startLoc": {
          "line": 12,
          "column": 22,
          "position": 110
        },
        "endLoc": {
          "line": 23,
          "column": 5,
          "position": 225
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\interaction\\update-interaction.use-case.js",
        "start": 12,
        "end": 23,
        "startLoc": {
          "line": 12,
          "column": 29,
          "position": 110
        },
        "endLoc": {
          "line": 23,
          "column": 8,
          "position": 225
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ");\n        }\n        const user = await this.userDomainService.findById(request.userId);\n        if (!user) {\n            throw createNotFoundError('User', request.userId);\n        }\n        if (user.organizationId !== request.organizationId) {\n            throw createConflictError('User', 'User does not belong to the specified organization');\n        }\n        if (user.status !== 'ACTIVE') {\n            throw createConflictError('User', 'User is not active');\n        }\n        const existingDeal",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\deal\\update-deal.use-case.js",
        "start": 62,
        "end": 74,
        "startLoc": {
          "line": 62,
          "column": 13,
          "position": 900
        },
        "endLoc": {
          "line": 74,
          "column": 13,
          "position": 1019
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\interaction\\update-interaction.use-case.js",
        "start": 47,
        "end": 59,
        "startLoc": {
          "line": 47,
          "column": 14,
          "position": 626
        },
        "endLoc": {
          "line": 59,
          "column": 20,
          "position": 745
        }
      }
    },
    {
      "format": "javascript",
      "lines": 19,
      "fragment": ";\n    }\n    async updateStatus(id, organizationId, userId, status) {\n        return this.execute({\n            id,\n            organizationId,\n            userId,\n            updates: { status }\n        });\n    }\n    async updatePriority(id, organizationId, userId, priority) {\n        return this.execute({\n            id,\n            organizationId,\n            userId,\n            updates: { priority }\n        });\n    }\n    async updateValue",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\deal\\update-deal.use-case.js",
        "start": 159,
        "end": 177,
        "startLoc": {
          "line": 159,
          "column": 2,
          "position": 1965
        },
        "endLoc": {
          "line": 177,
          "column": 12,
          "position": 2089
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\interaction\\update-interaction.use-case.js",
        "start": 110,
        "end": 128,
        "startLoc": {
          "line": 110,
          "column": 2,
          "position": 1307
        },
        "endLoc": {
          "line": 128,
          "column": 20,
          "position": 1431
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ".tags;\n        if (!currentTags.includes(tag)) {\n            currentTags.push(tag);\n        }\n        return this.execute({\n            id,\n            organizationId,\n            userId,\n            updates: { tags: currentTags }\n        });\n    }\n    async removeTag(id, organizationId, userId, tag) {\n        const existingDeal",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\deal\\update-deal.use-case.js",
        "start": 214,
        "end": 226,
        "startLoc": {
          "line": 214,
          "column": 13,
          "position": 2401
        },
        "endLoc": {
          "line": 226,
          "column": 13,
          "position": 2496
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\interaction\\update-interaction.use-case.js",
        "start": 164,
        "end": 176,
        "startLoc": {
          "line": 164,
          "column": 20,
          "position": 1698
        },
        "endLoc": {
          "line": 176,
          "column": 20,
          "position": 1793
        }
      }
    },
    {
      "format": "typescript",
      "lines": 35,
      "fragment": "export interface UpdateDealRequest {\n    id: DealId;\n    organizationId: OrganizationId;\n    userId: UserId;\n    updates: {\n        name?: string;\n        description?: string;\n        stage?: DealStage;\n        status?: DealStatus;\n        priority?: DealPriority;\n        value?: number;\n        currency?: string;\n        probability?: number;\n        expectedCloseDate?: Date;\n        nextStep?: string;\n        nextStepDate?: Date;\n        tags?: string[];\n        customFields?: Record<string, any>;\n        attachments?: string[];\n        notes?: string;\n        competitors?: string[];\n        decisionMakers?: string[];\n        budget?: number;\n        timeline?: string;\n        requirements?: string[];\n        objections?: string[];\n    };\n}\nexport interface UpdateDealResponse {\n    success: true;\n    data: {\n        deal: Deal;\n    };\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\deal\\update-deal.use-case.d.ts",
        "start": 4,
        "end": 38,
        "startLoc": {
          "line": 4,
          "column": 1,
          "position": 57
        },
        "endLoc": {
          "line": 38,
          "column": 8,
          "position": 320
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\deal\\update-deal.use-case.ts",
        "start": 10,
        "end": 46,
        "startLoc": {
          "line": 10,
          "column": 1,
          "position": 84
        },
        "endLoc": {
          "line": 46,
          "column": 6,
          "position": 349
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ";\n        this.userDomainService = userDomainService;\n    }\n    async execute(request) {\n        if (!request.organizationId) {\n            throw createValidationError('Organization ID is required', 'organizationId');\n        }\n        if (!request.contactId) {\n            throw createValidationError('Contact ID is required', 'contactId');\n        }\n        if (!request.userId) {\n            throw createValidationError('User ID is required', 'userId');\n        }\n        if (!request.name",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\deal\\create-deal.use-case.js",
        "start": 7,
        "end": 20,
        "startLoc": {
          "line": 7,
          "column": 15,
          "position": 67
        },
        "endLoc": {
          "line": 20,
          "column": 5,
          "position": 180
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\interaction\\create-interaction.use-case.js",
        "start": 7,
        "end": 20,
        "startLoc": {
          "line": 7,
          "column": 22,
          "position": 67
        },
        "endLoc": {
          "line": 20,
          "column": 5,
          "position": 180
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ".objections.length > 20) {\n            throw createValidationError('Cannot have more than 20 objections', 'objections');\n        }\n        const user = await this.userDomainService.findById(request.userId);\n        if (!user) {\n            throw createNotFoundError('User', request.userId);\n        }\n        if (user.organizationId !== request.organizationId) {\n            throw createConflictError('User', 'User does not belong to the specified organization');\n        }\n        if (user.status !== 'ACTIVE') {\n            throw createConflictError('User', 'User is not active');\n        }\n        const existingDeal = await this.dealRepository.existsByContactAndName",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\deal\\create-deal.use-case.js",
        "start": 59,
        "end": 72,
        "startLoc": {
          "line": 59,
          "column": 8,
          "position": 685
        },
        "endLoc": {
          "line": 72,
          "column": 23,
          "position": 835
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\deal\\update-deal.use-case.js",
        "start": 61,
        "end": 74,
        "startLoc": {
          "line": 61,
          "column": 8,
          "position": 879
        },
        "endLoc": {
          "line": 74,
          "column": 9,
          "position": 1029
        }
      }
    },
    {
      "format": "typescript",
      "lines": 34,
      "fragment": "export interface CreateDealRequest {\n    organizationId: OrganizationId;\n    contactId: ContactId;\n    userId: UserId;\n    name: string;\n    description?: string;\n    stage?: DealStage;\n    priority?: DealPriority;\n    source?: DealSource;\n    value: number;\n    currency?: string;\n    probability?: number;\n    companyId?: CompanyId;\n    expectedCloseDate?: Date;\n    nextStep?: string;\n    nextStepDate?: Date;\n    tags?: string[];\n    customFields?: Record<string, any>;\n    attachments?: string[];\n    notes?: string;\n    competitors?: string[];\n    decisionMakers?: string[];\n    budget?: number;\n    timeline?: string;\n    requirements?: string[];\n    objections?: string[];\n}\nexport interface CreateDealResponse {\n    success: true;\n    data: {\n        deal: Deal;\n    };\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\deal\\create-deal.use-case.d.ts",
        "start": 4,
        "end": 37,
        "startLoc": {
          "line": 4,
          "column": 1,
          "position": 60
        },
        "endLoc": {
          "line": 37,
          "column": 8,
          "position": 319
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\deal\\create-deal.use-case.ts",
        "start": 10,
        "end": 45,
        "startLoc": {
          "line": 10,
          "column": 1,
          "position": 90
        },
        "endLoc": {
          "line": 45,
          "column": 6,
          "position": 351
        }
      }
    },
    {
      "format": "javascript",
      "lines": 17,
      "fragment": ".constraints.map(constraint => ({\n                    id: constraint.id,\n                    name: constraint.name,\n                    type: constraint.type,\n                    columns: constraint.columns,\n                    referencedTable: constraint.referencedTable,\n                    referencedColumns: constraint.referencedColumns,\n                    condition: constraint.condition,\n                    description: constraint.description,\n                    isDeferrable: constraint.isDeferrable,\n                    initiallyDeferred: constraint.initiallyDeferred,\n                    onDelete: constraint.onDelete,\n                    onUpdate: constraint.onUpdate,\n                    createdAt: new Date(),\n                    updatedAt: new Date()\n                })),\n                indexes",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\database-schema\\create-database-schema.use-case.js",
        "start": 92,
        "end": 108,
        "startLoc": {
          "line": 92,
          "column": 6,
          "position": 938
        },
        "endLoc": {
          "line": 108,
          "column": 8,
          "position": 1086
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\database-schema\\create-database-schema.use-case.js",
        "start": 67,
        "end": 83,
        "startLoc": {
          "line": 67,
          "column": 7,
          "position": 705
        },
        "endLoc": {
          "line": 83,
          "column": 12,
          "position": 853
        }
      }
    },
    {
      "format": "typescript",
      "lines": 159,
      "fragment": "export interface CreateDatabaseSchemaRequest extends BaseRequest {\n    name: string;\n    type: 'postgresql' | 'mysql' | 'sqlite' | 'mongodb' | 'redis' | 'elasticsearch';\n    description?: string;\n    settings: {\n        version: string;\n        encoding: string;\n        collation: string;\n        timezone: string;\n        connectionPool: {\n            min: number;\n            max: number;\n            idle: number;\n            acquire: number;\n            evict: number;\n        };\n        migrations: {\n            enabled: boolean;\n            directory: string;\n            table: string;\n            lockTable: string;\n        };\n        backup: {\n            enabled: boolean;\n            frequency: string;\n            retention: number;\n            compression: boolean;\n        };\n        monitoring: {\n            enabled: boolean;\n            slowQueryThreshold: number;\n            logLevel: string;\n            metrics: boolean;\n        };\n        security: {\n            ssl: boolean;\n            encryption: boolean;\n            auditLog: boolean;\n            rowLevelSecurity: boolean;\n        };\n        performance: {\n            queryOptimization: boolean;\n            indexOptimization: boolean;\n            connectionPooling: boolean;\n            caching: boolean;\n        };\n        customFields: Record<string, any>;\n        tags: string[];\n        notes: string;\n    };\n    tables?: Array<{\n        id: string;\n        name: string;\n        type: 'table' | 'view' | 'materialized_view' | 'function' | 'procedure' | 'trigger' | 'index' | 'sequence';\n        schema: string;\n        description: string;\n        columns: Array<{\n            id: string;\n            name: string;\n            type: 'varchar' | 'text' | 'integer' | 'bigint' | 'decimal' | 'boolean' | 'date' | 'timestamp' | 'json' | 'jsonb' | 'uuid' | 'array' | 'enum';\n            length?: number;\n            precision?: number;\n            scale?: number;\n            nullable: boolean;\n            defaultValue?: any;\n            constraints: Array<{\n                id: string;\n                name: string;\n                type: 'primary_key' | 'foreign_key' | 'unique' | 'check' | 'not_null' | 'default' | 'index';\n                columns: string[];\n                referencedTable?: string;\n                referencedColumns?: string[];\n                condition?: string;\n                description: string;\n                isDeferrable: boolean;\n                initiallyDeferred: boolean;\n                onDelete?: 'CASCADE' | 'SET NULL' | 'RESTRICT' | 'NO ACTION';\n                onUpdate?: 'CASCADE' | 'SET NULL' | 'RESTRICT' | 'NO ACTION';\n            }>;\n            description: string;\n            isIndexed: boolean;\n            isPrimaryKey: boolean;\n            isForeignKey: boolean;\n            referencedTable?: string;\n            referencedColumn?: string;\n        }>;\n        constraints: Array<{\n            id: string;\n            name: string;\n            type: 'primary_key' | 'foreign_key' | 'unique' | 'check' | 'not_null' | 'default' | 'index';\n            columns: string[];\n            referencedTable?: string;\n            referencedColumns?: string[];\n            condition?: string;\n            description: string;\n            isDeferrable: boolean;\n            initiallyDeferred: boolean;\n            onDelete?: 'CASCADE' | 'SET NULL' | 'RESTRICT' | 'NO ACTION';\n            onUpdate?: 'CASCADE' | 'SET NULL' | 'RESTRICT' | 'NO ACTION';\n        }>;\n        indexes: Array<{\n            id: string;\n            name: string;\n            table: string;\n            columns: string[];\n            type: 'btree' | 'hash' | 'gin' | 'gist' | 'spgist' | 'brin';\n            unique: boolean;\n            partial: boolean;\n            condition?: string;\n            description: string;\n            isActive: boolean;\n        }>;\n        triggers: Array<{\n            id: string;\n            name: string;\n            table: string;\n            event: 'INSERT' | 'UPDATE' | 'DELETE' | 'TRUNCATE';\n            timing: 'BEFORE' | 'AFTER' | 'INSTEAD OF';\n            function: string;\n            condition?: string;\n            description: string;\n            isActive: boolean;\n        }>;\n        rowLevelSecurity: boolean;\n        policies: Array<{\n            id: string;\n            name: string;\n            table: string;\n            command: 'SELECT' | 'INSERT' | 'UPDATE' | 'DELETE' | 'ALL';\n            roles: string[];\n            using?: string;\n            withCheck?: string;\n            description: string;\n            isActive: boolean;\n        }>;\n        statistics: {\n            rowCount: number;\n            tableSize: number;\n            indexSize: number;\n            totalSize: number;\n            lastAnalyzed: Date;\n            lastVacuumed: Date;\n            lastAutoVacuumed: Date;\n            deadTuples: number;\n            liveTuples: number;\n            nDistinct: number;\n            correlation: number;\n            mostCommonValues: any[];\n            mostCommonFrequencies: number[];\n            histogramBounds: any[];\n        };\n    }>;\n}\nexport interface CreateDatabaseSchemaResponse extends BaseResponse {\n    data: {\n        databaseSchema: DatabaseSchema;\n    };\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\database-schema\\create-database-schema.use-case.d.ts",
        "start": 4,
        "end": 162,
        "startLoc": {
          "line": 4,
          "column": 1,
          "position": 45
        },
        "endLoc": {
          "line": 162,
          "column": 8,
          "position": 1406
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\database-schema\\create-database-schema.use-case.ts",
        "start": 9,
        "end": 169,
        "startLoc": {
          "line": 9,
          "column": 1,
          "position": 53
        },
        "endLoc": {
          "line": 169,
          "column": 6,
          "position": 1416
        }
      }
    },
    {
      "format": "typescript",
      "lines": 34,
      "fragment": "export interface AnalyzeDatabaseSchemaRequest extends BaseRequest {\n    id: string;\n    forceReanalysis?: boolean;\n}\nexport interface AnalyzeDatabaseSchemaResponse extends BaseResponse {\n    data: {\n        databaseSchema: DatabaseSchema;\n        metrics: {\n            totalTables: number;\n            totalViews: number;\n            totalFunctions: number;\n            totalProcedures: number;\n            totalTriggers: number;\n            totalIndexes: number;\n            totalConstraints: number;\n            totalPolicies: number;\n            totalSize: number;\n            averageTableSize: number;\n            largestTable: string;\n            smallestTable: string;\n            mostIndexedTable: string;\n            leastIndexedTable: string;\n            lastBackupDate?: Date;\n            lastMaintenanceDate?: Date;\n            healthScore: number;\n            performanceScore: number;\n            securityScore: number;\n            maintainabilityScore: number;\n            lastAnalysisDate: Date;\n            analysisDuration: number;\n        };\n    };\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\database-schema\\analyze-database-schema.use-case.d.ts",
        "start": 4,
        "end": 37,
        "startLoc": {
          "line": 4,
          "column": 1,
          "position": 45
        },
        "endLoc": {
          "line": 37,
          "column": 8,
          "position": 273
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\database-schema\\analyze-database-schema.use-case.ts",
        "start": 9,
        "end": 44,
        "startLoc": {
          "line": 9,
          "column": 1,
          "position": 53
        },
        "endLoc": {
          "line": 44,
          "column": 6,
          "position": 283
        }
      }
    },
    {
      "format": "typescript",
      "lines": 86,
      "fragment": "export interface UpdateContactRequest {\n    contactId: string;\n    companyId?: string;\n    firstName?: string;\n    lastName?: string;\n    middleName?: string;\n    title?: string;\n    department?: string;\n    type?: 'primary' | 'secondary' | 'decision_maker' | 'influencer' | 'user' | 'technical' | 'financial' | 'procurement';\n    status?: 'active' | 'inactive' | 'unsubscribed' | 'bounced' | 'spam' | 'deleted';\n    source?: 'website' | 'referral' | 'cold_call' | 'email' | 'social_media' | 'event' | 'trade_show' | 'webinar' | 'content' | 'advertising' | 'other';\n    priority?: 'low' | 'medium' | 'high' | 'urgent';\n    email?: string;\n    phone?: string;\n    mobile?: string;\n    fax?: string;\n    website?: string;\n    address?: {\n        street: string;\n        city: string;\n        state?: string;\n        postalCode: string;\n        country: string;\n        countryCode: string;\n    };\n    birthday?: Date;\n    anniversary?: Date;\n    gender?: 'male' | 'female' | 'other' | 'prefer_not_to_say';\n    maritalStatus?: 'single' | 'married' | 'divorced' | 'widowed' | 'separated';\n    children?: number;\n    education?: string;\n    profession?: string;\n    industry?: string;\n    experience?: number;\n    salary?: {\n        amount: number;\n        currency: string;\n    };\n    socialMedia?: {\n        linkedin?: string;\n        twitter?: string;\n        facebook?: string;\n        instagram?: string;\n        youtube?: string;\n        tiktok?: string;\n        other?: Record<string, string>;\n    };\n    communication?: {\n        preferredMethod?: 'email' | 'phone' | 'sms' | 'whatsapp' | 'linkedin' | 'other';\n        bestTimeToCall?: string;\n        timeZone?: string;\n        doNotCall?: boolean;\n        doNotEmail?: boolean;\n        doNotSms?: boolean;\n    };\n    settings?: {\n        notifications?: {\n            email?: boolean;\n            sms?: boolean;\n            push?: boolean;\n            phone?: boolean;\n        };\n        preferences?: {\n            language?: string;\n            timezone?: string;\n            currency?: string;\n            dateFormat?: string;\n            timeFormat?: string;\n        };\n        customFields?: Record<string, any>;\n        tags?: string[];\n        notes?: string;\n        internalNotes?: string;\n    };\n    assignedUserId?: string;\n    nextFollowUpDate?: Date;\n    leadScore?: number;\n    engagementScore?: number;\n    updatedBy: string;\n}\nexport interface UpdateContactResponse {\n    success: boolean;\n    contact?: Contact;\n    error?: string;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\contact\\update-contact.use-case.d.ts",
        "start": 3,
        "end": 88,
        "startLoc": {
          "line": 3,
          "column": 1,
          "position": 26
        },
        "endLoc": {
          "line": 88,
          "column": 8,
          "position": 813
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\contact\\update-contact.use-case.ts",
        "start": 10,
        "end": 97,
        "startLoc": {
          "line": 10,
          "column": 1,
          "position": 60
        },
        "endLoc": {
          "line": 97,
          "column": 6,
          "position": 849
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": "{\n    contactRepository;\n    constructor(contactRepository) {\n        this.contactRepository = contactRepository;\n    }\n    async execute(request) {\n        try {\n            const validation = this.validateRequest(request);\n            if (!validation.isValid) {\n                return {\n                    success: false,\n                    error: validation.errors.join(', ')\n                };\n            }\n            if",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\contact\\create-contact.use-case.js",
        "start": 4,
        "end": 18,
        "startLoc": {
          "line": 4,
          "column": 2,
          "position": 45
        },
        "endLoc": {
          "line": 18,
          "column": 3,
          "position": 147
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\contact\\update-contact.use-case.js",
        "start": 4,
        "end": 18,
        "startLoc": {
          "line": 4,
          "column": 2,
          "position": 45
        },
        "endLoc": {
          "line": 18,
          "column": 6,
          "position": 147
        }
      }
    },
    {
      "format": "javascript",
      "lines": 16,
      "fragment": "request.companyId && request.companyId.trim().length === 0) {\n            errors.push('Company ID cannot be empty');\n        }\n        if (request.children !== undefined && (request.children < 0 || request.children > 20)) {\n            errors.push('Children count must be between 0 and 20');\n        }\n        if (request.experience !== undefined && (request.experience < 0 || request.experience > 50)) {\n            errors.push('Experience must be between 0 and 50 years');\n        }\n        if (request.leadScore !== undefined && (request.leadScore < 0 || request.leadScore > 100)) {\n            errors.push('Lead score must be between 0 and 100');\n        }\n        if (request.engagementScore !== undefined && (request.engagementScore < 0 || request.engagementScore > 100)) {\n            errors.push('Engagement score must be between 0 and 100');\n        }\n        if (request.salary)",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\contact\\create-contact.use-case.js",
        "start": 165,
        "end": 180,
        "startLoc": {
          "line": 165,
          "column": 2,
          "position": 1764
        },
        "endLoc": {
          "line": 180,
          "column": 2,
          "position": 2002
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\contact\\update-contact.use-case.js",
        "start": 179,
        "end": 194,
        "startLoc": {
          "line": 179,
          "column": 2,
          "position": 2095
        },
        "endLoc": {
          "line": 194,
          "column": 4,
          "position": 2334
        }
      }
    },
    {
      "format": "javascript",
      "lines": 35,
      "fragment": ") {\n            if (request.salary.amount < 0) {\n                errors.push('Salary cannot be negative');\n            }\n            if (!request.salary.currency || request.salary.currency.length !== 3) {\n                errors.push('Salary currency must be a 3-letter code');\n            }\n        }\n        if (request.socialMedia) {\n            if (request.socialMedia.linkedin && !Contact.validateSocialMediaUrl(request.socialMedia.linkedin, 'linkedin')) {\n                errors.push('Invalid LinkedIn URL');\n            }\n            if (request.socialMedia.twitter && !Contact.validateSocialMediaUrl(request.socialMedia.twitter, 'twitter')) {\n                errors.push('Invalid Twitter URL');\n            }\n            if (request.socialMedia.facebook && !Contact.validateSocialMediaUrl(request.socialMedia.facebook, 'facebook')) {\n                errors.push('Invalid Facebook URL');\n            }\n            if (request.socialMedia.instagram && !Contact.validateSocialMediaUrl(request.socialMedia.instagram, 'instagram')) {\n                errors.push('Invalid Instagram URL');\n            }\n            if (request.socialMedia.youtube && !Contact.validateSocialMediaUrl(request.socialMedia.youtube, 'youtube')) {\n                errors.push('Invalid YouTube URL');\n            }\n            if (request.socialMedia.tiktok && !Contact.validateSocialMediaUrl(request.socialMedia.tiktok, 'tiktok')) {\n                errors.push('Invalid TikTok URL');\n            }\n        }\n        if (request.communication) {\n            const validMethods = ['email', 'phone', 'sms', 'whatsapp', 'linkedin', 'other'];\n            if (request.communication.preferredMethod && !validMethods.includes(request.communication.preferredMethod)) {\n                errors.push('Invalid preferred communication method');\n            }\n        }\n        if (request.assignedUserId &&",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\contact\\create-contact.use-case.js",
        "start": 180,
        "end": 214,
        "startLoc": {
          "line": 180,
          "column": 7,
          "position": 2002
        },
        "endLoc": {
          "line": 214,
          "column": 3,
          "position": 2432
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\contact\\update-contact.use-case.js",
        "start": 194,
        "end": 228,
        "startLoc": {
          "line": 194,
          "column": 10,
          "position": 2337
        },
        "endLoc": {
          "line": 228,
          "column": 4,
          "position": 2767
        }
      }
    },
    {
      "format": "typescript",
      "lines": 86,
      "fragment": "export interface CreateContactRequest {\n    organizationId: string;\n    companyId?: string;\n    firstName: string;\n    lastName: string;\n    middleName?: string;\n    title?: string;\n    department?: string;\n    type: 'primary' | 'secondary' | 'decision_maker' | 'influencer' | 'user' | 'technical' | 'financial' | 'procurement';\n    status: 'active' | 'inactive' | 'unsubscribed' | 'bounced' | 'spam' | 'deleted';\n    source: 'website' | 'referral' | 'cold_call' | 'email' | 'social_media' | 'event' | 'trade_show' | 'webinar' | 'content' | 'advertising' | 'other';\n    priority: 'low' | 'medium' | 'high' | 'urgent';\n    email?: string;\n    phone?: string;\n    mobile?: string;\n    fax?: string;\n    website?: string;\n    address?: {\n        street: string;\n        city: string;\n        state?: string;\n        postalCode: string;\n        country: string;\n        countryCode: string;\n    };\n    birthday?: Date;\n    anniversary?: Date;\n    gender?: 'male' | 'female' | 'other' | 'prefer_not_to_say';\n    maritalStatus?: 'single' | 'married' | 'divorced' | 'widowed' | 'separated';\n    children?: number;\n    education?: string;\n    profession?: string;\n    industry?: string;\n    experience?: number;\n    salary?: {\n        amount: number;\n        currency: string;\n    };\n    socialMedia?: {\n        linkedin?: string;\n        twitter?: string;\n        facebook?: string;\n        instagram?: string;\n        youtube?: string;\n        tiktok?: string;\n        other?: Record<string, string>;\n    };\n    communication?: {\n        preferredMethod?: 'email' | 'phone' | 'sms' | 'whatsapp' | 'linkedin' | 'other';\n        bestTimeToCall?: string;\n        timeZone?: string;\n        doNotCall?: boolean;\n        doNotEmail?: boolean;\n        doNotSms?: boolean;\n    };\n    settings?: {\n        notifications?: {\n            email?: boolean;\n            sms?: boolean;\n            push?: boolean;\n            phone?: boolean;\n        };\n        preferences?: {\n            language?: string;\n            timezone?: string;\n            currency?: string;\n            dateFormat?: string;\n            timeFormat?: string;\n        };\n        customFields?: Record<string, any>;\n        tags?: string[];\n        notes?: string;\n        internalNotes?: string;\n    };\n    assignedUserId?: string;\n    nextFollowUpDate?: Date;\n    leadScore?: number;\n    engagementScore?: number;\n    createdBy: string;\n}\nexport interface CreateContactResponse {\n    success: boolean;\n    contact?: Contact;\n    error?: string;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\contact\\create-contact.use-case.d.ts",
        "start": 3,
        "end": 88,
        "startLoc": {
          "line": 3,
          "column": 1,
          "position": 26
        },
        "endLoc": {
          "line": 88,
          "column": 8,
          "position": 807
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\contact\\create-contact.use-case.ts",
        "start": 10,
        "end": 97,
        "startLoc": {
          "line": 10,
          "column": 1,
          "position": 60
        },
        "endLoc": {
          "line": 97,
          "column": 6,
          "position": 843
        }
      }
    },
    {
      "format": "typescript",
      "lines": 74,
      "fragment": "export interface UpdateCompanyRequest {\n    companyId: string;\n    name?: string;\n    legalName?: string;\n    type?: 'customer' | 'supplier' | 'partner' | 'prospect' | 'competitor';\n    status?: 'active' | 'inactive' | 'suspended' | 'prospect' | 'lead';\n    size?: 'startup' | 'small' | 'medium' | 'large' | 'enterprise';\n    industry?: string;\n    source?: 'website' | 'referral' | 'cold_call' | 'email' | 'social_media' | 'event' | 'other';\n    website?: string;\n    email?: string;\n    phone?: string;\n    address?: {\n        street: string;\n        city: string;\n        state?: string;\n        postalCode: string;\n        country: string;\n        countryCode: string;\n    };\n    billingAddress?: {\n        street: string;\n        city: string;\n        state?: string;\n        postalCode: string;\n        country: string;\n        countryCode: string;\n    };\n    shippingAddress?: {\n        street: string;\n        city: string;\n        state?: string;\n        postalCode: string;\n        country: string;\n        countryCode: string;\n    };\n    taxId?: string;\n    vatNumber?: string;\n    registrationNumber?: string;\n    description?: string;\n    annualRevenue?: {\n        amount: number;\n        currency: string;\n    };\n    employeeCount?: number;\n    foundedYear?: number;\n    parentCompanyId?: string;\n    assignedUserId?: string;\n    nextFollowUpDate?: Date;\n    leadScore?: number;\n    settings?: {\n        notifications?: {\n            email?: boolean;\n            sms?: boolean;\n            push?: boolean;\n        };\n        preferences?: {\n            language?: string;\n            timezone?: string;\n            currency?: string;\n            dateFormat?: string;\n        };\n        customFields?: Record<string, any>;\n        tags?: string[];\n        notes?: string;\n    };\n    updatedBy: string;\n}\nexport interface UpdateCompanyResponse {\n    success: boolean;\n    company?: Company;\n    error?: string;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\company\\update-company.use-case.d.ts",
        "start": 3,
        "end": 76,
        "startLoc": {
          "line": 3,
          "column": 1,
          "position": 26
        },
        "endLoc": {
          "line": 76,
          "column": 8,
          "position": 625
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\company\\update-company.use-case.ts",
        "start": 10,
        "end": 85,
        "startLoc": {
          "line": 10,
          "column": 1,
          "position": 60
        },
        "endLoc": {
          "line": 85,
          "column": 6,
          "position": 661
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": "{\n    companyRepository;\n    constructor(companyRepository) {\n        this.companyRepository = companyRepository;\n    }\n    async execute(request) {\n        try {\n            const validation = this.validateRequest(request);\n            if (!validation.isValid) {\n                return {\n                    success: false,\n                    error: validation.errors.join(', ')\n                };\n            }\n            const existingCompany",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\company\\create-company.use-case.js",
        "start": 4,
        "end": 18,
        "startLoc": {
          "line": 4,
          "column": 2,
          "position": 45
        },
        "endLoc": {
          "line": 18,
          "column": 16,
          "position": 149
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\company\\update-company.use-case.js",
        "start": 4,
        "end": 18,
        "startLoc": {
          "line": 4,
          "column": 2,
          "position": 45
        },
        "endLoc": {
          "line": 18,
          "column": 8,
          "position": 149
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": "};\n        }\n        catch (error) {\n            return {\n                success: false,\n                error: error instanceof Error ? error.message : 'Unknown error occurred'\n            };\n        }\n    }\n    validateRequest(request) {\n        const errors = [];\n        if (!request.organizationId || request.organizationId.trim().length === 0) {\n            errors.push('Organization ID is required');\n        }\n        const nameValidation = Company",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\company\\create-company.use-case.js",
        "start": 89,
        "end": 103,
        "startLoc": {
          "line": 89,
          "column": 13,
          "position": 858
        },
        "endLoc": {
          "line": 103,
          "column": 8,
          "position": 981
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\contact\\create-contact.use-case.js",
        "start": 113,
        "end": 127,
        "startLoc": {
          "line": 113,
          "column": 13,
          "position": 1146
        },
        "endLoc": {
          "line": 127,
          "column": 8,
          "position": 1269
        }
      }
    },
    {
      "format": "javascript",
      "lines": 16,
      "fragment": "request.vatNumber && !Company.validateVatNumber(request.vatNumber)) {\n            errors.push('Invalid VAT number format');\n        }\n        if (request.employeeCount !== undefined && (request.employeeCount < 0 || request.employeeCount > 1000000)) {\n            errors.push('Employee count must be between 0 and 1,000,000');\n        }\n        if (request.foundedYear !== undefined) {\n            const currentYear = new Date().getFullYear();\n            if (request.foundedYear < 1800 || request.foundedYear > currentYear) {\n                errors.push(`Founded year must be between 1800 and ${currentYear}`);\n            }\n        }\n        if (request.leadScore !== undefined && (request.leadScore < 0 || request.leadScore > 100)) {\n            errors.push('Lead score must be between 0 and 100');\n        }\n        if (request.annualRevenue)",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\company\\create-company.use-case.js",
        "start": 144,
        "end": 159,
        "startLoc": {
          "line": 144,
          "column": 2,
          "position": 1491
        },
        "endLoc": {
          "line": 159,
          "column": 2,
          "position": 1704
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\company\\update-company.use-case.js",
        "start": 177,
        "end": 192,
        "startLoc": {
          "line": 177,
          "column": 2,
          "position": 1921
        },
        "endLoc": {
          "line": 192,
          "column": 4,
          "position": 2135
        }
      }
    },
    {
      "format": "typescript",
      "lines": 74,
      "fragment": "export interface CreateCompanyRequest {\n    organizationId: string;\n    name: string;\n    legalName?: string;\n    type: 'customer' | 'supplier' | 'partner' | 'prospect' | 'competitor';\n    status: 'active' | 'inactive' | 'suspended' | 'prospect' | 'lead';\n    size: 'startup' | 'small' | 'medium' | 'large' | 'enterprise';\n    industry: string;\n    source: 'website' | 'referral' | 'cold_call' | 'email' | 'social_media' | 'event' | 'other';\n    website?: string;\n    email?: string;\n    phone?: string;\n    address?: {\n        street: string;\n        city: string;\n        state?: string;\n        postalCode: string;\n        country: string;\n        countryCode: string;\n    };\n    billingAddress?: {\n        street: string;\n        city: string;\n        state?: string;\n        postalCode: string;\n        country: string;\n        countryCode: string;\n    };\n    shippingAddress?: {\n        street: string;\n        city: string;\n        state?: string;\n        postalCode: string;\n        country: string;\n        countryCode: string;\n    };\n    taxId?: string;\n    vatNumber?: string;\n    registrationNumber?: string;\n    description?: string;\n    annualRevenue?: {\n        amount: number;\n        currency: string;\n    };\n    employeeCount?: number;\n    foundedYear?: number;\n    parentCompanyId?: string;\n    assignedUserId?: string;\n    nextFollowUpDate?: Date;\n    leadScore?: number;\n    settings?: {\n        notifications?: {\n            email?: boolean;\n            sms?: boolean;\n            push?: boolean;\n        };\n        preferences?: {\n            language?: string;\n            timezone?: string;\n            currency?: string;\n            dateFormat?: string;\n        };\n        customFields?: Record<string, any>;\n        tags?: string[];\n        notes?: string;\n    };\n    createdBy: string;\n}\nexport interface CreateCompanyResponse {\n    success: boolean;\n    company?: Company;\n    error?: string;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\company\\create-company.use-case.d.ts",
        "start": 3,
        "end": 76,
        "startLoc": {
          "line": 3,
          "column": 1,
          "position": 26
        },
        "endLoc": {
          "line": 76,
          "column": 8,
          "position": 619
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\company\\create-company.use-case.ts",
        "start": 10,
        "end": 85,
        "startLoc": {
          "line": 10,
          "column": 1,
          "position": 60
        },
        "endLoc": {
          "line": 85,
          "column": 6,
          "position": 655
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": "layer.components.map(component => ({\n                id: component.id,\n                name: component.name,\n                type: component.type,\n                layer: layer.type,\n                description: component.description,\n                dependencies: component.dependencies,\n                interfaces: component.interfaces,\n                implementation: component.implementation,\n                tests: component.tests,\n                documentation: component.documentation,\n                createdAt: new Date(),\n                updatedAt: new Date()\n            })))",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\architecture\\create-architecture.use-case.js",
        "start": 81,
        "end": 94,
        "startLoc": {
          "line": 81,
          "column": 2,
          "position": 846
        },
        "endLoc": {
          "line": 94,
          "column": 2,
          "position": 974
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\architecture\\create-architecture.use-case.js",
        "start": 51,
        "end": 64,
        "startLoc": {
          "line": 51,
          "column": 2,
          "position": 543
        },
        "endLoc": {
          "line": 64,
          "column": 2,
          "position": 671
        }
      }
    },
    {
      "format": "javascript",
      "lines": 27,
      "fragment": ",\n            layers: request.settings.layers.map(layer => ({\n                id: layer.id,\n                name: layer.name,\n                type: layer.type,\n                description: layer.description,\n                components: layer.components.map(component => ({\n                    id: component.id,\n                    name: component.name,\n                    type: component.type,\n                    layer: layer.type,\n                    description: component.description,\n                    dependencies: component.dependencies,\n                    interfaces: component.interfaces,\n                    implementation: component.implementation,\n                    tests: component.tests,\n                    documentation: component.documentation,\n                    createdAt: new Date(),\n                    updatedAt: new Date()\n                })),\n                dependencies: layer.dependencies,\n                responsibilities: layer.responsibilities,\n                patterns: layer.patterns,\n                createdAt: new Date(),\n                updatedAt: new Date()\n            })),\n            isActive",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\architecture\\create-architecture.use-case.js",
        "start": 94,
        "end": 120,
        "startLoc": {
          "line": 94,
          "column": 2,
          "position": 975
        },
        "endLoc": {
          "line": 120,
          "column": 9,
          "position": 1221
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\architecture\\create-architecture.use-case.js",
        "start": 45,
        "end": 71,
        "startLoc": {
          "line": 45,
          "column": 5,
          "position": 482
        },
        "endLoc": {
          "line": 71,
          "column": 9,
          "position": 728
        }
      }
    },
    {
      "format": "typescript",
      "lines": 42,
      "fragment": "export interface CreateArchitectureRequest extends BaseRequest {\n    name: string;\n    type: 'hexagonal' | 'layered' | 'microservices' | 'monolithic' | 'event_driven';\n    description?: string;\n    settings: {\n        layers: Array<{\n            id: string;\n            name: string;\n            type: 'domain' | 'application' | 'infrastructure' | 'presentation' | 'shared';\n            description: string;\n            components: Array<{\n                id: string;\n                name: string;\n                type: 'entity' | 'repository' | 'use_case' | 'service' | 'controller' | 'middleware' | 'dto' | 'route';\n                description: string;\n                dependencies: string[];\n                interfaces: string[];\n                implementation: string;\n                tests: string[];\n                documentation: string;\n            }>;\n            dependencies: string[];\n            responsibilities: string[];\n            patterns: string[];\n        }>;\n        patterns: string[];\n        principles: string[];\n        conventions: Record<string, any>;\n        tools: string[];\n        frameworks: string[];\n        libraries: string[];\n        customFields: Record<string, any>;\n        tags: string[];\n        notes: string;\n    };\n}\nexport interface CreateArchitectureResponse extends BaseResponse {\n    data: {\n        architecture: Architecture;\n    };\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\architecture\\create-architecture.use-case.d.ts",
        "start": 4,
        "end": 45,
        "startLoc": {
          "line": 4,
          "column": 1,
          "position": 45
        },
        "endLoc": {
          "line": 45,
          "column": 8,
          "position": 421
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\architecture\\create-architecture.use-case.ts",
        "start": 9,
        "end": 52,
        "startLoc": {
          "line": 9,
          "column": 1,
          "position": 53
        },
        "endLoc": {
          "line": 52,
          "column": 6,
          "position": 431
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": "export interface AnalyzeArchitectureRequest extends BaseRequest {\n    id: string;\n    forceReanalysis?: boolean;\n}\nexport interface AnalyzeArchitectureResponse extends BaseResponse {\n    data: {\n        architecture: Architecture;\n        metrics: {\n            totalComponents: number;\n            totalLayers: number;\n            complexity: number;\n            coupling: number;\n            cohesion: number;\n            maintainability: number;\n            testability: number;\n            scalability: number;\n            performance: number;\n            security: number;\n            lastAnalysisDate: Date;\n            analysisDuration: number;\n            qualityScore: number;\n        };\n    };\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\architecture\\analyze-architecture.use-case.d.ts",
        "start": 4,
        "end": 28,
        "startLoc": {
          "line": 4,
          "column": 1,
          "position": 45
        },
        "endLoc": {
          "line": 28,
          "column": 8,
          "position": 208
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\architecture\\analyze-architecture.use-case.ts",
        "start": 9,
        "end": 35,
        "startLoc": {
          "line": 9,
          "column": 1,
          "position": 53
        },
        "endLoc": {
          "line": 35,
          "column": 6,
          "position": 218
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": "name: z.string().min(1).max(100),\n          sku: z.string().min(1).max(100),\n          price: z.object({\n            amount: z.number().min(0),\n            currency: z.string().length(3)\n          }),\n          compareAtPrice: z.object({\n            amount: z.number().min(0),\n            currency: z.string().length(3)\n          }).optional(),\n          costPrice: z.object({\n            amount: z.number().min(0),\n            currency: z.string().length(3)\n          }).optional(),\n          inventory: z.object({\n            quantity: z.number().int().min(0),\n            reserved: z.number().int().min(0),\n            available: z.number().int().min(0)\n          }),\n          attributes: z.record(z.any()).default({}),\n          isActive: z.boolean().default(true)\n        })).optional()\n      })\n    }),\n    productController.updateProduct",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\routes\\product.routes.ts",
        "start": 167,
        "end": 191,
        "startLoc": {
          "line": 167,
          "column": 11,
          "position": 2300
        },
        "endLoc": {
          "line": 191,
          "column": 14,
          "position": 2619
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\product.routes.ts",
        "start": 77,
        "end": 101,
        "startLoc": {
          "line": 77,
          "column": 11,
          "position": 1002
        },
        "endLoc": {
          "line": 101,
          "column": 14,
          "position": 1321
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": ",\n    validateRequest({\n      params: z.object({\n        organizationId: z.string().uuid()\n      }),\n      query: z.object({\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.enum(['name', 'sku', 'category', 'brand', 'createdAt', 'updatedAt']).default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc'),\n        search: z.string().max(200).optional(),\n        type: z.enum(['physical', 'digital', 'service', 'subscription', 'bundle']).optional(),\n        status: z.enum(['active', 'inactive', 'discontinued', 'draft', 'archived']).optional(),\n        category: z.string().optional(),\n        brand: z.string().optional(),\n        supplier: z.string().optional(),\n        minPrice: z.coerce.number().min(0).optional(),\n        maxPrice: z.coerce.number().min(0).optional(),\n        inStock: z.coerce.boolean().optional(),\n        lowStock: z.coerce.boolean().optional()\n      })\n    }),\n    productController.searchProducts",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\routes\\product.routes.ts",
        "start": 245,
        "end": 267,
        "startLoc": {
          "line": 245,
          "column": 40,
          "position": 3174
        },
        "endLoc": {
          "line": 267,
          "column": 15,
          "position": 3549
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\product.routes.ts",
        "start": 219,
        "end": 241,
        "startLoc": {
          "line": 219,
          "column": 33,
          "position": 2778
        },
        "endLoc": {
          "line": 241,
          "column": 26,
          "position": 3153
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "])\n      }),\n      query: z.object({\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.enum(['name', 'sku', 'category', 'brand', 'createdAt', 'updatedAt']).default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc')\n      })\n    }),\n    async (req, res, next) => {\n      try {\n        const { status",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\routes\\product.routes.ts",
        "start": 328,
        "end": 339,
        "startLoc": {
          "line": 328,
          "column": 11,
          "position": 4117
        },
        "endLoc": {
          "line": 339,
          "column": 7,
          "position": 4285
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\product.routes.ts",
        "start": 288,
        "end": 299,
        "startLoc": {
          "line": 288,
          "column": 9,
          "position": 3683
        },
        "endLoc": {
          "line": 299,
          "column": 5,
          "position": 3851
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ");\n        \n        res.status(200).json({\n          success: true,\n          data: products.map(product => ({\n            id: product.id.value,\n            name: product.name,\n            sku: product.sku,\n            type: product.type.value,\n            status: product.status.value,\n            category: product.category.value,\n            brand: product.brand?.value,\n            supplier: product.supplier?.value,\n            isActive: product.isActive,\n            createdAt: product.createdAt,\n            updatedAt: product.updatedAt\n          }))\n        });\n      } catch (error) {\n        next(error);\n      }\n    }\n  );\n\n  // GET /products/category/:category - Get products by category",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\routes\\product.routes.ts",
        "start": 340,
        "end": 364,
        "startLoc": {
          "line": 340,
          "column": 7,
          "position": 4313
        },
        "endLoc": {
          "line": 364,
          "column": 63,
          "position": 4504
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\product.routes.ts",
        "start": 300,
        "end": 324,
        "startLoc": {
          "line": 300,
          "column": 5,
          "position": 3879
        },
        "endLoc": {
          "line": 324,
          "column": 57,
          "position": 4070
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ")\n      }),\n      query: z.object({\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.enum(['name', 'sku', 'category', 'brand', 'createdAt', 'updatedAt']).default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc')\n      })\n    }),\n    async (req, res, next) => {\n      try {\n        const { category",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\routes\\product.routes.ts",
        "start": 368,
        "end": 379,
        "startLoc": {
          "line": 368,
          "column": 4,
          "position": 4547
        },
        "endLoc": {
          "line": 379,
          "column": 9,
          "position": 4714
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\product.routes.ts",
        "start": 222,
        "end": 299,
        "startLoc": {
          "line": 222,
          "column": 2,
          "position": 2807
        },
        "endLoc": {
          "line": 299,
          "column": 5,
          "position": 3851
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ");\n        \n        res.status(200).json({\n          success: true,\n          data: products.map(product => ({\n            id: product.id.value,\n            name: product.name,\n            sku: product.sku,\n            type: product.type.value,\n            status: product.status.value,\n            category: product.category.value,\n            brand: product.brand?.value,\n            supplier: product.supplier?.value,\n            isActive: product.isActive,\n            createdAt: product.createdAt,\n            updatedAt: product.updatedAt\n          }))\n        });\n      } catch (error) {\n        next(error);\n      }\n    }\n  );\n\n  // GET /products/brand/:brand - Get products by brand",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\routes\\product.routes.ts",
        "start": 380,
        "end": 404,
        "startLoc": {
          "line": 380,
          "column": 9,
          "position": 4742
        },
        "endLoc": {
          "line": 404,
          "column": 54,
          "position": 4933
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\product.routes.ts",
        "start": 300,
        "end": 324,
        "startLoc": {
          "line": 300,
          "column": 5,
          "position": 3879
        },
        "endLoc": {
          "line": 324,
          "column": 57,
          "position": 4070
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ": z.string().min(1).max(100)\n      }),\n      query: z.object({\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.enum(['name', 'sku', 'category', 'brand', 'createdAt', 'updatedAt']).default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc')\n      })\n    }),\n    async (req, res, next) => {\n      try {\n        const { brand",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\routes\\product.routes.ts",
        "start": 408,
        "end": 419,
        "startLoc": {
          "line": 408,
          "column": 6,
          "position": 4960
        },
        "endLoc": {
          "line": 419,
          "column": 6,
          "position": 5143
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\product.routes.ts",
        "start": 368,
        "end": 299,
        "startLoc": {
          "line": 368,
          "column": 9,
          "position": 4531
        },
        "endLoc": {
          "line": 299,
          "column": 5,
          "position": 3851
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ");\n        \n        res.status(200).json({\n          success: true,\n          data: products.map(product => ({\n            id: product.id.value,\n            name: product.name,\n            sku: product.sku,\n            type: product.type.value,\n            status: product.status.value,\n            category: product.category.value,\n            brand: product.brand?.value,\n            supplier: product.supplier?.value,\n            isActive: product.isActive,\n            createdAt: product.createdAt,\n            updatedAt: product.updatedAt\n          }))\n        });\n      } catch (error) {\n        next(error);\n      }\n    }\n  );\n\n  // GET /products/supplier/:supplier - Get products by supplier",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\routes\\product.routes.ts",
        "start": 420,
        "end": 444,
        "startLoc": {
          "line": 420,
          "column": 6,
          "position": 5171
        },
        "endLoc": {
          "line": 444,
          "column": 63,
          "position": 5362
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\product.routes.ts",
        "start": 300,
        "end": 324,
        "startLoc": {
          "line": 300,
          "column": 5,
          "position": 3879
        },
        "endLoc": {
          "line": 324,
          "column": 57,
          "position": 4070
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ": z.string().min(1).max(100)\n      }),\n      query: z.object({\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.enum(['name', 'sku', 'category', 'brand', 'createdAt', 'updatedAt']).default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc')\n      })\n    }),\n    async (req, res, next) => {\n      try {\n        const { supplier",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\routes\\product.routes.ts",
        "start": 448,
        "end": 459,
        "startLoc": {
          "line": 448,
          "column": 9,
          "position": 5389
        },
        "endLoc": {
          "line": 459,
          "column": 9,
          "position": 5572
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\product.routes.ts",
        "start": 368,
        "end": 299,
        "startLoc": {
          "line": 368,
          "column": 9,
          "position": 4531
        },
        "endLoc": {
          "line": 299,
          "column": 5,
          "position": 3851
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ");\n        \n        res.status(200).json({\n          success: true,\n          data: products.map(product => ({\n            id: product.id.value,\n            name: product.name,\n            sku: product.sku,\n            type: product.type.value,\n            status: product.status.value,\n            category: product.category.value,\n            brand: product.brand?.value,\n            supplier: product.supplier?.value,\n            isActive: product.isActive,\n            createdAt: product.createdAt,\n            updatedAt: product.updatedAt\n          }))\n        });\n      } catch (error) {\n        next(error);\n      }\n    }\n  );\n\n  // GET /products/sku/:sku - Get product by SKU",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\routes\\product.routes.ts",
        "start": 460,
        "end": 484,
        "startLoc": {
          "line": 460,
          "column": 9,
          "position": 5600
        },
        "endLoc": {
          "line": 484,
          "column": 47,
          "position": 5791
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\product.routes.ts",
        "start": 300,
        "end": 324,
        "startLoc": {
          "line": 300,
          "column": 5,
          "position": 3879
        },
        "endLoc": {
          "line": 324,
          "column": 57,
          "position": 4070
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "{\n            id: product.id.value,\n            name: product.name,\n            sku: product.sku,\n            type: product.type.value,\n            status: product.status.value,\n            category: product.category.value,\n            brand: product.brand?.value,\n            supplier: product.supplier?.value,\n            isActive: product.isActive,\n            createdAt: product.createdAt,\n            updatedAt: product.updatedAt\n          }\n        }",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\routes\\product.routes.ts",
        "start": 506,
        "end": 519,
        "startLoc": {
          "line": 506,
          "column": 2,
          "position": 5976
        },
        "endLoc": {
          "line": 519,
          "column": 2,
          "position": 6094
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\product.routes.ts",
        "start": 304,
        "end": 316,
        "startLoc": {
          "line": 304,
          "column": 2,
          "position": 3916
        },
        "endLoc": {
          "line": 316,
          "column": 2,
          "position": 4032
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ");\n        \n        if (!product) {\n          res.status(404).json({\n            success: false,\n            message: 'Product not found'\n          });\n          return;\n        }\n\n        res.status(200).json({\n          success: true,\n          data: {\n            id: product.id.value,\n            name: product.name,\n            sku: product.sku,\n            barcode",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\routes\\product.routes.ts",
        "start": 536,
        "end": 552,
        "startLoc": {
          "line": 536,
          "column": 8,
          "position": 6237
        },
        "endLoc": {
          "line": 552,
          "column": 8,
          "position": 6345
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\product.routes.ts",
        "start": 494,
        "end": 510,
        "startLoc": {
          "line": 494,
          "column": 4,
          "position": 5900
        },
        "endLoc": {
          "line": 510,
          "column": 5,
          "position": 6008
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ",\n            type: product.type.value,\n            status: product.status.value,\n            category: product.category.value,\n            brand: product.brand?.value,\n            supplier: product.supplier?.value,\n            isActive: product.isActive,\n            createdAt: product.createdAt,\n            updatedAt: product.updatedAt\n          }\n        });\n      } catch (error) {\n        next(error);\n      }\n    }\n  );\n\n  // ========================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\routes\\product.routes.ts",
        "start": 552,
        "end": 569,
        "startLoc": {
          "line": 552,
          "column": 8,
          "position": 6351
        },
        "endLoc": {
          "line": 569,
          "column": 76,
          "position": 6474
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\product.routes.ts",
        "start": 307,
        "end": 526,
        "startLoc": {
          "line": 307,
          "column": 4,
          "position": 3945
        },
        "endLoc": {
          "line": 526,
          "column": 59,
          "position": 6128
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ");\n        \n        res.status(200).json({\n          success: true,\n          data: products.map(product => ({\n            id: product.id.value,\n            name: product.name,\n            sku: product.sku,\n            type: product.type.value,\n            status: product.status.value,\n            category: product.category.value,\n            brand: product.brand?.value,\n            supplier: product.supplier?.value,\n            isActive: product.isActive,\n            createdAt: product.createdAt,\n            updatedAt: product.updatedAt\n          }))\n        });\n      } catch (error) {\n        next(error);\n      }\n    }\n  );\n\n  // GET /products/inventory/out-of-stock - Get products out of stock",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\routes\\product.routes.ts",
        "start": 584,
        "end": 608,
        "startLoc": {
          "line": 584,
          "column": 7,
          "position": 6627
        },
        "endLoc": {
          "line": 608,
          "column": 68,
          "position": 6818
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\product.routes.ts",
        "start": 300,
        "end": 324,
        "startLoc": {
          "line": 300,
          "column": 5,
          "position": 3879
        },
        "endLoc": {
          "line": 324,
          "column": 57,
          "position": 4070
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ");\n        \n        res.status(200).json({\n          success: true,\n          data: products.map(product => ({\n            id: product.id.value,\n            name: product.name,\n            sku: product.sku,\n            type: product.type.value,\n            status: product.status.value,\n            category: product.category.value,\n            brand: product.brand?.value,\n            supplier: product.supplier?.value,\n            isActive: product.isActive,\n            createdAt: product.createdAt,\n            updatedAt: product.updatedAt\n          }))\n        });\n      } catch (error) {\n        next(error);\n      }\n    }\n  );\n\n  // GET /products/inventory/in-stock - Get products in stock",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\routes\\product.routes.ts",
        "start": 618,
        "end": 642,
        "startLoc": {
          "line": 618,
          "column": 7,
          "position": 6925
        },
        "endLoc": {
          "line": 642,
          "column": 60,
          "position": 7116
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\product.routes.ts",
        "start": 300,
        "end": 324,
        "startLoc": {
          "line": 300,
          "column": 5,
          "position": 3879
        },
        "endLoc": {
          "line": 324,
          "column": 57,
          "position": 4070
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": "(organizationId as string);\n        \n        res.status(200).json({\n          success: true,\n          data: products.map(product => ({\n            id: product.id.value,\n            name: product.name,\n            sku: product.sku,\n            type: product.type.value,\n            status: product.status.value,\n            category: product.category.value,\n            brand: product.brand?.value,\n            supplier: product.supplier?.value,\n            isActive: product.isActive,\n            createdAt: product.createdAt,\n            updatedAt: product.updatedAt\n          }))\n        });\n      } catch (error) {\n        next(error);\n      }\n    }\n  );\n\n  // ========================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\routes\\product.routes.ts",
        "start": 652,
        "end": 676,
        "startLoc": {
          "line": 652,
          "column": 14,
          "position": 7217
        },
        "endLoc": {
          "line": 676,
          "column": 76,
          "position": 7414
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\product.routes.ts",
        "start": 618,
        "end": 324,
        "startLoc": {
          "line": 618,
          "column": 17,
          "position": 6919
        },
        "endLoc": {
          "line": 324,
          "column": 57,
          "position": 4070
        }
      }
    },
    {
      "format": "typescript",
      "lines": 29,
      "fragment": ",\n    authenticate,\n    authorize(['analytics:read']),\n    validateRequest({\n      params: z.object({\n        organizationId: z.string().uuid()\n      }),\n      query: z.object({\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.string().default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc'),\n        search: z.string().max(200).optional(),\n        type: z.enum(['sales_forecast', 'demand_prediction', 'churn_prediction', 'revenue_forecast', 'inventory_optimization', 'customer_lifetime_value', 'market_trend', 'risk_assessment']).optional(),\n        status: z.enum(['pending', 'processing', 'completed', 'failed', 'cancelled']).optional(),\n        modelType: z.enum(['linear_regression', 'decision_tree', 'random_forest', 'neural_network', 'time_series', 'clustering', 'classification', 'deep_learning']).optional(),\n        accuracy: z.enum(['low', 'medium', 'high', 'very_high']).optional(),\n        isActive: z.coerce.boolean().optional(),\n        needsRetraining: z.coerce.boolean().optional(),\n        hasPredictions: z.coerce.boolean().optional(),\n        minAccuracy: z.coerce.number().min(0).max(1).optional(),\n        maxAccuracy: z.coerce.number().min(0).max(1).optional(),\n        lastPredictionFrom: z.coerce.date().optional(),\n        lastPredictionTo: z.coerce.date().optional(),\n        nextRetrainFrom: z.coerce.date().optional(),\n        nextRetrainTo: z.coerce.date().optional()\n      })\n    }),\n    predictiveAnalyticsController.searchPredictiveAnalytics",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\routes\\predictive-analytics.routes.ts",
        "start": 144,
        "end": 172,
        "startLoc": {
          "line": 144,
          "column": 40,
          "position": 1885
        },
        "endLoc": {
          "line": 172,
          "column": 26,
          "position": 2380
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\predictive-analytics.routes.ts",
        "start": 112,
        "end": 140,
        "startLoc": {
          "line": 112,
          "column": 33,
          "position": 1369
        },
        "endLoc": {
          "line": 140,
          "column": 37,
          "position": 1864
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "])\n      }),\n      query: z.object({\n        organizationId: z.string().uuid(),\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.string().default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc')\n      })\n    }),\n    predictiveAnalyticsController.getAnalyticsByStatus",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\routes\\predictive-analytics.routes.ts",
        "start": 216,
        "end": 226,
        "startLoc": {
          "line": 216,
          "column": 12,
          "position": 2763
        },
        "endLoc": {
          "line": 226,
          "column": 21,
          "position": 2904
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\predictive-analytics.routes.ts",
        "start": 197,
        "end": 207,
        "startLoc": {
          "line": 197,
          "column": 18,
          "position": 2549
        },
        "endLoc": {
          "line": 207,
          "column": 19,
          "position": 2690
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ",\n    authenticate,\n    authorize(['analytics:read']),\n    validateRequest({\n      query: z.object({\n        organizationId: z.string().uuid(),\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.string().default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc')\n      })\n    }),\n    predictiveAnalyticsController.getNeedsRetraining",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\routes\\predictive-analytics.routes.ts",
        "start": 246,
        "end": 258,
        "startLoc": {
          "line": 246,
          "column": 20,
          "position": 3099
        },
        "endLoc": {
          "line": 258,
          "column": 19,
          "position": 3252
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\predictive-analytics.routes.ts",
        "start": 230,
        "end": 207,
        "startLoc": {
          "line": 230,
          "column": 10,
          "position": 2925
        },
        "endLoc": {
          "line": 207,
          "column": 19,
          "position": 2690
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": "productId: z.string().uuid().optional(),\n          description: z.string().min(1).max(500),\n          quantity: z.number().min(0.01),\n          unitPrice: z.object({\n            amount: z.number().min(0),\n            currency: z.string().length(3)\n          }),\n          totalPrice: z.object({\n            amount: z.number().min(0),\n            currency: z.string().length(3)\n          }),\n          taxRate: z.number().min(0).max(100).optional(),\n          taxAmount: z.object({\n            amount: z.number().min(0),\n            currency: z.string().length(3)\n          }).optional(),\n          discountRate: z.number().min(0).max(100).optional(),\n          discountAmount: z.object({\n            amount: z.number().min(0),\n            currency: z.string().length(3)\n          }).optional(),\n          notes: z.string().max(500).optional()\n        })).optional",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\routes\\invoice.routes.ts",
        "start": 101,
        "end": 123,
        "startLoc": {
          "line": 101,
          "column": 11,
          "position": 1386
        },
        "endLoc": {
          "line": 123,
          "column": 9,
          "position": 1707
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\invoice.routes.ts",
        "start": 34,
        "end": 56,
        "startLoc": {
          "line": 34,
          "column": 11,
          "position": 365
        },
        "endLoc": {
          "line": 56,
          "column": 4,
          "position": 686
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "]),\n    validateRequest({\n      params: z.object({\n        organizationId: z.string().uuid()\n      }),\n      query: z.object({\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.string().default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc'),\n        search: z.string().max(200).optional(),\n        type: z.enum(['invoice'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\routes\\invoice.routes.ts",
        "start": 179,
        "end": 190,
        "startLoc": {
          "line": 179,
          "column": 15,
          "position": 2276
        },
        "endLoc": {
          "line": 190,
          "column": 10,
          "position": 2450
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\predictive-analytics.routes.ts",
        "start": 114,
        "end": 125,
        "startLoc": {
          "line": 114,
          "column": 17,
          "position": 1380
        },
        "endLoc": {
          "line": 125,
          "column": 17,
          "position": 1554
        }
      }
    },
    {
      "format": "typescript",
      "lines": 31,
      "fragment": ",\n    authenticate,\n    authorize(['invoice:read']),\n    validateRequest({\n      params: z.object({\n        organizationId: z.string().uuid()\n      }),\n      query: z.object({\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.string().default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc'),\n        search: z.string().max(200).optional(),\n        type: z.enum(['invoice', 'credit_note', 'debit_note', 'proforma', 'quote', 'receipt']).optional(),\n        status: z.enum(['draft', 'sent', 'paid', 'overdue', 'cancelled', 'refunded', 'partially_paid']).optional(),\n        paymentStatus: z.enum(['pending', 'paid', 'partial', 'overdue', 'cancelled']).optional(),\n        companyId: z.string().uuid().optional(),\n        contactId: z.string().uuid().optional(),\n        issueDateFrom: z.coerce.date().optional(),\n        issueDateTo: z.coerce.date().optional(),\n        dueDateFrom: z.coerce.date().optional(),\n        dueDateTo: z.coerce.date().optional(),\n        minAmount: z.coerce.number().min(0).optional(),\n        maxAmount: z.coerce.number().min(0).optional(),\n        isOverdue: z.coerce.boolean().optional(),\n        isPaid: z.coerce.boolean().optional(),\n        isPartiallyPaid: z.coerce.boolean().optional(),\n        isPending: z.coerce.boolean().optional()\n      })\n    }),\n    invoiceController.searchInvoices",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\routes\\invoice.routes.ts",
        "start": 211,
        "end": 241,
        "startLoc": {
          "line": 211,
          "column": 40,
          "position": 2790
        },
        "endLoc": {
          "line": 241,
          "column": 15,
          "position": 3294
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\invoice.routes.ts",
        "start": 177,
        "end": 207,
        "startLoc": {
          "line": 177,
          "column": 33,
          "position": 2265
        },
        "endLoc": {
          "line": 207,
          "column": 26,
          "position": 2769
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "]),\n    validateRequest({\n      query: z.object({\n        organizationId: z.string().uuid(),\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.string().default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc')\n      })\n    }),\n    invoiceController.getOverdueInvoices",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\routes\\invoice.routes.ts",
        "start": 335,
        "end": 345,
        "startLoc": {
          "line": 335,
          "column": 15,
          "position": 4207
        },
        "endLoc": {
          "line": 345,
          "column": 19,
          "position": 4349
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\predictive-analytics.routes.ts",
        "start": 232,
        "end": 275,
        "startLoc": {
          "line": 232,
          "column": 17,
          "position": 2936
        },
        "endLoc": {
          "line": 275,
          "column": 18,
          "position": 3583
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ")\n      }),\n      query: z.object({\n        organizationId: z.string().uuid(),\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.string().default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc')\n      })\n    }),\n    invoiceController.getInvoicesDueSoon",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\routes\\invoice.routes.ts",
        "start": 354,
        "end": 364,
        "startLoc": {
          "line": 354,
          "column": 4,
          "position": 4424
        },
        "endLoc": {
          "line": 364,
          "column": 19,
          "position": 4564
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\predictive-analytics.routes.ts",
        "start": 197,
        "end": 275,
        "startLoc": {
          "line": 197,
          "column": 2,
          "position": 2550
        },
        "endLoc": {
          "line": 275,
          "column": 18,
          "position": 3583
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "]),\n    validateRequest({\n      params: z.object({\n        organizationId: z.string().uuid()\n      }),\n      query: z.object({\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.string().default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc'),\n        search: z.string().max(200).optional(),\n        productId",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\routes\\inventory-kardex.routes.ts",
        "start": 116,
        "end": 127,
        "startLoc": {
          "line": 116,
          "column": 17,
          "position": 1192
        },
        "endLoc": {
          "line": 127,
          "column": 10,
          "position": 1358
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\predictive-analytics.routes.ts",
        "start": 114,
        "end": 125,
        "startLoc": {
          "line": 114,
          "column": 17,
          "position": 1380
        },
        "endLoc": {
          "line": 125,
          "column": 5,
          "position": 1546
        }
      }
    },
    {
      "format": "typescript",
      "lines": 33,
      "fragment": ",\n    authenticate,\n    authorize(['inventory:read']),\n    validateRequest({\n      params: z.object({\n        organizationId: z.string().uuid()\n      }),\n      query: z.object({\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.string().default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc'),\n        search: z.string().max(200).optional(),\n        productId: z.string().uuid().optional(),\n        warehouseId: z.string().uuid().optional(),\n        locationId: z.string().uuid().optional(),\n        movementType: z.enum(['in', 'out', 'transfer', 'adjustment', 'return', 'damage', 'expired', 'theft']).optional(),\n        movementReason: z.enum(['purchase', 'sale', 'transfer_in', 'transfer_out', 'adjustment', 'return', 'damage', 'expired', 'theft', 'production', 'consumption', 'other']).optional(),\n        status: z.enum(['pending', 'completed', 'cancelled', 'reversed']).optional(),\n        lowStock: z.coerce.boolean().optional(),\n        outOfStock: z.coerce.boolean().optional(),\n        needsReorder: z.coerce.boolean().optional(),\n        hasExpiredItems: z.coerce.boolean().optional(),\n        hasExpiringItems: z.coerce.boolean().optional(),\n        minQuantity: z.coerce.number().min(0).optional(),\n        maxQuantity: z.coerce.number().min(0).optional(),\n        minValue: z.coerce.number().min(0).optional(),\n        maxValue: z.coerce.number().min(0).optional(),\n        costMethod: z.enum(['fifo', 'lifo', 'average', 'standard']).optional(),\n        valuationMethod: z.enum(['fifo', 'lifo', 'average', 'standard']).optional()\n      })\n    }),\n    inventoryKardexController.searchInventoryKardex",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\routes\\inventory-kardex.routes.ts",
        "start": 150,
        "end": 182,
        "startLoc": {
          "line": 150,
          "column": 40,
          "position": 1790
        },
        "endLoc": {
          "line": 182,
          "column": 22,
          "position": 2378
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\inventory-kardex.routes.ts",
        "start": 114,
        "end": 146,
        "startLoc": {
          "line": 114,
          "column": 33,
          "position": 1181
        },
        "endLoc": {
          "line": 146,
          "column": 33,
          "position": 1769
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ")\n      }),\n      query: z.object({\n        organizationId: z.string().uuid(),\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.string().default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc')\n      })\n    }),\n    inventoryKardexController",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\routes\\inventory-kardex.routes.ts",
        "start": 207,
        "end": 217,
        "startLoc": {
          "line": 207,
          "column": 2,
          "position": 2528
        },
        "endLoc": {
          "line": 217,
          "column": 26,
          "position": 2666
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\predictive-analytics.routes.ts",
        "start": 197,
        "end": 207,
        "startLoc": {
          "line": 197,
          "column": 2,
          "position": 2550
        },
        "endLoc": {
          "line": 207,
          "column": 30,
          "position": 2688
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ": z.string().uuid()\n      }),\n      query: z.object({\n        organizationId: z.string().uuid(),\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.string().default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc')\n      })\n    }),\n    inventoryKardexController.getInventoryByWarehouse",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\routes\\inventory-kardex.routes.ts",
        "start": 226,
        "end": 236,
        "startLoc": {
          "line": 226,
          "column": 12,
          "position": 2721
        },
        "endLoc": {
          "line": 236,
          "column": 24,
          "position": 2871
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\inventory-kardex.routes.ts",
        "start": 207,
        "end": 217,
        "startLoc": {
          "line": 207,
          "column": 10,
          "position": 2518
        },
        "endLoc": {
          "line": 217,
          "column": 22,
          "position": 2668
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "]),\n    validateRequest({\n      query: z.object({\n        organizationId: z.string().uuid(),\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.string().default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc')\n      })\n    }),\n    inventoryKardexController.getLowStockInventory",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\routes\\inventory-kardex.routes.ts",
        "start": 242,
        "end": 252,
        "startLoc": {
          "line": 242,
          "column": 17,
          "position": 2903
        },
        "endLoc": {
          "line": 252,
          "column": 21,
          "position": 3045
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\predictive-analytics.routes.ts",
        "start": 232,
        "end": 217,
        "startLoc": {
          "line": 232,
          "column": 17,
          "position": 2936
        },
        "endLoc": {
          "line": 217,
          "column": 22,
          "position": 2668
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ",\n    authenticate,\n    authorize(['inventory:read']),\n    validateRequest({\n      query: z.object({\n        organizationId: z.string().uuid(),\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.string().default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc')\n      })\n    }),\n    inventoryKardexController.getOutOfStockInventory",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\routes\\inventory-kardex.routes.ts",
        "start": 256,
        "end": 268,
        "startLoc": {
          "line": 256,
          "column": 16,
          "position": 3066
        },
        "endLoc": {
          "line": 268,
          "column": 23,
          "position": 3219
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\inventory-kardex.routes.ts",
        "start": 240,
        "end": 217,
        "startLoc": {
          "line": 240,
          "column": 13,
          "position": 2892
        },
        "endLoc": {
          "line": 217,
          "column": 22,
          "position": 2668
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ",\n    authenticate,\n    authorize(['inventory:read']),\n    validateRequest({\n      query: z.object({\n        organizationId: z.string().uuid(),\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.string().default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc')\n      })\n    }),\n    inventoryKardexController.getNeedsReorderInventory",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\routes\\inventory-kardex.routes.ts",
        "start": 272,
        "end": 284,
        "startLoc": {
          "line": 272,
          "column": 17,
          "position": 3240
        },
        "endLoc": {
          "line": 284,
          "column": 25,
          "position": 3393
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\inventory-kardex.routes.ts",
        "start": 240,
        "end": 217,
        "startLoc": {
          "line": 240,
          "column": 13,
          "position": 2892
        },
        "endLoc": {
          "line": 217,
          "column": 22,
          "position": 2668
        }
      }
    },
    {
      "format": "typescript",
      "lines": 70,
      "fragment": "),\n        email: z.string().email().optional(),\n        phone: z.string().regex(/^[\\+]?[1-9][\\d]{0,15}$/).optional(),\n        mobile: z.string().regex(/^[\\+]?[1-9][\\d]{0,15}$/).optional(),\n        fax: z.string().regex(/^[\\+]?[1-9][\\d]{0,15}$/).optional(),\n        website: z.string().url().optional(),\n        address: z.object({\n          street: z.string().min(1),\n          city: z.string().min(1),\n          state: z.string().optional(),\n          postalCode: z.string().min(1),\n          country: z.string().min(1),\n          countryCode: z.string().length(2)\n        }).optional(),\n        birthday: z.coerce.date().optional(),\n        anniversary: z.coerce.date().optional(),\n        gender: z.enum(['male', 'female', 'other', 'prefer_not_to_say']).optional(),\n        maritalStatus: z.enum(['single', 'married', 'divorced', 'widowed', 'separated']).optional(),\n        children: z.number().int().min(0).max(20).optional(),\n        education: z.string().max(200).optional(),\n        profession: z.string().max(100).optional(),\n        industry: z.string().max(100).optional(),\n        experience: z.number().int().min(0).max(50).optional(),\n        salary: z.object({\n          amount: z.number().min(0),\n          currency: z.string().length(3)\n        }).optional(),\n        socialMedia: z.object({\n          linkedin: z.string().url().optional(),\n          twitter: z.string().url().optional(),\n          facebook: z.string().url().optional(),\n          instagram: z.string().url().optional(),\n          youtube: z.string().url().optional(),\n          tiktok: z.string().url().optional(),\n          other: z.record(z.string()).optional()\n        }).optional(),\n        communication: z.object({\n          preferredMethod: z.enum(['email', 'phone', 'sms', 'whatsapp', 'linkedin', 'other']).optional(),\n          bestTimeToCall: z.string().optional(),\n          timeZone: z.string().optional(),\n          doNotCall: z.boolean().optional(),\n          doNotEmail: z.boolean().optional(),\n          doNotSms: z.boolean().optional()\n        }).optional(),\n        settings: z.object({\n          notifications: z.object({\n            email: z.boolean().optional(),\n            sms: z.boolean().optional(),\n            push: z.boolean().optional(),\n            phone: z.boolean().optional()\n          }).optional(),\n          preferences: z.object({\n            language: z.string().length(2).optional(),\n            timezone: z.string().optional(),\n            currency: z.string().length(3).optional(),\n            dateFormat: z.string().optional(),\n            timeFormat: z.string().optional()\n          }).optional(),\n          customFields: z.record(z.any()).optional(),\n          tags: z.array(z.string()).optional(),\n          notes: z.string().optional(),\n          internalNotes: z.string().optional()\n        }).optional(),\n        assignedUserId: z.string().uuid().optional(),\n        nextFollowUpDate: z.coerce.date().optional(),\n        leadScore: z.number().int().min(0).max(100).optional(),\n        engagementScore: z.number().int().min(0).max(100).optional()\n      })\n    }),\n    contactController.updateContact",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\routes\\contact.routes.ts",
        "start": 119,
        "end": 188,
        "startLoc": {
          "line": 119,
          "column": 2,
          "position": 1860
        },
        "endLoc": {
          "line": 188,
          "column": 14,
          "position": 2985
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\contact.routes.ts",
        "start": 31,
        "end": 100,
        "startLoc": {
          "line": 31,
          "column": 2,
          "position": 395
        },
        "endLoc": {
          "line": 100,
          "column": 14,
          "position": 1520
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ": z.object({\n          companyId: z.string().uuid().optional(),\n          firstName: z.string().min(1).max(100).optional(),\n          lastName: z.string().min(1).max(100).optional(),\n          middleName: z.string().max(100).optional(),\n          title: z.string().max(100).optional(),\n          department: z.string().max(100).optional(),\n          type: z.enum(['primary', 'secondary', 'decision_maker', 'influencer', 'user', 'technical', 'financial', 'procurement']).optional(),\n          status: z.enum(['active', 'inactive', 'unsubscribed', 'bounced', 'spam', 'deleted']).optional(),\n          source: z.enum(['website', 'referral', 'cold_call', 'email', 'social_media', 'event', 'trade_show', 'webinar', 'content', 'advertising', 'other']).optional(),\n          priority: z.enum(['low', 'medium', 'high', 'urgent']).optional(),\n          email: z.string().email().optional(),\n          phone: z.string().regex(/^[\\+]?[1-9][\\d]{0,15}$/).optional(),\n          mobile: z.string().regex(/^[\\+]?[1-9][\\d]{0,15}$/).optional(),\n          fax: z.string().regex(/^[\\+]?[1-9][\\d]{0,15}$/).optional(),\n          website: z.string().url().optional(),\n          assignedUserId",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\routes\\contact.routes.ts",
        "start": 545,
        "end": 561,
        "startLoc": {
          "line": 545,
          "column": 8,
          "position": 6113
        },
        "endLoc": {
          "line": 561,
          "column": 15,
          "position": 6496
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\contact.routes.ts",
        "start": 109,
        "end": 37,
        "startLoc": {
          "line": 109,
          "column": 5,
          "position": 1579
        },
        "endLoc": {
          "line": 37,
          "column": 8,
          "position": 497
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ").optional(),\n          settings: z.object({\n            notifications: z.object({\n              email: z.boolean().optional(),\n              sms: z.boolean().optional(),\n              push: z.boolean().optional(),\n              phone: z.boolean().optional()\n            }).optional(),\n            preferences: z.object({\n              language: z.string().length(2).optional(),\n              timezone: z.string().optional(),\n              currency: z.string().length(3).optional(),\n              dateFormat: z.string().optional(),\n              timeFormat: z.string().optional()\n            }).optional(),\n            customFields: z.record(z.any()).optional(),\n            tags: z.array(z.string()).optional(),\n            notes: z.string().optional(),\n            internalNotes: z.string().optional()\n          }).optional()\n        }",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\routes\\contact.routes.ts",
        "start": 564,
        "end": 584,
        "startLoc": {
          "line": 564,
          "column": 4,
          "position": 6582
        },
        "endLoc": {
          "line": 584,
          "column": 2,
          "position": 6858
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\contact.routes.ts",
        "start": 74,
        "end": 93,
        "startLoc": {
          "line": 74,
          "column": 2,
          "position": 1139
        },
        "endLoc": {
          "line": 93,
          "column": 2,
          "position": 1413
        }
      }
    },
    {
      "format": "typescript",
      "lines": 61,
      "fragment": "),\n        website: z.string().url().optional(),\n        email: z.string().email().optional(),\n        phone: z.string().regex(/^[\\+]?[1-9][\\d]{0,15}$/).optional(),\n        address: z.object({\n          street: z.string().min(1),\n          city: z.string().min(1),\n          state: z.string().optional(),\n          postalCode: z.string().min(1),\n          country: z.string().min(1),\n          countryCode: z.string().length(2)\n        }).optional(),\n        billingAddress: z.object({\n          street: z.string().min(1),\n          city: z.string().min(1),\n          state: z.string().optional(),\n          postalCode: z.string().min(1),\n          country: z.string().min(1),\n          countryCode: z.string().length(2)\n        }).optional(),\n        shippingAddress: z.object({\n          street: z.string().min(1),\n          city: z.string().min(1),\n          state: z.string().optional(),\n          postalCode: z.string().min(1),\n          country: z.string().min(1),\n          countryCode: z.string().length(2)\n        }).optional(),\n        taxId: z.string().min(5).max(20).optional(),\n        vatNumber: z.string().min(8).max(15).optional(),\n        registrationNumber: z.string().max(50).optional(),\n        description: z.string().max(1000).optional(),\n        annualRevenue: z.object({\n          amount: z.number().min(0),\n          currency: z.string().length(3)\n        }).optional(),\n        employeeCount: z.number().int().min(0).max(1000000).optional(),\n        foundedYear: z.number().int().min(1800).max(new Date().getFullYear()).optional(),\n        parentCompanyId: z.string().uuid().optional(),\n        assignedUserId: z.string().uuid().optional(),\n        nextFollowUpDate: z.coerce.date().optional(),\n        leadScore: z.number().int().min(0).max(100).optional(),\n        settings: z.object({\n          notifications: z.object({\n            email: z.boolean().optional(),\n            sms: z.boolean().optional(),\n            push: z.boolean().optional()\n          }).optional(),\n          preferences: z.object({\n            language: z.string().length(2).optional(),\n            timezone: z.string().optional(),\n            currency: z.string().length(3).optional(),\n            dateFormat: z.string().optional()\n          }).optional(),\n          customFields: z.record(z.any()).optional(),\n          tags: z.array(z.string()).optional(),\n          notes: z.string().optional()\n        }).optional()\n      })\n    }),\n    companyController.updateCompany",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\routes\\company.routes.ts",
        "start": 104,
        "end": 164,
        "startLoc": {
          "line": 104,
          "column": 2,
          "position": 1500
        },
        "endLoc": {
          "line": 164,
          "column": 14,
          "position": 2425
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\company.routes.ts",
        "start": 28,
        "end": 88,
        "startLoc": {
          "line": 28,
          "column": 2,
          "position": 315
        },
        "endLoc": {
          "line": 88,
          "column": 14,
          "position": 1240
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ": z.object({\n          name: z.string().min(1).max(200).optional(),\n          legalName: z.string().max(200).optional(),\n          type: z.enum(['customer', 'supplier', 'partner', 'prospect', 'competitor']).optional(),\n          status: z.enum(['active', 'inactive', 'suspended', 'prospect', 'lead']).optional(),\n          size: z.enum(['startup', 'small', 'medium', 'large', 'enterprise']).optional(),\n          industry: z.string().min(1).max(100).optional(),\n          source: z.enum(['website', 'referral', 'cold_call', 'email', 'social_media', 'event', 'other']).optional(),\n          website: z.string().url().optional(),\n          email: z.string().email().optional(),\n          phone: z.string().regex(/^[\\+]?[1-9][\\d]{0,15}$/).optional(),\n          taxId",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\routes\\company.routes.ts",
        "start": 379,
        "end": 390,
        "startLoc": {
          "line": 379,
          "column": 8,
          "position": 4366
        },
        "endLoc": {
          "line": 390,
          "column": 6,
          "position": 4629
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\company.routes.ts",
        "start": 97,
        "end": 32,
        "startLoc": {
          "line": 97,
          "column": 5,
          "position": 1299
        },
        "endLoc": {
          "line": 32,
          "column": 8,
          "position": 377
        }
      }
    },
    {
      "format": "typescript",
      "lines": 34,
      "fragment": ").optional(),\n          taxId: z.string().min(5).max(20).optional(),\n          vatNumber: z.string().min(8).max(15).optional(),\n          registrationNumber: z.string().max(50).optional(),\n          description: z.string().max(1000).optional(),\n          annualRevenue: z.object({\n            amount: z.number().min(0),\n            currency: z.string().length(3)\n          }).optional(),\n          employeeCount: z.number().int().min(0).max(1000000).optional(),\n          foundedYear: z.number().int().min(1800).max(new Date().getFullYear()).optional(),\n          parentCompanyId: z.string().uuid().optional(),\n          assignedUserId: z.string().uuid().optional(),\n          nextFollowUpDate: z.coerce.date().optional(),\n          leadScore: z.number().int().min(0).max(100).optional(),\n          settings: z.object({\n            notifications: z.object({\n              email: z.boolean().optional(),\n              sms: z.boolean().optional(),\n              push: z.boolean().optional()\n            }).optional(),\n            preferences: z.object({\n              language: z.string().length(2).optional(),\n              timezone: z.string().optional(),\n              currency: z.string().length(3).optional(),\n              dateFormat: z.string().optional()\n            }).optional(),\n            customFields: z.record(z.any()).optional(),\n            tags: z.array(z.string()).optional(),\n            notes: z.string().optional()\n          }).optional()\n        })\n      })\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\routes\\company.routes.ts",
        "start": 389,
        "end": 422,
        "startLoc": {
          "line": 389,
          "column": 25,
          "position": 4621
        },
        "endLoc": {
          "line": 422,
          "column": 2,
          "position": 5150
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\company.routes.ts",
        "start": 55,
        "end": 87,
        "startLoc": {
          "line": 55,
          "column": 2,
          "position": 708
        },
        "endLoc": {
          "line": 87,
          "column": 2,
          "position": 1235
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "),\n        description: z.string().max(1000).optional(),\n        settings: z.object({\n          layers: z.array(z.object({\n            id: z.string().uuid(),\n            name: z.string().min(1).max(255),\n            type: z.enum(['domain', 'application', 'infrastructure', 'presentation', 'shared']),\n            description: z.string().max(1000),\n            components: z.array(z.object({\n              id: z.string().uuid(),\n              name: z.string().min(1).max(255),\n              type: z.enum(['entity', 'repository', 'use_case', 'service', 'controller', 'middleware', 'dto', 'route']),\n              description: z.string().max(1000),\n              dependencies: z.array(z.string()).default([]),\n              interfaces: z.array(z.string()).default([]),\n              implementation: z.string().max(5000),\n              tests: z.array(z.string()).default([]),\n              documentation: z.string().max(5000)\n            })),",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\routes\\architecture.routes.ts",
        "start": 73,
        "end": 91,
        "startLoc": {
          "line": 73,
          "column": 2,
          "position": 963
        },
        "endLoc": {
          "line": 91,
          "column": 2,
          "position": 1290
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\architecture.routes.ts",
        "start": 25,
        "end": 43,
        "startLoc": {
          "line": 25,
          "column": 2,
          "position": 209
        },
        "endLoc": {
          "line": 43,
          "column": 2,
          "position": 536
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "]),\n    validateRequest({\n      params: z.object({\n        organizationId: z.string().uuid()\n      }),\n      query: z.object({\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.string().default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc'),\n        search: z.string().max(200).optional(),\n        type: z.enum(['hexagonal'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\routes\\architecture.routes.ts",
        "start": 142,
        "end": 153,
        "startLoc": {
          "line": 142,
          "column": 20,
          "position": 1762
        },
        "endLoc": {
          "line": 153,
          "column": 12,
          "position": 1936
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\predictive-analytics.routes.ts",
        "start": 114,
        "end": 125,
        "startLoc": {
          "line": 114,
          "column": 17,
          "position": 1380
        },
        "endLoc": {
          "line": 125,
          "column": 17,
          "position": 1554
        }
      }
    },
    {
      "format": "typescript",
      "lines": 26,
      "fragment": ",\n    authenticate,\n    authorize(['architecture:read']),\n    validateRequest({\n      params: z.object({\n        organizationId: z.string().uuid()\n      }),\n      query: z.object({\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.string().default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc'),\n        search: z.string().max(200).optional(),\n        type: z.enum(['hexagonal', 'layered', 'microservices', 'monolithic', 'event_driven']).optional(),\n        status: z.enum(['design', 'implementation', 'testing', 'deployed', 'maintenance']).optional(),\n        layerType: z.enum(['domain', 'application', 'infrastructure', 'presentation', 'shared']).optional(),\n        componentType: z.enum(['entity', 'repository', 'use_case', 'service', 'controller', 'middleware', 'dto', 'route']).optional(),\n        isActive: z.coerce.boolean().optional(),\n        hasMetrics: z.coerce.boolean().optional(),\n        minQualityScore: z.coerce.number().min(0).max(10).optional(),\n        maxQualityScore: z.coerce.number().min(0).max(10).optional(),\n        lastAnalysisFrom: z.coerce.date().optional(),\n        lastAnalysisTo: z.coerce.date().optional()\n      })\n    }),\n    architectureController.searchArchitectures",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\routes\\architecture.routes.ts",
        "start": 169,
        "end": 194,
        "startLoc": {
          "line": 169,
          "column": 40,
          "position": 2210
        },
        "endLoc": {
          "line": 194,
          "column": 20,
          "position": 2648
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\architecture.routes.ts",
        "start": 140,
        "end": 165,
        "startLoc": {
          "line": 140,
          "column": 33,
          "position": 1751
        },
        "endLoc": {
          "line": 165,
          "column": 31,
          "position": 2189
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "])\n      }),\n      query: z.object({\n        organizationId: z.string().uuid(),\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.string().default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc')\n      })\n    }),\n    architectureController",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\routes\\architecture.routes.ts",
        "start": 219,
        "end": 229,
        "startLoc": {
          "line": 219,
          "column": 15,
          "position": 2808
        },
        "endLoc": {
          "line": 229,
          "column": 23,
          "position": 2947
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\predictive-analytics.routes.ts",
        "start": 197,
        "end": 207,
        "startLoc": {
          "line": 197,
          "column": 18,
          "position": 2549
        },
        "endLoc": {
          "line": 207,
          "column": 30,
          "position": 2688
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "])\n      }),\n      query: z.object({\n        organizationId: z.string().uuid(),\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.string().default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc')\n      })\n    }),\n    architectureController.getArchitecturesByStatus",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\routes\\architecture.routes.ts",
        "start": 238,
        "end": 248,
        "startLoc": {
          "line": 238,
          "column": 14,
          "position": 3022
        },
        "endLoc": {
          "line": 248,
          "column": 25,
          "position": 3163
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\predictive-analytics.routes.ts",
        "start": 197,
        "end": 229,
        "startLoc": {
          "line": 197,
          "column": 18,
          "position": 2549
        },
        "endLoc": {
          "line": 229,
          "column": 23,
          "position": 2949
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "]),\n    validateRequest({\n      query: z.object({\n        organizationId: z.string().uuid(),\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.string().default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc')\n      })\n    }),\n    architectureController.getActiveArchitectures",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\routes\\architecture.routes.ts",
        "start": 254,
        "end": 264,
        "startLoc": {
          "line": 254,
          "column": 20,
          "position": 3195
        },
        "endLoc": {
          "line": 264,
          "column": 23,
          "position": 3337
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\predictive-analytics.routes.ts",
        "start": 232,
        "end": 229,
        "startLoc": {
          "line": 232,
          "column": 17,
          "position": 2936
        },
        "endLoc": {
          "line": 229,
          "column": 23,
          "position": 2949
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ",\n    authenticate,\n    authorize(['architecture:read']),\n    validateRequest({\n      query: z.object({\n        organizationId: z.string().uuid(),\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.string().default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc')\n      })\n    }),\n    architectureController.getArchitecturesWithMetrics",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\routes\\architecture.routes.ts",
        "start": 268,
        "end": 280,
        "startLoc": {
          "line": 268,
          "column": 16,
          "position": 3358
        },
        "endLoc": {
          "line": 280,
          "column": 28,
          "position": 3511
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\architecture.routes.ts",
        "start": 252,
        "end": 229,
        "startLoc": {
          "line": 252,
          "column": 10,
          "position": 3184
        },
        "endLoc": {
          "line": 229,
          "column": 23,
          "position": 2949
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": "name: z.string().min(1, 'Variant name is required').max(100, 'Variant name cannot exceed 100 characters'),\n    sku: z.string().min(1, 'Variant SKU is required').max(100, 'Variant SKU cannot exceed 100 characters'),\n    price: z.object({\n      amount: z.number().min(0, 'Variant price must be non-negative'),\n      currency: z.string().length(3, 'Currency must be 3 characters')\n    }),\n    compareAtPrice: z.object({\n      amount: z.number().min(0, 'Compare at price must be non-negative'),\n      currency: z.string().length(3, 'Currency must be 3 characters')\n    }).optional(),\n    costPrice: z.object({\n      amount: z.number().min(0, 'Cost price must be non-negative'),\n      currency: z.string().length(3, 'Currency must be 3 characters')\n    }).optional(),\n    inventory: z.object({\n      quantity: z.number().int().min(0, 'Quantity must be non-negative'),\n      reserved: z.number().int().min(0, 'Reserved quantity must be non-negative'),\n      available: z.number().int().min(0, 'Available quantity must be non-negative')\n    }),\n    attributes: z.record(z.any()).default({}),\n    isActive: z.boolean().default(true)\n  })).optional()\n});\n\n// ========================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\dto\\product.dto.ts",
        "start": 157,
        "end": 181,
        "startLoc": {
          "line": 157,
          "column": 5,
          "position": 2474
        },
        "endLoc": {
          "line": 181,
          "column": 76,
          "position": 2825
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\dto\\product.dto.ts",
        "start": 72,
        "end": 96,
        "startLoc": {
          "line": 72,
          "column": 5,
          "position": 1055
        },
        "endLoc": {
          "line": 96,
          "column": 7,
          "position": 1406
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ".optional(),\n  settings: z.object({\n    modelType: z.enum(['linear_regression', 'decision_tree', 'random_forest', 'neural_network', 'time_series', 'clustering', 'classification', 'deep_learning']).optional(),\n    trainingPeriod: z.number().int().min(1).max(3650).optional(),\n    predictionHorizon: z.number().int().min(1).max(365).optional(),\n    confidenceThreshold: z.number().min(0).max(1).optional(),\n    autoRetrain: z.boolean().optional(),\n    retrainFrequency: z.number().int().min(1).max(365).optional(),\n    dataSource: z.array(z.string().min(1)).optional(),\n    features: z.array(z.string().min(1)).optional(),\n    targetVariable: z.string().min(1).max(100).optional(),\n    validationMethod: z.enum(['cross_validation', 'holdout', 'time_series_split']).optional(),\n    hyperparameters: z.record(z.any()).optional(),\n    customFields: CustomFieldsSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\dto\\predictive-analytics.dto.ts",
        "start": 63,
        "end": 76,
        "startLoc": {
          "line": 63,
          "column": 11,
          "position": 703
        },
        "endLoc": {
          "line": 76,
          "column": 19,
          "position": 1008
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\predictive-analytics.routes.ts",
        "start": 61,
        "end": 74,
        "startLoc": {
          "line": 61,
          "column": 2,
          "position": 804
        },
        "endLoc": {
          "line": 74,
          "column": 2,
          "position": 1109
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "type: z.enum(['sales_forecast', 'demand_prediction', 'churn_prediction', 'revenue_forecast', 'inventory_optimization', 'customer_lifetime_value', 'market_trend', 'risk_assessment']).optional(),\n  status: z.enum(['pending', 'processing', 'completed', 'failed', 'cancelled']).optional(),\n  modelType: z.enum(['linear_regression', 'decision_tree', 'random_forest', 'neural_network', 'time_series', 'clustering', 'classification', 'deep_learning']).optional(),\n  accuracy: z.enum(['low', 'medium', 'high', 'very_high']).optional(),\n  isActive: z.coerce.boolean().optional(),\n  needsRetraining: z.coerce.boolean().optional(),\n  hasPredictions: z.coerce.boolean().optional(),\n  minAccuracy: z.coerce.number().min(0).max(1).optional(),\n  maxAccuracy: z.coerce.number().min(0).max(1).optional(),\n  lastPredictionFrom: z.coerce.date().optional(),\n  lastPredictionTo: z.coerce.date().optional(),\n  nextRetrainFrom: z.coerce.date().optional(),\n  nextRetrainTo: z.coerce.date().optional()\n});",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\dto\\predictive-analytics.dto.ts",
        "start": 106,
        "end": 119,
        "startLoc": {
          "line": 106,
          "column": 3,
          "position": 1247
        },
        "endLoc": {
          "line": 119,
          "column": 2,
          "position": 1555
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\predictive-analytics.routes.ts",
        "start": 125,
        "end": 139,
        "startLoc": {
          "line": 125,
          "column": 9,
          "position": 1546
        },
        "endLoc": {
          "line": 139,
          "column": 2,
          "position": 1857
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "productId: UUIDSchema.optional(),\n    description: z.string().min(1, 'Item description is required').max(500, 'Description cannot exceed 500 characters'),\n    quantity: z.number().min(0.01, 'Quantity must be greater than 0'),\n    unitPrice: MoneySchema,\n    totalPrice: MoneySchema,\n    taxRate: z.number().min(0, 'Tax rate must be non-negative').max(100, 'Tax rate cannot exceed 100%').optional(),\n    taxAmount: MoneySchema.optional(),\n    discountRate: z.number().min(0, 'Discount rate must be non-negative').max(100, 'Discount rate cannot exceed 100%').optional(),\n    discountAmount: MoneySchema.optional(),\n    notes: z.string().max(500, 'Item notes cannot exceed 500 characters').optional()\n  })).optional",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\dto\\invoice.dto.ts",
        "start": 95,
        "end": 105,
        "startLoc": {
          "line": 95,
          "column": 5,
          "position": 1178
        },
        "endLoc": {
          "line": 105,
          "column": 9,
          "position": 1359
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\dto\\invoice.dto.ts",
        "start": 48,
        "end": 58,
        "startLoc": {
          "line": 48,
          "column": 5,
          "position": 395
        },
        "endLoc": {
          "line": 58,
          "column": 4,
          "position": 576
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "type: InteractionTypeSchema.optional(),\n  status: InteractionStatusSchema.optional(),\n  priority: InteractionPrioritySchema.optional(),\n  contactId: UUIDSchema.optional(),\n  companyId: UUIDSchema.optional(),\n  userId: UUIDSchema.optional(),\n  scheduledFrom: z.coerce.date().optional(),\n  scheduledTo: z.coerce.date().optional(),\n  completedFrom: z.coerce.date().optional(),\n  completedTo: z.coerce.date().optional(),\n  tags: z.string().optional(),\n  hasOutcome: z.coerce.boolean().optional(),\n  hasNextAction: z.coerce.boolean().optional(),\n  overdue: z.coerce.boolean().optional(),\n  upcoming: z.coerce.boolean().optional()\n});\n\n// ========================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\dto\\interaction.dto.ts",
        "start": 204,
        "end": 221,
        "startLoc": {
          "line": 204,
          "column": 3,
          "position": 1853
        },
        "endLoc": {
          "line": 221,
          "column": 76,
          "position": 2073
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\dto\\interaction.dto.ts",
        "start": 186,
        "end": 203,
        "startLoc": {
          "line": 186,
          "column": 3,
          "position": 1618
        },
        "endLoc": {
          "line": 203,
          "column": 7,
          "position": 1838
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "),\n  pagination: z.object({\n    page: z.number(),\n    limit: z.number(),\n    total: z.number(),\n    totalPages: z.number(),\n    hasNext: z.boolean(),\n    hasPrev: z.boolean()\n  })\n});\n\nexport const InteractionStatsResponseSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\dto\\interaction.dto.ts",
        "start": 288,
        "end": 299,
        "startLoc": {
          "line": 288,
          "column": 26,
          "position": 2663
        },
        "endLoc": {
          "line": 299,
          "column": 31,
          "position": 2754
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\dto\\product.dto.ts",
        "start": 320,
        "end": 331,
        "startLoc": {
          "line": 320,
          "column": 22,
          "position": 4458
        },
        "endLoc": {
          "line": 331,
          "column": 27,
          "position": 4549
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "= z.object({\n  contactId: UUIDSchema,\n  name: NameSchema,\n  value: z.number().min(0, 'Deal value cannot be negative'),\n  currency: z.string().length(3, 'Currency must be 3 characters').default('USD'),\n  source: DealSourceSchema.default('WEBSITE'),\n  companyId: UUIDSchema.optional(),\n  description: DescriptionSchema.optional()\n});\n\nexport const CreateProposalSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\dto\\deal.dto.ts",
        "start": 90,
        "end": 100,
        "startLoc": {
          "line": 90,
          "column": 2,
          "position": 832
        },
        "endLoc": {
          "line": 100,
          "column": 21,
          "position": 939
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\dto\\deal.dto.ts",
        "start": 80,
        "end": 90,
        "startLoc": {
          "line": 80,
          "column": 2,
          "position": 723
        },
        "endLoc": {
          "line": 90,
          "column": 22,
          "position": 830
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "= z.object({\n  contactId: UUIDSchema,\n  name: NameSchema,\n  value: z.number().min(0, 'Deal value cannot be negative'),\n  currency: z.string().length(3, 'Currency must be 3 characters').default('USD'),\n  source: DealSourceSchema.default('WEBSITE'),\n  companyId: UUIDSchema.optional(),\n  description: DescriptionSchema.optional()\n});\n\nexport const CreateNegotiationSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\dto\\deal.dto.ts",
        "start": 100,
        "end": 110,
        "startLoc": {
          "line": 100,
          "column": 2,
          "position": 941
        },
        "endLoc": {
          "line": 110,
          "column": 24,
          "position": 1048
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\dto\\deal.dto.ts",
        "start": 80,
        "end": 90,
        "startLoc": {
          "line": 80,
          "column": 2,
          "position": 723
        },
        "endLoc": {
          "line": 90,
          "column": 22,
          "position": 830
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "= z.object({\n  contactId: UUIDSchema,\n  name: NameSchema,\n  value: z.number().min(0, 'Deal value cannot be negative'),\n  currency: z.string().length(3, 'Currency must be 3 characters').default('USD'),\n  source: DealSourceSchema.default('WEBSITE'),\n  companyId: UUIDSchema.optional(),\n  description: DescriptionSchema.optional()\n});\n\n// ========================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\dto\\deal.dto.ts",
        "start": 110,
        "end": 120,
        "startLoc": {
          "line": 110,
          "column": 2,
          "position": 1050
        },
        "endLoc": {
          "line": 120,
          "column": 76,
          "position": 1153
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\dto\\deal.dto.ts",
        "start": 80,
        "end": 90,
        "startLoc": {
          "line": 80,
          "column": 2,
          "position": 723
        },
        "endLoc": {
          "line": 90,
          "column": 7,
          "position": 826
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ".optional(),\n  expectedCloseDate: z.coerce.date().optional(),\n  nextStep: z.string().max(500, 'Next step cannot exceed 500 characters').optional(),\n  nextStepDate: z.coerce.date().optional(),\n  tags: TagsSchema,\n  customFields: CustomFieldsSchema,\n  attachments: z.array(z.string().url('Invalid attachment URL')).max(5, 'Cannot have more than 5 attachments').optional(),\n  notes: z.string().max(2000, 'Notes cannot exceed 2000 characters').optional(),\n  competitors: z.array(z.string().max(100, 'Competitor name cannot exceed 100 characters')).max(10, 'Cannot have more than 10 competitors').optional(),\n  decisionMakers: z.array(z.string().max(100, 'Decision maker name cannot exceed 100 characters')).max(10, 'Cannot have more than 10 decision makers').optional(),\n  budget: z.number().min(0, 'Budget cannot be negative').optional(),\n  timeline: z.string().max(200, 'Timeline cannot exceed 200 characters').optional(),\n  requirements: z.array(z.string().max(500, 'Requirement cannot exceed 500 characters')).max(20, 'Cannot have more than 20 requirements').optional(),\n  objections: z.array(z.string().max(500, 'Objection cannot exceed 500 characters')).max(20, 'Cannot have more than 20 objections').optional()\n});\n\nexport const UpdateStageSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\dto\\deal.dto.ts",
        "start": 132,
        "end": 148,
        "startLoc": {
          "line": 132,
          "column": 2,
          "position": 1300
        },
        "endLoc": {
          "line": 148,
          "column": 18,
          "position": 1631
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\dto\\deal.dto.ts",
        "start": 64,
        "end": 80,
        "startLoc": {
          "line": 64,
          "column": 11,
          "position": 390
        },
        "endLoc": {
          "line": 80,
          "column": 17,
          "position": 721
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ": z.coerce.date().optional()\n});\n\nexport const AddTagSchema = z.object({\n  tag: z.string().min(1, 'Tag cannot be empty').max(50, 'Tag cannot exceed 50 characters')\n});\n\nexport const RemoveTagSchema = z.object({\n  tag: z.string().min(1, 'Tag cannot be empty').max(50, 'Tag cannot exceed 50 characters')\n});\n\nexport const AddCompetitorSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\dto\\deal.dto.ts",
        "start": 175,
        "end": 186,
        "startLoc": {
          "line": 175,
          "column": 13,
          "position": 1881
        },
        "endLoc": {
          "line": 186,
          "column": 20,
          "position": 1994
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\dto\\interaction.dto.ts",
        "start": 132,
        "end": 143,
        "startLoc": {
          "line": 132,
          "column": 15,
          "position": 1107
        },
        "endLoc": {
          "line": 143,
          "column": 21,
          "position": 1220
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ")\n});\n\nexport const SetCustomFieldSchema = z.object({\n  key: z.string().min(1, 'Key cannot be empty').max(100, 'Key cannot exceed 100 characters'),\n  value: z.any()\n});\n\nexport const RemoveCustomFieldSchema = z.object({\n  key: z.string().min(1, 'Key cannot be empty').max(100, 'Key cannot exceed 100 characters')\n});\n\n// ========================================================================\n// PARAMETER SCHEMAS\n// ========================================================================\n\nexport const DealIdParamSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\dto\\deal.dto.ts",
        "start": 199,
        "end": 215,
        "startLoc": {
          "line": 199,
          "column": 51,
          "position": 2163
        },
        "endLoc": {
          "line": 215,
          "column": 18,
          "position": 2282
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\dto\\interaction.dto.ts",
        "start": 140,
        "end": 156,
        "startLoc": {
          "line": 140,
          "column": 34,
          "position": 1209
        },
        "endLoc": {
          "line": 156,
          "column": 25,
          "position": 1328
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": "stage: DealStageSchema.optional(),\n  status: DealStatusSchema.optional(),\n  priority: DealPrioritySchema.optional(),\n  source: DealSourceSchema.optional(),\n  contactId: UUIDSchema.optional(),\n  companyId: UUIDSchema.optional(),\n  userId: UUIDSchema.optional(),\n  valueFrom: z.coerce.number().min(0, 'Value from cannot be negative').optional(),\n  valueTo: z.coerce.number().min(0, 'Value to cannot be negative').optional(),\n  probabilityFrom: z.coerce.number().min(0, 'Probability from cannot be negative').max(100, 'Probability from cannot exceed 100').optional(),\n  probabilityTo: z.coerce.number().min(0, 'Probability to cannot be negative').max(100, 'Probability to cannot exceed 100').optional(),\n  expectedCloseFrom: z.coerce.date().optional(),\n  expectedCloseTo: z.coerce.date().optional(),\n  actualCloseFrom: z.coerce.date().optional(),\n  actualCloseTo: z.coerce.date().optional(),\n  tags: z.string().optional(),\n  hasNextStep: z.coerce.boolean().optional(),\n  overdue: z.coerce.boolean().optional(),\n  won: z.coerce.boolean().optional(),\n  lost: z.coerce.boolean().optional(),\n  active: z.coerce.boolean().optional()\n});\n\n// ========================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\dto\\deal.dto.ts",
        "start": 269,
        "end": 292,
        "startLoc": {
          "line": 269,
          "column": 3,
          "position": 2957
        },
        "endLoc": {
          "line": 292,
          "column": 76,
          "position": 3321
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\dto\\deal.dto.ts",
        "start": 245,
        "end": 268,
        "startLoc": {
          "line": 245,
          "column": 3,
          "position": 2578
        },
        "endLoc": {
          "line": 268,
          "column": 7,
          "position": 2942
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "),\n  pagination: z.object({\n    page: z.number(),\n    limit: z.number(),\n    total: z.number(),\n    totalPages: z.number(),\n    hasNext: z.boolean(),\n    hasPrev: z.boolean()\n  })\n});\n\nexport const DealStatsResponseSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\dto\\deal.dto.ts",
        "start": 383,
        "end": 394,
        "startLoc": {
          "line": 383,
          "column": 19,
          "position": 4203
        },
        "endLoc": {
          "line": 394,
          "column": 24,
          "position": 4294
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\dto\\product.dto.ts",
        "start": 320,
        "end": 331,
        "startLoc": {
          "line": 320,
          "column": 22,
          "position": 4458
        },
        "endLoc": {
          "line": 331,
          "column": 27,
          "position": 4549
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "),\n    constraints: z.array(z.object({\n      id: z.string().uuid(),\n      name: z.string().min(1, 'Constraint name is required').max(255, 'Constraint name cannot exceed 255 characters'),\n      type: z.enum(['primary_key', 'foreign_key', 'unique', 'check', 'not_null', 'default', 'index'], {\n        errorMap: () => ({ message: 'Constraint type must be one of: primary_key, foreign_key, unique, check, not_null, default, index' })\n      }),\n      columns: z.array(z.string()).min(1, 'At least one column is required'),\n      referencedTable: z.string().max(255).optional(),\n      referencedColumns: z.array(z.string()).optional(),\n      condition: z.string().max(1000).optional(),\n      description: z.string().max(1000, 'Description cannot exceed 1000 characters'),\n      isDeferrable: z.boolean().default(false),\n      initiallyDeferred: z.boolean().default(false),\n      onDelete: z.enum(['CASCADE', 'SET NULL', 'RESTRICT', 'NO ACTION']).optional(),\n      onUpdate: z.enum(['CASCADE', 'SET NULL', 'RESTRICT', 'NO ACTION']).optional()\n    })).default([]),\n    indexes",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\dto\\database-schema.dto.ts",
        "start": 125,
        "end": 142,
        "startLoc": {
          "line": 125,
          "column": 44,
          "position": 1924
        },
        "endLoc": {
          "line": 142,
          "column": 8,
          "position": 2242
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\dto\\database-schema.dto.ts",
        "start": 102,
        "end": 119,
        "startLoc": {
          "line": 102,
          "column": 2,
          "position": 1490
        },
        "endLoc": {
          "line": 119,
          "column": 12,
          "position": 1808
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "z.object({\n  id: z.string(),\n  name: z.string(),\n  type: z.enum(['primary_key', 'foreign_key', 'unique', 'check', 'not_null', 'default', 'index']),\n  columns: z.array(z.string()),\n  referencedTable: z.string().optional(),\n  referencedColumns: z.array(z.string()).optional(),\n  condition: z.string().optional(),\n  description: z.string(),\n  isDeferrable: z.boolean(),\n  initiallyDeferred: z.boolean(),\n  onDelete: z.enum(['CASCADE', 'SET NULL', 'RESTRICT', 'NO ACTION']).optional(),\n  onUpdate: z.enum(['CASCADE', 'SET NULL', 'RESTRICT', 'NO ACTION']).optional(),\n  createdAt: z.date(),\n  updatedAt: z.date()\n});",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\dto\\database-schema.dto.ts",
        "start": 342,
        "end": 357,
        "startLoc": {
          "line": 342,
          "column": 2,
          "position": 5449
        },
        "endLoc": {
          "line": 357,
          "column": 2,
          "position": 5685
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\dto\\database-schema.dto.ts",
        "start": 316,
        "end": 331,
        "startLoc": {
          "line": 316,
          "column": 2,
          "position": 5101
        },
        "endLoc": {
          "line": 331,
          "column": 2,
          "position": 5338
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "totalTables: z.number(),\n  totalViews: z.number(),\n  totalFunctions: z.number(),\n  totalProcedures: z.number(),\n  totalTriggers: z.number(),\n  totalIndexes: z.number(),\n  totalConstraints: z.number(),\n  totalPolicies: z.number(),\n  totalSize: z.number(),\n  averageTableSize: z.number(),\n  averageHealthScore",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\dto\\database-schema.dto.ts",
        "start": 540,
        "end": 550,
        "startLoc": {
          "line": 540,
          "column": 3,
          "position": 7749
        },
        "endLoc": {
          "line": 550,
          "column": 19,
          "position": 7859
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\dto\\database-schema.dto.ts",
        "start": 437,
        "end": 447,
        "startLoc": {
          "line": 437,
          "column": 3,
          "position": 6595
        },
        "endLoc": {
          "line": 447,
          "column": 13,
          "position": 6705
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ").optional(),\n    other: z.record(z.string()).optional()\n  }).optional(),\n  communication: z.object({\n    preferredMethod: z.enum(['email', 'phone', 'sms', 'whatsapp', 'linkedin', 'other']).optional(),\n    bestTimeToCall: z.string().optional(),\n    timeZone: z.string().optional(),\n    doNotCall: z.boolean().optional(),\n    doNotEmail: z.boolean().optional(),\n    doNotSms: z.boolean().optional()\n  }).optional(),\n  settings: z.object({\n    notifications: z.object({\n      email: z.boolean().optional(),\n      sms: z.boolean().optional(),\n      push: z.boolean().optional(),\n      phone: z.boolean().optional()\n    }).optional(),\n    preferences: z.object({\n      language: z.string().length(2,",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\dto\\contact.dto.ts",
        "start": 63,
        "end": 82,
        "startLoc": {
          "line": 63,
          "column": 21,
          "position": 1082
        },
        "endLoc": {
          "line": 82,
          "column": 2,
          "position": 1354
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\contact.routes.ts",
        "start": 64,
        "end": 83,
        "startLoc": {
          "line": 64,
          "column": 2,
          "position": 985
        },
        "endLoc": {
          "line": 83,
          "column": 2,
          "position": 1257
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": ".number().int().min(0).optional(),\n  lastContactAfter: z.coerce.date().optional(),\n  lastContactBefore: z.coerce.date().optional(),\n  nextFollowUpAfter: z.coerce.date().optional(),\n  nextFollowUpBefore: z.coerce.date().optional(),\n  lastEmailOpenAfter: z.coerce.date().optional(),\n  lastEmailOpenBefore: z.coerce.date().optional(),\n  lastEmailClickAfter: z.coerce.date().optional(),\n  lastEmailClickBefore: z.coerce.date().optional(),\n  lastWebsiteVisitAfter: z.coerce.date().optional(),\n  lastWebsiteVisitBefore: z.coerce.date().optional(),\n  lastSocialMediaInteractionAfter: z.coerce.date().optional(),\n  lastSocialMediaInteractionBefore: z.coerce.date().optional(),\n  createdAfter: z.coerce.date().optional(),\n  createdBefore: z.coerce.date().optional(),\n  updatedAfter: z.coerce.date().optional(),\n  updatedBefore: z.coerce.date().optional(),\n  birthdayAfter: z.coerce.date().optional(),\n  birthdayBefore: z.coerce.date().optional(),\n  anniversaryAfter: z.coerce.date().optional(),\n  anniversaryBefore: z.coerce.date().optional(),\n  tags: z.array(z.string()).optional(),\n  page: z.coerce.number().int().min(1,",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\dto\\contact.dto.ts",
        "start": 138,
        "end": 160,
        "startLoc": {
          "line": 138,
          "column": 2,
          "position": 2370
        },
        "endLoc": {
          "line": 160,
          "column": 2,
          "position": 2768
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\contact.routes.ts",
        "start": 269,
        "end": 291,
        "startLoc": {
          "line": 269,
          "column": 7,
          "position": 3955
        },
        "endLoc": {
          "line": 291,
          "column": 2,
          "position": 4353
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ".number().int().min(1800).optional(),\n  lastContactAfter: z.coerce.date().optional(),\n  lastContactBefore: z.coerce.date().optional(),\n  nextFollowUpAfter: z.coerce.date().optional(),\n  nextFollowUpBefore: z.coerce.date().optional(),\n  createdAfter: z.coerce.date().optional(),\n  createdBefore: z.coerce.date().optional(),\n  updatedAfter: z.coerce.date().optional(),\n  updatedBefore: z.coerce.date().optional(),\n  tags: z.array(z.string()).optional(),\n  page: z.coerce.number().int().min(1,",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\dto\\company.dto.ts",
        "start": 118,
        "end": 128,
        "startLoc": {
          "line": 118,
          "column": 2,
          "position": 1926
        },
        "endLoc": {
          "line": 128,
          "column": 2,
          "position": 2120
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\company.routes.ts",
        "start": 227,
        "end": 237,
        "startLoc": {
          "line": 227,
          "column": 7,
          "position": 3144
        },
        "endLoc": {
          "line": 237,
          "column": 2,
          "position": 3338
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ": z.string(),\n    count: z.number().int().min(0)\n  })),\n  topSources: z.array(z.object({\n    source: z.string(),\n    count: z.number().int().min(0)\n  })),\n  topAssignedUsers: z.array(z.object({\n    userId: z.string(),\n    count: z.number().int().min(0)\n  }))\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\dto\\company.dto.ts",
        "start": 271,
        "end": 282,
        "startLoc": {
          "line": 271,
          "column": 9,
          "position": 4209
        },
        "endLoc": {
          "line": 282,
          "column": 2,
          "position": 4342
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\dto\\contact.dto.ts",
        "start": 369,
        "end": 379,
        "startLoc": {
          "line": 369,
          "column": 11,
          "position": 5913
        },
        "endLoc": {
          "line": 379,
          "column": 2,
          "position": 6045
        }
      }
    },
    {
      "format": "typescript",
      "lines": 30,
      "fragment": "),\n  description: DescriptionSchema.optional(),\n  settings: z.object({\n    layers: z.array(z.object({\n      id: z.string().uuid(),\n      name: z.string().min(1).max(255),\n      type: z.enum(['domain', 'application', 'infrastructure', 'presentation', 'shared']),\n      description: z.string().max(1000),\n      components: z.array(z.object({\n        id: z.string().uuid(),\n        name: z.string().min(1).max(255),\n        type: z.enum(['entity', 'repository', 'use_case', 'service', 'controller', 'middleware', 'dto', 'route']),\n        description: z.string().max(1000),\n        dependencies: z.array(z.string()).default([]),\n        interfaces: z.array(z.string()).default([]),\n        implementation: z.string().max(5000),\n        tests: z.array(z.string()).default([]),\n        documentation: z.string().max(5000)\n      })),\n      dependencies: z.array(z.string()).default([]),\n      responsibilities: z.array(z.string()).default([]),\n      patterns: z.array(z.string()).default([])\n    })).optional(),\n    patterns: z.array(z.string()).optional(),\n    principles: z.array(z.string()).optional(),\n    conventions: z.record(z.any()).optional(),\n    tools: z.array(z.string()).optional(),\n    frameworks: z.array(z.string()).optional(),\n    libraries: z.array(z.string()).optional(),\n    customFields: CustomFieldsSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\dto\\architecture.dto.ts",
        "start": 75,
        "end": 104,
        "startLoc": {
          "line": 75,
          "column": 2,
          "position": 851
        },
        "endLoc": {
          "line": 104,
          "column": 19,
          "position": 1370
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\dto\\architecture.dto.ts",
        "start": 34,
        "end": 102,
        "startLoc": {
          "line": 34,
          "column": 2,
          "position": 179
        },
        "endLoc": {
          "line": 102,
          "column": 2,
          "position": 1491
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "type: z.enum(['hexagonal', 'layered', 'microservices', 'monolithic', 'event_driven']).optional(),\n  status: z.enum(['design', 'implementation', 'testing', 'deployed', 'maintenance']).optional(),\n  layerType: z.enum(['domain', 'application', 'infrastructure', 'presentation', 'shared']).optional(),\n  componentType: z.enum(['entity', 'repository', 'use_case', 'service', 'controller', 'middleware', 'dto', 'route']).optional(),\n  isActive: z.coerce.boolean().optional(),\n  hasMetrics: z.coerce.boolean().optional(),\n  minQualityScore: z.coerce.number().min(0).max(10).optional(),\n  maxQualityScore: z.coerce.number().min(0).max(10).optional(),\n  lastAnalysisFrom: z.coerce.date().optional(),\n  lastAnalysisTo: z.coerce.date().optional()\n});",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\dto\\architecture.dto.ts",
        "start": 127,
        "end": 137,
        "startLoc": {
          "line": 127,
          "column": 3,
          "position": 1504
        },
        "endLoc": {
          "line": 137,
          "column": 2,
          "position": 1755
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\routes\\architecture.routes.ts",
        "start": 153,
        "end": 164,
        "startLoc": {
          "line": 153,
          "column": 9,
          "position": 1928
        },
        "endLoc": {
          "line": 164,
          "column": 2,
          "position": 2182
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "});\n\n      if (!result.success) {\n        res.status(400).json({\n          success: false,\n          error: result.error,\n          timestamp: new Date()\n        } as ApiResponse);\n        return;\n      }\n\n      const response: ApiResponse<UserResponse> = {\n        success: true,\n        data: transformUserToResponse(result.user!),\n        message: 'User updated successfully'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\user.controller.ts",
        "start": 99,
        "end": 113,
        "startLoc": {
          "line": 99,
          "column": 7,
          "position": 707
        },
        "endLoc": {
          "line": 113,
          "column": 28,
          "position": 818
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\user.controller.ts",
        "start": 55,
        "end": 69,
        "startLoc": {
          "line": 55,
          "column": 7,
          "position": 336
        },
        "endLoc": {
          "line": 69,
          "column": 28,
          "position": 447
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ");\n\n      if (!user) {\n        res.status(404).json({\n          success: false,\n          error: 'User not found',\n          timestamp: new Date()\n        } as ApiResponse);\n        return;\n      }\n\n      const response: ApiResponse<UserResponse> = {\n        success: true,\n        data: transformUserToResponse(user),\n        timestamp: new Date(),\n        requestId: req.headers['x-request-id'] as string\n      };\n\n      res.status(200).json(response);\n    } catch (error) {\n      next(error);\n    }\n  }\n\n  async getUsersByOrganization",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\user.controller.ts",
        "start": 209,
        "end": 233,
        "startLoc": {
          "line": 209,
          "column": 6,
          "position": 1628
        },
        "endLoc": {
          "line": 233,
          "column": 23,
          "position": 1800
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\user.controller.ts",
        "start": 172,
        "end": 196,
        "startLoc": {
          "line": 172,
          "column": 7,
          "position": 1325
        },
        "endLoc": {
          "line": 196,
          "column": 15,
          "position": 1497
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "(req.body);\n      const updatedBy = req.user?.id || req.headers['x-user-id'] as string;\n\n      if (!updatedBy) {\n        res.status(401).json({\n          success: false,\n          error: 'User ID is required',\n          timestamp: new Date()\n        } as ApiResponse);\n        return;\n      }\n\n      const result = await this.userApplicationService.bulkUpdateUsers",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\user.controller.ts",
        "start": 301,
        "end": 313,
        "startLoc": {
          "line": 301,
          "column": 31,
          "position": 2401
        },
        "endLoc": {
          "line": 313,
          "column": 16,
          "position": 2513
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\user.controller.ts",
        "start": 83,
        "end": 95,
        "startLoc": {
          "line": 83,
          "column": 26,
          "position": 578
        },
        "endLoc": {
          "line": 95,
          "column": 11,
          "position": 690
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ");\n\n      if (!result.success) {\n        res.status(400).json({\n          success: false,\n          error: result.error,\n          timestamp: new Date()\n        } as ApiResponse);\n        return;\n      }\n\n      const response: ApiResponse = {\n        success: true,\n        data",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\user.controller.ts",
        "start": 317,
        "end": 330,
        "startLoc": {
          "line": 317,
          "column": 7,
          "position": 2532
        },
        "endLoc": {
          "line": 330,
          "column": 5,
          "position": 2623
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\user.controller.ts",
        "start": 141,
        "end": 154,
        "startLoc": {
          "line": 141,
          "column": 2,
          "position": 1070
        },
        "endLoc": {
          "line": 154,
          "column": 8,
          "position": 1161
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ");\n      const deletedBy = req.user?.id || req.headers['x-user-id'] as string;\n\n      if (!deletedBy) {\n        res.status(401).json({\n          success: false,\n          error: 'User ID is required',\n          timestamp: new Date()\n        } as ApiResponse);\n        return;\n      }\n\n      const result = await this.userApplicationService.bulkDeleteUsers",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\user.controller.ts",
        "start": 349,
        "end": 361,
        "startLoc": {
          "line": 349,
          "column": 5,
          "position": 2821
        },
        "endLoc": {
          "line": 361,
          "column": 16,
          "position": 2929
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\user.controller.ts",
        "start": 126,
        "end": 138,
        "startLoc": {
          "line": 126,
          "column": 2,
          "position": 948
        },
        "endLoc": {
          "line": 138,
          "column": 11,
          "position": 1056
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ");\n\n      if (!result.success) {\n        res.status(400).json({\n          success: false,\n          error: result.error,\n          timestamp: new Date()\n        } as ApiResponse);\n        return;\n      }\n\n      const response: ApiResponse = {\n        success: true,\n        data: {\n          total: result.results.length,\n          successful: result.results.filter(r => r.success).length,\n          failed: result.results.filter(r => !r.success).length,\n          results: result.results\n        },\n        message: 'Bulk delete completed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\user.controller.ts",
        "start": 364,
        "end": 383,
        "startLoc": {
          "line": 364,
          "column": 7,
          "position": 2942
        },
        "endLoc": {
          "line": 383,
          "column": 24,
          "position": 3110
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\user.controller.ts",
        "start": 141,
        "end": 336,
        "startLoc": {
          "line": 141,
          "column": 2,
          "position": 1070
        },
        "endLoc": {
          "line": 336,
          "column": 24,
          "position": 2700
        }
      }
    },
    {
      "format": "typescript",
      "lines": 67,
      "fragment": "});\n\n      const response: ProductResponse = {\n        id: result.data.product.id.value,\n        organizationId: result.data.product.organizationId.value,\n        name: result.data.product.name,\n        description: result.data.product.description,\n        shortDescription: result.data.product.shortDescription,\n        sku: result.data.product.sku,\n        barcode: result.data.product.barcode,\n        type: result.data.product.type.value,\n        status: result.data.product.status.value,\n        category: result.data.product.category.value,\n        brand: result.data.product.brand?.value,\n        supplier: result.data.product.supplier?.value,\n        settings: {\n          inventory: result.data.product.settings.inventory,\n          pricing: {\n            costPrice: result.data.product.settings.pricing.costPrice ? {\n              amount: result.data.product.settings.pricing.costPrice.amount,\n              currency: result.data.product.settings.pricing.costPrice.currency\n            } : undefined,\n            sellingPrice: {\n              amount: result.data.product.settings.pricing.sellingPrice.amount,\n              currency: result.data.product.settings.pricing.sellingPrice.currency\n            },\n            compareAtPrice: result.data.product.settings.pricing.compareAtPrice ? {\n              amount: result.data.product.settings.pricing.compareAtPrice.amount,\n              currency: result.data.product.settings.pricing.compareAtPrice.currency\n            } : undefined,\n            margin: result.data.product.settings.pricing.margin\n          },\n          shipping: result.data.product.settings.shipping,\n          seo: result.data.product.settings.seo,\n          customFields: result.data.product.settings.customFields,\n          tags: result.data.product.settings.tags,\n          notes: result.data.product.settings.notes\n        },\n        images: result.data.product.images,\n        documents: result.data.product.documents,\n        specifications: result.data.product.specifications,\n        variants: result.data.product.variants?.map(variant => ({\n          id: variant.id,\n          name: variant.name,\n          sku: variant.sku,\n          price: {\n            amount: variant.price.amount,\n            currency: variant.price.currency\n          },\n          compareAtPrice: variant.compareAtPrice ? {\n            amount: variant.compareAtPrice.amount,\n            currency: variant.compareAtPrice.currency\n          } : undefined,\n          costPrice: variant.costPrice ? {\n            amount: variant.costPrice.amount,\n            currency: variant.costPrice.currency\n          } : undefined,\n          inventory: variant.inventory,\n          attributes: variant.attributes,\n          isActive: variant.isActive\n        })),\n        isActive: result.data.product.isActive,\n        createdAt: result.data.product.createdAt,\n        updatedAt: result.data.product.updatedAt\n      };\n\n      res.status(200",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\product.controller.ts",
        "start": 139,
        "end": 205,
        "startLoc": {
          "line": 139,
          "column": 7,
          "position": 1330
        },
        "endLoc": {
          "line": 205,
          "column": 4,
          "position": 2102
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\product.controller.ts",
        "start": 53,
        "end": 119,
        "startLoc": {
          "line": 53,
          "column": 7,
          "position": 368
        },
        "endLoc": {
          "line": 119,
          "column": 4,
          "position": 1140
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": "product.variants?.map(variant => ({\n          id: variant.id,\n          name: variant.name,\n          sku: variant.sku,\n          price: {\n            amount: variant.price.amount,\n            currency: variant.price.currency\n          },\n          compareAtPrice: variant.compareAtPrice ? {\n            amount: variant.compareAtPrice.amount,\n            currency: variant.compareAtPrice.currency\n          } : undefined,\n          costPrice: variant.costPrice ? {\n            amount: variant.costPrice.amount,\n            currency: variant.costPrice.currency\n          } : undefined,\n          inventory: variant.inventory,\n          attributes: variant.attributes,\n          isActive: variant.isActive\n        })),\n        isActive: product",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\product.controller.ts",
        "start": 283,
        "end": 303,
        "startLoc": {
          "line": 283,
          "column": 2,
          "position": 2848
        },
        "endLoc": {
          "line": 303,
          "column": 8,
          "position": 3038
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\product.controller.ts",
        "start": 94,
        "end": 114,
        "startLoc": {
          "line": 94,
          "column": 2,
          "position": 906
        },
        "endLoc": {
          "line": 114,
          "column": 7,
          "position": 1096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 63,
      "fragment": "{\n          id: product.id.value,\n          organizationId: product.organizationId.value,\n          name: product.name,\n          description: product.description,\n          shortDescription: product.shortDescription,\n          sku: product.sku,\n          barcode: product.barcode,\n          type: product.type.value,\n          status: product.status.value,\n          category: product.category.value,\n          brand: product.brand?.value,\n          supplier: product.supplier?.value,\n          settings: {\n            inventory: product.settings.inventory,\n            pricing: {\n              costPrice: product.settings.pricing.costPrice ? {\n                amount: product.settings.pricing.costPrice.amount,\n                currency: product.settings.pricing.costPrice.currency\n              } : undefined,\n              sellingPrice: {\n                amount: product.settings.pricing.sellingPrice.amount,\n                currency: product.settings.pricing.sellingPrice.currency\n              },\n              compareAtPrice: product.settings.pricing.compareAtPrice ? {\n                amount: product.settings.pricing.compareAtPrice.amount,\n                currency: product.settings.pricing.compareAtPrice.currency\n              } : undefined,\n              margin: product.settings.pricing.margin\n            },\n            shipping: product.settings.shipping,\n            seo: product.settings.seo,\n            customFields: product.settings.customFields,\n            tags: product.settings.tags,\n            notes: product.settings.notes\n          },\n          images: product.images,\n          documents: product.documents,\n          specifications: product.specifications,\n          variants: product.variants?.map(variant => ({\n            id: variant.id,\n            name: variant.name,\n            sku: variant.sku,\n            price: {\n              amount: variant.price.amount,\n              currency: variant.price.currency\n            },\n            compareAtPrice: variant.compareAtPrice ? {\n              amount: variant.compareAtPrice.amount,\n              currency: variant.compareAtPrice.currency\n            } : undefined,\n            costPrice: variant.costPrice ? {\n              amount: variant.costPrice.amount,\n              currency: variant.costPrice.currency\n            } : undefined,\n            inventory: variant.inventory,\n            attributes: variant.attributes,\n            isActive: variant.isActive\n          })),\n          isActive: product.isActive,\n          createdAt: product.createdAt,\n          updatedAt: product.updatedAt\n        })",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\product.controller.ts",
        "start": 375,
        "end": 437,
        "startLoc": {
          "line": 375,
          "column": 2,
          "position": 3800
        },
        "endLoc": {
          "line": 437,
          "column": 2,
          "position": 4413
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\product.controller.ts",
        "start": 244,
        "end": 306,
        "startLoc": {
          "line": 244,
          "column": 2,
          "position": 2449
        },
        "endLoc": {
          "line": 306,
          "column": 2,
          "position": 3062
        }
      }
    },
    {
      "format": "typescript",
      "lines": 67,
      "fragment": ".map(product => ({\n          id: product.id.value,\n          organizationId: product.organizationId.value,\n          name: product.name,\n          description: product.description,\n          shortDescription: product.shortDescription,\n          sku: product.sku,\n          barcode: product.barcode,\n          type: product.type.value,\n          status: product.status.value,\n          category: product.category.value,\n          brand: product.brand?.value,\n          supplier: product.supplier?.value,\n          settings: {\n            inventory: product.settings.inventory,\n            pricing: {\n              costPrice: product.settings.pricing.costPrice ? {\n                amount: product.settings.pricing.costPrice.amount,\n                currency: product.settings.pricing.costPrice.currency\n              } : undefined,\n              sellingPrice: {\n                amount: product.settings.pricing.sellingPrice.amount,\n                currency: product.settings.pricing.sellingPrice.currency\n              },\n              compareAtPrice: product.settings.pricing.compareAtPrice ? {\n                amount: product.settings.pricing.compareAtPrice.amount,\n                currency: product.settings.pricing.compareAtPrice.currency\n              } : undefined,\n              margin: product.settings.pricing.margin\n            },\n            shipping: product.settings.shipping,\n            seo: product.settings.seo,\n            customFields: product.settings.customFields,\n            tags: product.settings.tags,\n            notes: product.settings.notes\n          },\n          images: product.images,\n          documents: product.documents,\n          specifications: product.specifications,\n          variants: product.variants?.map(variant => ({\n            id: variant.id,\n            name: variant.name,\n            sku: variant.sku,\n            price: {\n              amount: variant.price.amount,\n              currency: variant.price.currency\n            },\n            compareAtPrice: variant.compareAtPrice ? {\n              amount: variant.compareAtPrice.amount,\n              currency: variant.compareAtPrice.currency\n            } : undefined,\n            costPrice: variant.costPrice ? {\n              amount: variant.costPrice.amount,\n              currency: variant.costPrice.currency\n            } : undefined,\n            inventory: variant.inventory,\n            attributes: variant.attributes,\n            isActive: variant.isActive\n          })),\n          isActive: product.isActive,\n          createdAt: product.createdAt,\n          updatedAt: product.updatedAt\n        })),\n        pagination: {\n          page: query.page,\n          limit: query.limit,\n          total:",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\product.controller.ts",
        "start": 465,
        "end": 531,
        "startLoc": {
          "line": 465,
          "column": 9,
          "position": 4658
        },
        "endLoc": {
          "line": 531,
          "column": 2,
          "position": 5309
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\product.controller.ts",
        "start": 375,
        "end": 441,
        "startLoc": {
          "line": 375,
          "column": 18,
          "position": 3792
        },
        "endLoc": {
          "line": 441,
          "column": 2,
          "position": 4443
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "organizationId, query);\n      \n      const response: PredictiveAnalyticsListResponse = {\n        data: result.data.map(predictiveAnalytics => this.transformPredictiveAnalyticsToResponse(predictiveAnalytics)),\n        pagination: result.pagination\n      };\n\n      this.sendSuccessResponse(res, response);\n    }, res, next);\n  }\n\n  async getPredictiveAnalyticsStats",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\predictive-analytics.controller.ts",
        "start": 132,
        "end": 143,
        "startLoc": {
          "line": 132,
          "column": 2,
          "position": 1304
        },
        "endLoc": {
          "line": 143,
          "column": 28,
          "position": 1391
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\predictive-analytics.controller.ts",
        "start": 116,
        "end": 127,
        "startLoc": {
          "line": 116,
          "column": 2,
          "position": 1110
        },
        "endLoc": {
          "line": 127,
          "column": 26,
          "position": 1197
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", organizationId, query);\n      \n      const response: PredictiveAnalyticsListResponse = {\n        data: result.data.map(predictiveAnalytics => this.transformPredictiveAnalyticsToResponse(predictiveAnalytics)),\n        pagination: result.pagination\n      };\n\n      this.sendSuccessResponse(res, response);\n    }, res, next);\n  }\n\n  async getAnalyticsByStatus",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\predictive-analytics.controller.ts",
        "start": 164,
        "end": 175,
        "startLoc": {
          "line": 164,
          "column": 5,
          "position": 1650
        },
        "endLoc": {
          "line": 175,
          "column": 21,
          "position": 1739
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\predictive-analytics.controller.ts",
        "start": 132,
        "end": 127,
        "startLoc": {
          "line": 132,
          "column": 3,
          "position": 1302
        },
        "endLoc": {
          "line": 127,
          "column": 26,
          "position": 1197
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", organizationId, query);\n      \n      const response: PredictiveAnalyticsListResponse = {\n        data: result.data.map(predictiveAnalytics => this.transformPredictiveAnalyticsToResponse(predictiveAnalytics)),\n        pagination: result.pagination\n      };\n\n      this.sendSuccessResponse(res, response);\n    }, res, next);\n  }\n\n  async getActiveModels",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\predictive-analytics.controller.ts",
        "start": 181,
        "end": 192,
        "startLoc": {
          "line": 181,
          "column": 7,
          "position": 1854
        },
        "endLoc": {
          "line": 192,
          "column": 16,
          "position": 1943
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\predictive-analytics.controller.ts",
        "start": 132,
        "end": 127,
        "startLoc": {
          "line": 132,
          "column": 3,
          "position": 1302
        },
        "endLoc": {
          "line": 127,
          "column": 26,
          "position": 1197
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "(organizationId, query);\n      \n      const response: PredictiveAnalyticsListResponse = {\n        data: result.data.map(predictiveAnalytics => this.transformPredictiveAnalyticsToResponse(predictiveAnalytics)),\n        pagination: result.pagination\n      };\n\n      this.sendSuccessResponse(res, response);\n    }, res, next);\n  }\n\n  async getNeedsRetraining",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\predictive-analytics.controller.ts",
        "start": 197,
        "end": 208,
        "startLoc": {
          "line": 197,
          "column": 17,
          "position": 2040
        },
        "endLoc": {
          "line": 208,
          "column": 19,
          "position": 2128
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\predictive-analytics.controller.ts",
        "start": 116,
        "end": 127,
        "startLoc": {
          "line": 116,
          "column": 21,
          "position": 1109
        },
        "endLoc": {
          "line": 127,
          "column": 26,
          "position": 1197
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "(organizationId, query);\n      \n      const response: PredictiveAnalyticsListResponse = {\n        data: result.data.map(predictiveAnalytics => this.transformPredictiveAnalyticsToResponse(predictiveAnalytics)),\n        pagination: result.pagination\n      };\n\n      this.sendSuccessResponse(res, response);\n    }, res, next);\n  }\n\n  // ========================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\predictive-analytics.controller.ts",
        "start": 213,
        "end": 224,
        "startLoc": {
          "line": 213,
          "column": 20,
          "position": 2225
        },
        "endLoc": {
          "line": 224,
          "column": 76,
          "position": 2311
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\predictive-analytics.controller.ts",
        "start": 116,
        "end": 127,
        "startLoc": {
          "line": 116,
          "column": 21,
          "position": 1109
        },
        "endLoc": {
          "line": 127,
          "column": 6,
          "position": 1195
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "organizationId, query);\n      \n      const response: InvoiceListResponse = {\n        data: result.data.map(invoice => this.transformInvoiceToResponse(invoice)),\n        pagination: result.pagination\n      };\n\n      this.sendSuccessResponse(res, response);\n    }, res, next);\n  }\n\n  async getInvoiceStats",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\invoice.controller.ts",
        "start": 126,
        "end": 137,
        "startLoc": {
          "line": 126,
          "column": 2,
          "position": 1230
        },
        "endLoc": {
          "line": 137,
          "column": 16,
          "position": 1317
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\invoice.controller.ts",
        "start": 110,
        "end": 121,
        "startLoc": {
          "line": 110,
          "column": 2,
          "position": 1036
        },
        "endLoc": {
          "line": 121,
          "column": 15,
          "position": 1123
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", organizationId, query);\n      \n      const response: InvoiceListResponse = {\n        data: result.data.map(invoice => this.transformInvoiceToResponse(invoice)),\n        pagination: result.pagination\n      };\n\n      this.sendSuccessResponse(res, response);\n    }, res, next);\n  }\n\n  async getInvoicesByStatus",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\invoice.controller.ts",
        "start": 158,
        "end": 169,
        "startLoc": {
          "line": 158,
          "column": 5,
          "position": 1576
        },
        "endLoc": {
          "line": 169,
          "column": 20,
          "position": 1665
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\invoice.controller.ts",
        "start": 126,
        "end": 121,
        "startLoc": {
          "line": 126,
          "column": 3,
          "position": 1228
        },
        "endLoc": {
          "line": 121,
          "column": 15,
          "position": 1123
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", organizationId, query);\n      \n      const response: InvoiceListResponse = {\n        data: result.data.map(invoice => this.transformInvoiceToResponse(invoice)),\n        pagination: result.pagination\n      };\n\n      this.sendSuccessResponse(res, response);\n    }, res, next);\n  }\n\n  async getInvoicesByPaymentStatus",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\invoice.controller.ts",
        "start": 175,
        "end": 186,
        "startLoc": {
          "line": 175,
          "column": 7,
          "position": 1780
        },
        "endLoc": {
          "line": 186,
          "column": 27,
          "position": 1869
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\invoice.controller.ts",
        "start": 126,
        "end": 121,
        "startLoc": {
          "line": 126,
          "column": 3,
          "position": 1228
        },
        "endLoc": {
          "line": 121,
          "column": 15,
          "position": 1123
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", organizationId, query);\n      \n      const response: InvoiceListResponse = {\n        data: result.data.map(invoice => this.transformInvoiceToResponse(invoice)),\n        pagination: result.pagination\n      };\n\n      this.sendSuccessResponse(res, response);\n    }, res, next);\n  }\n\n  async getInvoicesByCompany",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\invoice.controller.ts",
        "start": 192,
        "end": 203,
        "startLoc": {
          "line": 192,
          "column": 14,
          "position": 1984
        },
        "endLoc": {
          "line": 203,
          "column": 21,
          "position": 2073
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\invoice.controller.ts",
        "start": 126,
        "end": 121,
        "startLoc": {
          "line": 126,
          "column": 3,
          "position": 1228
        },
        "endLoc": {
          "line": 121,
          "column": 15,
          "position": 1123
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", organizationId, query);\n      \n      const response: InvoiceListResponse = {\n        data: result.data.map(invoice => this.transformInvoiceToResponse(invoice)),\n        pagination: result.pagination\n      };\n\n      this.sendSuccessResponse(res, response);\n    }, res, next);\n  }\n\n  async getOverdueInvoices",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\invoice.controller.ts",
        "start": 209,
        "end": 220,
        "startLoc": {
          "line": 209,
          "column": 10,
          "position": 2188
        },
        "endLoc": {
          "line": 220,
          "column": 19,
          "position": 2277
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\invoice.controller.ts",
        "start": 126,
        "end": 121,
        "startLoc": {
          "line": 126,
          "column": 3,
          "position": 1228
        },
        "endLoc": {
          "line": 121,
          "column": 15,
          "position": 1123
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "(organizationId, query);\n      \n      const response: InvoiceListResponse = {\n        data: result.data.map(invoice => this.transformInvoiceToResponse(invoice)),\n        pagination: result.pagination\n      };\n\n      this.sendSuccessResponse(res, response);\n    }, res, next);\n  }\n\n  async getInvoicesDueSoon",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\invoice.controller.ts",
        "start": 225,
        "end": 236,
        "startLoc": {
          "line": 225,
          "column": 20,
          "position": 2374
        },
        "endLoc": {
          "line": 236,
          "column": 19,
          "position": 2462
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\invoice.controller.ts",
        "start": 110,
        "end": 121,
        "startLoc": {
          "line": 110,
          "column": 21,
          "position": 1035
        },
        "endLoc": {
          "line": 121,
          "column": 15,
          "position": 1123
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", query);\n      \n      const response: InvoiceListResponse = {\n        data: result.data.map(invoice => this.transformInvoiceToResponse(invoice)),\n        pagination: result.pagination\n      };\n\n      this.sendSuccessResponse(res, response);\n    }, res, next);\n  }\n\n  // ========================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\invoice.controller.ts",
        "start": 242,
        "end": 253,
        "startLoc": {
          "line": 242,
          "column": 2,
          "position": 2583
        },
        "endLoc": {
          "line": 253,
          "column": 76,
          "position": 2667
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\invoice.controller.ts",
        "start": 110,
        "end": 121,
        "startLoc": {
          "line": 110,
          "column": 15,
          "position": 1037
        },
        "endLoc": {
          "line": 121,
          "column": 6,
          "position": 1121
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "{\n    return {\n      total: stats.total,\n      active: stats.active,\n      inactive: stats.inactive,\n      createdThisMonth: stats.createdThisMonth,\n      createdThisYear: stats.createdThisYear,\n      updatedThisMonth: stats.updatedThisMonth,\n      updatedThisYear: stats.updatedThisYear,\n      byType: stats.byType,\n      byStatus: stats.byStatus,\n      byPaymentStatus",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\invoice.controller.ts",
        "start": 427,
        "end": 438,
        "startLoc": {
          "line": 427,
          "column": 2,
          "position": 4300
        },
        "endLoc": {
          "line": 438,
          "column": 16,
          "position": 4389
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\predictive-analytics.controller.ts",
        "start": 358,
        "end": 369,
        "startLoc": {
          "line": 358,
          "column": 2,
          "position": 3589
        },
        "endLoc": {
          "line": 369,
          "column": 12,
          "position": 3678
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "organizationId, query);\n      \n      const response: InventoryKardexListResponse = {\n        data: result.data.map(inventoryKardex => this.transformInventoryKardexToResponse(inventoryKardex)),\n        pagination: result.pagination\n      };\n\n      this.sendSuccessResponse(res, response);\n    }, res, next);\n  }\n\n  async getInventoryKardexStats",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\inventory-kardex.controller.ts",
        "start": 131,
        "end": 142,
        "startLoc": {
          "line": 131,
          "column": 2,
          "position": 1277
        },
        "endLoc": {
          "line": 142,
          "column": 24,
          "position": 1364
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\inventory-kardex.controller.ts",
        "start": 115,
        "end": 126,
        "startLoc": {
          "line": 115,
          "column": 2,
          "position": 1083
        },
        "endLoc": {
          "line": 126,
          "column": 22,
          "position": 1170
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", organizationId, query);\n      \n      const response: InventoryKardexListResponse = {\n        data: result.data.map(inventoryKardex => this.transformInventoryKardexToResponse(inventoryKardex)),\n        pagination: result.pagination\n      };\n\n      this.sendSuccessResponse(res, response);\n    }, res, next);\n  }\n\n  async getInventoryByWarehouse",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\inventory-kardex.controller.ts",
        "start": 163,
        "end": 174,
        "startLoc": {
          "line": 163,
          "column": 10,
          "position": 1623
        },
        "endLoc": {
          "line": 174,
          "column": 24,
          "position": 1712
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\inventory-kardex.controller.ts",
        "start": 131,
        "end": 126,
        "startLoc": {
          "line": 131,
          "column": 3,
          "position": 1275
        },
        "endLoc": {
          "line": 126,
          "column": 22,
          "position": 1170
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", organizationId, query);\n      \n      const response: InventoryKardexListResponse = {\n        data: result.data.map(inventoryKardex => this.transformInventoryKardexToResponse(inventoryKardex)),\n        pagination: result.pagination\n      };\n\n      this.sendSuccessResponse(res, response);\n    }, res, next);\n  }\n\n  async getLowStockInventory",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\inventory-kardex.controller.ts",
        "start": 180,
        "end": 191,
        "startLoc": {
          "line": 180,
          "column": 12,
          "position": 1827
        },
        "endLoc": {
          "line": 191,
          "column": 21,
          "position": 1916
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\inventory-kardex.controller.ts",
        "start": 131,
        "end": 126,
        "startLoc": {
          "line": 131,
          "column": 3,
          "position": 1275
        },
        "endLoc": {
          "line": 126,
          "column": 22,
          "position": 1170
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", query);\n      \n      const response: InventoryKardexListResponse = {\n        data: result.data.map(inventoryKardex => this.transformInventoryKardexToResponse(inventoryKardex)),\n        pagination: result.pagination\n      };\n\n      this.sendSuccessResponse(res, response);\n    }, res, next);\n  }\n\n  async getOutOfStockInventory",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\inventory-kardex.controller.ts",
        "start": 196,
        "end": 207,
        "startLoc": {
          "line": 196,
          "column": 10,
          "position": 2018
        },
        "endLoc": {
          "line": 207,
          "column": 23,
          "position": 2104
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\inventory-kardex.controller.ts",
        "start": 115,
        "end": 126,
        "startLoc": {
          "line": 115,
          "column": 15,
          "position": 1084
        },
        "endLoc": {
          "line": 126,
          "column": 22,
          "position": 1170
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "(organizationId, query);\n      \n      const response: InventoryKardexListResponse = {\n        data: result.data.map(inventoryKardex => this.transformInventoryKardexToResponse(inventoryKardex)),\n        pagination: result.pagination\n      };\n\n      this.sendSuccessResponse(res, response);\n    }, res, next);\n  }\n\n  async getNeedsReorderInventory",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\inventory-kardex.controller.ts",
        "start": 212,
        "end": 223,
        "startLoc": {
          "line": 212,
          "column": 15,
          "position": 2201
        },
        "endLoc": {
          "line": 223,
          "column": 25,
          "position": 2289
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\inventory-kardex.controller.ts",
        "start": 115,
        "end": 126,
        "startLoc": {
          "line": 115,
          "column": 21,
          "position": 1082
        },
        "endLoc": {
          "line": 126,
          "column": 22,
          "position": 1170
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "(organizationId, query);\n      \n      const response: InventoryKardexListResponse = {\n        data: result.data.map(inventoryKardex => this.transformInventoryKardexToResponse(inventoryKardex)),\n        pagination: result.pagination\n      };\n\n      this.sendSuccessResponse(res, response);\n    }, res, next);\n  }\n\n  // ========================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\inventory-kardex.controller.ts",
        "start": 228,
        "end": 239,
        "startLoc": {
          "line": 228,
          "column": 17,
          "position": 2386
        },
        "endLoc": {
          "line": 239,
          "column": 76,
          "position": 2472
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\inventory-kardex.controller.ts",
        "start": 115,
        "end": 126,
        "startLoc": {
          "line": 115,
          "column": 21,
          "position": 1082
        },
        "endLoc": {
          "line": 126,
          "column": 6,
          "position": 1168
        }
      }
    },
    {
      "format": "typescript",
      "lines": 28,
      "fragment": "{\n        id: movement.id,\n        productId: movement.productId,\n        warehouseId: movement.warehouseId,\n        locationId: movement.locationId,\n        movementType: movement.movementType.value,\n        movementReason: movement.movementReason.value,\n        quantity: movement.quantity,\n        unitCost: {\n          amount: movement.unitCost.amount,\n          currency: movement.unitCost.currency\n        },\n        totalCost: {\n          amount: movement.totalCost.amount,\n          currency: movement.totalCost.currency\n        },\n        reference: movement.reference,\n        referenceId: movement.referenceId,\n        notes: movement.notes,\n        batchNumber: movement.batchNumber,\n        expirationDate: movement.expirationDate,\n        serialNumber: movement.serialNumber,\n        supplierId: movement.supplierId,\n        customerId: movement.customerId,\n        userId: movement.userId,\n        movementDate: movement.movementDate,\n        status: movement.status.value\n      })",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\inventory-kardex.controller.ts",
        "start": 381,
        "end": 408,
        "startLoc": {
          "line": 381,
          "column": 2,
          "position": 3784
        },
        "endLoc": {
          "line": 408,
          "column": 2,
          "position": 4017
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\inventory-kardex\\record-movement.use-case.ts",
        "start": 177,
        "end": 205,
        "startLoc": {
          "line": 177,
          "column": 2,
          "position": 1225
        },
        "endLoc": {
          "line": 205,
          "column": 2,
          "position": 1460
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "(req: Request, res: Response): Promise<void> {\n    try {\n      const organizationId = req.user?.organizationId;\n      const userId = req.user?.id;\n\n      if (!organizationId || !userId) {\n        res.status(401).json(createErrorResponse(new Error('Unauthorized')));\n        return;\n      }\n\n      const result",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\interaction.controller.ts",
        "start": 90,
        "end": 100,
        "startLoc": {
          "line": 90,
          "column": 27,
          "position": 724
        },
        "endLoc": {
          "line": 100,
          "column": 7,
          "position": 829
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\interaction.controller.ts",
        "start": 35,
        "end": 45,
        "startLoc": {
          "line": 35,
          "column": 18,
          "position": 196
        },
        "endLoc": {
          "line": 45,
          "column": 8,
          "position": 301
        }
      }
    },
    {
      "format": "typescript",
      "lines": 37,
      "fragment": ");\n\n      const response: InteractionResponse = {\n        id: result.data.interaction.id,\n        organizationId: result.data.interaction.organizationId,\n        contactId: result.data.interaction.contactId,\n        companyId: result.data.interaction.companyId,\n        userId: result.data.interaction.userId,\n        type: result.data.interaction.type,\n        status: result.data.interaction.status,\n        priority: result.data.interaction.priority,\n        subject: result.data.interaction.subject,\n        description: result.data.interaction.description,\n        scheduledAt: result.data.interaction.scheduledAt,\n        completedAt: result.data.interaction.completedAt,\n        duration: result.data.interaction.duration,\n        outcome: result.data.interaction.outcome,\n        nextAction: result.data.interaction.nextAction,\n        nextActionDate: result.data.interaction.nextActionDate,\n        tags: result.data.interaction.tags,\n        customFields: result.data.interaction.customFields,\n        attachments: result.data.interaction.attachments,\n        createdAt: result.data.interaction.createdAt,\n        updatedAt: result.data.interaction.updatedAt\n      };\n\n      res.status(201).json({\n        success: true,\n        data: { interaction: response }\n      });\n    } catch (error) {\n      res.status(400).json(createErrorResponse(error));\n    }\n  }\n\n  // ========================================================================\n  // CREATE TASK",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\interaction.controller.ts",
        "start": 108,
        "end": 144,
        "startLoc": {
          "line": 108,
          "column": 7,
          "position": 890
        },
        "endLoc": {
          "line": 144,
          "column": 15,
          "position": 1259
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\interaction.controller.ts",
        "start": 51,
        "end": 87,
        "startLoc": {
          "line": 51,
          "column": 8,
          "position": 345
        },
        "endLoc": {
          "line": 87,
          "column": 32,
          "position": 714
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "(req: Request, res: Response): Promise<void> {\n    try {\n      const organizationId = req.user?.organizationId;\n      const userId = req.user?.id;\n\n      if (!organizationId || !userId) {\n        res.status(401).json(createErrorResponse(new Error('Unauthorized')));\n        return;\n      }\n\n      const result = await this.createInteractionUseCase.createTask",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\interaction.controller.ts",
        "start": 147,
        "end": 157,
        "startLoc": {
          "line": 147,
          "column": 11,
          "position": 1269
        },
        "endLoc": {
          "line": 157,
          "column": 11,
          "position": 1384
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\interaction.controller.ts",
        "start": 35,
        "end": 100,
        "startLoc": {
          "line": 35,
          "column": 18,
          "position": 196
        },
        "endLoc": {
          "line": 100,
          "column": 27,
          "position": 839
        }
      }
    },
    {
      "format": "typescript",
      "lines": 39,
      "fragment": ",\n        req.body.companyId\n      );\n\n      const response: InteractionResponse = {\n        id: result.data.interaction.id,\n        organizationId: result.data.interaction.organizationId,\n        contactId: result.data.interaction.contactId,\n        companyId: result.data.interaction.companyId,\n        userId: result.data.interaction.userId,\n        type: result.data.interaction.type,\n        status: result.data.interaction.status,\n        priority: result.data.interaction.priority,\n        subject: result.data.interaction.subject,\n        description: result.data.interaction.description,\n        scheduledAt: result.data.interaction.scheduledAt,\n        completedAt: result.data.interaction.completedAt,\n        duration: result.data.interaction.duration,\n        outcome: result.data.interaction.outcome,\n        nextAction: result.data.interaction.nextAction,\n        nextActionDate: result.data.interaction.nextActionDate,\n        tags: result.data.interaction.tags,\n        customFields: result.data.interaction.customFields,\n        attachments: result.data.interaction.attachments,\n        createdAt: result.data.interaction.createdAt,\n        updatedAt: result.data.interaction.updatedAt\n      };\n\n      res.status(201).json({\n        success: true,\n        data: { interaction: response }\n      });\n    } catch (error) {\n      res.status(400).json(createErrorResponse(error));\n    }\n  }\n\n  // ========================================================================\n  // CREATE NOTE",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\interaction.controller.ts",
        "start": 163,
        "end": 201,
        "startLoc": {
          "line": 163,
          "column": 9,
          "position": 1425
        },
        "endLoc": {
          "line": 201,
          "column": 15,
          "position": 1804
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\interaction.controller.ts",
        "start": 106,
        "end": 87,
        "startLoc": {
          "line": 106,
          "column": 12,
          "position": 880
        },
        "endLoc": {
          "line": 87,
          "column": 32,
          "position": 714
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "(req: Request, res: Response): Promise<void> {\n    try {\n      const organizationId = req.user?.organizationId;\n      const userId = req.user?.id;\n\n      if (!organizationId || !userId) {\n        res.status(401).json(createErrorResponse(new Error('Unauthorized')));\n        return;\n      }\n\n      const result = await this.createInteractionUseCase.createNote",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\interaction.controller.ts",
        "start": 204,
        "end": 214,
        "startLoc": {
          "line": 204,
          "column": 11,
          "position": 1814
        },
        "endLoc": {
          "line": 214,
          "column": 11,
          "position": 1929
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\interaction.controller.ts",
        "start": 35,
        "end": 100,
        "startLoc": {
          "line": 35,
          "column": 18,
          "position": 196
        },
        "endLoc": {
          "line": 100,
          "column": 27,
          "position": 839
        }
      }
    },
    {
      "format": "typescript",
      "lines": 39,
      "fragment": ",\n        req.body.companyId\n      );\n\n      const response: InteractionResponse = {\n        id: result.data.interaction.id,\n        organizationId: result.data.interaction.organizationId,\n        contactId: result.data.interaction.contactId,\n        companyId: result.data.interaction.companyId,\n        userId: result.data.interaction.userId,\n        type: result.data.interaction.type,\n        status: result.data.interaction.status,\n        priority: result.data.interaction.priority,\n        subject: result.data.interaction.subject,\n        description: result.data.interaction.description,\n        scheduledAt: result.data.interaction.scheduledAt,\n        completedAt: result.data.interaction.completedAt,\n        duration: result.data.interaction.duration,\n        outcome: result.data.interaction.outcome,\n        nextAction: result.data.interaction.nextAction,\n        nextActionDate: result.data.interaction.nextActionDate,\n        tags: result.data.interaction.tags,\n        customFields: result.data.interaction.customFields,\n        attachments: result.data.interaction.attachments,\n        createdAt: result.data.interaction.createdAt,\n        updatedAt: result.data.interaction.updatedAt\n      };\n\n      res.status(201).json({\n        success: true,\n        data: { interaction: response }\n      });\n    } catch (error) {\n      res.status(400).json(createErrorResponse(error));\n    }\n  }\n\n  // ========================================================================\n  // CREATE FOLLOW-UP",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\interaction.controller.ts",
        "start": 219,
        "end": 257,
        "startLoc": {
          "line": 219,
          "column": 12,
          "position": 1962
        },
        "endLoc": {
          "line": 257,
          "column": 20,
          "position": 2341
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\interaction.controller.ts",
        "start": 106,
        "end": 87,
        "startLoc": {
          "line": 106,
          "column": 12,
          "position": 880
        },
        "endLoc": {
          "line": 87,
          "column": 32,
          "position": 714
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "(req: Request, res: Response): Promise<void> {\n    try {\n      const organizationId = req.user?.organizationId;\n      const userId = req.user?.id;\n\n      if (!organizationId || !userId) {\n        res.status(401).json(createErrorResponse(new Error('Unauthorized')));\n        return;\n      }\n\n      const result = await this.createInteractionUseCase.createFollowUp",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\interaction.controller.ts",
        "start": 260,
        "end": 270,
        "startLoc": {
          "line": 260,
          "column": 15,
          "position": 2351
        },
        "endLoc": {
          "line": 270,
          "column": 15,
          "position": 2466
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\interaction.controller.ts",
        "start": 35,
        "end": 100,
        "startLoc": {
          "line": 35,
          "column": 18,
          "position": 196
        },
        "endLoc": {
          "line": 100,
          "column": 27,
          "position": 839
        }
      }
    },
    {
      "format": "typescript",
      "lines": 39,
      "fragment": ",\n        req.body.companyId\n      );\n\n      const response: InteractionResponse = {\n        id: result.data.interaction.id,\n        organizationId: result.data.interaction.organizationId,\n        contactId: result.data.interaction.contactId,\n        companyId: result.data.interaction.companyId,\n        userId: result.data.interaction.userId,\n        type: result.data.interaction.type,\n        status: result.data.interaction.status,\n        priority: result.data.interaction.priority,\n        subject: result.data.interaction.subject,\n        description: result.data.interaction.description,\n        scheduledAt: result.data.interaction.scheduledAt,\n        completedAt: result.data.interaction.completedAt,\n        duration: result.data.interaction.duration,\n        outcome: result.data.interaction.outcome,\n        nextAction: result.data.interaction.nextAction,\n        nextActionDate: result.data.interaction.nextActionDate,\n        tags: result.data.interaction.tags,\n        customFields: result.data.interaction.customFields,\n        attachments: result.data.interaction.attachments,\n        createdAt: result.data.interaction.createdAt,\n        updatedAt: result.data.interaction.updatedAt\n      };\n\n      res.status(201).json({\n        success: true,\n        data: { interaction: response }\n      });\n    } catch (error) {\n      res.status(400).json(createErrorResponse(error));\n    }\n  }\n\n  // ========================================================================\n  // UPDATE INTERACTION",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\interaction.controller.ts",
        "start": 275,
        "end": 313,
        "startLoc": {
          "line": 275,
          "column": 15,
          "position": 2499
        },
        "endLoc": {
          "line": 313,
          "column": 22,
          "position": 2878
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\interaction.controller.ts",
        "start": 106,
        "end": 87,
        "startLoc": {
          "line": 106,
          "column": 12,
          "position": 880
        },
        "endLoc": {
          "line": 87,
          "column": 32,
          "position": 714
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "(req: Request, res: Response): Promise<void> {\n    try {\n      const organizationId = req.user?.organizationId;\n      const userId = req.user?.id;\n\n      if (!organizationId || !userId) {\n        res.status(401).json(createErrorResponse(new Error('Unauthorized')));\n        return;\n      }\n\n      const request: UpdateInteractionRequest",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\interaction.controller.ts",
        "start": 316,
        "end": 326,
        "startLoc": {
          "line": 316,
          "column": 18,
          "position": 2888
        },
        "endLoc": {
          "line": 326,
          "column": 25,
          "position": 2996
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\interaction.controller.ts",
        "start": 35,
        "end": 45,
        "startLoc": {
          "line": 35,
          "column": 18,
          "position": 196
        },
        "endLoc": {
          "line": 45,
          "column": 25,
          "position": 304
        }
      }
    },
    {
      "format": "typescript",
      "lines": 27,
      "fragment": ".execute(request);\n\n      const response: InteractionResponse = {\n        id: result.data.interaction.id,\n        organizationId: result.data.interaction.organizationId,\n        contactId: result.data.interaction.contactId,\n        companyId: result.data.interaction.companyId,\n        userId: result.data.interaction.userId,\n        type: result.data.interaction.type,\n        status: result.data.interaction.status,\n        priority: result.data.interaction.priority,\n        subject: result.data.interaction.subject,\n        description: result.data.interaction.description,\n        scheduledAt: result.data.interaction.scheduledAt,\n        completedAt: result.data.interaction.completedAt,\n        duration: result.data.interaction.duration,\n        outcome: result.data.interaction.outcome,\n        nextAction: result.data.interaction.nextAction,\n        nextActionDate: result.data.interaction.nextActionDate,\n        tags: result.data.interaction.tags,\n        customFields: result.data.interaction.customFields,\n        attachments: result.data.interaction.attachments,\n        createdAt: result.data.interaction.createdAt,\n        updatedAt: result.data.interaction.updatedAt\n      };\n\n      res.status(200",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\interaction.controller.ts",
        "start": 333,
        "end": 359,
        "startLoc": {
          "line": 333,
          "column": 25,
          "position": 3046
        },
        "endLoc": {
          "line": 359,
          "column": 4,
          "position": 3348
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\interaction.controller.ts",
        "start": 51,
        "end": 77,
        "startLoc": {
          "line": 51,
          "column": 25,
          "position": 341
        },
        "endLoc": {
          "line": 77,
          "column": 4,
          "position": 643
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "interaction.updatedAt\n      };\n\n      res.status(200).json({\n        success: true,\n        data: { interaction: response }\n      });\n    } catch (error) {\n      res.status(400).json(createErrorResponse(error));\n    }\n  }\n\n  // ========================================================================\n  // GET INTERACTIONS BY ORGANIZATION",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\interaction.controller.ts",
        "start": 414,
        "end": 427,
        "startLoc": {
          "line": 414,
          "column": 2,
          "position": 3816
        },
        "endLoc": {
          "line": 427,
          "column": 36,
          "position": 3901
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\interaction.controller.ts",
        "start": 356,
        "end": 369,
        "startLoc": {
          "line": 356,
          "column": 2,
          "position": 3334
        },
        "endLoc": {
          "line": 369,
          "column": 25,
          "position": 3419
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": "{\n          id: interaction.id,\n          organizationId: interaction.organizationId,\n          contactId: interaction.contactId,\n          companyId: interaction.companyId,\n          userId: interaction.userId,\n          type: interaction.type,\n          status: interaction.status,\n          priority: interaction.priority,\n          subject: interaction.subject,\n          description: interaction.description,\n          scheduledAt: interaction.scheduledAt,\n          completedAt: interaction.completedAt,\n          duration: interaction.duration,\n          outcome: interaction.outcome,\n          nextAction: interaction.nextAction,\n          nextActionDate: interaction.nextActionDate,\n          tags: interaction.tags,\n          customFields: interaction.customFields,\n          attachments: interaction.attachments,\n          createdAt: interaction.createdAt,\n          updatedAt: interaction.updatedAt\n        })",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\interaction.controller.ts",
        "start": 465,
        "end": 487,
        "startLoc": {
          "line": 465,
          "column": 2,
          "position": 4501
        },
        "endLoc": {
          "line": 487,
          "column": 2,
          "position": 4693
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\interaction.controller.ts",
        "start": 393,
        "end": 415,
        "startLoc": {
          "line": 393,
          "column": 2,
          "position": 3630
        },
        "endLoc": {
          "line": 415,
          "column": 2,
          "position": 3822
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "(req: Request, res: Response): Promise<void> {\n    try {\n      const organizationId = req.user?.organizationId;\n\n      if (!organizationId) {\n        res.status(401).json(createErrorResponse(new Error('Unauthorized')));\n        return;\n      }\n\n      const query: InteractionSearchQuery = {\n        page: parseInt(req.query.page as string) || 1,\n        limit: parseInt(req.query.limit as string) || 20,\n        sortBy: (req.query.sortBy as any) || 'createdAt',\n        sortOrder: (req.query.sortOrder as any) || 'desc'\n      }",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\interaction.controller.ts",
        "start": 504,
        "end": 518,
        "startLoc": {
          "line": 504,
          "column": 25,
          "position": 4789
        },
        "endLoc": {
          "line": 518,
          "column": 2,
          "position": 4969
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\interaction.controller.ts",
        "start": 372,
        "end": 443,
        "startLoc": {
          "line": 372,
          "column": 19,
          "position": 3429
        },
        "endLoc": {
          "line": 443,
          "column": 2,
          "position": 4089
        }
      }
    },
    {
      "format": "typescript",
      "lines": 40,
      "fragment": ", query);\n\n      const response: InteractionListResponse = {\n        data: result.data.map(interaction => ({\n          id: interaction.id,\n          organizationId: interaction.organizationId,\n          contactId: interaction.contactId,\n          companyId: interaction.companyId,\n          userId: interaction.userId,\n          type: interaction.type,\n          status: interaction.status,\n          priority: interaction.priority,\n          subject: interaction.subject,\n          description: interaction.description,\n          scheduledAt: interaction.scheduledAt,\n          completedAt: interaction.completedAt,\n          duration: interaction.duration,\n          outcome: interaction.outcome,\n          nextAction: interaction.nextAction,\n          nextActionDate: interaction.nextActionDate,\n          tags: interaction.tags,\n          customFields: interaction.customFields,\n          attachments: interaction.attachments,\n          createdAt: interaction.createdAt,\n          updatedAt: interaction.updatedAt\n        })),\n        pagination: result.pagination\n      };\n\n      res.status(200).json({\n        success: true,\n        data: response\n      });\n    } catch (error) {\n      res.status(400).json(createErrorResponse(error));\n    }\n  }\n\n  // ========================================================================\n  // GET INTERACTIONS BY COMPANY",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\interaction.controller.ts",
        "start": 520,
        "end": 559,
        "startLoc": {
          "line": 520,
          "column": 10,
          "position": 4993
        },
        "endLoc": {
          "line": 559,
          "column": 31,
          "position": 5305
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\interaction.controller.ts",
        "start": 462,
        "end": 501,
        "startLoc": {
          "line": 462,
          "column": 15,
          "position": 4467
        },
        "endLoc": {
          "line": 501,
          "column": 31,
          "position": 4779
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "(req: Request, res: Response): Promise<void> {\n    try {\n      const organizationId = req.user?.organizationId;\n\n      if (!organizationId) {\n        res.status(401).json(createErrorResponse(new Error('Unauthorized')));\n        return;\n      }\n\n      const query: InteractionSearchQuery = {\n        page: parseInt(req.query.page as string) || 1,\n        limit: parseInt(req.query.limit as string) || 20,\n        sortBy: (req.query.sortBy as any) || 'createdAt',\n        sortOrder: (req.query.sortOrder as any) || 'desc'\n      };\n\n      const result = await this.interactionRepository.findByCompanyId",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\interaction.controller.ts",
        "start": 562,
        "end": 578,
        "startLoc": {
          "line": 562,
          "column": 25,
          "position": 5315
        },
        "endLoc": {
          "line": 578,
          "column": 16,
          "position": 5512
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\interaction.controller.ts",
        "start": 372,
        "end": 520,
        "startLoc": {
          "line": 372,
          "column": 19,
          "position": 3429
        },
        "endLoc": {
          "line": 520,
          "column": 16,
          "position": 4986
        }
      }
    },
    {
      "format": "typescript",
      "lines": 40,
      "fragment": ", query);\n\n      const response: InteractionListResponse = {\n        data: result.data.map(interaction => ({\n          id: interaction.id,\n          organizationId: interaction.organizationId,\n          contactId: interaction.contactId,\n          companyId: interaction.companyId,\n          userId: interaction.userId,\n          type: interaction.type,\n          status: interaction.status,\n          priority: interaction.priority,\n          subject: interaction.subject,\n          description: interaction.description,\n          scheduledAt: interaction.scheduledAt,\n          completedAt: interaction.completedAt,\n          duration: interaction.duration,\n          outcome: interaction.outcome,\n          nextAction: interaction.nextAction,\n          nextActionDate: interaction.nextActionDate,\n          tags: interaction.tags,\n          customFields: interaction.customFields,\n          attachments: interaction.attachments,\n          createdAt: interaction.createdAt,\n          updatedAt: interaction.updatedAt\n        })),\n        pagination: result.pagination\n      };\n\n      res.status(200).json({\n        success: true,\n        data: response\n      });\n    } catch (error) {\n      res.status(400).json(createErrorResponse(error));\n    }\n  }\n\n  // ========================================================================\n  // GET INTERACTION STATS",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\interaction.controller.ts",
        "start": 578,
        "end": 617,
        "startLoc": {
          "line": 578,
          "column": 10,
          "position": 5519
        },
        "endLoc": {
          "line": 617,
          "column": 25,
          "position": 5831
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\interaction.controller.ts",
        "start": 462,
        "end": 501,
        "startLoc": {
          "line": 462,
          "column": 15,
          "position": 4467
        },
        "endLoc": {
          "line": 501,
          "column": 31,
          "position": 4779
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "type: req.query.type as any,\n        status: req.query.status as any,\n        priority: req.query.priority as any,\n        contactId: req.query.contactId as string,\n        companyId: req.query.companyId as string,\n        userId: req.query.userId as string,\n        scheduledFrom: req.query.scheduledFrom ? new Date(req.query.scheduledFrom as string) : undefined,\n        scheduledTo: req.query.scheduledTo ? new Date(req.query.scheduledTo as string) : undefined,\n        completedFrom: req.query.completedFrom ? new Date(req.query.completedFrom as string) : undefined,\n        completedTo: req.query.completedTo ? new Date(req.query.completedTo as string) : undefined,\n        tags: req.query.tags as string,\n        hasOutcome: req.query.hasOutcome ? req.query.hasOutcome === 'true' : undefined,\n        hasNextAction: req.query.hasNextAction ? req.query.hasNextAction === 'true' : undefined,\n        overdue: req.query.overdue ? req.query.overdue === 'true' : undefined,\n        upcoming: req.query.upcoming ? req.query.upcoming === 'true' : undefined\n      };\n\n      const stats",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\interaction.controller.ts",
        "start": 630,
        "end": 647,
        "startLoc": {
          "line": 630,
          "column": 9,
          "position": 5936
        },
        "endLoc": {
          "line": 647,
          "column": 6,
          "position": 6283
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\interaction.controller.ts",
        "start": 445,
        "end": 462,
        "startLoc": {
          "line": 445,
          "column": 9,
          "position": 4107
        },
        "endLoc": {
          "line": 462,
          "column": 7,
          "position": 4454
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": ".map(interaction => ({\n          id: interaction.id,\n          organizationId: interaction.organizationId,\n          contactId: interaction.contactId,\n          companyId: interaction.companyId,\n          userId: interaction.userId,\n          type: interaction.type,\n          status: interaction.status,\n          priority: interaction.priority,\n          subject: interaction.subject,\n          description: interaction.description,\n          scheduledAt: interaction.scheduledAt,\n          completedAt: interaction.completedAt,\n          duration: interaction.duration,\n          outcome: interaction.outcome,\n          nextAction: interaction.nextAction,\n          nextActionDate: interaction.nextActionDate,\n          tags: interaction.tags,\n          customFields: interaction.customFields,\n          attachments: interaction.attachments,\n          createdAt: interaction.createdAt,\n          updatedAt: interaction.updatedAt\n        })),\n        upcomingInteractions",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\interaction.controller.ts",
        "start": 692,
        "end": 715,
        "startLoc": {
          "line": 692,
          "column": 19,
          "position": 6670
        },
        "endLoc": {
          "line": 715,
          "column": 21,
          "position": 6875
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\interaction.controller.ts",
        "start": 465,
        "end": 488,
        "startLoc": {
          "line": 465,
          "column": 5,
          "position": 4493
        },
        "endLoc": {
          "line": 488,
          "column": 11,
          "position": 4698
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": ".map(interaction => ({\n          id: interaction.id,\n          organizationId: interaction.organizationId,\n          contactId: interaction.contactId,\n          companyId: interaction.companyId,\n          userId: interaction.userId,\n          type: interaction.type,\n          status: interaction.status,\n          priority: interaction.priority,\n          subject: interaction.subject,\n          description: interaction.description,\n          scheduledAt: interaction.scheduledAt,\n          completedAt: interaction.completedAt,\n          duration: interaction.duration,\n          outcome: interaction.outcome,\n          nextAction: interaction.nextAction,\n          nextActionDate: interaction.nextActionDate,\n          tags: interaction.tags,\n          customFields: interaction.customFields,\n          attachments: interaction.attachments,\n          createdAt: interaction.createdAt,\n          updatedAt: interaction.updatedAt\n        })),\n        overdueInteractions",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\interaction.controller.ts",
        "start": 715,
        "end": 738,
        "startLoc": {
          "line": 715,
          "column": 21,
          "position": 6881
        },
        "endLoc": {
          "line": 738,
          "column": 20,
          "position": 7086
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\interaction.controller.ts",
        "start": 465,
        "end": 488,
        "startLoc": {
          "line": 465,
          "column": 5,
          "position": 4493
        },
        "endLoc": {
          "line": 488,
          "column": 11,
          "position": 4698
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": ".map(interaction => ({\n          id: interaction.id,\n          organizationId: interaction.organizationId,\n          contactId: interaction.contactId,\n          companyId: interaction.companyId,\n          userId: interaction.userId,\n          type: interaction.type,\n          status: interaction.status,\n          priority: interaction.priority,\n          subject: interaction.subject,\n          description: interaction.description,\n          scheduledAt: interaction.scheduledAt,\n          completedAt: interaction.completedAt,\n          duration: interaction.duration,\n          outcome: interaction.outcome,\n          nextAction: interaction.nextAction,\n          nextActionDate: interaction.nextActionDate,\n          tags: interaction.tags,\n          customFields: interaction.customFields,\n          attachments: interaction.attachments,\n          createdAt: interaction.createdAt,\n          updatedAt: interaction.updatedAt\n        }))\n      }",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\interaction.controller.ts",
        "start": 738,
        "end": 761,
        "startLoc": {
          "line": 738,
          "column": 20,
          "position": 7092
        },
        "endLoc": {
          "line": 761,
          "column": 2,
          "position": 7296
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\interaction.controller.ts",
        "start": 465,
        "end": 487,
        "startLoc": {
          "line": 465,
          "column": 5,
          "position": 4493
        },
        "endLoc": {
          "line": 487,
          "column": 2,
          "position": 4695
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "(req: Request, res: Response): Promise<void> {\n    try {\n      const organizationId = req.user?.organizationId;\n\n      if (!organizationId) {\n        res.status(401).json(createErrorResponse(new Error('Unauthorized')));\n        return;\n      }\n\n      const interaction = await this.interactionRepository.findById(req.params.id);\n\n      if (!interaction) {\n        res.status(404).json(createErrorResponse(new Error('Interaction not found')));\n        return;\n      }\n\n      if (interaction.organizationId !== organizationId) {\n        res.status(403).json(createErrorResponse(new Error('Forbidden')));\n        return;\n      }\n\n      await",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\interaction.controller.ts",
        "start": 776,
        "end": 797,
        "startLoc": {
          "line": 776,
          "column": 18,
          "position": 7386
        },
        "endLoc": {
          "line": 797,
          "column": 6,
          "position": 7578
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\interaction.controller.ts",
        "start": 372,
        "end": 393,
        "startLoc": {
          "line": 372,
          "column": 19,
          "position": 3429
        },
        "endLoc": {
          "line": 393,
          "column": 6,
          "position": 3621
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "(req.body);\n      const createdBy = req.user?.id || req.headers['x-user-id'] as string;\n\n      if (!createdBy) {\n        res.status(401).json({\n          success: false,\n          error: 'User ID is required',\n          timestamp: new Date()\n        } as ApiResponse);\n        return;\n      }\n\n      const result = await this.createCompanyUseCase",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\company.controller.ts",
        "start": 48,
        "end": 60,
        "startLoc": {
          "line": 48,
          "column": 29,
          "position": 288
        },
        "endLoc": {
          "line": 60,
          "column": 21,
          "position": 398
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\user.controller.ts",
        "start": 40,
        "end": 52,
        "startLoc": {
          "line": 40,
          "column": 26,
          "position": 211
        },
        "endLoc": {
          "line": 52,
          "column": 23,
          "position": 321
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "({\n        ...requestData,\n        createdBy\n      });\n\n      if (!result.success) {\n        res.status(400).json({\n          success: false,\n          error: result.error,\n          timestamp: new Date()\n        } as ApiResponse);\n        return;\n      }\n\n      const response: ApiResponse<CompanyResponse",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\company.controller.ts",
        "start": 60,
        "end": 74,
        "startLoc": {
          "line": 60,
          "column": 8,
          "position": 401
        },
        "endLoc": {
          "line": 74,
          "column": 16,
          "position": 493
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\user.controller.ts",
        "start": 52,
        "end": 66,
        "startLoc": {
          "line": 52,
          "column": 11,
          "position": 324
        },
        "endLoc": {
          "line": 66,
          "column": 13,
          "position": 416
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "(req.body);\n      const updatedBy = req.user?.id || req.headers['x-user-id'] as string;\n\n      if (!updatedBy) {\n        res.status(401).json({\n          success: false,\n          error: 'User ID is required',\n          timestamp: new Date()\n        } as ApiResponse);\n        return;\n      }\n\n      const result = await this.updateCompanyUseCase",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\company.controller.ts",
        "start": 91,
        "end": 103,
        "startLoc": {
          "line": 91,
          "column": 29,
          "position": 655
        },
        "endLoc": {
          "line": 103,
          "column": 21,
          "position": 765
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\user.controller.ts",
        "start": 83,
        "end": 95,
        "startLoc": {
          "line": 83,
          "column": 26,
          "position": 578
        },
        "endLoc": {
          "line": 95,
          "column": 23,
          "position": 688
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ",\n        ...requestData,\n        updatedBy\n      });\n\n      if (!result.success) {\n        res.status(400).json({\n          success: false,\n          error: result.error,\n          timestamp: new Date()\n        } as ApiResponse);\n        return;\n      }\n\n      const response: ApiResponse<CompanyResponse> = {\n        success: true,\n        data: transformCompanyToResponse(result.company!),\n        message: 'Company updated successfully'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\company.controller.ts",
        "start": 104,
        "end": 121,
        "startLoc": {
          "line": 104,
          "column": 10,
          "position": 773
        },
        "endLoc": {
          "line": 121,
          "column": 31,
          "position": 895
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\user.controller.ts",
        "start": 96,
        "end": 77,
        "startLoc": {
          "line": 96,
          "column": 7,
          "position": 696
        },
        "endLoc": {
          "line": 77,
          "column": 31,
          "position": 524
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "const company = await this.companyRepository.findById(requestData.companyId);\n\n      if (!company) {\n        res.status(404).json({\n          success: false,\n          error: 'Company not found',\n          timestamp: new Date()\n        } as ApiResponse);\n        return;\n      }\n\n      const",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\company.controller.ts",
        "start": 169,
        "end": 180,
        "startLoc": {
          "line": 169,
          "column": 7,
          "position": 1299
        },
        "endLoc": {
          "line": 180,
          "column": 6,
          "position": 1384
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\company.controller.ts",
        "start": 137,
        "end": 147,
        "startLoc": {
          "line": 137,
          "column": 7,
          "position": 1033
        },
        "endLoc": {
          "line": 147,
          "column": 6,
          "position": 1117
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ");\n\n      const response: ApiResponse<CompanyResponse[]> = {\n        success: true,\n        data: companies.map(transformCompanyToResponse),\n        timestamp: new Date(),\n        requestId: req.headers['x-request-id'] as string\n      };\n\n      res.status(200).json(response);\n    } catch (error) {\n      next(error);\n    }\n  }\n\n  async getCompaniesByStatus",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\company.controller.ts",
        "start": 299,
        "end": 314,
        "startLoc": {
          "line": 299,
          "column": 5,
          "position": 2420
        },
        "endLoc": {
          "line": 314,
          "column": 21,
          "position": 2533
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\company.controller.ts",
        "start": 196,
        "end": 211,
        "startLoc": {
          "line": 196,
          "column": 15,
          "position": 1551
        },
        "endLoc": {
          "line": 211,
          "column": 16,
          "position": 1664
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ");\n\n      const response: ApiResponse<CompanyResponse[]> = {\n        success: true,\n        data: companies.map(transformCompanyToResponse),\n        timestamp: new Date(),\n        requestId: req.headers['x-request-id'] as string\n      };\n\n      res.status(200).json(response);\n    } catch (error) {\n      next(error);\n    }\n  }\n\n  async getCompaniesByIndustry",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\company.controller.ts",
        "start": 318,
        "end": 333,
        "startLoc": {
          "line": 318,
          "column": 7,
          "position": 2613
        },
        "endLoc": {
          "line": 333,
          "column": 23,
          "position": 2726
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\company.controller.ts",
        "start": 196,
        "end": 211,
        "startLoc": {
          "line": 196,
          "column": 15,
          "position": 1551
        },
        "endLoc": {
          "line": 211,
          "column": 16,
          "position": 1664
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ");\n\n      const response: ApiResponse<CompanyResponse[]> = {\n        success: true,\n        data: companies.map(transformCompanyToResponse),\n        timestamp: new Date(),\n        requestId: req.headers['x-request-id'] as string\n      };\n\n      res.status(200).json(response);\n    } catch (error) {\n      next(error);\n    }\n  }\n\n  async getCompaniesByAssignedUser",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\company.controller.ts",
        "start": 337,
        "end": 352,
        "startLoc": {
          "line": 337,
          "column": 9,
          "position": 2806
        },
        "endLoc": {
          "line": 352,
          "column": 27,
          "position": 2919
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\company.controller.ts",
        "start": 196,
        "end": 211,
        "startLoc": {
          "line": 196,
          "column": 15,
          "position": 1551
        },
        "endLoc": {
          "line": 211,
          "column": 16,
          "position": 1664
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ");\n\n      const response: ApiResponse<CompanyResponse[]> = {\n        success: true,\n        data: companies.map(transformCompanyToResponse),\n        timestamp: new Date(),\n        requestId: req.headers['x-request-id'] as string\n      };\n\n      res.status(200).json(response);\n    } catch (error) {\n      next(error);\n    }\n  }\n\n  // ========================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\company.controller.ts",
        "start": 356,
        "end": 371,
        "startLoc": {
          "line": 356,
          "column": 7,
          "position": 2999
        },
        "endLoc": {
          "line": 371,
          "column": 76,
          "position": 3110
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\company.controller.ts",
        "start": 196,
        "end": 211,
        "startLoc": {
          "line": 196,
          "column": 15,
          "position": 1551
        },
        "endLoc": {
          "line": 211,
          "column": 6,
          "position": 1662
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "(organizationId);\n\n      const response: ApiResponse<CompanyResponse[]> = {\n        success: true,\n        data: companies.map(transformCompanyToResponse),\n        timestamp: new Date(),\n        requestId: req.headers['x-request-id'] as string\n      };\n\n      res.status(200).json(response);\n    } catch (error) {\n      next(error);\n    }\n  }\n\n  async getScheduledForFollowUp",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\company.controller.ts",
        "start": 378,
        "end": 393,
        "startLoc": {
          "line": 378,
          "column": 23,
          "position": 3183
        },
        "endLoc": {
          "line": 393,
          "column": 24,
          "position": 3298
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\company.controller.ts",
        "start": 196,
        "end": 211,
        "startLoc": {
          "line": 196,
          "column": 21,
          "position": 1549
        },
        "endLoc": {
          "line": 211,
          "column": 16,
          "position": 1664
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ");\n\n      const response: ApiResponse<CompanyResponse[]> = {\n        success: true,\n        data: companies.map(transformCompanyToResponse),\n        timestamp: new Date(),\n        requestId: req.headers['x-request-id'] as string\n      };\n\n      res.status(200).json(response);\n    } catch (error) {\n      next(error);\n    }\n  }\n\n  // ========================================================================\n  // LEAD SCORING QUERIES",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\company.controller.ts",
        "start": 397,
        "end": 413,
        "startLoc": {
          "line": 397,
          "column": 5,
          "position": 3383
        },
        "endLoc": {
          "line": 413,
          "column": 24,
          "position": 3497
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\company.controller.ts",
        "start": 196,
        "end": 372,
        "startLoc": {
          "line": 196,
          "column": 15,
          "position": 1551
        },
        "endLoc": {
          "line": 372,
          "column": 21,
          "position": 3113
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ");\n\n      const response: ApiResponse<CompanyResponse[]> = {\n        success: true,\n        data: companies.map(transformCompanyToResponse),\n        timestamp: new Date(),\n        requestId: req.headers['x-request-id'] as string\n      };\n\n      res.status(200).json(response);\n    } catch (error) {\n      next(error);\n    }\n  }\n\n  async getMediumScoreLeads",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\company.controller.ts",
        "start": 420,
        "end": 435,
        "startLoc": {
          "line": 420,
          "column": 9,
          "position": 3597
        },
        "endLoc": {
          "line": 435,
          "column": 20,
          "position": 3710
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\company.controller.ts",
        "start": 196,
        "end": 211,
        "startLoc": {
          "line": 196,
          "column": 15,
          "position": 1551
        },
        "endLoc": {
          "line": 211,
          "column": 16,
          "position": 1664
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "(organizationId);\n\n      const response: ApiResponse<CompanyResponse[]> = {\n        success: true,\n        data: companies.map(transformCompanyToResponse),\n        timestamp: new Date(),\n        requestId: req.headers['x-request-id'] as string\n      };\n\n      res.status(200).json(response);\n    } catch (error) {\n      next(error);\n    }\n  }\n\n  async getLowScoreLeads",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\company.controller.ts",
        "start": 438,
        "end": 453,
        "startLoc": {
          "line": 438,
          "column": 21,
          "position": 3771
        },
        "endLoc": {
          "line": 453,
          "column": 17,
          "position": 3886
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\company.controller.ts",
        "start": 196,
        "end": 211,
        "startLoc": {
          "line": 196,
          "column": 21,
          "position": 1549
        },
        "endLoc": {
          "line": 211,
          "column": 16,
          "position": 1664
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "(organizationId);\n\n      const response: ApiResponse<CompanyResponse[]> = {\n        success: true,\n        data: companies.map(transformCompanyToResponse),\n        timestamp: new Date(),\n        requestId: req.headers['x-request-id'] as string\n      };\n\n      res.status(200).json(response);\n    } catch (error) {\n      next(error);\n    }\n  }\n\n  // ========================================================================\n  // BULK OPERATIONS",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\company.controller.ts",
        "start": 456,
        "end": 472,
        "startLoc": {
          "line": 456,
          "column": 18,
          "position": 3947
        },
        "endLoc": {
          "line": 472,
          "column": 19,
          "position": 4063
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\company.controller.ts",
        "start": 196,
        "end": 372,
        "startLoc": {
          "line": 196,
          "column": 21,
          "position": 1549
        },
        "endLoc": {
          "line": 372,
          "column": 21,
          "position": 3113
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "),\n        timestamp: new Date(),\n        requestId: req.headers['x-request-id'] as string\n      };\n\n      res.status(200).json(response);\n    } catch (error) {\n      next(error);\n    }\n  }\n\n  // ========================================================================\n  // BULK OPERATIONS\n  // ========================================================================\n\n  async bulkUpdateCompanies",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\company.controller.ts",
        "start": 460,
        "end": 475,
        "startLoc": {
          "line": 460,
          "column": 27,
          "position": 3986
        },
        "endLoc": {
          "line": 475,
          "column": 20,
          "position": 4072
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\user.controller.ts",
        "start": 284,
        "end": 299,
        "startLoc": {
          "line": 284,
          "column": 6,
          "position": 2274
        },
        "endLoc": {
          "line": 299,
          "column": 16,
          "position": 2360
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "(req.body);\n      const updatedBy = req.user?.id || req.headers['x-user-id'] as string;\n\n      if (!updatedBy) {\n        res.status(401).json({\n          success: false,\n          error: 'User ID is required',\n          timestamp: new Date()\n        } as ApiResponse);\n        return;\n      }\n\n      const results",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\company.controller.ts",
        "start": 477,
        "end": 489,
        "startLoc": {
          "line": 477,
          "column": 35,
          "position": 4113
        },
        "endLoc": {
          "line": 489,
          "column": 8,
          "position": 4215
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\user.controller.ts",
        "start": 83,
        "end": 95,
        "startLoc": {
          "line": 83,
          "column": 26,
          "position": 578
        },
        "endLoc": {
          "line": 95,
          "column": 7,
          "position": 680
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "} catch (error) {\n          errorCount++;\n          results.push({ \n            companyId, \n            success: false, \n            error: error instanceof Error ? error.message : 'Unknown error' \n          });\n        }\n      }\n\n      const response: ApiResponse = {\n        success: errorCount === 0,\n        data: {\n          total: requestData.companyIds.length,\n          successful: successCount,\n          failed: errorCount,\n          results\n        },\n        message: `Bulk delete completed: ",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\company.controller.ts",
        "start": 557,
        "end": 575,
        "startLoc": {
          "line": 557,
          "column": 9,
          "position": 4815
        },
        "endLoc": {
          "line": 575,
          "column": 25,
          "position": 4949
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\company.controller.ts",
        "start": 508,
        "end": 526,
        "startLoc": {
          "line": 508,
          "column": 9,
          "position": 4389
        },
        "endLoc": {
          "line": 526,
          "column": 25,
          "position": 4523
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "${successCount} successful, ${errorCount} failed`,\n        timestamp: new Date(),\n        requestId: req.headers['x-request-id'] as string\n      };\n\n      res.status(200).json(response);\n    } catch (error) {\n      next(error);\n    }\n  }\n\n  // ========================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\company.controller.ts",
        "start": 575,
        "end": 586,
        "startLoc": {
          "line": 575,
          "column": 25,
          "position": 4950
        },
        "endLoc": {
          "line": 586,
          "column": 76,
          "position": 5031
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\company.controller.ts",
        "start": 526,
        "end": 537,
        "startLoc": {
          "line": 526,
          "column": 25,
          "position": 4524
        },
        "endLoc": {
          "line": 537,
          "column": 6,
          "position": 4605
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", error as Error, {\n        userId: req.user?.id,\n        organizationId: req.user?.organizationId\n      });\n\n      const errorResponse = ErrorHandler.handle(error as Error);\n      res.status(errorResponse.statusCode).json({\n        success: false,\n        error: errorResponse.message,\n        code: errorResponse.code\n      });\n    }\n  }\n\n  // ============================================================================\n  // GET /api/ai/sessions/:sessionId/history - Get Session History",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\basic-ai.controller.ts",
        "start": 193,
        "end": 208,
        "startLoc": {
          "line": 193,
          "column": 30,
          "position": 1409
        },
        "endLoc": {
          "line": 208,
          "column": 65,
          "position": 1522
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\basic-ai.controller.ts",
        "start": 125,
        "end": 140,
        "startLoc": {
          "line": 125,
          "column": 33,
          "position": 934
        },
        "endLoc": {
          "line": 140,
          "column": 46,
          "position": 1047
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "(req: AuthenticatedRequest, res: Response): Promise<void> {\n    try {\n      const { sessionId } = req.params;\n      const user = req.user;\n\n      if (!user) {\n        res.status(401).json({\n          success: false,\n          error: 'Authentication required'\n        });\n        return;\n      }\n\n      if (!sessionId) {\n        res.status(400).json({\n          success: false,\n          error: 'Session ID is required'\n        });\n        return;\n      }\n\n      // Limpiar sesión",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\basic-ai.controller.ts",
        "start": 263,
        "end": 284,
        "startLoc": {
          "line": 263,
          "column": 13,
          "position": 1890
        },
        "endLoc": {
          "line": 284,
          "column": 18,
          "position": 2042
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\basic-ai.controller.ts",
        "start": 211,
        "end": 232,
        "startLoc": {
          "line": 211,
          "column": 18,
          "position": 1533
        },
        "endLoc": {
          "line": 232,
          "column": 34,
          "position": 1685
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", error as Error, {\n        userId: req.user?.id,\n        sessionId: req.params.sessionId\n      });\n\n      const errorResponse = ErrorHandler.handle(error as Error);\n      res.status(errorResponse.statusCode).json({\n        success: false,\n        error: errorResponse.message,\n        code: errorResponse.code\n      });\n    }\n  }\n\n  // ============================================================================\n  // GET /api/ai/health - Health Check",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\basic-ai.controller.ts",
        "start": 299,
        "end": 314,
        "startLoc": {
          "line": 299,
          "column": 29,
          "position": 2136
        },
        "endLoc": {
          "line": 314,
          "column": 37,
          "position": 2248
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\basic-ai.controller.ts",
        "start": 245,
        "end": 260,
        "startLoc": {
          "line": 245,
          "column": 32,
          "position": 1767
        },
        "endLoc": {
          "line": 260,
          "column": 54,
          "position": 1879
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "organizationId, query);\n      \n      const response: ArchitectureListResponse = {\n        data: result.data.map(architecture => this.transformArchitectureToResponse(architecture)),\n        pagination: result.pagination\n      };\n\n      this.sendSuccessResponse(res, response);\n    }, res, next);\n  }\n\n  async getArchitectureStats",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\architecture.controller.ts",
        "start": 145,
        "end": 156,
        "startLoc": {
          "line": 145,
          "column": 2,
          "position": 1379
        },
        "endLoc": {
          "line": 156,
          "column": 21,
          "position": 1466
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\architecture.controller.ts",
        "start": 129,
        "end": 140,
        "startLoc": {
          "line": 129,
          "column": 2,
          "position": 1185
        },
        "endLoc": {
          "line": 140,
          "column": 20,
          "position": 1272
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", organizationId, query);\n      \n      const response: ArchitectureListResponse = {\n        data: result.data.map(architecture => this.transformArchitectureToResponse(architecture)),\n        pagination: result.pagination\n      };\n\n      this.sendSuccessResponse(res, response);\n    }, res, next);\n  }\n\n  async getArchitecturesByStatus",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\architecture.controller.ts",
        "start": 177,
        "end": 188,
        "startLoc": {
          "line": 177,
          "column": 5,
          "position": 1725
        },
        "endLoc": {
          "line": 188,
          "column": 25,
          "position": 1814
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\architecture.controller.ts",
        "start": 145,
        "end": 140,
        "startLoc": {
          "line": 145,
          "column": 3,
          "position": 1377
        },
        "endLoc": {
          "line": 140,
          "column": 20,
          "position": 1272
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", organizationId, query);\n      \n      const response: ArchitectureListResponse = {\n        data: result.data.map(architecture => this.transformArchitectureToResponse(architecture)),\n        pagination: result.pagination\n      };\n\n      this.sendSuccessResponse(res, response);\n    }, res, next);\n  }\n\n  async getActiveArchitectures",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\architecture.controller.ts",
        "start": 194,
        "end": 205,
        "startLoc": {
          "line": 194,
          "column": 7,
          "position": 1929
        },
        "endLoc": {
          "line": 205,
          "column": 23,
          "position": 2018
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\architecture.controller.ts",
        "start": 145,
        "end": 140,
        "startLoc": {
          "line": 145,
          "column": 3,
          "position": 1377
        },
        "endLoc": {
          "line": 140,
          "column": 20,
          "position": 1272
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "(organizationId, query);\n      \n      const response: ArchitectureListResponse = {\n        data: result.data.map(architecture => this.transformArchitectureToResponse(architecture)),\n        pagination: result.pagination\n      };\n\n      this.sendSuccessResponse(res, response);\n    }, res, next);\n  }\n\n  async getArchitecturesWithMetrics",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\architecture.controller.ts",
        "start": 210,
        "end": 221,
        "startLoc": {
          "line": 210,
          "column": 24,
          "position": 2115
        },
        "endLoc": {
          "line": 221,
          "column": 28,
          "position": 2203
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\architecture.controller.ts",
        "start": 129,
        "end": 140,
        "startLoc": {
          "line": 129,
          "column": 21,
          "position": 1184
        },
        "endLoc": {
          "line": 140,
          "column": 20,
          "position": 1272
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "(organizationId, query);\n      \n      const response: ArchitectureListResponse = {\n        data: result.data.map(architecture => this.transformArchitectureToResponse(architecture)),\n        pagination: result.pagination\n      };\n\n      this.sendSuccessResponse(res, response);\n    }, res, next);\n  }\n\n  // ========================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\architecture.controller.ts",
        "start": 226,
        "end": 237,
        "startLoc": {
          "line": 226,
          "column": 16,
          "position": 2300
        },
        "endLoc": {
          "line": 237,
          "column": 76,
          "position": 2386
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\architecture.controller.ts",
        "start": 129,
        "end": 140,
        "startLoc": {
          "line": 129,
          "column": 21,
          "position": 1184
        },
        "endLoc": {
          "line": 140,
          "column": 6,
          "position": 1270
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ".components.map((component: any) => ({\n        id: component.id,\n        name: component.name,\n        type: component.type.value,\n        layer: component.layer.value,\n        description: component.description,\n        dependencies: component.dependencies,\n        interfaces: component.interfaces,\n        implementation: component.implementation,\n        tests: component.tests,\n        documentation: component.documentation,\n        createdAt: component.createdAt,\n        updatedAt: component.updatedAt\n      })),\n      layers",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\architecture.controller.ts",
        "start": 356,
        "end": 370,
        "startLoc": {
          "line": 356,
          "column": 13,
          "position": 3541
        },
        "endLoc": {
          "line": 370,
          "column": 7,
          "position": 3676
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\architecture.controller.ts",
        "start": 311,
        "end": 325,
        "startLoc": {
          "line": 311,
          "column": 6,
          "position": 3088
        },
        "endLoc": {
          "line": 325,
          "column": 13,
          "position": 3223
        }
      }
    },
    {
      "format": "typescript",
      "lines": 26,
      "fragment": ".layers.map((layer: any) => ({\n        id: layer.id,\n        name: layer.name,\n        type: layer.type.value,\n        description: layer.description,\n        components: layer.components.map((component: any) => ({\n          id: component.id,\n          name: component.name,\n          type: component.type.value,\n          layer: component.layer.value,\n          description: component.description,\n          dependencies: component.dependencies,\n          interfaces: component.interfaces,\n          implementation: component.implementation,\n          tests: component.tests,\n          documentation: component.documentation,\n          createdAt: component.createdAt,\n          updatedAt: component.updatedAt\n        })),\n        dependencies: layer.dependencies,\n        responsibilities: layer.responsibilities,\n        patterns: layer.patterns,\n        createdAt: layer.createdAt,\n        updatedAt: layer.updatedAt\n      })),\n      lastAnalysisDate",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\architecture.controller.ts",
        "start": 370,
        "end": 395,
        "startLoc": {
          "line": 370,
          "column": 13,
          "position": 3680
        },
        "endLoc": {
          "line": 395,
          "column": 17,
          "position": 3925
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\architecture.controller.ts",
        "start": 306,
        "end": 331,
        "startLoc": {
          "line": 306,
          "column": 9,
          "position": 3028
        },
        "endLoc": {
          "line": 331,
          "column": 9,
          "position": 3273
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "{\n    return {\n      total: stats.total,\n      active: stats.active,\n      inactive: stats.inactive,\n      createdThisMonth: stats.createdThisMonth,\n      createdThisYear: stats.createdThisYear,\n      updatedThisMonth: stats.updatedThisMonth,\n      updatedThisYear: stats.updatedThisYear,\n      byType: stats.byType,\n      byStatus: stats.byStatus,\n      byLayerType",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\architecture.controller.ts",
        "start": 402,
        "end": 413,
        "startLoc": {
          "line": 402,
          "column": 2,
          "position": 3981
        },
        "endLoc": {
          "line": 413,
          "column": 12,
          "position": 4070
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\predictive-analytics.controller.ts",
        "start": 358,
        "end": 369,
        "startLoc": {
          "line": 358,
          "column": 2,
          "position": 3589
        },
        "endLoc": {
          "line": 369,
          "column": 12,
          "position": 3678
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ";\n      const correlationId = generateCorrelationId();\n\n      // Obtener conector del agente\n      const connector = this.agentConnectors.get(id);\n      if (!connector) {\n        res.status(404).json({\n          success: false,\n          error: 'Agent not found',\n          agentId: id,\n          correlationId\n        });\n        return;\n      }\n\n      // Obtener estadísticas",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\agents.controller.ts",
        "start": 253,
        "end": 268,
        "startLoc": {
          "line": 253,
          "column": 6,
          "position": 1869
        },
        "endLoc": {
          "line": 268,
          "column": 24,
          "position": 1964
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\agents.controller.ts",
        "start": 202,
        "end": 217,
        "startLoc": {
          "line": 202,
          "column": 7,
          "position": 1498
        },
        "endLoc": {
          "line": 217,
          "column": 32,
          "position": 1593
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ".safeParse(req.body);\n      if (!bodyValidation.success) {\n        res.status(400).json({\n          success: false,\n          error: 'Invalid request body',\n          details: bodyValidation.error.errors,\n          correlationId\n        });\n        return;\n      }\n\n      const { resetCircuitBreaker",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\agents.controller.ts",
        "start": 302,
        "end": 313,
        "startLoc": {
          "line": 302,
          "column": 24,
          "position": 2218
        },
        "endLoc": {
          "line": 313,
          "column": 20,
          "position": 2297
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\agents.controller.ts",
        "start": 70,
        "end": 81,
        "startLoc": {
          "line": 70,
          "column": 26,
          "position": 491
        },
        "endLoc": {
          "line": 81,
          "column": 7,
          "position": 570
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "} = bodyValidation.data;\n\n      // Obtener conector del agente\n      const connector = this.agentConnectors.get(id);\n      if (!connector) {\n        res.status(404).json({\n          success: false,\n          error: 'Agent not found',\n          agentId: id,\n          correlationId\n        });\n        return;\n      }\n\n      // Verificar permisos de administrador",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\agents.controller.ts",
        "start": 313,
        "end": 327,
        "startLoc": {
          "line": 313,
          "column": 2,
          "position": 2302
        },
        "endLoc": {
          "line": 327,
          "column": 39,
          "position": 2392
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\agents.controller.ts",
        "start": 81,
        "end": 95,
        "startLoc": {
          "line": 81,
          "column": 2,
          "position": 578
        },
        "endLoc": {
          "line": 95,
          "column": 31,
          "position": 668
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "= async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const { id } = req.params;\n      const correlationId = generateCorrelationId();\n\n      // Obtener conector del agente\n      const connector = this.agentConnectors.get(id);\n      if (!connector) {\n        res.status(404).json({\n          success: false,\n          error: 'Agent not found',\n          agentId: id,\n          correlationId\n        });\n        return;\n      }\n\n      // Respuesta",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\agents.controller.ts",
        "start": 429,
        "end": 446,
        "startLoc": {
          "line": 429,
          "column": 2,
          "position": 3163
        },
        "endLoc": {
          "line": 446,
          "column": 13,
          "position": 3310
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\agents.controller.ts",
        "start": 200,
        "end": 217,
        "startLoc": {
          "line": 200,
          "column": 2,
          "position": 1446
        },
        "endLoc": {
          "line": 217,
          "column": 32,
          "position": 1593
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ".safeParse(req.body);\n      if (!bodyValidation.success) {\n        res.status(400).json({\n          success: false,\n          error: 'Invalid request body',\n          details: bodyValidation.error.errors,\n          correlationId\n        });\n        return;\n      }\n\n      const { keyPattern",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\agents.controller.ts",
        "start": 529,
        "end": 540,
        "startLoc": {
          "line": 529,
          "column": 25,
          "position": 3957
        },
        "endLoc": {
          "line": 540,
          "column": 11,
          "position": 4036
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\controllers\\agents.controller.ts",
        "start": 70,
        "end": 81,
        "startLoc": {
          "line": 70,
          "column": 26,
          "position": 491
        },
        "endLoc": {
          "line": 81,
          "column": 7,
          "position": 570
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ");\n      \n      span.setStatus({ code: SpanStatusCode.OK });\n      return result;\n    } catch (error) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: error instanceof Error ? error.message : 'Unknown error'\n      });\n      span.recordException(error as Error);\n      throw error;\n    } finally {\n      span.end();\n    }\n  }\n\n  // ========================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\infrastructure\\observability\\tracing.service.ts",
        "start": 174,
        "end": 190,
        "startLoc": {
          "line": 174,
          "column": 2,
          "position": 1455
        },
        "endLoc": {
          "line": 190,
          "column": 76,
          "position": 1578
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\infrastructure\\observability\\tracing.service.ts",
        "start": 145,
        "end": 160,
        "startLoc": {
          "line": 145,
          "column": 10,
          "position": 1173
        },
        "endLoc": {
          "line": 160,
          "column": 6,
          "position": 1294
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": ",\n      'MG': 'Indian/Antananarivo',\n      'MU': 'Indian/Mauritius',\n      'SC': 'Indian/Mahe',\n      'RE': 'Indian/Reunion',\n      'YT': 'Indian/Mayotte',\n      'KM': 'Indian/Comoro',\n      'DJ': 'Africa/Djibouti',\n      'SO': 'Africa/Mogadishu',\n      'SD': 'Africa/Khartoum',\n      'SS': 'Africa/Juba',\n      'CF': 'Africa/Bangui',\n      'TD': 'Africa/Ndjamena',\n      'NE': 'Africa/Niamey',\n      'BF': 'Africa/Ouagadougou',\n      'ML': 'Africa/Bamako',\n      'SN': 'Africa/Dakar',\n      'GM': 'Africa/Banjul',\n      'GN': 'Africa/Conakry',\n      'SL': 'Africa/Freetown',\n      'LR': 'Africa/Monrovia',\n      'CI': 'Africa/Abidjan',\n      'TG'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\domain\\value-objects\\address.vo.ts",
        "start": 279,
        "end": 301,
        "startLoc": {
          "line": 279,
          "column": 17,
          "position": 2066
        },
        "endLoc": {
          "line": 301,
          "column": 5,
          "position": 2216
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\value-objects\\address.vo.ts",
        "start": 241,
        "end": 263,
        "startLoc": {
          "line": 241,
          "column": 16,
          "position": 1800
        },
        "endLoc": {
          "line": 263,
          "column": 5,
          "position": 1950
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "{\n  type?: string;\n  status?: string;\n  modelType?: string;\n  accuracy?: string;\n  isActive?: boolean;\n  needsRetraining?: boolean;\n  hasPredictions?: boolean;\n  minAccuracy?: number;\n  maxAccuracy?: number;\n  lastPredictionFrom?: Date;\n  lastPredictionTo?: Date;\n  nextRetrainFrom?: Date;\n  nextRetrainTo?: Date;\n}\n\nexport interface PredictiveAnalyticsStats",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\domain\\repositories\\predictive-analytics.repository.ts",
        "start": 24,
        "end": 40,
        "startLoc": {
          "line": 24,
          "column": 2,
          "position": 178
        },
        "endLoc": {
          "line": 40,
          "column": 25,
          "position": 291
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\repositories\\predictive-analytics.repository.ts",
        "start": 8,
        "end": 24,
        "startLoc": {
          "line": 8,
          "column": 2,
          "position": 59
        },
        "endLoc": {
          "line": 24,
          "column": 33,
          "position": 172
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": "{\n  productId?: string;\n  warehouseId?: string;\n  locationId?: string;\n  movementType?: string;\n  movementReason?: string;\n  status?: string;\n  lowStock?: boolean;\n  outOfStock?: boolean;\n  needsReorder?: boolean;\n  hasExpiredItems?: boolean;\n  hasExpiringItems?: boolean;\n  minQuantity?: number;\n  maxQuantity?: number;\n  minValue?: number;\n  maxValue?: number;\n  costMethod?: string;\n  valuationMethod?: string;\n}\n\nexport interface InventoryKardexStats",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\domain\\repositories\\inventory-kardex.repository.ts",
        "start": 28,
        "end": 48,
        "startLoc": {
          "line": 28,
          "column": 2,
          "position": 210
        },
        "endLoc": {
          "line": 48,
          "column": 21,
          "position": 355
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\repositories\\inventory-kardex.repository.ts",
        "start": 8,
        "end": 28,
        "startLoc": {
          "line": 8,
          "column": 2,
          "position": 59
        },
        "endLoc": {
          "line": 28,
          "column": 29,
          "position": 204
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "{\n  type?: string;\n  status?: string;\n  tableType?: string;\n  columnType?: string;\n  constraintType?: string;\n  isActive?: boolean;\n  hasBackup?: boolean;\n  hasMaintenance?: boolean;\n  minHealthScore?: number;\n  maxHealthScore?: number;\n  minPerformanceScore?: number;\n  maxPerformanceScore?: number;\n  minSecurityScore?: number;\n  maxSecurityScore?: number;\n  lastBackupFrom?: Date;\n  lastBackupTo?: Date;\n  lastMaintenanceFrom?: Date;\n  lastMaintenanceTo?: Date;\n}\n\nexport interface DatabaseSchemaStats",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\domain\\repositories\\database-schema.repository.ts",
        "start": 29,
        "end": 50,
        "startLoc": {
          "line": 29,
          "column": 2,
          "position": 218
        },
        "endLoc": {
          "line": 50,
          "column": 20,
          "position": 371
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\repositories\\database-schema.repository.ts",
        "start": 8,
        "end": 29,
        "startLoc": {
          "line": 8,
          "column": 2,
          "position": 59
        },
        "endLoc": {
          "line": 29,
          "column": 28,
          "position": 212
        }
      }
    },
    {
      "format": "typescript",
      "lines": 50,
      "fragment": "type?: string;\n  status?: string;\n  source?: string;\n  priority?: string;\n  assignedUserId?: string;\n  companyId?: string;\n  department?: string;\n  industry?: string;\n  profession?: string;\n  isActive?: boolean;\n  isVerified?: boolean;\n  isOptedIn?: boolean;\n  hasCompany?: boolean;\n  isAssigned?: boolean;\n  leadScoreMin?: number;\n  leadScoreMax?: number;\n  engagementScoreMin?: number;\n  engagementScoreMax?: number;\n  revenueMin?: number;\n  revenueMax?: number;\n  currency?: string;\n  salaryMin?: number;\n  salaryMax?: number;\n  experienceMin?: number;\n  experienceMax?: number;\n  ageMin?: number;\n  ageMax?: number;\n  lastContactAfter?: Date;\n  lastContactBefore?: Date;\n  nextFollowUpAfter?: Date;\n  nextFollowUpBefore?: Date;\n  lastEmailOpenAfter?: Date;\n  lastEmailOpenBefore?: Date;\n  lastEmailClickAfter?: Date;\n  lastEmailClickBefore?: Date;\n  lastWebsiteVisitAfter?: Date;\n  lastWebsiteVisitBefore?: Date;\n  lastSocialMediaInteractionAfter?: Date;\n  lastSocialMediaInteractionBefore?: Date;\n  createdAfter?: Date;\n  createdBefore?: Date;\n  updatedAfter?: Date;\n  updatedBefore?: Date;\n  birthdayAfter?: Date;\n  birthdayBefore?: Date;\n  anniversaryAfter?: Date;\n  anniversaryBefore?: Date;\n  tags?: string[];\n  customFields?: Record<string, any>;\n  sortBy",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\domain\\repositories\\contact.repository.ts",
        "start": 274,
        "end": 323,
        "startLoc": {
          "line": 274,
          "column": 3,
          "position": 3097
        },
        "endLoc": {
          "line": 323,
          "column": 7,
          "position": 3497
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\repositories\\contact.repository.ts",
        "start": 210,
        "end": 259,
        "startLoc": {
          "line": 210,
          "column": 3,
          "position": 2606
        },
        "endLoc": {
          "line": 259,
          "column": 2,
          "position": 3005
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "?: Date;\n  tags?: string[];\n  customFields?: Record<string, any>;\n}\n\nexport interface PaginatedResult<T> {\n  data: T[];\n  total: number;\n  page: number;\n  limit: number;\n  totalPages: number;\n  hasNext: boolean;\n  hasPrevious: boolean;\n}\n\nexport interface CompanySearchOptions",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\domain\\repositories\\company.repository.ts",
        "start": 170,
        "end": 185,
        "startLoc": {
          "line": 170,
          "column": 14,
          "position": 1761
        },
        "endLoc": {
          "line": 185,
          "column": 21,
          "position": 1863
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\repositories\\contact.repository.ts",
        "start": 256,
        "end": 271,
        "startLoc": {
          "line": 256,
          "column": 18,
          "position": 2975
        },
        "endLoc": {
          "line": 271,
          "column": 21,
          "position": 3077
        }
      }
    },
    {
      "format": "typescript",
      "lines": 30,
      "fragment": "type?: string;\n  status?: string;\n  size?: string;\n  industry?: string;\n  source?: string;\n  assignedUserId?: string;\n  parentCompanyId?: string;\n  isActive?: boolean;\n  hasParentCompany?: boolean;\n  isAssigned?: boolean;\n  leadScoreMin?: number;\n  leadScoreMax?: number;\n  revenueMin?: number;\n  revenueMax?: number;\n  currency?: string;\n  employeeCountMin?: number;\n  employeeCountMax?: number;\n  foundedYearMin?: number;\n  foundedYearMax?: number;\n  lastContactAfter?: Date;\n  lastContactBefore?: Date;\n  nextFollowUpAfter?: Date;\n  nextFollowUpBefore?: Date;\n  createdAfter?: Date;\n  createdBefore?: Date;\n  updatedAfter?: Date;\n  updatedBefore?: Date;\n  tags?: string[];\n  customFields?: Record<string, any>;\n  sortBy",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\domain\\repositories\\company.repository.ts",
        "start": 188,
        "end": 217,
        "startLoc": {
          "line": 188,
          "column": 3,
          "position": 1883
        },
        "endLoc": {
          "line": 217,
          "column": 7,
          "position": 2123
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\repositories\\company.repository.ts",
        "start": 144,
        "end": 173,
        "startLoc": {
          "line": 144,
          "column": 3,
          "position": 1552
        },
        "endLoc": {
          "line": 173,
          "column": 2,
          "position": 1791
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "{\n  type?: string;\n  status?: string;\n  layerType?: string;\n  componentType?: string;\n  isActive?: boolean;\n  hasMetrics?: boolean;\n  minQualityScore?: number;\n  maxQualityScore?: number;\n  lastAnalysisFrom?: Date;\n  lastAnalysisTo?: Date;\n}\n\nexport interface ArchitectureStats",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\domain\\repositories\\architecture.repository.ts",
        "start": 21,
        "end": 34,
        "startLoc": {
          "line": 21,
          "column": 2,
          "position": 154
        },
        "endLoc": {
          "line": 34,
          "column": 18,
          "position": 243
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\repositories\\architecture.repository.ts",
        "start": 8,
        "end": 21,
        "startLoc": {
          "line": 8,
          "column": 2,
          "position": 59
        },
        "endLoc": {
          "line": 21,
          "column": 26,
          "position": 148
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ",\n      role: this.props.role.value,\n      status: this.props.status.value,\n      isEmailVerified: this.props.isEmailVerified,\n      mfaEnabled: this.props.mfaEnabled,\n      lastLoginAt: this.props.lastLoginAt,\n      createdAt: this.props.createdAt,\n      updatedAt: this.props.updatedAt\n    };\n  }\n\n  // ========================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\domain\\entities\\user.entity.ts",
        "start": 302,
        "end": 313,
        "startLoc": {
          "line": 302,
          "column": 9,
          "position": 2257
        },
        "endLoc": {
          "line": 313,
          "column": 76,
          "position": 2348
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\entities\\user.entity.ts",
        "start": 284,
        "end": 295,
        "startLoc": {
          "line": 284,
          "column": 9,
          "position": 2084
        },
        "endLoc": {
          "line": 295,
          "column": 6,
          "position": 2175
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": ";\n    margin?: number;\n  };\n  shipping: {\n    weight?: number;\n    dimensions?: {\n      length: number;\n      width: number;\n      height: number;\n    };\n    requiresShipping: boolean;\n    freeShipping: boolean;\n  };\n  seo: {\n    metaTitle?: string;\n    metaDescription?: string;\n    slug: string;\n  };\n  customFields: Record<string, any>;\n  tags: string[];\n  notes: string;\n}\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\domain\\entities\\product.entity.ts",
        "start": 46,
        "end": 69,
        "startLoc": {
          "line": 46,
          "column": 6,
          "position": 265
        },
        "endLoc": {
          "line": 69,
          "column": 7,
          "position": 408
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\product\\create-product.use-case.ts",
        "start": 40,
        "end": 61,
        "startLoc": {
          "line": 40,
          "column": 2,
          "position": 291
        },
        "endLoc": {
          "line": 61,
          "column": 2,
          "position": 433
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "dataSource: string[];\n  features: string[];\n  targetVariable: string;\n  validationMethod: 'cross_validation' | 'holdout' | 'time_series_split';\n  hyperparameters: Record<string, any>;\n  customFields: Record<string, any>;\n  tags: string[];\n  notes: string;\n}\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\domain\\entities\\predictive-analytics.entity.ts",
        "start": 46,
        "end": 56,
        "startLoc": {
          "line": 46,
          "column": 3,
          "position": 364
        },
        "endLoc": {
          "line": 56,
          "column": 7,
          "position": 448
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\predictive-analytics\\create-predictive-analytics.use-case.ts",
        "start": 21,
        "end": 29,
        "startLoc": {
          "line": 21,
          "column": 5,
          "position": 200
        },
        "endLoc": {
          "line": 29,
          "column": 2,
          "position": 283
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ";\n  }\n\n  get isActive(): boolean {\n    return this.props.isActive;\n  }\n\n  get createdAt(): Date {\n    return this.props.createdAt;\n  }\n\n  get updatedAt(): Date {\n    return this.props.updatedAt;\n  }\n\n  // ========================================================================\n  // BUSINESS METHODS\n  // ========================================================================\n\n  updateName(name: string): void {\n    this",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\domain\\entities\\organization.entity.ts",
        "start": 175,
        "end": 195,
        "startLoc": {
          "line": 175,
          "column": 13,
          "position": 1195
        },
        "endLoc": {
          "line": 195,
          "column": 5,
          "position": 1304
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\entities\\product.entity.ts",
        "start": 149,
        "end": 159,
        "startLoc": {
          "line": 149,
          "column": 9,
          "position": 1289
        },
        "endLoc": {
          "line": 159,
          "column": 3,
          "position": 1388
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "}\n\n  activate(): void {\n    this.props.isActive = true;\n    this.props.updatedAt = new Date();\n  }\n\n  deactivate(): void {\n    this.props.isActive = false;\n    this.props.updatedAt = new Date();\n  }\n\n  // ========================================================================\n  // BUSINESS RULES",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\domain\\entities\\organization.entity.ts",
        "start": 237,
        "end": 250,
        "startLoc": {
          "line": 237,
          "column": 3,
          "position": 1722
        },
        "endLoc": {
          "line": 250,
          "column": 18,
          "position": 1813
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\entities\\product.entity.ts",
        "start": 281,
        "end": 294,
        "startLoc": {
          "line": 281,
          "column": 3,
          "position": 2662
        },
        "endLoc": {
          "line": 294,
          "column": 22,
          "position": 2753
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": "(): any {\n    return {\n      id: this.props.id.value,\n      name: this.props.name,\n      slug: this.props.slug.value,\n      description: this.props.description,\n      website: this.props.website,\n      logo: this.props.logo,\n      settings: this.props.settings,\n      subscriptionTier: this.props.subscriptionTier.value,\n      status: this.props.status.value,\n      trialEndsAt: this.props.trialEndsAt,\n      billingEmail: this.props.billingEmail,\n      isActive: this.props.isActive,\n      createdAt: this.props.createdAt,\n      updatedAt: this.props.updatedAt\n    };\n  }\n\n  // ========================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\domain\\entities\\organization.entity.ts",
        "start": 406,
        "end": 425,
        "startLoc": {
          "line": 406,
          "column": 6,
          "position": 2998
        },
        "endLoc": {
          "line": 425,
          "column": 76,
          "position": 3181
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\entities\\organization.entity.ts",
        "start": 387,
        "end": 406,
        "startLoc": {
          "line": 387,
          "column": 14,
          "position": 2814
        },
        "endLoc": {
          "line": 406,
          "column": 6,
          "position": 2997
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "{\n  trackInventory: boolean;\n  allowNegativeStock: boolean;\n  lowStockThreshold: number;\n  reorderPoint: number;\n  reorderQuantity: number;\n  costMethod: 'fifo' | 'lifo' | 'average' | 'standard';\n  valuationMethod: 'fifo' | 'lifo' | 'average' | 'standard';\n  autoReorder: boolean;\n  trackExpiration: boolean;\n  trackSerialNumbers: boolean;\n  trackBatchNumbers: boolean;\n  customFields: Record<string, any>;\n  tags: string[];\n  notes: string;\n}\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\domain\\entities\\inventory-kardex.entity.ts",
        "start": 48,
        "end": 65,
        "startLoc": {
          "line": 48,
          "column": 2,
          "position": 374
        },
        "endLoc": {
          "line": 65,
          "column": 7,
          "position": 509
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\inventory-kardex\\create-inventory-kardex.use-case.ts",
        "start": 19,
        "end": 34,
        "startLoc": {
          "line": 19,
          "column": 2,
          "position": 136
        },
        "endLoc": {
          "line": 34,
          "column": 2,
          "position": 270
        }
      }
    },
    {
      "format": "typescript",
      "lines": 29,
      "fragment": "export const InteractionTypeSchema = z.enum([\n  'EMAIL',\n  'PHONE',\n  'MEETING',\n  'NOTE',\n  'TASK',\n  'CALL',\n  'DEMO',\n  'PROPOSAL',\n  'FOLLOW_UP',\n  'OTHER'\n]);\n\nexport const InteractionStatusSchema = z.enum([\n  'SCHEDULED',\n  'IN_PROGRESS',\n  'COMPLETED',\n  'CANCELLED',\n  'RESCHEDULED'\n]);\n\nexport const InteractionPrioritySchema = z.enum([\n  'LOW',\n  'MEDIUM',\n  'HIGH',\n  'URGENT'\n]);\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\domain\\entities\\interaction.entity.ts",
        "start": 7,
        "end": 35,
        "startLoc": {
          "line": 7,
          "column": 1,
          "position": 21
        },
        "endLoc": {
          "line": 35,
          "column": 7,
          "position": 151
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\dto\\interaction.dto.ts",
        "start": 12,
        "end": 40,
        "startLoc": {
          "line": 12,
          "column": 1,
          "position": 53
        },
        "endLoc": {
          "line": 40,
          "column": 76,
          "position": 183
        }
      }
    },
    {
      "format": "typescript",
      "lines": 39,
      "fragment": "export const DealStageSchema = z.enum([\n  'LEAD',\n  'QUALIFIED',\n  'PROPOSAL',\n  'NEGOTIATION',\n  'CLOSED_WON',\n  'CLOSED_LOST',\n  'ON_HOLD',\n  'CANCELLED'\n]);\n\nexport const DealStatusSchema = z.enum([\n  'ACTIVE',\n  'WON',\n  'LOST',\n  'ON_HOLD',\n  'CANCELLED'\n]);\n\nexport const DealPrioritySchema = z.enum([\n  'LOW',\n  'MEDIUM',\n  'HIGH',\n  'URGENT'\n]);\n\nexport const DealSourceSchema = z.enum([\n  'WEBSITE',\n  'EMAIL',\n  'PHONE',\n  'REFERRAL',\n  'SOCIAL_MEDIA',\n  'ADVERTISING',\n  'TRADE_SHOW',\n  'PARTNER',\n  'OTHER'\n]);\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\domain\\entities\\deal.entity.ts",
        "start": 7,
        "end": 45,
        "startLoc": {
          "line": 7,
          "column": 1,
          "position": 21
        },
        "endLoc": {
          "line": 45,
          "column": 7,
          "position": 197
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\dto\\deal.dto.ts",
        "start": 12,
        "end": 50,
        "startLoc": {
          "line": 12,
          "column": 1,
          "position": 53
        },
        "endLoc": {
          "line": 50,
          "column": 76,
          "position": 229
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "?: Date;\n  nextStep?: string;\n  nextStepDate?: Date;\n  tags?: string[];\n  customFields?: Record<string, any>;\n  attachments?: string[];\n  notes?: string;\n  competitors?: string[];\n  decisionMakers?: string[];\n  budget?: number;\n  timeline?: string;\n  requirements?: string[];\n  objections?: string[];\n  createdAt",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\domain\\entities\\deal.entity.ts",
        "start": 80,
        "end": 93,
        "startLoc": {
          "line": 80,
          "column": 16,
          "position": 460
        },
        "endLoc": {
          "line": 93,
          "column": 10,
          "position": 581
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\deal\\update-deal.use-case.ts",
        "start": 23,
        "end": 36,
        "startLoc": {
          "line": 23,
          "column": 18,
          "position": 185
        },
        "endLoc": {
          "line": 36,
          "column": 2,
          "position": 306
        }
      }
    },
    {
      "format": "typescript",
      "lines": 54,
      "fragment": "= date;\n    this.props.updatedAt = new Date();\n  }\n\n  addTag(tag: string): void {\n    if (!this.props.tags) {\n      this.props.tags = [];\n    }\n    if (!this.props.tags.includes(tag)) {\n      this.props.tags.push(tag);\n      this.props.updatedAt = new Date();\n    }\n  }\n\n  removeTag(tag: string): void {\n    if (this.props.tags) {\n      this.props.tags = this.props.tags.filter(t => t !== tag);\n      this.props.updatedAt = new Date();\n    }\n  }\n\n  setCustomField(key: string, value: any): void {\n    if (!this.props.customFields) {\n      this.props.customFields = {};\n    }\n    this.props.customFields[key] = value;\n    this.props.updatedAt = new Date();\n  }\n\n  removeCustomField(key: string): void {\n    if (this.props.customFields) {\n      delete this.props.customFields[key];\n      this.props.updatedAt = new Date();\n    }\n  }\n\n  addAttachment(attachment: string): void {\n    if (!this.props.attachments) {\n      this.props.attachments = [];\n    }\n    if (!this.props.attachments.includes(attachment)) {\n      this.props.attachments.push(attachment);\n      this.props.updatedAt = new Date();\n    }\n  }\n\n  removeAttachment(attachment: string): void {\n    if (this.props.attachments) {\n      this.props.attachments = this.props.attachments.filter(a => a !== attachment);\n      this.props.updatedAt = new Date();\n    }\n  }\n\n  addCompetitor",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\domain\\entities\\deal.entity.ts",
        "start": 204,
        "end": 257,
        "startLoc": {
          "line": 204,
          "column": 2,
          "position": 2042
        },
        "endLoc": {
          "line": 257,
          "column": 14,
          "position": 2572
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\entities\\interaction.entity.ts",
        "start": 148,
        "end": 201,
        "startLoc": {
          "line": 148,
          "column": 2,
          "position": 1386
        },
        "endLoc": {
          "line": 201,
          "column": 76,
          "position": 1916
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ");\n      this.props.updatedAt = new Date();\n    }\n  }\n\n  // ========================================================================\n  // VALIDATION METHODS\n  // ========================================================================\n\n  validate(): boolean {\n    return (\n      this.props.id.length > 0 &&\n      this.props.organizationId.length > 0 &&\n      this.props.contactId.length > 0 &&\n      this.props.userId.length > 0 &&\n      this.props.name",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\domain\\entities\\deal.entity.ts",
        "start": 320,
        "end": 335,
        "startLoc": {
          "line": 320,
          "column": 10,
          "position": 3257
        },
        "endLoc": {
          "line": 335,
          "column": 5,
          "position": 3373
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\entities\\interaction.entity.ts",
        "start": 196,
        "end": 211,
        "startLoc": {
          "line": 196,
          "column": 11,
          "position": 1889
        },
        "endLoc": {
          "line": 211,
          "column": 8,
          "position": 2005
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "(\n    organizationId: OrganizationId,\n    contactId: ContactId,\n    userId: UserId,\n    name: string,\n    value: number,\n    currency: string = 'USD',\n    source: DealSource = 'WEBSITE',\n    companyId?: CompanyId\n  ): Deal {\n    return Deal.create({\n      organizationId,\n      contactId,\n      companyId,\n      userId,\n      name,\n      stage: 'QUALIFIED'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\domain\\entities\\deal.entity.ts",
        "start": 398,
        "end": 414,
        "startLoc": {
          "line": 398,
          "column": 16,
          "position": 3849
        },
        "endLoc": {
          "line": 414,
          "column": 12,
          "position": 3956
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\entities\\deal.entity.ts",
        "start": 372,
        "end": 388,
        "startLoc": {
          "line": 372,
          "column": 11,
          "position": 3694
        },
        "endLoc": {
          "line": 388,
          "column": 7,
          "position": 3801
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "(\n    organizationId: OrganizationId,\n    contactId: ContactId,\n    userId: UserId,\n    name: string,\n    value: number,\n    currency: string = 'USD',\n    source: DealSource = 'WEBSITE',\n    companyId?: CompanyId\n  ): Deal {\n    return Deal.create({\n      organizationId,\n      contactId,\n      companyId,\n      userId,\n      name,\n      stage: 'PROPOSAL'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\domain\\entities\\deal.entity.ts",
        "start": 424,
        "end": 440,
        "startLoc": {
          "line": 424,
          "column": 15,
          "position": 4004
        },
        "endLoc": {
          "line": 440,
          "column": 11,
          "position": 4111
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\entities\\deal.entity.ts",
        "start": 372,
        "end": 388,
        "startLoc": {
          "line": 372,
          "column": 11,
          "position": 3694
        },
        "endLoc": {
          "line": 388,
          "column": 7,
          "position": 3801
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "(\n    organizationId: OrganizationId,\n    contactId: ContactId,\n    userId: UserId,\n    name: string,\n    value: number,\n    currency: string = 'USD',\n    source: DealSource = 'WEBSITE',\n    companyId?: CompanyId\n  ): Deal {\n    return Deal.create({\n      organizationId,\n      contactId,\n      companyId,\n      userId,\n      name,\n      stage: 'NEGOTIATION'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\domain\\entities\\deal.entity.ts",
        "start": 450,
        "end": 466,
        "startLoc": {
          "line": 450,
          "column": 18,
          "position": 4159
        },
        "endLoc": {
          "line": 466,
          "column": 14,
          "position": 4266
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\entities\\deal.entity.ts",
        "start": 372,
        "end": 388,
        "startLoc": {
          "line": 372,
          "column": 11,
          "position": 3694
        },
        "endLoc": {
          "line": 388,
          "column": 7,
          "position": 3801
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ";\n  columns: string[];\n  referencedTable?: string;\n  referencedColumns?: string[];\n  condition?: string;\n  description: string;\n  isDeferrable: boolean;\n  initiallyDeferred: boolean;\n  onDelete?: 'CASCADE' | 'SET NULL' | 'RESTRICT' | 'NO ACTION';\n  onUpdate?: 'CASCADE' | 'SET NULL' | 'RESTRICT' | 'NO ACTION';\n  createdAt",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\domain\\entities\\database-schema.entity.ts",
        "start": 55,
        "end": 65,
        "startLoc": {
          "line": 55,
          "column": 15,
          "position": 446
        },
        "endLoc": {
          "line": 65,
          "column": 10,
          "position": 545
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\database-schema\\create-database-schema.use-case.ts",
        "start": 77,
        "end": 87,
        "startLoc": {
          "line": 77,
          "column": 8,
          "position": 648
        },
        "endLoc": {
          "line": 87,
          "column": 2,
          "position": 747
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "{\n  id: string;\n  name: string;\n  table: string;\n  columns: string[];\n  type: 'btree' | 'hash' | 'gin' | 'gist' | 'spgist' | 'brin';\n  unique: boolean;\n  partial: boolean;\n  condition?: string;\n  description: string;\n  isActive: boolean;\n  createdAt",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\domain\\entities\\database-schema.entity.ts",
        "start": 86,
        "end": 97,
        "startLoc": {
          "line": 86,
          "column": 2,
          "position": 686
        },
        "endLoc": {
          "line": 97,
          "column": 10,
          "position": 782
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\database-schema\\create-database-schema.use-case.ts",
        "start": 109,
        "end": 120,
        "startLoc": {
          "line": 109,
          "column": 2,
          "position": 960
        },
        "endLoc": {
          "line": 120,
          "column": 2,
          "position": 1056
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "{\n  rowCount: number;\n  tableSize: number;\n  indexSize: number;\n  totalSize: number;\n  lastAnalyzed: Date;\n  lastVacuumed: Date;\n  lastAutoVacuumed: Date;\n  deadTuples: number;\n  liveTuples: number;\n  nDistinct: number;\n  correlation: number;\n  mostCommonValues: any[];\n  mostCommonFrequencies: number[];\n  histogramBounds: any[];\n}\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\domain\\entities\\database-schema.entity.ts",
        "start": 129,
        "end": 146,
        "startLoc": {
          "line": 129,
          "column": 2,
          "position": 1021
        },
        "endLoc": {
          "line": 146,
          "column": 7,
          "position": 1130
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\database-schema\\create-database-schema.use-case.ts",
        "start": 144,
        "end": 159,
        "startLoc": {
          "line": 144,
          "column": 2,
          "position": 1264
        },
        "endLoc": {
          "line": 159,
          "column": 2,
          "position": 1372
        }
      }
    },
    {
      "format": "typescript",
      "lines": 47,
      "fragment": "version: string;\n  encoding: string;\n  collation: string;\n  timezone: string;\n  connectionPool: {\n    min: number;\n    max: number;\n    idle: number;\n    acquire: number;\n    evict: number;\n  };\n  migrations: {\n    enabled: boolean;\n    directory: string;\n    table: string;\n    lockTable: string;\n  };\n  backup: {\n    enabled: boolean;\n    frequency: string;\n    retention: number;\n    compression: boolean;\n  };\n  monitoring: {\n    enabled: boolean;\n    slowQueryThreshold: number;\n    logLevel: string;\n    metrics: boolean;\n  };\n  security: {\n    ssl: boolean;\n    encryption: boolean;\n    auditLog: boolean;\n    rowLevelSecurity: boolean;\n  };\n  performance: {\n    queryOptimization: boolean;\n    indexOptimization: boolean;\n    connectionPooling: boolean;\n    caching: boolean;\n  };\n  customFields: Record<string, any>;\n  tags: string[];\n  notes: string;\n}\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\domain\\entities\\database-schema.entity.ts",
        "start": 148,
        "end": 194,
        "startLoc": {
          "line": 148,
          "column": 3,
          "position": 1146
        },
        "endLoc": {
          "line": 194,
          "column": 7,
          "position": 1440
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\database-schema\\create-database-schema.use-case.ts",
        "start": 14,
        "end": 58,
        "startLoc": {
          "line": 14,
          "column": 5,
          "position": 114
        },
        "endLoc": {
          "line": 58,
          "column": 2,
          "position": 407
        }
      }
    },
    {
      "format": "typescript",
      "lines": 26,
      "fragment": "{\n  totalTables: number;\n  totalViews: number;\n  totalFunctions: number;\n  totalProcedures: number;\n  totalTriggers: number;\n  totalIndexes: number;\n  totalConstraints: number;\n  totalPolicies: number;\n  totalSize: number;\n  averageTableSize: number;\n  largestTable: string;\n  smallestTable: string;\n  mostIndexedTable: string;\n  leastIndexedTable: string;\n  lastBackupDate?: Date;\n  lastMaintenanceDate?: Date;\n  healthScore: number;\n  performanceScore: number;\n  securityScore: number;\n  maintainabilityScore: number;\n  lastAnalysisDate: Date;\n  analysisDuration: number;\n}\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\domain\\entities\\database-schema.entity.ts",
        "start": 194,
        "end": 219,
        "startLoc": {
          "line": 194,
          "column": 2,
          "position": 1446
        },
        "endLoc": {
          "line": 219,
          "column": 7,
          "position": 1607
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\database-schema\\analyze-database-schema.use-case.ts",
        "start": 17,
        "end": 40,
        "startLoc": {
          "line": 17,
          "column": 2,
          "position": 112
        },
        "endLoc": {
          "line": 40,
          "column": 2,
          "position": 272
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "; }\n\n  // ========================================================================\n  // BUSINESS METHODS\n  // ========================================================================\n\n  updateName(name: string): void {\n    if (!name || name.trim().length === 0) {\n      throw new Error('Name cannot be empty');\n    }\n    this.props.name = name.trim();\n    this.updateTimestamp();\n  }\n\n  updateType(type: SchemaType",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\domain\\entities\\database-schema.entity.ts",
        "start": 281,
        "end": 295,
        "startLoc": {
          "line": 281,
          "column": 20,
          "position": 2334
        },
        "endLoc": {
          "line": 295,
          "column": 11,
          "position": 2435
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\entities\\predictive-analytics.entity.ts",
        "start": 123,
        "end": 137,
        "startLoc": {
          "line": 123,
          "column": 16,
          "position": 1109
        },
        "endLoc": {
          "line": 137,
          "column": 14,
          "position": 1210
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ");\n  }\n\n  // ========================================================================\n  // VALIDATION METHODS\n  // ========================================================================\n\n  validate(): boolean {\n    if (!this.validateBase()) {\n      return false;\n    }\n\n    if (!this.props.name || this.props.name.trim().length === 0) {\n      return false;\n    }\n\n    if (!this.props.organizationId || this.props.organizationId.trim().length === 0) {\n      return false;\n    }\n\n    if (!",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\domain\\entities\\database-schema.entity.ts",
        "start": 583,
        "end": 603,
        "startLoc": {
          "line": 583,
          "column": 6,
          "position": 5182
        },
        "endLoc": {
          "line": 603,
          "column": 2,
          "position": 5321
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\entities\\predictive-analytics.entity.ts",
        "start": 289,
        "end": 309,
        "startLoc": {
          "line": 289,
          "column": 4,
          "position": 2546
        },
        "endLoc": {
          "line": 309,
          "column": 5,
          "position": 2685
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ";\n  }\n\n  get isActive(): boolean {\n    return this.props.isActive;\n  }\n\n  get createdAt(): Date {\n    return this.props.createdAt;\n  }\n\n  get updatedAt(): Date {\n    return this.props.updatedAt;\n  }\n\n  // ========================================================================\n  // BUSINESS METHODS\n  // ========================================================================\n\n  updateName(name: string): void {\n    this.props.name = name;\n    this.props.updatedAt = new Date();\n  }\n\n  updateLegalName",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\domain\\entities\\company.entity.ts",
        "start": 273,
        "end": 297,
        "startLoc": {
          "line": 273,
          "column": 10,
          "position": 2090
        },
        "endLoc": {
          "line": 297,
          "column": 16,
          "position": 2231
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\entities\\product.entity.ts",
        "start": 149,
        "end": 199,
        "startLoc": {
          "line": 149,
          "column": 9,
          "position": 1289
        },
        "endLoc": {
          "line": 199,
          "column": 18,
          "position": 1336
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": ";\n    this.props.updatedAt = new Date();\n  }\n\n  activate(): void {\n    this.props.isActive = true;\n    this.props.updatedAt = new Date();\n  }\n\n  deactivate(): void {\n    this.props.isActive = false;\n    this.props.updatedAt = new Date();\n  }\n\n  // ========================================================================\n  // BUSINESS RULES\n  // ========================================================================\n\n  isActive(): boolean {\n    return this.props.isActive && this.props.status.value === 'active';\n  }\n\n  isCustomer",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\domain\\entities\\company.entity.ts",
        "start": 402,
        "end": 424,
        "startLoc": {
          "line": 402,
          "column": 2,
          "position": 3352
        },
        "endLoc": {
          "line": 424,
          "column": 11,
          "position": 3507
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\entities\\organization.entity.ts",
        "start": 235,
        "end": 257,
        "startLoc": {
          "line": 235,
          "column": 6,
          "position": 1703
        },
        "endLoc": {
          "line": 257,
          "column": 8,
          "position": 1858
        }
      }
    },
    {
      "format": "typescript",
      "lines": 31,
      "fragment": "(): any {\n    return {\n      id: this.props.id.value,\n      organizationId: this.props.organizationId.value,\n      name: this.props.name,\n      legalName: this.props.legalName,\n      type: this.props.type.value,\n      status: this.props.status.value,\n      size: this.props.size.value,\n      industry: this.props.industry.value,\n      source: this.props.source.value,\n      website: this.props.website,\n      email: this.props.email,\n      phone: this.props.phone,\n      address: this.props.address?.toJSON(),\n      billingAddress: this.props.billingAddress?.toJSON(),\n      shippingAddress: this.props.shippingAddress?.toJSON(),\n      taxId: this.props.taxId,\n      vatNumber: this.props.vatNumber,\n      registrationNumber: this.props.registrationNumber,\n      description: this.props.description,\n      settings: this.props.settings,\n      annualRevenue: this.props.annualRevenue?.toJSON(),\n      employeeCount: this.props.employeeCount,\n      foundedYear: this.props.foundedYear,\n      parentCompanyId: this.props.parentCompanyId?.value,\n      assignedUserId: this.props.assignedUserId,\n      lastContactDate: this.props.lastContactDate,\n      nextFollowUpDate: this.props.nextFollowUpDate,\n      leadScore: this.props.leadScore,\n      leadScoreLevel",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\domain\\entities\\company.entity.ts",
        "start": 568,
        "end": 598,
        "startLoc": {
          "line": 568,
          "column": 6,
          "position": 4876
        },
        "endLoc": {
          "line": 598,
          "column": 15,
          "position": 5235
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\entities\\company.entity.ts",
        "start": 532,
        "end": 562,
        "startLoc": {
          "line": 532,
          "column": 14,
          "position": 4476
        },
        "endLoc": {
          "line": 562,
          "column": 9,
          "position": 4835
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ";\n  patterns: string[];\n  principles: string[];\n  conventions: Record<string, any>;\n  tools: string[];\n  frameworks: string[];\n  libraries: string[];\n  customFields: Record<string, any>;\n  tags: string[];\n  notes: string;\n}\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\domain\\entities\\architecture.entity.ts",
        "start": 58,
        "end": 70,
        "startLoc": {
          "line": 58,
          "column": 2,
          "position": 415
        },
        "endLoc": {
          "line": 70,
          "column": 7,
          "position": 507
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\architecture\\create-architecture.use-case.ts",
        "start": 33,
        "end": 43,
        "startLoc": {
          "line": 33,
          "column": 2,
          "position": 301
        },
        "endLoc": {
          "line": 43,
          "column": 2,
          "position": 392
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "{\n  totalComponents: number;\n  totalLayers: number;\n  complexity: number;\n  coupling: number;\n  cohesion: number;\n  maintainability: number;\n  testability: number;\n  scalability: number;\n  performance: number;\n  security: number;\n  lastAnalysisDate: Date;\n  analysisDuration: number;\n  qualityScore: number;\n}\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\domain\\entities\\architecture.entity.ts",
        "start": 70,
        "end": 86,
        "startLoc": {
          "line": 70,
          "column": 2,
          "position": 513
        },
        "endLoc": {
          "line": 86,
          "column": 7,
          "position": 609
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\architecture\\analyze-architecture.use-case.ts",
        "start": 17,
        "end": 31,
        "startLoc": {
          "line": 17,
          "column": 2,
          "position": 112
        },
        "endLoc": {
          "line": 31,
          "column": 2,
          "position": 207
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "; }\n\n  // ========================================================================\n  // BUSINESS METHODS\n  // ========================================================================\n\n  updateName(name: string): void {\n    if (!name || name.trim().length === 0) {\n      throw new Error('Name cannot be empty');\n    }\n    this.props.name = name.trim();\n    this.updateTimestamp();\n  }\n\n  updateType(type: ArchitectureType",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\domain\\entities\\architecture.entity.ts",
        "start": 136,
        "end": 150,
        "startLoc": {
          "line": 136,
          "column": 17,
          "position": 1131
        },
        "endLoc": {
          "line": 150,
          "column": 17,
          "position": 1232
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\entities\\predictive-analytics.entity.ts",
        "start": 123,
        "end": 137,
        "startLoc": {
          "line": 123,
          "column": 16,
          "position": 1109
        },
        "endLoc": {
          "line": 137,
          "column": 14,
          "position": 1210
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ";\n  }\n\n  // ========================================================================\n  // VALIDATION METHODS\n  // ========================================================================\n\n  validate(): boolean {\n    if (!this.validateBase()) {\n      return false;\n    }\n\n    if (!this.props.name || this.props.name.trim().length === 0) {\n      return false;\n    }\n\n    if (!this.props.organizationId || this.props.organizationId.trim().length === 0) {\n      return false;\n    }\n\n    if (!this.props.settings.layers",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\domain\\entities\\architecture.entity.ts",
        "start": 344,
        "end": 364,
        "startLoc": {
          "line": 344,
          "column": 4,
          "position": 3236
        },
        "endLoc": {
          "line": 364,
          "column": 7,
          "position": 3381
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\entities\\predictive-analytics.entity.ts",
        "start": 289,
        "end": 603,
        "startLoc": {
          "line": 289,
          "column": 2,
          "position": 2547
        },
        "endLoc": {
          "line": 603,
          "column": 8,
          "position": 5328
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", {\n        error: error instanceof Error ? error.message : String(error)\n      });\n    }\n  }\n\n  /**\n   * Detiene el servicio de monitoreo\n   */\n  public stop(): void {\n    if (this.monitoringInterval) {\n      clearInterval(this.monitoringInterval);\n      this.monitoringInterval = null;\n    }\n    this.isMonitoring = false;\n    structuredLogger.info('Index manager monitoring stopped'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\db\\indexes\\index-manager.service.ts",
        "start": 400,
        "end": 415,
        "startLoc": {
          "line": 400,
          "column": 26,
          "position": 3185
        },
        "endLoc": {
          "line": 415,
          "column": 35,
          "position": 3287
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\db\\partitions\\partition-manager.service.ts",
        "start": 496,
        "end": 511,
        "startLoc": {
          "line": 496,
          "column": 30,
          "position": 4413
        },
        "endLoc": {
          "line": 511,
          "column": 39,
          "position": 4515
        }
      }
    },
    {
      "format": "javascript",
      "lines": 16,
      "fragment": "// optional: OpenTelemetry bootstrap (install deps if used)\nif (process.env.APPLICATIONINSIGHTS_CONNECTION_STRING) {\n  try {\n    const { NodeSDK } = require('@opentelemetry/sdk-node');\n    const { getNodeAutoInstrumentations } = require('@opentelemetry/auto-instrumentations-node');\n    const { AzureMonitorTraceExporter } = require('@azure/monitor-opentelemetry-exporter');\n    const sdk = new NodeSDK({\n      traceExporter: new AzureMonitorTraceExporter({ connectionString: process.env.APPLICATIONINSIGHTS_CONNECTION_STRING }),\n      instrumentations: [getNodeAutoInstrumentations()]\n    });\n    sdk.start().catch(e => console.error('OTel start failed', e));\n    console.log('OpenTelemetry started');\n  } catch (e) {\n    console.log('OpenTelemetry not configured or failed to init', e.message);\n  }\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\cockpit.api\\src\\app-otel-snippet.js",
        "start": 1,
        "end": 16,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 16,
          "column": 2,
          "position": 183
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\cockpit.api\\src\\app.js",
        "start": 5,
        "end": 20,
        "startLoc": {
          "line": 5,
          "column": 1,
          "position": 37
        },
        "endLoc": {
          "line": 20,
          "column": 2,
          "position": 220
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": "});\n        results.push(result);\n      }\n\n      const allSuccessful = results.every(result => result.success);\n\n      return {\n        success: allSuccessful,\n        results\n      };\n    } catch (error) {\n      return {\n        success: false,\n        results: [],\n        error: error instanceof Error ? error.message : 'Unknown error occurred'\n      };\n    }\n  }\n\n  // ========================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\application\\services\\user.application.service.ts",
        "start": 301,
        "end": 320,
        "startLoc": {
          "line": 301,
          "column": 9,
          "position": 2397
        },
        "endLoc": {
          "line": 320,
          "column": 76,
          "position": 2518
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\services\\user.application.service.ts",
        "start": 261,
        "end": 280,
        "startLoc": {
          "line": 261,
          "column": 9,
          "position": 2090
        },
        "endLoc": {
          "line": 280,
          "column": 6,
          "position": 2211
        }
      }
    },
    {
      "format": "typescript",
      "lines": 39,
      "fragment": "export interface BaseError {\n    type: ErrorType;\n    code: ErrorCode;\n    message: string;\n    details?: any;\n    timestamp: Date;\n    requestId?: string;\n    userId?: string;\n    organizationId?: string;\n}\nexport interface ValidationError extends BaseError {\n    type: ErrorType.VALIDATION;\n    field?: string;\n    value?: any;\n    errors?: string[];\n}\nexport interface NotFoundError extends BaseError {\n    type: ErrorType.NOT_FOUND;\n    entity: string;\n    id?: string;\n}\nexport interface ConflictError extends BaseError {\n    type: ErrorType.CONFLICT;\n    entity: string;\n    field?: string;\n    value?: any;\n}\nexport interface BusinessError extends BaseError {\n    type: ErrorType.BUSINESS;\n    rule: string;\n    context?: any;\n}\nexport interface ExternalError extends BaseError {\n    type: ErrorType.EXTERNAL;\n    service: string;\n    endpoint?: string;\n    statusCode?: number;\n}\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\shared\\utils\\error.utils.d.ts",
        "start": 45,
        "end": 83,
        "startLoc": {
          "line": 45,
          "column": 1,
          "position": 342
        },
        "endLoc": {
          "line": 83,
          "column": 7,
          "position": 629
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\shared\\utils\\error.utils.ts",
        "start": 72,
        "end": 116,
        "startLoc": {
          "line": 72,
          "column": 1,
          "position": 394
        },
        "endLoc": {
          "line": 116,
          "column": 76,
          "position": 687
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "valueDate?: string;\n    amount: number;\n    currency?: string;\n    reference?: string;\n    remittance?: string;\n}\nexport interface ReconcileResultItem {\n    movement: SepaMovement;\n    matchedInvoiceId?: string | null;\n    score: number;\n}\nexport interface ReconcileSummary {\n    total: number;\n    matched: number;\n    unmatched: number;\n    details: ReconcileResultItem[];\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\sepa\\types.d.ts",
        "start": 4,
        "end": 20,
        "startLoc": {
          "line": 4,
          "column": 5,
          "position": 24
        },
        "endLoc": {
          "line": 20,
          "column": 2,
          "position": 138
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\sepa\\types.ts",
        "start": 4,
        "end": 22,
        "startLoc": {
          "line": 4,
          "column": 3,
          "position": 26
        },
        "endLoc": {
          "line": 22,
          "column": 2,
          "position": 142
        }
      }
    },
    {
      "format": "javascript",
      "lines": 24,
      "fragment": "name: z.string().min(1).max(100),\n                sku: z.string().min(1).max(100),\n                price: z.object({\n                    amount: z.number().min(0),\n                    currency: z.string().length(3)\n                }),\n                compareAtPrice: z.object({\n                    amount: z.number().min(0),\n                    currency: z.string().length(3)\n                }).optional(),\n                costPrice: z.object({\n                    amount: z.number().min(0),\n                    currency: z.string().length(3)\n                }).optional(),\n                inventory: z.object({\n                    quantity: z.number().int().min(0),\n                    reserved: z.number().int().min(0),\n                    available: z.number().int().min(0)\n                }),\n                attributes: z.record(z.any()).default({}),\n                isActive: z.boolean().default(true)\n            })).optional()\n        })\n    }), productController.updateProduct",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\product.routes.js",
        "start": 149,
        "end": 172,
        "startLoc": {
          "line": 149,
          "column": 17,
          "position": 2250
        },
        "endLoc": {
          "line": 172,
          "column": 14,
          "position": 2568
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\product.routes.js",
        "start": 64,
        "end": 87,
        "startLoc": {
          "line": 64,
          "column": 17,
          "position": 960
        },
        "endLoc": {
          "line": 87,
          "column": 14,
          "position": 1278
        }
      }
    },
    {
      "format": "javascript",
      "lines": 21,
      "fragment": ", validateRequest({\n        params: z.object({\n            organizationId: z.string().uuid()\n        }),\n        query: z.object({\n            page: z.coerce.number().int().min(1).default(1),\n            limit: z.coerce.number().int().min(1).max(100).default(20),\n            sortBy: z.enum(['name', 'sku', 'category', 'brand', 'createdAt', 'updatedAt']).default('createdAt'),\n            sortOrder: z.enum(['asc', 'desc']).default('desc'),\n            search: z.string().max(200).optional(),\n            type: z.enum(['physical', 'digital', 'service', 'subscription', 'bundle']).optional(),\n            status: z.enum(['active', 'inactive', 'discontinued', 'draft', 'archived']).optional(),\n            category: z.string().optional(),\n            brand: z.string().optional(),\n            supplier: z.string().optional(),\n            minPrice: z.coerce.number().min(0).optional(),\n            maxPrice: z.coerce.number().min(0).optional(),\n            inStock: z.coerce.boolean().optional(),\n            lowStock: z.coerce.boolean().optional()\n        })\n    }), productController.searchProducts",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\product.routes.js",
        "start": 204,
        "end": 224,
        "startLoc": {
          "line": 204,
          "column": 40,
          "position": 3083
        },
        "endLoc": {
          "line": 224,
          "column": 15,
          "position": 3456
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\product.routes.js",
        "start": 183,
        "end": 203,
        "startLoc": {
          "line": 183,
          "column": 33,
          "position": 2695
        },
        "endLoc": {
          "line": 203,
          "column": 26,
          "position": 3068
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "])\n        }),\n        query: z.object({\n            page: z.coerce.number().int().min(1).default(1),\n            limit: z.coerce.number().int().min(1).max(100).default(20),\n            sortBy: z.enum(['name', 'sku', 'category', 'brand', 'createdAt', 'updatedAt']).default('createdAt'),\n            sortOrder: z.enum(['asc', 'desc']).default('desc')\n        })\n    }), async (req, res, next) => {\n        try {\n            const { status",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\product.routes.js",
        "start": 267,
        "end": 277,
        "startLoc": {
          "line": 267,
          "column": 11,
          "position": 3990
        },
        "endLoc": {
          "line": 277,
          "column": 7,
          "position": 4157
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\product.routes.js",
        "start": 232,
        "end": 242,
        "startLoc": {
          "line": 232,
          "column": 9,
          "position": 3565
        },
        "endLoc": {
          "line": 242,
          "column": 5,
          "position": 3732
        }
      }
    },
    {
      "format": "javascript",
      "lines": 23,
      "fragment": ");\n            res.status(200).json({\n                success: true,\n                data: products.map(product => ({\n                    id: product.id.value,\n                    name: product.name,\n                    sku: product.sku,\n                    type: product.type.value,\n                    status: product.status.value,\n                    category: product.category.value,\n                    brand: product.brand?.value,\n                    supplier: product.supplier?.value,\n                    isActive: product.isActive,\n                    createdAt: product.createdAt,\n                    updatedAt: product.updatedAt\n                }))\n            });\n        }\n        catch (error) {\n            next(error);\n        }\n    });\n    router.get('/category/:category'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\product.routes.js",
        "start": 278,
        "end": 300,
        "startLoc": {
          "line": 278,
          "column": 7,
          "position": 4185
        },
        "endLoc": {
          "line": 300,
          "column": 22,
          "position": 4376
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\product.routes.js",
        "start": 243,
        "end": 265,
        "startLoc": {
          "line": 243,
          "column": 5,
          "position": 3760
        },
        "endLoc": {
          "line": 265,
          "column": 18,
          "position": 3951
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": ")\n        }),\n        query: z.object({\n            page: z.coerce.number().int().min(1).default(1),\n            limit: z.coerce.number().int().min(1).max(100).default(20),\n            sortBy: z.enum(['name', 'sku', 'category', 'brand', 'createdAt', 'updatedAt']).default('createdAt'),\n            sortOrder: z.enum(['asc', 'desc']).default('desc')\n        })\n    }), async (req, res, next) => {\n        try {\n            const { category",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\product.routes.js",
        "start": 302,
        "end": 312,
        "startLoc": {
          "line": 302,
          "column": 4,
          "position": 4411
        },
        "endLoc": {
          "line": 312,
          "column": 9,
          "position": 4577
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\product.routes.js",
        "start": 185,
        "end": 242,
        "startLoc": {
          "line": 185,
          "column": 2,
          "position": 2723
        },
        "endLoc": {
          "line": 242,
          "column": 5,
          "position": 3732
        }
      }
    },
    {
      "format": "javascript",
      "lines": 23,
      "fragment": ");\n            res.status(200).json({\n                success: true,\n                data: products.map(product => ({\n                    id: product.id.value,\n                    name: product.name,\n                    sku: product.sku,\n                    type: product.type.value,\n                    status: product.status.value,\n                    category: product.category.value,\n                    brand: product.brand?.value,\n                    supplier: product.supplier?.value,\n                    isActive: product.isActive,\n                    createdAt: product.createdAt,\n                    updatedAt: product.updatedAt\n                }))\n            });\n        }\n        catch (error) {\n            next(error);\n        }\n    });\n    router.get('/brand/:brand'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\product.routes.js",
        "start": 313,
        "end": 335,
        "startLoc": {
          "line": 313,
          "column": 9,
          "position": 4605
        },
        "endLoc": {
          "line": 335,
          "column": 16,
          "position": 4796
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\product.routes.js",
        "start": 243,
        "end": 265,
        "startLoc": {
          "line": 243,
          "column": 5,
          "position": 3760
        },
        "endLoc": {
          "line": 265,
          "column": 18,
          "position": 3951
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": ": z.string().min(1).max(100)\n        }),\n        query: z.object({\n            page: z.coerce.number().int().min(1).default(1),\n            limit: z.coerce.number().int().min(1).max(100).default(20),\n            sortBy: z.enum(['name', 'sku', 'category', 'brand', 'createdAt', 'updatedAt']).default('createdAt'),\n            sortOrder: z.enum(['asc', 'desc']).default('desc')\n        })\n    }), async (req, res, next) => {\n        try {\n            const { brand",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\product.routes.js",
        "start": 337,
        "end": 347,
        "startLoc": {
          "line": 337,
          "column": 6,
          "position": 4815
        },
        "endLoc": {
          "line": 347,
          "column": 6,
          "position": 4997
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\product.routes.js",
        "start": 302,
        "end": 242,
        "startLoc": {
          "line": 302,
          "column": 9,
          "position": 4395
        },
        "endLoc": {
          "line": 242,
          "column": 5,
          "position": 3732
        }
      }
    },
    {
      "format": "javascript",
      "lines": 23,
      "fragment": ");\n            res.status(200).json({\n                success: true,\n                data: products.map(product => ({\n                    id: product.id.value,\n                    name: product.name,\n                    sku: product.sku,\n                    type: product.type.value,\n                    status: product.status.value,\n                    category: product.category.value,\n                    brand: product.brand?.value,\n                    supplier: product.supplier?.value,\n                    isActive: product.isActive,\n                    createdAt: product.createdAt,\n                    updatedAt: product.updatedAt\n                }))\n            });\n        }\n        catch (error) {\n            next(error);\n        }\n    });\n    router.get('/supplier/:supplier'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\product.routes.js",
        "start": 348,
        "end": 370,
        "startLoc": {
          "line": 348,
          "column": 6,
          "position": 5025
        },
        "endLoc": {
          "line": 370,
          "column": 22,
          "position": 5216
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\product.routes.js",
        "start": 243,
        "end": 265,
        "startLoc": {
          "line": 243,
          "column": 5,
          "position": 3760
        },
        "endLoc": {
          "line": 265,
          "column": 18,
          "position": 3951
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": ": z.string().min(1).max(100)\n        }),\n        query: z.object({\n            page: z.coerce.number().int().min(1).default(1),\n            limit: z.coerce.number().int().min(1).max(100).default(20),\n            sortBy: z.enum(['name', 'sku', 'category', 'brand', 'createdAt', 'updatedAt']).default('createdAt'),\n            sortOrder: z.enum(['asc', 'desc']).default('desc')\n        })\n    }), async (req, res, next) => {\n        try {\n            const { supplier",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\product.routes.js",
        "start": 372,
        "end": 382,
        "startLoc": {
          "line": 372,
          "column": 9,
          "position": 5235
        },
        "endLoc": {
          "line": 382,
          "column": 9,
          "position": 5417
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\product.routes.js",
        "start": 302,
        "end": 242,
        "startLoc": {
          "line": 302,
          "column": 9,
          "position": 4395
        },
        "endLoc": {
          "line": 242,
          "column": 5,
          "position": 3732
        }
      }
    },
    {
      "format": "javascript",
      "lines": 23,
      "fragment": ");\n            res.status(200).json({\n                success: true,\n                data: products.map(product => ({\n                    id: product.id.value,\n                    name: product.name,\n                    sku: product.sku,\n                    type: product.type.value,\n                    status: product.status.value,\n                    category: product.category.value,\n                    brand: product.brand?.value,\n                    supplier: product.supplier?.value,\n                    isActive: product.isActive,\n                    createdAt: product.createdAt,\n                    updatedAt: product.updatedAt\n                }))\n            });\n        }\n        catch (error) {\n            next(error);\n        }\n    });\n    router.get('/sku/:sku'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\product.routes.js",
        "start": 383,
        "end": 405,
        "startLoc": {
          "line": 383,
          "column": 9,
          "position": 5445
        },
        "endLoc": {
          "line": 405,
          "column": 12,
          "position": 5636
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\product.routes.js",
        "start": 243,
        "end": 265,
        "startLoc": {
          "line": 243,
          "column": 5,
          "position": 3760
        },
        "endLoc": {
          "line": 265,
          "column": 18,
          "position": 3951
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": "{\n                    id: product.id.value,\n                    name: product.name,\n                    sku: product.sku,\n                    type: product.type.value,\n                    status: product.status.value,\n                    category: product.category.value,\n                    brand: product.brand?.value,\n                    supplier: product.supplier?.value,\n                    isActive: product.isActive,\n                    createdAt: product.createdAt,\n                    updatedAt: product.updatedAt\n                }\n            }",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\product.routes.js",
        "start": 422,
        "end": 435,
        "startLoc": {
          "line": 422,
          "column": 2,
          "position": 5809
        },
        "endLoc": {
          "line": 435,
          "column": 2,
          "position": 5927
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\product.routes.js",
        "start": 246,
        "end": 258,
        "startLoc": {
          "line": 246,
          "column": 2,
          "position": 3795
        },
        "endLoc": {
          "line": 258,
          "column": 2,
          "position": 3911
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ");\n            if (!product) {\n                res.status(404).json({\n                    success: false,\n                    message: 'Product not found'\n                });\n                return;\n            }\n            res.status(200).json({\n                success: true,\n                data: {\n                    id: product.id.value,\n                    name: product.name,\n                    sku: product.sku,\n                    barcode",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\product.routes.js",
        "start": 448,
        "end": 462,
        "startLoc": {
          "line": 448,
          "column": 8,
          "position": 6063
        },
        "endLoc": {
          "line": 462,
          "column": 8,
          "position": 6168
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\product.routes.js",
        "start": 412,
        "end": 426,
        "startLoc": {
          "line": 412,
          "column": 4,
          "position": 5736
        },
        "endLoc": {
          "line": 426,
          "column": 5,
          "position": 5841
        }
      }
    },
    {
      "format": "javascript",
      "lines": 17,
      "fragment": ",\n                    type: product.type.value,\n                    status: product.status.value,\n                    category: product.category.value,\n                    brand: product.brand?.value,\n                    supplier: product.supplier?.value,\n                    isActive: product.isActive,\n                    createdAt: product.createdAt,\n                    updatedAt: product.updatedAt\n                }\n            });\n        }\n        catch (error) {\n            next(error);\n        }\n    });\n    router.get('/inventory/low-stock'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\product.routes.js",
        "start": 462,
        "end": 478,
        "startLoc": {
          "line": 462,
          "column": 8,
          "position": 6174
        },
        "endLoc": {
          "line": 478,
          "column": 23,
          "position": 6299
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\product.routes.js",
        "start": 249,
        "end": 441,
        "startLoc": {
          "line": 249,
          "column": 4,
          "position": 3824
        },
        "endLoc": {
          "line": 441,
          "column": 20,
          "position": 5963
        }
      }
    },
    {
      "format": "javascript",
      "lines": 23,
      "fragment": ");\n            res.status(200).json({\n                success: true,\n                data: products.map(product => ({\n                    id: product.id.value,\n                    name: product.name,\n                    sku: product.sku,\n                    type: product.type.value,\n                    status: product.status.value,\n                    category: product.category.value,\n                    brand: product.brand?.value,\n                    supplier: product.supplier?.value,\n                    isActive: product.isActive,\n                    createdAt: product.createdAt,\n                    updatedAt: product.updatedAt\n                }))\n            });\n        }\n        catch (error) {\n            next(error);\n        }\n    });\n    router.get('/inventory/out-of-stock'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\product.routes.js",
        "start": 486,
        "end": 508,
        "startLoc": {
          "line": 486,
          "column": 10,
          "position": 6425
        },
        "endLoc": {
          "line": 508,
          "column": 26,
          "position": 6616
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\product.routes.js",
        "start": 243,
        "end": 265,
        "startLoc": {
          "line": 243,
          "column": 5,
          "position": 3760
        },
        "endLoc": {
          "line": 265,
          "column": 18,
          "position": 3951
        }
      }
    },
    {
      "format": "javascript",
      "lines": 23,
      "fragment": ");\n            res.status(200).json({\n                success: true,\n                data: products.map(product => ({\n                    id: product.id.value,\n                    name: product.name,\n                    sku: product.sku,\n                    type: product.type.value,\n                    status: product.status.value,\n                    category: product.category.value,\n                    brand: product.brand?.value,\n                    supplier: product.supplier?.value,\n                    isActive: product.isActive,\n                    createdAt: product.createdAt,\n                    updatedAt: product.updatedAt\n                }))\n            });\n        }\n        catch (error) {\n            next(error);\n        }\n    });\n    router.get('/inventory/in-stock'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\product.routes.js",
        "start": 515,
        "end": 537,
        "startLoc": {
          "line": 515,
          "column": 15,
          "position": 6710
        },
        "endLoc": {
          "line": 537,
          "column": 22,
          "position": 6901
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\product.routes.js",
        "start": 243,
        "end": 265,
        "startLoc": {
          "line": 243,
          "column": 5,
          "position": 3760
        },
        "endLoc": {
          "line": 265,
          "column": 18,
          "position": 3951
        }
      }
    },
    {
      "format": "javascript",
      "lines": 23,
      "fragment": "(organizationId);\n            res.status(200).json({\n                success: true,\n                data: products.map(product => ({\n                    id: product.id.value,\n                    name: product.name,\n                    sku: product.sku,\n                    type: product.type.value,\n                    status: product.status.value,\n                    category: product.category.value,\n                    brand: product.brand?.value,\n                    supplier: product.supplier?.value,\n                    isActive: product.isActive,\n                    createdAt: product.createdAt,\n                    updatedAt: product.updatedAt\n                }))\n            });\n        }\n        catch (error) {\n            next(error);\n        }\n    });\n    router.put",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\product.routes.js",
        "start": 544,
        "end": 566,
        "startLoc": {
          "line": 544,
          "column": 14,
          "position": 6993
        },
        "endLoc": {
          "line": 566,
          "column": 4,
          "position": 7184
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\product.routes.js",
        "start": 515,
        "end": 265,
        "startLoc": {
          "line": 515,
          "column": 17,
          "position": 6708
        },
        "endLoc": {
          "line": 265,
          "column": 4,
          "position": 3949
        }
      }
    },
    {
      "format": "javascript",
      "lines": 25,
      "fragment": ", authenticate, authorize(['analytics:read']), validateRequest({\n        params: z.object({\n            organizationId: z.string().uuid()\n        }),\n        query: z.object({\n            page: z.coerce.number().int().min(1).default(1),\n            limit: z.coerce.number().int().min(1).max(100).default(20),\n            sortBy: z.string().default('createdAt'),\n            sortOrder: z.enum(['asc', 'desc']).default('desc'),\n            search: z.string().max(200).optional(),\n            type: z.enum(['sales_forecast', 'demand_prediction', 'churn_prediction', 'revenue_forecast', 'inventory_optimization', 'customer_lifetime_value', 'market_trend', 'risk_assessment']).optional(),\n            status: z.enum(['pending', 'processing', 'completed', 'failed', 'cancelled']).optional(),\n            modelType: z.enum(['linear_regression', 'decision_tree', 'random_forest', 'neural_network', 'time_series', 'clustering', 'classification', 'deep_learning']).optional(),\n            accuracy: z.enum(['low', 'medium', 'high', 'very_high']).optional(),\n            isActive: z.coerce.boolean().optional(),\n            needsRetraining: z.coerce.boolean().optional(),\n            hasPredictions: z.coerce.boolean().optional(),\n            minAccuracy: z.coerce.number().min(0).max(1).optional(),\n            maxAccuracy: z.coerce.number().min(0).max(1).optional(),\n            lastPredictionFrom: z.coerce.date().optional(),\n            lastPredictionTo: z.coerce.date().optional(),\n            nextRetrainFrom: z.coerce.date().optional(),\n            nextRetrainTo: z.coerce.date().optional()\n        })\n    }), predictiveAnalyticsController.searchPredictiveAnalytics",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\predictive-analytics.routes.js",
        "start": 93,
        "end": 117,
        "startLoc": {
          "line": 93,
          "column": 40,
          "position": 1784
        },
        "endLoc": {
          "line": 117,
          "column": 26,
          "position": 2275
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\predictive-analytics.routes.js",
        "start": 68,
        "end": 92,
        "startLoc": {
          "line": 68,
          "column": 33,
          "position": 1278
        },
        "endLoc": {
          "line": 92,
          "column": 37,
          "position": 1769
        }
      }
    },
    {
      "format": "javascript",
      "lines": 23,
      "fragment": "productId: z.string().uuid().optional(),\n                description: z.string().min(1).max(500),\n                quantity: z.number().min(0.01),\n                unitPrice: z.object({\n                    amount: z.number().min(0),\n                    currency: z.string().length(3)\n                }),\n                totalPrice: z.object({\n                    amount: z.number().min(0),\n                    currency: z.string().length(3)\n                }),\n                taxRate: z.number().min(0).max(100).optional(),\n                taxAmount: z.object({\n                    amount: z.number().min(0),\n                    currency: z.string().length(3)\n                }).optional(),\n                discountRate: z.number().min(0).max(100).optional(),\n                discountAmount: z.object({\n                    amount: z.number().min(0),\n                    currency: z.string().length(3)\n                }).optional(),\n                notes: z.string().max(500).optional()\n            })).optional",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\invoice.routes.js",
        "start": 79,
        "end": 101,
        "startLoc": {
          "line": 79,
          "column": 17,
          "position": 1332
        },
        "endLoc": {
          "line": 101,
          "column": 9,
          "position": 1653
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\invoice.routes.js",
        "start": 19,
        "end": 41,
        "startLoc": {
          "line": 19,
          "column": 17,
          "position": 321
        },
        "endLoc": {
          "line": 41,
          "column": 4,
          "position": 642
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "]), validateRequest({\n        params: z.object({\n            organizationId: z.string().uuid()\n        }),\n        query: z.object({\n            page: z.coerce.number().int().min(1).default(1),\n            limit: z.coerce.number().int().min(1).max(100).default(20),\n            sortBy: z.string().default('createdAt'),\n            sortOrder: z.enum(['asc', 'desc']).default('desc'),\n            search: z.string().max(200).optional(),\n            type: z.enum(['invoice'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\invoice.routes.js",
        "start": 133,
        "end": 143,
        "startLoc": {
          "line": 133,
          "column": 15,
          "position": 2183
        },
        "endLoc": {
          "line": 143,
          "column": 10,
          "position": 2356
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\predictive-analytics.routes.js",
        "start": 68,
        "end": 78,
        "startLoc": {
          "line": 68,
          "column": 17,
          "position": 1287
        },
        "endLoc": {
          "line": 78,
          "column": 17,
          "position": 1460
        }
      }
    },
    {
      "format": "javascript",
      "lines": 27,
      "fragment": ", authenticate, authorize(['invoice:read']), validateRequest({\n        params: z.object({\n            organizationId: z.string().uuid()\n        }),\n        query: z.object({\n            page: z.coerce.number().int().min(1).default(1),\n            limit: z.coerce.number().int().min(1).max(100).default(20),\n            sortBy: z.string().default('createdAt'),\n            sortOrder: z.enum(['asc', 'desc']).default('desc'),\n            search: z.string().max(200).optional(),\n            type: z.enum(['invoice', 'credit_note', 'debit_note', 'proforma', 'quote', 'receipt']).optional(),\n            status: z.enum(['draft', 'sent', 'paid', 'overdue', 'cancelled', 'refunded', 'partially_paid']).optional(),\n            paymentStatus: z.enum(['pending', 'paid', 'partial', 'overdue', 'cancelled']).optional(),\n            companyId: z.string().uuid().optional(),\n            contactId: z.string().uuid().optional(),\n            issueDateFrom: z.coerce.date().optional(),\n            issueDateTo: z.coerce.date().optional(),\n            dueDateFrom: z.coerce.date().optional(),\n            dueDateTo: z.coerce.date().optional(),\n            minAmount: z.coerce.number().min(0).optional(),\n            maxAmount: z.coerce.number().min(0).optional(),\n            isOverdue: z.coerce.boolean().optional(),\n            isPaid: z.coerce.boolean().optional(),\n            isPartiallyPaid: z.coerce.boolean().optional(),\n            isPending: z.coerce.boolean().optional()\n        })\n    }), invoiceController.searchInvoices",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\invoice.routes.js",
        "start": 160,
        "end": 186,
        "startLoc": {
          "line": 160,
          "column": 40,
          "position": 2689
        },
        "endLoc": {
          "line": 186,
          "column": 15,
          "position": 3189
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\invoice.routes.js",
        "start": 133,
        "end": 159,
        "startLoc": {
          "line": 133,
          "column": 33,
          "position": 2174
        },
        "endLoc": {
          "line": 159,
          "column": 26,
          "position": 2674
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "]), validateRequest({\n        params: z.object({\n            organizationId: z.string().uuid()\n        }),\n        query: z.object({\n            page: z.coerce.number().int().min(1).default(1),\n            limit: z.coerce.number().int().min(1).max(100).default(20),\n            sortBy: z.string().default('createdAt'),\n            sortOrder: z.enum(['asc', 'desc']).default('desc'),\n            search: z.string().max(200).optional(),\n            productId",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\inventory-kardex.routes.js",
        "start": 70,
        "end": 80,
        "startLoc": {
          "line": 70,
          "column": 17,
          "position": 1099
        },
        "endLoc": {
          "line": 80,
          "column": 10,
          "position": 1264
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\predictive-analytics.routes.js",
        "start": 68,
        "end": 78,
        "startLoc": {
          "line": 68,
          "column": 17,
          "position": 1287
        },
        "endLoc": {
          "line": 78,
          "column": 5,
          "position": 1452
        }
      }
    },
    {
      "format": "javascript",
      "lines": 29,
      "fragment": ", authenticate, authorize(['inventory:read']), validateRequest({\n        params: z.object({\n            organizationId: z.string().uuid()\n        }),\n        query: z.object({\n            page: z.coerce.number().int().min(1).default(1),\n            limit: z.coerce.number().int().min(1).max(100).default(20),\n            sortBy: z.string().default('createdAt'),\n            sortOrder: z.enum(['asc', 'desc']).default('desc'),\n            search: z.string().max(200).optional(),\n            productId: z.string().uuid().optional(),\n            warehouseId: z.string().uuid().optional(),\n            locationId: z.string().uuid().optional(),\n            movementType: z.enum(['in', 'out', 'transfer', 'adjustment', 'return', 'damage', 'expired', 'theft']).optional(),\n            movementReason: z.enum(['purchase', 'sale', 'transfer_in', 'transfer_out', 'adjustment', 'return', 'damage', 'expired', 'theft', 'production', 'consumption', 'other']).optional(),\n            status: z.enum(['pending', 'completed', 'cancelled', 'reversed']).optional(),\n            lowStock: z.coerce.boolean().optional(),\n            outOfStock: z.coerce.boolean().optional(),\n            needsReorder: z.coerce.boolean().optional(),\n            hasExpiredItems: z.coerce.boolean().optional(),\n            hasExpiringItems: z.coerce.boolean().optional(),\n            minQuantity: z.coerce.number().min(0).optional(),\n            maxQuantity: z.coerce.number().min(0).optional(),\n            minValue: z.coerce.number().min(0).optional(),\n            maxValue: z.coerce.number().min(0).optional(),\n            costMethod: z.enum(['fifo', 'lifo', 'average', 'standard']).optional(),\n            valuationMethod: z.enum(['fifo', 'lifo', 'average', 'standard']).optional()\n        })\n    }), inventoryKardexController.searchInventoryKardex",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\inventory-kardex.routes.js",
        "start": 99,
        "end": 127,
        "startLoc": {
          "line": 99,
          "column": 40,
          "position": 1689
        },
        "endLoc": {
          "line": 127,
          "column": 22,
          "position": 2273
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\inventory-kardex.routes.js",
        "start": 70,
        "end": 98,
        "startLoc": {
          "line": 70,
          "column": 33,
          "position": 1090
        },
        "endLoc": {
          "line": 98,
          "column": 33,
          "position": 1674
        }
      }
    },
    {
      "format": "javascript",
      "lines": 69,
      "fragment": "),\n            email: z.string().email().optional(),\n            phone: z.string().regex(/^[\\+]?[1-9][\\d]{0,15}$/).optional(),\n            mobile: z.string().regex(/^[\\+]?[1-9][\\d]{0,15}$/).optional(),\n            fax: z.string().regex(/^[\\+]?[1-9][\\d]{0,15}$/).optional(),\n            website: z.string().url().optional(),\n            address: z.object({\n                street: z.string().min(1),\n                city: z.string().min(1),\n                state: z.string().optional(),\n                postalCode: z.string().min(1),\n                country: z.string().min(1),\n                countryCode: z.string().length(2)\n            }).optional(),\n            birthday: z.coerce.date().optional(),\n            anniversary: z.coerce.date().optional(),\n            gender: z.enum(['male', 'female', 'other', 'prefer_not_to_say']).optional(),\n            maritalStatus: z.enum(['single', 'married', 'divorced', 'widowed', 'separated']).optional(),\n            children: z.number().int().min(0).max(20).optional(),\n            education: z.string().max(200).optional(),\n            profession: z.string().max(100).optional(),\n            industry: z.string().max(100).optional(),\n            experience: z.number().int().min(0).max(50).optional(),\n            salary: z.object({\n                amount: z.number().min(0),\n                currency: z.string().length(3)\n            }).optional(),\n            socialMedia: z.object({\n                linkedin: z.string().url().optional(),\n                twitter: z.string().url().optional(),\n                facebook: z.string().url().optional(),\n                instagram: z.string().url().optional(),\n                youtube: z.string().url().optional(),\n                tiktok: z.string().url().optional(),\n                other: z.record(z.string()).optional()\n            }).optional(),\n            communication: z.object({\n                preferredMethod: z.enum(['email', 'phone', 'sms', 'whatsapp', 'linkedin', 'other']).optional(),\n                bestTimeToCall: z.string().optional(),\n                timeZone: z.string().optional(),\n                doNotCall: z.boolean().optional(),\n                doNotEmail: z.boolean().optional(),\n                doNotSms: z.boolean().optional()\n            }).optional(),\n            settings: z.object({\n                notifications: z.object({\n                    email: z.boolean().optional(),\n                    sms: z.boolean().optional(),\n                    push: z.boolean().optional(),\n                    phone: z.boolean().optional()\n                }).optional(),\n                preferences: z.object({\n                    language: z.string().length(2).optional(),\n                    timezone: z.string().optional(),\n                    currency: z.string().length(3).optional(),\n                    dateFormat: z.string().optional(),\n                    timeFormat: z.string().optional()\n                }).optional(),\n                customFields: z.record(z.any()).optional(),\n                tags: z.array(z.string()).optional(),\n                notes: z.string().optional(),\n                internalNotes: z.string().optional()\n            }).optional(),\n            assignedUserId: z.string().uuid().optional(),\n            nextFollowUpDate: z.coerce.date().optional(),\n            leadScore: z.number().int().min(0).max(100).optional(),\n            engagementScore: z.number().int().min(0).max(100).optional()\n        })\n    }), contactController.updateContact",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\contact.routes.js",
        "start": 101,
        "end": 169,
        "startLoc": {
          "line": 101,
          "column": 2,
          "position": 1810
        },
        "endLoc": {
          "line": 169,
          "column": 14,
          "position": 2934
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\contact.routes.js",
        "start": 18,
        "end": 86,
        "startLoc": {
          "line": 18,
          "column": 2,
          "position": 353
        },
        "endLoc": {
          "line": 86,
          "column": 14,
          "position": 1477
        }
      }
    },
    {
      "format": "javascript",
      "lines": 17,
      "fragment": ": z.object({\n                companyId: z.string().uuid().optional(),\n                firstName: z.string().min(1).max(100).optional(),\n                lastName: z.string().min(1).max(100).optional(),\n                middleName: z.string().max(100).optional(),\n                title: z.string().max(100).optional(),\n                department: z.string().max(100).optional(),\n                type: z.enum(['primary', 'secondary', 'decision_maker', 'influencer', 'user', 'technical', 'financial', 'procurement']).optional(),\n                status: z.enum(['active', 'inactive', 'unsubscribed', 'bounced', 'spam', 'deleted']).optional(),\n                source: z.enum(['website', 'referral', 'cold_call', 'email', 'social_media', 'event', 'trade_show', 'webinar', 'content', 'advertising', 'other']).optional(),\n                priority: z.enum(['low', 'medium', 'high', 'urgent']).optional(),\n                email: z.string().email().optional(),\n                phone: z.string().regex(/^[\\+]?[1-9][\\d]{0,15}$/).optional(),\n                mobile: z.string().regex(/^[\\+]?[1-9][\\d]{0,15}$/).optional(),\n                fax: z.string().regex(/^[\\+]?[1-9][\\d]{0,15}$/).optional(),\n                website: z.string().url().optional(),\n                assignedUserId",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\contact.routes.js",
        "start": 365,
        "end": 381,
        "startLoc": {
          "line": 365,
          "column": 8,
          "position": 5775
        },
        "endLoc": {
          "line": 381,
          "column": 15,
          "position": 6158
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\contact.routes.js",
        "start": 91,
        "end": 24,
        "startLoc": {
          "line": 91,
          "column": 5,
          "position": 1529
        },
        "endLoc": {
          "line": 24,
          "column": 8,
          "position": 455
        }
      }
    },
    {
      "format": "javascript",
      "lines": 21,
      "fragment": ").optional(),\n                settings: z.object({\n                    notifications: z.object({\n                        email: z.boolean().optional(),\n                        sms: z.boolean().optional(),\n                        push: z.boolean().optional(),\n                        phone: z.boolean().optional()\n                    }).optional(),\n                    preferences: z.object({\n                        language: z.string().length(2).optional(),\n                        timezone: z.string().optional(),\n                        currency: z.string().length(3).optional(),\n                        dateFormat: z.string().optional(),\n                        timeFormat: z.string().optional()\n                    }).optional(),\n                    customFields: z.record(z.any()).optional(),\n                    tags: z.array(z.string()).optional(),\n                    notes: z.string().optional(),\n                    internalNotes: z.string().optional()\n                }).optional()\n            }",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\contact.routes.js",
        "start": 384,
        "end": 404,
        "startLoc": {
          "line": 384,
          "column": 4,
          "position": 6244
        },
        "endLoc": {
          "line": 404,
          "column": 2,
          "position": 6520
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\contact.routes.js",
        "start": 61,
        "end": 80,
        "startLoc": {
          "line": 61,
          "column": 2,
          "position": 1097
        },
        "endLoc": {
          "line": 80,
          "column": 2,
          "position": 1371
        }
      }
    },
    {
      "format": "javascript",
      "lines": 60,
      "fragment": "),\n            website: z.string().url().optional(),\n            email: z.string().email().optional(),\n            phone: z.string().regex(/^[\\+]?[1-9][\\d]{0,15}$/).optional(),\n            address: z.object({\n                street: z.string().min(1),\n                city: z.string().min(1),\n                state: z.string().optional(),\n                postalCode: z.string().min(1),\n                country: z.string().min(1),\n                countryCode: z.string().length(2)\n            }).optional(),\n            billingAddress: z.object({\n                street: z.string().min(1),\n                city: z.string().min(1),\n                state: z.string().optional(),\n                postalCode: z.string().min(1),\n                country: z.string().min(1),\n                countryCode: z.string().length(2)\n            }).optional(),\n            shippingAddress: z.object({\n                street: z.string().min(1),\n                city: z.string().min(1),\n                state: z.string().optional(),\n                postalCode: z.string().min(1),\n                country: z.string().min(1),\n                countryCode: z.string().length(2)\n            }).optional(),\n            taxId: z.string().min(5).max(20).optional(),\n            vatNumber: z.string().min(8).max(15).optional(),\n            registrationNumber: z.string().max(50).optional(),\n            description: z.string().max(1000).optional(),\n            annualRevenue: z.object({\n                amount: z.number().min(0),\n                currency: z.string().length(3)\n            }).optional(),\n            employeeCount: z.number().int().min(0).max(1000000).optional(),\n            foundedYear: z.number().int().min(1800).max(new Date().getFullYear()).optional(),\n            parentCompanyId: z.string().uuid().optional(),\n            assignedUserId: z.string().uuid().optional(),\n            nextFollowUpDate: z.coerce.date().optional(),\n            leadScore: z.number().int().min(0).max(100).optional(),\n            settings: z.object({\n                notifications: z.object({\n                    email: z.boolean().optional(),\n                    sms: z.boolean().optional(),\n                    push: z.boolean().optional()\n                }).optional(),\n                preferences: z.object({\n                    language: z.string().length(2).optional(),\n                    timezone: z.string().optional(),\n                    currency: z.string().length(3).optional(),\n                    dateFormat: z.string().optional()\n                }).optional(),\n                customFields: z.record(z.any()).optional(),\n                tags: z.array(z.string()).optional(),\n                notes: z.string().optional()\n            }).optional()\n        })\n    }), companyController.updateCompany",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\company.routes.js",
        "start": 86,
        "end": 145,
        "startLoc": {
          "line": 86,
          "column": 2,
          "position": 1450
        },
        "endLoc": {
          "line": 145,
          "column": 14,
          "position": 2374
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\company.routes.js",
        "start": 15,
        "end": 74,
        "startLoc": {
          "line": 15,
          "column": 2,
          "position": 273
        },
        "endLoc": {
          "line": 74,
          "column": 14,
          "position": 1197
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": ": z.object({\n                name: z.string().min(1).max(200).optional(),\n                legalName: z.string().max(200).optional(),\n                type: z.enum(['customer', 'supplier', 'partner', 'prospect', 'competitor']).optional(),\n                status: z.enum(['active', 'inactive', 'suspended', 'prospect', 'lead']).optional(),\n                size: z.enum(['startup', 'small', 'medium', 'large', 'enterprise']).optional(),\n                industry: z.string().min(1).max(100).optional(),\n                source: z.enum(['website', 'referral', 'cold_call', 'email', 'social_media', 'event', 'other']).optional(),\n                website: z.string().url().optional(),\n                email: z.string().email().optional(),\n                phone: z.string().regex(/^[\\+]?[1-9][\\d]{0,15}$/).optional(),\n                taxId",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\company.routes.js",
        "start": 262,
        "end": 273,
        "startLoc": {
          "line": 262,
          "column": 8,
          "position": 4136
        },
        "endLoc": {
          "line": 273,
          "column": 6,
          "position": 4399
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\company.routes.js",
        "start": 79,
        "end": 19,
        "startLoc": {
          "line": 79,
          "column": 5,
          "position": 1249
        },
        "endLoc": {
          "line": 19,
          "column": 8,
          "position": 335
        }
      }
    },
    {
      "format": "javascript",
      "lines": 34,
      "fragment": ").optional(),\n                taxId: z.string().min(5).max(20).optional(),\n                vatNumber: z.string().min(8).max(15).optional(),\n                registrationNumber: z.string().max(50).optional(),\n                description: z.string().max(1000).optional(),\n                annualRevenue: z.object({\n                    amount: z.number().min(0),\n                    currency: z.string().length(3)\n                }).optional(),\n                employeeCount: z.number().int().min(0).max(1000000).optional(),\n                foundedYear: z.number().int().min(1800).max(new Date().getFullYear()).optional(),\n                parentCompanyId: z.string().uuid().optional(),\n                assignedUserId: z.string().uuid().optional(),\n                nextFollowUpDate: z.coerce.date().optional(),\n                leadScore: z.number().int().min(0).max(100).optional(),\n                settings: z.object({\n                    notifications: z.object({\n                        email: z.boolean().optional(),\n                        sms: z.boolean().optional(),\n                        push: z.boolean().optional()\n                    }).optional(),\n                    preferences: z.object({\n                        language: z.string().length(2).optional(),\n                        timezone: z.string().optional(),\n                        currency: z.string().length(3).optional(),\n                        dateFormat: z.string().optional()\n                    }).optional(),\n                    customFields: z.record(z.any()).optional(),\n                    tags: z.array(z.string()).optional(),\n                    notes: z.string().optional()\n                }).optional()\n            })\n        })\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\company.routes.js",
        "start": 272,
        "end": 305,
        "startLoc": {
          "line": 272,
          "column": 25,
          "position": 4391
        },
        "endLoc": {
          "line": 305,
          "column": 2,
          "position": 4920
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\company.routes.js",
        "start": 42,
        "end": 74,
        "startLoc": {
          "line": 42,
          "column": 2,
          "position": 666
        },
        "endLoc": {
          "line": 74,
          "column": 2,
          "position": 1193
        }
      }
    },
    {
      "format": "javascript",
      "lines": 19,
      "fragment": "),\n            description: z.string().max(1000).optional(),\n            settings: z.object({\n                layers: z.array(z.object({\n                    id: z.string().uuid(),\n                    name: z.string().min(1).max(255),\n                    type: z.enum(['domain', 'application', 'infrastructure', 'presentation', 'shared']),\n                    description: z.string().max(1000),\n                    components: z.array(z.object({\n                        id: z.string().uuid(),\n                        name: z.string().min(1).max(255),\n                        type: z.enum(['entity', 'repository', 'use_case', 'service', 'controller', 'middleware', 'dto', 'route']),\n                        description: z.string().max(1000),\n                        dependencies: z.array(z.string()).default([]),\n                        interfaces: z.array(z.string()).default([]),\n                        implementation: z.string().max(5000),\n                        tests: z.array(z.string()).default([]),\n                        documentation: z.string().max(5000)\n                    })),",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\architecture.routes.js",
        "start": 51,
        "end": 69,
        "startLoc": {
          "line": 51,
          "column": 2,
          "position": 909
        },
        "endLoc": {
          "line": 69,
          "column": 2,
          "position": 1236
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\architecture.routes.js",
        "start": 10,
        "end": 28,
        "startLoc": {
          "line": 10,
          "column": 2,
          "position": 165
        },
        "endLoc": {
          "line": 28,
          "column": 2,
          "position": 492
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "]), validateRequest({\n        params: z.object({\n            organizationId: z.string().uuid()\n        }),\n        query: z.object({\n            page: z.coerce.number().int().min(1).default(1),\n            limit: z.coerce.number().int().min(1).max(100).default(20),\n            sortBy: z.string().default('createdAt'),\n            sortOrder: z.enum(['asc', 'desc']).default('desc'),\n            search: z.string().max(200).optional(),\n            type: z.enum(['hexagonal'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\architecture.routes.js",
        "start": 96,
        "end": 106,
        "startLoc": {
          "line": 96,
          "column": 20,
          "position": 1669
        },
        "endLoc": {
          "line": 106,
          "column": 12,
          "position": 1842
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\predictive-analytics.routes.js",
        "start": 68,
        "end": 78,
        "startLoc": {
          "line": 68,
          "column": 17,
          "position": 1287
        },
        "endLoc": {
          "line": 78,
          "column": 17,
          "position": 1460
        }
      }
    },
    {
      "format": "javascript",
      "lines": 22,
      "fragment": ", authenticate, authorize(['architecture:read']), validateRequest({\n        params: z.object({\n            organizationId: z.string().uuid()\n        }),\n        query: z.object({\n            page: z.coerce.number().int().min(1).default(1),\n            limit: z.coerce.number().int().min(1).max(100).default(20),\n            sortBy: z.string().default('createdAt'),\n            sortOrder: z.enum(['asc', 'desc']).default('desc'),\n            search: z.string().max(200).optional(),\n            type: z.enum(['hexagonal', 'layered', 'microservices', 'monolithic', 'event_driven']).optional(),\n            status: z.enum(['design', 'implementation', 'testing', 'deployed', 'maintenance']).optional(),\n            layerType: z.enum(['domain', 'application', 'infrastructure', 'presentation', 'shared']).optional(),\n            componentType: z.enum(['entity', 'repository', 'use_case', 'service', 'controller', 'middleware', 'dto', 'route']).optional(),\n            isActive: z.coerce.boolean().optional(),\n            hasMetrics: z.coerce.boolean().optional(),\n            minQualityScore: z.coerce.number().min(0).max(10).optional(),\n            maxQualityScore: z.coerce.number().min(0).max(10).optional(),\n            lastAnalysisFrom: z.coerce.date().optional(),\n            lastAnalysisTo: z.coerce.date().optional()\n        })\n    }), architectureController.searchArchitectures",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\architecture.routes.js",
        "start": 118,
        "end": 139,
        "startLoc": {
          "line": 118,
          "column": 40,
          "position": 2109
        },
        "endLoc": {
          "line": 139,
          "column": 20,
          "position": 2543
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\architecture.routes.js",
        "start": 96,
        "end": 117,
        "startLoc": {
          "line": 96,
          "column": 33,
          "position": 1660
        },
        "endLoc": {
          "line": 117,
          "column": 31,
          "position": 2094
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ": z.ZodObject<{\n        firstName: z.ZodOptional<z.ZodString>;\n        lastName: z.ZodOptional<z.ZodString>;\n        role: z.ZodOptional<z.ZodEnum<[\"admin\", \"manager\", \"editor\", \"viewer\"]>>;\n        status: z.ZodOptional<z.ZodEnum<[\"active\", \"inactive\", \"suspended\", \"pending\"]>>;\n    }, \"strip\", z.ZodTypeAny, {\n        status?: \"pending\" | \"active\" | \"inactive\" | \"suspended\";\n        firstName?: string;\n        lastName?: string;\n        role?: \"admin\" | \"manager\" | \"viewer\" | \"editor\";\n    }, {\n        status?: \"pending\" | \"active\" | \"inactive\" | \"suspended\";\n        firstName?: string;\n        lastName?: string;\n        role?: \"admin\" | \"manager\" | \"viewer\" | \"editor\";\n    }>;\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\user.dto.d.ts",
        "start": 84,
        "end": 100,
        "startLoc": {
          "line": 84,
          "column": 8,
          "position": 1025
        },
        "endLoc": {
          "line": 100,
          "column": 2,
          "position": 1252
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\user.dto.d.ts",
        "start": 24,
        "end": 40,
        "startLoc": {
          "line": 24,
          "column": 24,
          "position": 245
        },
        "endLoc": {
          "line": 40,
          "column": 7,
          "position": 469
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ", {\n    status?: \"pending\" | \"active\" | \"inactive\" | \"suspended\";\n    organizationId?: string;\n    id?: string;\n    email?: string;\n    createdAt?: Date;\n    updatedAt?: Date;\n    firstName?: string;\n    lastName?: string;\n    role?: \"admin\" | \"manager\" | \"viewer\" | \"editor\";\n    lastLoginAt?: Date;\n    isEmailVerified?: boolean;\n    mfaEnabled?: boolean;\n    fullName?: string;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\user.dto.d.ts",
        "start": 152,
        "end": 166,
        "startLoc": {
          "line": 152,
          "column": 2,
          "position": 1809
        },
        "endLoc": {
          "line": 166,
          "column": 2,
          "position": 1942
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\user.dto.d.ts",
        "start": 138,
        "end": 152,
        "startLoc": {
          "line": 138,
          "column": 11,
          "position": 1676
        },
        "endLoc": {
          "line": 152,
          "column": 2,
          "position": 1809
        }
      }
    },
    {
      "format": "typescript",
      "lines": 43,
      "fragment": "z.ZodObject<{\n        id: z.ZodString;\n        organizationId: z.ZodString;\n        email: z.ZodString;\n        firstName: z.ZodString;\n        lastName: z.ZodString;\n        fullName: z.ZodString;\n        role: z.ZodEnum<[\"admin\", \"manager\", \"editor\", \"viewer\"]>;\n        status: z.ZodEnum<[\"active\", \"inactive\", \"suspended\", \"pending\"]>;\n        isEmailVerified: z.ZodBoolean;\n        mfaEnabled: z.ZodBoolean;\n        lastLoginAt: z.ZodNullable<z.ZodDate>;\n        createdAt: z.ZodDate;\n        updatedAt: z.ZodDate;\n    }, \"strip\", z.ZodTypeAny, {\n        status?: \"pending\" | \"active\" | \"inactive\" | \"suspended\";\n        organizationId?: string;\n        id?: string;\n        email?: string;\n        createdAt?: Date;\n        updatedAt?: Date;\n        firstName?: string;\n        lastName?: string;\n        role?: \"admin\" | \"manager\" | \"viewer\" | \"editor\";\n        lastLoginAt?: Date;\n        isEmailVerified?: boolean;\n        mfaEnabled?: boolean;\n        fullName?: string;\n    }, {\n        status?: \"pending\" | \"active\" | \"inactive\" | \"suspended\";\n        organizationId?: string;\n        id?: string;\n        email?: string;\n        createdAt?: Date;\n        updatedAt?: Date;\n        firstName?: string;\n        lastName?: string;\n        role?: \"admin\" | \"manager\" | \"viewer\" | \"editor\";\n        lastLoginAt?: Date;\n        isEmailVerified?: boolean;\n        mfaEnabled?: boolean;\n        fullName?: string;\n    }>,",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\user.dto.d.ts",
        "start": 168,
        "end": 210,
        "startLoc": {
          "line": 168,
          "column": 2,
          "position": 1968
        },
        "endLoc": {
          "line": 210,
          "column": 2,
          "position": 2403
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\user.dto.d.ts",
        "start": 124,
        "end": 166,
        "startLoc": {
          "line": 124,
          "column": 2,
          "position": 1511
        },
        "endLoc": {
          "line": 166,
          "column": 2,
          "position": 1943
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "{\n        status?: \"pending\" | \"active\" | \"inactive\" | \"suspended\";\n        organizationId?: string;\n        id?: string;\n        email?: string;\n        createdAt?: Date;\n        updatedAt?: Date;\n        firstName?: string;\n        lastName?: string;\n        role?: \"admin\" | \"manager\" | \"viewer\" | \"editor\";\n        lastLoginAt?: Date;\n        isEmailVerified?: boolean;\n        mfaEnabled?: boolean;\n        fullName?: string;\n    }[",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\user.dto.d.ts",
        "start": 220,
        "end": 234,
        "startLoc": {
          "line": 220,
          "column": 2,
          "position": 2497
        },
        "endLoc": {
          "line": 234,
          "column": 2,
          "position": 2629
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\user.dto.d.ts",
        "start": 138,
        "end": 152,
        "startLoc": {
          "line": 138,
          "column": 2,
          "position": 1678
        },
        "endLoc": {
          "line": 152,
          "column": 2,
          "position": 1809
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": ", {\n    page?: number;\n    limit?: number;\n    users?: {\n        status?: \"pending\" | \"active\" | \"inactive\" | \"suspended\";\n        organizationId?: string;\n        id?: string;\n        email?: string;\n        createdAt?: Date;\n        updatedAt?: Date;\n        firstName?: string;\n        lastName?: string;\n        role?: \"admin\" | \"manager\" | \"viewer\" | \"editor\";\n        lastLoginAt?: Date;\n        isEmailVerified?: boolean;\n        mfaEnabled?: boolean;\n        fullName?: string;\n    }[];\n    total?: number;\n    totalPages?: number;\n    hasNext?: boolean;\n    hasPrevious?: boolean;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\user.dto.d.ts",
        "start": 239,
        "end": 261,
        "startLoc": {
          "line": 239,
          "column": 2,
          "position": 2666
        },
        "endLoc": {
          "line": 261,
          "column": 2,
          "position": 2860
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\user.dto.d.ts",
        "start": 217,
        "end": 239,
        "startLoc": {
          "line": 217,
          "column": 11,
          "position": 2472
        },
        "endLoc": {
          "line": 239,
          "column": 2,
          "position": 2666
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", {\n    active?: number;\n    inactive?: number;\n    total?: number;\n    byRole?: Record<string, number>;\n    byStatus?: Record<string, number>;\n    lastLogin?: {\n        today?: number;\n        thisWeek?: number;\n        thisMonth?: number;\n    };\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\user.dto.d.ts",
        "start": 292,
        "end": 303,
        "startLoc": {
          "line": 292,
          "column": 2,
          "position": 3154
        },
        "endLoc": {
          "line": 303,
          "column": 2,
          "position": 3246
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\user.dto.d.ts",
        "start": 281,
        "end": 292,
        "startLoc": {
          "line": 281,
          "column": 11,
          "position": 3062
        },
        "endLoc": {
          "line": 292,
          "column": 2,
          "position": 3154
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "export type CreateUserRequest = z.infer<typeof CreateUserRequestSchema>;\nexport type UpdateUserRequest = z.infer<typeof UpdateUserRequestSchema>;\nexport type DeleteUserRequest = z.infer<typeof DeleteUserRequestSchema>;\nexport type GetUserRequest = z.infer<typeof GetUserRequestSchema>;\nexport type SearchUsersRequest = z.infer<typeof SearchUsersRequestSchema>;\nexport type BulkUpdateUsersRequest = z.infer<typeof BulkUpdateUsersRequestSchema>;\nexport type BulkDeleteUsersRequest = z.infer<typeof BulkDeleteUsersRequestSchema>;\nexport type UserResponse = z.infer<typeof UserResponseSchema>;\nexport type UserListResponse = z.infer<typeof UserListResponseSchema>;\nexport type UserStatsResponse = z.infer<typeof UserStatsResponseSchema>;\nexport type ApiResponse<T = any> = z.infer<typeof ApiResponseSchema> & {\n    data?: T;",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\user.dto.d.ts",
        "start": 326,
        "end": 337,
        "startLoc": {
          "line": 326,
          "column": 1,
          "position": 3456
        },
        "endLoc": {
          "line": 337,
          "column": 2,
          "position": 3670
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\dto\\user.dto.ts",
        "start": 122,
        "end": 133,
        "startLoc": {
          "line": 122,
          "column": 1,
          "position": 1497
        },
        "endLoc": {
          "line": 133,
          "column": 2,
          "position": 1712
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", {\n        userId?: string;\n        organizationId?: string;\n        tags?: string[];\n        categories?: string[];\n        types?: SearchResultType[];\n        subcategories?: string[];\n        dateFrom?: string;\n        dateTo?: string;\n        minScore?: number;\n        minRelevance?: number;\n        minConfidence?: number;\n        customFilters?: Record<string, any>;\n    }>>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\search.dto.d.ts",
        "start": 32,
        "end": 45,
        "startLoc": {
          "line": 32,
          "column": 2,
          "position": 416
        },
        "endLoc": {
          "line": 45,
          "column": 3,
          "position": 532
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\search.dto.d.ts",
        "start": 19,
        "end": 32,
        "startLoc": {
          "line": 19,
          "column": 11,
          "position": 300
        },
        "endLoc": {
          "line": 32,
          "column": 2,
          "position": 416
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "{\n        userId?: string;\n        organizationId?: string;\n        tags?: string[];\n        categories?: string[];\n        types?: SearchResultType[];\n        subcategories?: string[];\n        dateFrom?: string;\n        dateTo?: string;\n        minScore?: number;\n        minRelevance?: number;\n        minConfidence?: number;\n        customFilters?: Record<string, any>;\n    };",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\search.dto.d.ts",
        "start": 57,
        "end": 70,
        "startLoc": {
          "line": 57,
          "column": 2,
          "position": 686
        },
        "endLoc": {
          "line": 70,
          "column": 2,
          "position": 800
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\search.dto.d.ts",
        "start": 19,
        "end": 32,
        "startLoc": {
          "line": 19,
          "column": 2,
          "position": 302
        },
        "endLoc": {
          "line": 32,
          "column": 2,
          "position": 416
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": ", {\n    query?: string;\n    page?: number;\n    limit?: number;\n    filters?: {\n        userId?: string;\n        organizationId?: string;\n        tags?: string[];\n        categories?: string[];\n        types?: SearchResultType[];\n        subcategories?: string[];\n        dateFrom?: string;\n        dateTo?: string;\n        minScore?: number;\n        minRelevance?: number;\n        minConfidence?: number;\n        customFilters?: Record<string, any>;\n    };\n    sortBy?: string;\n    sortOrder?: \"asc\" | \"desc\";\n    searchType?: SearchType;\n    includeMetadata?: boolean;\n    highlightMatches?: boolean;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\search.dto.d.ts",
        "start": 76,
        "end": 99,
        "startLoc": {
          "line": 76,
          "column": 2,
          "position": 847
        },
        "endLoc": {
          "line": 99,
          "column": 2,
          "position": 1041
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\search.dto.d.ts",
        "start": 53,
        "end": 76,
        "startLoc": {
          "line": 53,
          "column": 11,
          "position": 653
        },
        "endLoc": {
          "line": 76,
          "column": 2,
          "position": 847
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", {\n    type?: SearchResultType;\n    metadata?: Record<string, any>;\n    title?: string;\n    tags?: string[];\n    description?: string;\n    content?: string;\n    category?: string;\n    entityId?: string;\n    subcategory?: string;\n    entity?: any;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\search.dto.d.ts",
        "start": 138,
        "end": 149,
        "startLoc": {
          "line": 138,
          "column": 2,
          "position": 1448
        },
        "endLoc": {
          "line": 149,
          "column": 2,
          "position": 1541
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\search.dto.d.ts",
        "start": 127,
        "end": 138,
        "startLoc": {
          "line": 127,
          "column": 11,
          "position": 1355
        },
        "endLoc": {
          "line": 138,
          "column": 2,
          "position": 1448
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ", {\n    type?: SearchResultType;\n    metadata?: Record<string, any>;\n    title?: string;\n    id?: string;\n    tags?: string[];\n    createdAt?: string;\n    updatedAt?: string;\n    description?: string;\n    score?: number;\n    content?: string;\n    category?: string;\n    entityType?: string;\n    entityId?: string;\n    subcategory?: string;\n    confidence?: number;\n    relevance?: number;\n    entityData?: Record<string, any>;\n    indexedAt?: string;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\search.dto.d.ts",
        "start": 188,
        "end": 207,
        "startLoc": {
          "line": 188,
          "column": 2,
          "position": 1931
        },
        "endLoc": {
          "line": 207,
          "column": 2,
          "position": 2094
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\search.dto.d.ts",
        "start": 169,
        "end": 188,
        "startLoc": {
          "line": 169,
          "column": 11,
          "position": 1768
        },
        "endLoc": {
          "line": 188,
          "column": 2,
          "position": 1931
        }
      }
    },
    {
      "format": "typescript",
      "lines": 58,
      "fragment": "z.ZodObject<{\n        id: z.ZodString;\n        type: z.ZodNativeEnum<typeof SearchResultType>;\n        entityId: z.ZodString;\n        entityType: z.ZodString;\n        title: z.ZodString;\n        description: z.ZodString;\n        content: z.ZodString;\n        tags: z.ZodArray<z.ZodString, \"many\">;\n        score: z.ZodNumber;\n        relevance: z.ZodNumber;\n        confidence: z.ZodNumber;\n        category: z.ZodString;\n        subcategory: z.ZodOptional<z.ZodString>;\n        metadata: z.ZodRecord<z.ZodString, z.ZodAny>;\n        entityData: z.ZodRecord<z.ZodString, z.ZodAny>;\n        createdAt: z.ZodString;\n        updatedAt: z.ZodString;\n        indexedAt: z.ZodString;\n    }, \"strip\", z.ZodTypeAny, {\n        type?: SearchResultType;\n        metadata?: Record<string, any>;\n        title?: string;\n        id?: string;\n        tags?: string[];\n        createdAt?: string;\n        updatedAt?: string;\n        description?: string;\n        score?: number;\n        content?: string;\n        category?: string;\n        entityType?: string;\n        entityId?: string;\n        subcategory?: string;\n        confidence?: number;\n        relevance?: number;\n        entityData?: Record<string, any>;\n        indexedAt?: string;\n    }, {\n        type?: SearchResultType;\n        metadata?: Record<string, any>;\n        title?: string;\n        id?: string;\n        tags?: string[];\n        createdAt?: string;\n        updatedAt?: string;\n        description?: string;\n        score?: number;\n        content?: string;\n        category?: string;\n        entityType?: string;\n        entityId?: string;\n        subcategory?: string;\n        confidence?: number;\n        relevance?: number;\n        entityData?: Record<string, any>;\n        indexedAt?: string;\n    }>,",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\search.dto.d.ts",
        "start": 228,
        "end": 285,
        "startLoc": {
          "line": 228,
          "column": 2,
          "position": 2313
        },
        "endLoc": {
          "line": 285,
          "column": 2,
          "position": 2858
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\search.dto.d.ts",
        "start": 150,
        "end": 207,
        "startLoc": {
          "line": 150,
          "column": 2,
          "position": 1553
        },
        "endLoc": {
          "line": 207,
          "column": 2,
          "position": 2095
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": "{\n        type?: SearchResultType;\n        metadata?: Record<string, any>;\n        title?: string;\n        id?: string;\n        tags?: string[];\n        createdAt?: string;\n        updatedAt?: string;\n        description?: string;\n        score?: number;\n        content?: string;\n        category?: string;\n        entityType?: string;\n        entityId?: string;\n        subcategory?: string;\n        confidence?: number;\n        relevance?: number;\n        entityData?: Record<string, any>;\n        indexedAt?: string;\n    }[",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\search.dto.d.ts",
        "start": 297,
        "end": 316,
        "startLoc": {
          "line": 297,
          "column": 2,
          "position": 3010
        },
        "endLoc": {
          "line": 316,
          "column": 2,
          "position": 3172
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\search.dto.d.ts",
        "start": 169,
        "end": 188,
        "startLoc": {
          "line": 169,
          "column": 2,
          "position": 1770
        },
        "endLoc": {
          "line": 188,
          "column": 2,
          "position": 1931
        }
      }
    },
    {
      "format": "typescript",
      "lines": 29,
      "fragment": ", {\n    page?: number;\n    limit?: number;\n    filters?: Record<string, any[]>;\n    results?: {\n        type?: SearchResultType;\n        metadata?: Record<string, any>;\n        title?: string;\n        id?: string;\n        tags?: string[];\n        createdAt?: string;\n        updatedAt?: string;\n        description?: string;\n        score?: number;\n        content?: string;\n        category?: string;\n        entityType?: string;\n        entityId?: string;\n        subcategory?: string;\n        confidence?: number;\n        relevance?: number;\n        entityData?: Record<string, any>;\n        indexedAt?: string;\n    }[];\n    executionTime?: number;\n    totalCount?: number;\n    totalPages?: number;\n    suggestions?: string[];\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\search.dto.d.ts",
        "start": 321,
        "end": 349,
        "startLoc": {
          "line": 321,
          "column": 2,
          "position": 3211
        },
        "endLoc": {
          "line": 349,
          "column": 2,
          "position": 3453
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\search.dto.d.ts",
        "start": 293,
        "end": 321,
        "startLoc": {
          "line": 293,
          "column": 11,
          "position": 2969
        },
        "endLoc": {
          "line": 321,
          "column": 2,
          "position": 3211
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "z.ZodObject<{\n        text: z.ZodString;\n        type: z.ZodNativeEnum<typeof SearchResultType>;\n        category: z.ZodString;\n        score: z.ZodNumber;\n        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;\n    }, \"strip\", z.ZodTypeAny, {\n        type?: SearchResultType;\n        metadata?: Record<string, any>;\n        text?: string;\n        score?: number;\n        category?: string;\n    }, {\n        type?: SearchResultType;\n        metadata?: Record<string, any>;\n        text?: string;\n        score?: number;\n        category?: string;\n    }>,",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\search.dto.d.ts",
        "start": 351,
        "end": 369,
        "startLoc": {
          "line": 351,
          "column": 2,
          "position": 3479
        },
        "endLoc": {
          "line": 369,
          "column": 2,
          "position": 3664
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\search.dto.d.ts",
        "start": 208,
        "end": 226,
        "startLoc": {
          "line": 208,
          "column": 2,
          "position": 2106
        },
        "endLoc": {
          "line": 226,
          "column": 2,
          "position": 2288
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ", {\n    executionTime?: number;\n    totalCount?: number;\n    suggestions?: {\n        type?: SearchResultType;\n        metadata?: Record<string, any>;\n        text?: string;\n        score?: number;\n        category?: string;\n    }[];\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\search.dto.d.ts",
        "start": 382,
        "end": 392,
        "startLoc": {
          "line": 382,
          "column": 2,
          "position": 3777
        },
        "endLoc": {
          "line": 392,
          "column": 2,
          "position": 3857
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\search.dto.d.ts",
        "start": 372,
        "end": 382,
        "startLoc": {
          "line": 372,
          "column": 11,
          "position": 3697
        },
        "endLoc": {
          "line": 382,
          "column": 2,
          "position": 3777
        }
      }
    },
    {
      "format": "javascript",
      "lines": 24,
      "fragment": "name: z.string().min(1, 'Variant name is required').max(100, 'Variant name cannot exceed 100 characters'),\n        sku: z.string().min(1, 'Variant SKU is required').max(100, 'Variant SKU cannot exceed 100 characters'),\n        price: z.object({\n            amount: z.number().min(0, 'Variant price must be non-negative'),\n            currency: z.string().length(3, 'Currency must be 3 characters')\n        }),\n        compareAtPrice: z.object({\n            amount: z.number().min(0, 'Compare at price must be non-negative'),\n            currency: z.string().length(3, 'Currency must be 3 characters')\n        }).optional(),\n        costPrice: z.object({\n            amount: z.number().min(0, 'Cost price must be non-negative'),\n            currency: z.string().length(3, 'Currency must be 3 characters')\n        }).optional(),\n        inventory: z.object({\n            quantity: z.number().int().min(0, 'Quantity must be non-negative'),\n            reserved: z.number().int().min(0, 'Reserved quantity must be non-negative'),\n            available: z.number().int().min(0, 'Available quantity must be non-negative')\n        }),\n        attributes: z.record(z.any()).default({}),\n        isActive: z.boolean().default(true)\n    })).optional()\n});\nexport const ProductIdParamSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\product.dto.js",
        "start": 147,
        "end": 170,
        "startLoc": {
          "line": 147,
          "column": 9,
          "position": 2458
        },
        "endLoc": {
          "line": 170,
          "column": 21,
          "position": 2812
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\product.dto.js",
        "start": 63,
        "end": 86,
        "startLoc": {
          "line": 63,
          "column": 9,
          "position": 1040
        },
        "endLoc": {
          "line": 86,
          "column": 27,
          "position": 1394
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ".optional(),\n    settings: z.object({\n        modelType: z.enum(['linear_regression', 'decision_tree', 'random_forest', 'neural_network', 'time_series', 'clustering', 'classification', 'deep_learning']).optional(),\n        trainingPeriod: z.number().int().min(1).max(3650).optional(),\n        predictionHorizon: z.number().int().min(1).max(365).optional(),\n        confidenceThreshold: z.number().min(0).max(1).optional(),\n        autoRetrain: z.boolean().optional(),\n        retrainFrequency: z.number().int().min(1).max(365).optional(),\n        dataSource: z.array(z.string().min(1)).optional(),\n        features: z.array(z.string().min(1)).optional(),\n        targetVariable: z.string().min(1).max(100).optional(),\n        validationMethod: z.enum(['cross_validation', 'holdout', 'time_series_split']).optional(),\n        hyperparameters: z.record(z.any()).optional(),\n        customFields: CustomFieldsSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\predictive-analytics.dto.js",
        "start": 36,
        "end": 49,
        "startLoc": {
          "line": 36,
          "column": 11,
          "position": 665
        },
        "endLoc": {
          "line": 49,
          "column": 19,
          "position": 970
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\predictive-analytics.routes.js",
        "start": 39,
        "end": 52,
        "startLoc": {
          "line": 39,
          "column": 2,
          "position": 750
        },
        "endLoc": {
          "line": 52,
          "column": 2,
          "position": 1055
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": "type: z.enum(['sales_forecast', 'demand_prediction', 'churn_prediction', 'revenue_forecast', 'inventory_optimization', 'customer_lifetime_value', 'market_trend', 'risk_assessment']).optional(),\n    status: z.enum(['pending', 'processing', 'completed', 'failed', 'cancelled']).optional(),\n    modelType: z.enum(['linear_regression', 'decision_tree', 'random_forest', 'neural_network', 'time_series', 'clustering', 'classification', 'deep_learning']).optional(),\n    accuracy: z.enum(['low', 'medium', 'high', 'very_high']).optional(),\n    isActive: z.coerce.boolean().optional(),\n    needsRetraining: z.coerce.boolean().optional(),\n    hasPredictions: z.coerce.boolean().optional(),\n    minAccuracy: z.coerce.number().min(0).max(1).optional(),\n    maxAccuracy: z.coerce.number().min(0).max(1).optional(),\n    lastPredictionFrom: z.coerce.date().optional(),\n    lastPredictionTo: z.coerce.date().optional(),\n    nextRetrainFrom: z.coerce.date().optional(),\n    nextRetrainTo: z.coerce.date().optional()\n});",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\predictive-analytics.dto.js",
        "start": 67,
        "end": 80,
        "startLoc": {
          "line": 67,
          "column": 5,
          "position": 1191
        },
        "endLoc": {
          "line": 80,
          "column": 2,
          "position": 1499
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\predictive-analytics.routes.js",
        "start": 78,
        "end": 92,
        "startLoc": {
          "line": 78,
          "column": 13,
          "position": 1452
        },
        "endLoc": {
          "line": 92,
          "column": 2,
          "position": 1763
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ", {\n        language?: string;\n        features?: {\n            ai?: boolean;\n            analytics?: boolean;\n            integrations?: boolean;\n            customFields?: boolean;\n        };\n        currency?: string;\n        notifications?: {\n            push?: boolean;\n            email?: boolean;\n            sms?: boolean;\n        };\n        timezone?: string;\n        dateFormat?: string;\n        limits?: {\n            users?: number;\n            companies?: number;\n            contacts?: number;\n            invoices?: number;\n            products?: number;\n            storage?: number;\n        };\n    }>>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\organization.dto.d.ts",
        "start": 88,
        "end": 112,
        "startLoc": {
          "line": 88,
          "column": 2,
          "position": 861
        },
        "endLoc": {
          "line": 112,
          "column": 3,
          "position": 1036
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\organization.dto.d.ts",
        "start": 64,
        "end": 88,
        "startLoc": {
          "line": 64,
          "column": 11,
          "position": 686
        },
        "endLoc": {
          "line": 88,
          "column": 2,
          "position": 861
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": "{\n        language?: string;\n        features?: {\n            ai?: boolean;\n            analytics?: boolean;\n            integrations?: boolean;\n            customFields?: boolean;\n        };\n        currency?: string;\n        notifications?: {\n            push?: boolean;\n            email?: boolean;\n            sms?: boolean;\n        };\n        timezone?: string;\n        dateFormat?: string;\n        limits?: {\n            users?: number;\n            companies?: number;\n            contacts?: number;\n            invoices?: number;\n            products?: number;\n            storage?: number;\n        };\n    };",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\organization.dto.d.ts",
        "start": 120,
        "end": 144,
        "startLoc": {
          "line": 120,
          "column": 2,
          "position": 1130
        },
        "endLoc": {
          "line": 144,
          "column": 2,
          "position": 1303
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\organization.dto.d.ts",
        "start": 64,
        "end": 88,
        "startLoc": {
          "line": 64,
          "column": 2,
          "position": 688
        },
        "endLoc": {
          "line": 88,
          "column": 2,
          "position": 861
        }
      }
    },
    {
      "format": "typescript",
      "lines": 34,
      "fragment": ", {\n    name?: string;\n    website?: string;\n    description?: string;\n    slug?: string;\n    settings?: {\n        language?: string;\n        features?: {\n            ai?: boolean;\n            analytics?: boolean;\n            integrations?: boolean;\n            customFields?: boolean;\n        };\n        currency?: string;\n        notifications?: {\n            push?: boolean;\n            email?: boolean;\n            sms?: boolean;\n        };\n        timezone?: string;\n        dateFormat?: string;\n        limits?: {\n            users?: number;\n            companies?: number;\n            contacts?: number;\n            invoices?: number;\n            products?: number;\n            storage?: number;\n        };\n    };\n    logo?: string;\n    subscriptionTier?: \"free\" | \"enterprise\" | \"basic\" | \"pro\";\n    billingEmail?: string;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\organization.dto.d.ts",
        "start": 148,
        "end": 181,
        "startLoc": {
          "line": 148,
          "column": 2,
          "position": 1342
        },
        "endLoc": {
          "line": 181,
          "column": 2,
          "position": 1595
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\organization.dto.d.ts",
        "start": 115,
        "end": 148,
        "startLoc": {
          "line": 115,
          "column": 11,
          "position": 1089
        },
        "endLoc": {
          "line": 148,
          "column": 2,
          "position": 1342
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "<z.ZodBoolean>;\n        }, \"strip\", z.ZodTypeAny, {\n            push?: boolean;\n            email?: boolean;\n            sms?: boolean;\n        }, {\n            push?: boolean;\n            email?: boolean;\n            sms?: boolean;\n        }>>;\n        features: z.ZodOptional",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\organization.dto.d.ts",
        "start": 195,
        "end": 205,
        "startLoc": {
          "line": 195,
          "column": 12,
          "position": 1788
        },
        "endLoc": {
          "line": 205,
          "column": 12,
          "position": 1874
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\organization.dto.d.ts",
        "start": 16,
        "end": 26,
        "startLoc": {
          "line": 16,
          "column": 11,
          "position": 218
        },
        "endLoc": {
          "line": 26,
          "column": 11,
          "position": 304
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "<z.ZodBoolean>;\n        }, \"strip\", z.ZodTypeAny, {\n            ai?: boolean;\n            analytics?: boolean;\n            integrations?: boolean;\n            customFields?: boolean;\n        }, {\n            ai?: boolean;\n            analytics?: boolean;\n            integrations?: boolean;\n            customFields?: boolean;\n        }>>;\n        limits: z.ZodOptional",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\organization.dto.d.ts",
        "start": 209,
        "end": 221,
        "startLoc": {
          "line": 209,
          "column": 12,
          "position": 1931
        },
        "endLoc": {
          "line": 221,
          "column": 12,
          "position": 2033
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\organization.dto.d.ts",
        "start": 30,
        "end": 42,
        "startLoc": {
          "line": 30,
          "column": 11,
          "position": 361
        },
        "endLoc": {
          "line": 42,
          "column": 11,
          "position": 463
        }
      }
    },
    {
      "format": "typescript",
      "lines": 66,
      "fragment": "<z.ZodNumber>;\n        }, \"strip\", z.ZodTypeAny, {\n            users?: number;\n            companies?: number;\n            contacts?: number;\n            invoices?: number;\n            products?: number;\n            storage?: number;\n        }, {\n            users?: number;\n            companies?: number;\n            contacts?: number;\n            invoices?: number;\n            products?: number;\n            storage?: number;\n        }>>;\n    }, \"strip\", z.ZodTypeAny, {\n        language?: string;\n        features?: {\n            ai?: boolean;\n            analytics?: boolean;\n            integrations?: boolean;\n            customFields?: boolean;\n        };\n        currency?: string;\n        notifications?: {\n            push?: boolean;\n            email?: boolean;\n            sms?: boolean;\n        };\n        timezone?: string;\n        dateFormat?: string;\n        limits?: {\n            users?: number;\n            companies?: number;\n            contacts?: number;\n            invoices?: number;\n            products?: number;\n            storage?: number;\n        };\n    }, {\n        language?: string;\n        features?: {\n            ai?: boolean;\n            analytics?: boolean;\n            integrations?: boolean;\n            customFields?: boolean;\n        };\n        currency?: string;\n        notifications?: {\n            push?: boolean;\n            email?: boolean;\n            sms?: boolean;\n        };\n        timezone?: string;\n        dateFormat?: string;\n        limits?: {\n            users?: number;\n            companies?: number;\n            contacts?: number;\n            invoices?: number;\n            products?: number;\n            storage?: number;\n        };\n    }>>;\n    subscriptionTier: z.ZodOptional",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\organization.dto.d.ts",
        "start": 227,
        "end": 292,
        "startLoc": {
          "line": 227,
          "column": 12,
          "position": 2118
        },
        "endLoc": {
          "line": 292,
          "column": 12,
          "position": 2615
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\organization.dto.d.ts",
        "start": 48,
        "end": 113,
        "startLoc": {
          "line": 48,
          "column": 11,
          "position": 548
        },
        "endLoc": {
          "line": 113,
          "column": 11,
          "position": 1045
        }
      }
    },
    {
      "format": "typescript",
      "lines": 31,
      "fragment": "?: string;\n    settings?: {\n        language?: string;\n        features?: {\n            ai?: boolean;\n            analytics?: boolean;\n            integrations?: boolean;\n            customFields?: boolean;\n        };\n        currency?: string;\n        notifications?: {\n            push?: boolean;\n            email?: boolean;\n            sms?: boolean;\n        };\n        timezone?: string;\n        dateFormat?: string;\n        limits?: {\n            users?: number;\n            companies?: number;\n            contacts?: number;\n            invoices?: number;\n            products?: number;\n            storage?: number;\n        };\n    };\n    logo?: string;\n    subscriptionTier?: \"free\" | \"enterprise\" | \"basic\" | \"pro\";\n    billingEmail?: string;\n}, {\n    status",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\organization.dto.d.ts",
        "start": 299,
        "end": 329,
        "startLoc": {
          "line": 299,
          "column": 12,
          "position": 2728
        },
        "endLoc": {
          "line": 329,
          "column": 7,
          "position": 2956
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\organization.dto.d.ts",
        "start": 119,
        "end": 149,
        "startLoc": {
          "line": 119,
          "column": 5,
          "position": 1119
        },
        "endLoc": {
          "line": 149,
          "column": 5,
          "position": 1347
        }
      }
    },
    {
      "format": "typescript",
      "lines": 35,
      "fragment": ", {\n    status?: \"active\" | \"inactive\" | \"suspended\" | \"trial\";\n    name?: string;\n    website?: string;\n    description?: string;\n    settings?: {\n        language?: string;\n        features?: {\n            ai?: boolean;\n            analytics?: boolean;\n            integrations?: boolean;\n            customFields?: boolean;\n        };\n        currency?: string;\n        notifications?: {\n            push?: boolean;\n            email?: boolean;\n            sms?: boolean;\n        };\n        timezone?: string;\n        dateFormat?: string;\n        limits?: {\n            users?: number;\n            companies?: number;\n            contacts?: number;\n            invoices?: number;\n            products?: number;\n            storage?: number;\n        };\n    };\n    logo?: string;\n    subscriptionTier?: \"free\" | \"enterprise\" | \"basic\" | \"pro\";\n    billingEmail?: string;\n}>;\nexport declare const DeleteOrganizationRequestSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\organization.dto.d.ts",
        "start": 328,
        "end": 362,
        "startLoc": {
          "line": 328,
          "column": 2,
          "position": 2951
        },
        "endLoc": {
          "line": 362,
          "column": 32,
          "position": 3225
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\organization.dto.d.ts",
        "start": 295,
        "end": 182,
        "startLoc": {
          "line": 295,
          "column": 11,
          "position": 2686
        },
        "endLoc": {
          "line": 182,
          "column": 32,
          "position": 1604
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ";\n        }, \"strip\", z.ZodTypeAny, {\n            ai?: boolean;\n            analytics?: boolean;\n            integrations?: boolean;\n            customFields?: boolean;\n        }, {\n            ai?: boolean;\n            analytics?: boolean;\n            integrations?: boolean;\n            customFields?: boolean;\n        }>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\organization.dto.d.ts",
        "start": 433,
        "end": 444,
        "startLoc": {
          "line": 433,
          "column": 11,
          "position": 4030
        },
        "endLoc": {
          "line": 444,
          "column": 2,
          "position": 4118
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\organization.dto.d.ts",
        "start": 30,
        "end": 41,
        "startLoc": {
          "line": 30,
          "column": 2,
          "position": 366
        },
        "endLoc": {
          "line": 41,
          "column": 3,
          "position": 454
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ";\n        }, \"strip\", z.ZodTypeAny, {\n            users?: number;\n            companies?: number;\n            contacts?: number;\n            invoices?: number;\n            products?: number;\n            storage?: number;\n        }, {\n            users?: number;\n            companies?: number;\n            contacts?: number;\n            invoices?: number;\n            products?: number;\n            storage?: number;\n        }>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\organization.dto.d.ts",
        "start": 451,
        "end": 466,
        "startLoc": {
          "line": 451,
          "column": 10,
          "position": 4183
        },
        "endLoc": {
          "line": 466,
          "column": 2,
          "position": 4303
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\organization.dto.d.ts",
        "start": 48,
        "end": 63,
        "startLoc": {
          "line": 48,
          "column": 2,
          "position": 553
        },
        "endLoc": {
          "line": 63,
          "column": 3,
          "position": 673
        }
      }
    },
    {
      "format": "typescript",
      "lines": 50,
      "fragment": ";\n    }, \"strip\", z.ZodTypeAny, {\n        language?: string;\n        features?: {\n            ai?: boolean;\n            analytics?: boolean;\n            integrations?: boolean;\n            customFields?: boolean;\n        };\n        currency?: string;\n        notifications?: {\n            push?: boolean;\n            email?: boolean;\n            sms?: boolean;\n        };\n        timezone?: string;\n        dateFormat?: string;\n        limits?: {\n            users?: number;\n            companies?: number;\n            contacts?: number;\n            invoices?: number;\n            products?: number;\n            storage?: number;\n        };\n    }, {\n        language?: string;\n        features?: {\n            ai?: boolean;\n            analytics?: boolean;\n            integrations?: boolean;\n            customFields?: boolean;\n        };\n        currency?: string;\n        notifications?: {\n            push?: boolean;\n            email?: boolean;\n            sms?: boolean;\n        };\n        timezone?: string;\n        dateFormat?: string;\n        limits?: {\n            users?: number;\n            companies?: number;\n            contacts?: number;\n            invoices?: number;\n            products?: number;\n            storage?: number;\n        };\n    }>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\organization.dto.d.ts",
        "start": 466,
        "end": 515,
        "startLoc": {
          "line": 466,
          "column": 2,
          "position": 4304
        },
        "endLoc": {
          "line": 515,
          "column": 2,
          "position": 4666
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\organization.dto.d.ts",
        "start": 63,
        "end": 88,
        "startLoc": {
          "line": 63,
          "column": 3,
          "position": 674
        },
        "endLoc": {
          "line": 88,
          "column": 2,
          "position": 861
        }
      }
    },
    {
      "format": "typescript",
      "lines": 30,
      "fragment": ";\n    slug?: string;\n    settings?: {\n        language?: string;\n        features?: {\n            ai?: boolean;\n            analytics?: boolean;\n            integrations?: boolean;\n            customFields?: boolean;\n        };\n        currency?: string;\n        notifications?: {\n            push?: boolean;\n            email?: boolean;\n            sms?: boolean;\n        };\n        timezone?: string;\n        dateFormat?: string;\n        limits?: {\n            users?: number;\n            companies?: number;\n            contacts?: number;\n            invoices?: number;\n            products?: number;\n            storage?: number;\n        };\n    };\n    logo?: string;\n    subscriptionTier?: \"free\" | \"enterprise\" | \"basic\" | \"pro\";\n    trialEndsAt",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\organization.dto.d.ts",
        "start": 531,
        "end": 560,
        "startLoc": {
          "line": 531,
          "column": 8,
          "position": 4857
        },
        "endLoc": {
          "line": 560,
          "column": 12,
          "position": 5076
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\organization.dto.d.ts",
        "start": 118,
        "end": 147,
        "startLoc": {
          "line": 118,
          "column": 7,
          "position": 1115
        },
        "endLoc": {
          "line": 147,
          "column": 13,
          "position": 1334
        }
      }
    },
    {
      "format": "typescript",
      "lines": 40,
      "fragment": ", {\n    status?: \"active\" | \"inactive\" | \"suspended\" | \"trial\";\n    name?: string;\n    id?: string;\n    website?: string;\n    createdAt?: Date;\n    updatedAt?: Date;\n    description?: string;\n    isActive?: boolean;\n    slug?: string;\n    settings?: {\n        language?: string;\n        features?: {\n            ai?: boolean;\n            analytics?: boolean;\n            integrations?: boolean;\n            customFields?: boolean;\n        };\n        currency?: string;\n        notifications?: {\n            push?: boolean;\n            email?: boolean;\n            sms?: boolean;\n        };\n        timezone?: string;\n        dateFormat?: string;\n        limits?: {\n            users?: number;\n            companies?: number;\n            contacts?: number;\n            invoices?: number;\n            products?: number;\n            storage?: number;\n        };\n    };\n    logo?: string;\n    subscriptionTier?: \"free\" | \"enterprise\" | \"basic\" | \"pro\";\n    trialEndsAt?: Date;\n    billingEmail?: string;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\organization.dto.d.ts",
        "start": 562,
        "end": 601,
        "startLoc": {
          "line": 562,
          "column": 2,
          "position": 5092
        },
        "endLoc": {
          "line": 601,
          "column": 2,
          "position": 5405
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\organization.dto.d.ts",
        "start": 523,
        "end": 562,
        "startLoc": {
          "line": 523,
          "column": 11,
          "position": 4779
        },
        "endLoc": {
          "line": 562,
          "column": 2,
          "position": 5092
        }
      }
    },
    {
      "format": "typescript",
      "lines": 198,
      "fragment": "z.ZodObject<{\n        id: z.ZodString;\n        name: z.ZodString;\n        slug: z.ZodString;\n        description: z.ZodNullable<z.ZodString>;\n        website: z.ZodNullable<z.ZodString>;\n        logo: z.ZodNullable<z.ZodString>;\n        settings: z.ZodObject<{\n            timezone: z.ZodString;\n            currency: z.ZodString;\n            language: z.ZodString;\n            dateFormat: z.ZodString;\n            notifications: z.ZodObject<{\n                email: z.ZodBoolean;\n                push: z.ZodBoolean;\n                sms: z.ZodBoolean;\n            }, \"strip\", z.ZodTypeAny, {\n                push?: boolean;\n                email?: boolean;\n                sms?: boolean;\n            }, {\n                push?: boolean;\n                email?: boolean;\n                sms?: boolean;\n            }>;\n            features: z.ZodObject<{\n                ai: z.ZodBoolean;\n                analytics: z.ZodBoolean;\n                integrations: z.ZodBoolean;\n                customFields: z.ZodBoolean;\n            }, \"strip\", z.ZodTypeAny, {\n                ai?: boolean;\n                analytics?: boolean;\n                integrations?: boolean;\n                customFields?: boolean;\n            }, {\n                ai?: boolean;\n                analytics?: boolean;\n                integrations?: boolean;\n                customFields?: boolean;\n            }>;\n            limits: z.ZodObject<{\n                users: z.ZodNumber;\n                companies: z.ZodNumber;\n                contacts: z.ZodNumber;\n                products: z.ZodNumber;\n                invoices: z.ZodNumber;\n                storage: z.ZodNumber;\n            }, \"strip\", z.ZodTypeAny, {\n                users?: number;\n                companies?: number;\n                contacts?: number;\n                invoices?: number;\n                products?: number;\n                storage?: number;\n            }, {\n                users?: number;\n                companies?: number;\n                contacts?: number;\n                invoices?: number;\n                products?: number;\n                storage?: number;\n            }>;\n        }, \"strip\", z.ZodTypeAny, {\n            language?: string;\n            features?: {\n                ai?: boolean;\n                analytics?: boolean;\n                integrations?: boolean;\n                customFields?: boolean;\n            };\n            currency?: string;\n            notifications?: {\n                push?: boolean;\n                email?: boolean;\n                sms?: boolean;\n            };\n            timezone?: string;\n            dateFormat?: string;\n            limits?: {\n                users?: number;\n                companies?: number;\n                contacts?: number;\n                invoices?: number;\n                products?: number;\n                storage?: number;\n            };\n        }, {\n            language?: string;\n            features?: {\n                ai?: boolean;\n                analytics?: boolean;\n                integrations?: boolean;\n                customFields?: boolean;\n            };\n            currency?: string;\n            notifications?: {\n                push?: boolean;\n                email?: boolean;\n                sms?: boolean;\n            };\n            timezone?: string;\n            dateFormat?: string;\n            limits?: {\n                users?: number;\n                companies?: number;\n                contacts?: number;\n                invoices?: number;\n                products?: number;\n                storage?: number;\n            };\n        }>;\n        subscriptionTier: z.ZodEnum<[\"free\", \"basic\", \"pro\", \"enterprise\"]>;\n        status: z.ZodEnum<[\"active\", \"inactive\", \"suspended\", \"trial\"]>;\n        trialEndsAt: z.ZodNullable<z.ZodDate>;\n        billingEmail: z.ZodNullable<z.ZodString>;\n        isActive: z.ZodBoolean;\n        createdAt: z.ZodDate;\n        updatedAt: z.ZodDate;\n    }, \"strip\", z.ZodTypeAny, {\n        status?: \"active\" | \"inactive\" | \"suspended\" | \"trial\";\n        name?: string;\n        id?: string;\n        website?: string;\n        createdAt?: Date;\n        updatedAt?: Date;\n        description?: string;\n        isActive?: boolean;\n        slug?: string;\n        settings?: {\n            language?: string;\n            features?: {\n                ai?: boolean;\n                analytics?: boolean;\n                integrations?: boolean;\n                customFields?: boolean;\n            };\n            currency?: string;\n            notifications?: {\n                push?: boolean;\n                email?: boolean;\n                sms?: boolean;\n            };\n            timezone?: string;\n            dateFormat?: string;\n            limits?: {\n                users?: number;\n                companies?: number;\n                contacts?: number;\n                invoices?: number;\n                products?: number;\n                storage?: number;\n            };\n        };\n        logo?: string;\n        subscriptionTier?: \"free\" | \"enterprise\" | \"basic\" | \"pro\";\n        trialEndsAt?: Date;\n        billingEmail?: string;\n    }, {\n        status?: \"active\" | \"inactive\" | \"suspended\" | \"trial\";\n        name?: string;\n        id?: string;\n        website?: string;\n        createdAt?: Date;\n        updatedAt?: Date;\n        description?: string;\n        isActive?: boolean;\n        slug?: string;\n        settings?: {\n            language?: string;\n            features?: {\n                ai?: boolean;\n                analytics?: boolean;\n                integrations?: boolean;\n                customFields?: boolean;\n            };\n            currency?: string;\n            notifications?: {\n                push?: boolean;\n                email?: boolean;\n                sms?: boolean;\n            };\n            timezone?: string;\n            dateFormat?: string;\n            limits?: {\n                users?: number;\n                companies?: number;\n                contacts?: number;\n                invoices?: number;\n                products?: number;\n                storage?: number;\n            };\n        };\n        logo?: string;\n        subscriptionTier?: \"free\" | \"enterprise\" | \"basic\" | \"pro\";\n        trialEndsAt?: Date;\n        billingEmail?: string;\n    }>,",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\organization.dto.d.ts",
        "start": 603,
        "end": 800,
        "startLoc": {
          "line": 603,
          "column": 2,
          "position": 5431
        },
        "endLoc": {
          "line": 800,
          "column": 2,
          "position": 7085
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\organization.dto.d.ts",
        "start": 404,
        "end": 601,
        "startLoc": {
          "line": 404,
          "column": 2,
          "position": 3755
        },
        "endLoc": {
          "line": 601,
          "column": 2,
          "position": 5406
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "?: string;\n    }>, \"many\">;\n    total: z.ZodNumber;\n    page: z.ZodNumber;\n    limit: z.ZodNumber;\n    totalPages: z.ZodNumber;\n    hasNext: z.ZodBoolean;\n    hasPrevious: z.ZodBoolean;\n}, \"strip\", z.ZodTypeAny, {\n    page?: number;\n    limit?: number;\n    total",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\organization.dto.d.ts",
        "start": 799,
        "end": 810,
        "startLoc": {
          "line": 799,
          "column": 13,
          "position": 7076
        },
        "endLoc": {
          "line": 810,
          "column": 6,
          "position": 7175
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\user.dto.d.ts",
        "start": 209,
        "end": 220,
        "startLoc": {
          "line": 209,
          "column": 9,
          "position": 2394
        },
        "endLoc": {
          "line": 220,
          "column": 6,
          "position": 2493
        }
      }
    },
    {
      "format": "typescript",
      "lines": 40,
      "fragment": "{\n        status?: \"active\" | \"inactive\" | \"suspended\" | \"trial\";\n        name?: string;\n        id?: string;\n        website?: string;\n        createdAt?: Date;\n        updatedAt?: Date;\n        description?: string;\n        isActive?: boolean;\n        slug?: string;\n        settings?: {\n            language?: string;\n            features?: {\n                ai?: boolean;\n                analytics?: boolean;\n                integrations?: boolean;\n                customFields?: boolean;\n            };\n            currency?: string;\n            notifications?: {\n                push?: boolean;\n                email?: boolean;\n                sms?: boolean;\n            };\n            timezone?: string;\n            dateFormat?: string;\n            limits?: {\n                users?: number;\n                companies?: number;\n                contacts?: number;\n                invoices?: number;\n                products?: number;\n                storage?: number;\n            };\n        };\n        logo?: string;\n        subscriptionTier?: \"free\" | \"enterprise\" | \"basic\" | \"pro\";\n        trialEndsAt?: Date;\n        billingEmail?: string;\n    }[",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\organization.dto.d.ts",
        "start": 811,
        "end": 850,
        "startLoc": {
          "line": 811,
          "column": 2,
          "position": 7187
        },
        "endLoc": {
          "line": 850,
          "column": 2,
          "position": 7499
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\organization.dto.d.ts",
        "start": 523,
        "end": 562,
        "startLoc": {
          "line": 523,
          "column": 2,
          "position": 4781
        },
        "endLoc": {
          "line": 562,
          "column": 2,
          "position": 5092
        }
      }
    },
    {
      "format": "typescript",
      "lines": 48,
      "fragment": ", {\n    page?: number;\n    limit?: number;\n    total?: number;\n    organizations?: {\n        status?: \"active\" | \"inactive\" | \"suspended\" | \"trial\";\n        name?: string;\n        id?: string;\n        website?: string;\n        createdAt?: Date;\n        updatedAt?: Date;\n        description?: string;\n        isActive?: boolean;\n        slug?: string;\n        settings?: {\n            language?: string;\n            features?: {\n                ai?: boolean;\n                analytics?: boolean;\n                integrations?: boolean;\n                customFields?: boolean;\n            };\n            currency?: string;\n            notifications?: {\n                push?: boolean;\n                email?: boolean;\n                sms?: boolean;\n            };\n            timezone?: string;\n            dateFormat?: string;\n            limits?: {\n                users?: number;\n                companies?: number;\n                contacts?: number;\n                invoices?: number;\n                products?: number;\n                storage?: number;\n            };\n        };\n        logo?: string;\n        subscriptionTier?: \"free\" | \"enterprise\" | \"basic\" | \"pro\";\n        trialEndsAt?: Date;\n        billingEmail?: string;\n    }[];\n    totalPages?: number;\n    hasNext?: boolean;\n    hasPrevious?: boolean;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\organization.dto.d.ts",
        "start": 854,
        "end": 901,
        "startLoc": {
          "line": 854,
          "column": 2,
          "position": 7528
        },
        "endLoc": {
          "line": 901,
          "column": 2,
          "position": 7902
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\organization.dto.d.ts",
        "start": 807,
        "end": 854,
        "startLoc": {
          "line": 807,
          "column": 11,
          "position": 7154
        },
        "endLoc": {
          "line": 854,
          "column": 2,
          "position": 7528
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "productId: UUIDSchema.optional(),\n        description: z.string().min(1, 'Item description is required').max(500, 'Description cannot exceed 500 characters'),\n        quantity: z.number().min(0.01, 'Quantity must be greater than 0'),\n        unitPrice: MoneySchema,\n        totalPrice: MoneySchema,\n        taxRate: z.number().min(0, 'Tax rate must be non-negative').max(100, 'Tax rate cannot exceed 100%').optional(),\n        taxAmount: MoneySchema.optional(),\n        discountRate: z.number().min(0, 'Discount rate must be non-negative').max(100, 'Discount rate cannot exceed 100%').optional(),\n        discountAmount: MoneySchema.optional(),\n        notes: z.string().max(500, 'Item notes cannot exceed 500 characters').optional()\n    })).optional",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\invoice.dto.js",
        "start": 64,
        "end": 74,
        "startLoc": {
          "line": 64,
          "column": 9,
          "position": 1128
        },
        "endLoc": {
          "line": 74,
          "column": 9,
          "position": 1309
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\invoice.dto.js",
        "start": 21,
        "end": 31,
        "startLoc": {
          "line": 21,
          "column": 9,
          "position": 351
        },
        "endLoc": {
          "line": 31,
          "column": 4,
          "position": 532
        }
      }
    },
    {
      "format": "javascript",
      "lines": 17,
      "fragment": "type: InteractionTypeSchema.optional(),\n    status: InteractionStatusSchema.optional(),\n    priority: InteractionPrioritySchema.optional(),\n    contactId: UUIDSchema.optional(),\n    companyId: UUIDSchema.optional(),\n    userId: UUIDSchema.optional(),\n    scheduledFrom: z.coerce.date().optional(),\n    scheduledTo: z.coerce.date().optional(),\n    completedFrom: z.coerce.date().optional(),\n    completedTo: z.coerce.date().optional(),\n    tags: z.string().optional(),\n    hasOutcome: z.coerce.boolean().optional(),\n    hasNextAction: z.coerce.boolean().optional(),\n    overdue: z.coerce.boolean().optional(),\n    upcoming: z.coerce.boolean().optional()\n});\nexport const InteractionBulkUpdateSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\interaction.dto.js",
        "start": 155,
        "end": 171,
        "startLoc": {
          "line": 155,
          "column": 5,
          "position": 1786
        },
        "endLoc": {
          "line": 171,
          "column": 28,
          "position": 2009
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\interaction.dto.js",
        "start": 138,
        "end": 154,
        "startLoc": {
          "line": 138,
          "column": 5,
          "position": 1552
        },
        "endLoc": {
          "line": 154,
          "column": 30,
          "position": 1775
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "),\n    pagination: z.object({\n        page: z.number(),\n        limit: z.number(),\n        total: z.number(),\n        totalPages: z.number(),\n        hasNext: z.boolean(),\n        hasPrev: z.boolean()\n    })\n});\nexport const InteractionStatsResponseSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\interaction.dto.js",
        "start": 218,
        "end": 228,
        "startLoc": {
          "line": 218,
          "column": 26,
          "position": 2566
        },
        "endLoc": {
          "line": 228,
          "column": 31,
          "position": 2656
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\product.dto.js",
        "start": 291,
        "end": 301,
        "startLoc": {
          "line": 291,
          "column": 22,
          "position": 4414
        },
        "endLoc": {
          "line": 301,
          "column": 27,
          "position": 4504
        }
      }
    },
    {
      "format": "javascript",
      "lines": 16,
      "fragment": ".optional(),\n    expectedCloseDate: z.coerce.date().optional(),\n    nextStep: z.string().max(500, 'Next step cannot exceed 500 characters').optional(),\n    nextStepDate: z.coerce.date().optional(),\n    tags: TagsSchema,\n    customFields: CustomFieldsSchema,\n    attachments: z.array(z.string().url('Invalid attachment URL')).max(5, 'Cannot have more than 5 attachments').optional(),\n    notes: z.string().max(2000, 'Notes cannot exceed 2000 characters').optional(),\n    competitors: z.array(z.string().max(100, 'Competitor name cannot exceed 100 characters')).max(10, 'Cannot have more than 10 competitors').optional(),\n    decisionMakers: z.array(z.string().max(100, 'Decision maker name cannot exceed 100 characters')).max(10, 'Cannot have more than 10 decision makers').optional(),\n    budget: z.number().min(0, 'Budget cannot be negative').optional(),\n    timeline: z.string().max(200, 'Timeline cannot exceed 200 characters').optional(),\n    requirements: z.array(z.string().max(500, 'Requirement cannot exceed 500 characters')).max(20, 'Cannot have more than 20 requirements').optional(),\n    objections: z.array(z.string().max(500, 'Objection cannot exceed 500 characters')).max(20, 'Cannot have more than 20 objections').optional()\n});\nexport const UpdateStageSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\deal.dto.js",
        "start": 106,
        "end": 121,
        "startLoc": {
          "line": 106,
          "column": 2,
          "position": 1262
        },
        "endLoc": {
          "line": 121,
          "column": 18,
          "position": 1592
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\deal.dto.js",
        "start": 47,
        "end": 62,
        "startLoc": {
          "line": 47,
          "column": 11,
          "position": 364
        },
        "endLoc": {
          "line": 62,
          "column": 17,
          "position": 694
        }
      }
    },
    {
      "format": "javascript",
      "lines": 23,
      "fragment": "stage: DealStageSchema.optional(),\n    status: DealStatusSchema.optional(),\n    priority: DealPrioritySchema.optional(),\n    source: DealSourceSchema.optional(),\n    contactId: UUIDSchema.optional(),\n    companyId: UUIDSchema.optional(),\n    userId: UUIDSchema.optional(),\n    valueFrom: z.coerce.number().min(0, 'Value from cannot be negative').optional(),\n    valueTo: z.coerce.number().min(0, 'Value to cannot be negative').optional(),\n    probabilityFrom: z.coerce.number().min(0, 'Probability from cannot be negative').max(100, 'Probability from cannot exceed 100').optional(),\n    probabilityTo: z.coerce.number().min(0, 'Probability to cannot be negative').max(100, 'Probability to cannot exceed 100').optional(),\n    expectedCloseFrom: z.coerce.date().optional(),\n    expectedCloseTo: z.coerce.date().optional(),\n    actualCloseFrom: z.coerce.date().optional(),\n    actualCloseTo: z.coerce.date().optional(),\n    tags: z.string().optional(),\n    hasNextStep: z.coerce.boolean().optional(),\n    overdue: z.coerce.boolean().optional(),\n    won: z.coerce.boolean().optional(),\n    lost: z.coerce.boolean().optional(),\n    active: z.coerce.boolean().optional()\n});\nexport const DealBulkUpdateSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\deal.dto.js",
        "start": 213,
        "end": 235,
        "startLoc": {
          "line": 213,
          "column": 5,
          "position": 2883
        },
        "endLoc": {
          "line": 235,
          "column": 21,
          "position": 3250
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\deal.dto.js",
        "start": 190,
        "end": 212,
        "startLoc": {
          "line": 190,
          "column": 5,
          "position": 2505
        },
        "endLoc": {
          "line": 212,
          "column": 23,
          "position": 2872
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "),\n    pagination: z.object({\n        page: z.number(),\n        limit: z.number(),\n        total: z.number(),\n        totalPages: z.number(),\n        hasNext: z.boolean(),\n        hasPrev: z.boolean()\n    })\n});\nexport const DealStatsResponseSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\deal.dto.js",
        "start": 303,
        "end": 313,
        "startLoc": {
          "line": 303,
          "column": 19,
          "position": 4096
        },
        "endLoc": {
          "line": 313,
          "column": 24,
          "position": 4186
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\product.dto.js",
        "start": 291,
        "end": 301,
        "startLoc": {
          "line": 291,
          "column": 22,
          "position": 4414
        },
        "endLoc": {
          "line": 301,
          "column": 27,
          "position": 4504
        }
      }
    },
    {
      "format": "javascript",
      "lines": 18,
      "fragment": "),\n        constraints: z.array(z.object({\n            id: z.string().uuid(),\n            name: z.string().min(1, 'Constraint name is required').max(255, 'Constraint name cannot exceed 255 characters'),\n            type: z.enum(['primary_key', 'foreign_key', 'unique', 'check', 'not_null', 'default', 'index'], {\n                errorMap: () => ({ message: 'Constraint type must be one of: primary_key, foreign_key, unique, check, not_null, default, index' })\n            }),\n            columns: z.array(z.string()).min(1, 'At least one column is required'),\n            referencedTable: z.string().max(255).optional(),\n            referencedColumns: z.array(z.string()).optional(),\n            condition: z.string().max(1000).optional(),\n            description: z.string().max(1000, 'Description cannot exceed 1000 characters'),\n            isDeferrable: z.boolean().default(false),\n            initiallyDeferred: z.boolean().default(false),\n            onDelete: z.enum(['CASCADE', 'SET NULL', 'RESTRICT', 'NO ACTION']).optional(),\n            onUpdate: z.enum(['CASCADE', 'SET NULL', 'RESTRICT', 'NO ACTION']).optional()\n        })).default([]),\n        indexes",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\database-schema.dto.js",
        "start": 99,
        "end": 116,
        "startLoc": {
          "line": 99,
          "column": 44,
          "position": 1887
        },
        "endLoc": {
          "line": 116,
          "column": 8,
          "position": 2205
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\database-schema.dto.js",
        "start": 76,
        "end": 93,
        "startLoc": {
          "line": 76,
          "column": 2,
          "position": 1453
        },
        "endLoc": {
          "line": 93,
          "column": 12,
          "position": 1771
        }
      }
    },
    {
      "format": "javascript",
      "lines": 16,
      "fragment": "z.object({\n    id: z.string(),\n    name: z.string(),\n    type: z.enum(['primary_key', 'foreign_key', 'unique', 'check', 'not_null', 'default', 'index']),\n    columns: z.array(z.string()),\n    referencedTable: z.string().optional(),\n    referencedColumns: z.array(z.string()).optional(),\n    condition: z.string().optional(),\n    description: z.string(),\n    isDeferrable: z.boolean(),\n    initiallyDeferred: z.boolean(),\n    onDelete: z.enum(['CASCADE', 'SET NULL', 'RESTRICT', 'NO ACTION']).optional(),\n    onUpdate: z.enum(['CASCADE', 'SET NULL', 'RESTRICT', 'NO ACTION']).optional(),\n    createdAt: z.date(),\n    updatedAt: z.date()\n});",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\database-schema.dto.js",
        "start": 296,
        "end": 311,
        "startLoc": {
          "line": 296,
          "column": 2,
          "position": 5383
        },
        "endLoc": {
          "line": 311,
          "column": 2,
          "position": 5619
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\database-schema.dto.js",
        "start": 271,
        "end": 286,
        "startLoc": {
          "line": 271,
          "column": 2,
          "position": 5036
        },
        "endLoc": {
          "line": 286,
          "column": 2,
          "position": 5273
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "totalTables: z.number(),\n    totalViews: z.number(),\n    totalFunctions: z.number(),\n    totalProcedures: z.number(),\n    totalTriggers: z.number(),\n    totalIndexes: z.number(),\n    totalConstraints: z.number(),\n    totalPolicies: z.number(),\n    totalSize: z.number(),\n    averageTableSize: z.number(),\n    averageHealthScore",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\database-schema.dto.js",
        "start": 485,
        "end": 495,
        "startLoc": {
          "line": 485,
          "column": 5,
          "position": 7674
        },
        "endLoc": {
          "line": 495,
          "column": 19,
          "position": 7784
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\database-schema.dto.js",
        "start": 385,
        "end": 395,
        "startLoc": {
          "line": 385,
          "column": 5,
          "position": 6523
        },
        "endLoc": {
          "line": 395,
          "column": 13,
          "position": 6633
        }
      }
    },
    {
      "format": "javascript",
      "lines": 20,
      "fragment": ").optional(),\n        other: z.record(z.string()).optional()\n    }).optional(),\n    communication: z.object({\n        preferredMethod: z.enum(['email', 'phone', 'sms', 'whatsapp', 'linkedin', 'other']).optional(),\n        bestTimeToCall: z.string().optional(),\n        timeZone: z.string().optional(),\n        doNotCall: z.boolean().optional(),\n        doNotEmail: z.boolean().optional(),\n        doNotSms: z.boolean().optional()\n    }).optional(),\n    settings: z.object({\n        notifications: z.object({\n            email: z.boolean().optional(),\n            sms: z.boolean().optional(),\n            push: z.boolean().optional(),\n            phone: z.boolean().optional()\n        }).optional(),\n        preferences: z.object({\n            language: z.string().length(2,",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\contact.dto.js",
        "start": 54,
        "end": 73,
        "startLoc": {
          "line": 54,
          "column": 21,
          "position": 1067
        },
        "endLoc": {
          "line": 73,
          "column": 2,
          "position": 1339
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\contact.routes.js",
        "start": 51,
        "end": 70,
        "startLoc": {
          "line": 51,
          "column": 2,
          "position": 943
        },
        "endLoc": {
          "line": 70,
          "column": 2,
          "position": 1215
        }
      }
    },
    {
      "format": "javascript",
      "lines": 23,
      "fragment": ".number().int().min(0).optional(),\n    lastContactAfter: z.coerce.date().optional(),\n    lastContactBefore: z.coerce.date().optional(),\n    nextFollowUpAfter: z.coerce.date().optional(),\n    nextFollowUpBefore: z.coerce.date().optional(),\n    lastEmailOpenAfter: z.coerce.date().optional(),\n    lastEmailOpenBefore: z.coerce.date().optional(),\n    lastEmailClickAfter: z.coerce.date().optional(),\n    lastEmailClickBefore: z.coerce.date().optional(),\n    lastWebsiteVisitAfter: z.coerce.date().optional(),\n    lastWebsiteVisitBefore: z.coerce.date().optional(),\n    lastSocialMediaInteractionAfter: z.coerce.date().optional(),\n    lastSocialMediaInteractionBefore: z.coerce.date().optional(),\n    createdAfter: z.coerce.date().optional(),\n    createdBefore: z.coerce.date().optional(),\n    updatedAfter: z.coerce.date().optional(),\n    updatedBefore: z.coerce.date().optional(),\n    birthdayAfter: z.coerce.date().optional(),\n    birthdayBefore: z.coerce.date().optional(),\n    anniversaryAfter: z.coerce.date().optional(),\n    anniversaryBefore: z.coerce.date().optional(),\n    tags: z.array(z.string()).optional(),\n    page: z.coerce.number().int().min(1,",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\contact.dto.js",
        "start": 125,
        "end": 147,
        "startLoc": {
          "line": 125,
          "column": 2,
          "position": 2351
        },
        "endLoc": {
          "line": 147,
          "column": 2,
          "position": 2749
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\contact.routes.js",
        "start": 222,
        "end": 244,
        "startLoc": {
          "line": 222,
          "column": 7,
          "position": 3855
        },
        "endLoc": {
          "line": 244,
          "column": 2,
          "position": 4253
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": ".number().int().min(1800).optional(),\n    lastContactAfter: z.coerce.date().optional(),\n    lastContactBefore: z.coerce.date().optional(),\n    nextFollowUpAfter: z.coerce.date().optional(),\n    nextFollowUpBefore: z.coerce.date().optional(),\n    createdAfter: z.coerce.date().optional(),\n    createdBefore: z.coerce.date().optional(),\n    updatedAfter: z.coerce.date().optional(),\n    updatedBefore: z.coerce.date().optional(),\n    tags: z.array(z.string()).optional(),\n    page: z.coerce.number().int().min(1,",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\company.dto.js",
        "start": 105,
        "end": 115,
        "startLoc": {
          "line": 105,
          "column": 2,
          "position": 1907
        },
        "endLoc": {
          "line": 115,
          "column": 2,
          "position": 2101
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\company.routes.js",
        "start": 185,
        "end": 195,
        "startLoc": {
          "line": 185,
          "column": 7,
          "position": 3052
        },
        "endLoc": {
          "line": 195,
          "column": 2,
          "position": 3246
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": ": z.string(),\n        count: z.number().int().min(0)\n    })),\n    topSources: z.array(z.object({\n        source: z.string(),\n        count: z.number().int().min(0)\n    })),\n    topAssignedUsers: z.array(z.object({\n        userId: z.string(),\n        count: z.number().int().min(0)\n    }))\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\company.dto.js",
        "start": 249,
        "end": 260,
        "startLoc": {
          "line": 249,
          "column": 9,
          "position": 4178
        },
        "endLoc": {
          "line": 260,
          "column": 2,
          "position": 4311
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\contact.dto.js",
        "start": 347,
        "end": 357,
        "startLoc": {
          "line": 347,
          "column": 11,
          "position": 5882
        },
        "endLoc": {
          "line": 357,
          "column": 2,
          "position": 6014
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": ": z.ZodObject<{\n        page: z.ZodNumber;\n        limit: z.ZodNumber;\n        total: z.ZodNumber;\n        totalPages: z.ZodNumber;\n        hasNext: z.ZodBoolean;\n        hasPrev: z.ZodBoolean;\n    }, \"strip\", z.ZodTypeAny, {\n        page?: number;\n        limit?: number;\n        total?: number;\n        totalPages?: number;\n        hasNext?: boolean;\n        hasPrev?: boolean;\n    }, {\n        page?: number;\n        limit?: number;\n        total?: number;\n        totalPages?: number;\n        hasNext?: boolean;\n        hasPrev?: boolean;\n    }>;\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\base.dto.d.ts",
        "start": 107,
        "end": 129,
        "startLoc": {
          "line": 107,
          "column": 11,
          "position": 1171
        },
        "endLoc": {
          "line": 129,
          "column": 2,
          "position": 1354
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\base.dto.d.ts",
        "start": 83,
        "end": 105,
        "startLoc": {
          "line": 83,
          "column": 25,
          "position": 957
        },
        "endLoc": {
          "line": 105,
          "column": 7,
          "position": 1137
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ";\n}>;\nexport declare const MoneySchema: z.ZodObject<{\n    amount: z.ZodNumber;\n    currency: z.ZodString;\n}, \"strip\", z.ZodTypeAny, {\n    amount?: number;\n    currency?: string;\n}, {\n    amount?: number;\n    currency?: string;\n}>;\nexport declare const AddressSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\base.dto.d.ts",
        "start": 206,
        "end": 218,
        "startLoc": {
          "line": 206,
          "column": 5,
          "position": 2059
        },
        "endLoc": {
          "line": 218,
          "column": 14,
          "position": 2158
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\shared\\utils\\validation.utils.d.ts",
        "start": 34,
        "end": 46,
        "startLoc": {
          "line": 34,
          "column": 7,
          "position": 403
        },
        "endLoc": {
          "line": 46,
          "column": 17,
          "position": 502
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": ";\nexport declare const AddressSchema: z.ZodObject<{\n    street: z.ZodString;\n    city: z.ZodString;\n    state: z.ZodOptional<z.ZodString>;\n    postalCode: z.ZodString;\n    country: z.ZodString;\n    countryCode: z.ZodString;\n}, \"strip\", z.ZodTypeAny, {\n    street?: string;\n    city?: string;\n    state?: string;\n    country?: string;\n    postalCode?: string;\n    countryCode?: string;\n}, {\n    street?: string;\n    city?: string;\n    state?: string;\n    country?: string;\n    postalCode?: string;\n    countryCode?: string;\n}>;\nexport type",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\base.dto.d.ts",
        "start": 217,
        "end": 240,
        "startLoc": {
          "line": 217,
          "column": 2,
          "position": 2150
        },
        "endLoc": {
          "line": 240,
          "column": 5,
          "position": 2346
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\shared\\utils\\validation.utils.d.ts",
        "start": 13,
        "end": 36,
        "startLoc": {
          "line": 13,
          "column": 3,
          "position": 215
        },
        "endLoc": {
          "line": 36,
          "column": 8,
          "position": 411
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "export type BaseSearchQuery = z.infer<typeof BaseSearchQuerySchema>;\nexport type IdParam = z.infer<typeof IdParamSchema>;\nexport type OrganizationIdParam = z.infer<typeof OrganizationIdParamSchema>;\nexport type BaseResponse = z.infer<typeof BaseResponseSchema>;\nexport type ListResponse<T> = {\n    data: T[];\n    pagination: z.infer<typeof PaginationResponseSchema>;\n};\nexport type BaseStats = z.infer<typeof BaseStatsSchema>;\nexport type BulkUpdate = z.infer<typeof BulkUpdateSchema>;\nexport type BulkDelete = z.infer<typeof BulkDeleteSchema>;\nexport type DateRange = z.infer<typeof DateRangeSchema>;\nexport type Money = z.infer<typeof MoneySchema>;\nexport type Address = z.infer<typeof AddressSchema>;",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\base.dto.d.ts",
        "start": 240,
        "end": 253,
        "startLoc": {
          "line": 240,
          "column": 1,
          "position": 2344
        },
        "endLoc": {
          "line": 253,
          "column": 2,
          "position": 2561
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\presentation\\dto\\base.dto.ts",
        "start": 178,
        "end": 191,
        "startLoc": {
          "line": 178,
          "column": 1,
          "position": 1388
        },
        "endLoc": {
          "line": 191,
          "column": 2,
          "position": 1605
        }
      }
    },
    {
      "format": "javascript",
      "lines": 30,
      "fragment": "),\n    description: DescriptionSchema.optional(),\n    settings: z.object({\n        layers: z.array(z.object({\n            id: z.string().uuid(),\n            name: z.string().min(1).max(255),\n            type: z.enum(['domain', 'application', 'infrastructure', 'presentation', 'shared']),\n            description: z.string().max(1000),\n            components: z.array(z.object({\n                id: z.string().uuid(),\n                name: z.string().min(1).max(255),\n                type: z.enum(['entity', 'repository', 'use_case', 'service', 'controller', 'middleware', 'dto', 'route']),\n                description: z.string().max(1000),\n                dependencies: z.array(z.string()).default([]),\n                interfaces: z.array(z.string()).default([]),\n                implementation: z.string().max(5000),\n                tests: z.array(z.string()).default([]),\n                documentation: z.string().max(5000)\n            })),\n            dependencies: z.array(z.string()).default([]),\n            responsibilities: z.array(z.string()).default([]),\n            patterns: z.array(z.string()).default([])\n        })).optional(),\n        patterns: z.array(z.string()).optional(),\n        principles: z.array(z.string()).optional(),\n        conventions: z.record(z.any()).optional(),\n        tools: z.array(z.string()).optional(),\n        frameworks: z.array(z.string()).optional(),\n        libraries: z.array(z.string()).optional(),\n        customFields: CustomFieldsSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\architecture.dto.js",
        "start": 48,
        "end": 77,
        "startLoc": {
          "line": 48,
          "column": 2,
          "position": 813
        },
        "endLoc": {
          "line": 77,
          "column": 19,
          "position": 1332
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\architecture.dto.js",
        "start": 8,
        "end": 80,
        "startLoc": {
          "line": 8,
          "column": 2,
          "position": 142
        },
        "endLoc": {
          "line": 80,
          "column": 2,
          "position": 1437
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "type: z.enum(['hexagonal', 'layered', 'microservices', 'monolithic', 'event_driven']).optional(),\n    status: z.enum(['design', 'implementation', 'testing', 'deployed', 'maintenance']).optional(),\n    layerType: z.enum(['domain', 'application', 'infrastructure', 'presentation', 'shared']).optional(),\n    componentType: z.enum(['entity', 'repository', 'use_case', 'service', 'controller', 'middleware', 'dto', 'route']).optional(),\n    isActive: z.coerce.boolean().optional(),\n    hasMetrics: z.coerce.boolean().optional(),\n    minQualityScore: z.coerce.number().min(0).max(10).optional(),\n    maxQualityScore: z.coerce.number().min(0).max(10).optional(),\n    lastAnalysisFrom: z.coerce.date().optional(),\n    lastAnalysisTo: z.coerce.date().optional()\n});",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\architecture.dto.js",
        "start": 89,
        "end": 99,
        "startLoc": {
          "line": 89,
          "column": 5,
          "position": 1449
        },
        "endLoc": {
          "line": 99,
          "column": 2,
          "position": 1700
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\routes\\architecture.routes.js",
        "start": 106,
        "end": 117,
        "startLoc": {
          "line": 106,
          "column": 13,
          "position": 1834
        },
        "endLoc": {
          "line": 117,
          "column": 2,
          "position": 2088
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": "});\n            if (!result.success) {\n                res.status(400).json({\n                    success: false,\n                    error: result.error,\n                    timestamp: new Date()\n                });\n                return;\n            }\n            const response = {\n                success: true,\n                data: transformUserToResponse(result.user),\n                message: 'User updated successfully'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\user.controller.js",
        "start": 61,
        "end": 73,
        "startLoc": {
          "line": 61,
          "column": 13,
          "position": 545
        },
        "endLoc": {
          "line": 73,
          "column": 28,
          "position": 643
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\user.controller.js",
        "start": 22,
        "end": 34,
        "startLoc": {
          "line": 22,
          "column": 13,
          "position": 217
        },
        "endLoc": {
          "line": 34,
          "column": 28,
          "position": 315
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": "});\n            if (!result.success) {\n                res.status(400).json({\n                    success: false,\n                    error: result.error,\n                    timestamp: new Date()\n                });\n                return;\n            }\n            const response = {\n                success: true,\n                message",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\user.controller.js",
        "start": 98,
        "end": 109,
        "startLoc": {
          "line": 98,
          "column": 13,
          "position": 864
        },
        "endLoc": {
          "line": 109,
          "column": 8,
          "position": 947
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\user.controller.js",
        "start": 22,
        "end": 33,
        "startLoc": {
          "line": 22,
          "column": 13,
          "position": 217
        },
        "endLoc": {
          "line": 33,
          "column": 5,
          "position": 300
        }
      }
    },
    {
      "format": "javascript",
      "lines": 22,
      "fragment": ");\n            if (!user) {\n                res.status(404).json({\n                    success: false,\n                    error: 'User not found',\n                    timestamp: new Date()\n                });\n                return;\n            }\n            const response = {\n                success: true,\n                data: transformUserToResponse(user),\n                timestamp: new Date(),\n                requestId: req.headers['x-request-id']\n            };\n            res.status(200).json(response);\n        }\n        catch (error) {\n            next(error);\n        }\n    }\n    async getUsersByOrganization",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\user.controller.js",
        "start": 154,
        "end": 175,
        "startLoc": {
          "line": 154,
          "column": 6,
          "position": 1342
        },
        "endLoc": {
          "line": 175,
          "column": 23,
          "position": 1497
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\user.controller.js",
        "start": 122,
        "end": 143,
        "startLoc": {
          "line": 122,
          "column": 7,
          "position": 1081
        },
        "endLoc": {
          "line": 143,
          "column": 15,
          "position": 1236
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "(req.body);\n            const updatedBy = req.user?.id || req.headers['x-user-id'];\n            if (!updatedBy) {\n                res.status(401).json({\n                    success: false,\n                    error: 'User ID is required',\n                    timestamp: new Date()\n                });\n                return;\n            }\n            const result = await this.userApplicationService.bulkUpdateUsers",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\user.controller.js",
        "start": 228,
        "end": 238,
        "startLoc": {
          "line": 228,
          "column": 31,
          "position": 1979
        },
        "endLoc": {
          "line": 238,
          "column": 16,
          "position": 2081
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\user.controller.js",
        "start": 47,
        "end": 57,
        "startLoc": {
          "line": 47,
          "column": 26,
          "position": 426
        },
        "endLoc": {
          "line": 57,
          "column": 11,
          "position": 528
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": ");\n            if (!result.success) {\n                res.status(400).json({\n                    success: false,\n                    error: result.error,\n                    timestamp: new Date()\n                });\n                return;\n            }\n            const response = {\n                success: true,\n                data: {",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\user.controller.js",
        "start": 238,
        "end": 249,
        "startLoc": {
          "line": 238,
          "column": 10,
          "position": 2094
        },
        "endLoc": {
          "line": 249,
          "column": 2,
          "position": 2179
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\user.controller.js",
        "start": 22,
        "end": 33,
        "startLoc": {
          "line": 22,
          "column": 2,
          "position": 218
        },
        "endLoc": {
          "line": 33,
          "column": 24,
          "position": 303
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": ");\n            const deletedBy = req.user?.id || req.headers['x-user-id'];\n            if (!deletedBy) {\n                res.status(401).json({\n                    success: false,\n                    error: 'User ID is required',\n                    timestamp: new Date()\n                });\n                return;\n            }\n            const result = await this.userApplicationService.bulkDeleteUsers",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\user.controller.js",
        "start": 267,
        "end": 277,
        "startLoc": {
          "line": 267,
          "column": 5,
          "position": 2354
        },
        "endLoc": {
          "line": 277,
          "column": 16,
          "position": 2452
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\user.controller.js",
        "start": 85,
        "end": 95,
        "startLoc": {
          "line": 85,
          "column": 2,
          "position": 753
        },
        "endLoc": {
          "line": 95,
          "column": 11,
          "position": 851
        }
      }
    },
    {
      "format": "javascript",
      "lines": 18,
      "fragment": ");\n            if (!result.success) {\n                res.status(400).json({\n                    success: false,\n                    error: result.error,\n                    timestamp: new Date()\n                });\n                return;\n            }\n            const response = {\n                success: true,\n                data: {\n                    total: result.results.length,\n                    successful: result.results.filter(r => r.success).length,\n                    failed: result.results.filter(r => !r.success).length,\n                    results: result.results\n                },\n                message: 'Bulk delete completed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\user.controller.js",
        "start": 277,
        "end": 294,
        "startLoc": {
          "line": 277,
          "column": 10,
          "position": 2460
        },
        "endLoc": {
          "line": 294,
          "column": 24,
          "position": 2619
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\user.controller.js",
        "start": 22,
        "end": 255,
        "startLoc": {
          "line": 22,
          "column": 2,
          "position": 218
        },
        "endLoc": {
          "line": 255,
          "column": 24,
          "position": 2253
        }
      }
    },
    {
      "format": "javascript",
      "lines": 65,
      "fragment": "});\n            const response = {\n                id: result.data.product.id.value,\n                organizationId: result.data.product.organizationId.value,\n                name: result.data.product.name,\n                description: result.data.product.description,\n                shortDescription: result.data.product.shortDescription,\n                sku: result.data.product.sku,\n                barcode: result.data.product.barcode,\n                type: result.data.product.type.value,\n                status: result.data.product.status.value,\n                category: result.data.product.category.value,\n                brand: result.data.product.brand?.value,\n                supplier: result.data.product.supplier?.value,\n                settings: {\n                    inventory: result.data.product.settings.inventory,\n                    pricing: {\n                        costPrice: result.data.product.settings.pricing.costPrice ? {\n                            amount: result.data.product.settings.pricing.costPrice.amount,\n                            currency: result.data.product.settings.pricing.costPrice.currency\n                        } : undefined,\n                        sellingPrice: {\n                            amount: result.data.product.settings.pricing.sellingPrice.amount,\n                            currency: result.data.product.settings.pricing.sellingPrice.currency\n                        },\n                        compareAtPrice: result.data.product.settings.pricing.compareAtPrice ? {\n                            amount: result.data.product.settings.pricing.compareAtPrice.amount,\n                            currency: result.data.product.settings.pricing.compareAtPrice.currency\n                        } : undefined,\n                        margin: result.data.product.settings.pricing.margin\n                    },\n                    shipping: result.data.product.settings.shipping,\n                    seo: result.data.product.settings.seo,\n                    customFields: result.data.product.settings.customFields,\n                    tags: result.data.product.settings.tags,\n                    notes: result.data.product.settings.notes\n                },\n                images: result.data.product.images,\n                documents: result.data.product.documents,\n                specifications: result.data.product.specifications,\n                variants: result.data.product.variants?.map(variant => ({\n                    id: variant.id,\n                    name: variant.name,\n                    sku: variant.sku,\n                    price: {\n                        amount: variant.price.amount,\n                        currency: variant.price.currency\n                    },\n                    compareAtPrice: variant.compareAtPrice ? {\n                        amount: variant.compareAtPrice.amount,\n                        currency: variant.compareAtPrice.currency\n                    } : undefined,\n                    costPrice: variant.costPrice ? {\n                        amount: variant.costPrice.amount,\n                        currency: variant.costPrice.currency\n                    } : undefined,\n                    inventory: variant.inventory,\n                    attributes: variant.attributes,\n                    isActive: variant.isActive\n                })),\n                isActive: result.data.product.isActive,\n                createdAt: result.data.product.createdAt,\n                updatedAt: result.data.product.updatedAt\n            };\n            res.status(200",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\product.controller.js",
        "start": 103,
        "end": 167,
        "startLoc": {
          "line": 103,
          "column": 13,
          "position": 1153
        },
        "endLoc": {
          "line": 167,
          "column": 4,
          "position": 1920
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\product.controller.js",
        "start": 20,
        "end": 84,
        "startLoc": {
          "line": 20,
          "column": 13,
          "position": 216
        },
        "endLoc": {
          "line": 84,
          "column": 4,
          "position": 983
        }
      }
    },
    {
      "format": "javascript",
      "lines": 21,
      "fragment": "product.variants?.map(variant => ({\n                    id: variant.id,\n                    name: variant.name,\n                    sku: variant.sku,\n                    price: {\n                        amount: variant.price.amount,\n                        currency: variant.price.currency\n                    },\n                    compareAtPrice: variant.compareAtPrice ? {\n                        amount: variant.compareAtPrice.amount,\n                        currency: variant.compareAtPrice.currency\n                    } : undefined,\n                    costPrice: variant.costPrice ? {\n                        amount: variant.costPrice.amount,\n                        currency: variant.costPrice.currency\n                    } : undefined,\n                    inventory: variant.inventory,\n                    attributes: variant.attributes,\n                    isActive: variant.isActive\n                })),\n                isActive: product",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\product.controller.js",
        "start": 241,
        "end": 261,
        "startLoc": {
          "line": 241,
          "column": 2,
          "position": 2625
        },
        "endLoc": {
          "line": 261,
          "column": 8,
          "position": 2815
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\product.controller.js",
        "start": 60,
        "end": 80,
        "startLoc": {
          "line": 60,
          "column": 2,
          "position": 750
        },
        "endLoc": {
          "line": 80,
          "column": 7,
          "position": 940
        }
      }
    },
    {
      "format": "javascript",
      "lines": 63,
      "fragment": "{\n                    id: product.id.value,\n                    organizationId: product.organizationId.value,\n                    name: product.name,\n                    description: product.description,\n                    shortDescription: product.shortDescription,\n                    sku: product.sku,\n                    barcode: product.barcode,\n                    type: product.type.value,\n                    status: product.status.value,\n                    category: product.category.value,\n                    brand: product.brand?.value,\n                    supplier: product.supplier?.value,\n                    settings: {\n                        inventory: product.settings.inventory,\n                        pricing: {\n                            costPrice: product.settings.pricing.costPrice ? {\n                                amount: product.settings.pricing.costPrice.amount,\n                                currency: product.settings.pricing.costPrice.currency\n                            } : undefined,\n                            sellingPrice: {\n                                amount: product.settings.pricing.sellingPrice.amount,\n                                currency: product.settings.pricing.sellingPrice.currency\n                            },\n                            compareAtPrice: product.settings.pricing.compareAtPrice ? {\n                                amount: product.settings.pricing.compareAtPrice.amount,\n                                currency: product.settings.pricing.compareAtPrice.currency\n                            } : undefined,\n                            margin: product.settings.pricing.margin\n                        },\n                        shipping: product.settings.shipping,\n                        seo: product.settings.seo,\n                        customFields: product.settings.customFields,\n                        tags: product.settings.tags,\n                        notes: product.settings.notes\n                    },\n                    images: product.images,\n                    documents: product.documents,\n                    specifications: product.specifications,\n                    variants: product.variants?.map(variant => ({\n                        id: variant.id,\n                        name: variant.name,\n                        sku: variant.sku,\n                        price: {\n                            amount: variant.price.amount,\n                            currency: variant.price.currency\n                        },\n                        compareAtPrice: variant.compareAtPrice ? {\n                            amount: variant.compareAtPrice.amount,\n                            currency: variant.compareAtPrice.currency\n                        } : undefined,\n                        costPrice: variant.costPrice ? {\n                            amount: variant.costPrice.amount,\n                            currency: variant.costPrice.currency\n                        } : undefined,\n                        inventory: variant.inventory,\n                        attributes: variant.attributes,\n                        isActive: variant.isActive\n                    })),\n                    isActive: product.isActive,\n                    createdAt: product.createdAt,\n                    updatedAt: product.updatedAt\n                })",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\product.controller.js",
        "start": 316,
        "end": 378,
        "startLoc": {
          "line": 316,
          "column": 2,
          "position": 3512
        },
        "endLoc": {
          "line": 378,
          "column": 2,
          "position": 4125
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\product.controller.js",
        "start": 202,
        "end": 264,
        "startLoc": {
          "line": 202,
          "column": 2,
          "position": 2226
        },
        "endLoc": {
          "line": 264,
          "column": 2,
          "position": 2839
        }
      }
    },
    {
      "format": "javascript",
      "lines": 67,
      "fragment": ".map(product => ({\n                    id: product.id.value,\n                    organizationId: product.organizationId.value,\n                    name: product.name,\n                    description: product.description,\n                    shortDescription: product.shortDescription,\n                    sku: product.sku,\n                    barcode: product.barcode,\n                    type: product.type.value,\n                    status: product.status.value,\n                    category: product.category.value,\n                    brand: product.brand?.value,\n                    supplier: product.supplier?.value,\n                    settings: {\n                        inventory: product.settings.inventory,\n                        pricing: {\n                            costPrice: product.settings.pricing.costPrice ? {\n                                amount: product.settings.pricing.costPrice.amount,\n                                currency: product.settings.pricing.costPrice.currency\n                            } : undefined,\n                            sellingPrice: {\n                                amount: product.settings.pricing.sellingPrice.amount,\n                                currency: product.settings.pricing.sellingPrice.currency\n                            },\n                            compareAtPrice: product.settings.pricing.compareAtPrice ? {\n                                amount: product.settings.pricing.compareAtPrice.amount,\n                                currency: product.settings.pricing.compareAtPrice.currency\n                            } : undefined,\n                            margin: product.settings.pricing.margin\n                        },\n                        shipping: product.settings.shipping,\n                        seo: product.settings.seo,\n                        customFields: product.settings.customFields,\n                        tags: product.settings.tags,\n                        notes: product.settings.notes\n                    },\n                    images: product.images,\n                    documents: product.documents,\n                    specifications: product.specifications,\n                    variants: product.variants?.map(variant => ({\n                        id: variant.id,\n                        name: variant.name,\n                        sku: variant.sku,\n                        price: {\n                            amount: variant.price.amount,\n                            currency: variant.price.currency\n                        },\n                        compareAtPrice: variant.compareAtPrice ? {\n                            amount: variant.compareAtPrice.amount,\n                            currency: variant.compareAtPrice.currency\n                        } : undefined,\n                        costPrice: variant.costPrice ? {\n                            amount: variant.costPrice.amount,\n                            currency: variant.costPrice.currency\n                        } : undefined,\n                        inventory: variant.inventory,\n                        attributes: variant.attributes,\n                        isActive: variant.isActive\n                    })),\n                    isActive: product.isActive,\n                    createdAt: product.createdAt,\n                    updatedAt: product.updatedAt\n                })),\n                pagination: {\n                    page: query.page,\n                    limit: query.limit,\n                    total:",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\product.controller.js",
        "start": 403,
        "end": 469,
        "startLoc": {
          "line": 403,
          "column": 9,
          "position": 4349
        },
        "endLoc": {
          "line": 469,
          "column": 2,
          "position": 5000
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\product.controller.js",
        "start": 316,
        "end": 382,
        "startLoc": {
          "line": 316,
          "column": 18,
          "position": 3504
        },
        "endLoc": {
          "line": 382,
          "column": 2,
          "position": 4155
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ".updatedAt\n        };\n    }\n    transformStatsToResponse(stats) {\n        return {\n            total: stats.total,\n            active: stats.active,\n            inactive: stats.inactive,\n            createdThisMonth: stats.createdThisMonth,\n            createdThisYear: stats.createdThisYear,\n            updatedThisMonth: stats.updatedThisMonth,\n            updatedThisYear: stats.updatedThisYear,\n            byType: stats.byType,\n            byStatus: stats.byStatus,\n            byPaymentStatus",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\invoice.controller.js",
        "start": 308,
        "end": 322,
        "startLoc": {
          "line": 308,
          "column": 8,
          "position": 3717
        },
        "endLoc": {
          "line": 322,
          "column": 16,
          "position": 3822
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\predictive-analytics.controller.js",
        "start": 253,
        "end": 267,
        "startLoc": {
          "line": 253,
          "column": 20,
          "position": 3056
        },
        "endLoc": {
          "line": 267,
          "column": 12,
          "position": 3161
        }
      }
    },
    {
      "format": "javascript",
      "lines": 28,
      "fragment": "{\n                id: movement.id,\n                productId: movement.productId,\n                warehouseId: movement.warehouseId,\n                locationId: movement.locationId,\n                movementType: movement.movementType.value,\n                movementReason: movement.movementReason.value,\n                quantity: movement.quantity,\n                unitCost: {\n                    amount: movement.unitCost.amount,\n                    currency: movement.unitCost.currency\n                },\n                totalCost: {\n                    amount: movement.totalCost.amount,\n                    currency: movement.totalCost.currency\n                },\n                reference: movement.reference,\n                referenceId: movement.referenceId,\n                notes: movement.notes,\n                batchNumber: movement.batchNumber,\n                expirationDate: movement.expirationDate,\n                serialNumber: movement.serialNumber,\n                supplierId: movement.supplierId,\n                customerId: movement.customerId,\n                userId: movement.userId,\n                movementDate: movement.movementDate,\n                status: movement.status.value\n            })",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\inventory-kardex.controller.js",
        "start": 255,
        "end": 282,
        "startLoc": {
          "line": 255,
          "column": 2,
          "position": 3205
        },
        "endLoc": {
          "line": 282,
          "column": 2,
          "position": 3438
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\inventory-kardex\\record-movement.use-case.js",
        "start": 57,
        "end": 85,
        "startLoc": {
          "line": 57,
          "column": 2,
          "position": 769
        },
        "endLoc": {
          "line": 85,
          "column": 2,
          "position": 1004
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ".updatedAt\n        };\n    }\n    transformStatsToResponse(stats) {\n        return {\n            total: stats.total,\n            active: stats.active,\n            inactive: stats.inactive,\n            createdThisMonth: stats.createdThisMonth,\n            createdThisYear: stats.createdThisYear,\n            updatedThisMonth: stats.updatedThisMonth,\n            updatedThisYear: stats.updatedThisYear,\n            byProduct",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\inventory-kardex.controller.js",
        "start": 301,
        "end": 313,
        "startLoc": {
          "line": 301,
          "column": 16,
          "position": 3628
        },
        "endLoc": {
          "line": 313,
          "column": 10,
          "position": 3715
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\predictive-analytics.controller.js",
        "start": 253,
        "end": 265,
        "startLoc": {
          "line": 253,
          "column": 20,
          "position": 3056
        },
        "endLoc": {
          "line": 265,
          "column": 7,
          "position": 3143
        }
      }
    },
    {
      "format": "javascript",
      "lines": 34,
      "fragment": ");\n            const response = {\n                id: result.data.interaction.id,\n                organizationId: result.data.interaction.organizationId,\n                contactId: result.data.interaction.contactId,\n                companyId: result.data.interaction.companyId,\n                userId: result.data.interaction.userId,\n                type: result.data.interaction.type,\n                status: result.data.interaction.status,\n                priority: result.data.interaction.priority,\n                subject: result.data.interaction.subject,\n                description: result.data.interaction.description,\n                scheduledAt: result.data.interaction.scheduledAt,\n                completedAt: result.data.interaction.completedAt,\n                duration: result.data.interaction.duration,\n                outcome: result.data.interaction.outcome,\n                nextAction: result.data.interaction.nextAction,\n                nextActionDate: result.data.interaction.nextActionDate,\n                tags: result.data.interaction.tags,\n                customFields: result.data.interaction.customFields,\n                attachments: result.data.interaction.attachments,\n                createdAt: result.data.interaction.createdAt,\n                updatedAt: result.data.interaction.updatedAt\n            };\n            res.status(201).json({\n                success: true,\n                data: { interaction: response }\n            });\n        }\n        catch (error) {\n            res.status(400).json(createErrorResponse(error));\n        }\n    }\n    async createTask",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\interaction.controller.js",
        "start": 65,
        "end": 98,
        "startLoc": {
          "line": 65,
          "column": 10,
          "position": 721
        },
        "endLoc": {
          "line": 98,
          "column": 11,
          "position": 1084
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\interaction.controller.js",
        "start": 24,
        "end": 57,
        "startLoc": {
          "line": 24,
          "column": 8,
          "position": 215
        },
        "endLoc": {
          "line": 57,
          "column": 27,
          "position": 578
        }
      }
    },
    {
      "format": "javascript",
      "lines": 34,
      "fragment": ", req.body.companyId);\n            const response = {\n                id: result.data.interaction.id,\n                organizationId: result.data.interaction.organizationId,\n                contactId: result.data.interaction.contactId,\n                companyId: result.data.interaction.companyId,\n                userId: result.data.interaction.userId,\n                type: result.data.interaction.type,\n                status: result.data.interaction.status,\n                priority: result.data.interaction.priority,\n                subject: result.data.interaction.subject,\n                description: result.data.interaction.description,\n                scheduledAt: result.data.interaction.scheduledAt,\n                completedAt: result.data.interaction.completedAt,\n                duration: result.data.interaction.duration,\n                outcome: result.data.interaction.outcome,\n                nextAction: result.data.interaction.nextAction,\n                nextActionDate: result.data.interaction.nextActionDate,\n                tags: result.data.interaction.tags,\n                customFields: result.data.interaction.customFields,\n                attachments: result.data.interaction.attachments,\n                createdAt: result.data.interaction.createdAt,\n                updatedAt: result.data.interaction.updatedAt\n            };\n            res.status(201).json({\n                success: true,\n                data: { interaction: response }\n            });\n        }\n        catch (error) {\n            res.status(400).json(createErrorResponse(error));\n        }\n    }\n    async createNote",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\interaction.controller.js",
        "start": 106,
        "end": 139,
        "startLoc": {
          "line": 106,
          "column": 9,
          "position": 1220
        },
        "endLoc": {
          "line": 139,
          "column": 11,
          "position": 1590
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\interaction.controller.js",
        "start": 65,
        "end": 57,
        "startLoc": {
          "line": 65,
          "column": 12,
          "position": 714
        },
        "endLoc": {
          "line": 57,
          "column": 27,
          "position": 578
        }
      }
    },
    {
      "format": "javascript",
      "lines": 34,
      "fragment": ", req.body.companyId);\n            const response = {\n                id: result.data.interaction.id,\n                organizationId: result.data.interaction.organizationId,\n                contactId: result.data.interaction.contactId,\n                companyId: result.data.interaction.companyId,\n                userId: result.data.interaction.userId,\n                type: result.data.interaction.type,\n                status: result.data.interaction.status,\n                priority: result.data.interaction.priority,\n                subject: result.data.interaction.subject,\n                description: result.data.interaction.description,\n                scheduledAt: result.data.interaction.scheduledAt,\n                completedAt: result.data.interaction.completedAt,\n                duration: result.data.interaction.duration,\n                outcome: result.data.interaction.outcome,\n                nextAction: result.data.interaction.nextAction,\n                nextActionDate: result.data.interaction.nextActionDate,\n                tags: result.data.interaction.tags,\n                customFields: result.data.interaction.customFields,\n                attachments: result.data.interaction.attachments,\n                createdAt: result.data.interaction.createdAt,\n                updatedAt: result.data.interaction.updatedAt\n            };\n            res.status(201).json({\n                success: true,\n                data: { interaction: response }\n            });\n        }\n        catch (error) {\n            res.status(400).json(createErrorResponse(error));\n        }\n    }\n    async createFollowUp",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\interaction.controller.js",
        "start": 147,
        "end": 180,
        "startLoc": {
          "line": 147,
          "column": 12,
          "position": 1719
        },
        "endLoc": {
          "line": 180,
          "column": 15,
          "position": 2089
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\interaction.controller.js",
        "start": 65,
        "end": 57,
        "startLoc": {
          "line": 65,
          "column": 12,
          "position": 714
        },
        "endLoc": {
          "line": 57,
          "column": 27,
          "position": 578
        }
      }
    },
    {
      "format": "javascript",
      "lines": 34,
      "fragment": ", req.body.companyId);\n            const response = {\n                id: result.data.interaction.id,\n                organizationId: result.data.interaction.organizationId,\n                contactId: result.data.interaction.contactId,\n                companyId: result.data.interaction.companyId,\n                userId: result.data.interaction.userId,\n                type: result.data.interaction.type,\n                status: result.data.interaction.status,\n                priority: result.data.interaction.priority,\n                subject: result.data.interaction.subject,\n                description: result.data.interaction.description,\n                scheduledAt: result.data.interaction.scheduledAt,\n                completedAt: result.data.interaction.completedAt,\n                duration: result.data.interaction.duration,\n                outcome: result.data.interaction.outcome,\n                nextAction: result.data.interaction.nextAction,\n                nextActionDate: result.data.interaction.nextActionDate,\n                tags: result.data.interaction.tags,\n                customFields: result.data.interaction.customFields,\n                attachments: result.data.interaction.attachments,\n                createdAt: result.data.interaction.createdAt,\n                updatedAt: result.data.interaction.updatedAt\n            };\n            res.status(201).json({\n                success: true,\n                data: { interaction: response }\n            });\n        }\n        catch (error) {\n            res.status(400).json(createErrorResponse(error));\n        }\n    }\n    async updateInteraction",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\interaction.controller.js",
        "start": 188,
        "end": 221,
        "startLoc": {
          "line": 188,
          "column": 15,
          "position": 2218
        },
        "endLoc": {
          "line": 221,
          "column": 18,
          "position": 2588
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\interaction.controller.js",
        "start": 65,
        "end": 57,
        "startLoc": {
          "line": 65,
          "column": 12,
          "position": 714
        },
        "endLoc": {
          "line": 57,
          "column": 27,
          "position": 578
        }
      }
    },
    {
      "format": "javascript",
      "lines": 25,
      "fragment": ".execute(request);\n            const response = {\n                id: result.data.interaction.id,\n                organizationId: result.data.interaction.organizationId,\n                contactId: result.data.interaction.contactId,\n                companyId: result.data.interaction.companyId,\n                userId: result.data.interaction.userId,\n                type: result.data.interaction.type,\n                status: result.data.interaction.status,\n                priority: result.data.interaction.priority,\n                subject: result.data.interaction.subject,\n                description: result.data.interaction.description,\n                scheduledAt: result.data.interaction.scheduledAt,\n                completedAt: result.data.interaction.completedAt,\n                duration: result.data.interaction.duration,\n                outcome: result.data.interaction.outcome,\n                nextAction: result.data.interaction.nextAction,\n                nextActionDate: result.data.interaction.nextActionDate,\n                tags: result.data.interaction.tags,\n                customFields: result.data.interaction.customFields,\n                attachments: result.data.interaction.attachments,\n                createdAt: result.data.interaction.createdAt,\n                updatedAt: result.data.interaction.updatedAt\n            };\n            res.status(200",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\interaction.controller.js",
        "start": 235,
        "end": 259,
        "startLoc": {
          "line": 235,
          "column": 25,
          "position": 2729
        },
        "endLoc": {
          "line": 259,
          "column": 4,
          "position": 3026
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\interaction.controller.js",
        "start": 24,
        "end": 48,
        "startLoc": {
          "line": 24,
          "column": 25,
          "position": 211
        },
        "endLoc": {
          "line": 48,
          "column": 4,
          "position": 508
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": "interaction.updatedAt\n            };\n            res.status(200).json({\n                success: true,\n                data: { interaction: response }\n            });\n        }\n        catch (error) {\n            res.status(400).json(createErrorResponse(error));\n        }\n    }\n    async getInteractionsByOrganization",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\interaction.controller.js",
        "start": 305,
        "end": 316,
        "startLoc": {
          "line": 305,
          "column": 2,
          "position": 3464
        },
        "endLoc": {
          "line": 316,
          "column": 30,
          "position": 3547
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\interaction.controller.js",
        "start": 257,
        "end": 268,
        "startLoc": {
          "line": 257,
          "column": 2,
          "position": 3013
        },
        "endLoc": {
          "line": 268,
          "column": 19,
          "position": 3096
        }
      }
    },
    {
      "format": "javascript",
      "lines": 23,
      "fragment": "{\n                    id: interaction.id,\n                    organizationId: interaction.organizationId,\n                    contactId: interaction.contactId,\n                    companyId: interaction.companyId,\n                    userId: interaction.userId,\n                    type: interaction.type,\n                    status: interaction.status,\n                    priority: interaction.priority,\n                    subject: interaction.subject,\n                    description: interaction.description,\n                    scheduledAt: interaction.scheduledAt,\n                    completedAt: interaction.completedAt,\n                    duration: interaction.duration,\n                    outcome: interaction.outcome,\n                    nextAction: interaction.nextAction,\n                    nextActionDate: interaction.nextActionDate,\n                    tags: interaction.tags,\n                    customFields: interaction.customFields,\n                    attachments: interaction.attachments,\n                    createdAt: interaction.createdAt,\n                    updatedAt: interaction.updatedAt\n                })",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\interaction.controller.js",
        "start": 347,
        "end": 369,
        "startLoc": {
          "line": 347,
          "column": 2,
          "position": 4048
        },
        "endLoc": {
          "line": 369,
          "column": 2,
          "position": 4240
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\interaction.controller.js",
        "start": 284,
        "end": 306,
        "startLoc": {
          "line": 284,
          "column": 2,
          "position": 3278
        },
        "endLoc": {
          "line": 306,
          "column": 2,
          "position": 3470
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": "(req, res) {\n        try {\n            const organizationId = req.user?.organizationId;\n            if (!organizationId) {\n                res.status(401).json(createErrorResponse(new Error('Unauthorized')));\n                return;\n            }\n            const query = {\n                page: parseInt(req.query.page) || 1,\n                limit: parseInt(req.query.limit) || 20,\n                sortBy: req.query.sortBy || 'createdAt',\n                sortOrder: req.query.sortOrder || 'desc'\n            }",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\interaction.controller.js",
        "start": 381,
        "end": 393,
        "startLoc": {
          "line": 381,
          "column": 25,
          "position": 4325
        },
        "endLoc": {
          "line": 393,
          "column": 2,
          "position": 4468
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\interaction.controller.js",
        "start": 316,
        "end": 327,
        "startLoc": {
          "line": 316,
          "column": 30,
          "position": 3548
        },
        "endLoc": {
          "line": 327,
          "column": 2,
          "position": 3689
        }
      }
    },
    {
      "format": "javascript",
      "lines": 37,
      "fragment": ", query);\n            const response = {\n                data: result.data.map(interaction => ({\n                    id: interaction.id,\n                    organizationId: interaction.organizationId,\n                    contactId: interaction.contactId,\n                    companyId: interaction.companyId,\n                    userId: interaction.userId,\n                    type: interaction.type,\n                    status: interaction.status,\n                    priority: interaction.priority,\n                    subject: interaction.subject,\n                    description: interaction.description,\n                    scheduledAt: interaction.scheduledAt,\n                    completedAt: interaction.completedAt,\n                    duration: interaction.duration,\n                    outcome: interaction.outcome,\n                    nextAction: interaction.nextAction,\n                    nextActionDate: interaction.nextActionDate,\n                    tags: interaction.tags,\n                    customFields: interaction.customFields,\n                    attachments: interaction.attachments,\n                    createdAt: interaction.createdAt,\n                    updatedAt: interaction.updatedAt\n                })),\n                pagination: result.pagination\n            };\n            res.status(200).json({\n                success: true,\n                data: response\n            });\n        }\n        catch (error) {\n            res.status(400).json(createErrorResponse(error));\n        }\n    }\n    async getInteractionsByCompany",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\interaction.controller.js",
        "start": 394,
        "end": 430,
        "startLoc": {
          "line": 394,
          "column": 10,
          "position": 4491
        },
        "endLoc": {
          "line": 430,
          "column": 25,
          "position": 4797
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\interaction.controller.js",
        "start": 345,
        "end": 381,
        "startLoc": {
          "line": 345,
          "column": 15,
          "position": 4018
        },
        "endLoc": {
          "line": 381,
          "column": 25,
          "position": 4324
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": "(req, res) {\n        try {\n            const organizationId = req.user?.organizationId;\n            if (!organizationId) {\n                res.status(401).json(createErrorResponse(new Error('Unauthorized')));\n                return;\n            }\n            const query = {\n                page: parseInt(req.query.page) || 1,\n                limit: parseInt(req.query.limit) || 20,\n                sortBy: req.query.sortBy || 'createdAt',\n                sortOrder: req.query.sortOrder || 'desc'\n            };\n            const result = await this.interactionRepository.findByCompanyId",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\interaction.controller.js",
        "start": 430,
        "end": 443,
        "startLoc": {
          "line": 430,
          "column": 25,
          "position": 4798
        },
        "endLoc": {
          "line": 443,
          "column": 16,
          "position": 4957
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\interaction.controller.js",
        "start": 316,
        "end": 394,
        "startLoc": {
          "line": 316,
          "column": 30,
          "position": 3548
        },
        "endLoc": {
          "line": 394,
          "column": 16,
          "position": 4484
        }
      }
    },
    {
      "format": "javascript",
      "lines": 37,
      "fragment": ", query);\n            const response = {\n                data: result.data.map(interaction => ({\n                    id: interaction.id,\n                    organizationId: interaction.organizationId,\n                    contactId: interaction.contactId,\n                    companyId: interaction.companyId,\n                    userId: interaction.userId,\n                    type: interaction.type,\n                    status: interaction.status,\n                    priority: interaction.priority,\n                    subject: interaction.subject,\n                    description: interaction.description,\n                    scheduledAt: interaction.scheduledAt,\n                    completedAt: interaction.completedAt,\n                    duration: interaction.duration,\n                    outcome: interaction.outcome,\n                    nextAction: interaction.nextAction,\n                    nextActionDate: interaction.nextActionDate,\n                    tags: interaction.tags,\n                    customFields: interaction.customFields,\n                    attachments: interaction.attachments,\n                    createdAt: interaction.createdAt,\n                    updatedAt: interaction.updatedAt\n                })),\n                pagination: result.pagination\n            };\n            res.status(200).json({\n                success: true,\n                data: response\n            });\n        }\n        catch (error) {\n            res.status(400).json(createErrorResponse(error));\n        }\n    }\n    async getInteractionStats",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\interaction.controller.js",
        "start": 443,
        "end": 479,
        "startLoc": {
          "line": 443,
          "column": 10,
          "position": 4964
        },
        "endLoc": {
          "line": 479,
          "column": 20,
          "position": 5270
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\interaction.controller.js",
        "start": 345,
        "end": 381,
        "startLoc": {
          "line": 345,
          "column": 15,
          "position": 4018
        },
        "endLoc": {
          "line": 381,
          "column": 25,
          "position": 4324
        }
      }
    },
    {
      "format": "javascript",
      "lines": 17,
      "fragment": "type: req.query.type,\n                status: req.query.status,\n                priority: req.query.priority,\n                contactId: req.query.contactId,\n                companyId: req.query.companyId,\n                userId: req.query.userId,\n                scheduledFrom: req.query.scheduledFrom ? new Date(req.query.scheduledFrom) : undefined,\n                scheduledTo: req.query.scheduledTo ? new Date(req.query.scheduledTo) : undefined,\n                completedFrom: req.query.completedFrom ? new Date(req.query.completedFrom) : undefined,\n                completedTo: req.query.completedTo ? new Date(req.query.completedTo) : undefined,\n                tags: req.query.tags,\n                hasOutcome: req.query.hasOutcome ? req.query.hasOutcome === 'true' : undefined,\n                hasNextAction: req.query.hasNextAction ? req.query.hasNextAction === 'true' : undefined,\n                overdue: req.query.overdue ? req.query.overdue === 'true' : undefined,\n                upcoming: req.query.upcoming ? req.query.upcoming === 'true' : undefined\n            };\n            const stats",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\interaction.controller.js",
        "start": 487,
        "end": 503,
        "startLoc": {
          "line": 487,
          "column": 17,
          "position": 5349
        },
        "endLoc": {
          "line": 503,
          "column": 6,
          "position": 5651
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\interaction.controller.js",
        "start": 329,
        "end": 345,
        "startLoc": {
          "line": 329,
          "column": 17,
          "position": 3703
        },
        "endLoc": {
          "line": 345,
          "column": 7,
          "position": 4005
        }
      }
    },
    {
      "format": "javascript",
      "lines": 24,
      "fragment": ".map(interaction => ({\n                    id: interaction.id,\n                    organizationId: interaction.organizationId,\n                    contactId: interaction.contactId,\n                    companyId: interaction.companyId,\n                    userId: interaction.userId,\n                    type: interaction.type,\n                    status: interaction.status,\n                    priority: interaction.priority,\n                    subject: interaction.subject,\n                    description: interaction.description,\n                    scheduledAt: interaction.scheduledAt,\n                    completedAt: interaction.completedAt,\n                    duration: interaction.duration,\n                    outcome: interaction.outcome,\n                    nextAction: interaction.nextAction,\n                    nextActionDate: interaction.nextActionDate,\n                    tags: interaction.tags,\n                    customFields: interaction.customFields,\n                    attachments: interaction.attachments,\n                    createdAt: interaction.createdAt,\n                    updatedAt: interaction.updatedAt\n                })),\n                upcomingInteractions",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\interaction.controller.js",
        "start": 539,
        "end": 562,
        "startLoc": {
          "line": 539,
          "column": 19,
          "position": 6005
        },
        "endLoc": {
          "line": 562,
          "column": 21,
          "position": 6210
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\interaction.controller.js",
        "start": 347,
        "end": 370,
        "startLoc": {
          "line": 347,
          "column": 5,
          "position": 4040
        },
        "endLoc": {
          "line": 370,
          "column": 11,
          "position": 4245
        }
      }
    },
    {
      "format": "javascript",
      "lines": 24,
      "fragment": ".map(interaction => ({\n                    id: interaction.id,\n                    organizationId: interaction.organizationId,\n                    contactId: interaction.contactId,\n                    companyId: interaction.companyId,\n                    userId: interaction.userId,\n                    type: interaction.type,\n                    status: interaction.status,\n                    priority: interaction.priority,\n                    subject: interaction.subject,\n                    description: interaction.description,\n                    scheduledAt: interaction.scheduledAt,\n                    completedAt: interaction.completedAt,\n                    duration: interaction.duration,\n                    outcome: interaction.outcome,\n                    nextAction: interaction.nextAction,\n                    nextActionDate: interaction.nextActionDate,\n                    tags: interaction.tags,\n                    customFields: interaction.customFields,\n                    attachments: interaction.attachments,\n                    createdAt: interaction.createdAt,\n                    updatedAt: interaction.updatedAt\n                })),\n                overdueInteractions",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\interaction.controller.js",
        "start": 562,
        "end": 585,
        "startLoc": {
          "line": 562,
          "column": 21,
          "position": 6216
        },
        "endLoc": {
          "line": 585,
          "column": 20,
          "position": 6421
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\interaction.controller.js",
        "start": 347,
        "end": 370,
        "startLoc": {
          "line": 347,
          "column": 5,
          "position": 4040
        },
        "endLoc": {
          "line": 370,
          "column": 11,
          "position": 4245
        }
      }
    },
    {
      "format": "javascript",
      "lines": 24,
      "fragment": ".map(interaction => ({\n                    id: interaction.id,\n                    organizationId: interaction.organizationId,\n                    contactId: interaction.contactId,\n                    companyId: interaction.companyId,\n                    userId: interaction.userId,\n                    type: interaction.type,\n                    status: interaction.status,\n                    priority: interaction.priority,\n                    subject: interaction.subject,\n                    description: interaction.description,\n                    scheduledAt: interaction.scheduledAt,\n                    completedAt: interaction.completedAt,\n                    duration: interaction.duration,\n                    outcome: interaction.outcome,\n                    nextAction: interaction.nextAction,\n                    nextActionDate: interaction.nextActionDate,\n                    tags: interaction.tags,\n                    customFields: interaction.customFields,\n                    attachments: interaction.attachments,\n                    createdAt: interaction.createdAt,\n                    updatedAt: interaction.updatedAt\n                }))\n            }",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\interaction.controller.js",
        "start": 585,
        "end": 608,
        "startLoc": {
          "line": 585,
          "column": 20,
          "position": 6427
        },
        "endLoc": {
          "line": 608,
          "column": 2,
          "position": 6631
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\interaction.controller.js",
        "start": 347,
        "end": 369,
        "startLoc": {
          "line": 347,
          "column": 5,
          "position": 4040
        },
        "endLoc": {
          "line": 369,
          "column": 2,
          "position": 4242
        }
      }
    },
    {
      "format": "javascript",
      "lines": 17,
      "fragment": "(req, res) {\n        try {\n            const organizationId = req.user?.organizationId;\n            if (!organizationId) {\n                res.status(401).json(createErrorResponse(new Error('Unauthorized')));\n                return;\n            }\n            const interaction = await this.interactionRepository.findById(req.params.id);\n            if (!interaction) {\n                res.status(404).json(createErrorResponse(new Error('Interaction not found')));\n                return;\n            }\n            if (interaction.organizationId !== organizationId) {\n                res.status(403).json(createErrorResponse(new Error('Forbidden')));\n                return;\n            }\n            await",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\interaction.controller.js",
        "start": 618,
        "end": 634,
        "startLoc": {
          "line": 618,
          "column": 18,
          "position": 6710
        },
        "endLoc": {
          "line": 634,
          "column": 6,
          "position": 6885
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\interaction.controller.js",
        "start": 268,
        "end": 284,
        "startLoc": {
          "line": 268,
          "column": 19,
          "position": 3097
        },
        "endLoc": {
          "line": 284,
          "column": 6,
          "position": 3272
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": "(req, res) {\n        try {\n            const organizationId = req.user?.organizationId;\n            const userId = req.user?.id;\n            if (!organizationId || !userId) {\n                res.status(401).json(createErrorResponse(new Error('Unauthorized')));\n                return;\n            }\n            const request = {\n                ...req.body,\n                organizationId,\n                userId\n            };\n            const result = await this.createDealUseCase",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\deal.controller.js",
        "start": 11,
        "end": 24,
        "startLoc": {
          "line": 11,
          "column": 11,
          "position": 84
        },
        "endLoc": {
          "line": 24,
          "column": 18,
          "position": 210
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\interaction.controller.js",
        "start": 11,
        "end": 24,
        "startLoc": {
          "line": 11,
          "column": 18,
          "position": 84
        },
        "endLoc": {
          "line": 24,
          "column": 25,
          "position": 210
        }
      }
    },
    {
      "format": "javascript",
      "lines": 43,
      "fragment": ");\n            const response = {\n                id: result.data.deal.id,\n                organizationId: result.data.deal.organizationId,\n                contactId: result.data.deal.contactId,\n                companyId: result.data.deal.companyId,\n                userId: result.data.deal.userId,\n                name: result.data.deal.name,\n                description: result.data.deal.description,\n                stage: result.data.deal.stage,\n                status: result.data.deal.status,\n                priority: result.data.deal.priority,\n                source: result.data.deal.source,\n                value: result.data.deal.value,\n                currency: result.data.deal.currency,\n                probability: result.data.deal.probability,\n                expectedCloseDate: result.data.deal.expectedCloseDate,\n                actualCloseDate: result.data.deal.actualCloseDate,\n                nextStep: result.data.deal.nextStep,\n                nextStepDate: result.data.deal.nextStepDate,\n                tags: result.data.deal.tags,\n                customFields: result.data.deal.customFields,\n                attachments: result.data.deal.attachments,\n                notes: result.data.deal.notes,\n                competitors: result.data.deal.competitors,\n                decisionMakers: result.data.deal.decisionMakers,\n                budget: result.data.deal.budget,\n                timeline: result.data.deal.timeline,\n                requirements: result.data.deal.requirements,\n                objections: result.data.deal.objections,\n                createdAt: result.data.deal.createdAt,\n                updatedAt: result.data.deal.updatedAt\n            };\n            res.status(201).json({\n                success: true,\n                data: { deal: response }\n            });\n        }\n        catch (error) {\n            res.status(400).json(createErrorResponse(error));\n        }\n    }\n    async createQualified",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\deal.controller.js",
        "start": 74,
        "end": 116,
        "startLoc": {
          "line": 74,
          "column": 10,
          "position": 845
        },
        "endLoc": {
          "line": 116,
          "column": 16,
          "position": 1325
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\deal.controller.js",
        "start": 24,
        "end": 66,
        "startLoc": {
          "line": 24,
          "column": 8,
          "position": 215
        },
        "endLoc": {
          "line": 66,
          "column": 11,
          "position": 695
        }
      }
    },
    {
      "format": "javascript",
      "lines": 43,
      "fragment": "(organizationId, req.body.contactId, userId, req.body.name, req.body.value, req.body.currency, req.body.source, req.body.companyId);\n            const response = {\n                id: result.data.deal.id,\n                organizationId: result.data.deal.organizationId,\n                contactId: result.data.deal.contactId,\n                companyId: result.data.deal.companyId,\n                userId: result.data.deal.userId,\n                name: result.data.deal.name,\n                description: result.data.deal.description,\n                stage: result.data.deal.stage,\n                status: result.data.deal.status,\n                priority: result.data.deal.priority,\n                source: result.data.deal.source,\n                value: result.data.deal.value,\n                currency: result.data.deal.currency,\n                probability: result.data.deal.probability,\n                expectedCloseDate: result.data.deal.expectedCloseDate,\n                actualCloseDate: result.data.deal.actualCloseDate,\n                nextStep: result.data.deal.nextStep,\n                nextStepDate: result.data.deal.nextStepDate,\n                tags: result.data.deal.tags,\n                customFields: result.data.deal.customFields,\n                attachments: result.data.deal.attachments,\n                notes: result.data.deal.notes,\n                competitors: result.data.deal.competitors,\n                decisionMakers: result.data.deal.decisionMakers,\n                budget: result.data.deal.budget,\n                timeline: result.data.deal.timeline,\n                requirements: result.data.deal.requirements,\n                objections: result.data.deal.objections,\n                createdAt: result.data.deal.createdAt,\n                updatedAt: result.data.deal.updatedAt\n            };\n            res.status(201).json({\n                success: true,\n                data: { deal: response }\n            });\n        }\n        catch (error) {\n            res.status(400).json(createErrorResponse(error));\n        }\n    }\n    async createProposal",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\deal.controller.js",
        "start": 124,
        "end": 166,
        "startLoc": {
          "line": 124,
          "column": 16,
          "position": 1428
        },
        "endLoc": {
          "line": 166,
          "column": 15,
          "position": 1955
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\deal.controller.js",
        "start": 74,
        "end": 66,
        "startLoc": {
          "line": 74,
          "column": 11,
          "position": 798
        },
        "endLoc": {
          "line": 66,
          "column": 11,
          "position": 695
        }
      }
    },
    {
      "format": "javascript",
      "lines": 43,
      "fragment": "(organizationId, req.body.contactId, userId, req.body.name, req.body.value, req.body.currency, req.body.source, req.body.companyId);\n            const response = {\n                id: result.data.deal.id,\n                organizationId: result.data.deal.organizationId,\n                contactId: result.data.deal.contactId,\n                companyId: result.data.deal.companyId,\n                userId: result.data.deal.userId,\n                name: result.data.deal.name,\n                description: result.data.deal.description,\n                stage: result.data.deal.stage,\n                status: result.data.deal.status,\n                priority: result.data.deal.priority,\n                source: result.data.deal.source,\n                value: result.data.deal.value,\n                currency: result.data.deal.currency,\n                probability: result.data.deal.probability,\n                expectedCloseDate: result.data.deal.expectedCloseDate,\n                actualCloseDate: result.data.deal.actualCloseDate,\n                nextStep: result.data.deal.nextStep,\n                nextStepDate: result.data.deal.nextStepDate,\n                tags: result.data.deal.tags,\n                customFields: result.data.deal.customFields,\n                attachments: result.data.deal.attachments,\n                notes: result.data.deal.notes,\n                competitors: result.data.deal.competitors,\n                decisionMakers: result.data.deal.decisionMakers,\n                budget: result.data.deal.budget,\n                timeline: result.data.deal.timeline,\n                requirements: result.data.deal.requirements,\n                objections: result.data.deal.objections,\n                createdAt: result.data.deal.createdAt,\n                updatedAt: result.data.deal.updatedAt\n            };\n            res.status(201).json({\n                success: true,\n                data: { deal: response }\n            });\n        }\n        catch (error) {\n            res.status(400).json(createErrorResponse(error));\n        }\n    }\n    async createNegotiation",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\deal.controller.js",
        "start": 174,
        "end": 216,
        "startLoc": {
          "line": 174,
          "column": 15,
          "position": 2058
        },
        "endLoc": {
          "line": 216,
          "column": 18,
          "position": 2585
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\deal.controller.js",
        "start": 74,
        "end": 66,
        "startLoc": {
          "line": 74,
          "column": 11,
          "position": 798
        },
        "endLoc": {
          "line": 66,
          "column": 11,
          "position": 695
        }
      }
    },
    {
      "format": "javascript",
      "lines": 43,
      "fragment": "(organizationId, req.body.contactId, userId, req.body.name, req.body.value, req.body.currency, req.body.source, req.body.companyId);\n            const response = {\n                id: result.data.deal.id,\n                organizationId: result.data.deal.organizationId,\n                contactId: result.data.deal.contactId,\n                companyId: result.data.deal.companyId,\n                userId: result.data.deal.userId,\n                name: result.data.deal.name,\n                description: result.data.deal.description,\n                stage: result.data.deal.stage,\n                status: result.data.deal.status,\n                priority: result.data.deal.priority,\n                source: result.data.deal.source,\n                value: result.data.deal.value,\n                currency: result.data.deal.currency,\n                probability: result.data.deal.probability,\n                expectedCloseDate: result.data.deal.expectedCloseDate,\n                actualCloseDate: result.data.deal.actualCloseDate,\n                nextStep: result.data.deal.nextStep,\n                nextStepDate: result.data.deal.nextStepDate,\n                tags: result.data.deal.tags,\n                customFields: result.data.deal.customFields,\n                attachments: result.data.deal.attachments,\n                notes: result.data.deal.notes,\n                competitors: result.data.deal.competitors,\n                decisionMakers: result.data.deal.decisionMakers,\n                budget: result.data.deal.budget,\n                timeline: result.data.deal.timeline,\n                requirements: result.data.deal.requirements,\n                objections: result.data.deal.objections,\n                createdAt: result.data.deal.createdAt,\n                updatedAt: result.data.deal.updatedAt\n            };\n            res.status(201).json({\n                success: true,\n                data: { deal: response }\n            });\n        }\n        catch (error) {\n            res.status(400).json(createErrorResponse(error));\n        }\n    }\n    async updateDeal",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\deal.controller.js",
        "start": 224,
        "end": 266,
        "startLoc": {
          "line": 224,
          "column": 18,
          "position": 2688
        },
        "endLoc": {
          "line": 266,
          "column": 11,
          "position": 3215
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\deal.controller.js",
        "start": 74,
        "end": 66,
        "startLoc": {
          "line": 74,
          "column": 11,
          "position": 798
        },
        "endLoc": {
          "line": 66,
          "column": 11,
          "position": 695
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": "(req, res) {\n        try {\n            const organizationId = req.user?.organizationId;\n            const userId = req.user?.id;\n            if (!organizationId || !userId) {\n                res.status(401).json(createErrorResponse(new Error('Unauthorized')));\n                return;\n            }\n            const request = {\n                id: req.params.id,\n                organizationId,\n                userId,\n                updates: req.body\n            };\n            const result = await this.updateDealUseCase",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\deal.controller.js",
        "start": 266,
        "end": 280,
        "startLoc": {
          "line": 266,
          "column": 11,
          "position": 3216
        },
        "endLoc": {
          "line": 280,
          "column": 18,
          "position": 3355
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\interaction.controller.js",
        "start": 11,
        "end": 235,
        "startLoc": {
          "line": 11,
          "column": 18,
          "position": 84
        },
        "endLoc": {
          "line": 235,
          "column": 25,
          "position": 2728
        }
      }
    },
    {
      "format": "javascript",
      "lines": 34,
      "fragment": ".execute(request);\n            const response = {\n                id: result.data.deal.id,\n                organizationId: result.data.deal.organizationId,\n                contactId: result.data.deal.contactId,\n                companyId: result.data.deal.companyId,\n                userId: result.data.deal.userId,\n                name: result.data.deal.name,\n                description: result.data.deal.description,\n                stage: result.data.deal.stage,\n                status: result.data.deal.status,\n                priority: result.data.deal.priority,\n                source: result.data.deal.source,\n                value: result.data.deal.value,\n                currency: result.data.deal.currency,\n                probability: result.data.deal.probability,\n                expectedCloseDate: result.data.deal.expectedCloseDate,\n                actualCloseDate: result.data.deal.actualCloseDate,\n                nextStep: result.data.deal.nextStep,\n                nextStepDate: result.data.deal.nextStepDate,\n                tags: result.data.deal.tags,\n                customFields: result.data.deal.customFields,\n                attachments: result.data.deal.attachments,\n                notes: result.data.deal.notes,\n                competitors: result.data.deal.competitors,\n                decisionMakers: result.data.deal.decisionMakers,\n                budget: result.data.deal.budget,\n                timeline: result.data.deal.timeline,\n                requirements: result.data.deal.requirements,\n                objections: result.data.deal.objections,\n                createdAt: result.data.deal.createdAt,\n                updatedAt: result.data.deal.updatedAt\n            };\n            res.status(200",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\deal.controller.js",
        "start": 280,
        "end": 313,
        "startLoc": {
          "line": 280,
          "column": 18,
          "position": 3356
        },
        "endLoc": {
          "line": 313,
          "column": 4,
          "position": 3770
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\deal.controller.js",
        "start": 24,
        "end": 57,
        "startLoc": {
          "line": 24,
          "column": 18,
          "position": 211
        },
        "endLoc": {
          "line": 57,
          "column": 4,
          "position": 625
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": "deal.updatedAt\n            };\n            res.status(200).json({\n                success: true,\n                data: { deal: response }\n            });\n        }\n        catch (error) {\n            res.status(400).json(createErrorResponse(error));\n        }\n    }\n    async getDealsByOrganization",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\deal.controller.js",
        "start": 368,
        "end": 379,
        "startLoc": {
          "line": 368,
          "column": 2,
          "position": 4289
        },
        "endLoc": {
          "line": 379,
          "column": 23,
          "position": 4372
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\deal.controller.js",
        "start": 311,
        "end": 322,
        "startLoc": {
          "line": 311,
          "column": 2,
          "position": 3757
        },
        "endLoc": {
          "line": 322,
          "column": 12,
          "position": 3840
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": "(req, res) {\n        try {\n            const organizationId = req.user?.organizationId;\n            if (!organizationId) {\n                res.status(401).json(createErrorResponse(new Error('Unauthorized')));\n                return;\n            }\n            const query = {\n                page: parseInt(req.query.page) || 1,\n                limit: parseInt(req.query.limit) || 20,\n                sortBy: req.query.sortBy || 'createdAt',\n                sortOrder: req.query.sortOrder || 'desc',\n                search: req.query.search,\n                stage",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\deal.controller.js",
        "start": 379,
        "end": 392,
        "startLoc": {
          "line": 379,
          "column": 23,
          "position": 4373
        },
        "endLoc": {
          "line": 392,
          "column": 6,
          "position": 4528
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\interaction.controller.js",
        "start": 316,
        "end": 329,
        "startLoc": {
          "line": 316,
          "column": 30,
          "position": 3548
        },
        "endLoc": {
          "line": 329,
          "column": 5,
          "position": 3703
        }
      }
    },
    {
      "format": "javascript",
      "lines": 32,
      "fragment": "{\n                    id: deal.id,\n                    organizationId: deal.organizationId,\n                    contactId: deal.contactId,\n                    companyId: deal.companyId,\n                    userId: deal.userId,\n                    name: deal.name,\n                    description: deal.description,\n                    stage: deal.stage,\n                    status: deal.status,\n                    priority: deal.priority,\n                    source: deal.source,\n                    value: deal.value,\n                    currency: deal.currency,\n                    probability: deal.probability,\n                    expectedCloseDate: deal.expectedCloseDate,\n                    actualCloseDate: deal.actualCloseDate,\n                    nextStep: deal.nextStep,\n                    nextStepDate: deal.nextStepDate,\n                    tags: deal.tags,\n                    customFields: deal.customFields,\n                    attachments: deal.attachments,\n                    notes: deal.notes,\n                    competitors: deal.competitors,\n                    decisionMakers: deal.decisionMakers,\n                    budget: deal.budget,\n                    timeline: deal.timeline,\n                    requirements: deal.requirements,\n                    objections: deal.objections,\n                    createdAt: deal.createdAt,\n                    updatedAt: deal.updatedAt\n                })",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\deal.controller.js",
        "start": 416,
        "end": 447,
        "startLoc": {
          "line": 416,
          "column": 2,
          "position": 5015
        },
        "endLoc": {
          "line": 447,
          "column": 2,
          "position": 5288
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\deal.controller.js",
        "start": 338,
        "end": 369,
        "startLoc": {
          "line": 338,
          "column": 2,
          "position": 4022
        },
        "endLoc": {
          "line": 369,
          "column": 2,
          "position": 4295
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ".updatedAt\n                })),\n                pagination: result.pagination\n            };\n            res.status(200).json({\n                success: true,\n                data: response\n            });\n        }\n        catch (error) {\n            res.status(400).json(createErrorResponse(error));\n        }\n    }\n    async getDealsByContact",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\deal.controller.js",
        "start": 446,
        "end": 459,
        "startLoc": {
          "line": 446,
          "column": 5,
          "position": 5283
        },
        "endLoc": {
          "line": 459,
          "column": 18,
          "position": 5372
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\interaction.controller.js",
        "start": 368,
        "end": 381,
        "startLoc": {
          "line": 368,
          "column": 12,
          "position": 4235
        },
        "endLoc": {
          "line": 381,
          "column": 25,
          "position": 4324
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": "(req, res) {\n        try {\n            const organizationId = req.user?.organizationId;\n            if (!organizationId) {\n                res.status(401).json(createErrorResponse(new Error('Unauthorized')));\n                return;\n            }\n            const query = {\n                page: parseInt(req.query.page) || 1,\n                limit: parseInt(req.query.limit) || 20,\n                sortBy: req.query.sortBy || 'createdAt',\n                sortOrder: req.query.sortOrder || 'desc'\n            };\n            const result = await this.dealRepository",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\deal.controller.js",
        "start": 459,
        "end": 472,
        "startLoc": {
          "line": 459,
          "column": 18,
          "position": 5373
        },
        "endLoc": {
          "line": 472,
          "column": 15,
          "position": 5530
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\interaction.controller.js",
        "start": 316,
        "end": 394,
        "startLoc": {
          "line": 316,
          "column": 30,
          "position": 3548
        },
        "endLoc": {
          "line": 394,
          "column": 22,
          "position": 4482
        }
      }
    },
    {
      "format": "javascript",
      "lines": 46,
      "fragment": ", query);\n            const response = {\n                data: result.data.map(deal => ({\n                    id: deal.id,\n                    organizationId: deal.organizationId,\n                    contactId: deal.contactId,\n                    companyId: deal.companyId,\n                    userId: deal.userId,\n                    name: deal.name,\n                    description: deal.description,\n                    stage: deal.stage,\n                    status: deal.status,\n                    priority: deal.priority,\n                    source: deal.source,\n                    value: deal.value,\n                    currency: deal.currency,\n                    probability: deal.probability,\n                    expectedCloseDate: deal.expectedCloseDate,\n                    actualCloseDate: deal.actualCloseDate,\n                    nextStep: deal.nextStep,\n                    nextStepDate: deal.nextStepDate,\n                    tags: deal.tags,\n                    customFields: deal.customFields,\n                    attachments: deal.attachments,\n                    notes: deal.notes,\n                    competitors: deal.competitors,\n                    decisionMakers: deal.decisionMakers,\n                    budget: deal.budget,\n                    timeline: deal.timeline,\n                    requirements: deal.requirements,\n                    objections: deal.objections,\n                    createdAt: deal.createdAt,\n                    updatedAt: deal.updatedAt\n                })),\n                pagination: result.pagination\n            };\n            res.status(200).json({\n                success: true,\n                data: response\n            });\n        }\n        catch (error) {\n            res.status(400).json(createErrorResponse(error));\n        }\n    }\n    async getDealsByCompany",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\deal.controller.js",
        "start": 472,
        "end": 517,
        "startLoc": {
          "line": 472,
          "column": 10,
          "position": 5539
        },
        "endLoc": {
          "line": 517,
          "column": 18,
          "position": 5926
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\deal.controller.js",
        "start": 414,
        "end": 381,
        "startLoc": {
          "line": 414,
          "column": 15,
          "position": 4985
        },
        "endLoc": {
          "line": 381,
          "column": 25,
          "position": 4324
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": "(req, res) {\n        try {\n            const organizationId = req.user?.organizationId;\n            if (!organizationId) {\n                res.status(401).json(createErrorResponse(new Error('Unauthorized')));\n                return;\n            }\n            const query = {\n                page: parseInt(req.query.page) || 1,\n                limit: parseInt(req.query.limit) || 20,\n                sortBy: req.query.sortBy || 'createdAt',\n                sortOrder: req.query.sortOrder || 'desc'\n            };\n            const result = await this.dealRepository.findByCompanyId",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\deal.controller.js",
        "start": 517,
        "end": 530,
        "startLoc": {
          "line": 517,
          "column": 18,
          "position": 5927
        },
        "endLoc": {
          "line": 530,
          "column": 16,
          "position": 6086
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\interaction.controller.js",
        "start": 316,
        "end": 472,
        "startLoc": {
          "line": 316,
          "column": 30,
          "position": 3548
        },
        "endLoc": {
          "line": 472,
          "column": 16,
          "position": 5532
        }
      }
    },
    {
      "format": "javascript",
      "lines": 46,
      "fragment": ", query);\n            const response = {\n                data: result.data.map(deal => ({\n                    id: deal.id,\n                    organizationId: deal.organizationId,\n                    contactId: deal.contactId,\n                    companyId: deal.companyId,\n                    userId: deal.userId,\n                    name: deal.name,\n                    description: deal.description,\n                    stage: deal.stage,\n                    status: deal.status,\n                    priority: deal.priority,\n                    source: deal.source,\n                    value: deal.value,\n                    currency: deal.currency,\n                    probability: deal.probability,\n                    expectedCloseDate: deal.expectedCloseDate,\n                    actualCloseDate: deal.actualCloseDate,\n                    nextStep: deal.nextStep,\n                    nextStepDate: deal.nextStepDate,\n                    tags: deal.tags,\n                    customFields: deal.customFields,\n                    attachments: deal.attachments,\n                    notes: deal.notes,\n                    competitors: deal.competitors,\n                    decisionMakers: deal.decisionMakers,\n                    budget: deal.budget,\n                    timeline: deal.timeline,\n                    requirements: deal.requirements,\n                    objections: deal.objections,\n                    createdAt: deal.createdAt,\n                    updatedAt: deal.updatedAt\n                })),\n                pagination: result.pagination\n            };\n            res.status(200).json({\n                success: true,\n                data: response\n            });\n        }\n        catch (error) {\n            res.status(400).json(createErrorResponse(error));\n        }\n    }\n    async getDealStats",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\deal.controller.js",
        "start": 530,
        "end": 575,
        "startLoc": {
          "line": 530,
          "column": 10,
          "position": 6093
        },
        "endLoc": {
          "line": 575,
          "column": 13,
          "position": 6480
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\deal.controller.js",
        "start": 414,
        "end": 381,
        "startLoc": {
          "line": 414,
          "column": 15,
          "position": 4985
        },
        "endLoc": {
          "line": 381,
          "column": 25,
          "position": 4324
        }
      }
    },
    {
      "format": "javascript",
      "lines": 23,
      "fragment": "stage: req.query.stage,\n                status: req.query.status,\n                priority: req.query.priority,\n                source: req.query.source,\n                contactId: req.query.contactId,\n                companyId: req.query.companyId,\n                userId: req.query.userId,\n                valueFrom: req.query.valueFrom ? parseFloat(req.query.valueFrom) : undefined,\n                valueTo: req.query.valueTo ? parseFloat(req.query.valueTo) : undefined,\n                probabilityFrom: req.query.probabilityFrom ? parseInt(req.query.probabilityFrom) : undefined,\n                probabilityTo: req.query.probabilityTo ? parseInt(req.query.probabilityTo) : undefined,\n                expectedCloseFrom: req.query.expectedCloseFrom ? new Date(req.query.expectedCloseFrom) : undefined,\n                expectedCloseTo: req.query.expectedCloseTo ? new Date(req.query.expectedCloseTo) : undefined,\n                actualCloseFrom: req.query.actualCloseFrom ? new Date(req.query.actualCloseFrom) : undefined,\n                actualCloseTo: req.query.actualCloseTo ? new Date(req.query.actualCloseTo) : undefined,\n                tags: req.query.tags,\n                hasNextStep: req.query.hasNextStep ? req.query.hasNextStep === 'true' : undefined,\n                overdue: req.query.overdue ? req.query.overdue === 'true' : undefined,\n                won: req.query.won ? req.query.won === 'true' : undefined,\n                lost: req.query.lost ? req.query.lost === 'true' : undefined,\n                active: req.query.active ? req.query.active === 'true' : undefined\n            };\n            const stats",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\deal.controller.js",
        "start": 583,
        "end": 605,
        "startLoc": {
          "line": 583,
          "column": 17,
          "position": 6559
        },
        "endLoc": {
          "line": 605,
          "column": 6,
          "position": 7003
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\deal.controller.js",
        "start": 392,
        "end": 414,
        "startLoc": {
          "line": 392,
          "column": 17,
          "position": 4528
        },
        "endLoc": {
          "line": 414,
          "column": 7,
          "position": 4972
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "};\n            res.status(200).json({\n                success: true,\n                data: { stats: response }\n            });\n        }\n        catch (error) {\n            res.status(400).json(createErrorResponse(error));\n        }\n    }\n    async getPipelineData",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\deal.controller.js",
        "start": 624,
        "end": 634,
        "startLoc": {
          "line": 624,
          "column": 13,
          "position": 7184
        },
        "endLoc": {
          "line": 634,
          "column": 16,
          "position": 7262
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\interaction.controller.js",
        "start": 515,
        "end": 525,
        "startLoc": {
          "line": 515,
          "column": 13,
          "position": 5769
        },
        "endLoc": {
          "line": 525,
          "column": 17,
          "position": 5847
        }
      }
    },
    {
      "format": "javascript",
      "lines": 16,
      "fragment": ": response }\n            });\n        }\n        catch (error) {\n            res.status(400).json(createErrorResponse(error));\n        }\n    }\n    async getDashboardData(req, res) {\n        try {\n            const organizationId = req.user?.organizationId;\n            const userId = req.user?.id;\n            if (!organizationId) {\n                res.status(401).json(createErrorResponse(new Error('Unauthorized')));\n                return;\n            }\n            const dashboardData = await this.dealRepository",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\deal.controller.js",
        "start": 700,
        "end": 715,
        "startLoc": {
          "line": 700,
          "column": 16,
          "position": 7982
        },
        "endLoc": {
          "line": 715,
          "column": 15,
          "position": 8126
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\interaction.controller.js",
        "start": 518,
        "end": 533,
        "startLoc": {
          "line": 518,
          "column": 6,
          "position": 5798
        },
        "endLoc": {
          "line": 533,
          "column": 22,
          "position": 5942
        }
      }
    },
    {
      "format": "javascript",
      "lines": 33,
      "fragment": ".map(deal => ({\n                    id: deal.id,\n                    organizationId: deal.organizationId,\n                    contactId: deal.contactId,\n                    companyId: deal.companyId,\n                    userId: deal.userId,\n                    name: deal.name,\n                    description: deal.description,\n                    stage: deal.stage,\n                    status: deal.status,\n                    priority: deal.priority,\n                    source: deal.source,\n                    value: deal.value,\n                    currency: deal.currency,\n                    probability: deal.probability,\n                    expectedCloseDate: deal.expectedCloseDate,\n                    actualCloseDate: deal.actualCloseDate,\n                    nextStep: deal.nextStep,\n                    nextStepDate: deal.nextStepDate,\n                    tags: deal.tags,\n                    customFields: deal.customFields,\n                    attachments: deal.attachments,\n                    notes: deal.notes,\n                    competitors: deal.competitors,\n                    decisionMakers: deal.decisionMakers,\n                    budget: deal.budget,\n                    timeline: deal.timeline,\n                    requirements: deal.requirements,\n                    objections: deal.objections,\n                    createdAt: deal.createdAt,\n                    updatedAt: deal.updatedAt\n                })),\n                upcomingDeals",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\deal.controller.js",
        "start": 725,
        "end": 757,
        "startLoc": {
          "line": 725,
          "column": 12,
          "position": 8225
        },
        "endLoc": {
          "line": 757,
          "column": 14,
          "position": 8511
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\deal.controller.js",
        "start": 416,
        "end": 448,
        "startLoc": {
          "line": 416,
          "column": 5,
          "position": 5007
        },
        "endLoc": {
          "line": 448,
          "column": 11,
          "position": 5293
        }
      }
    },
    {
      "format": "javascript",
      "lines": 33,
      "fragment": ".map(deal => ({\n                    id: deal.id,\n                    organizationId: deal.organizationId,\n                    contactId: deal.contactId,\n                    companyId: deal.companyId,\n                    userId: deal.userId,\n                    name: deal.name,\n                    description: deal.description,\n                    stage: deal.stage,\n                    status: deal.status,\n                    priority: deal.priority,\n                    source: deal.source,\n                    value: deal.value,\n                    currency: deal.currency,\n                    probability: deal.probability,\n                    expectedCloseDate: deal.expectedCloseDate,\n                    actualCloseDate: deal.actualCloseDate,\n                    nextStep: deal.nextStep,\n                    nextStepDate: deal.nextStepDate,\n                    tags: deal.tags,\n                    customFields: deal.customFields,\n                    attachments: deal.attachments,\n                    notes: deal.notes,\n                    competitors: deal.competitors,\n                    decisionMakers: deal.decisionMakers,\n                    budget: deal.budget,\n                    timeline: deal.timeline,\n                    requirements: deal.requirements,\n                    objections: deal.objections,\n                    createdAt: deal.createdAt,\n                    updatedAt: deal.updatedAt\n                })),\n                overdueDeals",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\deal.controller.js",
        "start": 757,
        "end": 789,
        "startLoc": {
          "line": 757,
          "column": 14,
          "position": 8517
        },
        "endLoc": {
          "line": 789,
          "column": 13,
          "position": 8803
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\deal.controller.js",
        "start": 416,
        "end": 448,
        "startLoc": {
          "line": 416,
          "column": 5,
          "position": 5007
        },
        "endLoc": {
          "line": 448,
          "column": 11,
          "position": 5293
        }
      }
    },
    {
      "format": "javascript",
      "lines": 33,
      "fragment": ".map(deal => ({\n                    id: deal.id,\n                    organizationId: deal.organizationId,\n                    contactId: deal.contactId,\n                    companyId: deal.companyId,\n                    userId: deal.userId,\n                    name: deal.name,\n                    description: deal.description,\n                    stage: deal.stage,\n                    status: deal.status,\n                    priority: deal.priority,\n                    source: deal.source,\n                    value: deal.value,\n                    currency: deal.currency,\n                    probability: deal.probability,\n                    expectedCloseDate: deal.expectedCloseDate,\n                    actualCloseDate: deal.actualCloseDate,\n                    nextStep: deal.nextStep,\n                    nextStepDate: deal.nextStepDate,\n                    tags: deal.tags,\n                    customFields: deal.customFields,\n                    attachments: deal.attachments,\n                    notes: deal.notes,\n                    competitors: deal.competitors,\n                    decisionMakers: deal.decisionMakers,\n                    budget: deal.budget,\n                    timeline: deal.timeline,\n                    requirements: deal.requirements,\n                    objections: deal.objections,\n                    createdAt: deal.createdAt,\n                    updatedAt: deal.updatedAt\n                })),\n                topDeals",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\deal.controller.js",
        "start": 789,
        "end": 821,
        "startLoc": {
          "line": 789,
          "column": 13,
          "position": 8809
        },
        "endLoc": {
          "line": 821,
          "column": 9,
          "position": 9095
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\deal.controller.js",
        "start": 416,
        "end": 448,
        "startLoc": {
          "line": 416,
          "column": 5,
          "position": 5007
        },
        "endLoc": {
          "line": 448,
          "column": 11,
          "position": 5293
        }
      }
    },
    {
      "format": "javascript",
      "lines": 33,
      "fragment": ".map(deal => ({\n                    id: deal.id,\n                    organizationId: deal.organizationId,\n                    contactId: deal.contactId,\n                    companyId: deal.companyId,\n                    userId: deal.userId,\n                    name: deal.name,\n                    description: deal.description,\n                    stage: deal.stage,\n                    status: deal.status,\n                    priority: deal.priority,\n                    source: deal.source,\n                    value: deal.value,\n                    currency: deal.currency,\n                    probability: deal.probability,\n                    expectedCloseDate: deal.expectedCloseDate,\n                    actualCloseDate: deal.actualCloseDate,\n                    nextStep: deal.nextStep,\n                    nextStepDate: deal.nextStepDate,\n                    tags: deal.tags,\n                    customFields: deal.customFields,\n                    attachments: deal.attachments,\n                    notes: deal.notes,\n                    competitors: deal.competitors,\n                    decisionMakers: deal.decisionMakers,\n                    budget: deal.budget,\n                    timeline: deal.timeline,\n                    requirements: deal.requirements,\n                    objections: deal.objections,\n                    createdAt: deal.createdAt,\n                    updatedAt: deal.updatedAt\n                }))\n            }",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\deal.controller.js",
        "start": 821,
        "end": 853,
        "startLoc": {
          "line": 821,
          "column": 9,
          "position": 9101
        },
        "endLoc": {
          "line": 853,
          "column": 2,
          "position": 9386
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\deal.controller.js",
        "start": 416,
        "end": 447,
        "startLoc": {
          "line": 416,
          "column": 5,
          "position": 5007
        },
        "endLoc": {
          "line": 447,
          "column": 2,
          "position": 5290
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ".updatedAt\n                }))\n            };\n            res.status(200).json({\n                success: true,\n                data: { dashboard: response }\n            });\n        }\n        catch (error) {\n            res.status(400).json(createErrorResponse(error));\n        }\n    }\n    async deleteDeal",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\deal.controller.js",
        "start": 851,
        "end": 863,
        "startLoc": {
          "line": 851,
          "column": 5,
          "position": 9377
        },
        "endLoc": {
          "line": 863,
          "column": 11,
          "position": 9464
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\interaction.controller.js",
        "start": 606,
        "end": 618,
        "startLoc": {
          "line": 606,
          "column": 12,
          "position": 6622
        },
        "endLoc": {
          "line": 618,
          "column": 18,
          "position": 6709
        }
      }
    },
    {
      "format": "javascript",
      "lines": 17,
      "fragment": "(req, res) {\n        try {\n            const organizationId = req.user?.organizationId;\n            if (!organizationId) {\n                res.status(401).json(createErrorResponse(new Error('Unauthorized')));\n                return;\n            }\n            const deal = await this.dealRepository.findById(req.params.id);\n            if (!deal) {\n                res.status(404).json(createErrorResponse(new Error('Deal not found')));\n                return;\n            }\n            if (deal.organizationId !== organizationId) {\n                res.status(403).json(createErrorResponse(new Error('Forbidden')));\n                return;\n            }\n            await",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\deal.controller.js",
        "start": 863,
        "end": 879,
        "startLoc": {
          "line": 863,
          "column": 11,
          "position": 9465
        },
        "endLoc": {
          "line": 879,
          "column": 6,
          "position": 9640
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\deal.controller.js",
        "start": 322,
        "end": 338,
        "startLoc": {
          "line": 322,
          "column": 12,
          "position": 3841
        },
        "endLoc": {
          "line": 338,
          "column": 6,
          "position": 4016
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "(req.body);\n            const createdBy = req.user?.id || req.headers['x-user-id'];\n            if (!createdBy) {\n                res.status(401).json({\n                    success: false,\n                    error: 'User ID is required',\n                    timestamp: new Date()\n                });\n                return;\n            }\n            const result = await this.createContactUseCase",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 15,
        "end": 25,
        "startLoc": {
          "line": 15,
          "column": 29,
          "position": 166
        },
        "endLoc": {
          "line": 25,
          "column": 21,
          "position": 266
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\user.controller.js",
        "start": 9,
        "end": 19,
        "startLoc": {
          "line": 9,
          "column": 26,
          "position": 102
        },
        "endLoc": {
          "line": 19,
          "column": 23,
          "position": 202
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": "({\n                ...requestData,\n                createdBy\n            });\n            if (!result.success) {\n                res.status(400).json({\n                    success: false,\n                    error: result.error,\n                    timestamp: new Date()\n                });\n                return;\n            }\n            const response = {\n                success: true,\n                data: transformContactToResponse",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 25,
        "end": 39,
        "startLoc": {
          "line": 25,
          "column": 8,
          "position": 269
        },
        "endLoc": {
          "line": 39,
          "column": 27,
          "position": 367
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\user.controller.js",
        "start": 19,
        "end": 33,
        "startLoc": {
          "line": 19,
          "column": 11,
          "position": 205
        },
        "endLoc": {
          "line": 33,
          "column": 24,
          "position": 303
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "(req.body);\n            const updatedBy = req.user?.id || req.headers['x-user-id'];\n            if (!updatedBy) {\n                res.status(401).json({\n                    success: false,\n                    error: 'User ID is required',\n                    timestamp: new Date()\n                });\n                return;\n            }\n            const result = await this.updateContactUseCase",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 53,
        "end": 63,
        "startLoc": {
          "line": 53,
          "column": 29,
          "position": 490
        },
        "endLoc": {
          "line": 63,
          "column": 21,
          "position": 590
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\user.controller.js",
        "start": 47,
        "end": 57,
        "startLoc": {
          "line": 47,
          "column": 26,
          "position": 426
        },
        "endLoc": {
          "line": 57,
          "column": 23,
          "position": 526
        }
      }
    },
    {
      "format": "javascript",
      "lines": 16,
      "fragment": ",\n                ...requestData,\n                updatedBy\n            });\n            if (!result.success) {\n                res.status(400).json({\n                    success: false,\n                    error: result.error,\n                    timestamp: new Date()\n                });\n                return;\n            }\n            const response = {\n                success: true,\n                data: transformContactToResponse(result.contact),\n                message: 'Contact updated successfully'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 64,
        "end": 79,
        "startLoc": {
          "line": 64,
          "column": 10,
          "position": 598
        },
        "endLoc": {
          "line": 79,
          "column": 31,
          "position": 707
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\user.controller.js",
        "start": 58,
        "end": 40,
        "startLoc": {
          "line": 58,
          "column": 7,
          "position": 534
        },
        "endLoc": {
          "line": 40,
          "column": 31,
          "position": 379
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "({ contactId: req.params.contactId });\n            const contact = await this.contactRepository.findById(requestData.contactId);\n            if (!contact) {\n                res.status(404).json({\n                    success: false,\n                    error: 'Contact not found',\n                    timestamp: new Date()\n                });\n                return;\n            }\n            const",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 116,
        "end": 126,
        "startLoc": {
          "line": 116,
          "column": 26,
          "position": 1031
        },
        "endLoc": {
          "line": 126,
          "column": 6,
          "position": 1127
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 91,
        "end": 101,
        "startLoc": {
          "line": 91,
          "column": 29,
          "position": 804
        },
        "endLoc": {
          "line": 101,
          "column": 6,
          "position": 900
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ");\n            const response = {\n                success: true,\n                data: contacts.map(transformContactToResponse),\n                timestamp: new Date(),\n                requestId: req.headers['x-request-id']\n            };\n            res.status(200).json(response);\n        }\n        catch (error) {\n            next(error);\n        }\n    }\n    async searchContacts",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 157,
        "end": 170,
        "startLoc": {
          "line": 157,
          "column": 10,
          "position": 1415
        },
        "endLoc": {
          "line": 170,
          "column": 15,
          "position": 1514
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 141,
        "end": 154,
        "startLoc": {
          "line": 141,
          "column": 15,
          "position": 1268
        },
        "endLoc": {
          "line": 154,
          "column": 21,
          "position": 1367
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ");\n            const response = {\n                success: true,\n                data: contacts.map(transformContactToResponse),\n                timestamp: new Date(),\n                requestId: req.headers['x-request-id']\n            };\n            res.status(200).json(response);\n        }\n        catch (error) {\n            next(error);\n        }\n    }\n    async getContactsByStatus",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 259,
        "end": 272,
        "startLoc": {
          "line": 259,
          "column": 5,
          "position": 2352
        },
        "endLoc": {
          "line": 272,
          "column": 20,
          "position": 2451
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 141,
        "end": 154,
        "startLoc": {
          "line": 141,
          "column": 15,
          "position": 1268
        },
        "endLoc": {
          "line": 154,
          "column": 21,
          "position": 1367
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ");\n            const response = {\n                success: true,\n                data: contacts.map(transformContactToResponse),\n                timestamp: new Date(),\n                requestId: req.headers['x-request-id']\n            };\n            res.status(200).json(response);\n        }\n        catch (error) {\n            next(error);\n        }\n    }\n    async getContactsByDepartment",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 276,
        "end": 289,
        "startLoc": {
          "line": 276,
          "column": 7,
          "position": 2516
        },
        "endLoc": {
          "line": 289,
          "column": 24,
          "position": 2615
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 141,
        "end": 154,
        "startLoc": {
          "line": 141,
          "column": 15,
          "position": 1268
        },
        "endLoc": {
          "line": 154,
          "column": 21,
          "position": 1367
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ");\n            const response = {\n                success: true,\n                data: contacts.map(transformContactToResponse),\n                timestamp: new Date(),\n                requestId: req.headers['x-request-id']\n            };\n            res.status(200).json(response);\n        }\n        catch (error) {\n            next(error);\n        }\n    }\n    async getContactsByIndustry",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 293,
        "end": 306,
        "startLoc": {
          "line": 293,
          "column": 11,
          "position": 2680
        },
        "endLoc": {
          "line": 306,
          "column": 22,
          "position": 2779
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 141,
        "end": 154,
        "startLoc": {
          "line": 141,
          "column": 15,
          "position": 1268
        },
        "endLoc": {
          "line": 154,
          "column": 21,
          "position": 1367
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ");\n            const response = {\n                success: true,\n                data: contacts.map(transformContactToResponse),\n                timestamp: new Date(),\n                requestId: req.headers['x-request-id']\n            };\n            res.status(200).json(response);\n        }\n        catch (error) {\n            next(error);\n        }\n    }\n    async getContactsByAssignedUser",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 310,
        "end": 323,
        "startLoc": {
          "line": 310,
          "column": 9,
          "position": 2844
        },
        "endLoc": {
          "line": 323,
          "column": 26,
          "position": 2943
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 141,
        "end": 154,
        "startLoc": {
          "line": 141,
          "column": 15,
          "position": 1268
        },
        "endLoc": {
          "line": 154,
          "column": 21,
          "position": 1367
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ");\n            const response = {\n                success: true,\n                data: contacts.map(transformContactToResponse),\n                timestamp: new Date(),\n                requestId: req.headers['x-request-id']\n            };\n            res.status(200).json(response);\n        }\n        catch (error) {\n            next(error);\n        }\n    }\n    async getOverdueForFollowUp",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 327,
        "end": 340,
        "startLoc": {
          "line": 327,
          "column": 7,
          "position": 3008
        },
        "endLoc": {
          "line": 340,
          "column": 22,
          "position": 3107
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 141,
        "end": 154,
        "startLoc": {
          "line": 141,
          "column": 15,
          "position": 1268
        },
        "endLoc": {
          "line": 154,
          "column": 21,
          "position": 1367
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": "(organizationId);\n            const response = {\n                success: true,\n                data: contacts.map(transformContactToResponse),\n                timestamp: new Date(),\n                requestId: req.headers['x-request-id']\n            };\n            res.status(200).json(response);\n        }\n        catch (error) {\n            next(error);\n        }\n    }\n    async getScheduledForFollowUp",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 343,
        "end": 356,
        "startLoc": {
          "line": 343,
          "column": 23,
          "position": 3153
        },
        "endLoc": {
          "line": 356,
          "column": 24,
          "position": 3254
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 141,
        "end": 154,
        "startLoc": {
          "line": 141,
          "column": 21,
          "position": 1266
        },
        "endLoc": {
          "line": 154,
          "column": 21,
          "position": 1367
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ");\n            const response = {\n                success: true,\n                data: contacts.map(transformContactToResponse),\n                timestamp: new Date(),\n                requestId: req.headers['x-request-id']\n            };\n            res.status(200).json(response);\n        }\n        catch (error) {\n            next(error);\n        }\n    }\n    async getHighScoreLeads",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 360,
        "end": 373,
        "startLoc": {
          "line": 360,
          "column": 5,
          "position": 3324
        },
        "endLoc": {
          "line": 373,
          "column": 18,
          "position": 3423
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 141,
        "end": 154,
        "startLoc": {
          "line": 141,
          "column": 15,
          "position": 1268
        },
        "endLoc": {
          "line": 154,
          "column": 21,
          "position": 1367
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ");\n            const response = {\n                success: true,\n                data: contacts.map(transformContactToResponse),\n                timestamp: new Date(),\n                requestId: req.headers['x-request-id']\n            };\n            res.status(200).json(response);\n        }\n        catch (error) {\n            next(error);\n        }\n    }\n    async getMediumScoreLeads",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 377,
        "end": 390,
        "startLoc": {
          "line": 377,
          "column": 9,
          "position": 3495
        },
        "endLoc": {
          "line": 390,
          "column": 20,
          "position": 3594
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 141,
        "end": 154,
        "startLoc": {
          "line": 141,
          "column": 15,
          "position": 1268
        },
        "endLoc": {
          "line": 154,
          "column": 21,
          "position": 1367
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": "(organizationId);\n            const response = {\n                success: true,\n                data: contacts.map(transformContactToResponse),\n                timestamp: new Date(),\n                requestId: req.headers['x-request-id']\n            };\n            res.status(200).json(response);\n        }\n        catch (error) {\n            next(error);\n        }\n    }\n    async getLowScoreLeads",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 393,
        "end": 406,
        "startLoc": {
          "line": 393,
          "column": 21,
          "position": 3640
        },
        "endLoc": {
          "line": 406,
          "column": 17,
          "position": 3741
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 141,
        "end": 154,
        "startLoc": {
          "line": 141,
          "column": 21,
          "position": 1266
        },
        "endLoc": {
          "line": 154,
          "column": 21,
          "position": 1367
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": "(organizationId);\n            const response = {\n                success: true,\n                data: contacts.map(transformContactToResponse),\n                timestamp: new Date(),\n                requestId: req.headers['x-request-id']\n            };\n            res.status(200).json(response);\n        }\n        catch (error) {\n            next(error);\n        }\n    }\n    async getHighlyEngagedContacts",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 409,
        "end": 422,
        "startLoc": {
          "line": 409,
          "column": 18,
          "position": 3787
        },
        "endLoc": {
          "line": 422,
          "column": 25,
          "position": 3888
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 141,
        "end": 154,
        "startLoc": {
          "line": 141,
          "column": 21,
          "position": 1266
        },
        "endLoc": {
          "line": 154,
          "column": 21,
          "position": 1367
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": "(organizationId, minScore);\n            const response = {\n                success: true,\n                data: contacts.map(transformContactToResponse),\n                timestamp: new Date(),\n                requestId: req.headers['x-request-id']\n            };\n            res.status(200).json(response);\n        }\n        catch (error) {\n            next(error);\n        }\n    }\n    async getModeratelyEngagedContacts",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 426,
        "end": 439,
        "startLoc": {
          "line": 426,
          "column": 26,
          "position": 3955
        },
        "endLoc": {
          "line": 439,
          "column": 29,
          "position": 4059
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 377,
        "end": 154,
        "startLoc": {
          "line": 377,
          "column": 19,
          "position": 3490
        },
        "endLoc": {
          "line": 154,
          "column": 21,
          "position": 1367
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": "(organizationId);\n            const response = {\n                success: true,\n                data: contacts.map(transformContactToResponse),\n                timestamp: new Date(),\n                requestId: req.headers['x-request-id']\n            };\n            res.status(200).json(response);\n        }\n        catch (error) {\n            next(error);\n        }\n    }\n    async getLowEngagedContacts",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 442,
        "end": 455,
        "startLoc": {
          "line": 442,
          "column": 30,
          "position": 4105
        },
        "endLoc": {
          "line": 455,
          "column": 22,
          "position": 4206
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 141,
        "end": 154,
        "startLoc": {
          "line": 141,
          "column": 21,
          "position": 1266
        },
        "endLoc": {
          "line": 154,
          "column": 21,
          "position": 1367
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": "(organizationId);\n            const response = {\n                success: true,\n                data: contacts.map(transformContactToResponse),\n                timestamp: new Date(),\n                requestId: req.headers['x-request-id']\n            };\n            res.status(200).json(response);\n        }\n        catch (error) {\n            next(error);\n        }\n    }\n    async getContactsWithBirthdayToday",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 458,
        "end": 471,
        "startLoc": {
          "line": 458,
          "column": 23,
          "position": 4252
        },
        "endLoc": {
          "line": 471,
          "column": 29,
          "position": 4353
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 141,
        "end": 154,
        "startLoc": {
          "line": 141,
          "column": 21,
          "position": 1266
        },
        "endLoc": {
          "line": 154,
          "column": 21,
          "position": 1367
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": "(organizationId);\n            const response = {\n                success: true,\n                data: contacts.map(transformContactToResponse),\n                timestamp: new Date(),\n                requestId: req.headers['x-request-id']\n            };\n            res.status(200).json(response);\n        }\n        catch (error) {\n            next(error);\n        }\n    }\n    async getContactsWithBirthdayThisWeek",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 474,
        "end": 487,
        "startLoc": {
          "line": 474,
          "column": 30,
          "position": 4399
        },
        "endLoc": {
          "line": 487,
          "column": 32,
          "position": 4500
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 141,
        "end": 154,
        "startLoc": {
          "line": 141,
          "column": 21,
          "position": 1266
        },
        "endLoc": {
          "line": 154,
          "column": 21,
          "position": 1367
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": "(organizationId);\n            const response = {\n                success: true,\n                data: contacts.map(transformContactToResponse),\n                timestamp: new Date(),\n                requestId: req.headers['x-request-id']\n            };\n            res.status(200).json(response);\n        }\n        catch (error) {\n            next(error);\n        }\n    }\n    async getContactsWithBirthdayThisMonth",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 490,
        "end": 503,
        "startLoc": {
          "line": 490,
          "column": 33,
          "position": 4546
        },
        "endLoc": {
          "line": 503,
          "column": 33,
          "position": 4647
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 141,
        "end": 154,
        "startLoc": {
          "line": 141,
          "column": 21,
          "position": 1266
        },
        "endLoc": {
          "line": 154,
          "column": 21,
          "position": 1367
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": "(organizationId);\n            const response = {\n                success: true,\n                data: contacts.map(transformContactToResponse),\n                timestamp: new Date(),\n                requestId: req.headers['x-request-id']\n            };\n            res.status(200).json(response);\n        }\n        catch (error) {\n            next(error);\n        }\n    }\n    async getContactsWithAnniversaryToday",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 506,
        "end": 519,
        "startLoc": {
          "line": 506,
          "column": 34,
          "position": 4693
        },
        "endLoc": {
          "line": 519,
          "column": 32,
          "position": 4794
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 141,
        "end": 154,
        "startLoc": {
          "line": 141,
          "column": 21,
          "position": 1266
        },
        "endLoc": {
          "line": 154,
          "column": 21,
          "position": 1367
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": "(organizationId);\n            const response = {\n                success: true,\n                data: contacts.map(transformContactToResponse),\n                timestamp: new Date(),\n                requestId: req.headers['x-request-id']\n            };\n            res.status(200).json(response);\n        }\n        catch (error) {\n            next(error);\n        }\n    }\n    async getContactsWithAnniversaryThisWeek",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 522,
        "end": 535,
        "startLoc": {
          "line": 522,
          "column": 33,
          "position": 4840
        },
        "endLoc": {
          "line": 535,
          "column": 35,
          "position": 4941
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 141,
        "end": 154,
        "startLoc": {
          "line": 141,
          "column": 21,
          "position": 1266
        },
        "endLoc": {
          "line": 154,
          "column": 21,
          "position": 1367
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": "(organizationId);\n            const response = {\n                success: true,\n                data: contacts.map(transformContactToResponse),\n                timestamp: new Date(),\n                requestId: req.headers['x-request-id']\n            };\n            res.status(200).json(response);\n        }\n        catch (error) {\n            next(error);\n        }\n    }\n    async getContactsWithAnniversaryThisMonth",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 538,
        "end": 551,
        "startLoc": {
          "line": 538,
          "column": 36,
          "position": 4987
        },
        "endLoc": {
          "line": 551,
          "column": 36,
          "position": 5088
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 141,
        "end": 154,
        "startLoc": {
          "line": 141,
          "column": 21,
          "position": 1266
        },
        "endLoc": {
          "line": 154,
          "column": 21,
          "position": 1367
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": "(organizationId);\n            const response = {\n                success: true,\n                data: contacts.map(transformContactToResponse),\n                timestamp: new Date(),\n                requestId: req.headers['x-request-id']\n            };\n            res.status(200).json(response);\n        }\n        catch (error) {\n            next(error);\n        }\n    }\n    async bulkUpdateContacts",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 554,
        "end": 567,
        "startLoc": {
          "line": 554,
          "column": 37,
          "position": 5134
        },
        "endLoc": {
          "line": 567,
          "column": 19,
          "position": 5235
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 141,
        "end": 154,
        "startLoc": {
          "line": 141,
          "column": 21,
          "position": 1266
        },
        "endLoc": {
          "line": 154,
          "column": 21,
          "position": 1367
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "(req.body);\n            const updatedBy = req.user?.id || req.headers['x-user-id'];\n            if (!updatedBy) {\n                res.status(401).json({\n                    success: false,\n                    error: 'User ID is required',\n                    timestamp: new Date()\n                });\n                return;\n            }\n            const results",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 569,
        "end": 579,
        "startLoc": {
          "line": 569,
          "column": 34,
          "position": 5261
        },
        "endLoc": {
          "line": 579,
          "column": 8,
          "position": 5353
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\user.controller.js",
        "start": 47,
        "end": 57,
        "startLoc": {
          "line": 47,
          "column": 26,
          "position": 426
        },
        "endLoc": {
          "line": 57,
          "column": 7,
          "position": 518
        }
      }
    },
    {
      "format": "javascript",
      "lines": 19,
      "fragment": "}\n                catch (error) {\n                    errorCount++;\n                    results.push({\n                        contactId,\n                        success: false,\n                        error: error instanceof Error ? error.message : 'Unknown error'\n                    });\n                }\n            }\n            const response = {\n                success: errorCount === 0,\n                data: {\n                    total: requestData.contactIds.length,\n                    successful: successCount,\n                    failed: errorCount,\n                    results\n                },\n                message: `Bulk delete completed: ",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 642,
        "end": 660,
        "startLoc": {
          "line": 642,
          "column": 17,
          "position": 5922
        },
        "endLoc": {
          "line": 660,
          "column": 25,
          "position": 6049
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 597,
        "end": 615,
        "startLoc": {
          "line": 597,
          "column": 17,
          "position": 5526
        },
        "endLoc": {
          "line": 615,
          "column": 25,
          "position": 5653
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "${successCount} successful, ${errorCount} failed`,\n                timestamp: new Date(),\n                requestId: req.headers['x-request-id']\n            };\n            res.status(200).json(response);\n        }\n        catch (error) {\n            next(error);\n        }\n    }\n    calculateContactStats",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 660,
        "end": 670,
        "startLoc": {
          "line": 660,
          "column": 25,
          "position": 6050
        },
        "endLoc": {
          "line": 670,
          "column": 22,
          "position": 6126
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 615,
        "end": 625,
        "startLoc": {
          "line": 615,
          "column": 25,
          "position": 5654
        },
        "endLoc": {
          "line": 625,
          "column": 6,
          "position": 5730
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "(req.body);\n            const createdBy = req.user?.id || req.headers['x-user-id'];\n            if (!createdBy) {\n                res.status(401).json({\n                    success: false,\n                    error: 'User ID is required',\n                    timestamp: new Date()\n                });\n                return;\n            }\n            const result = await this.createCompanyUseCase",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\company.controller.js",
        "start": 15,
        "end": 25,
        "startLoc": {
          "line": 15,
          "column": 29,
          "position": 166
        },
        "endLoc": {
          "line": 25,
          "column": 21,
          "position": 266
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\user.controller.js",
        "start": 9,
        "end": 19,
        "startLoc": {
          "line": 9,
          "column": 26,
          "position": 102
        },
        "endLoc": {
          "line": 19,
          "column": 23,
          "position": 202
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ".execute({\n                ...requestData,\n                createdBy\n            });\n            if (!result.success) {\n                res.status(400).json({\n                    success: false,\n                    error: result.error,\n                    timestamp: new Date()\n                });\n                return;\n            }\n            const response = {\n                success: true,\n                data: transformCompanyToResponse",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\company.controller.js",
        "start": 25,
        "end": 39,
        "startLoc": {
          "line": 25,
          "column": 21,
          "position": 267
        },
        "endLoc": {
          "line": 39,
          "column": 27,
          "position": 367
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 25,
        "end": 33,
        "startLoc": {
          "line": 25,
          "column": 21,
          "position": 267
        },
        "endLoc": {
          "line": 33,
          "column": 24,
          "position": 303
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "(req.body);\n            const updatedBy = req.user?.id || req.headers['x-user-id'];\n            if (!updatedBy) {\n                res.status(401).json({\n                    success: false,\n                    error: 'User ID is required',\n                    timestamp: new Date()\n                });\n                return;\n            }\n            const result = await this.updateCompanyUseCase",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\company.controller.js",
        "start": 53,
        "end": 63,
        "startLoc": {
          "line": 53,
          "column": 29,
          "position": 490
        },
        "endLoc": {
          "line": 63,
          "column": 21,
          "position": 590
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\user.controller.js",
        "start": 47,
        "end": 57,
        "startLoc": {
          "line": 47,
          "column": 26,
          "position": 426
        },
        "endLoc": {
          "line": 57,
          "column": 23,
          "position": 526
        }
      }
    },
    {
      "format": "javascript",
      "lines": 16,
      "fragment": ",\n                ...requestData,\n                updatedBy\n            });\n            if (!result.success) {\n                res.status(400).json({\n                    success: false,\n                    error: result.error,\n                    timestamp: new Date()\n                });\n                return;\n            }\n            const response = {\n                success: true,\n                data: transformCompanyToResponse(result.company),\n                message: 'Company updated successfully'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\company.controller.js",
        "start": 64,
        "end": 79,
        "startLoc": {
          "line": 64,
          "column": 10,
          "position": 598
        },
        "endLoc": {
          "line": 79,
          "column": 31,
          "position": 707
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\user.controller.js",
        "start": 58,
        "end": 40,
        "startLoc": {
          "line": 58,
          "column": 7,
          "position": 534
        },
        "endLoc": {
          "line": 40,
          "column": 31,
          "position": 379
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "({ companyId: req.params.companyId });\n            const company = await this.companyRepository.findById(requestData.companyId);\n            if (!company) {\n                res.status(404).json({\n                    success: false,\n                    error: 'Company not found',\n                    timestamp: new Date()\n                });\n                return;\n            }\n            const",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\company.controller.js",
        "start": 116,
        "end": 126,
        "startLoc": {
          "line": 116,
          "column": 26,
          "position": 1031
        },
        "endLoc": {
          "line": 126,
          "column": 6,
          "position": 1127
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\company.controller.js",
        "start": 91,
        "end": 101,
        "startLoc": {
          "line": 91,
          "column": 29,
          "position": 804
        },
        "endLoc": {
          "line": 101,
          "column": 6,
          "position": 900
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ");\n            const response = {\n                success: true,\n                data: companies.map(transformCompanyToResponse),\n                timestamp: new Date(),\n                requestId: req.headers['x-request-id']\n            };\n            res.status(200).json(response);\n        }\n        catch (error) {\n            next(error);\n        }\n    }\n    async getCompaniesByStatus",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\company.controller.js",
        "start": 223,
        "end": 236,
        "startLoc": {
          "line": 223,
          "column": 5,
          "position": 2025
        },
        "endLoc": {
          "line": 236,
          "column": 21,
          "position": 2124
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\company.controller.js",
        "start": 141,
        "end": 154,
        "startLoc": {
          "line": 141,
          "column": 15,
          "position": 1268
        },
        "endLoc": {
          "line": 154,
          "column": 16,
          "position": 1367
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ");\n            const response = {\n                success: true,\n                data: companies.map(transformCompanyToResponse),\n                timestamp: new Date(),\n                requestId: req.headers['x-request-id']\n            };\n            res.status(200).json(response);\n        }\n        catch (error) {\n            next(error);\n        }\n    }\n    async getCompaniesByIndustry",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\company.controller.js",
        "start": 240,
        "end": 253,
        "startLoc": {
          "line": 240,
          "column": 7,
          "position": 2189
        },
        "endLoc": {
          "line": 253,
          "column": 23,
          "position": 2288
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\company.controller.js",
        "start": 141,
        "end": 154,
        "startLoc": {
          "line": 141,
          "column": 15,
          "position": 1268
        },
        "endLoc": {
          "line": 154,
          "column": 16,
          "position": 1367
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ");\n            const response = {\n                success: true,\n                data: companies.map(transformCompanyToResponse),\n                timestamp: new Date(),\n                requestId: req.headers['x-request-id']\n            };\n            res.status(200).json(response);\n        }\n        catch (error) {\n            next(error);\n        }\n    }\n    async getCompaniesByAssignedUser",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\company.controller.js",
        "start": 257,
        "end": 270,
        "startLoc": {
          "line": 257,
          "column": 9,
          "position": 2353
        },
        "endLoc": {
          "line": 270,
          "column": 27,
          "position": 2452
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\company.controller.js",
        "start": 141,
        "end": 154,
        "startLoc": {
          "line": 141,
          "column": 15,
          "position": 1268
        },
        "endLoc": {
          "line": 154,
          "column": 16,
          "position": 1367
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ");\n            const response = {\n                success: true,\n                data: companies.map(transformCompanyToResponse),\n                timestamp: new Date(),\n                requestId: req.headers['x-request-id']\n            };\n            res.status(200).json(response);\n        }\n        catch (error) {\n            next(error);\n        }\n    }\n    async getOverdueForFollowUp",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\company.controller.js",
        "start": 274,
        "end": 287,
        "startLoc": {
          "line": 274,
          "column": 7,
          "position": 2517
        },
        "endLoc": {
          "line": 287,
          "column": 22,
          "position": 2616
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\company.controller.js",
        "start": 141,
        "end": 154,
        "startLoc": {
          "line": 141,
          "column": 15,
          "position": 1268
        },
        "endLoc": {
          "line": 154,
          "column": 16,
          "position": 1367
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": "),\n                timestamp: new Date(),\n                requestId: req.headers['x-request-id']\n            };\n            res.status(200).json(response);\n        }\n        catch (error) {\n            next(error);\n        }\n    }\n    async getOverdueForFollowUp(req, res, next) {\n        try {\n            const organizationId = req.params.organizationId;\n            const companies",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\company.controller.js",
        "start": 277,
        "end": 290,
        "startLoc": {
          "line": 277,
          "column": 27,
          "position": 2545
        },
        "endLoc": {
          "line": 290,
          "column": 10,
          "position": 2651
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 330,
        "end": 343,
        "startLoc": {
          "line": 330,
          "column": 27,
          "position": 3036
        },
        "endLoc": {
          "line": 343,
          "column": 9,
          "position": 3142
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": "(organizationId);\n            const response = {\n                success: true,\n                data: companies.map(transformCompanyToResponse),\n                timestamp: new Date(),\n                requestId: req.headers['x-request-id']\n            };\n            res.status(200).json(response);\n        }\n        catch (error) {\n            next(error);\n        }\n    }\n    async getScheduledForFollowUp",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\company.controller.js",
        "start": 290,
        "end": 303,
        "startLoc": {
          "line": 290,
          "column": 23,
          "position": 2662
        },
        "endLoc": {
          "line": 303,
          "column": 24,
          "position": 2763
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\company.controller.js",
        "start": 141,
        "end": 154,
        "startLoc": {
          "line": 141,
          "column": 21,
          "position": 1266
        },
        "endLoc": {
          "line": 154,
          "column": 16,
          "position": 1367
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": "),\n                timestamp: new Date(),\n                requestId: req.headers['x-request-id']\n            };\n            res.status(200).json(response);\n        }\n        catch (error) {\n            next(error);\n        }\n    }\n    async getScheduledForFollowUp(req, res, next) {\n        try {\n            const organizationId = req.params.organizationId;\n            const date = new Date(req.params.date);\n            const companies",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\company.controller.js",
        "start": 293,
        "end": 307,
        "startLoc": {
          "line": 293,
          "column": 27,
          "position": 2692
        },
        "endLoc": {
          "line": 307,
          "column": 10,
          "position": 2817
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 346,
        "end": 360,
        "startLoc": {
          "line": 346,
          "column": 27,
          "position": 3183
        },
        "endLoc": {
          "line": 360,
          "column": 9,
          "position": 3308
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ");\n            const response = {\n                success: true,\n                data: companies.map(transformCompanyToResponse),\n                timestamp: new Date(),\n                requestId: req.headers['x-request-id']\n            };\n            res.status(200).json(response);\n        }\n        catch (error) {\n            next(error);\n        }\n    }\n    async getHighScoreLeads",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\company.controller.js",
        "start": 307,
        "end": 320,
        "startLoc": {
          "line": 307,
          "column": 5,
          "position": 2833
        },
        "endLoc": {
          "line": 320,
          "column": 18,
          "position": 2932
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\company.controller.js",
        "start": 141,
        "end": 154,
        "startLoc": {
          "line": 141,
          "column": 15,
          "position": 1268
        },
        "endLoc": {
          "line": 154,
          "column": 16,
          "position": 1367
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": "),\n                timestamp: new Date(),\n                requestId: req.headers['x-request-id']\n            };\n            res.status(200).json(response);\n        }\n        catch (error) {\n            next(error);\n        }\n    }\n    async getHighScoreLeads(req, res, next) {\n        try {\n            const organizationId = req.params.organizationId;\n            const minScore = parseInt(req.query.minScore) || 70;\n            const companies",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\company.controller.js",
        "start": 310,
        "end": 324,
        "startLoc": {
          "line": 310,
          "column": 27,
          "position": 2861
        },
        "endLoc": {
          "line": 324,
          "column": 10,
          "position": 2988
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 363,
        "end": 377,
        "startLoc": {
          "line": 363,
          "column": 27,
          "position": 3352
        },
        "endLoc": {
          "line": 377,
          "column": 9,
          "position": 3479
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ");\n            const response = {\n                success: true,\n                data: companies.map(transformCompanyToResponse),\n                timestamp: new Date(),\n                requestId: req.headers['x-request-id']\n            };\n            res.status(200).json(response);\n        }\n        catch (error) {\n            next(error);\n        }\n    }\n    async getMediumScoreLeads",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\company.controller.js",
        "start": 324,
        "end": 337,
        "startLoc": {
          "line": 324,
          "column": 9,
          "position": 3004
        },
        "endLoc": {
          "line": 337,
          "column": 20,
          "position": 3103
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\company.controller.js",
        "start": 141,
        "end": 154,
        "startLoc": {
          "line": 141,
          "column": 15,
          "position": 1268
        },
        "endLoc": {
          "line": 154,
          "column": 16,
          "position": 1367
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": "),\n                timestamp: new Date(),\n                requestId: req.headers['x-request-id']\n            };\n            res.status(200).json(response);\n        }\n        catch (error) {\n            next(error);\n        }\n    }\n    async getMediumScoreLeads(req, res, next) {\n        try {\n            const organizationId = req.params.organizationId;\n            const companies",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\company.controller.js",
        "start": 327,
        "end": 340,
        "startLoc": {
          "line": 327,
          "column": 27,
          "position": 3032
        },
        "endLoc": {
          "line": 340,
          "column": 10,
          "position": 3138
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 380,
        "end": 393,
        "startLoc": {
          "line": 380,
          "column": 27,
          "position": 3523
        },
        "endLoc": {
          "line": 393,
          "column": 9,
          "position": 3629
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": "(organizationId);\n            const response = {\n                success: true,\n                data: companies.map(transformCompanyToResponse),\n                timestamp: new Date(),\n                requestId: req.headers['x-request-id']\n            };\n            res.status(200).json(response);\n        }\n        catch (error) {\n            next(error);\n        }\n    }\n    async getLowScoreLeads",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\company.controller.js",
        "start": 340,
        "end": 353,
        "startLoc": {
          "line": 340,
          "column": 21,
          "position": 3149
        },
        "endLoc": {
          "line": 353,
          "column": 17,
          "position": 3250
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\company.controller.js",
        "start": 141,
        "end": 154,
        "startLoc": {
          "line": 141,
          "column": 21,
          "position": 1266
        },
        "endLoc": {
          "line": 154,
          "column": 16,
          "position": 1367
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": "),\n                timestamp: new Date(),\n                requestId: req.headers['x-request-id']\n            };\n            res.status(200).json(response);\n        }\n        catch (error) {\n            next(error);\n        }\n    }\n    async getLowScoreLeads(req, res, next) {\n        try {\n            const organizationId = req.params.organizationId;\n            const companies",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\company.controller.js",
        "start": 343,
        "end": 356,
        "startLoc": {
          "line": 343,
          "column": 27,
          "position": 3179
        },
        "endLoc": {
          "line": 356,
          "column": 10,
          "position": 3285
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 396,
        "end": 409,
        "startLoc": {
          "line": 396,
          "column": 27,
          "position": 3670
        },
        "endLoc": {
          "line": 409,
          "column": 9,
          "position": 3776
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": "(organizationId);\n            const response = {\n                success: true,\n                data: companies.map(transformCompanyToResponse),\n                timestamp: new Date(),\n                requestId: req.headers['x-request-id']\n            };\n            res.status(200).json(response);\n        }\n        catch (error) {\n            next(error);\n        }\n    }\n    async bulkUpdateCompanies",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\company.controller.js",
        "start": 356,
        "end": 369,
        "startLoc": {
          "line": 356,
          "column": 18,
          "position": 3296
        },
        "endLoc": {
          "line": 369,
          "column": 20,
          "position": 3397
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\company.controller.js",
        "start": 141,
        "end": 154,
        "startLoc": {
          "line": 141,
          "column": 21,
          "position": 1266
        },
        "endLoc": {
          "line": 154,
          "column": 16,
          "position": 1367
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": "(req.body);\n            const updatedBy = req.user?.id || req.headers['x-user-id'];\n            if (!updatedBy) {\n                res.status(401).json({\n                    success: false,\n                    error: 'User ID is required',\n                    timestamp: new Date()\n                });\n                return;\n            }\n            const results = [];\n            let successCount = 0;\n            let errorCount = 0;\n            for (const companyId",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\company.controller.js",
        "start": 371,
        "end": 384,
        "startLoc": {
          "line": 371,
          "column": 35,
          "position": 3423
        },
        "endLoc": {
          "line": 384,
          "column": 10,
          "position": 3549
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\user.controller.js",
        "start": 47,
        "end": 582,
        "startLoc": {
          "line": 47,
          "column": 26,
          "position": 426
        },
        "endLoc": {
          "line": 582,
          "column": 10,
          "position": 5387
        }
      }
    },
    {
      "format": "javascript",
      "lines": 16,
      "fragment": ".length,\n                    successful: successCount,\n                    failed: errorCount,\n                    results\n                },\n                message: `Bulk update completed: ${successCount} successful, ${errorCount} failed`,\n                timestamp: new Date(),\n                requestId: req.headers['x-request-id']\n            };\n            res.status(200).json(response);\n        }\n        catch (error) {\n            next(error);\n        }\n    }\n    async bulkDeleteCompanies",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\company.controller.js",
        "start": 412,
        "end": 427,
        "startLoc": {
          "line": 412,
          "column": 11,
          "position": 3786
        },
        "endLoc": {
          "line": 427,
          "column": 20,
          "position": 3894
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 610,
        "end": 625,
        "startLoc": {
          "line": 610,
          "column": 11,
          "position": 5624
        },
        "endLoc": {
          "line": 625,
          "column": 19,
          "position": 5732
        }
      }
    },
    {
      "format": "javascript",
      "lines": 19,
      "fragment": "}\n                catch (error) {\n                    errorCount++;\n                    results.push({\n                        companyId,\n                        success: false,\n                        error: error instanceof Error ? error.message : 'Unknown error'\n                    });\n                }\n            }\n            const response = {\n                success: errorCount === 0,\n                data: {\n                    total: requestData.companyIds.length,\n                    successful: successCount,\n                    failed: errorCount,\n                    results\n                },\n                message: `Bulk delete completed: ",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\company.controller.js",
        "start": 444,
        "end": 462,
        "startLoc": {
          "line": 444,
          "column": 17,
          "position": 4084
        },
        "endLoc": {
          "line": 462,
          "column": 25,
          "position": 4211
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\company.controller.js",
        "start": 399,
        "end": 417,
        "startLoc": {
          "line": 399,
          "column": 17,
          "position": 3688
        },
        "endLoc": {
          "line": 417,
          "column": 25,
          "position": 3815
        }
      }
    },
    {
      "format": "javascript",
      "lines": 16,
      "fragment": ".length,\n                    successful: successCount,\n                    failed: errorCount,\n                    results\n                },\n                message: `Bulk delete completed: ${successCount} successful, ${errorCount} failed`,\n                timestamp: new Date(),\n                requestId: req.headers['x-request-id']\n            };\n            res.status(200).json(response);\n        }\n        catch (error) {\n            next(error);\n        }\n    }\n    calculateCompanyStats",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\company.controller.js",
        "start": 457,
        "end": 472,
        "startLoc": {
          "line": 457,
          "column": 11,
          "position": 4182
        },
        "endLoc": {
          "line": 472,
          "column": 22,
          "position": 4288
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\contact.controller.js",
        "start": 655,
        "end": 625,
        "startLoc": {
          "line": 655,
          "column": 11,
          "position": 6020
        },
        "endLoc": {
          "line": 625,
          "column": 6,
          "position": 5730
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ", error, {\n                userId: req.user?.id,\n                organizationId: req.user?.organizationId\n            });\n            const errorResponse = ErrorHandler.handle(error);\n            res.status(errorResponse.statusCode).json({\n                success: false,\n                error: errorResponse.message,\n                code: errorResponse.code\n            });\n        }\n    }\n    async getSessionHistory",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\basic-ai.controller.js",
        "start": 135,
        "end": 147,
        "startLoc": {
          "line": 135,
          "column": 30,
          "position": 1203
        },
        "endLoc": {
          "line": 147,
          "column": 18,
          "position": 1305
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\basic-ai.controller.js",
        "start": 81,
        "end": 93,
        "startLoc": {
          "line": 81,
          "column": 33,
          "position": 775
        },
        "endLoc": {
          "line": 93,
          "column": 14,
          "position": 877
        }
      }
    },
    {
      "format": "javascript",
      "lines": 19,
      "fragment": "(req, res) {\n        try {\n            const { sessionId } = req.params;\n            const user = req.user;\n            if (!user) {\n                res.status(401).json({\n                    success: false,\n                    error: 'Authentication required'\n                });\n                return;\n            }\n            if (!sessionId) {\n                res.status(400).json({\n                    success: false,\n                    error: 'Session ID is required'\n                });\n                return;\n            }\n            await",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\basic-ai.controller.js",
        "start": 188,
        "end": 206,
        "startLoc": {
          "line": 188,
          "column": 13,
          "position": 1623
        },
        "endLoc": {
          "line": 206,
          "column": 6,
          "position": 1760
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\basic-ai.controller.js",
        "start": 147,
        "end": 165,
        "startLoc": {
          "line": 147,
          "column": 18,
          "position": 1306
        },
        "endLoc": {
          "line": 165,
          "column": 6,
          "position": 1443
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ", error, {\n                userId: req.user?.id,\n                sessionId: req.params.sessionId\n            });\n            const errorResponse = ErrorHandler.handle(error);\n            res.status(errorResponse.statusCode).json({\n                success: false,\n                error: errorResponse.message,\n                code: errorResponse.code\n            });\n        }\n    }\n    async getHealthStatus",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\basic-ai.controller.js",
        "start": 218,
        "end": 230,
        "startLoc": {
          "line": 218,
          "column": 29,
          "position": 1849
        },
        "endLoc": {
          "line": 230,
          "column": 16,
          "position": 1950
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\basic-ai.controller.js",
        "start": 176,
        "end": 188,
        "startLoc": {
          "line": 176,
          "column": 32,
          "position": 1521
        },
        "endLoc": {
          "line": 188,
          "column": 13,
          "position": 1622
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ".components.map((component) => ({\n                id: component.id,\n                name: component.name,\n                type: component.type.value,\n                layer: component.layer.value,\n                description: component.description,\n                dependencies: component.dependencies,\n                interfaces: component.interfaces,\n                implementation: component.implementation,\n                tests: component.tests,\n                documentation: component.documentation,\n                createdAt: component.createdAt,\n                updatedAt: component.updatedAt\n            })),\n            layers",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\architecture.controller.js",
        "start": 253,
        "end": 267,
        "startLoc": {
          "line": 253,
          "column": 13,
          "position": 3052
        },
        "endLoc": {
          "line": 267,
          "column": 7,
          "position": 3184
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\architecture.controller.js",
        "start": 208,
        "end": 222,
        "startLoc": {
          "line": 208,
          "column": 6,
          "position": 2602
        },
        "endLoc": {
          "line": 222,
          "column": 13,
          "position": 2734
        }
      }
    },
    {
      "format": "javascript",
      "lines": 26,
      "fragment": ".layers.map((layer) => ({\n                id: layer.id,\n                name: layer.name,\n                type: layer.type.value,\n                description: layer.description,\n                components: layer.components.map((component) => ({\n                    id: component.id,\n                    name: component.name,\n                    type: component.type.value,\n                    layer: component.layer.value,\n                    description: component.description,\n                    dependencies: component.dependencies,\n                    interfaces: component.interfaces,\n                    implementation: component.implementation,\n                    tests: component.tests,\n                    documentation: component.documentation,\n                    createdAt: component.createdAt,\n                    updatedAt: component.updatedAt\n                })),\n                dependencies: layer.dependencies,\n                responsibilities: layer.responsibilities,\n                patterns: layer.patterns,\n                createdAt: layer.createdAt,\n                updatedAt: layer.updatedAt\n            })),\n            lastAnalysisDate",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\architecture.controller.js",
        "start": 267,
        "end": 292,
        "startLoc": {
          "line": 267,
          "column": 13,
          "position": 3188
        },
        "endLoc": {
          "line": 292,
          "column": 17,
          "position": 3427
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\architecture.controller.js",
        "start": 203,
        "end": 228,
        "startLoc": {
          "line": 203,
          "column": 9,
          "position": 2545
        },
        "endLoc": {
          "line": 228,
          "column": 9,
          "position": 2784
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ".updatedAt\n        };\n    }\n    transformStatsToResponse(stats) {\n        return {\n            total: stats.total,\n            active: stats.active,\n            inactive: stats.inactive,\n            createdThisMonth: stats.createdThisMonth,\n            createdThisYear: stats.createdThisYear,\n            updatedThisMonth: stats.updatedThisMonth,\n            updatedThisYear: stats.updatedThisYear,\n            byType: stats.byType,\n            byStatus: stats.byStatus,\n            byLayerType",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\architecture.controller.js",
        "start": 295,
        "end": 309,
        "startLoc": {
          "line": 295,
          "column": 13,
          "position": 3458
        },
        "endLoc": {
          "line": 309,
          "column": 12,
          "position": 3563
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\predictive-analytics.controller.js",
        "start": 253,
        "end": 267,
        "startLoc": {
          "line": 253,
          "column": 20,
          "position": 3056
        },
        "endLoc": {
          "line": 267,
          "column": 12,
          "position": 3161
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ";\n            const correlationId = generateCorrelationId();\n            const connector = this.agentConnectors.get(id);\n            if (!connector) {\n                res.status(404).json({\n                    success: false,\n                    error: 'Agent not found',\n                    agentId: id,\n                    correlationId\n                });\n                return;\n            }\n            const timeWindow",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\agents.controller.js",
        "start": 178,
        "end": 190,
        "startLoc": {
          "line": 178,
          "column": 6,
          "position": 1620
        },
        "endLoc": {
          "line": 190,
          "column": 11,
          "position": 1712
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\agents.controller.js",
        "start": 138,
        "end": 150,
        "startLoc": {
          "line": 138,
          "column": 7,
          "position": 1283
        },
        "endLoc": {
          "line": 150,
          "column": 7,
          "position": 1375
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": ".safeParse(req.body);\n            if (!bodyValidation.success) {\n                res.status(400).json({\n                    success: false,\n                    error: 'Invalid request body',\n                    details: bodyValidation.error.errors,\n                    correlationId\n                });\n                return;\n            }\n            const { resetCircuitBreaker",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\agents.controller.js",
        "start": 214,
        "end": 224,
        "startLoc": {
          "line": 214,
          "column": 24,
          "position": 1925
        },
        "endLoc": {
          "line": 224,
          "column": 20,
          "position": 2003
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\agents.controller.js",
        "start": 31,
        "end": 41,
        "startLoc": {
          "line": 31,
          "column": 26,
          "position": 346
        },
        "endLoc": {
          "line": 41,
          "column": 7,
          "position": 424
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": "} = bodyValidation.data;\n            const connector = this.agentConnectors.get(id);\n            if (!connector) {\n                res.status(404).json({\n                    success: false,\n                    error: 'Agent not found',\n                    agentId: id,\n                    correlationId\n                });\n                return;\n            }\n            if",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\agents.controller.js",
        "start": 224,
        "end": 235,
        "startLoc": {
          "line": 224,
          "column": 2,
          "position": 2008
        },
        "endLoc": {
          "line": 235,
          "column": 3,
          "position": 2093
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\agents.controller.js",
        "start": 41,
        "end": 52,
        "startLoc": {
          "line": 41,
          "column": 2,
          "position": 432
        },
        "endLoc": {
          "line": 52,
          "column": 6,
          "position": 517
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": "= async (req, res, next) => {\n        try {\n            const { id } = req.params;\n            const correlationId = generateCorrelationId();\n            const connector = this.agentConnectors.get(id);\n            if (!connector) {\n                res.status(404).json({\n                    success: false,\n                    error: 'Agent not found',\n                    agentId: id,\n                    correlationId\n                });\n                return;\n            }\n            res",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\agents.controller.js",
        "start": 316,
        "end": 330,
        "startLoc": {
          "line": 316,
          "column": 2,
          "position": 2802
        },
        "endLoc": {
          "line": 330,
          "column": 4,
          "position": 2929
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\agents.controller.js",
        "start": 136,
        "end": 150,
        "startLoc": {
          "line": 136,
          "column": 2,
          "position": 1246
        },
        "endLoc": {
          "line": 150,
          "column": 6,
          "position": 1373
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": ".safeParse(req.body);\n            if (!bodyValidation.success) {\n                res.status(400).json({\n                    success: false,\n                    error: 'Invalid request body',\n                    details: bodyValidation.error.errors,\n                    correlationId\n                });\n                return;\n            }\n            const { keyPattern",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\agents.controller.js",
        "start": 392,
        "end": 402,
        "startLoc": {
          "line": 392,
          "column": 25,
          "position": 3489
        },
        "endLoc": {
          "line": 402,
          "column": 11,
          "position": 3567
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\controllers\\agents.controller.js",
        "start": 31,
        "end": 41,
        "startLoc": {
          "line": 31,
          "column": 26,
          "position": 346
        },
        "endLoc": {
          "line": 41,
          "column": 7,
          "position": 424
        }
      }
    },
    {
      "format": "typescript",
      "lines": 59,
      "fragment": "export interface SystemHealthData {\n    overallStatus: 'healthy' | 'degraded' | 'unhealthy';\n    timestamp: Date;\n    uptime: number;\n    services: ServiceStatus[];\n    metrics: SystemMetrics;\n    alerts: Alert[];\n    lastUpdate: Date;\n}\nexport interface ServiceStatus {\n    name: string;\n    status: 'up' | 'down' | 'degraded';\n    responseTime: number;\n    lastCheck: Date;\n    errorRate: number;\n    throughput: number;\n    details?: any;\n}\nexport interface SystemMetrics {\n    memory: {\n        used: number;\n        total: number;\n        percentage: number;\n    };\n    cpu: {\n        usage: number;\n        loadAverage: number[];\n    };\n    disk: {\n        used: number;\n        total: number;\n        percentage: number;\n    };\n    network: {\n        bytesIn: number;\n        bytesOut: number;\n    };\n    database: {\n        connections: number;\n        maxConnections: number;\n        queryTime: number;\n    };\n    cache: {\n        hitRate: number;\n        memoryUsage: number;\n        operations: number;\n    };\n}\nexport interface Alert {\n    id: string;\n    type: 'error' | 'warning' | 'info';\n    severity: 'low' | 'medium' | 'high' | 'critical';\n    message: string;\n    service: string;\n    timestamp: Date;\n    resolved: boolean;\n    resolvedAt?: Date;\n}\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\system-cockpit\\system-health.service.d.ts",
        "start": 1,
        "end": 59,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 59,
          "column": 7,
          "position": 410
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\system-cockpit\\system-health.service.ts",
        "start": 14,
        "end": 76,
        "startLoc": {
          "line": 14,
          "column": 1,
          "position": 67
        },
        "endLoc": {
          "line": 76,
          "column": 76,
          "position": 481
        }
      }
    },
    {
      "format": "typescript",
      "lines": 35,
      "fragment": "export interface AIResponse {\n    id: string;\n    type: 'text' | 'analysis' | 'prediction' | 'search';\n    content: string;\n    confidence: number;\n    metadata: {\n        model: string;\n        timestamp: Date;\n        processingTime: number;\n        tokens?: number;\n    };\n    suggestions?: string[];\n}\nexport interface AIContext {\n    userId: string;\n    organizationId: string;\n    sessionId: string;\n    previousMessages?: AIResponse[];\n    userPreferences?: {\n        language: string;\n        responseStyle: 'formal' | 'casual' | 'technical';\n        maxLength: number;\n    };\n}\nexport interface AIRequest {\n    prompt: string;\n    context: AIContext;\n    options?: {\n        maxTokens?: number;\n        temperature?: number;\n        includeAnalysis?: boolean;\n        includeSuggestions?: boolean;\n    };\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\basic-ai\\basic-ai.service.d.ts",
        "start": 1,
        "end": 35,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 35,
          "column": 8,
          "position": 249
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\basic-ai\\basic-ai.service.ts",
        "start": 13,
        "end": 50,
        "startLoc": {
          "line": 13,
          "column": 1,
          "position": 99
        },
        "endLoc": {
          "line": 50,
          "column": 6,
          "position": 351
        }
      }
    },
    {
      "format": "javascript",
      "lines": 17,
      "fragment": ");\n            span.setStatus({ code: SpanStatusCode.OK });\n            return result;\n        }\n        catch (error) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: error instanceof Error ? error.message : 'Unknown error'\n            });\n            span.recordException(error);\n            throw error;\n        }\n        finally {\n            span.end();\n        }\n    }\n    setSpanAttributes",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\infrastructure\\observability\\tracing.service.js",
        "start": 115,
        "end": 131,
        "startLoc": {
          "line": 115,
          "column": 2,
          "position": 1088
        },
        "endLoc": {
          "line": 131,
          "column": 18,
          "position": 1206
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\infrastructure\\observability\\tracing.service.js",
        "start": 92,
        "end": 108,
        "startLoc": {
          "line": 92,
          "column": 10,
          "position": 849
        },
        "endLoc": {
          "line": 108,
          "column": 6,
          "position": 967
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "export interface TraceContext {\n    traceId: string;\n    spanId: string;\n    parentSpanId?: string;\n    operation: string;\n    service: string;\n    userId?: string;\n    organizationId?: string;\n    requestId?: string;\n    metadata?: Record<string, any>;\n}\nexport interface SpanOptions {\n    kind?: SpanKind;\n    attributes?: Record<string, string | number | boolean>;\n    startTime?: number;\n    endTime?: number;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\infrastructure\\observability\\tracing.service.d.ts",
        "start": 3,
        "end": 20,
        "startLoc": {
          "line": 3,
          "column": 1,
          "position": 38
        },
        "endLoc": {
          "line": 20,
          "column": 8,
          "position": 180
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\infrastructure\\observability\\tracing.service.ts",
        "start": 8,
        "end": 27,
        "startLoc": {
          "line": 8,
          "column": 1,
          "position": 55
        },
        "endLoc": {
          "line": 27,
          "column": 6,
          "position": 199
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "export interface MetricLabels {\n    method?: string;\n    route?: string;\n    status_code?: string;\n    service?: string;\n    operation?: string;\n    organization_id?: string;\n    user_id?: string;\n    error_type?: string;\n    [key: string]: string | undefined;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\infrastructure\\observability\\metrics.service.d.ts",
        "start": 3,
        "end": 14,
        "startLoc": {
          "line": 3,
          "column": 1,
          "position": 38
        },
        "endLoc": {
          "line": 14,
          "column": 8,
          "position": 130
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\infrastructure\\observability\\metrics.service.ts",
        "start": 8,
        "end": 20,
        "startLoc": {
          "line": 8,
          "column": 1,
          "position": 52
        },
        "endLoc": {
          "line": 20,
          "column": 6,
          "position": 145
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "export interface LogContext {\n    requestId?: string;\n    userId?: string;\n    organizationId?: string;\n    service?: string;\n    operation?: string;\n    duration?: number;\n    statusCode?: number;\n    error?: Error;\n    metadata?: Record<string, any>;\n}\nexport interface LogLevel {\n    ERROR: 'error';\n    WARN: 'warn';\n    INFO: 'info';\n    DEBUG: 'debug';\n    VERBOSE: 'verbose';\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\infrastructure\\observability\\logger.service.d.ts",
        "start": 2,
        "end": 20,
        "startLoc": {
          "line": 2,
          "column": 1,
          "position": 16
        },
        "endLoc": {
          "line": 20,
          "column": 8,
          "position": 151
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\infrastructure\\observability\\logger.service.ts",
        "start": 8,
        "end": 28,
        "startLoc": {
          "line": 8,
          "column": 1,
          "position": 46
        },
        "endLoc": {
          "line": 28,
          "column": 6,
          "position": 183
        }
      }
    },
    {
      "format": "typescript",
      "lines": 32,
      "fragment": "export interface HealthCheckConfig {\n    name: string;\n    timeout: number;\n    interval: number;\n    retries: number;\n    critical: boolean;\n}\nexport interface HealthStatus {\n    status: 'healthy' | 'unhealthy' | 'degraded';\n    timestamp: string;\n    uptime: number;\n    version: string;\n    environment: string;\n    checks: Record<string, HealthIndicatorResult>;\n    metrics: {\n        memory: {\n            used: number;\n            total: number;\n            percentage: number;\n        };\n        cpu: {\n            usage: number;\n            load: number[];\n        };\n        disk: {\n            used: number;\n            total: number;\n            percentage: number;\n        };\n    };\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\infrastructure\\observability\\health.service.d.ts",
        "start": 2,
        "end": 33,
        "startLoc": {
          "line": 2,
          "column": 1,
          "position": 13
        },
        "endLoc": {
          "line": 33,
          "column": 8,
          "position": 224
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\infrastructure\\observability\\health.service.ts",
        "start": 8,
        "end": 41,
        "startLoc": {
          "line": 8,
          "column": 1,
          "position": 40
        },
        "endLoc": {
          "line": 41,
          "column": 6,
          "position": 253
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": "}>;\n    };\n    dataSource: {\n        type: 'metrics' | 'database' | 'api';\n        query: string;\n        timeRange?: {\n            from: Date;\n            to: Date;\n        };\n    };\n}\nexport interface Dashboard {\n    id: string;\n    name: string;\n    description: string;\n    widgets: DashboardWidget[];\n    layout: 'grid' | 'flex';\n    refreshInterval: number;\n    permissions: string[];\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\infrastructure\\observability\\dashboard.service.d.ts",
        "start": 18,
        "end": 38,
        "startLoc": {
          "line": 18,
          "column": 9,
          "position": 133
        },
        "endLoc": {
          "line": 38,
          "column": 8,
          "position": 269
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\infrastructure\\observability\\dashboard.service.ts",
        "start": 13,
        "end": 35,
        "startLoc": {
          "line": 13,
          "column": 2,
          "position": 139
        },
        "endLoc": {
          "line": 35,
          "column": 6,
          "position": 277
        }
      }
    },
    {
      "format": "typescript",
      "lines": 27,
      "fragment": "aggregation?: 'avg' | 'sum' | 'min' | 'max' | 'count';\n}\nexport interface Alert {\n    id: string;\n    ruleId: string;\n    name: string;\n    description: string;\n    severity: AlertSeverity;\n    status: AlertStatus;\n    triggeredAt: Date;\n    resolvedAt?: Date;\n    value: number;\n    threshold: number;\n    message: string;\n    tags: Record<string, string>;\n    metadata: Record<string, any>;\n}\nexport interface NotificationChannel {\n    id: string;\n    name: string;\n    type: 'email' | 'slack' | 'webhook' | 'sms';\n    config: Record<string, any>;\n    enabled: boolean;\n}\nexport type AlertSeverity = 'critical' | 'warning' | 'info';\nexport type AlertStatus = 'firing' | 'resolved' | 'acknowledged';\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\infrastructure\\observability\\alerting.service.d.ts",
        "start": 18,
        "end": 44,
        "startLoc": {
          "line": 18,
          "column": 5,
          "position": 146
        },
        "endLoc": {
          "line": 44,
          "column": 8,
          "position": 388
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\infrastructure\\observability\\alerting.service.ts",
        "start": 26,
        "end": 56,
        "startLoc": {
          "line": 26,
          "column": 3,
          "position": 185
        },
        "endLoc": {
          "line": 56,
          "column": 6,
          "position": 431
        }
      }
    },
    {
      "format": "javascript",
      "lines": 23,
      "fragment": ",\n            'MG': 'Indian/Antananarivo',\n            'MU': 'Indian/Mauritius',\n            'SC': 'Indian/Mahe',\n            'RE': 'Indian/Reunion',\n            'YT': 'Indian/Mayotte',\n            'KM': 'Indian/Comoro',\n            'DJ': 'Africa/Djibouti',\n            'SO': 'Africa/Mogadishu',\n            'SD': 'Africa/Khartoum',\n            'SS': 'Africa/Juba',\n            'CF': 'Africa/Bangui',\n            'TD': 'Africa/Ndjamena',\n            'NE': 'Africa/Niamey',\n            'BF': 'Africa/Ouagadougou',\n            'ML': 'Africa/Bamako',\n            'SN': 'Africa/Dakar',\n            'GM': 'Africa/Banjul',\n            'GN': 'Africa/Conakry',\n            'SL': 'Africa/Freetown',\n            'LR': 'Africa/Monrovia',\n            'CI': 'Africa/Abidjan',\n            'TG'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\value-objects\\address.vo.js",
        "start": 213,
        "end": 235,
        "startLoc": {
          "line": 213,
          "column": 17,
          "position": 1812
        },
        "endLoc": {
          "line": 235,
          "column": 5,
          "position": 1962
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\domain\\value-objects\\address.vo.js",
        "start": 175,
        "end": 197,
        "startLoc": {
          "line": 175,
          "column": 16,
          "position": 1546
        },
        "endLoc": {
          "line": 197,
          "column": 5,
          "position": 1696
        }
      }
    },
    {
      "format": "typescript",
      "lines": 29,
      "fragment": "export interface UserFilters {\n    role?: string;\n    status?: string;\n    isEmailVerified?: boolean;\n    mfaEnabled?: boolean;\n    createdAfter?: Date;\n    createdBefore?: Date;\n    lastLoginAfter?: Date;\n    lastLoginBefore?: Date;\n}\nexport interface PaginatedResult<T> {\n    data: T[];\n    total: number;\n    page: number;\n    limit: number;\n    totalPages: number;\n    hasNext: boolean;\n    hasPrevious: boolean;\n}\nexport interface UserSearchOptions {\n    organizationId: string;\n    query?: string;\n    role?: string;\n    status?: string;\n    sortBy?: 'name' | 'email' | 'createdAt' | 'lastLoginAt';\n    sortOrder?: 'asc' | 'desc';\n    page?: number;\n    limit?: number;\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\repositories\\user.repository.d.ts",
        "start": 26,
        "end": 54,
        "startLoc": {
          "line": 26,
          "column": 1,
          "position": 485
        },
        "endLoc": {
          "line": 54,
          "column": 2,
          "position": 710
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\repositories\\user.repository.ts",
        "start": 75,
        "end": 105,
        "startLoc": {
          "line": 75,
          "column": 1,
          "position": 584
        },
        "endLoc": {
          "line": 105,
          "column": 2,
          "position": 811
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "countByOrganizationId(organizationId: string): Promise<number>;\n    countByType(organizationId: string, type: string): Promise<number>;\n    countByStatus(organizationId: string, status: string): Promise<number>;\n    countByCategory(organizationId: string, category: string): Promise<number>;\n    countByBrand(organizationId: string, brand: string): Promise<number>;\n    countBySupplier(organizationId: string, supplier: string): Promise<number>;\n    getStats(organizationId: string): Promise<ProductStats>;\n    getInventoryStats(organizationId: string): Promise<InventoryStats>;\n    getPricingStats(organizationId: string): Promise<PricingStats>;\n    getCategoryStats(organizationId: string): Promise<CategoryStats>;\n    getBrandStats(organizationId: string): Promise<BrandStats>;\n    getSupplierStats(organizationId: string): Promise<SupplierStats>;\n    exists",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\repositories\\product.repository.d.ts",
        "start": 43,
        "end": 55,
        "startLoc": {
          "line": 43,
          "column": 5,
          "position": 865
        },
        "endLoc": {
          "line": 55,
          "column": 7,
          "position": 1087
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\repositories\\product.repository.ts",
        "start": 87,
        "end": 101,
        "startLoc": {
          "line": 87,
          "column": 3,
          "position": 960
        },
        "endLoc": {
          "line": 101,
          "column": 76,
          "position": 1184
        }
      }
    },
    {
      "format": "typescript",
      "lines": 74,
      "fragment": "export interface ProductStats {\n    total: number;\n    active: number;\n    inactive: number;\n    draft: number;\n    discontinued: number;\n    archived: number;\n    byType: Record<string, number>;\n    byCategory: Record<string, number>;\n    byBrand: Record<string, number>;\n    bySupplier: Record<string, number>;\n    lowStock: number;\n    outOfStock: number;\n    totalValue: number;\n    averagePrice: number;\n    averageMargin: number;\n}\nexport interface InventoryStats {\n    totalProducts: number;\n    inStock: number;\n    lowStock: number;\n    outOfStock: number;\n    backorderAllowed: number;\n    preorderAllowed: number;\n    totalQuantity: number;\n    reservedQuantity: number;\n    availableQuantity: number;\n    totalValue: number;\n    averageStockValue: number;\n}\nexport interface PricingStats {\n    totalProducts: number;\n    averagePrice: number;\n    medianPrice: number;\n    minPrice: number;\n    maxPrice: number;\n    averageMargin: number;\n    medianMargin: number;\n    minMargin: number;\n    maxMargin: number;\n    productsWithDiscount: number;\n    productsWithoutDiscount: number;\n    averageDiscount: number;\n}\nexport interface CategoryStats {\n    totalCategories: number;\n    categories: Array<{\n        category: string;\n        count: number;\n        percentage: number;\n        totalValue: number;\n        averagePrice: number;\n    }>;\n}\nexport interface BrandStats {\n    totalBrands: number;\n    brands: Array<{\n        brand: string;\n        count: number;\n        percentage: number;\n        totalValue: number;\n        averagePrice: number;\n    }>;\n}\nexport interface SupplierStats {\n    totalSuppliers: number;\n    suppliers: Array<{\n        supplier: string;\n        count: number;\n        percentage: number;\n        totalValue: number;\n        averagePrice: number;\n    }>;\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\repositories\\product.repository.d.ts",
        "start": 60,
        "end": 133,
        "startLoc": {
          "line": 60,
          "column": 1,
          "position": 1171
        },
        "endLoc": {
          "line": 133,
          "column": 2,
          "position": 1684
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\repositories\\product.repository.ts",
        "start": 115,
        "end": 193,
        "startLoc": {
          "line": 115,
          "column": 1,
          "position": 1286
        },
        "endLoc": {
          "line": 193,
          "column": 2,
          "position": 1804
        }
      }
    },
    {
      "format": "typescript",
      "lines": 48,
      "fragment": "export interface PredictiveAnalyticsFilters extends BaseFilters {\n    type?: string;\n    status?: string;\n    modelType?: string;\n    accuracy?: string;\n    isActive?: boolean;\n    needsRetraining?: boolean;\n    hasPredictions?: boolean;\n    minAccuracy?: number;\n    maxAccuracy?: number;\n    lastPredictionFrom?: Date;\n    lastPredictionTo?: Date;\n    nextRetrainFrom?: Date;\n    nextRetrainTo?: Date;\n}\nexport interface PredictiveAnalyticsSearchOptions extends BaseSearchOptions {\n    type?: string;\n    status?: string;\n    modelType?: string;\n    accuracy?: string;\n    isActive?: boolean;\n    needsRetraining?: boolean;\n    hasPredictions?: boolean;\n    minAccuracy?: number;\n    maxAccuracy?: number;\n    lastPredictionFrom?: Date;\n    lastPredictionTo?: Date;\n    nextRetrainFrom?: Date;\n    nextRetrainTo?: Date;\n}\nexport interface PredictiveAnalyticsStats extends BaseStats {\n    byType: Record<string, number>;\n    byStatus: Record<string, number>;\n    byModelType: Record<string, number>;\n    byAccuracy: Record<string, number>;\n    totalPredictions: number;\n    averageAccuracy: number;\n    averageConfidence: number;\n    activeModels: number;\n    pendingTraining: number;\n    failedTraining: number;\n    needsRetraining: number;\n    lastTrainingDate?: Date;\n    totalTrainingTime: number;\n    averagePredictionTime: number;\n}\nexport interface PredictiveAnalyticsRepository extends BaseRepository<PredictiveAnalytics> {\n    findByType",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\repositories\\predictive-analytics.repository.d.ts",
        "start": 3,
        "end": 50,
        "startLoc": {
          "line": 3,
          "column": 1,
          "position": 38
        },
        "endLoc": {
          "line": 50,
          "column": 11,
          "position": 427
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\repositories\\predictive-analytics.repository.ts",
        "start": 8,
        "end": 58,
        "startLoc": {
          "line": 8,
          "column": 1,
          "position": 49
        },
        "endLoc": {
          "line": 58,
          "column": 76,
          "position": 441
        }
      }
    },
    {
      "format": "typescript",
      "lines": 73,
      "fragment": "getPredictionAnalytics(organizationId: string, startDate: Date, endDate: Date): Promise<{\n        totalPredictions: number;\n        averageConfidence: number;\n        byType: Record<string, number>;\n        byModel: Array<{\n            modelId: string;\n            modelName: string;\n            predictions: number;\n            averageConfidence: number;\n            accuracy: number;\n        }>;\n        trends: Array<{\n            date: Date;\n            predictions: number;\n            averageConfidence: number;\n        }>;\n        accuracyDistribution: Array<{\n            range: string;\n            count: number;\n            percentage: number;\n        }>;\n        analysisDate: Date;\n    }>;\n    getModelPerformanceAnalytics(organizationId: string): Promise<{\n        totalModels: number;\n        activeModels: number;\n        averageAccuracy: number;\n        byType: Array<{\n            type: string;\n            count: number;\n            averageAccuracy: number;\n            bestAccuracy: number;\n            worstAccuracy: number;\n        }>;\n        byModelType: Array<{\n            modelType: string;\n            count: number;\n            averageAccuracy: number;\n            averageTrainingTime: number;\n        }>;\n        performanceTrends: Array<{\n            date: Date;\n            averageAccuracy: number;\n            modelsTrained: number;\n        }>;\n        analysisDate: Date;\n    }>;\n    getTrainingAnalytics(organizationId: string, startDate: Date, endDate: Date): Promise<{\n        totalTrainingSessions: number;\n        successfulTraining: number;\n        failedTraining: number;\n        averageTrainingTime: number;\n        byType: Array<{\n            type: string;\n            trainingSessions: number;\n            successRate: number;\n            averageTime: number;\n        }>;\n        byModelType: Array<{\n            modelType: string;\n            trainingSessions: number;\n            successRate: number;\n            averageTime: number;\n        }>;\n        trainingTrends: Array<{\n            date: Date;\n            sessions: number;\n            successRate: number;\n            averageTime: number;\n        }>;\n        analysisDate: Date;\n    }>;\n    existsByName",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\repositories\\predictive-analytics.repository.d.ts",
        "start": 75,
        "end": 147,
        "startLoc": {
          "line": 75,
          "column": 5,
          "position": 1113
        },
        "endLoc": {
          "line": 147,
          "column": 13,
          "position": 1653
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\repositories\\predictive-analytics.repository.ts",
        "start": 117,
        "end": 192,
        "startLoc": {
          "line": 117,
          "column": 3,
          "position": 1203
        },
        "endLoc": {
          "line": 192,
          "column": 76,
          "position": 1746
        }
      }
    },
    {
      "format": "typescript",
      "lines": 62,
      "fragment": "generateAnalyticsReport(organizationId: string, filters?: PredictiveAnalyticsFilters): Promise<{\n        summary: PredictiveAnalyticsStats;\n        analytics: PredictiveAnalytics[];\n        generatedAt: Date;\n    }>;\n    generatePredictionReport(organizationId: string, startDate: Date, endDate: Date): Promise<{\n        summary: {\n            totalPredictions: number;\n            averageConfidence: number;\n            byType: Record<string, number>;\n        };\n        predictions: Array<{\n            id: string;\n            name: string;\n            type: string;\n            predictedValue: any;\n            confidence: number;\n            timestamp: Date;\n            accuracy?: number;\n        }>;\n        generatedAt: Date;\n    }>;\n    generateModelPerformanceReport(organizationId: string): Promise<{\n        summary: {\n            totalModels: number;\n            activeModels: number;\n            averageAccuracy: number;\n            needsRetraining: number;\n        };\n        models: Array<{\n            id: string;\n            name: string;\n            type: string;\n            modelType: string;\n            accuracy: number;\n            lastTrainingDate: Date;\n            predictions: number;\n            status: string;\n        }>;\n        generatedAt: Date;\n    }>;\n    generateTrainingReport(organizationId: string, startDate: Date, endDate: Date): Promise<{\n        summary: {\n            totalSessions: number;\n            successful: number;\n            failed: number;\n            averageTime: number;\n        };\n        trainingSessions: Array<{\n            id: string;\n            name: string;\n            type: string;\n            modelType: string;\n            status: string;\n            trainingDate: Date;\n            duration: number;\n            accuracy: number;\n            errorMessage?: string;\n        }>;\n        generatedAt: Date;\n    }>;\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\repositories\\predictive-analytics.repository.d.ts",
        "start": 155,
        "end": 216,
        "startLoc": {
          "line": 155,
          "column": 5,
          "position": 1835
        },
        "endLoc": {
          "line": 216,
          "column": 2,
          "position": 2307
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\repositories\\predictive-analytics.repository.ts",
        "start": 209,
        "end": 273,
        "startLoc": {
          "line": 209,
          "column": 3,
          "position": 1949
        },
        "endLoc": {
          "line": 273,
          "column": 2,
          "position": 2424
        }
      }
    },
    {
      "format": "typescript",
      "lines": 29,
      "fragment": "export interface OrganizationFilters {\n    status?: string;\n    subscriptionTier?: string;\n    isTrial?: boolean;\n    isActive?: boolean;\n    createdAfter?: Date;\n    createdBefore?: Date;\n    trialEndsAfter?: Date;\n    trialEndsBefore?: Date;\n}\nexport interface PaginatedResult<T> {\n    data: T[];\n    total: number;\n    page: number;\n    limit: number;\n    totalPages: number;\n    hasNext: boolean;\n    hasPrevious: boolean;\n}\nexport interface OrganizationSearchOptions {\n    query?: string;\n    status?: string;\n    subscriptionTier?: string;\n    isTrial?: boolean;\n    sortBy?: 'name' | 'slug' | 'createdAt' | 'trialEndsAt';\n    sortOrder?: 'asc' | 'desc';\n    page?: number;\n    limit?: number;\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\repositories\\organization.repository.d.ts",
        "start": 25,
        "end": 53,
        "startLoc": {
          "line": 25,
          "column": 1,
          "position": 413
        },
        "endLoc": {
          "line": 53,
          "column": 2,
          "position": 639
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\repositories\\organization.repository.ts",
        "start": 73,
        "end": 103,
        "startLoc": {
          "line": 73,
          "column": 1,
          "position": 511
        },
        "endLoc": {
          "line": 103,
          "column": 2,
          "position": 739
        }
      }
    },
    {
      "format": "typescript",
      "lines": 49,
      "fragment": "export interface InvoiceFilters extends BaseFilters {\n    type?: string;\n    status?: string;\n    paymentStatus?: string;\n    companyId?: string;\n    contactId?: string;\n    issueDateFrom?: Date;\n    issueDateTo?: Date;\n    dueDateFrom?: Date;\n    dueDateTo?: Date;\n    paidDateFrom?: Date;\n    paidDateTo?: Date;\n    minAmount?: number;\n    maxAmount?: number;\n    isOverdue?: boolean;\n    isPaid?: boolean;\n    isPartiallyPaid?: boolean;\n    isPending?: boolean;\n}\nexport interface InvoiceSearchOptions extends BaseSearchOptions {\n    type?: string;\n    status?: string;\n    paymentStatus?: string;\n    companyId?: string;\n    contactId?: string;\n    issueDateFrom?: Date;\n    issueDateTo?: Date;\n    dueDateFrom?: Date;\n    dueDateTo?: Date;\n    minAmount?: number;\n    maxAmount?: number;\n}\nexport interface InvoiceStats extends BaseStats {\n    byType: Record<string, number>;\n    byStatus: Record<string, number>;\n    byPaymentStatus: Record<string, number>;\n    totalAmount: number;\n    paidAmount: number;\n    outstandingAmount: number;\n    overdueAmount: number;\n    averageAmount: number;\n    averagePaymentTime: number;\n    overdueCount: number;\n    paidCount: number;\n    pendingCount: number;\n    partiallyPaidCount: number;\n}\nexport interface InvoiceRepository extends BaseRepository<Invoice> {\n    findByInvoiceNumber",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\repositories\\invoice.repository.d.ts",
        "start": 3,
        "end": 51,
        "startLoc": {
          "line": 3,
          "column": 1,
          "position": 38
        },
        "endLoc": {
          "line": 51,
          "column": 20,
          "position": 429
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\repositories\\invoice.repository.ts",
        "start": 8,
        "end": 59,
        "startLoc": {
          "line": 8,
          "column": 1,
          "position": 49
        },
        "endLoc": {
          "line": 59,
          "column": 76,
          "position": 443
        }
      }
    },
    {
      "format": "typescript",
      "lines": 42,
      "fragment": "getRevenueStats(organizationId: string, startDate: Date, endDate: Date): Promise<{\n        totalRevenue: number;\n        paidRevenue: number;\n        outstandingRevenue: number;\n        overdueRevenue: number;\n        averageInvoiceValue: number;\n        averagePaymentTime: number;\n        paymentTrends: Array<{\n            date: Date;\n            amount: number;\n            count: number;\n        }>;\n    }>;\n    getPaymentAnalytics(organizationId: string, startDate: Date, endDate: Date): Promise<{\n        totalInvoices: number;\n        paidInvoices: number;\n        overdueInvoices: number;\n        averagePaymentTime: number;\n        paymentMethodBreakdown: Record<string, number>;\n        paymentTrends: Array<{\n            date: Date;\n            paid: number;\n            overdue: number;\n        }>;\n    }>;\n    getOverdueAnalytics(organizationId: string): Promise<{\n        totalOverdue: number;\n        totalOverdueAmount: number;\n        averageOverdueDays: number;\n        overdueByAge: Array<{\n            ageRange: string;\n            count: number;\n            amount: number;\n        }>;\n        overdueByCompany: Array<{\n            companyId: string;\n            companyName: string;\n            count: number;\n            amount: number;\n        }>;\n    }>;\n    existsByInvoiceNumber",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\repositories\\invoice.repository.d.ts",
        "start": 84,
        "end": 125,
        "startLoc": {
          "line": 84,
          "column": 5,
          "position": 1313
        },
        "endLoc": {
          "line": 125,
          "column": 22,
          "position": 1641
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\repositories\\invoice.repository.ts",
        "start": 131,
        "end": 175,
        "startLoc": {
          "line": 131,
          "column": 3,
          "position": 1414
        },
        "endLoc": {
          "line": 175,
          "column": 76,
          "position": 1745
        }
      }
    },
    {
      "format": "typescript",
      "lines": 39,
      "fragment": "generateInvoiceReport(organizationId: string, filters?: InvoiceFilters): Promise<{\n        summary: InvoiceStats;\n        invoices: Invoice[];\n        generatedAt: Date;\n    }>;\n    generatePaymentReport(organizationId: string, startDate: Date, endDate: Date): Promise<{\n        summary: {\n            totalInvoices: number;\n            totalAmount: number;\n            paidAmount: number;\n            outstandingAmount: number;\n            overdueAmount: number;\n        };\n        payments: Array<{\n            invoiceId: string;\n            invoiceNumber: string;\n            amount: number;\n            paidDate: Date;\n            paymentMethod: string;\n        }>;\n        generatedAt: Date;\n    }>;\n    generateOverdueReport(organizationId: string): Promise<{\n        summary: {\n            totalOverdue: number;\n            totalAmount: number;\n            averageDays: number;\n        };\n        overdueInvoices: Array<{\n            invoiceId: string;\n            invoiceNumber: string;\n            companyName: string;\n            amount: number;\n            dueDate: Date;\n            daysOverdue: number;\n        }>;\n        generatedAt: Date;\n    }>;\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\repositories\\invoice.repository.d.ts",
        "start": 132,
        "end": 170,
        "startLoc": {
          "line": 132,
          "column": 5,
          "position": 1801
        },
        "endLoc": {
          "line": 170,
          "column": 2,
          "position": 2092
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\repositories\\invoice.repository.ts",
        "start": 191,
        "end": 231,
        "startLoc": {
          "line": 191,
          "column": 3,
          "position": 1926
        },
        "endLoc": {
          "line": 231,
          "column": 2,
          "position": 2219
        }
      }
    },
    {
      "format": "typescript",
      "lines": 64,
      "fragment": "export interface InventoryKardexFilters extends BaseFilters {\n    productId?: string;\n    warehouseId?: string;\n    locationId?: string;\n    movementType?: string;\n    movementReason?: string;\n    status?: string;\n    lowStock?: boolean;\n    outOfStock?: boolean;\n    needsReorder?: boolean;\n    hasExpiredItems?: boolean;\n    hasExpiringItems?: boolean;\n    minQuantity?: number;\n    maxQuantity?: number;\n    minValue?: number;\n    maxValue?: number;\n    costMethod?: string;\n    valuationMethod?: string;\n}\nexport interface InventoryKardexSearchOptions extends BaseSearchOptions {\n    productId?: string;\n    warehouseId?: string;\n    locationId?: string;\n    movementType?: string;\n    movementReason?: string;\n    status?: string;\n    lowStock?: boolean;\n    outOfStock?: boolean;\n    needsReorder?: boolean;\n    hasExpiredItems?: boolean;\n    hasExpiringItems?: boolean;\n    minQuantity?: number;\n    maxQuantity?: number;\n    minValue?: number;\n    maxValue?: number;\n    costMethod?: string;\n    valuationMethod?: string;\n}\nexport interface InventoryKardexStats extends BaseStats {\n    byProduct: Record<string, number>;\n    byWarehouse: Record<string, number>;\n    byLocation: Record<string, number>;\n    byMovementType: Record<string, number>;\n    byMovementReason: Record<string, number>;\n    totalQuantity: number;\n    totalValue: number;\n    availableQuantity: number;\n    availableValue: number;\n    reservedQuantity: number;\n    reservedValue: number;\n    lowStockCount: number;\n    outOfStockCount: number;\n    needsReorderCount: number;\n    expiredItemsCount: number;\n    expiringItemsCount: number;\n    averageStockTurnover: number;\n    totalMovements: number;\n    movementsIn: number;\n    movementsOut: number;\n    movementsTransfer: number;\n    movementsAdjustment: number;\n}\nexport interface InventoryKardexRepository extends BaseRepository<InventoryKardex> {\n    findByProductId",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\repositories\\inventory-kardex.repository.d.ts",
        "start": 3,
        "end": 66,
        "startLoc": {
          "line": 3,
          "column": 1,
          "position": 38
        },
        "endLoc": {
          "line": 66,
          "column": 16,
          "position": 552
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\repositories\\inventory-kardex.repository.ts",
        "start": 8,
        "end": 74,
        "startLoc": {
          "line": 8,
          "column": 1,
          "position": 49
        },
        "endLoc": {
          "line": 74,
          "column": 76,
          "position": 566
        }
      }
    },
    {
      "format": "typescript",
      "lines": 78,
      "fragment": "): Promise<{\n        averageTurnover: number;\n        byProduct: Array<{\n            productId: string;\n            productName: string;\n            turnover: number;\n            averageStock: number;\n            totalMovements: number;\n        }>;\n        byWarehouse: Array<{\n            warehouseId: string;\n            warehouseName: string;\n            turnover: number;\n            averageStock: number;\n            totalMovements: number;\n        }>;\n        analysisDate: Date;\n    }>;\n    getMovementAnalysis(organizationId: string, startDate: Date, endDate: Date): Promise<{\n        totalMovements: number;\n        movementsIn: number;\n        movementsOut: number;\n        movementsTransfer: number;\n        movementsAdjustment: number;\n        byType: Record<string, number>;\n        byReason: Record<string, number>;\n        byProduct: Array<{\n            productId: string;\n            productName: string;\n            movementsIn: number;\n            movementsOut: number;\n            netQuantity: number;\n        }>;\n        byWarehouse: Array<{\n            warehouseId: string;\n            warehouseName: string;\n            movementsIn: number;\n            movementsOut: number;\n            netQuantity: number;\n        }>;\n        trends: Array<{\n            date: Date;\n            movementsIn: number;\n            movementsOut: number;\n            netQuantity: number;\n        }>;\n        analysisDate: Date;\n    }>;\n    getExpirationAnalysis(organizationId: string): Promise<{\n        totalExpired: number;\n        totalExpiring: number;\n        expiredValue: number;\n        expiringValue: number;\n        byProduct: Array<{\n            productId: string;\n            productName: string;\n            expiredQuantity: number;\n            expiringQuantity: number;\n            expiredValue: number;\n            expiringValue: number;\n        }>;\n        byWarehouse: Array<{\n            warehouseId: string;\n            warehouseName: string;\n            expiredQuantity: number;\n            expiringQuantity: number;\n            expiredValue: number;\n            expiringValue: number;\n        }>;\n        byExpirationDate: Array<{\n            expirationDate: Date;\n            quantity: number;\n            value: number;\n            productCount: number;\n        }>;\n        analysisDate: Date;\n    }>;\n    existsByProductAndWarehouse",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\repositories\\inventory-kardex.repository.d.ts",
        "start": 109,
        "end": 186,
        "startLoc": {
          "line": 109,
          "column": 7,
          "position": 1513
        },
        "endLoc": {
          "line": 186,
          "column": 28,
          "position": 2077
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\repositories\\inventory-kardex.repository.ts",
        "start": 152,
        "end": 232,
        "startLoc": {
          "line": 152,
          "column": 4,
          "position": 1612
        },
        "endLoc": {
          "line": 232,
          "column": 76,
          "position": 2179
        }
      }
    },
    {
      "format": "typescript",
      "lines": 71,
      "fragment": "generateInventoryReport(organizationId: string, filters?: InventoryKardexFilters): Promise<{\n        summary: InventoryKardexStats;\n        inventory: InventoryKardex[];\n        generatedAt: Date;\n    }>;\n    generateMovementReport(organizationId: string, startDate: Date, endDate: Date): Promise<{\n        summary: {\n            totalMovements: number;\n            movementsIn: number;\n            movementsOut: number;\n            movementsTransfer: number;\n            movementsAdjustment: number;\n        };\n        movements: Array<{\n            id: string;\n            productId: string;\n            productName: string;\n            movementType: string;\n            movementReason: string;\n            quantity: number;\n            unitCost: number;\n            totalCost: number;\n            movementDate: Date;\n            reference: string;\n        }>;\n        generatedAt: Date;\n    }>;\n    generateExpirationReport(organizationId: string): Promise<{\n        summary: {\n            totalExpired: number;\n            totalExpiring: number;\n            expiredValue: number;\n            expiringValue: number;\n        };\n        expiredItems: Array<{\n            productId: string;\n            productName: string;\n            quantity: number;\n            value: number;\n            expirationDate: Date;\n            daysExpired: number;\n        }>;\n        expiringItems: Array<{\n            productId: string;\n            productName: string;\n            quantity: number;\n            value: number;\n            expirationDate: Date;\n            daysUntilExpiration: number;\n        }>;\n        generatedAt: Date;\n    }>;\n    generateReorderReport(organizationId: string): Promise<{\n        summary: {\n            totalNeedsReorder: number;\n            totalReorderValue: number;\n        };\n        reorderItems: Array<{\n            productId: string;\n            productName: string;\n            currentQuantity: number;\n            reorderPoint: number;\n            reorderQuantity: number;\n            unitCost: number;\n            reorderValue: number;\n            supplierId: string;\n            supplierName: string;\n        }>;\n        generatedAt: Date;\n    }>;\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\repositories\\inventory-kardex.repository.d.ts",
        "start": 195,
        "end": 265,
        "startLoc": {
          "line": 195,
          "column": 5,
          "position": 2294
        },
        "endLoc": {
          "line": 265,
          "column": 2,
          "position": 2808
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\repositories\\inventory-kardex.repository.ts",
        "start": 250,
        "end": 323,
        "startLoc": {
          "line": 250,
          "column": 3,
          "position": 2417
        },
        "endLoc": {
          "line": 323,
          "column": 2,
          "position": 2934
        }
      }
    },
    {
      "format": "typescript",
      "lines": 50,
      "fragment": "export interface InteractionFilters {\n    organizationId?: OrganizationId;\n    contactId?: ContactId;\n    companyId?: CompanyId;\n    userId?: UserId;\n    type?: InteractionType;\n    status?: InteractionStatus;\n    priority?: InteractionPriority;\n    scheduledFrom?: Date;\n    scheduledTo?: Date;\n    completedFrom?: Date;\n    completedTo?: Date;\n    tags?: string[];\n    hasOutcome?: boolean;\n    hasNextAction?: boolean;\n    overdue?: boolean;\n    upcoming?: boolean;\n}\nexport interface InteractionSearchOptions {\n    page?: number;\n    limit?: number;\n    sortBy?: 'createdAt' | 'updatedAt' | 'scheduledAt' | 'completedAt' | 'subject' | 'priority';\n    sortOrder?: 'asc' | 'desc';\n    search?: string;\n}\nexport interface InteractionStats {\n    total: number;\n    byType: Record<InteractionType, number>;\n    byStatus: Record<InteractionStatus, number>;\n    byPriority: Record<InteractionPriority, number>;\n    completed: number;\n    pending: number;\n    overdue: number;\n    upcoming: number;\n    averageDuration?: number;\n    completionRate?: number;\n}\nexport interface PaginatedResult<T> {\n    data: T[];\n    pagination: {\n        page: number;\n        limit: number;\n        total: number;\n        totalPages: number;\n        hasNext: boolean;\n        hasPrev: boolean;\n    };\n}\nexport interface InteractionRepository {\n    findById",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\repositories\\interaction.repository.d.ts",
        "start": 2,
        "end": 51,
        "startLoc": {
          "line": 2,
          "column": 1,
          "position": 37
        },
        "endLoc": {
          "line": 51,
          "column": 9,
          "position": 434
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\repositories\\interaction.repository.ts",
        "start": 7,
        "end": 60,
        "startLoc": {
          "line": 7,
          "column": 1,
          "position": 45
        },
        "endLoc": {
          "line": 60,
          "column": 76,
          "position": 446
        }
      }
    },
    {
      "format": "typescript",
      "lines": 27,
      "fragment": "getDashboardData(organizationId: OrganizationId, userId?: UserId): Promise<{\n        todayTasks: number;\n        overdueTasks: number;\n        upcomingTasks: number;\n        completedToday: number;\n        recentInteractions: Interaction[];\n        upcomingInteractions: Interaction[];\n        overdueInteractions: Interaction[];\n    }>;\n    getContactSummary(contactId: ContactId): Promise<{\n        totalInteractions: number;\n        lastInteraction: Interaction | null;\n        nextScheduled: Interaction | null;\n        pendingTasks: number;\n        completedTasks: number;\n        averageResponseTime?: number;\n    }>;\n    getCompanySummary(companyId: CompanyId): Promise<{\n        totalInteractions: number;\n        lastInteraction: Interaction | null;\n        nextScheduled: Interaction | null;\n        pendingTasks: number;\n        completedTasks: number;\n        contactsInvolved: number;\n        averageResponseTime?: number;\n    }>;\n    exists",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\repositories\\interaction.repository.d.ts",
        "start": 101,
        "end": 127,
        "startLoc": {
          "line": 101,
          "column": 5,
          "position": 1541
        },
        "endLoc": {
          "line": 127,
          "column": 7,
          "position": 1769
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\repositories\\interaction.repository.ts",
        "start": 170,
        "end": 199,
        "startLoc": {
          "line": 170,
          "column": 3,
          "position": 1685
        },
        "endLoc": {
          "line": 199,
          "column": 76,
          "position": 1916
        }
      }
    },
    {
      "format": "typescript",
      "lines": 63,
      "fragment": "export interface DealFilters {\n    organizationId?: OrganizationId;\n    contactId?: ContactId;\n    companyId?: CompanyId;\n    userId?: UserId;\n    stage?: DealStage;\n    status?: DealStatus;\n    priority?: DealPriority;\n    source?: DealSource;\n    valueFrom?: number;\n    valueTo?: number;\n    probabilityFrom?: number;\n    probabilityTo?: number;\n    expectedCloseFrom?: Date;\n    expectedCloseTo?: Date;\n    actualCloseFrom?: Date;\n    actualCloseTo?: Date;\n    tags?: string[];\n    hasNextStep?: boolean;\n    overdue?: boolean;\n    won?: boolean;\n    lost?: boolean;\n    active?: boolean;\n}\nexport interface DealSearchOptions {\n    page?: number;\n    limit?: number;\n    sortBy?: 'createdAt' | 'updatedAt' | 'expectedCloseDate' | 'actualCloseDate' | 'name' | 'value' | 'probability' | 'priority';\n    sortOrder?: 'asc' | 'desc';\n    search?: string;\n}\nexport interface DealStats {\n    total: number;\n    byStage: Record<DealStage, number>;\n    byStatus: Record<DealStatus, number>;\n    byPriority: Record<DealPriority, number>;\n    bySource: Record<DealSource, number>;\n    totalValue: number;\n    weightedValue: number;\n    wonValue: number;\n    lostValue: number;\n    activeValue: number;\n    averageDealSize: number;\n    averageSalesCycle: number;\n    winRate: number;\n    conversionRate: number;\n    overdueCount: number;\n    expectedThisMonth: number;\n    expectedThisQuarter: number;\n}\nexport interface PaginatedResult<T> {\n    data: T[];\n    pagination: {\n        page: number;\n        limit: number;\n        total: number;\n        totalPages: number;\n        hasNext: boolean;\n        hasPrev: boolean;\n    };\n}\nexport interface DealRepository {\n    findById",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\repositories\\deal.repository.d.ts",
        "start": 2,
        "end": 64,
        "startLoc": {
          "line": 2,
          "column": 1,
          "position": 40
        },
        "endLoc": {
          "line": 64,
          "column": 9,
          "position": 546
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\repositories\\deal.repository.ts",
        "start": 7,
        "end": 73,
        "startLoc": {
          "line": 7,
          "column": 1,
          "position": 48
        },
        "endLoc": {
          "line": 73,
          "column": 76,
          "position": 558
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "}>;\n        totalValue: number;\n        totalWeightedValue: number;\n        averageDealSize: number;\n        averageSalesCycle: number;\n    }>;\n    getSalesForecast(organizationId: OrganizationId, userId?: UserId, months?: number): Promise<{\n        monthly: Array<{\n            month: string;\n            value: number;\n            weightedValue: number;\n            count: number;",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\repositories\\deal.repository.d.ts",
        "start": 117,
        "end": 128,
        "startLoc": {
          "line": 117,
          "column": 9,
          "position": 1754
        },
        "endLoc": {
          "line": 128,
          "column": 2,
          "position": 1853
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\repositories\\deal.repository.ts",
        "start": 177,
        "end": 185,
        "startLoc": {
          "line": 177,
          "column": 2,
          "position": 1882
        },
        "endLoc": {
          "line": 185,
          "column": 2,
          "position": 1979
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "getDealHistory(contactId: ContactId, from?: Date, to?: Date): Promise<Deal[]>;\n    getDealTimeline(organizationId: OrganizationId, from?: Date, to?: Date): Promise<Deal[]>;\n    getSalesPerformance(userId: UserId, organizationId: OrganizationId, from?: Date, to?: Date): Promise<{\n        totalDeals: number;\n        wonDeals: number;\n        lostDeals: number;\n        totalValue: number;\n        wonValue: number;\n        lostValue: number;\n        averageDealSize: number;\n        averageSalesCycle: number;\n        winRate: number;\n        byStage: Record<DealStage, number>;\n        bySource: Record<DealSource, number>;\n    }>;\n    getDashboardData",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\repositories\\deal.repository.d.ts",
        "start": 155,
        "end": 170,
        "startLoc": {
          "line": 155,
          "column": 5,
          "position": 2056
        },
        "endLoc": {
          "line": 170,
          "column": 17,
          "position": 2248
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\repositories\\deal.repository.ts",
        "start": 199,
        "end": 215,
        "startLoc": {
          "line": 199,
          "column": 3,
          "position": 2169
        },
        "endLoc": {
          "line": 215,
          "column": 76,
          "position": 2362
        }
      }
    },
    {
      "format": "typescript",
      "lines": 36,
      "fragment": "getDashboardData(organizationId: OrganizationId, userId?: UserId): Promise<{\n        totalDeals: number;\n        activeDeals: number;\n        wonDeals: number;\n        lostDeals: number;\n        overdueDeals: number;\n        expectedThisMonth: number;\n        totalValue: number;\n        weightedValue: number;\n        recentDeals: Deal[];\n        upcomingDeals: Deal[];\n        overdueDeals: Deal[];\n        topDeals: Deal[];\n    }>;\n    getContactSummary(contactId: ContactId): Promise<{\n        totalDeals: number;\n        wonDeals: number;\n        lostDeals: number;\n        totalValue: number;\n        wonValue: number;\n        lastDeal: Deal | null;\n        averageDealSize: number;\n        averageSalesCycle: number;\n    }>;\n    getCompanySummary(companyId: CompanyId): Promise<{\n        totalDeals: number;\n        wonDeals: number;\n        lostDeals: number;\n        totalValue: number;\n        wonValue: number;\n        lastDeal: Deal | null;\n        averageDealSize: number;\n        averageSalesCycle: number;\n        contactsInvolved: number;\n    }>;\n    exists",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\repositories\\deal.repository.d.ts",
        "start": 170,
        "end": 205,
        "startLoc": {
          "line": 170,
          "column": 5,
          "position": 2248
        },
        "endLoc": {
          "line": 205,
          "column": 7,
          "position": 2531
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\repositories\\deal.repository.ts",
        "start": 219,
        "end": 257,
        "startLoc": {
          "line": 219,
          "column": 3,
          "position": 2372
        },
        "endLoc": {
          "line": 257,
          "column": 76,
          "position": 2658
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "exists(id: DealId): Promise<boolean>;\n    existsByContactAndName(contactId: ContactId, name: string, organizationId: OrganizationId): Promise<boolean>;\n    getNextExpectedClose(organizationId: OrganizationId, userId?: UserId): Promise<Deal | null>;\n    getOverdueCount(organizationId: OrganizationId, userId?: UserId): Promise<number>;\n    getExpectedThisMonthCount(organizationId: OrganizationId, userId?: UserId): Promise<number>;\n    getExpectedThisQuarterCount(organizationId: OrganizationId, userId?: UserId): Promise<number>;\n    getWonCount(organizationId: OrganizationId, userId?: UserId, from?: Date, to?: Date): Promise<number>;\n    getLostCount(organizationId: OrganizationId, userId?: UserId, from?: Date, to?: Date): Promise<number>;\n    getTotalValue(organizationId: OrganizationId, userId?: UserId, filters?: DealFilters): Promise<number>;\n    getWeightedValue(organizationId: OrganizationId, userId?: UserId, filters?: DealFilters): Promise<number>;\n    getAverageDealSize(organizationId: OrganizationId, userId?: UserId, filters?: DealFilters): Promise<number>;\n    getAverageSalesCycle(organizationId: OrganizationId, userId?: UserId, filters?: DealFilters): Promise<number>;\n    getWinRate(organizationId: OrganizationId, userId?: UserId, from?: Date, to?: Date): Promise<number>;\n    getConversionRate(organizationId: OrganizationId, userId?: UserId, from?: Date, to?: Date): Promise<number>;\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\repositories\\deal.repository.d.ts",
        "start": 205,
        "end": 219,
        "startLoc": {
          "line": 205,
          "column": 5,
          "position": 2531
        },
        "endLoc": {
          "line": 219,
          "column": 2,
          "position": 2938
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\repositories\\deal.repository.ts",
        "start": 261,
        "end": 275,
        "startLoc": {
          "line": 261,
          "column": 3,
          "position": 2668
        },
        "endLoc": {
          "line": 275,
          "column": 2,
          "position": 3075
        }
      }
    },
    {
      "format": "typescript",
      "lines": 69,
      "fragment": "export interface DatabaseSchemaFilters extends BaseFilters {\n    type?: string;\n    status?: string;\n    tableType?: string;\n    columnType?: string;\n    constraintType?: string;\n    isActive?: boolean;\n    hasBackup?: boolean;\n    hasMaintenance?: boolean;\n    minHealthScore?: number;\n    maxHealthScore?: number;\n    minPerformanceScore?: number;\n    maxPerformanceScore?: number;\n    minSecurityScore?: number;\n    maxSecurityScore?: number;\n    lastBackupFrom?: Date;\n    lastBackupTo?: Date;\n    lastMaintenanceFrom?: Date;\n    lastMaintenanceTo?: Date;\n}\nexport interface DatabaseSchemaSearchOptions extends BaseSearchOptions {\n    type?: string;\n    status?: string;\n    tableType?: string;\n    columnType?: string;\n    constraintType?: string;\n    isActive?: boolean;\n    hasBackup?: boolean;\n    hasMaintenance?: boolean;\n    minHealthScore?: number;\n    maxHealthScore?: number;\n    minPerformanceScore?: number;\n    maxPerformanceScore?: number;\n    minSecurityScore?: number;\n    maxSecurityScore?: number;\n    lastBackupFrom?: Date;\n    lastBackupTo?: Date;\n    lastMaintenanceFrom?: Date;\n    lastMaintenanceTo?: Date;\n}\nexport interface DatabaseSchemaStats extends BaseStats {\n    byType: Record<string, number>;\n    byStatus: Record<string, number>;\n    byTableType: Record<string, number>;\n    byColumnType: Record<string, number>;\n    byConstraintType: Record<string, number>;\n    totalTables: number;\n    totalViews: number;\n    totalFunctions: number;\n    totalProcedures: number;\n    totalTriggers: number;\n    totalIndexes: number;\n    totalConstraints: number;\n    totalPolicies: number;\n    totalSize: number;\n    averageTableSize: number;\n    averageHealthScore: number;\n    averagePerformanceScore: number;\n    averageSecurityScore: number;\n    averageMaintainabilityScore: number;\n    lastBackupDate?: Date;\n    lastMaintenanceDate?: Date;\n    totalBackupSize: number;\n    totalMaintenanceTime: number;\n    schemasWithBackup: number;\n    schemasWithMaintenance: number;\n}\nexport interface DatabaseSchemaRepository extends BaseRepository<DatabaseSchema> {\n    findByType",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\repositories\\database-schema.repository.d.ts",
        "start": 3,
        "end": 71,
        "startLoc": {
          "line": 3,
          "column": 1,
          "position": 38
        },
        "endLoc": {
          "line": 71,
          "column": 11,
          "position": 591
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\repositories\\database-schema.repository.ts",
        "start": 8,
        "end": 79,
        "startLoc": {
          "line": 8,
          "column": 1,
          "position": 49
        },
        "endLoc": {
          "line": 79,
          "column": 76,
          "position": 605
        }
      }
    },
    {
      "format": "typescript",
      "lines": 103,
      "fragment": "getSchemaAnalytics(organizationId: string, startDate: Date, endDate: Date): Promise<{\n        totalSchemas: number;\n        averageHealthScore: number;\n        averagePerformanceScore: number;\n        averageSecurityScore: number;\n        byType: Record<string, number>;\n        byStatus: Array<{\n            status: string;\n            count: number;\n            averageHealthScore: number;\n            averagePerformanceScore: number;\n            averageSecurityScore: number;\n        }>;\n        trends: Array<{\n            date: Date;\n            schemas: number;\n            averageHealthScore: number;\n            averagePerformanceScore: number;\n        }>;\n        scoreDistribution: Array<{\n            range: string;\n            count: number;\n            percentage: number;\n        }>;\n        analysisDate: Date;\n    }>;\n    getTableAnalytics(organizationId: string): Promise<{\n        totalTables: number;\n        averageTablesPerSchema: number;\n        byType: Array<{\n            type: string;\n            count: number;\n            averageSize: number;\n            averageColumns: number;\n        }>;\n        bySchema: Array<{\n            schema: string;\n            count: number;\n            averageSize: number;\n            averageColumns: number;\n        }>;\n        sizeDistribution: Array<{\n            range: string;\n            count: number;\n            percentage: number;\n        }>;\n        analysisDate: Date;\n    }>;\n    getPerformanceAnalytics(organizationId: string, startDate: Date, endDate: Date): Promise<{\n        totalAnalyses: number;\n        averageHealthScore: number;\n        averagePerformanceScore: number;\n        byType: Array<{\n            type: string;\n            count: number;\n            averageHealthScore: number;\n            averagePerformanceScore: number;\n            bestHealthScore: number;\n            worstHealthScore: number;\n        }>;\n        byStatus: Array<{\n            status: string;\n            count: number;\n            averageHealthScore: number;\n            averagePerformanceScore: number;\n        }>;\n        performanceTrends: Array<{\n            date: Date;\n            averageHealthScore: number;\n            averagePerformanceScore: number;\n            analysesPerformed: number;\n        }>;\n        analysisDate: Date;\n    }>;\n    getMaintenanceAnalytics(organizationId: string, startDate: Date, endDate: Date): Promise<{\n        totalBackups: number;\n        totalMaintenances: number;\n        averageBackupSize: number;\n        averageMaintenanceTime: number;\n        byType: Array<{\n            type: string;\n            backups: number;\n            maintenances: number;\n            averageBackupSize: number;\n            averageMaintenanceTime: number;\n        }>;\n        byStatus: Array<{\n            status: string;\n            backups: number;\n            maintenances: number;\n            averageBackupSize: number;\n            averageMaintenanceTime: number;\n        }>;\n        maintenanceTrends: Array<{\n            date: Date;\n            backups: number;\n            maintenances: number;\n            averageBackupSize: number;\n            averageMaintenanceTime: number;\n        }>;\n        analysisDate: Date;\n    }>;\n    existsByName",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\repositories\\database-schema.repository.d.ts",
        "start": 104,
        "end": 206,
        "startLoc": {
          "line": 104,
          "column": 5,
          "position": 1512
        },
        "endLoc": {
          "line": 206,
          "column": 13,
          "position": 2276
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\repositories\\database-schema.repository.ts",
        "start": 146,
        "end": 252,
        "startLoc": {
          "line": 146,
          "column": 3,
          "position": 1602
        },
        "endLoc": {
          "line": 252,
          "column": 76,
          "position": 2370
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "existsByName(name: string, organizationId: string): Promise<boolean>;\n    getSchemaCount(organizationId: string, filters?: DatabaseSchemaFilters): Promise<number>;\n    getTotalTables(organizationId: string, filters?: DatabaseSchemaFilters): Promise<number>;\n    getTotalViews(organizationId: string, filters?: DatabaseSchemaFilters): Promise<number>;\n    getTotalFunctions(organizationId: string, filters?: DatabaseSchemaFilters): Promise<number>;\n    getTotalProcedures(organizationId: string, filters?: DatabaseSchemaFilters): Promise<number>;\n    getTotalTriggers(organizationId: string, filters?: DatabaseSchemaFilters): Promise<number>;\n    getTotalIndexes(organizationId: string, filters?: DatabaseSchemaFilters): Promise<number>;\n    getTotalConstraints(organizationId: string, filters?: DatabaseSchemaFilters): Promise<number>;\n    getTotalPolicies(organizationId: string, filters?: DatabaseSchemaFilters): Promise<number>;\n    getTotalSize(organizationId: string, filters?: DatabaseSchemaFilters): Promise<number>;\n    getAverageHealthScore(organizationId: string, filters?: DatabaseSchemaFilters): Promise<number>;\n    getAveragePerformanceScore(organizationId: string, filters?: DatabaseSchemaFilters): Promise<number>;\n    getAverageSecurityScore(organizationId: string, filters?: DatabaseSchemaFilters): Promise<number>;\n    getAverageMaintainabilityScore(organizationId: string, filters?: DatabaseSchemaFilters): Promise<number>;\n    getSchemasWithBackupCount(organizationId: string, filters?: DatabaseSchemaFilters): Promise<number>;\n    getSchemasWithMaintenanceCount(organizationId: string, filters?: DatabaseSchemaFilters): Promise<number>;\n    generateSchemaReport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\repositories\\database-schema.repository.d.ts",
        "start": 206,
        "end": 223,
        "startLoc": {
          "line": 206,
          "column": 5,
          "position": 2276
        },
        "endLoc": {
          "line": 223,
          "column": 21,
          "position": 2666
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\repositories\\database-schema.repository.ts",
        "start": 256,
        "end": 274,
        "startLoc": {
          "line": 256,
          "column": 3,
          "position": 2380
        },
        "endLoc": {
          "line": 274,
          "column": 76,
          "position": 2771
        }
      }
    },
    {
      "format": "typescript",
      "lines": 71,
      "fragment": "generateSchemaReport(organizationId: string, filters?: DatabaseSchemaFilters): Promise<{\n        summary: DatabaseSchemaStats;\n        schemas: DatabaseSchema[];\n        generatedAt: Date;\n    }>;\n    generateTableReport(organizationId: string): Promise<{\n        summary: {\n            totalTables: number;\n            averagePerSchema: number;\n            byType: Record<string, number>;\n        };\n        tables: Array<{\n            id: string;\n            name: string;\n            type: string;\n            schema: string;\n            columns: number;\n            constraints: number;\n            indexes: number;\n            size: number;\n            schemaId: string;\n            schemaName: string;\n        }>;\n        generatedAt: Date;\n    }>;\n    generatePerformanceReport(organizationId: string): Promise<{\n        summary: {\n            totalSchemas: number;\n            averageHealthScore: number;\n            averagePerformanceScore: number;\n            highPerformance: number;\n            needsImprovement: number;\n        };\n        schemas: Array<{\n            id: string;\n            name: string;\n            type: string;\n            status: string;\n            healthScore: number;\n            performanceScore: number;\n            securityScore: number;\n            maintainabilityScore: number;\n            totalSize: number;\n            totalTables: number;\n            lastBackupDate: Date;\n            lastMaintenanceDate: Date;\n        }>;\n        generatedAt: Date;\n    }>;\n    generateMaintenanceReport(organizationId: string, startDate: Date, endDate: Date): Promise<{\n        summary: {\n            totalBackups: number;\n            totalMaintenances: number;\n            averageBackupSize: number;\n            averageMaintenanceTime: number;\n        };\n        maintenanceSessions: Array<{\n            id: string;\n            name: string;\n            type: string;\n            status: string;\n            backupDate: Date;\n            maintenanceDate: Date;\n            backupSize: number;\n            maintenanceTime: number;\n            healthScore: number;\n            performanceScore: number;\n        }>;\n        generatedAt: Date;\n    }>;\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\repositories\\database-schema.repository.d.ts",
        "start": 223,
        "end": 293,
        "startLoc": {
          "line": 223,
          "column": 5,
          "position": 2666
        },
        "endLoc": {
          "line": 293,
          "column": 2,
          "position": 3187
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\repositories\\database-schema.repository.ts",
        "start": 278,
        "end": 351,
        "startLoc": {
          "line": 278,
          "column": 3,
          "position": 2781
        },
        "endLoc": {
          "line": 351,
          "column": 2,
          "position": 3305
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "findActiveContacts(organizationId: string): Promise<Contact[]>;\n    findInactiveContacts(organizationId: string): Promise<Contact[]>;\n    findPrimaryContacts(organizationId: string): Promise<Contact[]>;\n    findDecisionMakers(organizationId: string): Promise<Contact[]>;\n    findInfluencers(organizationId: string): Promise<Contact[]>;\n    findTechnicalContacts(organizationId: string): Promise<Contact[]>;\n    findFinancialContacts(organizationId: string): Promise<Contact[]>;\n    findProcurementContacts(organizationId: string): Promise<Contact[]>;\n    findVerifiedContacts(organizationId: string): Promise<Contact[]>;\n    findUnverifiedContacts(organizationId: string): Promise<Contact[]>;\n    findOptedInContacts(organizationId: string): Promise<Contact[]>;\n    findOptedOutContacts(organizationId: string): Promise<Contact[]>;\n    findOverdueForFollowUp",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\repositories\\contact.repository.d.ts",
        "start": 34,
        "end": 46,
        "startLoc": {
          "line": 34,
          "column": 5,
          "position": 668
        },
        "endLoc": {
          "line": 46,
          "column": 23,
          "position": 884
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\repositories\\contact.repository.ts",
        "start": 63,
        "end": 76,
        "startLoc": {
          "line": 63,
          "column": 3,
          "position": 730
        },
        "endLoc": {
          "line": 76,
          "column": 76,
          "position": 947
        }
      }
    },
    {
      "format": "typescript",
      "lines": 30,
      "fragment": "countByOrganization(organizationId: string): Promise<number>;\n    countByType(type: string, organizationId: string): Promise<number>;\n    countByStatus(status: string, organizationId: string): Promise<number>;\n    countBySource(source: string, organizationId: string): Promise<number>;\n    countByPriority(priority: string, organizationId: string): Promise<number>;\n    countByAssignedUser(userId: string, organizationId: string): Promise<number>;\n    countByDepartment(department: string, organizationId: string): Promise<number>;\n    countByIndustry(industry: string, organizationId: string): Promise<number>;\n    countByProfession(profession: string, organizationId: string): Promise<number>;\n    countByCompany(companyId: string, organizationId: string): Promise<number>;\n    countActiveContacts(organizationId: string): Promise<number>;\n    countInactiveContacts(organizationId: string): Promise<number>;\n    countPrimaryContacts(organizationId: string): Promise<number>;\n    countDecisionMakers(organizationId: string): Promise<number>;\n    countInfluencers(organizationId: string): Promise<number>;\n    countTechnicalContacts(organizationId: string): Promise<number>;\n    countFinancialContacts(organizationId: string): Promise<number>;\n    countProcurementContacts(organizationId: string): Promise<number>;\n    countVerifiedContacts(organizationId: string): Promise<number>;\n    countUnverifiedContacts(organizationId: string): Promise<number>;\n    countOptedInContacts(organizationId: string): Promise<number>;\n    countOptedOutContacts(organizationId: string): Promise<number>;\n    countOverdueForFollowUp(organizationId: string): Promise<number>;\n    countHighScoreLeads(organizationId: string, minScore: number): Promise<number>;\n    countMediumScoreLeads(organizationId: string): Promise<number>;\n    countLowScoreLeads(organizationId: string): Promise<number>;\n    countHighlyEngagedContacts(organizationId: string, minScore: number): Promise<number>;\n    countModeratelyEngagedContacts(organizationId: string): Promise<number>;\n    countLowEngagedContacts(organizationId: string): Promise<number>;\n    saveMany",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\repositories\\contact.repository.d.ts",
        "start": 81,
        "end": 110,
        "startLoc": {
          "line": 81,
          "column": 5,
          "position": 1779
        },
        "endLoc": {
          "line": 110,
          "column": 9,
          "position": 2309
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\repositories\\contact.repository.ts",
        "start": 160,
        "end": 190,
        "startLoc": {
          "line": 160,
          "column": 3,
          "position": 1947
        },
        "endLoc": {
          "line": 190,
          "column": 76,
          "position": 2478
        }
      }
    },
    {
      "format": "typescript",
      "lines": 176,
      "fragment": "export interface ContactFilters {\n    type?: string;\n    status?: string;\n    source?: string;\n    priority?: string;\n    assignedUserId?: string;\n    companyId?: string;\n    department?: string;\n    industry?: string;\n    profession?: string;\n    isActive?: boolean;\n    isVerified?: boolean;\n    isOptedIn?: boolean;\n    hasCompany?: boolean;\n    isAssigned?: boolean;\n    leadScoreMin?: number;\n    leadScoreMax?: number;\n    engagementScoreMin?: number;\n    engagementScoreMax?: number;\n    revenueMin?: number;\n    revenueMax?: number;\n    currency?: string;\n    salaryMin?: number;\n    salaryMax?: number;\n    experienceMin?: number;\n    experienceMax?: number;\n    ageMin?: number;\n    ageMax?: number;\n    lastContactAfter?: Date;\n    lastContactBefore?: Date;\n    nextFollowUpAfter?: Date;\n    nextFollowUpBefore?: Date;\n    lastEmailOpenAfter?: Date;\n    lastEmailOpenBefore?: Date;\n    lastEmailClickAfter?: Date;\n    lastEmailClickBefore?: Date;\n    lastWebsiteVisitAfter?: Date;\n    lastWebsiteVisitBefore?: Date;\n    lastSocialMediaInteractionAfter?: Date;\n    lastSocialMediaInteractionBefore?: Date;\n    createdAfter?: Date;\n    createdBefore?: Date;\n    updatedAfter?: Date;\n    updatedBefore?: Date;\n    birthdayAfter?: Date;\n    birthdayBefore?: Date;\n    anniversaryAfter?: Date;\n    anniversaryBefore?: Date;\n    tags?: string[];\n    customFields?: Record<string, any>;\n}\nexport interface PaginatedResult<T> {\n    data: T[];\n    total: number;\n    page: number;\n    limit: number;\n    totalPages: number;\n    hasNext: boolean;\n    hasPrevious: boolean;\n}\nexport interface ContactSearchOptions {\n    organizationId: string;\n    query?: string;\n    type?: string;\n    status?: string;\n    source?: string;\n    priority?: string;\n    assignedUserId?: string;\n    companyId?: string;\n    department?: string;\n    industry?: string;\n    profession?: string;\n    isActive?: boolean;\n    isVerified?: boolean;\n    isOptedIn?: boolean;\n    hasCompany?: boolean;\n    isAssigned?: boolean;\n    leadScoreMin?: number;\n    leadScoreMax?: number;\n    engagementScoreMin?: number;\n    engagementScoreMax?: number;\n    revenueMin?: number;\n    revenueMax?: number;\n    currency?: string;\n    salaryMin?: number;\n    salaryMax?: number;\n    experienceMin?: number;\n    experienceMax?: number;\n    ageMin?: number;\n    ageMax?: number;\n    lastContactAfter?: Date;\n    lastContactBefore?: Date;\n    nextFollowUpAfter?: Date;\n    nextFollowUpBefore?: Date;\n    lastEmailOpenAfter?: Date;\n    lastEmailOpenBefore?: Date;\n    lastEmailClickAfter?: Date;\n    lastEmailClickBefore?: Date;\n    lastWebsiteVisitAfter?: Date;\n    lastWebsiteVisitBefore?: Date;\n    lastSocialMediaInteractionAfter?: Date;\n    lastSocialMediaInteractionBefore?: Date;\n    createdAfter?: Date;\n    createdBefore?: Date;\n    updatedAfter?: Date;\n    updatedBefore?: Date;\n    birthdayAfter?: Date;\n    birthdayBefore?: Date;\n    anniversaryAfter?: Date;\n    anniversaryBefore?: Date;\n    tags?: string[];\n    customFields?: Record<string, any>;\n    sortBy?: 'firstName' | 'lastName' | 'type' | 'status' | 'source' | 'priority' | 'leadScore' | 'engagementScore' | 'totalRevenue' | 'salary' | 'experience' | 'lastContactDate' | 'nextFollowUpDate' | 'createdAt' | 'updatedAt';\n    sortOrder?: 'asc' | 'desc';\n    page?: number;\n    limit?: number;\n}\nexport interface ContactStats {\n    total: number;\n    byType: Record<string, number>;\n    byStatus: Record<string, number>;\n    bySource: Record<string, number>;\n    byPriority: Record<string, number>;\n    byDepartment: Record<string, number>;\n    byIndustry: Record<string, number>;\n    byProfession: Record<string, number>;\n    active: number;\n    inactive: number;\n    primary: number;\n    decisionMakers: number;\n    influencers: number;\n    technical: number;\n    financial: number;\n    procurement: number;\n    verified: number;\n    unverified: number;\n    optedIn: number;\n    optedOut: number;\n    assigned: number;\n    unassigned: number;\n    withCompany: number;\n    withoutCompany: number;\n    overdueForFollowUp: number;\n    highScoreLeads: number;\n    mediumScoreLeads: number;\n    lowScoreLeads: number;\n    highlyEngaged: number;\n    moderatelyEngaged: number;\n    lowEngaged: number;\n    averageLeadScore: number;\n    averageEngagementScore: number;\n    totalRevenue: number;\n    averageRevenue: number;\n    totalSalary: number;\n    averageSalary: number;\n    totalExperience: number;\n    averageExperience: number;\n    totalInteractions: number;\n    averageInteractions: number;\n    totalEmailsSent: number;\n    totalEmailsOpened: number;\n    totalEmailsClicked: number;\n    totalCallsMade: number;\n    totalMeetingsScheduled: number;\n    totalMeetingsAttended: number;\n    totalDealsWon: number;\n    totalDealsLost: number;\n    averageEmailOpenRate: number;\n    averageEmailClickRate: number;\n    averageMeetingAttendanceRate: number;\n    averageDealWinRate: number;\n    contactsByYear: Record<number, number>;\n    contactsByMonth: Record<string, number>;\n    topDepartments: Array<{\n        department: string;\n        count: number;",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\repositories\\contact.repository.d.ts",
        "start": 115,
        "end": 290,
        "startLoc": {
          "line": 115,
          "column": 1,
          "position": 2399
        },
        "endLoc": {
          "line": 290,
          "column": 2,
          "position": 3857
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\repositories\\contact.repository.ts",
        "start": 209,
        "end": 385,
        "startLoc": {
          "line": 209,
          "column": 1,
          "position": 2597
        },
        "endLoc": {
          "line": 385,
          "column": 2,
          "position": 4057
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "countByOrganization(organizationId: string): Promise<number>;\n    countByType(type: string, organizationId: string): Promise<number>;\n    countByStatus(status: string, organizationId: string): Promise<number>;\n    countBySize(size: string, organizationId: string): Promise<number>;\n    countByIndustry(industry: string, organizationId: string): Promise<number>;\n    countBySource(source: string, organizationId: string): Promise<number>;\n    countByAssignedUser(userId: string, organizationId: string): Promise<number>;\n    countActiveCompanies(organizationId: string): Promise<number>;\n    countInactiveCompanies(organizationId: string): Promise<number>;\n    countCustomers(organizationId: string): Promise<number>;\n    countSuppliers(organizationId: string): Promise<number>;\n    countPartners(organizationId: string): Promise<number>;\n    countProspects(organizationId: string): Promise<number>;\n    countLeads(organizationId: string): Promise<number>;\n    countOverdueForFollowUp(organizationId: string): Promise<number>;\n    saveMany",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\repositories\\company.repository.d.ts",
        "start": 49,
        "end": 64,
        "startLoc": {
          "line": 49,
          "column": 5,
          "position": 1023
        },
        "endLoc": {
          "line": 64,
          "column": 9,
          "position": 1299
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\repositories\\company.repository.ts",
        "start": 108,
        "end": 124,
        "startLoc": {
          "line": 108,
          "column": 3,
          "position": 1147
        },
        "endLoc": {
          "line": 124,
          "column": 76,
          "position": 1424
        }
      }
    },
    {
      "format": "typescript",
      "lines": 109,
      "fragment": "export interface CompanyFilters {\n    type?: string;\n    status?: string;\n    size?: string;\n    industry?: string;\n    source?: string;\n    assignedUserId?: string;\n    parentCompanyId?: string;\n    isActive?: boolean;\n    hasParentCompany?: boolean;\n    isAssigned?: boolean;\n    leadScoreMin?: number;\n    leadScoreMax?: number;\n    revenueMin?: number;\n    revenueMax?: number;\n    currency?: string;\n    employeeCountMin?: number;\n    employeeCountMax?: number;\n    foundedYearMin?: number;\n    foundedYearMax?: number;\n    lastContactAfter?: Date;\n    lastContactBefore?: Date;\n    nextFollowUpAfter?: Date;\n    nextFollowUpBefore?: Date;\n    createdAfter?: Date;\n    createdBefore?: Date;\n    updatedAfter?: Date;\n    updatedBefore?: Date;\n    tags?: string[];\n    customFields?: Record<string, any>;\n}\nexport interface PaginatedResult<T> {\n    data: T[];\n    total: number;\n    page: number;\n    limit: number;\n    totalPages: number;\n    hasNext: boolean;\n    hasPrevious: boolean;\n}\nexport interface CompanySearchOptions {\n    organizationId: string;\n    query?: string;\n    type?: string;\n    status?: string;\n    size?: string;\n    industry?: string;\n    source?: string;\n    assignedUserId?: string;\n    parentCompanyId?: string;\n    isActive?: boolean;\n    hasParentCompany?: boolean;\n    isAssigned?: boolean;\n    leadScoreMin?: number;\n    leadScoreMax?: number;\n    revenueMin?: number;\n    revenueMax?: number;\n    currency?: string;\n    employeeCountMin?: number;\n    employeeCountMax?: number;\n    foundedYearMin?: number;\n    foundedYearMax?: number;\n    lastContactAfter?: Date;\n    lastContactBefore?: Date;\n    nextFollowUpAfter?: Date;\n    nextFollowUpBefore?: Date;\n    createdAfter?: Date;\n    createdBefore?: Date;\n    updatedAfter?: Date;\n    updatedBefore?: Date;\n    tags?: string[];\n    customFields?: Record<string, any>;\n    sortBy?: 'name' | 'type' | 'status' | 'size' | 'industry' | 'source' | 'leadScore' | 'annualRevenue' | 'employeeCount' | 'foundedYear' | 'lastContactDate' | 'nextFollowUpDate' | 'createdAt' | 'updatedAt';\n    sortOrder?: 'asc' | 'desc';\n    page?: number;\n    limit?: number;\n}\nexport interface CompanyStats {\n    total: number;\n    byType: Record<string, number>;\n    byStatus: Record<string, number>;\n    bySize: Record<string, number>;\n    byIndustry: Record<string, number>;\n    bySource: Record<string, number>;\n    active: number;\n    inactive: number;\n    customers: number;\n    suppliers: number;\n    partners: number;\n    prospects: number;\n    leads: number;\n    competitors: number;\n    assigned: number;\n    unassigned: number;\n    withParentCompany: number;\n    overdueForFollowUp: number;\n    highScoreLeads: number;\n    mediumScoreLeads: number;\n    lowScoreLeads: number;\n    averageLeadScore: number;\n    totalAnnualRevenue: number;\n    averageAnnualRevenue: number;\n    totalEmployees: number;\n    averageEmployees: number;\n    companiesByYear: Record<number, number>;\n    companiesByMonth: Record<string, number>;\n    topIndustries: Array<{\n        industry: string;\n        count: number;",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\repositories\\company.repository.d.ts",
        "start": 69,
        "end": 177,
        "startLoc": {
          "line": 69,
          "column": 1,
          "position": 1389
        },
        "endLoc": {
          "line": 177,
          "column": 2,
          "position": 2322
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\repositories\\company.repository.ts",
        "start": 143,
        "end": 252,
        "startLoc": {
          "line": 143,
          "column": 1,
          "position": 1543
        },
        "endLoc": {
          "line": 252,
          "column": 2,
          "position": 2478
        }
      }
    },
    {
      "format": "typescript",
      "lines": 44,
      "fragment": "export interface BaseEntity {\n    id: string;\n    organizationId: string;\n    isActive: boolean;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface BaseFilters {\n    organizationId?: string;\n    isActive?: boolean;\n    createdAfter?: Date;\n    createdBefore?: Date;\n    updatedAfter?: Date;\n    updatedBefore?: Date;\n}\nexport interface BaseSearchOptions {\n    page?: number;\n    limit?: number;\n    sortBy?: string;\n    sortOrder?: 'asc' | 'desc';\n    search?: string;\n}\nexport interface PaginatedResult<T> {\n    data: T[];\n    pagination: {\n        page: number;\n        limit: number;\n        total: number;\n        totalPages: number;\n        hasNext: boolean;\n        hasPrev: boolean;\n    };\n}\nexport interface BaseStats {\n    total: number;\n    active: number;\n    inactive: number;\n    createdThisMonth: number;\n    createdThisYear: number;\n    updatedThisMonth: number;\n    updatedThisYear: number;\n}\nexport interface BaseRepository<T extends BaseEntity> {\n    save",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\repositories\\base.repository.d.ts",
        "start": 1,
        "end": 44,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 44,
          "column": 5,
          "position": 306
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\repositories\\base.repository.ts",
        "start": 5,
        "end": 53,
        "startLoc": {
          "line": 5,
          "column": 1,
          "position": 7
        },
        "endLoc": {
          "line": 53,
          "column": 76,
          "position": 318
        }
      }
    },
    {
      "format": "typescript",
      "lines": 46,
      "fragment": "export interface ArchitectureFilters extends BaseFilters {\n    type?: string;\n    status?: string;\n    layerType?: string;\n    componentType?: string;\n    isActive?: boolean;\n    hasMetrics?: boolean;\n    minQualityScore?: number;\n    maxQualityScore?: number;\n    lastAnalysisFrom?: Date;\n    lastAnalysisTo?: Date;\n}\nexport interface ArchitectureSearchOptions extends BaseSearchOptions {\n    type?: string;\n    status?: string;\n    layerType?: string;\n    componentType?: string;\n    isActive?: boolean;\n    hasMetrics?: boolean;\n    minQualityScore?: number;\n    maxQualityScore?: number;\n    lastAnalysisFrom?: Date;\n    lastAnalysisTo?: Date;\n}\nexport interface ArchitectureStats extends BaseStats {\n    byType: Record<string, number>;\n    byStatus: Record<string, number>;\n    byLayerType: Record<string, number>;\n    byComponentType: Record<string, number>;\n    totalComponents: number;\n    totalLayers: number;\n    averageQualityScore: number;\n    averageComplexity: number;\n    averageCoupling: number;\n    averageCohesion: number;\n    averageMaintainability: number;\n    averageTestability: number;\n    averageScalability: number;\n    averagePerformance: number;\n    averageSecurity: number;\n    lastAnalysisDate?: Date;\n    totalAnalysisTime: number;\n    architecturesWithMetrics: number;\n}\nexport interface ArchitectureRepository extends BaseRepository<Architecture> {\n    findByType",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\repositories\\architecture.repository.d.ts",
        "start": 3,
        "end": 48,
        "startLoc": {
          "line": 3,
          "column": 1,
          "position": 38
        },
        "endLoc": {
          "line": 48,
          "column": 11,
          "position": 407
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\repositories\\architecture.repository.ts",
        "start": 8,
        "end": 56,
        "startLoc": {
          "line": 8,
          "column": 1,
          "position": 49
        },
        "endLoc": {
          "line": 56,
          "column": 76,
          "position": 421
        }
      }
    },
    {
      "format": "typescript",
      "lines": 68,
      "fragment": "getArchitectureAnalytics(organizationId: string, startDate: Date, endDate: Date): Promise<{\n        totalArchitectures: number;\n        averageQualityScore: number;\n        byType: Record<string, number>;\n        byStatus: Array<{\n            status: string;\n            count: number;\n            averageQualityScore: number;\n            averageComplexity: number;\n        }>;\n        trends: Array<{\n            date: Date;\n            architectures: number;\n            averageQualityScore: number;\n        }>;\n        qualityDistribution: Array<{\n            range: string;\n            count: number;\n            percentage: number;\n        }>;\n        analysisDate: Date;\n    }>;\n    getComponentAnalytics(organizationId: string): Promise<{\n        totalComponents: number;\n        averageComponentsPerArchitecture: number;\n        byType: Array<{\n            type: string;\n            count: number;\n            averageComplexity: number;\n            averageDependencies: number;\n        }>;\n        byLayer: Array<{\n            layer: string;\n            count: number;\n            averageComplexity: number;\n            averageDependencies: number;\n        }>;\n        complexityDistribution: Array<{\n            range: string;\n            count: number;\n            percentage: number;\n        }>;\n        analysisDate: Date;\n    }>;\n    getQualityAnalytics(organizationId: string, startDate: Date, endDate: Date): Promise<{\n        totalAnalyses: number;\n        averageQualityScore: number;\n        byType: Array<{\n            type: string;\n            count: number;\n            averageQualityScore: number;\n            bestQualityScore: number;\n            worstQualityScore: number;\n        }>;\n        byStatus: Array<{\n            status: string;\n            count: number;\n            averageQualityScore: number;\n            averageComplexity: number;\n        }>;\n        qualityTrends: Array<{\n            date: Date;\n            averageQualityScore: number;\n            analysesPerformed: number;\n        }>;\n        analysisDate: Date;\n    }>;\n    existsByName",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\repositories\\architecture.repository.d.ts",
        "start": 69,
        "end": 136,
        "startLoc": {
          "line": 69,
          "column": 5,
          "position": 970
        },
        "endLoc": {
          "line": 136,
          "column": 13,
          "position": 1475
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\repositories\\architecture.repository.ts",
        "start": 106,
        "end": 176,
        "startLoc": {
          "line": 106,
          "column": 3,
          "position": 1049
        },
        "endLoc": {
          "line": 176,
          "column": 76,
          "position": 1557
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "existsByName(name: string, organizationId: string): Promise<boolean>;\n    getArchitectureCount(organizationId: string, filters?: ArchitectureFilters): Promise<number>;\n    getTotalComponents(organizationId: string, filters?: ArchitectureFilters): Promise<number>;\n    getTotalLayers(organizationId: string, filters?: ArchitectureFilters): Promise<number>;\n    getAverageQualityScore(organizationId: string, filters?: ArchitectureFilters): Promise<number>;\n    getAverageComplexity(organizationId: string, filters?: ArchitectureFilters): Promise<number>;\n    getAverageCoupling(organizationId: string, filters?: ArchitectureFilters): Promise<number>;\n    getAverageCohesion(organizationId: string, filters?: ArchitectureFilters): Promise<number>;\n    getAverageMaintainability(organizationId: string, filters?: ArchitectureFilters): Promise<number>;\n    getAverageTestability(organizationId: string, filters?: ArchitectureFilters): Promise<number>;\n    getAverageScalability(organizationId: string, filters?: ArchitectureFilters): Promise<number>;\n    getAveragePerformance(organizationId: string, filters?: ArchitectureFilters): Promise<number>;\n    getAverageSecurity(organizationId: string, filters?: ArchitectureFilters): Promise<number>;\n    getArchitecturesWithMetricsCount(organizationId: string, filters?: ArchitectureFilters): Promise<number>;\n    generateArchitectureReport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\repositories\\architecture.repository.d.ts",
        "start": 136,
        "end": 150,
        "startLoc": {
          "line": 136,
          "column": 5,
          "position": 1475
        },
        "endLoc": {
          "line": 150,
          "column": 27,
          "position": 1796
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\repositories\\architecture.repository.ts",
        "start": 180,
        "end": 195,
        "startLoc": {
          "line": 180,
          "column": 3,
          "position": 1567
        },
        "endLoc": {
          "line": 195,
          "column": 76,
          "position": 1889
        }
      }
    },
    {
      "format": "typescript",
      "lines": 70,
      "fragment": "generateArchitectureReport(organizationId: string, filters?: ArchitectureFilters): Promise<{\n        summary: ArchitectureStats;\n        architectures: Architecture[];\n        generatedAt: Date;\n    }>;\n    generateComponentReport(organizationId: string): Promise<{\n        summary: {\n            totalComponents: number;\n            averagePerArchitecture: number;\n            byType: Record<string, number>;\n        };\n        components: Array<{\n            id: string;\n            name: string;\n            type: string;\n            layer: string;\n            complexity: number;\n            dependencies: number;\n            interfaces: number;\n            architectureId: string;\n            architectureName: string;\n        }>;\n        generatedAt: Date;\n    }>;\n    generateQualityReport(organizationId: string): Promise<{\n        summary: {\n            totalArchitectures: number;\n            averageQualityScore: number;\n            highQuality: number;\n            needsImprovement: number;\n        };\n        architectures: Array<{\n            id: string;\n            name: string;\n            type: string;\n            status: string;\n            qualityScore: number;\n            complexity: number;\n            coupling: number;\n            cohesion: number;\n            maintainability: number;\n            testability: number;\n            scalability: number;\n            performance: number;\n            security: number;\n            lastAnalysisDate: Date;\n        }>;\n        generatedAt: Date;\n    }>;\n    generateAnalysisReport(organizationId: string, startDate: Date, endDate: Date): Promise<{\n        summary: {\n            totalAnalyses: number;\n            averageQualityScore: number;\n            averageAnalysisTime: number;\n        };\n        analyses: Array<{\n            id: string;\n            name: string;\n            type: string;\n            status: string;\n            analysisDate: Date;\n            duration: number;\n            qualityScore: number;\n            complexity: number;\n            coupling: number;\n            cohesion: number;\n        }>;\n        generatedAt: Date;\n    }>;\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\repositories\\architecture.repository.d.ts",
        "start": 150,
        "end": 219,
        "startLoc": {
          "line": 150,
          "column": 5,
          "position": 1796
        },
        "endLoc": {
          "line": 219,
          "column": 2,
          "position": 2310
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\repositories\\architecture.repository.ts",
        "start": 199,
        "end": 271,
        "startLoc": {
          "line": 199,
          "column": 3,
          "position": 1899
        },
        "endLoc": {
          "line": 271,
          "column": 2,
          "position": 2416
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": ",\n            role: this.props.role.value,\n            status: this.props.status.value,\n            isEmailVerified: this.props.isEmailVerified,\n            mfaEnabled: this.props.mfaEnabled,\n            lastLoginAt: this.props.lastLoginAt,\n            createdAt: this.props.createdAt,\n            updatedAt: this.props.updatedAt\n        };\n    }\n    equals",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\user.entity.js",
        "start": 191,
        "end": 201,
        "startLoc": {
          "line": 191,
          "column": 9,
          "position": 1713
        },
        "endLoc": {
          "line": 201,
          "column": 7,
          "position": 1803
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\domain\\entities\\user.entity.js",
        "start": 174,
        "end": 184,
        "startLoc": {
          "line": 174,
          "column": 9,
          "position": 1544
        },
        "endLoc": {
          "line": 184,
          "column": 6,
          "position": 1634
        }
      }
    },
    {
      "format": "typescript",
      "lines": 34,
      "fragment": "export interface UserId {\n    value: string;\n}\nexport interface OrganizationId {\n    value: string;\n}\nexport interface Email {\n    value: string;\n}\nexport interface PasswordHash {\n    value: string;\n}\nexport interface UserRole {\n    value: 'admin' | 'manager' | 'editor' | 'viewer';\n}\nexport interface UserStatus {\n    value: 'active' | 'inactive' | 'suspended' | 'pending';\n}\nexport interface UserProps {\n    id: UserId;\n    organizationId: OrganizationId;\n    email: Email;\n    passwordHash: PasswordHash;\n    firstName: string;\n    lastName: string;\n    role: UserRole;\n    status: UserStatus;\n    isEmailVerified: boolean;\n    mfaEnabled: boolean;\n    lastLoginAt?: Date;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\user.entity.d.ts",
        "start": 1,
        "end": 34,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 34,
          "column": 8,
          "position": 230
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\entities\\user.entity.ts",
        "start": 7,
        "end": 47,
        "startLoc": {
          "line": 7,
          "column": 1,
          "position": 21
        },
        "endLoc": {
          "line": 47,
          "column": 6,
          "position": 258
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ">;\n    userId: z.ZodOptional<z.ZodString>;\n    organizationId: z.ZodOptional<z.ZodString>;\n    tags: z.ZodOptional<z.ZodArray<z.ZodString, \"many\">>;\n    minScore: z.ZodOptional<z.ZodNumber>;\n    minRelevance: z.ZodOptional<z.ZodNumber>;\n    minConfidence: z.ZodOptional<z.ZodNumber>;\n    customFilters: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;\n}, \"strip\", z.ZodTypeAny, {\n    userId?: string;\n    organizationId?: string;\n    tags?: string[];\n    categories?: string[];\n    types?: SearchResultType[];\n    subcategories?: string[];\n    dateFrom?: Date",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\search-result.entity.d.ts",
        "start": 87,
        "end": 102,
        "startLoc": {
          "line": 87,
          "column": 8,
          "position": 752
        },
        "endLoc": {
          "line": 102,
          "column": 5,
          "position": 943
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\search.dto.d.ts",
        "start": 11,
        "end": 26,
        "startLoc": {
          "line": 11,
          "column": 10,
          "position": 173
        },
        "endLoc": {
          "line": 26,
          "column": 7,
          "position": 365
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ";\n    minScore?: number;\n    minRelevance?: number;\n    minConfidence?: number;\n    customFilters?: Record<string, any>;\n}, {\n    userId?: string;\n    organizationId?: string;\n    tags?: string[];\n    categories?: string[];\n    types?: SearchResultType[];\n    subcategories?: string[];\n    dateFrom?: Date",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\search-result.entity.d.ts",
        "start": 103,
        "end": 115,
        "startLoc": {
          "line": 103,
          "column": 5,
          "position": 952
        },
        "endLoc": {
          "line": 115,
          "column": 5,
          "position": 1058
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\search.dto.d.ts",
        "start": 27,
        "end": 39,
        "startLoc": {
          "line": 27,
          "column": 7,
          "position": 374
        },
        "endLoc": {
          "line": 39,
          "column": 7,
          "position": 481
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", {\n    userId?: string;\n    organizationId?: string;\n    tags?: string[];\n    categories?: string[];\n    types?: SearchResultType[];\n    subcategories?: string[];\n    dateFrom?: Date;\n    dateTo?: Date;\n    minScore?: number;\n    minRelevance?: number;\n    minConfidence?: number;\n    customFilters?: Record<string, any>;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\search-result.entity.d.ts",
        "start": 108,
        "end": 121,
        "startLoc": {
          "line": 108,
          "column": 2,
          "position": 993
        },
        "endLoc": {
          "line": 121,
          "column": 2,
          "position": 1108
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\domain\\entities\\search-result.entity.d.ts",
        "start": 95,
        "end": 108,
        "startLoc": {
          "line": 95,
          "column": 11,
          "position": 878
        },
        "endLoc": {
          "line": 108,
          "column": 2,
          "position": 993
        }
      }
    },
    {
      "format": "typescript",
      "lines": 42,
      "fragment": ": z.ZodObject<{\n    query: z.ZodString;\n    filters: z.ZodOptional<z.ZodObject<{\n        types: z.ZodOptional<z.ZodArray<z.ZodNativeEnum<typeof SearchResultType>, \"many\">>;\n        categories: z.ZodOptional<z.ZodArray<z.ZodString, \"many\">>;\n        subcategories: z.ZodOptional<z.ZodArray<z.ZodString, \"many\">>;\n        dateFrom: z.ZodOptional<z.ZodDate>;\n        dateTo: z.ZodOptional<z.ZodDate>;\n        userId: z.ZodOptional<z.ZodString>;\n        organizationId: z.ZodOptional<z.ZodString>;\n        tags: z.ZodOptional<z.ZodArray<z.ZodString, \"many\">>;\n        minScore: z.ZodOptional<z.ZodNumber>;\n        minRelevance: z.ZodOptional<z.ZodNumber>;\n        minConfidence: z.ZodOptional<z.ZodNumber>;\n        customFilters: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;\n    }, \"strip\", z.ZodTypeAny, {\n        userId?: string;\n        organizationId?: string;\n        tags?: string[];\n        categories?: string[];\n        types?: SearchResultType[];\n        subcategories?: string[];\n        dateFrom?: Date;\n        dateTo?: Date;\n        minScore?: number;\n        minRelevance?: number;\n        minConfidence?: number;\n        customFilters?: Record<string, any>;\n    }, {\n        userId?: string;\n        organizationId?: string;\n        tags?: string[];\n        categories?: string[];\n        types?: SearchResultType[];\n        subcategories?: string[];\n        dateFrom?: Date;\n        dateTo?: Date;\n        minScore?: number;\n        minRelevance?: number;\n        minConfidence?: number;\n        customFilters?: Record<string, any>;\n    }>>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\search-result.entity.d.ts",
        "start": 122,
        "end": 163,
        "startLoc": {
          "line": 122,
          "column": 18,
          "position": 1118
        },
        "endLoc": {
          "line": 163,
          "column": 3,
          "position": 1601
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\search.dto.d.ts",
        "start": 4,
        "end": 108,
        "startLoc": {
          "line": 4,
          "column": 31,
          "position": 49
        },
        "endLoc": {
          "line": 108,
          "column": 2,
          "position": 993
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ">>;\n    includeMetadata: z.ZodOptional<z.ZodBoolean>;\n    highlightMatches: z.ZodOptional<z.ZodBoolean>;\n}, \"strip\", z.ZodTypeAny, {\n    query?: string;\n    page?: number;\n    limit?: number;\n    filters?: {\n        userId?: string;\n        organizationId?: string;\n        tags?: string[];\n        categories?: string[];\n        types?: SearchResultType[];\n        subcategories?: string[];\n        dateFrom?: Date",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\search-result.entity.d.ts",
        "start": 168,
        "end": 182,
        "startLoc": {
          "line": 168,
          "column": 11,
          "position": 1682
        },
        "endLoc": {
          "line": 182,
          "column": 5,
          "position": 1818
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\search.dto.d.ts",
        "start": 50,
        "end": 64,
        "startLoc": {
          "line": 50,
          "column": 2,
          "position": 613
        },
        "endLoc": {
          "line": 64,
          "column": 7,
          "position": 749
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "{\n        userId?: string;\n        organizationId?: string;\n        tags?: string[];\n        categories?: string[];\n        types?: SearchResultType[];\n        subcategories?: string[];\n        dateFrom?: Date;\n        dateTo?: Date;\n        minScore?: number;\n        minRelevance?: number;\n        minConfidence?: number;\n        customFilters?: Record<string, any>;\n    };",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\search-result.entity.d.ts",
        "start": 175,
        "end": 188,
        "startLoc": {
          "line": 175,
          "column": 2,
          "position": 1755
        },
        "endLoc": {
          "line": 188,
          "column": 2,
          "position": 1869
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\domain\\entities\\search-result.entity.d.ts",
        "start": 95,
        "end": 108,
        "startLoc": {
          "line": 95,
          "column": 2,
          "position": 880
        },
        "endLoc": {
          "line": 108,
          "column": 2,
          "position": 993
        }
      }
    },
    {
      "format": "typescript",
      "lines": 36,
      "fragment": ";\n        minScore?: number;\n        minRelevance?: number;\n        minConfidence?: number;\n        customFilters?: Record<string, any>;\n    };\n    sortBy?: string;\n    sortOrder?: \"asc\" | \"desc\";\n    searchType?: SearchType;\n    includeMetadata?: boolean;\n    highlightMatches?: boolean;\n}, {\n    query?: string;\n    page?: number;\n    limit?: number;\n    filters?: {\n        userId?: string;\n        organizationId?: string;\n        tags?: string[];\n        categories?: string[];\n        types?: SearchResultType[];\n        subcategories?: string[];\n        dateFrom?: Date;\n        dateTo?: Date;\n        minScore?: number;\n        minRelevance?: number;\n        minConfidence?: number;\n        customFilters?: Record<string, any>;\n    };\n    sortBy?: string;\n    sortOrder?: \"asc\" | \"desc\";\n    searchType?: SearchType;\n    includeMetadata?: boolean;\n    highlightMatches?: boolean;\n}>;\nexport declare const SearchSuggestionSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\search-result.entity.d.ts",
        "start": 183,
        "end": 218,
        "startLoc": {
          "line": 183,
          "column": 5,
          "position": 1827
        },
        "endLoc": {
          "line": 218,
          "column": 23,
          "position": 2119
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\search.dto.d.ts",
        "start": 65,
        "end": 100,
        "startLoc": {
          "line": 65,
          "column": 7,
          "position": 758
        },
        "endLoc": {
          "line": 100,
          "column": 28,
          "position": 1050
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ": z.ZodObject<{\n    text: z.ZodString;\n    type: z.ZodNativeEnum<typeof SearchResultType>;\n    category: z.ZodString;\n    score: z.ZodNumber;\n    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;\n}, \"strip\", z.ZodTypeAny, {\n    type?: SearchResultType;\n    metadata?: Record<string, any>;\n    text?: string;\n    score?: number;\n    category?: string;\n}, {\n    type?: SearchResultType;\n    metadata?: Record<string, any>;\n    text?: string;\n    score?: number;\n    category?: string;\n}>;\nexport declare const SearchAnalyticsSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\search-result.entity.d.ts",
        "start": 218,
        "end": 237,
        "startLoc": {
          "line": 218,
          "column": 23,
          "position": 2120
        },
        "endLoc": {
          "line": 237,
          "column": 22,
          "position": 2312
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\search.dto.d.ts",
        "start": 208,
        "end": 227,
        "startLoc": {
          "line": 208,
          "column": 31,
          "position": 2104
        },
        "endLoc": {
          "line": 227,
          "column": 32,
          "position": 2296
        }
      }
    },
    {
      "format": "typescript",
      "lines": 41,
      "fragment": ": z.ZodObject<{\n        types: z.ZodOptional<z.ZodArray<z.ZodNativeEnum<typeof SearchResultType>, \"many\">>;\n        categories: z.ZodOptional<z.ZodArray<z.ZodString, \"many\">>;\n        subcategories: z.ZodOptional<z.ZodArray<z.ZodString, \"many\">>;\n        dateFrom: z.ZodOptional<z.ZodDate>;\n        dateTo: z.ZodOptional<z.ZodDate>;\n        userId: z.ZodOptional<z.ZodString>;\n        organizationId: z.ZodOptional<z.ZodString>;\n        tags: z.ZodOptional<z.ZodArray<z.ZodString, \"many\">>;\n        minScore: z.ZodOptional<z.ZodNumber>;\n        minRelevance: z.ZodOptional<z.ZodNumber>;\n        minConfidence: z.ZodOptional<z.ZodNumber>;\n        customFilters: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;\n    }, \"strip\", z.ZodTypeAny, {\n        userId?: string;\n        organizationId?: string;\n        tags?: string[];\n        categories?: string[];\n        types?: SearchResultType[];\n        subcategories?: string[];\n        dateFrom?: Date;\n        dateTo?: Date;\n        minScore?: number;\n        minRelevance?: number;\n        minConfidence?: number;\n        customFilters?: Record<string, any>;\n    }, {\n        userId?: string;\n        organizationId?: string;\n        tags?: string[];\n        categories?: string[];\n        types?: SearchResultType[];\n        subcategories?: string[];\n        dateFrom?: Date;\n        dateTo?: Date;\n        minScore?: number;\n        minRelevance?: number;\n        minConfidence?: number;\n        customFilters?: Record<string, any>;\n    }>;\n    userAgent",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\search-result.entity.d.ts",
        "start": 241,
        "end": 281,
        "startLoc": {
          "line": 241,
          "column": 8,
          "position": 2350
        },
        "endLoc": {
          "line": 281,
          "column": 10,
          "position": 2814
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\domain\\entities\\search-result.entity.d.ts",
        "start": 82,
        "end": 122,
        "startLoc": {
          "line": 82,
          "column": 20,
          "position": 651
        },
        "endLoc": {
          "line": 122,
          "column": 7,
          "position": 1111
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ";\n    filters?: {\n        userId?: string;\n        organizationId?: string;\n        tags?: string[];\n        categories?: string[];\n        types?: SearchResultType[];\n        subcategories?: string[];\n        dateFrom?: Date;\n        dateTo?: Date;\n        minScore?: number;\n        minRelevance?: number;\n        minConfidence?: number;\n        customFilters?: Record<string, any>;\n    };\n    userAgent",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\search-result.entity.d.ts",
        "start": 287,
        "end": 302,
        "startLoc": {
          "line": 287,
          "column": 5,
          "position": 2885
        },
        "endLoc": {
          "line": 302,
          "column": 10,
          "position": 3009
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\domain\\entities\\search-result.entity.d.ts",
        "start": 174,
        "end": 189,
        "startLoc": {
          "line": 174,
          "column": 7,
          "position": 1748
        },
        "endLoc": {
          "line": 189,
          "column": 7,
          "position": 1872
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": ", {\n    query?: string;\n    userId?: string;\n    timestamp?: Date;\n    filters?: {\n        userId?: string;\n        organizationId?: string;\n        tags?: string[];\n        categories?: string[];\n        types?: SearchResultType[];\n        subcategories?: string[];\n        dateFrom?: Date;\n        dateTo?: Date;\n        minScore?: number;\n        minRelevance?: number;\n        minConfidence?: number;\n        customFilters?: Record<string, any>;\n    };\n    userAgent?: string;\n    resultsCount?: number;\n    executionTime?: number;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\search-result.entity.d.ts",
        "start": 305,
        "end": 326,
        "startLoc": {
          "line": 305,
          "column": 2,
          "position": 3033
        },
        "endLoc": {
          "line": 326,
          "column": 2,
          "position": 3207
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\domain\\entities\\search-result.entity.d.ts",
        "start": 284,
        "end": 305,
        "startLoc": {
          "line": 284,
          "column": 11,
          "position": 2859
        },
        "endLoc": {
          "line": 305,
          "column": 2,
          "position": 3033
        }
      }
    },
    {
      "format": "typescript",
      "lines": 91,
      "fragment": "export interface ProductId {\n    value: string;\n}\nexport interface OrganizationId {\n    value: string;\n}\nexport interface ProductType {\n    value: 'physical' | 'digital' | 'service' | 'subscription' | 'bundle';\n}\nexport interface ProductStatus {\n    value: 'active' | 'inactive' | 'discontinued' | 'draft' | 'archived';\n}\nexport interface ProductCategory {\n    value: string;\n}\nexport interface ProductBrand {\n    value: string;\n}\nexport interface ProductSupplier {\n    value: string;\n}\nexport interface ProductSettings {\n    inventory: {\n        trackInventory: boolean;\n        lowStockThreshold: number;\n        allowBackorder: boolean;\n        allowPreorder: boolean;\n    };\n    pricing: {\n        costPrice?: Money;\n        sellingPrice: Money;\n        compareAtPrice?: Money;\n        margin?: number;\n    };\n    shipping: {\n        weight?: number;\n        dimensions?: {\n            length: number;\n            width: number;\n            height: number;\n        };\n        requiresShipping: boolean;\n        freeShipping: boolean;\n    };\n    seo: {\n        metaTitle?: string;\n        metaDescription?: string;\n        slug: string;\n    };\n    customFields: Record<string, any>;\n    tags: string[];\n    notes: string;\n}\nexport interface ProductProps {\n    id: ProductId;\n    organizationId: OrganizationId;\n    name: string;\n    description?: string;\n    shortDescription?: string;\n    sku: string;\n    barcode?: string;\n    type: ProductType;\n    status: ProductStatus;\n    category: ProductCategory;\n    brand?: ProductBrand;\n    supplier?: ProductSupplier;\n    settings: ProductSettings;\n    images?: string[];\n    documents?: string[];\n    specifications?: Record<string, any>;\n    variants?: ProductVariant[];\n    isActive: boolean;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface ProductVariant {\n    id: string;\n    name: string;\n    sku: string;\n    price: Money;\n    compareAtPrice?: Money;\n    costPrice?: Money;\n    inventory: {\n        quantity: number;\n        reserved: number;\n        available: number;\n    };\n    attributes: Record<string, any>;\n    isActive: boolean;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\product.entity.d.ts",
        "start": 2,
        "end": 92,
        "startLoc": {
          "line": 2,
          "column": 1,
          "position": 13
        },
        "endLoc": {
          "line": 92,
          "column": 8,
          "position": 657
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\entities\\product.entity.ts",
        "start": 8,
        "end": 108,
        "startLoc": {
          "line": 8,
          "column": 1,
          "position": 34
        },
        "endLoc": {
          "line": 108,
          "column": 6,
          "position": 688
        }
      }
    },
    {
      "format": "typescript",
      "lines": 28,
      "fragment": "export interface PredictiveAnalyticsId {\n    value: string;\n}\nexport interface AnalyticsType {\n    value: 'sales_forecast' | 'demand_prediction' | 'churn_prediction' | 'revenue_forecast' | 'inventory_optimization' | 'customer_lifetime_value' | 'market_trend' | 'risk_assessment';\n}\nexport interface AnalyticsStatus {\n    value: 'pending' | 'processing' | 'completed' | 'failed' | 'cancelled';\n}\nexport interface AnalyticsModel {\n    value: 'linear_regression' | 'decision_tree' | 'random_forest' | 'neural_network' | 'time_series' | 'clustering' | 'classification' | 'deep_learning';\n}\nexport interface AnalyticsAccuracy {\n    value: 'low' | 'medium' | 'high' | 'very_high';\n}\nexport interface PredictionData {\n    id: string;\n    timestamp: Date;\n    inputData: Record<string, any>;\n    predictedValue: number | string | boolean;\n    confidence: number;\n    probability?: number;\n    metadata: Record<string, any>;\n}\nexport interface AnalyticsSettings {\n    modelType: AnalyticsModel;\n    trainingPeriod: number;\n    predictionHorizon",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\predictive-analytics.entity.d.ts",
        "start": 2,
        "end": 29,
        "startLoc": {
          "line": 2,
          "column": 1,
          "position": 16
        },
        "endLoc": {
          "line": 29,
          "column": 18,
          "position": 288
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\entities\\predictive-analytics.entity.ts",
        "start": 9,
        "end": 41,
        "startLoc": {
          "line": 9,
          "column": 1,
          "position": 50
        },
        "endLoc": {
          "line": 41,
          "column": 8,
          "position": 327
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": ";\n    trainingPeriod: number;\n    predictionHorizon: number;\n    confidenceThreshold: number;\n    autoRetrain: boolean;\n    retrainFrequency: number;\n    dataSource: string[];\n    features: string[];\n    targetVariable: string;\n    validationMethod: 'cross_validation' | 'holdout' | 'time_series_split';\n    hyperparameters: Record<string, any>;\n    customFields: Record<string, any>;\n    tags: string[];\n    notes: string;\n}\nexport interface AnalyticsMetrics {\n    accuracy: number;\n    precision: number;\n    recall: number;\n    f1Score: number;\n    mae: number;\n    mse",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\predictive-analytics.entity.d.ts",
        "start": 27,
        "end": 48,
        "startLoc": {
          "line": 27,
          "column": 15,
          "position": 278
        },
        "endLoc": {
          "line": 48,
          "column": 4,
          "position": 443
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\predictive-analytics\\create-predictive-analytics.use-case.ts",
        "start": 15,
        "end": 61,
        "startLoc": {
          "line": 15,
          "column": 16,
          "position": 162
        },
        "endLoc": {
          "line": 61,
          "column": 23,
          "position": 491
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "{\n    accuracy: number;\n    precision: number;\n    recall: number;\n    f1Score: number;\n    mae: number;\n    mse: number;\n    rmse: number;\n    r2Score: number;\n    lastTrainingDate: Date;\n    trainingDuration: number;\n    dataPoints: number;\n    modelVersion: string;\n}\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\predictive-analytics.entity.d.ts",
        "start": 42,
        "end": 56,
        "startLoc": {
          "line": 42,
          "column": 2,
          "position": 405
        },
        "endLoc": {
          "line": 56,
          "column": 7,
          "position": 493
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\predictive-analytics\\train-model.use-case.ts",
        "start": 18,
        "end": 31,
        "startLoc": {
          "line": 18,
          "column": 2,
          "position": 128
        },
        "endLoc": {
          "line": 31,
          "column": 2,
          "position": 216
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "dataPoints: number;\n    modelVersion: string;\n}\nexport interface PredictiveAnalyticsProps extends BaseEntityProps {\n    name: string;\n    type: AnalyticsType;\n    status: AnalyticsStatus;\n    organizationId: string;\n    modelId?: string;\n    description?: string;\n    settings: AnalyticsSettings;\n    metrics?: AnalyticsMetrics;\n    predictions: PredictionData[];\n    lastPredictionDate?: Date;\n    nextRetrainDate?: Date;\n    isActive: boolean;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\predictive-analytics.entity.d.ts",
        "start": 53,
        "end": 70,
        "startLoc": {
          "line": 53,
          "column": 5,
          "position": 478
        },
        "endLoc": {
          "line": 70,
          "column": 8,
          "position": 600
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\entities\\predictive-analytics.entity.ts",
        "start": 67,
        "end": 86,
        "startLoc": {
          "line": 67,
          "column": 3,
          "position": 535
        },
        "endLoc": {
          "line": 86,
          "column": 6,
          "position": 659
        }
      }
    },
    {
      "format": "javascript",
      "lines": 19,
      "fragment": "() {\n        return {\n            id: this.props.id.value,\n            name: this.props.name,\n            slug: this.props.slug.value,\n            description: this.props.description,\n            website: this.props.website,\n            logo: this.props.logo,\n            settings: this.props.settings,\n            subscriptionTier: this.props.subscriptionTier.value,\n            status: this.props.status.value,\n            trialEndsAt: this.props.trialEndsAt,\n            billingEmail: this.props.billingEmail,\n            isActive: this.props.isActive,\n            createdAt: this.props.createdAt,\n            updatedAt: this.props.updatedAt\n        };\n    }\n    equals",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\organization.entity.js",
        "start": 262,
        "end": 280,
        "startLoc": {
          "line": 262,
          "column": 6,
          "position": 2199
        },
        "endLoc": {
          "line": 280,
          "column": 7,
          "position": 2378
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\domain\\entities\\organization.entity.js",
        "start": 244,
        "end": 262,
        "startLoc": {
          "line": 244,
          "column": 14,
          "position": 2019
        },
        "endLoc": {
          "line": 262,
          "column": 6,
          "position": 2198
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ",\n            createdAt: this.props.createdAt,\n            updatedAt: this.props.updatedAt\n        };\n    }\n    equals(other) {\n        return this.props.id.value === other.props.id.value;\n    }\n    hashCode() {\n        return this.props.id.value;\n    }\n}\n//# sourceMappingURL=organization.entity.js.map",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\organization.entity.js",
        "start": 275,
        "end": 287,
        "startLoc": {
          "line": 275,
          "column": 9,
          "position": 2347
        },
        "endLoc": {
          "line": 287,
          "column": 48,
          "position": 2434
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\domain\\entities\\user.entity.js",
        "start": 196,
        "end": 208,
        "startLoc": {
          "line": 196,
          "column": 12,
          "position": 1772
        },
        "endLoc": {
          "line": 208,
          "column": 40,
          "position": 1859
        }
      }
    },
    {
      "format": "typescript",
      "lines": 36,
      "fragment": "export interface OrganizationId {\n    value: string;\n}\nexport interface OrganizationSlug {\n    value: string;\n}\nexport interface SubscriptionTier {\n    value: 'free' | 'basic' | 'pro' | 'enterprise';\n}\nexport interface OrganizationStatus {\n    value: 'active' | 'inactive' | 'suspended' | 'trial';\n}\nexport interface OrganizationSettings {\n    timezone: string;\n    currency: string;\n    language: string;\n    dateFormat: string;\n    notifications: {\n        email: boolean;\n        push: boolean;\n        sms: boolean;\n    };\n    features: {\n        ai: boolean;\n        analytics: boolean;\n        integrations: boolean;\n        customFields: boolean;\n    };\n    limits: {\n        users: number;\n        companies: number;\n        contacts: number;\n        products: number;\n        invoices: number;\n        storage: number;\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\organization.entity.d.ts",
        "start": 1,
        "end": 36,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 36,
          "column": 2,
          "position": 246
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\entities\\organization.entity.ts",
        "start": 7,
        "end": 45,
        "startLoc": {
          "line": 7,
          "column": 1,
          "position": 21
        },
        "endLoc": {
          "line": 45,
          "column": 9,
          "position": 270
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "};\n}\nexport interface OrganizationProps {\n    id: OrganizationId;\n    name: string;\n    slug: OrganizationSlug;\n    description?: string;\n    website?: string;\n    logo?: string;\n    settings: OrganizationSettings;\n    subscriptionTier: SubscriptionTier;\n    status: OrganizationStatus;\n    trialEndsAt?: Date;\n    billingEmail?: string;\n    isActive: boolean;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\organization.entity.d.ts",
        "start": 36,
        "end": 54,
        "startLoc": {
          "line": 36,
          "column": 5,
          "position": 246
        },
        "endLoc": {
          "line": 54,
          "column": 8,
          "position": 366
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\entities\\organization.entity.ts",
        "start": 46,
        "end": 66,
        "startLoc": {
          "line": 46,
          "column": 3,
          "position": 273
        },
        "endLoc": {
          "line": 66,
          "column": 6,
          "position": 395
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": ".trim();\n        this.updateTimestamp();\n    }\n    updateType(type) {\n        this.props.type = type;\n        this.updateTimestamp();\n    }\n    updateStatus(status) {\n        this.props.status = status;\n        this.updateTimestamp();\n    }\n    updatePaymentStatus",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\invoice.entity.js",
        "start": 46,
        "end": 57,
        "startLoc": {
          "line": 46,
          "column": 14,
          "position": 641
        },
        "endLoc": {
          "line": 57,
          "column": 20,
          "position": 721
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\domain\\entities\\predictive-analytics.entity.js",
        "start": 35,
        "end": 46,
        "startLoc": {
          "line": 35,
          "column": 5,
          "position": 428
        },
        "endLoc": {
          "line": 46,
          "column": 14,
          "position": 508
        }
      }
    },
    {
      "format": "typescript",
      "lines": 37,
      "fragment": "export interface InvoiceId {\n    value: string;\n}\nexport interface InvoiceNumber {\n    value: string;\n}\nexport interface InvoiceType {\n    value: 'invoice' | 'credit_note' | 'debit_note' | 'proforma' | 'quote' | 'receipt';\n}\nexport interface InvoiceStatus {\n    value: 'draft' | 'sent' | 'paid' | 'overdue' | 'cancelled' | 'refunded' | 'partially_paid';\n}\nexport interface InvoicePaymentStatus {\n    value: 'pending' | 'paid' | 'partial' | 'overdue' | 'cancelled';\n}\nexport interface InvoicePaymentMethod {\n    value: 'cash' | 'credit_card' | 'bank_transfer' | 'check' | 'paypal' | 'stripe' | 'other';\n}\nexport interface InvoiceItem {\n    id: string;\n    productId?: string;\n    description: string;\n    quantity: number;\n    unitPrice: Money;\n    totalPrice: Money;\n    taxRate?: number;\n    taxAmount?: Money;\n    discountRate?: number;\n    discountAmount?: Money;\n    notes?: string;\n}\nexport interface InvoiceSettings {\n    currency: string;\n    taxInclusive: boolean;\n    defaultTaxRate: number;\n    paymentTerms: number;\n    lateFeeRate",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\invoice.entity.d.ts",
        "start": 3,
        "end": 39,
        "startLoc": {
          "line": 3,
          "column": 1,
          "position": 29
        },
        "endLoc": {
          "line": 39,
          "column": 12,
          "position": 345
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\entities\\invoice.entity.ts",
        "start": 9,
        "end": 51,
        "startLoc": {
          "line": 9,
          "column": 1,
          "position": 50
        },
        "endLoc": {
          "line": 51,
          "column": 8,
          "position": 372
        }
      }
    },
    {
      "format": "typescript",
      "lines": 31,
      "fragment": "lateFeeRate?: number;\n    lateFeeAmount?: Money;\n    notes?: string;\n    footer?: string;\n    customFields: Record<string, any>;\n    tags: string[];\n}\nexport interface InvoiceProps extends BaseEntityProps {\n    invoiceNumber: InvoiceNumber;\n    type: InvoiceType;\n    status: InvoiceStatus;\n    paymentStatus: InvoicePaymentStatus;\n    companyId: string;\n    contactId?: string;\n    issueDate: Date;\n    dueDate: Date;\n    paidDate?: Date;\n    subtotal: Money;\n    taxAmount: Money;\n    discountAmount: Money;\n    totalAmount: Money;\n    paidAmount: Money;\n    balanceAmount: Money;\n    items: InvoiceItem[];\n    paymentMethod?: InvoicePaymentMethod;\n    reference?: string;\n    notes?: string;\n    settings: InvoiceSettings;\n    attachments?: string[];\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\invoice.entity.d.ts",
        "start": 39,
        "end": 69,
        "startLoc": {
          "line": 39,
          "column": 5,
          "position": 345
        },
        "endLoc": {
          "line": 69,
          "column": 8,
          "position": 573
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\entities\\invoice.entity.ts",
        "start": 52,
        "end": 84,
        "startLoc": {
          "line": 52,
          "column": 3,
          "position": 375
        },
        "endLoc": {
          "line": 84,
          "column": 6,
          "position": 605
        }
      }
    },
    {
      "format": "typescript",
      "lines": 68,
      "fragment": "export interface InventoryKardexId {\n    value: string;\n}\nexport interface MovementType {\n    value: 'in' | 'out' | 'transfer' | 'adjustment' | 'return' | 'damage' | 'expired' | 'theft';\n}\nexport interface MovementStatus {\n    value: 'pending' | 'completed' | 'cancelled' | 'reversed';\n}\nexport interface MovementReason {\n    value: 'purchase' | 'sale' | 'transfer_in' | 'transfer_out' | 'adjustment' | 'return' | 'damage' | 'expired' | 'theft' | 'production' | 'consumption' | 'other';\n}\nexport interface InventoryMovement {\n    id: string;\n    productId: string;\n    warehouseId?: string;\n    locationId?: string;\n    movementType: MovementType;\n    movementReason: MovementReason;\n    quantity: number;\n    unitCost: Money;\n    totalCost: Money;\n    reference?: string;\n    referenceId?: string;\n    notes?: string;\n    batchNumber?: string;\n    expirationDate?: Date;\n    serialNumber?: string;\n    supplierId?: string;\n    customerId?: string;\n    userId?: string;\n    movementDate: Date;\n    status: MovementStatus;\n}\nexport interface InventorySettings {\n    trackInventory: boolean;\n    allowNegativeStock: boolean;\n    lowStockThreshold: number;\n    reorderPoint: number;\n    reorderQuantity: number;\n    costMethod: 'fifo' | 'lifo' | 'average' | 'standard';\n    valuationMethod: 'fifo' | 'lifo' | 'average' | 'standard';\n    autoReorder: boolean;\n    trackExpiration: boolean;\n    trackSerialNumbers: boolean;\n    trackBatchNumbers: boolean;\n    customFields: Record<string, any>;\n    tags: string[];\n    notes: string;\n}\nexport interface InventoryKardexProps extends BaseEntityProps {\n    productId: string;\n    warehouseId?: string;\n    locationId?: string;\n    initialQuantity: number;\n    currentQuantity: number;\n    reservedQuantity: number;\n    availableQuantity: number;\n    unitCost: Money;\n    totalCost: Money;\n    averageCost: Money;\n    lastMovementDate?: Date;\n    lastMovementType?: MovementType;\n    movements: InventoryMovement[];\n    settings: InventorySettings;\n    isActive: boolean;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\inventory-kardex.entity.d.ts",
        "start": 3,
        "end": 70,
        "startLoc": {
          "line": 3,
          "column": 1,
          "position": 29
        },
        "endLoc": {
          "line": 70,
          "column": 8,
          "position": 609
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\entities\\inventory-kardex.entity.ts",
        "start": 9,
        "end": 83,
        "startLoc": {
          "line": 9,
          "column": 1,
          "position": 50
        },
        "endLoc": {
          "line": 83,
          "column": 6,
          "position": 637
        }
      }
    },
    {
      "format": "javascript",
      "lines": 27,
      "fragment": ";\nexport const InteractionTypeSchema = z.enum([\n    'EMAIL',\n    'PHONE',\n    'MEETING',\n    'NOTE',\n    'TASK',\n    'CALL',\n    'DEMO',\n    'PROPOSAL',\n    'FOLLOW_UP',\n    'OTHER'\n]);\nexport const InteractionStatusSchema = z.enum([\n    'SCHEDULED',\n    'IN_PROGRESS',\n    'COMPLETED',\n    'CANCELLED',\n    'RESCHEDULED'\n]);\nexport const InteractionPrioritySchema = z.enum([\n    'LOW',\n    'MEDIUM',\n    'HIGH',\n    'URGENT'\n]);\nexport class",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\interaction.entity.js",
        "start": 1,
        "end": 27,
        "startLoc": {
          "line": 1,
          "column": 6,
          "position": 11
        },
        "endLoc": {
          "line": 27,
          "column": 6,
          "position": 142
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\interaction.dto.js",
        "start": 2,
        "end": 28,
        "startLoc": {
          "line": 2,
          "column": 44,
          "position": 36
        },
        "endLoc": {
          "line": 28,
          "column": 6,
          "position": 167
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "export interface InteractionProps {\n    id: InteractionId;\n    organizationId: OrganizationId;\n    contactId: ContactId;\n    companyId?: CompanyId;\n    userId: UserId;\n    type: InteractionType;\n    status: InteractionStatus;\n    priority: InteractionPriority;\n    subject: string;\n    description?: string;\n    scheduledAt?: Date;\n    completedAt?: Date;\n    duration?: number;\n    outcome",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\interaction.entity.d.ts",
        "start": 13,
        "end": 27,
        "startLoc": {
          "line": 13,
          "column": 1,
          "position": 227
        },
        "endLoc": {
          "line": 27,
          "column": 8,
          "position": 332
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\entities\\interaction.entity.ts",
        "start": 53,
        "end": 66,
        "startLoc": {
          "line": 53,
          "column": 1,
          "position": 276
        },
        "endLoc": {
          "line": 66,
          "column": 14,
          "position": 380
        }
      }
    },
    {
      "format": "javascript",
      "lines": 36,
      "fragment": ";\nexport const DealStageSchema = z.enum([\n    'LEAD',\n    'QUALIFIED',\n    'PROPOSAL',\n    'NEGOTIATION',\n    'CLOSED_WON',\n    'CLOSED_LOST',\n    'ON_HOLD',\n    'CANCELLED'\n]);\nexport const DealStatusSchema = z.enum([\n    'ACTIVE',\n    'WON',\n    'LOST',\n    'ON_HOLD',\n    'CANCELLED'\n]);\nexport const DealPrioritySchema = z.enum([\n    'LOW',\n    'MEDIUM',\n    'HIGH',\n    'URGENT'\n]);\nexport const DealSourceSchema = z.enum([\n    'WEBSITE',\n    'EMAIL',\n    'PHONE',\n    'REFERRAL',\n    'SOCIAL_MEDIA',\n    'ADVERTISING',\n    'TRADE_SHOW',\n    'PARTNER',\n    'OTHER'\n]);\nexport class",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\deal.entity.js",
        "start": 1,
        "end": 36,
        "startLoc": {
          "line": 1,
          "column": 6,
          "position": 11
        },
        "endLoc": {
          "line": 36,
          "column": 6,
          "position": 187
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\presentation\\dto\\deal.dto.js",
        "start": 2,
        "end": 37,
        "startLoc": {
          "line": 2,
          "column": 44,
          "position": 36
        },
        "endLoc": {
          "line": 37,
          "column": 6,
          "position": 212
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "{\n    props;\n    constructor(props) {\n        this.props = props;\n    }\n    get id() { return this.props.id; }\n    get organizationId() { return this.props.organizationId; }\n    get contactId() { return this.props.contactId; }\n    get companyId() { return this.props.companyId; }\n    get userId() { return this.props.userId; }\n    get name",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\deal.entity.js",
        "start": 36,
        "end": 46,
        "startLoc": {
          "line": 36,
          "column": 2,
          "position": 191
        },
        "endLoc": {
          "line": 46,
          "column": 5,
          "position": 321
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\domain\\entities\\interaction.entity.js",
        "start": 27,
        "end": 37,
        "startLoc": {
          "line": 27,
          "column": 2,
          "position": 146
        },
        "endLoc": {
          "line": 37,
          "column": 5,
          "position": 276
        }
      }
    },
    {
      "format": "javascript",
      "lines": 47,
      "fragment": "= date;\n        this.props.updatedAt = new Date();\n    }\n    addTag(tag) {\n        if (!this.props.tags) {\n            this.props.tags = [];\n        }\n        if (!this.props.tags.includes(tag)) {\n            this.props.tags.push(tag);\n            this.props.updatedAt = new Date();\n        }\n    }\n    removeTag(tag) {\n        if (this.props.tags) {\n            this.props.tags = this.props.tags.filter(t => t !== tag);\n            this.props.updatedAt = new Date();\n        }\n    }\n    setCustomField(key, value) {\n        if (!this.props.customFields) {\n            this.props.customFields = {};\n        }\n        this.props.customFields[key] = value;\n        this.props.updatedAt = new Date();\n    }\n    removeCustomField(key) {\n        if (this.props.customFields) {\n            delete this.props.customFields[key];\n            this.props.updatedAt = new Date();\n        }\n    }\n    addAttachment(attachment) {\n        if (!this.props.attachments) {\n            this.props.attachments = [];\n        }\n        if (!this.props.attachments.includes(attachment)) {\n            this.props.attachments.push(attachment);\n            this.props.updatedAt = new Date();\n        }\n    }\n    removeAttachment(attachment) {\n        if (this.props.attachments) {\n            this.props.attachments = this.props.attachments.filter(a => a !== attachment);\n            this.props.updatedAt = new Date();\n        }\n    }\n    addCompetitor",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\deal.entity.js",
        "start": 123,
        "end": 169,
        "startLoc": {
          "line": 123,
          "column": 2,
          "position": 1389
        },
        "endLoc": {
          "line": 169,
          "column": 14,
          "position": 1873
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\domain\\entities\\interaction.entity.js",
        "start": 78,
        "end": 124,
        "startLoc": {
          "line": 78,
          "column": 2,
          "position": 881
        },
        "endLoc": {
          "line": 124,
          "column": 9,
          "position": 1365
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "export interface DealProps {\n    id: DealId;\n    organizationId: OrganizationId;\n    contactId: ContactId;\n    companyId?: CompanyId;\n    userId: UserId;\n    name: string;\n    description?: string;\n    stage: DealStage;\n    status: DealStatus;\n    priority: DealPriority;\n    source: DealSource;\n    value: number;\n    currency: string;\n    probability: number;\n    expectedCloseDate",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\deal.entity.d.ts",
        "start": 15,
        "end": 30,
        "startLoc": {
          "line": 15,
          "column": 1,
          "position": 282
        },
        "endLoc": {
          "line": 30,
          "column": 18,
          "position": 391
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\entities\\deal.entity.ts",
        "start": 64,
        "end": 78,
        "startLoc": {
          "line": 64,
          "column": 1,
          "position": 340
        },
        "endLoc": {
          "line": 78,
          "column": 9,
          "position": 448
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "expectedCloseDate?: Date;\n    actualCloseDate?: Date;\n    nextStep?: string;\n    nextStepDate?: Date;\n    tags?: string[];\n    customFields?: Record<string, any>;\n    attachments?: string[];\n    notes?: string;\n    competitors?: string[];\n    decisionMakers?: string[];\n    budget?: number;\n    timeline?: string;\n    requirements?: string[];\n    objections?: string[];\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\deal.entity.d.ts",
        "start": 30,
        "end": 47,
        "startLoc": {
          "line": 30,
          "column": 5,
          "position": 391
        },
        "endLoc": {
          "line": 47,
          "column": 7,
          "position": 536
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\entities\\deal.entity.ts",
        "start": 79,
        "end": 97,
        "startLoc": {
          "line": 79,
          "column": 3,
          "position": 451
        },
        "endLoc": {
          "line": 97,
          "column": 80,
          "position": 597
        }
      }
    },
    {
      "format": "javascript",
      "lines": 17,
      "fragment": "; }\n    updateName(name) {\n        if (!name || name.trim().length === 0) {\n            throw new Error('Name cannot be empty');\n        }\n        this.props.name = name.trim();\n        this.updateTimestamp();\n    }\n    updateType(type) {\n        this.props.type = type;\n        this.updateTimestamp();\n    }\n    updateStatus(status) {\n        this.props.status = status;\n        this.updateTimestamp();\n    }\n    updateDescription",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\database-schema.entity.js",
        "start": 35,
        "end": 51,
        "startLoc": {
          "line": 35,
          "column": 20,
          "position": 468
        },
        "endLoc": {
          "line": 51,
          "column": 18,
          "position": 608
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\domain\\entities\\predictive-analytics.entity.js",
        "start": 30,
        "end": 46,
        "startLoc": {
          "line": 30,
          "column": 16,
          "position": 368
        },
        "endLoc": {
          "line": 46,
          "column": 14,
          "position": 508
        }
      }
    },
    {
      "format": "javascript",
      "lines": 16,
      "fragment": ";\n        this.updateTimestamp();\n    }\n    updateDescription(description) {\n        this.props.description = description;\n        this.updateTimestamp();\n    }\n    updateSettings(settings) {\n        this.props.settings = settings;\n        this.updateTimestamp();\n    }\n    updateMetrics(metrics) {\n        this.props.metrics = metrics;\n        this.updateTimestamp();\n    }\n    addTable",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\database-schema.entity.js",
        "start": 48,
        "end": 63,
        "startLoc": {
          "line": 48,
          "column": 7,
          "position": 594
        },
        "endLoc": {
          "line": 63,
          "column": 9,
          "position": 701
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\domain\\entities\\predictive-analytics.entity.js",
        "start": 47,
        "end": 62,
        "startLoc": {
          "line": 47,
          "column": 8,
          "position": 525
        },
        "endLoc": {
          "line": 62,
          "column": 14,
          "position": 632
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ");\n    }\n    validate() {\n        if (!this.validateBase()) {\n            return false;\n        }\n        if (!this.props.name || this.props.name.trim().length === 0) {\n            return false;\n        }\n        if (!this.props.organizationId || this.props.organizationId.trim().length === 0) {\n            return false;\n        }\n        if (!",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\database-schema.entity.js",
        "start": 266,
        "end": 278,
        "startLoc": {
          "line": 266,
          "column": 6,
          "position": 2975
        },
        "endLoc": {
          "line": 278,
          "column": 2,
          "position": 3097
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\domain\\entities\\predictive-analytics.entity.js",
        "start": 154,
        "end": 166,
        "startLoc": {
          "line": 154,
          "column": 4,
          "position": 1565
        },
        "endLoc": {
          "line": 166,
          "column": 5,
          "position": 1687
        }
      }
    },
    {
      "format": "typescript",
      "lines": 216,
      "fragment": "export interface DatabaseSchemaId {\n    value: string;\n}\nexport interface SchemaType {\n    value: 'postgresql' | 'mysql' | 'sqlite' | 'mongodb' | 'redis' | 'elasticsearch';\n}\nexport interface SchemaStatus {\n    value: 'design' | 'development' | 'testing' | 'production' | 'deprecated';\n}\nexport interface TableType {\n    value: 'table' | 'view' | 'materialized_view' | 'function' | 'procedure' | 'trigger' | 'index' | 'sequence';\n}\nexport interface ColumnType {\n    value: 'varchar' | 'text' | 'integer' | 'bigint' | 'decimal' | 'boolean' | 'date' | 'timestamp' | 'json' | 'jsonb' | 'uuid' | 'array' | 'enum';\n}\nexport interface ConstraintType {\n    value: 'primary_key' | 'foreign_key' | 'unique' | 'check' | 'not_null' | 'default' | 'index';\n}\nexport interface DatabaseColumn {\n    id: string;\n    name: string;\n    type: ColumnType;\n    length?: number;\n    precision?: number;\n    scale?: number;\n    nullable: boolean;\n    defaultValue?: any;\n    constraints: DatabaseConstraint[];\n    description: string;\n    isIndexed: boolean;\n    isPrimaryKey: boolean;\n    isForeignKey: boolean;\n    referencedTable?: string;\n    referencedColumn?: string;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface DatabaseConstraint {\n    id: string;\n    name: string;\n    type: ConstraintType;\n    columns: string[];\n    referencedTable?: string;\n    referencedColumns?: string[];\n    condition?: string;\n    description: string;\n    isDeferrable: boolean;\n    initiallyDeferred: boolean;\n    onDelete?: 'CASCADE' | 'SET NULL' | 'RESTRICT' | 'NO ACTION';\n    onUpdate?: 'CASCADE' | 'SET NULL' | 'RESTRICT' | 'NO ACTION';\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface DatabaseTable {\n    id: string;\n    name: string;\n    type: TableType;\n    schema: string;\n    description: string;\n    columns: DatabaseColumn[];\n    constraints: DatabaseConstraint[];\n    indexes: DatabaseIndex[];\n    triggers: DatabaseTrigger[];\n    rowLevelSecurity: boolean;\n    policies: DatabasePolicy[];\n    statistics: DatabaseStatistics;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface DatabaseIndex {\n    id: string;\n    name: string;\n    table: string;\n    columns: string[];\n    type: 'btree' | 'hash' | 'gin' | 'gist' | 'spgist' | 'brin';\n    unique: boolean;\n    partial: boolean;\n    condition?: string;\n    description: string;\n    isActive: boolean;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface DatabaseTrigger {\n    id: string;\n    name: string;\n    table: string;\n    event: 'INSERT' | 'UPDATE' | 'DELETE' | 'TRUNCATE';\n    timing: 'BEFORE' | 'AFTER' | 'INSTEAD OF';\n    function: string;\n    condition?: string;\n    description: string;\n    isActive: boolean;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface DatabasePolicy {\n    id: string;\n    name: string;\n    table: string;\n    command: 'SELECT' | 'INSERT' | 'UPDATE' | 'DELETE' | 'ALL';\n    roles: string[];\n    using?: string;\n    withCheck?: string;\n    description: string;\n    isActive: boolean;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface DatabaseStatistics {\n    rowCount: number;\n    tableSize: number;\n    indexSize: number;\n    totalSize: number;\n    lastAnalyzed: Date;\n    lastVacuumed: Date;\n    lastAutoVacuumed: Date;\n    deadTuples: number;\n    liveTuples: number;\n    nDistinct: number;\n    correlation: number;\n    mostCommonValues: any[];\n    mostCommonFrequencies: number[];\n    histogramBounds: any[];\n}\nexport interface DatabaseSchemaSettings {\n    type: SchemaType;\n    version: string;\n    encoding: string;\n    collation: string;\n    timezone: string;\n    connectionPool: {\n        min: number;\n        max: number;\n        idle: number;\n        acquire: number;\n        evict: number;\n    };\n    migrations: {\n        enabled: boolean;\n        directory: string;\n        table: string;\n        lockTable: string;\n    };\n    backup: {\n        enabled: boolean;\n        frequency: string;\n        retention: number;\n        compression: boolean;\n    };\n    monitoring: {\n        enabled: boolean;\n        slowQueryThreshold: number;\n        logLevel: string;\n        metrics: boolean;\n    };\n    security: {\n        ssl: boolean;\n        encryption: boolean;\n        auditLog: boolean;\n        rowLevelSecurity: boolean;\n    };\n    performance: {\n        queryOptimization: boolean;\n        indexOptimization: boolean;\n        connectionPooling: boolean;\n        caching: boolean;\n    };\n    customFields: Record<string, any>;\n    tags: string[];\n    notes: string;\n}\nexport interface DatabaseSchemaMetrics {\n    totalTables: number;\n    totalViews: number;\n    totalFunctions: number;\n    totalProcedures: number;\n    totalTriggers: number;\n    totalIndexes: number;\n    totalConstraints: number;\n    totalPolicies: number;\n    totalSize: number;\n    averageTableSize: number;\n    largestTable: string;\n    smallestTable: string;\n    mostIndexedTable: string;\n    leastIndexedTable: string;\n    lastBackupDate?: Date;\n    lastMaintenanceDate?: Date;\n    healthScore: number;\n    performanceScore: number;\n    securityScore: number;\n    maintainabilityScore: number;\n    lastAnalysisDate: Date;\n    analysisDuration: number;\n}\nexport interface DatabaseSchemaProps extends BaseEntityProps {\n    name: string;\n    type: SchemaType;\n    status: SchemaStatus;\n    organizationId: string;\n    description?: string;\n    settings: DatabaseSchemaSettings;\n    metrics?: DatabaseSchemaMetrics;\n    tables: DatabaseTable[];\n    views: DatabaseTable[];\n    functions: DatabaseTable[];\n    procedures: DatabaseTable[];\n    triggers: DatabaseTrigger[];\n    indexes: DatabaseIndex[];\n    policies: DatabasePolicy[];\n    lastBackupDate?: Date;\n    lastMaintenanceDate?: Date;\n    isActive: boolean;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\database-schema.entity.d.ts",
        "start": 2,
        "end": 217,
        "startLoc": {
          "line": 2,
          "column": 1,
          "position": 16
        },
        "endLoc": {
          "line": 217,
          "column": 8,
          "position": 1724
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\entities\\database-schema.entity.ts",
        "start": 8,
        "end": 239,
        "startLoc": {
          "line": 8,
          "column": 1,
          "position": 37
        },
        "endLoc": {
          "line": 239,
          "column": 6,
          "position": 1761
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": ";\n        this.props.updatedAt = new Date();\n    }\n    updateType(type) {\n        this.props.type = type;\n        this.props.updatedAt = new Date();\n    }\n    updateStatus(status) {\n        this.props.status = status;\n        this.props.updatedAt = new Date();\n    }\n    updateSource",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\contact.entity.js",
        "start": 285,
        "end": 296,
        "startLoc": {
          "line": 285,
          "column": 11,
          "position": 2479
        },
        "endLoc": {
          "line": 296,
          "column": 13,
          "position": 2579
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\domain\\entities\\product.entity.js",
        "start": 61,
        "end": 72,
        "startLoc": {
          "line": 61,
          "column": 8,
          "position": 786
        },
        "endLoc": {
          "line": 72,
          "column": 15,
          "position": 886
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ";\n        this.props.updatedAt = new Date();\n    }\n    activate() {\n        this.props.isActive = true;\n        this.props.updatedAt = new Date();\n    }\n    deactivate() {\n        this.props.isActive = false;\n        this.props.updatedAt = new Date();\n    }\n    isActive() {\n        return this.props.isActive && this.props.status.value === 'active';\n    }\n    isPrimary",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\contact.entity.js",
        "start": 450,
        "end": 464,
        "startLoc": {
          "line": 450,
          "column": 2,
          "position": 4279
        },
        "endLoc": {
          "line": 464,
          "column": 10,
          "position": 4411
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\domain\\entities\\organization.entity.js",
        "start": 135,
        "end": 149,
        "startLoc": {
          "line": 135,
          "column": 6,
          "position": 1105
        },
        "endLoc": {
          "line": 149,
          "column": 8,
          "position": 1237
        }
      }
    },
    {
      "format": "javascript",
      "lines": 56,
      "fragment": "() {\n        return {\n            id: this.props.id.value,\n            organizationId: this.props.organizationId.value,\n            companyId: this.props.companyId?.value,\n            firstName: this.props.firstName,\n            lastName: this.props.lastName,\n            middleName: this.props.middleName,\n            title: this.props.title,\n            department: this.props.department,\n            type: this.props.type.value,\n            status: this.props.status.value,\n            source: this.props.source.value,\n            priority: this.props.priority.value,\n            email: this.props.email,\n            phone: this.props.phone,\n            mobile: this.props.mobile,\n            fax: this.props.fax,\n            website: this.props.website,\n            address: this.props.address?.toJSON(),\n            birthday: this.props.birthday,\n            anniversary: this.props.anniversary,\n            gender: this.props.gender,\n            maritalStatus: this.props.maritalStatus,\n            children: this.props.children,\n            education: this.props.education,\n            profession: this.props.profession,\n            industry: this.props.industry,\n            experience: this.props.experience,\n            salary: this.props.salary?.toJSON(),\n            socialMedia: this.props.socialMedia,\n            communication: this.props.communication,\n            settings: this.props.settings,\n            assignedUserId: this.props.assignedUserId,\n            lastContactDate: this.props.lastContactDate,\n            nextFollowUpDate: this.props.nextFollowUpDate,\n            leadScore: this.props.leadScore,\n            engagementScore: this.props.engagementScore,\n            lastEmailOpen: this.props.lastEmailOpen,\n            lastEmailClick: this.props.lastEmailClick,\n            lastWebsiteVisit: this.props.lastWebsiteVisit,\n            lastSocialMediaInteraction: this.props.lastSocialMediaInteraction,\n            totalInteractions: this.props.totalInteractions,\n            totalEmailsSent: this.props.totalEmailsSent,\n            totalEmailsOpened: this.props.totalEmailsOpened,\n            totalEmailsClicked: this.props.totalEmailsClicked,\n            totalCallsMade: this.props.totalCallsMade,\n            totalMeetingsScheduled: this.props.totalMeetingsScheduled,\n            totalMeetingsAttended: this.props.totalMeetingsAttended,\n            totalDealsWon: this.props.totalDealsWon,\n            totalDealsLost: this.props.totalDealsLost,\n            totalRevenue: this.props.totalRevenue.toJSON(),\n            isActive: this.props.isActive,\n            isVerified: this.props.isVerified,\n            isOptedIn: this.props.isOptedIn,\n            fullName",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\contact.entity.js",
        "start": 707,
        "end": 762,
        "startLoc": {
          "line": 707,
          "column": 6,
          "position": 6935
        },
        "endLoc": {
          "line": 762,
          "column": 9,
          "position": 7558
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\domain\\entities\\contact.entity.js",
        "start": 648,
        "end": 703,
        "startLoc": {
          "line": 648,
          "column": 14,
          "position": 6283
        },
        "endLoc": {
          "line": 703,
          "column": 10,
          "position": 6906
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ",\n            createdAt: this.props.createdAt,\n            updatedAt: this.props.updatedAt\n        };\n    }\n    equals(other) {\n        return this.props.id.value === other.props.id.value;\n    }\n    hashCode() {\n        return this.props.id.value;\n    }\n}\n//# sourceMappingURL=contact.entity.js.map",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\contact.entity.js",
        "start": 784,
        "end": 796,
        "startLoc": {
          "line": 784,
          "column": 2,
          "position": 7812
        },
        "endLoc": {
          "line": 796,
          "column": 43,
          "position": 7899
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\domain\\entities\\user.entity.js",
        "start": 196,
        "end": 208,
        "startLoc": {
          "line": 196,
          "column": 12,
          "position": 1772
        },
        "endLoc": {
          "line": 208,
          "column": 40,
          "position": 1859
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ";\n    birthday?: Date;\n    anniversary?: Date;\n    gender?: 'male' | 'female' | 'other' | 'prefer_not_to_say';\n    maritalStatus?: 'single' | 'married' | 'divorced' | 'widowed' | 'separated';\n    children?: number;\n    education?: string;\n    profession?: string;\n    industry?: string;\n    experience?: number;\n    salary?: Money",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\contact.entity.d.ts",
        "start": 61,
        "end": 71,
        "startLoc": {
          "line": 61,
          "column": 8,
          "position": 516
        },
        "endLoc": {
          "line": 71,
          "column": 6,
          "position": 623
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\contact\\update-contact.use-case.ts",
        "start": 34,
        "end": 44,
        "startLoc": {
          "line": 34,
          "column": 2,
          "position": 347
        },
        "endLoc": {
          "line": 44,
          "column": 2,
          "position": 454
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ";\n    }\n    get assignedUserId() {\n        return this.props.assignedUserId;\n    }\n    get lastContactDate() {\n        return this.props.lastContactDate;\n    }\n    get nextFollowUpDate() {\n        return this.props.nextFollowUpDate;\n    }\n    get leadScore() {\n        return this.props.leadScore;\n    }\n    get isActive",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\company.entity.js",
        "start": 141,
        "end": 155,
        "startLoc": {
          "line": 141,
          "column": 16,
          "position": 1207
        },
        "endLoc": {
          "line": 155,
          "column": 9,
          "position": 1303
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\domain\\entities\\contact.entity.js",
        "start": 199,
        "end": 213,
        "startLoc": {
          "line": 199,
          "column": 9,
          "position": 1809
        },
        "endLoc": {
          "line": 213,
          "column": 16,
          "position": 1905
        }
      }
    },
    {
      "format": "javascript",
      "lines": 16,
      "fragment": ";\n    }\n    get isActive() {\n        return this.props.isActive;\n    }\n    get createdAt() {\n        return this.props.createdAt;\n    }\n    get updatedAt() {\n        return this.props.updatedAt;\n    }\n    updateName(name) {\n        this.props.name = name;\n        this.props.updatedAt = new Date();\n    }\n    updateLegalName",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\company.entity.js",
        "start": 153,
        "end": 168,
        "startLoc": {
          "line": 153,
          "column": 10,
          "position": 1295
        },
        "endLoc": {
          "line": 168,
          "column": 16,
          "position": 1406
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\domain\\entities\\organization.entity.js",
        "start": 91,
        "end": 106,
        "startLoc": {
          "line": 91,
          "column": 13,
          "position": 691
        },
        "endLoc": {
          "line": 106,
          "column": 18,
          "position": 802
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": ";\n        this.props.updatedAt = new Date();\n    }\n    updateType(type) {\n        this.props.type = type;\n        this.props.updatedAt = new Date();\n    }\n    updateStatus(status) {\n        this.props.status = status;\n        this.props.updatedAt = new Date();\n    }\n    updateSize",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\company.entity.js",
        "start": 169,
        "end": 180,
        "startLoc": {
          "line": 169,
          "column": 10,
          "position": 1423
        },
        "endLoc": {
          "line": 180,
          "column": 11,
          "position": 1523
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\domain\\entities\\product.entity.js",
        "start": 61,
        "end": 72,
        "startLoc": {
          "line": 61,
          "column": 8,
          "position": 786
        },
        "endLoc": {
          "line": 72,
          "column": 15,
          "position": 886
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ";\n        this.props.updatedAt = new Date();\n    }\n    assignToUser(userId) {\n        this.props.assignedUserId = userId;\n        this.props.updatedAt = new Date();\n    }\n    unassignUser() {\n        this.props.assignedUserId = undefined;\n        this.props.updatedAt = new Date();\n    }\n    recordContact() {\n        this.props.lastContactDate = new Date();\n        this.props.updatedAt",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\company.entity.js",
        "start": 239,
        "end": 252,
        "startLoc": {
          "line": 239,
          "column": 5,
          "position": 2147
        },
        "endLoc": {
          "line": 252,
          "column": 10,
          "position": 2273
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\domain\\entities\\contact.entity.js",
        "start": 364,
        "end": 377,
        "startLoc": {
          "line": 364,
          "column": 10,
          "position": 3369
        },
        "endLoc": {
          "line": 377,
          "column": 18,
          "position": 3495
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": ";\n        this.props.updatedAt = new Date();\n    }\n    scheduleFollowUp(date) {\n        this.props.nextFollowUpDate = date;\n        this.props.updatedAt = new Date();\n    }\n    updateLeadScore(score) {\n        this.props.leadScore = Math.max(0, Math.min(100, score));\n        this.props.updatedAt = new Date();\n    }\n    activate",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\company.entity.js",
        "start": 251,
        "end": 262,
        "startLoc": {
          "line": 251,
          "column": 2,
          "position": 2266
        },
        "endLoc": {
          "line": 262,
          "column": 9,
          "position": 2382
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\domain\\entities\\contact.entity.js",
        "start": 377,
        "end": 388,
        "startLoc": {
          "line": 377,
          "column": 2,
          "position": 3500
        },
        "endLoc": {
          "line": 388,
          "column": 22,
          "position": 3616
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ");\n        this.props.updatedAt = new Date();\n    }\n    activate() {\n        this.props.isActive = true;\n        this.props.updatedAt = new Date();\n    }\n    deactivate() {\n        this.props.isActive = false;\n        this.props.updatedAt = new Date();\n    }\n    isActive() {\n        return this.props.isActive && this.props.status.value === 'active';\n    }\n    isCustomer",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\company.entity.js",
        "start": 259,
        "end": 273,
        "startLoc": {
          "line": 259,
          "column": 2,
          "position": 2359
        },
        "endLoc": {
          "line": 273,
          "column": 11,
          "position": 2492
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\domain\\entities\\contact.entity.js",
        "start": 450,
        "end": 149,
        "startLoc": {
          "line": 450,
          "column": 2,
          "position": 4278
        },
        "endLoc": {
          "line": 149,
          "column": 8,
          "position": 1237
        }
      }
    },
    {
      "format": "javascript",
      "lines": 31,
      "fragment": ";\n    }\n    isOverdueForFollowUp() {\n        if (!this.props.nextFollowUpDate)\n            return false;\n        return new Date() > this.props.nextFollowUpDate;\n    }\n    getDaysSinceLastContact() {\n        if (!this.props.lastContactDate)\n            return -1;\n        const now = new Date();\n        const diffTime = Math.abs(now.getTime() - this.props.lastContactDate.getTime());\n        return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    }\n    getDaysUntilFollowUp() {\n        if (!this.props.nextFollowUpDate)\n            return -1;\n        const now = new Date();\n        const diffTime = this.props.nextFollowUpDate.getTime() - now.getTime();\n        return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    }\n    getLeadScoreLevel() {\n        if (!this.props.leadScore)\n            return 'low';\n        if (this.props.leadScore < 30)\n            return 'low';\n        if (this.props.leadScore < 70)\n            return 'medium';\n        return 'high';\n    }\n    static",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\company.entity.js",
        "start": 292,
        "end": 322,
        "startLoc": {
          "line": 292,
          "column": 16,
          "position": 2674
        },
        "endLoc": {
          "line": 322,
          "column": 7,
          "position": 3003
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\domain\\entities\\contact.entity.js",
        "start": 486,
        "end": 516,
        "startLoc": {
          "line": 486,
          "column": 10,
          "position": 4605
        },
        "endLoc": {
          "line": 516,
          "column": 24,
          "position": 4934
        }
      }
    },
    {
      "format": "javascript",
      "lines": 31,
      "fragment": "() {\n        return {\n            id: this.props.id.value,\n            organizationId: this.props.organizationId.value,\n            name: this.props.name,\n            legalName: this.props.legalName,\n            type: this.props.type.value,\n            status: this.props.status.value,\n            size: this.props.size.value,\n            industry: this.props.industry.value,\n            source: this.props.source.value,\n            website: this.props.website,\n            email: this.props.email,\n            phone: this.props.phone,\n            address: this.props.address?.toJSON(),\n            billingAddress: this.props.billingAddress?.toJSON(),\n            shippingAddress: this.props.shippingAddress?.toJSON(),\n            taxId: this.props.taxId,\n            vatNumber: this.props.vatNumber,\n            registrationNumber: this.props.registrationNumber,\n            description: this.props.description,\n            settings: this.props.settings,\n            annualRevenue: this.props.annualRevenue?.toJSON(),\n            employeeCount: this.props.employeeCount,\n            foundedYear: this.props.foundedYear,\n            parentCompanyId: this.props.parentCompanyId?.value,\n            assignedUserId: this.props.assignedUserId,\n            lastContactDate: this.props.lastContactDate,\n            nextFollowUpDate: this.props.nextFollowUpDate,\n            leadScore: this.props.leadScore,\n            leadScoreLevel",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\company.entity.js",
        "start": 393,
        "end": 423,
        "startLoc": {
          "line": 393,
          "column": 6,
          "position": 3718
        },
        "endLoc": {
          "line": 423,
          "column": 15,
          "position": 4074
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\domain\\entities\\company.entity.js",
        "start": 358,
        "end": 388,
        "startLoc": {
          "line": 358,
          "column": 14,
          "position": 3322
        },
        "endLoc": {
          "line": 388,
          "column": 9,
          "position": 3678
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": "(),\n            createdAt: this.props.createdAt,\n            updatedAt: this.props.updatedAt\n        };\n    }\n    equals(other) {\n        return this.props.id.value === other.props.id.value;\n    }\n    hashCode() {\n        return this.props.id.value;\n    }\n}\n//# sourceMappingURL=company.entity.js.map",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\company.entity.js",
        "start": 434,
        "end": 446,
        "startLoc": {
          "line": 434,
          "column": 21,
          "position": 4201
        },
        "endLoc": {
          "line": 446,
          "column": 43,
          "position": 4290
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\domain\\entities\\contact.entity.js",
        "start": 784,
        "end": 208,
        "startLoc": {
          "line": 784,
          "column": 19,
          "position": 7810
        },
        "endLoc": {
          "line": 208,
          "column": 40,
          "position": 1859
        }
      }
    },
    {
      "format": "typescript",
      "lines": 71,
      "fragment": "export interface CompanyId {\n    value: string;\n}\nexport interface OrganizationId {\n    value: string;\n}\nexport interface CompanyType {\n    value: 'customer' | 'supplier' | 'partner' | 'prospect' | 'competitor';\n}\nexport interface CompanyStatus {\n    value: 'active' | 'inactive' | 'suspended' | 'prospect' | 'lead';\n}\nexport interface CompanySize {\n    value: 'startup' | 'small' | 'medium' | 'large' | 'enterprise';\n}\nexport interface CompanyIndustry {\n    value: string;\n}\nexport interface CompanySource {\n    value: 'website' | 'referral' | 'cold_call' | 'email' | 'social_media' | 'event' | 'other';\n}\nexport interface CompanySettings {\n    notifications: {\n        email: boolean;\n        sms: boolean;\n        push: boolean;\n    };\n    preferences: {\n        language: string;\n        timezone: string;\n        currency: string;\n        dateFormat: string;\n    };\n    customFields: Record<string, any>;\n    tags: string[];\n    notes: string;\n}\nexport interface CompanyProps {\n    id: CompanyId;\n    organizationId: OrganizationId;\n    name: string;\n    legalName?: string;\n    type: CompanyType;\n    status: CompanyStatus;\n    size: CompanySize;\n    industry: CompanyIndustry;\n    source: CompanySource;\n    website?: string;\n    email?: string;\n    phone?: string;\n    address?: Address;\n    billingAddress?: Address;\n    shippingAddress?: Address;\n    taxId?: string;\n    vatNumber?: string;\n    registrationNumber?: string;\n    description?: string;\n    settings: CompanySettings;\n    annualRevenue?: Money;\n    employeeCount?: number;\n    foundedYear?: number;\n    parentCompanyId?: CompanyId;\n    assignedUserId?: string;\n    lastContactDate?: Date;\n    nextFollowUpDate?: Date;\n    leadScore?: number;\n    isActive: boolean;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\company.entity.d.ts",
        "start": 3,
        "end": 73,
        "startLoc": {
          "line": 3,
          "column": 1,
          "position": 26
        },
        "endLoc": {
          "line": 73,
          "column": 8,
          "position": 573
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\entities\\company.entity.ts",
        "start": 9,
        "end": 88,
        "startLoc": {
          "line": 9,
          "column": 1,
          "position": 47
        },
        "endLoc": {
          "line": 88,
          "column": 6,
          "position": 603
        }
      }
    },
    {
      "format": "javascript",
      "lines": 29,
      "fragment": "; }\n    updateName(name) {\n        if (!name || name.trim().length === 0) {\n            throw new Error('Name cannot be empty');\n        }\n        this.props.name = name.trim();\n        this.updateTimestamp();\n    }\n    updateType(type) {\n        this.props.type = type;\n        this.updateTimestamp();\n    }\n    updateStatus(status) {\n        this.props.status = status;\n        this.updateTimestamp();\n    }\n    updateDescription(description) {\n        this.props.description = description;\n        this.updateTimestamp();\n    }\n    updateSettings(settings) {\n        this.props.settings = settings;\n        this.updateTimestamp();\n    }\n    updateMetrics(metrics) {\n        this.props.metrics = metrics;\n        this.updateTimestamp();\n    }\n    addComponent",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\architecture.entity.js",
        "start": 29,
        "end": 57,
        "startLoc": {
          "line": 29,
          "column": 17,
          "position": 348
        },
        "endLoc": {
          "line": 57,
          "column": 13,
          "position": 581
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\domain\\entities\\predictive-analytics.entity.js",
        "start": 30,
        "end": 62,
        "startLoc": {
          "line": 30,
          "column": 16,
          "position": 368
        },
        "endLoc": {
          "line": 62,
          "column": 14,
          "position": 632
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ";\n    }\n    validate() {\n        if (!this.validateBase()) {\n            return false;\n        }\n        if (!this.props.name || this.props.name.trim().length === 0) {\n            return false;\n        }\n        if (!this.props.organizationId || this.props.organizationId.trim().length === 0) {\n            return false;\n        }\n        if (!this.props.settings.layers",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\architecture.entity.js",
        "start": 200,
        "end": 212,
        "startLoc": {
          "line": 200,
          "column": 4,
          "position": 2229
        },
        "endLoc": {
          "line": 212,
          "column": 7,
          "position": 2357
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\domain\\entities\\predictive-analytics.entity.js",
        "start": 154,
        "end": 278,
        "startLoc": {
          "line": 154,
          "column": 2,
          "position": 1566
        },
        "endLoc": {
          "line": 278,
          "column": 8,
          "position": 3104
        }
      }
    },
    {
      "format": "typescript",
      "lines": 83,
      "fragment": "export interface ArchitectureId {\n    value: string;\n}\nexport interface ArchitectureType {\n    value: 'hexagonal' | 'layered' | 'microservices' | 'monolithic' | 'event_driven';\n}\nexport interface ArchitectureStatus {\n    value: 'design' | 'implementation' | 'testing' | 'deployed' | 'maintenance';\n}\nexport interface LayerType {\n    value: 'domain' | 'application' | 'infrastructure' | 'presentation' | 'shared';\n}\nexport interface ComponentType {\n    value: 'entity' | 'repository' | 'use_case' | 'service' | 'controller' | 'middleware' | 'dto' | 'route';\n}\nexport interface ArchitectureComponent {\n    id: string;\n    name: string;\n    type: ComponentType;\n    layer: LayerType;\n    description: string;\n    dependencies: string[];\n    interfaces: string[];\n    implementation: string;\n    tests: string[];\n    documentation: string;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface ArchitectureLayer {\n    id: string;\n    name: string;\n    type: LayerType;\n    description: string;\n    components: ArchitectureComponent[];\n    dependencies: string[];\n    responsibilities: string[];\n    patterns: string[];\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface ArchitectureSettings {\n    type: ArchitectureType;\n    layers: ArchitectureLayer[];\n    patterns: string[];\n    principles: string[];\n    conventions: Record<string, any>;\n    tools: string[];\n    frameworks: string[];\n    libraries: string[];\n    customFields: Record<string, any>;\n    tags: string[];\n    notes: string;\n}\nexport interface ArchitectureMetrics {\n    totalComponents: number;\n    totalLayers: number;\n    complexity: number;\n    coupling: number;\n    cohesion: number;\n    maintainability: number;\n    testability: number;\n    scalability: number;\n    performance: number;\n    security: number;\n    lastAnalysisDate: Date;\n    analysisDuration: number;\n    qualityScore: number;\n}\nexport interface ArchitectureProps extends BaseEntityProps {\n    name: string;\n    type: ArchitectureType;\n    status: ArchitectureStatus;\n    organizationId: string;\n    description?: string;\n    settings: ArchitectureSettings;\n    metrics?: ArchitectureMetrics;\n    components: ArchitectureComponent[];\n    layers: ArchitectureLayer[];\n    lastAnalysisDate?: Date;\n    isActive: boolean;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\entities\\architecture.entity.d.ts",
        "start": 2,
        "end": 84,
        "startLoc": {
          "line": 2,
          "column": 1,
          "position": 16
        },
        "endLoc": {
          "line": 84,
          "column": 8,
          "position": 679
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\entities\\architecture.entity.ts",
        "start": 8,
        "end": 100,
        "startLoc": {
          "line": 8,
          "column": 1,
          "position": 37
        },
        "endLoc": {
          "line": 100,
          "column": 6,
          "position": 710
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "export interface PartitionInfo {\n    tableName: string;\n    partitionName: string;\n    partitionType: 'range' | 'list' | 'hash';\n    condition: string;\n    size: number;\n    rowCount: number;\n    lastAccessed: Date;\n    isActive: boolean;\n}\nexport interface PartitionStrategy {\n    tableName: string;\n    partitionKey: string;\n    partitionType: 'range' | 'list' | 'hash';\n    retentionPeriod: number;\n    autoCreate",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\db\\partitions\\partition-manager.service.d.ts",
        "start": 1,
        "end": 16,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 16,
          "column": 11,
          "position": 119
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\db\\partitions\\partition-manager.service.ts",
        "start": 11,
        "end": 26,
        "startLoc": {
          "line": 11,
          "column": 1,
          "position": 30
        },
        "endLoc": {
          "line": 26,
          "column": 8,
          "position": 149
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "autoCreate: boolean;\n    autoDrop: boolean;\n    schedule: 'daily' | 'weekly' | 'monthly' | 'quarterly';\n}\nexport interface PartitionMaintenance {\n    partitionName: string;\n    tableName: string;\n    lastVacuum: Date;\n    lastAnalyze: Date;\n    bloatRatio: number;\n    needsMaintenance: boolean;\n    compressionRatio: number;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\db\\partitions\\partition-manager.service.d.ts",
        "start": 16,
        "end": 29,
        "startLoc": {
          "line": 16,
          "column": 5,
          "position": 119
        },
        "endLoc": {
          "line": 29,
          "column": 8,
          "position": 214
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\db\\partitions\\partition-manager.service.ts",
        "start": 27,
        "end": 42,
        "startLoc": {
          "line": 27,
          "column": 3,
          "position": 152
        },
        "endLoc": {
          "line": 42,
          "column": 6,
          "position": 249
        }
      }
    },
    {
      "format": "typescript",
      "lines": 48,
      "fragment": "export interface IndexDefinition {\n    name: string;\n    table: string;\n    columns: string[];\n    type: 'btree' | 'hash' | 'gin' | 'gist' | 'spgist' | 'brin';\n    unique: boolean;\n    partial?: string;\n    include?: string[];\n    concurrent: boolean;\n}\nexport interface PartitionConfig {\n    table: string;\n    partitionKey: string;\n    partitionType: 'range' | 'list' | 'hash';\n    partitions: PartitionDefinition[];\n}\nexport interface PartitionDefinition {\n    name: string;\n    condition: string;\n    tablespace?: string;\n}\nexport interface QueryOptimization {\n    query: string;\n    originalPlan: any;\n    optimizedPlan: any;\n    improvement: number;\n    recommendations: string[];\n    executionTime: number;\n}\nexport interface DatabaseStats {\n    totalTables: number;\n    totalIndexes: number;\n    totalSize: number;\n    indexSize: number;\n    tableSize: number;\n    connectionCount: number;\n    activeQueries: number;\n    slowQueries: number;\n    cacheHitRatio: number;\n    lastVacuum: Date;\n    lastAnalyze: Date;\n}\nexport interface OptimizationConfig {\n    autoIndex: boolean;\n    autoVacuum: boolean;\n    autoAnalyze: boolean;\n    slowQueryThreshold: number;\n    maxConnections",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\db\\optimization\\database-optimizer.service.d.ts",
        "start": 1,
        "end": 48,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 48,
          "column": 15,
          "position": 350
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\db\\optimization\\database-optimizer.service.ts",
        "start": 11,
        "end": 62,
        "startLoc": {
          "line": 11,
          "column": 1,
          "position": 30
        },
        "endLoc": {
          "line": 62,
          "column": 6,
          "position": 384
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": ", {\n                error: error instanceof Error ? error.message : String(error)\n            });\n        }\n    }\n    stop() {\n        if (this.monitoringInterval) {\n            clearInterval(this.monitoringInterval);\n            this.monitoringInterval = null;\n        }\n        this.isMonitoring = false;\n        structuredLogger.info('Index manager monitoring stopped'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\db\\indexes\\index-manager.service.js",
        "start": 286,
        "end": 297,
        "startLoc": {
          "line": 286,
          "column": 26,
          "position": 2651
        },
        "endLoc": {
          "line": 297,
          "column": 35,
          "position": 2744
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\db\\partitions\\partition-manager.service.js",
        "start": 352,
        "end": 363,
        "startLoc": {
          "line": 352,
          "column": 30,
          "position": 3757
        },
        "endLoc": {
          "line": 363,
          "column": 39,
          "position": 3850
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": "export interface IndexUsage {\n    indexName: string;\n    tableName: string;\n    usageCount: number;\n    lastUsed: Date;\n    efficiency: number;\n    size: number;\n}\nexport interface IndexRecommendation {\n    table: string;\n    columns: string[];\n    type: 'btree' | 'hash' | 'gin' | 'gist' | 'spgist' | 'brin';\n    reason: string;\n    expectedImprovement: number;\n    priority: 'low' | 'medium' | 'high' | 'critical';\n}\nexport interface IndexMaintenance {\n    indexName: string;\n    tableName: string;\n    lastVacuum: Date;\n    lastReindex: Date;\n    bloatRatio: number;\n    needsMaintenance: boolean;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\db\\indexes\\index-manager.service.d.ts",
        "start": 1,
        "end": 25,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 25,
          "column": 8,
          "position": 192
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\db\\indexes\\index-manager.service.ts",
        "start": 11,
        "end": 38,
        "startLoc": {
          "line": 11,
          "column": 1,
          "position": 30
        },
        "endLoc": {
          "line": 38,
          "column": 6,
          "position": 225
        }
      }
    },
    {
      "format": "javascript",
      "lines": 21,
      "fragment": "if (process.env.APPLICATIONINSIGHTS_CONNECTION_STRING) {\n    try {\n        const { NodeSDK } = require('@opentelemetry/sdk-node');\n        const { getNodeAutoInstrumentations } = require('@opentelemetry/auto-instrumentations-node');\n        const { AzureMonitorTraceExporter } = require('@azure/monitor-opentelemetry-exporter');\n        const sdk = new NodeSDK({\n            traceExporter: new AzureMonitorTraceExporter({ connectionString: process.env.APPLICATIONINSIGHTS_CONNECTION_STRING }),\n            instrumentations: [getNodeAutoInstrumentations()]\n        });\n        sdk.start().catch(e => console.error('OTel start failed', e));\n        console.log('OpenTelemetry started');\n    }\n    catch (e) {\n        console.log('OpenTelemetry not configured or failed to init', e.message);\n    }\n}\nfunction createApp() {\n    const app = express();\n    app.use(helmet());\n    app.use(bodyParser.json({ limit: '2mb' }));\n    app",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\cockpit.api\\src\\app.js",
        "start": 4,
        "end": 24,
        "startLoc": {
          "line": 4,
          "column": 1,
          "position": 36
        },
        "endLoc": {
          "line": 24,
          "column": 4,
          "position": 273
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\cockpit.api\\src\\app.js",
        "start": 6,
        "end": 27,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 39
        },
        "endLoc": {
          "line": 27,
          "column": 10,
          "position": 277
        }
      }
    },
    {
      "format": "javascript",
      "lines": 17,
      "fragment": "if (process.env.APPLICATIONINSIGHTS_CONNECTION_STRING) {\n    try {\n        const { NodeSDK } = require('@opentelemetry/sdk-node');\n        const { getNodeAutoInstrumentations } = require('@opentelemetry/auto-instrumentations-node');\n        const { AzureMonitorTraceExporter } = require('@azure/monitor-opentelemetry-exporter');\n        const sdk = new NodeSDK({\n            traceExporter: new AzureMonitorTraceExporter({ connectionString: process.env.APPLICATIONINSIGHTS_CONNECTION_STRING }),\n            instrumentations: [getNodeAutoInstrumentations()]\n        });\n        sdk.start().catch(e => console.error('OTel start failed', e));\n        console.log('OpenTelemetry started');\n    }\n    catch (e) {\n        console.log('OpenTelemetry not configured or failed to init', e.message);\n    }\n}\n//# sourceMappingURL=app-otel-snippet.js.map",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\cockpit.api\\src\\app-otel-snippet.js",
        "start": 1,
        "end": 17,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 17,
          "column": 45,
          "position": 184
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\cockpit.api\\src\\app.js",
        "start": 6,
        "end": 22,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 39
        },
        "endLoc": {
          "line": 22,
          "column": 9,
          "position": 223
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "export interface BaseRequest {\n    organizationId: string;\n    createdBy?: string;\n    updatedBy?: string;\n}\nexport interface BaseResponse {\n    success: true;\n    data: any;\n    message?: string;\n}\nexport interface BaseError {\n    success: false;\n    error: {\n        code: string;\n        message: string;\n        details?: any;\n    };\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\use-cases\\base.use-case.d.ts",
        "start": 1,
        "end": 19,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 19,
          "column": 8,
          "position": 116
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\use-cases\\base.use-case.ts",
        "start": 5,
        "end": 26,
        "startLoc": {
          "line": 5,
          "column": 1,
          "position": 7
        },
        "endLoc": {
          "line": 26,
          "column": 9,
          "position": 126
        }
      }
    },
    {
      "format": "javascript",
      "lines": 18,
      "fragment": "});\n                results.push(result);\n            }\n            const allSuccessful = results.every(result => result.success);\n            return {\n                success: allSuccessful,\n                results\n            };\n        }\n        catch (error) {\n            return {\n                success: false,\n                results: [],\n                error: error instanceof Error ? error.message : 'Unknown error occurred'\n            };\n        }\n    }\n    async getOrganizationUserCount",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\services\\user.application.service.js",
        "start": 199,
        "end": 216,
        "startLoc": {
          "line": 199,
          "column": 17,
          "position": 1761
        },
        "endLoc": {
          "line": 216,
          "column": 25,
          "position": 1882
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\application\\services\\user.application.service.js",
        "start": 167,
        "end": 184,
        "startLoc": {
          "line": 167,
          "column": 17,
          "position": 1507
        },
        "endLoc": {
          "line": 184,
          "column": 16,
          "position": 1628
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": "(userId) {\n        try {\n            const user = await this.userRepository.findById(userId);\n            if (!user) {\n                return false;\n            }\n            user.recordLogin();\n            await this.userRepository.update(user);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    }\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\services\\user.application.service.js",
        "start": 239,
        "end": 253,
        "startLoc": {
          "line": 239,
          "column": 23,
          "position": 2065
        },
        "endLoc": {
          "line": 253,
          "column": 2,
          "position": 2165
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\application\\services\\user.application.service.js",
        "start": 225,
        "end": 239,
        "startLoc": {
          "line": 225,
          "column": 16,
          "position": 1961
        },
        "endLoc": {
          "line": 239,
          "column": 6,
          "position": 2062
        }
      }
    },
    {
      "format": "typescript",
      "lines": 32,
      "fragment": "export interface UserSearchOptions {\n    organizationId: string;\n    query?: string;\n    role?: string;\n    status?: string;\n    page?: number;\n    limit?: number;\n    sortBy?: 'name' | 'email' | 'createdAt' | 'lastLoginAt';\n    sortOrder?: 'asc' | 'desc';\n}\nexport interface UserListResponse {\n    users: User[];\n    total: number;\n    page: number;\n    limit: number;\n    totalPages: number;\n    hasNext: boolean;\n    hasPrevious: boolean;\n}\nexport interface UserStatsResponse {\n    total: number;\n    byRole: Record<string, number>;\n    byStatus: Record<string, number>;\n    active: number;\n    inactive: number;\n    lastLogin: {\n        today: number;\n        thisWeek: number;\n        thisMonth: number;\n    };\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\services\\user.application.service.d.ts",
        "start": 7,
        "end": 38,
        "startLoc": {
          "line": 7,
          "column": 1,
          "position": 87
        },
        "endLoc": {
          "line": 38,
          "column": 8,
          "position": 327
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\services\\user.application.service.ts",
        "start": 12,
        "end": 46,
        "startLoc": {
          "line": 12,
          "column": 1,
          "position": 104
        },
        "endLoc": {
          "line": 46,
          "column": 6,
          "position": 347
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "): Promise<void> {\n    try {\n      const jobData = await this.redis.hgetall(`job:${jobId}`);\n      \n      if (!jobData || Object.keys(jobData).length === 0) {\n        throw new Error(`Job ${jobId} not found`);\n      }\n\n      const job: Job = {\n        id: jobData.id,\n        type: jobData.type as Job['type'],\n        payload: JSON.parse(jobData.payload || '{}'),\n        organizationId: jobData.organizationId,\n        priority: jobData.priority as Job['priority'],\n        status: 'failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\workers\\src\\queues\\job-queue.ts",
        "start": 231,
        "end": 245,
        "startLoc": {
          "line": 231,
          "column": 7,
          "position": 2156
        },
        "endLoc": {
          "line": 245,
          "column": 9,
          "position": 2324
        }
      },
      "secondFile": {
        "name": "apps\\workers\\src\\queues\\job-queue.ts",
        "start": 166,
        "end": 129,
        "startLoc": {
          "line": 166,
          "column": 4,
          "position": 1494
        },
        "endLoc": {
          "line": 129,
          "column": 13,
          "position": 1153
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": "(jobId: string): Promise<Job | null> {\n    try {\n      const jobData = await this.redis.hgetall(`job:${jobId}`);\n      if (!jobData || Object.keys(jobData).length === 0) {\n        return null;\n      }\n      return {\n        id: jobData.id,\n        type: jobData.type as Job['type'],\n        payload: JSON.parse(jobData.payload || '{}'),\n        organizationId: jobData.organizationId,\n        priority: jobData.priority as Job['priority'],\n        status: jobData.status as Job['status'],\n        createdAt: jobData.createdAt,\n        startedAt: jobData.startedAt,\n        completedAt: jobData.completedAt,\n        retryCount: parseInt(jobData.retryCount || '0'),\n        maxRetries: parseInt(jobData.maxRetries || '3'),\n        error: jobData.error,\n        metadata: jobData.metadata ? JSON.parse(jobData.metadata) : undefined\n      };\n    } catch (error) {\n      logger.error('Failed to get job status'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\workers\\src\\queues\\job-queue-methods.ts",
        "start": 49,
        "end": 71,
        "startLoc": {
          "line": 49,
          "column": 13,
          "position": 502
        },
        "endLoc": {
          "line": 71,
          "column": 27,
          "position": 783
        }
      },
      "secondFile": {
        "name": "apps\\workers\\src\\queues\\job-queue.ts",
        "start": 314,
        "end": 338,
        "startLoc": {
          "line": 314,
          "column": 7,
          "position": 2907
        },
        "endLoc": {
          "line": 338,
          "column": 20,
          "position": 3191
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": "import { Request, Response, NextFunction } from 'express';\n\ninterface FinOpsHeaders {\n  'X-Est-Cost-EUR'?: string;\n  'X-Budget-Pct'?: string;\n  'X-Latency-ms'?: string;\n  'X-Route'?: string;\n  'X-Correlation-Id'?: string;\n}\n\nexport interface FinOpsRequest extends Request {\n  startTime?: number;\n  correlationId?: string;\n  estimatedCost?: number;\n  budgetPct?: number;\n}\n\n/**\n * Initialize FinOps tracking\n */\nexport const initFinOps = (req: FinOpsRequest, res: Response, next: NextFunction) => {\n  req.startTime = Date.now();\n  req.correlationId = req.header('x-correlation-id') || `agent-",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api-agents-make\\src\\middleware\\finops.ts",
        "start": 5,
        "end": 27,
        "startLoc": {
          "line": 5,
          "column": 1,
          "position": 3
        },
        "endLoc": {
          "line": 27,
          "column": 8,
          "position": 182
        }
      },
      "secondFile": {
        "name": "apps\\api-neura-comet\\src\\middleware\\finops.ts",
        "start": 5,
        "end": 27,
        "startLoc": {
          "line": 5,
          "column": 1,
          "position": 3
        },
        "endLoc": {
          "line": 27,
          "column": 8,
          "position": 182
        }
      }
    },
    {
      "format": "typescript",
      "lines": 32,
      "fragment": "${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n  req.estimatedCost = 0;\n  req.budgetPct = 0;\n  \n  next();\n};\n\n/**\n * Finalize FinOps headers\n */\nexport const finalizeFinOps = (req: FinOpsRequest, res: Response, next: NextFunction) => {\n  const latency = req.startTime ? Date.now() - req.startTime : 0;\n  \n  const headers: FinOpsHeaders = {\n    'X-Est-Cost-EUR': (req.estimatedCost || 0).toFixed(4),\n    'X-Budget-Pct': (req.budgetPct || 0).toFixed(2),\n    'X-Latency-ms': latency.toString(),\n    'X-Route': req.path,\n    'X-Correlation-Id': req.correlationId || 'unknown'\n  };\n  \n  // Set headers\n  Object.entries(headers).forEach(([key, value]) => {\n    if (value) res.setHeader(key, value);\n  });\n  \n  next();\n};\n\n/**\n * Calculate cost for Make.com webhook\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api-agents-make\\src\\middleware\\finops.ts",
        "start": 27,
        "end": 58,
        "startLoc": {
          "line": 27,
          "column": 8,
          "position": 183
        },
        "endLoc": {
          "line": 58,
          "column": 4,
          "position": 462
        }
      },
      "secondFile": {
        "name": "apps\\api-neura-comet\\src\\middleware\\finops.ts",
        "start": 27,
        "end": 58,
        "startLoc": {
          "line": 27,
          "column": 8,
          "position": 183
        },
        "endLoc": {
          "line": 58,
          "column": 4,
          "position": 462
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ";\n};\n\n/**\n * Budget guard middleware\n */\nexport const budgetGuard = (req: FinOpsRequest, res: Response, next: NextFunction) => {\n  const budgetPct = req.budgetPct || 0;\n  \n  if (budgetPct >= 90) {\n    return res.status(402).json({\n      error: 'Budget limit exceeded',\n      budgetPct,\n      message: 'Agent execution blocked due to budget constraints'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api-agents-make\\src\\middleware\\finops.ts",
        "start": 63,
        "end": 76,
        "startLoc": {
          "line": 63,
          "column": 19,
          "position": 515
        },
        "endLoc": {
          "line": 76,
          "column": 52,
          "position": 614
        }
      },
      "secondFile": {
        "name": "apps\\api-neura-comet\\src\\middleware\\finops.ts",
        "start": 67,
        "end": 80,
        "startLoc": {
          "line": 67,
          "column": 11,
          "position": 571
        },
        "endLoc": {
          "line": 80,
          "column": 44,
          "position": 670
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ",\n        'service.name': this.config.service.name,\n        'service.version': this.config.service.version,\n        ...options.attributes\n      }\n    });\n\n    // Registrar span activo\n    this.activeSpans.set(span.spanContext().spanId, span);\n    this.spanMetrics.totalSpans++;\n    this.spanMetrics.activeSpans++;\n\n    return span;\n  }\n\n  createBusinessSpan",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\services\\observability-otel.service.ts",
        "start": 362,
        "end": 377,
        "startLoc": {
          "line": 362,
          "column": 8,
          "position": 2717
        },
        "endLoc": {
          "line": 377,
          "column": 19,
          "position": 2813
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\observability-otel.service.ts",
        "start": 338,
        "end": 353,
        "startLoc": {
          "line": 338,
          "column": 6,
          "position": 2502
        },
        "endLoc": {
          "line": 353,
          "column": 22,
          "position": 2598
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ",\n        'service.name': this.config.service.name,\n        'service.version': this.config.service.version,\n        ...options.attributes\n      }\n    });\n\n    // Registrar span activo\n    this.activeSpans.set(span.spanContext().spanId, span);\n    this.spanMetrics.totalSpans++;\n    this.spanMetrics.activeSpans++;\n\n    return span;\n  }\n\n  // ========================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\services\\observability-otel.service.ts",
        "start": 385,
        "end": 400,
        "startLoc": {
          "line": 385,
          "column": 15,
          "position": 2925
        },
        "endLoc": {
          "line": 400,
          "column": 76,
          "position": 3021
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\observability-otel.service.ts",
        "start": 338,
        "end": 353,
        "startLoc": {
          "line": 338,
          "column": 6,
          "position": 2502
        },
        "endLoc": {
          "line": 353,
          "column": 22,
          "position": 2598
        }
      }
    },
    {
      "format": "typescript",
      "lines": 30,
      "fragment": "}\n\n  // ========================================================================\n  // CONTEXT PROPAGATION\n  // ========================================================================\n\n  getCurrentSpan(): Span | undefined {\n    return trace.getActiveSpan();\n  }\n\n  getCurrentTraceId(): string | undefined {\n    const span = this.getCurrentSpan();\n    return span?.spanContext().traceId;\n  }\n\n  getCurrentSpanId(): string | undefined {\n    const span = this.getCurrentSpan();\n    return span?.spanContext().spanId;\n  }\n\n  getTraceContext(): TraceContext | undefined {\n    const span = this.getCurrentSpan();\n    if (!span) return undefined;\n\n    const spanContext = span.spanContext();\n    return {\n      traceId: spanContext.traceId,\n      spanId: spanContext.spanId,\n      operation: span.name,\n      service: this",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\services\\observability-otel.service.ts",
        "start": 501,
        "end": 530,
        "startLoc": {
          "line": 501,
          "column": 3,
          "position": 3966
        },
        "endLoc": {
          "line": 530,
          "column": 5,
          "position": 4189
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\infrastructure\\observability\\tracing.service.ts",
        "start": 212,
        "end": 241,
        "startLoc": {
          "line": 212,
          "column": 3,
          "position": 1797
        },
        "endLoc": {
          "line": 241,
          "column": 15,
          "position": 2020
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ";\n        \n        span.setAttributes({\n          'http.status_code': res.statusCode,\n          'http.response_size': JSON.stringify(res.locals.responseBody || {}).length,\n          'performance.duration_ms': duration\n        });\n        \n        if (res.statusCode >= 400) {\n          span.setStatus({\n            code: SpanStatusCode.ERROR,\n            message: `HTTP ${res.statusCode}`\n          });\n        }",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\services\\observability-otel.service.ts",
        "start": 723,
        "end": 736,
        "startLoc": {
          "line": 723,
          "column": 2,
          "position": 5826
        },
        "endLoc": {
          "line": 736,
          "column": 2,
          "position": 5931
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\observability-otel.service.ts",
        "start": 464,
        "end": 477,
        "startLoc": {
          "line": 464,
          "column": 10,
          "position": 3622
        },
        "endLoc": {
          "line": 477,
          "column": 5,
          "position": 3727
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "});\n        \n        if (res.statusCode >= 400) {\n          span.setStatus({\n            code: SpanStatusCode.ERROR,\n            message: `HTTP ${res.statusCode}`\n          });\n        } else {\n          span.setStatus({ code: SpanStatusCode.OK });\n        }\n        \n        this",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\services\\observability-otel.service.ts",
        "start": 729,
        "end": 740,
        "startLoc": {
          "line": 729,
          "column": 9,
          "position": 5876
        },
        "endLoc": {
          "line": 740,
          "column": 5,
          "position": 5961
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\infrastructure\\observability\\tracing.service.ts",
        "start": 265,
        "end": 276,
        "startLoc": {
          "line": 265,
          "column": 9,
          "position": 2209
        },
        "endLoc": {
          "line": 276,
          "column": 5,
          "position": 2294
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "'service.name': this.config.service.name,\n        'service.version': this.config.service.version,\n        ...options.attributes\n      }\n    });\n\n    // Registrar span activo\n    this.activeSpans.set(span.spanContext().spanId, span);\n    this.spanMetrics.totalSpans++;\n    this.spanMetrics.activeSpans++;\n\n    return span;\n  }\n\n  traceError",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\services\\observability-otel.service.ts",
        "start": 758,
        "end": 772,
        "startLoc": {
          "line": 758,
          "column": 9,
          "position": 6110
        },
        "endLoc": {
          "line": 772,
          "column": 11,
          "position": 6203
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\observability-otel.service.ts",
        "start": 339,
        "end": 353,
        "startLoc": {
          "line": 339,
          "column": 9,
          "position": 2505
        },
        "endLoc": {
          "line": 353,
          "column": 22,
          "position": 2598
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "traceError(error: Error, context: Record<string, any> = {}): void {\n    const span = this.getCurrentSpan();\n    if (span) {\n      span.recordException(error);\n      span.setAttributes({\n        'error.name': error.name,\n        'error.message': error.message,\n        'error.stack': error.stack || '',\n        ...context\n      });\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: error.message\n      });\n    }\n    \n    // Registrar error en métricas",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\services\\observability-otel.service.ts",
        "start": 772,
        "end": 788,
        "startLoc": {
          "line": 772,
          "column": 3,
          "position": 6203
        },
        "endLoc": {
          "line": 788,
          "column": 31,
          "position": 6347
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\infrastructure\\observability\\tracing.service.ts",
        "start": 347,
        "end": 362,
        "startLoc": {
          "line": 347,
          "column": 3,
          "position": 2786
        },
        "endLoc": {
          "line": 362,
          "column": 2,
          "position": 2928
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "traceBusinessOperation(operation: string, organizationId: string, context: Record<string, any> = {}): Span {\n    const span = this.createBusinessSpan(operation, organizationId);\n    \n    span.setAttributes({\n      'business.operation': operation,\n      'organization.id': organizationId,\n      ...context\n    });\n    \n    return span;\n  }\n}\n\n// ============================================================================\n// SINGLETON INSTANCE\n// ============================================================================\n\nexport const observabilityOTelService",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\services\\observability-otel.service.ts",
        "start": 794,
        "end": 811,
        "startLoc": {
          "line": 794,
          "column": 3,
          "position": 6415
        },
        "endLoc": {
          "line": 811,
          "column": 25,
          "position": 6526
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\infrastructure\\observability\\tracing.service.ts",
        "start": 368,
        "end": 385,
        "startLoc": {
          "line": 368,
          "column": 3,
          "position": 2942
        },
        "endLoc": {
          "line": 385,
          "column": 8,
          "position": 3053
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ",\n      };\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        throw new Error(`Validation error: ${error.errors.map(e => e.message).join(', ')}`);\n      }\n      throw error;\n    }\n  }\n\n  async getMemoryStats",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\services\\memory.service.ts",
        "start": 42,
        "end": 52,
        "startLoc": {
          "line": 42,
          "column": 7,
          "position": 373
        },
        "endLoc": {
          "line": 52,
          "column": 15,
          "position": 455
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\memory.service.ts",
        "start": 20,
        "end": 30,
        "startLoc": {
          "line": 20,
          "column": 2,
          "position": 181
        },
        "endLoc": {
          "line": 30,
          "column": 12,
          "position": 263
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ");\n      \n      const responseTime = Date.now() - startTime;\n      this.updateHealthCheck(providerId, 'healthy', responseTime);\n      \n      return data;\n    } catch (error) {\n      this.updateHealthCheck(providerId, 'down', 0, true);\n      throw error;\n    }\n  }\n\n  async getWeatherForecast",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\services\\external-integrations.service.ts",
        "start": 355,
        "end": 367,
        "startLoc": {
          "line": 355,
          "column": 9,
          "position": 3219
        },
        "endLoc": {
          "line": 367,
          "column": 19,
          "position": 3310
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\external-integrations.service.ts",
        "start": 297,
        "end": 309,
        "startLoc": {
          "line": 297,
          "column": 7,
          "position": 2702
        },
        "endLoc": {
          "line": 309,
          "column": 19,
          "position": 2793
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ");\n      \n      const responseTime = Date.now() - startTime;\n      this.updateHealthCheck(providerId, 'healthy', responseTime);\n      \n      return data;\n    } catch (error) {\n      this.updateHealthCheck(providerId, 'down', 0, true);\n      throw error;\n    }\n  }\n\n  // ============================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\services\\external-integrations.service.ts",
        "start": 381,
        "end": 393,
        "startLoc": {
          "line": 381,
          "column": 5,
          "position": 3467
        },
        "endLoc": {
          "line": 393,
          "column": 80,
          "position": 3556
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\external-integrations.service.ts",
        "start": 297,
        "end": 309,
        "startLoc": {
          "line": 297,
          "column": 7,
          "position": 2702
        },
        "endLoc": {
          "line": 309,
          "column": 6,
          "position": 2791
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ": Map<string, Set<string>> = new Map();\n  private searchCache: Map<string, any> = new Map();\n  private readonly CACHE_TTL = 5 * 60 * 1000; // 5 minutes\n\n  constructor() {\n    this.db = getDatabaseService();\n    this.initializeService();\n  }\n\n  private async initializeService(): Promise<void> {\n    try {\n      structuredLogger.info('Initializing Content Management Service'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\services\\content-management.service.ts",
        "start": 163,
        "end": 174,
        "startLoc": {
          "line": 163,
          "column": 13,
          "position": 1971
        },
        "endLoc": {
          "line": 174,
          "column": 42,
          "position": 2096
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\document-management.service.ts",
        "start": 145,
        "end": 156,
        "startLoc": {
          "line": 145,
          "column": 14,
          "position": 1664
        },
        "endLoc": {
          "line": 156,
          "column": 43,
          "position": 1789
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "[];\n    total: number;\n    page: number;\n    limit: number;\n  }> {\n    try {\n      const cacheKey = `search:${organizationId}:${JSON.stringify(searchParams)}`;\n      const cached = this.searchCache.get(cacheKey);\n      \n      if (cached && Date.now() - cached.timestamp < this.CACHE_TTL) {\n        return cached.result;\n      }\n\n      let contents",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\services\\content-management.service.ts",
        "start": 554,
        "end": 567,
        "startLoc": {
          "line": 554,
          "column": 8,
          "position": 4520
        },
        "endLoc": {
          "line": 567,
          "column": 9,
          "position": 4642
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\document-management.service.ts",
        "start": 485,
        "end": 498,
        "startLoc": {
          "line": 485,
          "column": 9,
          "position": 3826
        },
        "endLoc": {
          "line": 498,
          "column": 10,
          "position": 3948
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ".slice(startIndex, endIndex),\n        total,\n        page,\n        limit\n      };\n\n      // Cache result\n      this.searchCache.set(cacheKey, {\n        result,\n        timestamp: Date.now()\n      });\n\n      return result;\n    } catch (error) {\n      structuredLogger.error('Failed to search content'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\services\\content-management.service.ts",
        "start": 673,
        "end": 687,
        "startLoc": {
          "line": 673,
          "column": 9,
          "position": 5855
        },
        "endLoc": {
          "line": 687,
          "column": 27,
          "position": 5938
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\document-management.service.ts",
        "start": 598,
        "end": 612,
        "startLoc": {
          "line": 598,
          "column": 10,
          "position": 5030
        },
        "endLoc": {
          "line": 612,
          "column": 29,
          "position": 5113
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "${request.prompt}`,\n      usage: {\n        promptTokens: Math.floor(Math.random() * 50) + 25,\n        completionTokens: Math.floor(Math.random() * 50) + 25,\n        totalTokens: 0\n      },\n      timestamp: new Date()\n    };\n  }\n\n  private generateDemoTTSResponse",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\services\\azure-openai.service.ts",
        "start": 318,
        "end": 328,
        "startLoc": {
          "line": 318,
          "column": 8,
          "position": 2673
        },
        "endLoc": {
          "line": 328,
          "column": 24,
          "position": 2766
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\azure-openai.service.ts",
        "start": 257,
        "end": 267,
        "startLoc": {
          "line": 257,
          "column": 12,
          "position": 2081
        },
        "endLoc": {
          "line": 267,
          "column": 6,
          "position": 2174
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "{\n        id: row.id,\n        name: row.name,\n        description: row.description,\n        type: row.type,\n        rules: row.rules,\n        severity: row.severity,\n        isActive: row.is_active,\n        createdAt: row.created_at,\n        updatedAt: row.updated_at\n      }))",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\services\\ai-security-compliance.service.ts",
        "start": 311,
        "end": 321,
        "startLoc": {
          "line": 311,
          "column": 2,
          "position": 2596
        },
        "endLoc": {
          "line": 321,
          "column": 2,
          "position": 2681
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\ai-security-compliance.service.ts",
        "start": 218,
        "end": 228,
        "startLoc": {
          "line": 218,
          "column": 2,
          "position": 1709
        },
        "endLoc": {
          "line": 228,
          "column": 2,
          "position": 1794
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ".size >= 0\n      };\n\n      const healthyServices = Object.values(services).filter(Boolean).length;\n      const totalServices = Object.keys(services).length;\n      \n      let status: 'healthy' | 'degraded' | 'unhealthy';\n      if (healthyServices === totalServices) {\n        status = 'healthy';\n      } else if (healthyServices >= totalServices * 0.5) {\n        status = 'degraded';\n      } else {\n        status = 'unhealthy';\n      }\n\n      return {\n        status,\n        services,\n        lastCheck: new Date()\n      };\n    } catch (error: any) {\n      logger.error('Health check failed', { error: error.message });\n      return {\n        status: 'unhealthy',\n        services: { database: false, monitoring",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\services\\ai-performance-optimization.service.ts",
        "start": 878,
        "end": 902,
        "startLoc": {
          "line": 878,
          "column": 12,
          "position": 7457
        },
        "endLoc": {
          "line": 902,
          "column": 11,
          "position": 7682
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\ai-security-compliance.service.ts",
        "start": 889,
        "end": 913,
        "startLoc": {
          "line": 889,
          "column": 16,
          "position": 7561
        },
        "endLoc": {
          "line": 913,
          "column": 9,
          "position": 7786
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ": false },\n        lastCheck: new Date()\n      };\n    }\n  }\n\n  private async checkDatabaseHealth(): Promise<boolean> {\n    try {\n      await this.db.query('SELECT 1');\n      return true;\n    } catch {\n      return false;\n    }\n  }\n}\n\nexport const aiPerformanceOptimizationService",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\services\\ai-performance-optimization.service.ts",
        "start": 902,
        "end": 918,
        "startLoc": {
          "line": 902,
          "column": 7,
          "position": 7689
        },
        "endLoc": {
          "line": 918,
          "column": 33,
          "position": 7784
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\ai-security-compliance.service.ts",
        "start": 913,
        "end": 929,
        "startLoc": {
          "line": 913,
          "column": 11,
          "position": 7793
        },
        "endLoc": {
          "line": 929,
          "column": 28,
          "position": 7888
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "> = new Map();\n  private isInitialized: boolean = false;\n\n  constructor() {\n    this.db = getDatabaseService();\n    this.initializeService();\n  }\n\n  private async initializeService(): Promise<void> {\n    try {\n      structuredLogger.info('Initializing AI Model Management Service'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\services\\ai-model-management.service.ts",
        "start": 197,
        "end": 207,
        "startLoc": {
          "line": 197,
          "column": 12,
          "position": 1487
        },
        "endLoc": {
          "line": 207,
          "column": 43,
          "position": 1570
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\ai-training.service.ts",
        "start": 126,
        "end": 136,
        "startLoc": {
          "line": 126,
          "column": 17,
          "position": 1005
        },
        "endLoc": {
          "line": 136,
          "column": 44,
          "position": 1088
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "import { z } from 'zod';\nimport { logger } from '../lib/logger.js';\nimport { db } from '../lib/db.js';\nimport { eq, desc, gte, and } from 'drizzle-orm';\nimport { \n  aiCostOptimization, \n  aiCostPrediction, \n  aiAnalytics, \n  aiModelManagement,\n  aiTrainingJobs,\n  aiSecurityCompliance,\n  aiPerformanceOptimization\n} from '../lib/schema.js';\n\n// Schemas de validación\nconst DashboardMetricsSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\services\\ai-dashboard-consolidation.service.ts",
        "start": 1,
        "end": 16,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 16,
          "column": 23,
          "position": 108
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\cockpit-integration.service.ts",
        "start": 1,
        "end": 16,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 16,
          "column": 26,
          "position": 108
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ");\n\n    return {\n      department: input.department,\n      timestamp: now,\n      agents,\n      kpis: {\n        totalCost: costMetrics.totalCost,\n        totalTokens: costMetrics.totalTokens,\n        averageLatency: costMetrics.averageLatency,\n        successRate: costMetrics.successRate,\n        activeAgents: agents.filter(a => a.status === 'active').length,\n        errorRate: costMetrics.errorRate,\n      },\n      timeline",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\services\\ai-dashboard-consolidation.service.ts",
        "start": 283,
        "end": 297,
        "startLoc": {
          "line": 283,
          "column": 6,
          "position": 2338
        },
        "endLoc": {
          "line": 297,
          "column": 9,
          "position": 2447
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\ai-dashboard-consolidation.service.ts",
        "start": 251,
        "end": 265,
        "startLoc": {
          "line": 251,
          "column": 11,
          "position": 2064
        },
        "endLoc": {
          "line": 265,
          "column": 12,
          "position": 2173
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": "const costData = await db.select()\n        .from(aiCostOptimization)\n        .where(and(\n          eq(aiCostOptimization.department, department),\n          gte(aiCostOptimization.createdAt, since)\n        ))\n        .orderBy(desc(aiCostOptimization.createdAt))\n        .limit(100);\n\n      const totalCost = costData.reduce((sum, record) => sum + (record.costSavings || 0), 0);\n      const totalTokens = costData.reduce((sum, record) => sum + (record.tokensUsed || 0), 0);\n      const averageLatency = costData.reduce((sum, record) => sum + (record.latencyMs || 0), 0) / costData.length || 0;\n      const successRate = costData.filter(r => r.status === 'success').length / costData.length || 0;\n      const errorRate = costData.filter(r => r.status === 'error').length / costData.length || 0;\n\n      return {\n        totalCost,\n        totalTokens,\n        averageLatency,\n        successRate,\n        errorRate,\n      };\n    } catch (error) {\n      logger.error('Error getting cost metrics'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\services\\ai-dashboard-consolidation.service.ts",
        "start": 307,
        "end": 330,
        "startLoc": {
          "line": 307,
          "column": 7,
          "position": 2491
        },
        "endLoc": {
          "line": 330,
          "column": 29,
          "position": 2814
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\cockpit-integration.service.ts",
        "start": 435,
        "end": 458,
        "startLoc": {
          "line": 435,
          "column": 7,
          "position": 3719
        },
        "endLoc": {
          "line": 458,
          "column": 26,
          "position": 4042
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ";\n      }\n\n      const latest = predictionData[0];\n      return {\n        costForecast: {\n          optimistic: latest.optimisticForecast || 0,\n          base: latest.baseForecast || 0,\n          pessimistic: latest.pessimisticForecast || 0,\n        },\n        usageForecast: {\n          tokens: latest.predictedTokens || 0,\n          calls: latest.predictedCalls || 0,\n        },\n        confidence: latest.confidenceScore || 0,\n      };\n    } catch (error) {\n      logger.error('Error getting prediction metrics'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\services\\ai-dashboard-consolidation.service.ts",
        "start": 353,
        "end": 370,
        "startLoc": {
          "line": 353,
          "column": 10,
          "position": 2979
        },
        "endLoc": {
          "line": 370,
          "column": 35,
          "position": 3121
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\cockpit-integration.service.ts",
        "start": 485,
        "end": 502,
        "startLoc": {
          "line": 485,
          "column": 2,
          "position": 4263
        },
        "endLoc": {
          "line": 502,
          "column": 32,
          "position": 4405
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "(department: string) {\n    try {\n      const optimizationData = await db.select()\n        .from(aiCostOptimization)\n        .where(eq(aiCostOptimization.department, department))\n        .orderBy(desc(aiCostOptimization.createdAt))\n        .limit(10);\n\n      const activeRules = optimizationData.filter(r => r.status === 'active').length;\n      const savings = optimizationData.reduce((sum, r) => sum + (r.costSavings || 0), 0);\n      const recommendations = optimizationData\n        .filter(r => r.recommendations)\n        .map(r => r.recommendations)\n        .slice(0, 5);\n\n      return {\n        activeRules,\n        savings,\n        recommendations: recommendations as string[],\n      };\n    } catch (error) {\n      logger.error('Error getting optimization metrics'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\services\\ai-dashboard-consolidation.service.ts",
        "start": 378,
        "end": 399,
        "startLoc": {
          "line": 378,
          "column": 23,
          "position": 3157
        },
        "endLoc": {
          "line": 399,
          "column": 37,
          "position": 3388
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\cockpit-integration.service.ts",
        "start": 514,
        "end": 535,
        "startLoc": {
          "line": 514,
          "column": 20,
          "position": 4497
        },
        "endLoc": {
          "line": 535,
          "column": 34,
          "position": 4728
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ";\n      }\n\n      const latest = securityData[0];\n      return {\n        complianceScore: latest.complianceScore || 0,\n        activePolicies: latest.activePolicies || 0,\n        incidents: latest.securityIncidents || 0,\n        lastAudit: latest.lastAuditDate || new Date(),\n      };\n    } catch (error) {\n      logger.error('Error getting security metrics'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\services\\ai-dashboard-consolidation.service.ts",
        "start": 416,
        "end": 427,
        "startLoc": {
          "line": 416,
          "column": 10,
          "position": 3515
        },
        "endLoc": {
          "line": 427,
          "column": 33,
          "position": 3615
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\cockpit-integration.service.ts",
        "start": 561,
        "end": 572,
        "startLoc": {
          "line": 561,
          "column": 2,
          "position": 4915
        },
        "endLoc": {
          "line": 572,
          "column": 30,
          "position": 5015
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "}\n\n  /**\n   * Convierte timeframe a milisegundos\n   */\n  private getTimeframeMs(timeframe: string): number {\n    switch (timeframe) {\n      case '1h': return 60 * 60 * 1000;\n      case '24h': return 24 * 60 * 60 * 1000;\n      case '7d': return 7 * 24 * 60 * 60 * 1000;\n      case '30d': return 30 * 24 * 60 * 60 * 1000;\n      default: return 24 * 60 * 60 * 1000;\n    }\n  }\n\n  /**\n   * Notifica a conexiones WebSocket\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\services\\ai-dashboard-consolidation.service.ts",
        "start": 524,
        "end": 541,
        "startLoc": {
          "line": 524,
          "column": 3,
          "position": 4535
        },
        "endLoc": {
          "line": 541,
          "column": 6,
          "position": 4691
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\cockpit-integration.service.ts",
        "start": 699,
        "end": 713,
        "startLoc": {
          "line": 699,
          "column": 3,
          "position": 5890
        },
        "endLoc": {
          "line": 713,
          "column": 2,
          "position": 6044
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "{\n        id: row.id,\n        name: row.name,\n        description: row.description,\n        type: row.type,\n        algorithm: row.algorithm,\n        features: row.features,\n        hyperparameters: row.hyperparameters,\n        accuracy: parseFloat(row.accuracy),\n        mae: parseFloat(row.mae),\n        mse: parseFloat(row.mse),\n        rmse: parseFloat(row.rmse),\n        r2Score: parseFloat(row.r2_score),\n        isActive: row.is_active,\n        lastTrained: row.last_trained,\n        createdAt: row.created_at,\n        updatedAt: row.updated_at\n      }))",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\services\\ai-cost-prediction.service.ts",
        "start": 346,
        "end": 363,
        "startLoc": {
          "line": 346,
          "column": 2,
          "position": 2879
        },
        "endLoc": {
          "line": 363,
          "column": 2,
          "position": 3042
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\ai-cost-prediction.service.ts",
        "start": 228,
        "end": 245,
        "startLoc": {
          "line": 228,
          "column": 2,
          "position": 1868
        },
        "endLoc": {
          "line": 245,
          "column": 2,
          "position": 2031
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": "};\n\n      const healthyServices = Object.values(services).filter(Boolean).length;\n      const totalServices = Object.keys(services).length;\n      \n      let status: 'healthy' | 'degraded' | 'unhealthy';\n      if (healthyServices === totalServices) {\n        status = 'healthy';\n      } else if (healthyServices >= totalServices * 0.5) {\n        status = 'degraded';\n      } else {\n        status = 'unhealthy';\n      }\n\n      return {\n        status,\n        services,\n        lastCheck: new Date()\n      };\n    } catch (error: any) {\n      logger.error('Health check failed', { error: error.message });\n      return {\n        status: 'unhealthy',\n        services: { database: false, models",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\services\\ai-cost-prediction.service.ts",
        "start": 943,
        "end": 966,
        "startLoc": {
          "line": 943,
          "column": 7,
          "position": 8582
        },
        "endLoc": {
          "line": 966,
          "column": 7,
          "position": 8799
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\basic-ai\\basic-ai.service.ts",
        "start": 484,
        "end": 913,
        "startLoc": {
          "line": 484,
          "column": 5,
          "position": 3708
        },
        "endLoc": {
          "line": 913,
          "column": 9,
          "position": 7786
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ": false },\n        lastCheck: new Date()\n      };\n    }\n  }\n\n  private async checkDatabaseHealth(): Promise<boolean> {\n    try {\n      await this.db.query('SELECT 1');\n      return true;\n    } catch {\n      return false;\n    }\n  }\n}\n\nexport const aiCostPredictionService",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\services\\ai-cost-prediction.service.ts",
        "start": 966,
        "end": 982,
        "startLoc": {
          "line": 966,
          "column": 11,
          "position": 8812
        },
        "endLoc": {
          "line": 982,
          "column": 24,
          "position": 8907
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\ai-security-compliance.service.ts",
        "start": 913,
        "end": 929,
        "startLoc": {
          "line": 913,
          "column": 11,
          "position": 7793
        },
        "endLoc": {
          "line": 929,
          "column": 28,
          "position": 7888
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", {\n        error: error instanceof Error ? error.message : String(error)\n      });\n    }\n  }\n\n  private cleanupExpiredSessions(): void {\n    const now = new Date();\n    const expiredSessions: string[] = [];\n\n    for (const [sessionId, session] of this.activeSessions.entries()) {\n      if",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\security\\mfa.service.ts",
        "start": 773,
        "end": 784,
        "startLoc": {
          "line": 773,
          "column": 24,
          "position": 5595
        },
        "endLoc": {
          "line": 784,
          "column": 3,
          "position": 5704
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\security\\security-manager.service.ts",
        "start": 776,
        "end": 787,
        "startLoc": {
          "line": 776,
          "column": 29,
          "position": 5826
        },
        "endLoc": {
          "line": 787,
          "column": 6,
          "position": 5935
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      body: req.body\n    });\n\n    if (error instanceof z.ZodError) {\n      res.status(400).json({\n        success: false,\n        error: 'Invalid request data',\n        details: error.errors,\n        timestamp: new Date().toISOString()\n      });\n    } else {\n      res.status(500).json({\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error',\n        timestamp: new Date().toISOString()\n      });\n    }\n  }\n});\n\n/**\n * Manage cron jobs\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\workers-integration.ts",
        "start": 137,
        "end": 161,
        "startLoc": {
          "line": 137,
          "column": 53,
          "position": 1200
        },
        "endLoc": {
          "line": 161,
          "column": 4,
          "position": 1385
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\workers-integration.ts",
        "start": 71,
        "end": 95,
        "startLoc": {
          "line": 71,
          "column": 47,
          "position": 645
        },
        "endLoc": {
          "line": 95,
          "column": 4,
          "position": 830
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ",\n          result: result.result,\n          serviceId: result.serviceId,\n          responseTime: result.responseTime\n        },\n        timestamp: new Date().toISOString()\n      });\n    } else {\n      res.status(500).json({\n        success: false,\n        error: result.error,\n        jobId",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\workers-integration.ts",
        "start": 179,
        "end": 190,
        "startLoc": {
          "line": 179,
          "column": 7,
          "position": 1538
        },
        "endLoc": {
          "line": 190,
          "column": 6,
          "position": 1625
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\workers-integration.ts",
        "start": 54,
        "end": 65,
        "startLoc": {
          "line": 54,
          "column": 10,
          "position": 510
        },
        "endLoc": {
          "line": 65,
          "column": 10,
          "position": 597
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      body: req.body\n    });\n\n    if (error instanceof z.ZodError) {\n      res.status(400).json({\n        success: false,\n        error: 'Invalid request data',\n        details: error.errors,\n        timestamp: new Date().toISOString()\n      });\n    } else {\n      res.status(500).json({\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error',\n        timestamp: new Date().toISOString()\n      });\n    }\n  }\n});\n\n/**\n * Get workers health status\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\workers-integration.ts",
        "start": 196,
        "end": 220,
        "startLoc": {
          "line": 196,
          "column": 49,
          "position": 1673
        },
        "endLoc": {
          "line": 220,
          "column": 4,
          "position": 1858
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\workers-integration.ts",
        "start": 71,
        "end": 95,
        "startLoc": {
          "line": 71,
          "column": 47,
          "position": 645
        },
        "endLoc": {
          "line": 95,
          "column": 4,
          "position": 830
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error'\n    });\n\n    res.status(500).json({\n      success: false,\n      error: error instanceof Error ? error.message : 'Unknown error',\n      timestamp: new Date().toISOString()\n    });\n  }\n});\n\n/**\n * Webhook endpoint for receiving events from workers\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\workers-integration.ts",
        "start": 262,
        "end": 276,
        "startLoc": {
          "line": 262,
          "column": 39,
          "position": 2186
        },
        "endLoc": {
          "line": 276,
          "column": 4,
          "position": 2283
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\workers-integration.ts",
        "start": 236,
        "end": 250,
        "startLoc": {
          "line": 236,
          "column": 36,
          "position": 1989
        },
        "endLoc": {
          "line": 250,
          "column": 4,
          "position": 2086
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ",\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Error getting supplier performance', { error });\n    res.status(400).json({\n      success: false,\n      error: 'Invalid request data',\n      details: error.errors\n    });\n  }\n});\n\n// Comparison Management",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\supplier-scorecard.ts",
        "start": 308,
        "end": 321,
        "startLoc": {
          "line": 308,
          "column": 12,
          "position": 3659
        },
        "endLoc": {
          "line": 321,
          "column": 25,
          "position": 3754
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\supplier-scorecard.ts",
        "start": 279,
        "end": 292,
        "startLoc": {
          "line": 279,
          "column": 2,
          "position": 3365
        },
        "endLoc": {
          "line": 292,
          "column": 24,
          "position": 3460
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "),\n  startDate: z.string().datetime(),\n  endDate: z.string().datetime(),\n  generatedBy: z.string().min(1),\n});\n\nconst GetStatsSchema = z.object({\n  organizationId: z.string().min(1),\n});\n\n// Routes",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\stripe-receipts.ts",
        "start": 72,
        "end": 82,
        "startLoc": {
          "line": 72,
          "column": 2,
          "position": 936
        },
        "endLoc": {
          "line": 82,
          "column": 10,
          "position": 1023
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\supplier-scorecard.ts",
        "start": 134,
        "end": 144,
        "startLoc": {
          "line": 134,
          "column": 2,
          "position": 2127
        },
        "endLoc": {
          "line": 144,
          "column": 6,
          "position": 2214
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ");\n    \n    if (!receipt) {\n      return res.status(404).json({\n        success: false,\n        error: 'Receipt not found'\n      });\n    }\n    \n    res.json({\n      success: true,\n      data: receipt,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Error reconciling Stripe receipt'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\stripe-receipts.ts",
        "start": 190,
        "end": 205,
        "startLoc": {
          "line": 190,
          "column": 5,
          "position": 1959
        },
        "endLoc": {
          "line": 205,
          "column": 35,
          "position": 2067
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\stripe-receipts.ts",
        "start": 113,
        "end": 128,
        "startLoc": {
          "line": 113,
          "column": 3,
          "position": 1310
        },
        "endLoc": {
          "line": 128,
          "column": 31,
          "position": 1418
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ",\n      reportData.startDate,\n      reportData.endDate,\n      reportData.generatedBy\n    );\n    \n    res.status(201).json({\n      success: true,\n      data: report,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Error generating reconciliation report'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\stripe-receipts.ts",
        "start": 285,
        "end": 297,
        "startLoc": {
          "line": 285,
          "column": 15,
          "position": 2792
        },
        "endLoc": {
          "line": 297,
          "column": 41,
          "position": 2878
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\supplier-scorecard.ts",
        "start": 377,
        "end": 389,
        "startLoc": {
          "line": 377,
          "column": 11,
          "position": 4307
        },
        "endLoc": {
          "line": 389,
          "column": 35,
          "position": 4393
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ",\n      organizationId: req.user?.organizationId\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to update social account'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\social-media-management.ts",
        "start": 281,
        "end": 295,
        "startLoc": {
          "line": 281,
          "column": 3,
          "position": 2861
        },
        "endLoc": {
          "line": 295,
          "column": 34,
          "position": 2963
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\social-media-management.ts",
        "start": 172,
        "end": 186,
        "startLoc": {
          "line": 172,
          "column": 16,
          "position": 1994
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      organizationId: req.user?.organizationId\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to create social post'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\social-media-management.ts",
        "start": 363,
        "end": 378,
        "startLoc": {
          "line": 363,
          "column": 39,
          "position": 3452
        },
        "endLoc": {
          "line": 378,
          "column": 31,
          "position": 3577
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\social-media-management.ts",
        "start": 171,
        "end": 186,
        "startLoc": {
          "line": 171,
          "column": 42,
          "position": 1971
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      organizationId: req.user?.organizationId\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to list social posts'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\social-media-management.ts",
        "start": 407,
        "end": 422,
        "startLoc": {
          "line": 407,
          "column": 38,
          "position": 3836
        },
        "endLoc": {
          "line": 422,
          "column": 30,
          "position": 3961
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\social-media-management.ts",
        "start": 171,
        "end": 186,
        "startLoc": {
          "line": 171,
          "column": 42,
          "position": 1971
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ": req.params.id,\n      organizationId: req.user?.organizationId\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to update social post'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\social-media-management.ts",
        "start": 484,
        "end": 498,
        "startLoc": {
          "line": 484,
          "column": 7,
          "position": 4453
        },
        "endLoc": {
          "line": 498,
          "column": 31,
          "position": 4562
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\social-media-management.ts",
        "start": 281,
        "end": 186,
        "startLoc": {
          "line": 281,
          "column": 10,
          "position": 2854
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "]),\n  startDate: z.string().datetime(),\n  endDate: z.string().datetime(),\n  generatedBy: z.string().min(1),\n});\n\nconst GetStatsSchema = z.object({\n  organizationId: z.string().min(1),\n});\n\n// Routes\n\n// Transaction Management",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\sepa-robust.ts",
        "start": 86,
        "end": 98,
        "startLoc": {
          "line": 86,
          "column": 20,
          "position": 1333
        },
        "endLoc": {
          "line": 98,
          "column": 26,
          "position": 1424
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\supplier-scorecard.ts",
        "start": 134,
        "end": 84,
        "startLoc": {
          "line": 134,
          "column": 17,
          "position": 2126
        },
        "endLoc": {
          "line": 84,
          "column": 55,
          "position": 1026
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "(\n      reportData.organizationId,\n      reportData.reportType,\n      reportData.startDate,\n      reportData.endDate,\n      reportData.generatedBy\n    );\n    \n    res.status(201).json({\n      success: true,\n      data: report,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Error generating SEPA robust report'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\sepa-robust.ts",
        "start": 264,
        "end": 278,
        "startLoc": {
          "line": 264,
          "column": 15,
          "position": 2870
        },
        "endLoc": {
          "line": 278,
          "column": 38,
          "position": 2968
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\supplier-scorecard.ts",
        "start": 375,
        "end": 389,
        "startLoc": {
          "line": 375,
          "column": 23,
          "position": 4295
        },
        "endLoc": {
          "line": 389,
          "column": 35,
          "position": 4393
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ");\n    \n    if (!document) {\n      return res.status(404).json({\n        success: false,\n        error: 'Document not found'\n      });\n    }\n    \n    res.json({\n      success: true,\n      data: document,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Error updating document'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\semantic-search-crm.ts",
        "start": 186,
        "end": 201,
        "startLoc": {
          "line": 186,
          "column": 8,
          "position": 2484
        },
        "endLoc": {
          "line": 201,
          "column": 26,
          "position": 2592
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\semantic-search-crm.ts",
        "start": 158,
        "end": 173,
        "startLoc": {
          "line": 158,
          "column": 11,
          "position": 2217
        },
        "endLoc": {
          "line": 173,
          "column": 25,
          "position": 2325
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", {\n      error: (error as Error).message\n    });\n\n    res.status(500).json({\n      success: false,\n      error: 'Health check failed',\n      message: (error as Error).message\n    });\n  }\n});\n\nexport default router;",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\rls-tenant-policies.ts",
        "start": 530,
        "end": 542,
        "startLoc": {
          "line": 530,
          "column": 22,
          "position": 4022
        },
        "endLoc": {
          "line": 542,
          "column": 2,
          "position": 4104
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\security-config.ts",
        "start": 515,
        "end": 527,
        "startLoc": {
          "line": 515,
          "column": 45,
          "position": 3845
        },
        "endLoc": {
          "line": 527,
          "column": 2,
          "position": 3927
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "(filters.organizationId, filters);\n    \n    res.json({\n      success: true,\n      data: {\n        rules,\n        total: rules.length,\n        filters\n      },\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Error getting RLS rules'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\rls-generativa.ts",
        "start": 254,
        "end": 266,
        "startLoc": {
          "line": 254,
          "column": 12,
          "position": 2911
        },
        "endLoc": {
          "line": 266,
          "column": 26,
          "position": 2998
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\sepa-robust.ts",
        "start": 174,
        "end": 186,
        "startLoc": {
          "line": 174,
          "column": 9,
          "position": 2108
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2195
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ");\n    \n    if (!reporte) {\n      return res.status(404).json({\n        success: false,\n        error: 'Reporte not found'\n      });\n    }\n    \n    res.json({\n      success: true,\n      data: reporte,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Error updating reporte'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\reportes-mensuales.ts",
        "start": 303,
        "end": 318,
        "startLoc": {
          "line": 303,
          "column": 8,
          "position": 3002
        },
        "endLoc": {
          "line": 318,
          "column": 25,
          "position": 3110
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\reportes-mensuales.ts",
        "start": 273,
        "end": 288,
        "startLoc": {
          "line": 273,
          "column": 3,
          "position": 2736
        },
        "endLoc": {
          "line": 288,
          "column": 24,
          "position": 2844
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ");\n    if (!validation.success) {\n      res.status(400).json({\n        error: 'Validation error',\n        message: validation.error.errors.map(e => e.message).join(', '),\n        requestId,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    const { key } = validation.data;\n\n    // Reset rate limit",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\rate-limiting.ts",
        "start": 134,
        "end": 147,
        "startLoc": {
          "line": 134,
          "column": 5,
          "position": 1146
        },
        "endLoc": {
          "line": 147,
          "column": 20,
          "position": 1256
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\rate-limiting.ts",
        "start": 67,
        "end": 80,
        "startLoc": {
          "line": 67,
          "column": 6,
          "position": 623
        },
        "endLoc": {
          "line": 80,
          "column": 30,
          "position": 733
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "},\n      requestId,\n      timestamp: new Date().toISOString(),\n      processingTime\n    });\n\n  } catch (error) {\n    const processingTime = Date.now() - startTime;\n    const errorMessage = error instanceof Error ? error.message : 'Unknown error';\n\n    structuredLogger.error('Failed to reset rate limit'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\rate-limiting.ts",
        "start": 162,
        "end": 172,
        "startLoc": {
          "line": 162,
          "column": 2,
          "position": 1372
        },
        "endLoc": {
          "line": 172,
          "column": 29,
          "position": 1462
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\rate-limiting.ts",
        "start": 98,
        "end": 108,
        "startLoc": {
          "line": 98,
          "column": 7,
          "position": 862
        },
        "endLoc": {
          "line": 108,
          "column": 34,
          "position": 952
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "},\n      requestId,\n      timestamp: new Date().toISOString(),\n      processingTime\n    });\n\n  } catch (error) {\n    const processingTime = Date.now() - startTime;\n    const errorMessage = error instanceof Error ? error.message : 'Unknown error';\n\n    structuredLogger.error('Failed to get rate limit stats'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\rate-limiting.ts",
        "start": 216,
        "end": 226,
        "startLoc": {
          "line": 216,
          "column": 7,
          "position": 1780
        },
        "endLoc": {
          "line": 226,
          "column": 33,
          "position": 1870
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\rate-limiting.ts",
        "start": 98,
        "end": 108,
        "startLoc": {
          "line": 98,
          "column": 7,
          "position": 862
        },
        "endLoc": {
          "line": 108,
          "column": 34,
          "position": 952
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "},\n      requestId,\n      timestamp: new Date().toISOString(),\n      processingTime\n    });\n\n  } catch (error) {\n    const processingTime = Date.now() - startTime;\n    const errorMessage = error instanceof Error ? error.message : 'Unknown error';\n\n    structuredLogger.error('Failed to get rate limit rules'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\rate-limiting.ts",
        "start": 258,
        "end": 268,
        "startLoc": {
          "line": 258,
          "column": 2,
          "position": 2115
        },
        "endLoc": {
          "line": 268,
          "column": 33,
          "position": 2205
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\rate-limiting.ts",
        "start": 98,
        "end": 108,
        "startLoc": {
          "line": 98,
          "column": 7,
          "position": 862
        },
        "endLoc": {
          "line": 108,
          "column": 34,
          "position": 952
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ".safeParse(req.body);\n    if (!validation.success) {\n      res.status(400).json({\n        error: 'Validation error',\n        message: validation.error.errors.map(e => e.message).join(', '),\n        requestId,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    const ruleData",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\rate-limiting.ts",
        "start": 290,
        "end": 301,
        "startLoc": {
          "line": 290,
          "column": 14,
          "position": 2386
        },
        "endLoc": {
          "line": 301,
          "column": 9,
          "position": 2487
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\rate-limiting.ts",
        "start": 134,
        "end": 78,
        "startLoc": {
          "line": 134,
          "column": 17,
          "position": 1140
        },
        "endLoc": {
          "line": 78,
          "column": 2,
          "position": 718
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "},\n      requestId,\n      timestamp: new Date().toISOString(),\n      processingTime\n    });\n\n  } catch (error) {\n    const processingTime = Date.now() - startTime;\n    const errorMessage = error instanceof Error ? error.message : 'Unknown error';\n\n    structuredLogger.error('Failed to add rate limit rule'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\rate-limiting.ts",
        "start": 330,
        "end": 340,
        "startLoc": {
          "line": 330,
          "column": 2,
          "position": 2702
        },
        "endLoc": {
          "line": 340,
          "column": 32,
          "position": 2792
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\rate-limiting.ts",
        "start": 98,
        "end": 108,
        "startLoc": {
          "line": 98,
          "column": 7,
          "position": 862
        },
        "endLoc": {
          "line": 108,
          "column": 34,
          "position": 952
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ".safeParse(req.body);\n    if (!validation.success) {\n      res.status(400).json({\n        error: 'Validation error',\n        message: validation.error.errors.map(e => e.message).join(', '),\n        requestId,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    // Check if rule exists",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\rate-limiting.ts",
        "start": 365,
        "end": 376,
        "startLoc": {
          "line": 365,
          "column": 17,
          "position": 3002
        },
        "endLoc": {
          "line": 376,
          "column": 24,
          "position": 3101
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\rate-limiting.ts",
        "start": 134,
        "end": 78,
        "startLoc": {
          "line": 134,
          "column": 17,
          "position": 1140
        },
        "endLoc": {
          "line": 78,
          "column": 6,
          "position": 716
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "},\n      requestId,\n      timestamp: new Date().toISOString(),\n      processingTime\n    });\n\n  } catch (error) {\n    const processingTime = Date.now() - startTime;\n    const errorMessage = error instanceof Error ? error.message : 'Unknown error';\n\n    structuredLogger.error('Failed to update rate limit rule'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\rate-limiting.ts",
        "start": 405,
        "end": 415,
        "startLoc": {
          "line": 405,
          "column": 2,
          "position": 3325
        },
        "endLoc": {
          "line": 415,
          "column": 35,
          "position": 3415
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\rate-limiting.ts",
        "start": 98,
        "end": 108,
        "startLoc": {
          "line": 98,
          "column": 7,
          "position": 862
        },
        "endLoc": {
          "line": 108,
          "column": 34,
          "position": 952
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "// Check if rule exists\n    const existingRule = globalRateLimiter.getRule(id);\n    if (!existingRule) {\n      res.status(404).json({\n        error: 'Rule not found',\n        message: `Rule with ID '${id}' not found`,\n        requestId,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    // Remove rule",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\rate-limiting.ts",
        "start": 440,
        "end": 452,
        "startLoc": {
          "line": 440,
          "column": 5,
          "position": 3626
        },
        "endLoc": {
          "line": 452,
          "column": 15,
          "position": 3715
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\rate-limiting.ts",
        "start": 376,
        "end": 388,
        "startLoc": {
          "line": 376,
          "column": 5,
          "position": 3101
        },
        "endLoc": {
          "line": 388,
          "column": 53,
          "position": 3190
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "},\n      requestId,\n      timestamp: new Date().toISOString(),\n      processingTime\n    });\n\n  } catch (error) {\n    const processingTime = Date.now() - startTime;\n    const errorMessage = error instanceof Error ? error.message : 'Unknown error';\n\n    structuredLogger.error('Failed to remove rate limit rule'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\rate-limiting.ts",
        "start": 467,
        "end": 477,
        "startLoc": {
          "line": 467,
          "column": 2,
          "position": 3829
        },
        "endLoc": {
          "line": 477,
          "column": 35,
          "position": 3919
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\rate-limiting.ts",
        "start": 98,
        "end": 108,
        "startLoc": {
          "line": 98,
          "column": 7,
          "position": 862
        },
        "endLoc": {
          "line": 108,
          "column": 34,
          "position": 952
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ",\n      requestId,\n      timestamp: new Date().toISOString(),\n      processingTime\n    });\n\n  } catch (error) {\n    const processingTime = Date.now() - startTime;\n    const errorMessage = error instanceof Error ? error.message : 'Unknown error';\n\n    structuredLogger.error('Failed to clear all rate limits'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\rate-limiting.ts",
        "start": 517,
        "end": 527,
        "startLoc": {
          "line": 517,
          "column": 39,
          "position": 4206
        },
        "endLoc": {
          "line": 527,
          "column": 34,
          "position": 4295
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\rate-limiting.ts",
        "start": 98,
        "end": 108,
        "startLoc": {
          "line": 98,
          "column": 2,
          "position": 863
        },
        "endLoc": {
          "line": 108,
          "column": 34,
          "position": 952
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Error creating health check'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\project-completion-deployment.ts",
        "start": 303,
        "end": 313,
        "startLoc": {
          "line": 303,
          "column": 5,
          "position": 2776
        },
        "endLoc": {
          "line": 313,
          "column": 30,
          "position": 2856
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\project-completion-deployment.ts",
        "start": 139,
        "end": 149,
        "startLoc": {
          "line": 139,
          "column": 5,
          "position": 1411
        },
        "endLoc": {
          "line": 149,
          "column": 28,
          "position": 1491
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Error updating configuration'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\project-completion-deployment.ts",
        "start": 460,
        "end": 470,
        "startLoc": {
          "line": 460,
          "column": 5,
          "position": 4082
        },
        "endLoc": {
          "line": 470,
          "column": 31,
          "position": 4162
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\project-completion-deployment.ts",
        "start": 139,
        "end": 149,
        "startLoc": {
          "line": 139,
          "column": 5,
          "position": 1411
        },
        "endLoc": {
          "line": 149,
          "column": 28,
          "position": 1491
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "attributes: attributes || {}\n    });\n\n    res.json({\n      success: true,\n      data: {\n        spanId: span.spanContext().spanId,\n        traceId: span.spanContext().traceId,\n        name: span.name,\n        attributes: span.attributes\n      },\n      message: 'Business span created successfully'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\observability-otel.ts",
        "start": 256,
        "end": 267,
        "startLoc": {
          "line": 256,
          "column": 7,
          "position": 1930
        },
        "endLoc": {
          "line": 267,
          "column": 37,
          "position": 2017
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\observability-otel.ts",
        "start": 214,
        "end": 225,
        "startLoc": {
          "line": 214,
          "column": 7,
          "position": 1583
        },
        "endLoc": {
          "line": 225,
          "column": 28,
          "position": 1670
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", {\n      attributes: attributes || {}\n    });\n\n    res.json({\n      success: true,\n      data: {\n        spanId: span.spanContext().spanId,\n        traceId: span.spanContext().traceId,\n        name: span.name,\n        attributes: span.attributes\n      },\n      message: 'Database span created successfully'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\observability-otel.ts",
        "start": 297,
        "end": 309,
        "startLoc": {
          "line": 297,
          "column": 6,
          "position": 2272
        },
        "endLoc": {
          "line": 309,
          "column": 37,
          "position": 2364
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\observability-otel.ts",
        "start": 255,
        "end": 225,
        "startLoc": {
          "line": 255,
          "column": 15,
          "position": 1925
        },
        "endLoc": {
          "line": 225,
          "column": 28,
          "position": 1670
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", {\n      attributes: attributes || {}\n    });\n\n    res.json({\n      success: true,\n      data: {\n        spanId: span.spanContext().spanId,\n        traceId: span.spanContext().traceId,\n        name: span.name,\n        attributes: span.attributes\n      },\n      message: 'External API span created successfully'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\observability-otel.ts",
        "start": 339,
        "end": 351,
        "startLoc": {
          "line": 339,
          "column": 9,
          "position": 2619
        },
        "endLoc": {
          "line": 351,
          "column": 41,
          "position": 2711
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\observability-otel.ts",
        "start": 255,
        "end": 225,
        "startLoc": {
          "line": 255,
          "column": 15,
          "position": 1925
        },
        "endLoc": {
          "line": 225,
          "column": 28,
          "position": 1670
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", {\n      error: (error as Error).message\n    });\n\n    res.status(500).json({\n      success: false,\n      error: 'Health check failed',\n      message: (error as Error).message\n    });\n  }\n});\n\nexport default router;",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\observability-otel.ts",
        "start": 597,
        "end": 609,
        "startLoc": {
          "line": 597,
          "column": 36,
          "position": 4556
        },
        "endLoc": {
          "line": 609,
          "column": 2,
          "position": 4638
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\security-config.ts",
        "start": 515,
        "end": 527,
        "startLoc": {
          "line": 515,
          "column": 45,
          "position": 3845
        },
        "endLoc": {
          "line": 527,
          "column": 2,
          "position": 3927
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "= z.object({\n  userId: z.string().uuid(),\n  orgId: z.string().uuid(),\n  type: z.enum(['info', 'success', 'warning', 'error', 'alert', 'reminder', 'update', 'announcement']),\n  priority: z.enum(['low', 'medium', 'high', 'urgent']),\n  title: z.string().min(1).max(200),\n  message: z.string().min(1).max(1000),\n  data: z.record(z.any()).optional(),\n  channels: z.array(z.enum(['email', 'sms', 'push', 'in_app', 'webhook'])),\n  templateId: z.string().optional(),\n  templateVariables",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\notifications.ts",
        "start": 45,
        "end": 55,
        "startLoc": {
          "line": 45,
          "column": 2,
          "position": 562
        },
        "endLoc": {
          "line": 55,
          "column": 18,
          "position": 767
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\notifications.ts",
        "start": 32,
        "end": 42,
        "startLoc": {
          "line": 32,
          "column": 2,
          "position": 331
        },
        "endLoc": {
          "line": 42,
          "column": 12,
          "position": 536
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "error: (error as Error).message,\n      userId: req.user?.id\n    });\n\n    res.status(400).json({\n      success: false,\n      error: (error as Error).message\n    });\n  }\n});\n\n// Delete template",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\notifications.ts",
        "start": 210,
        "end": 221,
        "startLoc": {
          "line": 210,
          "column": 7,
          "position": 2091
        },
        "endLoc": {
          "line": 221,
          "column": 19,
          "position": 2168
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\notifications.ts",
        "start": 114,
        "end": 125,
        "startLoc": {
          "line": 114,
          "column": 7,
          "position": 1344
        },
        "endLoc": {
          "line": 125,
          "column": 16,
          "position": 1421
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", {\n      templateId: req.params.id,\n      error: (error as Error).message,\n      userId: req.user?.id\n    });\n\n    res.status(400).json({\n      success: false,\n      error: (error as Error).message\n    });\n  }\n});\n\n// ============================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\notifications.ts",
        "start": 238,
        "end": 251,
        "startLoc": {
          "line": 238,
          "column": 28,
          "position": 2302
        },
        "endLoc": {
          "line": 251,
          "column": 80,
          "position": 2395
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\notifications.ts",
        "start": 208,
        "end": 125,
        "startLoc": {
          "line": 208,
          "column": 28,
          "position": 2075
        },
        "endLoc": {
          "line": 125,
          "column": 16,
          "position": 1421
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", {\n      error: (error as Error).message,\n      userId: req.user?.id\n    });\n\n    res.status(400).json({\n      success: false,\n      error: (error as Error).message\n    });\n  }\n});\n\n// Get notification",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\notifications.ts",
        "start": 275,
        "end": 287,
        "startLoc": {
          "line": 275,
          "column": 32,
          "position": 2572
        },
        "endLoc": {
          "line": 287,
          "column": 20,
          "position": 2654
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\notifications.ts",
        "start": 113,
        "end": 125,
        "startLoc": {
          "line": 113,
          "column": 28,
          "position": 1339
        },
        "endLoc": {
          "line": 125,
          "column": 16,
          "position": 1421
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ": req.params.id,\n      error: (error as Error).message,\n      userId: req.user?.id\n    });\n\n    res.status(500).json({\n      success: false,\n      error: 'Internal server error'\n    });\n  }\n});\n\n// List notifications",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\notifications.ts",
        "start": 307,
        "end": 319,
        "startLoc": {
          "line": 307,
          "column": 15,
          "position": 2812
        },
        "endLoc": {
          "line": 319,
          "column": 22,
          "position": 2891
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\notifications.ts",
        "start": 145,
        "end": 157,
        "startLoc": {
          "line": 145,
          "column": 11,
          "position": 1579
        },
        "endLoc": {
          "line": 157,
          "column": 18,
          "position": 1658
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ": req.params.id,\n      error: (error as Error).message,\n      userId: req.user?.id\n    });\n\n    res.status(400).json({\n      success: false,\n      error: (error as Error).message\n    });\n  }\n});\n\n// Delete notification",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\notifications.ts",
        "start": 375,
        "end": 387,
        "startLoc": {
          "line": 375,
          "column": 15,
          "position": 3375
        },
        "endLoc": {
          "line": 387,
          "column": 23,
          "position": 3462
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\notifications.ts",
        "start": 209,
        "end": 125,
        "startLoc": {
          "line": 209,
          "column": 11,
          "position": 2081
        },
        "endLoc": {
          "line": 125,
          "column": 16,
          "position": 1421
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", {\n      notificationId: req.params.id,\n      error: (error as Error).message,\n      userId: req.user?.id\n    });\n\n    res.status(400).json({\n      success: false,\n      error: (error as Error).message\n    });\n  }\n});\n\n// Mark as read",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\notifications.ts",
        "start": 404,
        "end": 417,
        "startLoc": {
          "line": 404,
          "column": 32,
          "position": 3596
        },
        "endLoc": {
          "line": 417,
          "column": 16,
          "position": 3689
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\notifications.ts",
        "start": 374,
        "end": 125,
        "startLoc": {
          "line": 374,
          "column": 32,
          "position": 3369
        },
        "endLoc": {
          "line": 125,
          "column": 16,
          "position": 1421
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", {\n      notificationId: req.params.id,\n      error: (error as Error).message,\n      userId: req.user?.id\n    });\n\n    res.status(400).json({\n      success: false,\n      error: (error as Error).message\n    });\n  }\n});\n\n// Mark all as read",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\notifications.ts",
        "start": 435,
        "end": 448,
        "startLoc": {
          "line": 435,
          "column": 38,
          "position": 3836
        },
        "endLoc": {
          "line": 448,
          "column": 20,
          "position": 3929
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\notifications.ts",
        "start": 374,
        "end": 125,
        "startLoc": {
          "line": 374,
          "column": 32,
          "position": 3369
        },
        "endLoc": {
          "line": 125,
          "column": 16,
          "position": 1421
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", {\n      error: (error as Error).message,\n      userId: req.user?.id\n    });\n\n    res.status(400).json({\n      success: false,\n      error: (error as Error).message\n    });\n  }\n});\n\n// Send bulk notifications",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\notifications.ts",
        "start": 531,
        "end": 543,
        "startLoc": {
          "line": 531,
          "column": 30,
          "position": 4560
        },
        "endLoc": {
          "line": 543,
          "column": 27,
          "position": 4642
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\notifications.ts",
        "start": 113,
        "end": 125,
        "startLoc": {
          "line": 113,
          "column": 28,
          "position": 1339
        },
        "endLoc": {
          "line": 125,
          "column": 16,
          "position": 1421
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", {\n      error: (error as Error).message,\n      userId: req.user?.id\n    });\n\n    res.status(400).json({\n      success: false,\n      error: (error as Error).message\n    });\n  }\n});\n\n// Schedule notification",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\notifications.ts",
        "start": 567,
        "end": 579,
        "startLoc": {
          "line": 567,
          "column": 36,
          "position": 4904
        },
        "endLoc": {
          "line": 579,
          "column": 25,
          "position": 4986
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\notifications.ts",
        "start": 113,
        "end": 125,
        "startLoc": {
          "line": 113,
          "column": 28,
          "position": 1339
        },
        "endLoc": {
          "line": 125,
          "column": 16,
          "position": 1421
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", {\n      error: (error as Error).message,\n      userId: req.user?.id\n    });\n\n    res.status(400).json({\n      success: false,\n      error: (error as Error).message\n    });\n  }\n});\n\n// ============================================================================\n// PREFERENCES ROUTES",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\notifications.ts",
        "start": 615,
        "end": 628,
        "startLoc": {
          "line": 615,
          "column": 34,
          "position": 5288
        },
        "endLoc": {
          "line": 628,
          "column": 22,
          "position": 5372
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\notifications.ts",
        "start": 113,
        "end": 252,
        "startLoc": {
          "line": 113,
          "column": 28,
          "position": 1339
        },
        "endLoc": {
          "line": 252,
          "column": 23,
          "position": 2397
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", async (req, res) => {\n  try {\n    const userId = req.user?.id || req.query.userId as string;\n    const orgId = req.user?.orgId || req.query.orgId as string;\n    \n    if (!userId || !orgId) {\n      return res.status(400).json({\n        success: false,\n        error: 'User ID and Organization ID are required'\n      });\n    }\n\n    const preferences",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\notifications.ts",
        "start": 632,
        "end": 644,
        "startLoc": {
          "line": 632,
          "column": 15,
          "position": 5384
        },
        "endLoc": {
          "line": 644,
          "column": 12,
          "position": 5514
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\notifications.ts",
        "start": 320,
        "end": 332,
        "startLoc": {
          "line": 320,
          "column": 17,
          "position": 2898
        },
        "endLoc": {
          "line": 332,
          "column": 8,
          "position": 3028
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", async (req, res) => {\n  try {\n    const userId = req.user?.id || req.body.userId;\n    const orgId = req.user?.orgId || req.body.orgId;\n    \n    if (!userId || !orgId) {\n      return res.status(400).json({\n        success: false,\n        error: 'User ID and Organization ID are required'\n      });\n    }\n\n    const",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\notifications.ts",
        "start": 664,
        "end": 676,
        "startLoc": {
          "line": 664,
          "column": 15,
          "position": 5656
        },
        "endLoc": {
          "line": 676,
          "column": 6,
          "position": 5776
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\notifications.ts",
        "start": 449,
        "end": 461,
        "startLoc": {
          "line": 449,
          "column": 26,
          "position": 3936
        },
        "endLoc": {
          "line": 461,
          "column": 6,
          "position": 4056
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", {\n      error: (error as Error).message,\n      userId: req.user?.id\n    });\n\n    res.status(400).json({\n      success: false,\n      error: (error as Error).message\n    });\n  }\n});\n\n// ============================================================================\n// STATISTICS ROUTES",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\notifications.ts",
        "start": 691,
        "end": 704,
        "startLoc": {
          "line": 691,
          "column": 31,
          "position": 5891
        },
        "endLoc": {
          "line": 704,
          "column": 21,
          "position": 5975
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\notifications.ts",
        "start": 113,
        "end": 252,
        "startLoc": {
          "line": 113,
          "column": 28,
          "position": 1339
        },
        "endLoc": {
          "line": 252,
          "column": 23,
          "position": 2397
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", async (req, res) => {\n  try {\n    const orgId = req.user?.orgId || req.query.orgId as string;\n    \n    if (!orgId) {\n      return res.status(400).json({\n        success: false,\n        error: 'Organization ID is required'\n      });\n    }\n\n    const stats",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\notifications.ts",
        "start": 708,
        "end": 719,
        "startLoc": {
          "line": 708,
          "column": 14,
          "position": 5987
        },
        "endLoc": {
          "line": 719,
          "column": 6,
          "position": 6085
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\notifications.ts",
        "start": 158,
        "end": 169,
        "startLoc": {
          "line": 158,
          "column": 13,
          "position": 1665
        },
        "endLoc": {
          "line": 169,
          "column": 10,
          "position": 1763
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", async (req, res) => {\n  try {\n    const userId = req.user?.id || req.query.userId as string;\n    const orgId = req.user?.orgId || req.query.orgId as string;\n    \n    if (!userId || !orgId) {\n      return res.status(400).json({\n        success: false,\n        error: 'User ID and Organization ID are required'\n      });\n    }\n\n    const count",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\notifications.ts",
        "start": 739,
        "end": 751,
        "startLoc": {
          "line": 739,
          "column": 16,
          "position": 6224
        },
        "endLoc": {
          "line": 751,
          "column": 6,
          "position": 6354
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\notifications.ts",
        "start": 320,
        "end": 332,
        "startLoc": {
          "line": 320,
          "column": 17,
          "position": 2898
        },
        "endLoc": {
          "line": 332,
          "column": 8,
          "position": 3028
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", {\n      error: (error as Error).message,\n      userId: req.user?.id\n    });\n\n    res.status(400).json({\n      success: false,\n      error: (error as Error).message\n    });\n  }\n});\n\n// Test SMS provider",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\notifications.ts",
        "start": 788,
        "end": 800,
        "startLoc": {
          "line": 788,
          "column": 29,
          "position": 6631
        },
        "endLoc": {
          "line": 800,
          "column": 21,
          "position": 6713
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\notifications.ts",
        "start": 113,
        "end": 125,
        "startLoc": {
          "line": 113,
          "column": 28,
          "position": 1339
        },
        "endLoc": {
          "line": 125,
          "column": 16,
          "position": 1421
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", {\n      error: (error as Error).message,\n      userId: req.user?.id\n    });\n\n    res.status(400).json({\n      success: false,\n      error: (error as Error).message\n    });\n  }\n});\n\n// Test push provider",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\notifications.ts",
        "start": 814,
        "end": 826,
        "startLoc": {
          "line": 814,
          "column": 27,
          "position": 6844
        },
        "endLoc": {
          "line": 826,
          "column": 22,
          "position": 6926
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\notifications.ts",
        "start": 113,
        "end": 125,
        "startLoc": {
          "line": 113,
          "column": 28,
          "position": 1339
        },
        "endLoc": {
          "line": 125,
          "column": 16,
          "position": 1421
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", {\n      error: (error as Error).message,\n      userId: req.user?.id\n    });\n\n    res.status(400).json({\n      success: false,\n      error: (error as Error).message\n    });\n  }\n});\n\n// ============================================================================\n// TEMPLATE ENGINE ROUTES",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\notifications.ts",
        "start": 840,
        "end": 853,
        "startLoc": {
          "line": 840,
          "column": 28,
          "position": 7057
        },
        "endLoc": {
          "line": 853,
          "column": 26,
          "position": 7141
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\notifications.ts",
        "start": 113,
        "end": 252,
        "startLoc": {
          "line": 113,
          "column": 28,
          "position": 1339
        },
        "endLoc": {
          "line": 252,
          "column": 23,
          "position": 2397
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", {\n      error: (error as Error).message,\n      userId: req.user?.id\n    });\n\n    res.status(400).json({\n      success: false,\n      error: (error as Error).message\n    });\n  }\n});\n\n// Validate template",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\notifications.ts",
        "start": 885,
        "end": 897,
        "startLoc": {
          "line": 885,
          "column": 25,
          "position": 7365
        },
        "endLoc": {
          "line": 897,
          "column": 21,
          "position": 7447
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\notifications.ts",
        "start": 113,
        "end": 125,
        "startLoc": {
          "line": 113,
          "column": 28,
          "position": 1339
        },
        "endLoc": {
          "line": 125,
          "column": 16,
          "position": 1421
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "= req.body;\n    \n    const templateEngine = TemplateEngineFactory.create({\n      engine: 'handlebars',\n      defaultLanguage: 'es',\n      supportedLanguages: ['es', 'en'],\n      cacheEnabled: true,\n      cacheSize: 100,\n      strictMode: true,\n      escapeHtml: true\n    });\n\n    const result = await templateEngine.validateTemplate",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\notifications.ts",
        "start": 900,
        "end": 912,
        "startLoc": {
          "line": 900,
          "column": 2,
          "position": 7479
        },
        "endLoc": {
          "line": 912,
          "column": 17,
          "position": 7571
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\notifications.ts",
        "start": 859,
        "end": 871,
        "startLoc": {
          "line": 859,
          "column": 2,
          "position": 7194
        },
        "endLoc": {
          "line": 871,
          "column": 7,
          "position": 7286
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", {\n      error: (error as Error).message,\n      userId: req.user?.id\n    });\n\n    res.status(400).json({\n      success: false,\n      error: (error as Error).message\n    });\n  }\n});\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\notifications.ts",
        "start": 920,
        "end": 932,
        "startLoc": {
          "line": 920,
          "column": 29,
          "position": 7628
        },
        "endLoc": {
          "line": 932,
          "column": 7,
          "position": 7710
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\notifications.ts",
        "start": 113,
        "end": 125,
        "startLoc": {
          "line": 113,
          "column": 28,
          "position": 1339
        },
        "endLoc": {
          "line": 125,
          "column": 16,
          "position": 1421
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", authMiddleware, async (req, res) => {\n  try {\n    const { sessionId, userId, organizationId, data, context, options } = req.body;\n    \n    if (!sessionId || !userId || !organizationId || !data) {\n      return res.status(400).json({\n        success: false,\n        error: 'Missing required fields: sessionId, userId, organizationId, data',\n      });\n    }\n\n    const request = {\n      sessionId,\n      userId,\n      organizationId,\n      requestType: 'prediction'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\next-ai-platform.ts",
        "start": 644,
        "end": 659,
        "startLoc": {
          "line": 644,
          "column": 11,
          "position": 1819
        },
        "endLoc": {
          "line": 659,
          "column": 13,
          "position": 1962
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\next-ai-platform.ts",
        "start": 562,
        "end": 577,
        "startLoc": {
          "line": 562,
          "column": 11,
          "position": 1519
        },
        "endLoc": {
          "line": 577,
          "column": 11,
          "position": 1662
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ", {\n      traceId,\n      spanId,\n      analysis\n    });\n\n    res.json({\n      success: true,\n      data: {\n        metrics: status.metrics,\n        analysis,\n        timestamp: new Date().toISOString(),\n        traceId\n      }\n    });\n\n  } catch (error) {\n    structuredLogger.error('Failed to get memory metrics'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\memory-management.ts",
        "start": 142,
        "end": 159,
        "startLoc": {
          "line": 142,
          "column": 27,
          "position": 1492
        },
        "endLoc": {
          "line": 159,
          "column": 31,
          "position": 1589
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\performance-v2.ts",
        "start": 134,
        "end": 151,
        "startLoc": {
          "line": 134,
          "column": 32,
          "position": 1443
        },
        "endLoc": {
          "line": 151,
          "column": 36,
          "position": 1540
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "router.post('/optimize', async (req, res) => {\n  const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n\n  try {\n    const { type } = req.body;\n    \n    // Validar tipo de optimización\n    if (type && !OptimizationTypeSchema.safeParse(type).success) {\n      return res.status(400).json({\n        success: false,\n        error: 'Invalid optimization type',\n        validTypes: ['gc'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\memory-management.ts",
        "start": 177,
        "end": 189,
        "startLoc": {
          "line": 177,
          "column": 1,
          "position": 1675
        },
        "endLoc": {
          "line": 189,
          "column": 5,
          "position": 1846
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\performance-v2.ts",
        "start": 169,
        "end": 181,
        "startLoc": {
          "line": 169,
          "column": 1,
          "position": 1626
        },
        "endLoc": {
          "line": 181,
          "column": 9,
          "position": 1797
        }
      }
    },
    {
      "format": "typescript",
      "lines": 27,
      "fragment": ", {\n      traceId,\n      spanId,\n      newConfig: newStatus.config\n    });\n\n    res.json({\n      success: true,\n      data: {\n        config: newStatus.config,\n        message: 'Configuration updated successfully',\n        timestamp: new Date().toISOString(),\n        traceId\n      }\n    });\n\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Invalid configuration data',\n        details: error.errors,\n        traceId\n      });\n    }\n\n    structuredLogger.error('Failed to update memory config'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\memory-management.ts",
        "start": 263,
        "end": 289,
        "startLoc": {
          "line": 263,
          "column": 24,
          "position": 2386
        },
        "endLoc": {
          "line": 289,
          "column": 33,
          "position": 2555
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\performance-v2.ts",
        "start": 254,
        "end": 280,
        "startLoc": {
          "line": 254,
          "column": 29,
          "position": 2365
        },
        "endLoc": {
          "line": 280,
          "column": 38,
          "position": 2534
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ", {\n      traceId,\n      spanId,\n      healthStatus,\n      healthChecks\n    });\n\n    res.status(isHealthy ? 200 : 503).json({\n      success: true,\n      data: {\n        status: healthStatus,\n        checks: healthChecks,\n        metrics: status.metrics,\n        isOptimizing: status.isOptimizing,\n        timestamp: new Date().toISOString(),\n        traceId\n      }\n    });\n\n  } catch (error) {\n    structuredLogger.error('Memory health check failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\memory-management.ts",
        "start": 471,
        "end": 491,
        "startLoc": {
          "line": 471,
          "column": 22,
          "position": 4413
        },
        "endLoc": {
          "line": 491,
          "column": 29,
          "position": 4546
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\performance-v2.ts",
        "start": 393,
        "end": 413,
        "startLoc": {
          "line": 393,
          "column": 27,
          "position": 3666
        },
        "endLoc": {
          "line": 413,
          "column": 34,
          "position": 3799
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ", {\n      traceId,\n      spanId,\n      recommendationsCount: recommendations.length\n    });\n\n    res.json({\n      success: true,\n      data: {\n        recommendations,\n        count: recommendations.length,\n        timestamp: new Date().toISOString(),\n        traceId\n      }\n    });\n\n  } catch (error) {\n    structuredLogger.error('Failed to get memory recommendations'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\memory-management.ts",
        "start": 573,
        "end": 590,
        "startLoc": {
          "line": 573,
          "column": 35,
          "position": 5181
        },
        "endLoc": {
          "line": 590,
          "column": 39,
          "position": 5283
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\performance-v2.ts",
        "start": 484,
        "end": 501,
        "startLoc": {
          "line": 484,
          "column": 40,
          "position": 4346
        },
        "endLoc": {
          "line": 501,
          "column": 44,
          "position": 4448
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ", async (req, res) => {\n  try {\n    const { id } = req.params;\n    const orgId = req.headers['x-org-id'] as string;\n    const userId = req.headers['x-user-id'] as string;\n    \n    if (!orgId) {\n      return res.status(400).json({ error: 'Missing x-org-id header' });\n    }\n\n    // Set RLS context",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\invoices.ts",
        "start": 383,
        "end": 393,
        "startLoc": {
          "line": 383,
          "column": 12,
          "position": 3284
        },
        "endLoc": {
          "line": 393,
          "column": 19,
          "position": 3398
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\invoices.ts",
        "start": 281,
        "end": 291,
        "startLoc": {
          "line": 281,
          "column": 7,
          "position": 2396
        },
        "endLoc": {
          "line": 291,
          "column": 25,
          "position": 2510
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ",\n        updatedAt: new Date().toISOString()\n      })\n      .where(eq(invoices.id, id))\n      .returning();\n\n    if (!updatedInvoice) {\n      return res.status(404).json({ \n        error: 'Invoice not found',\n        message: `Invoice with ID ${id} not found or access denied`\n      });\n    }\n\n    structuredLogger.info('Invoice sent'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\invoices.ts",
        "start": 400,
        "end": 413,
        "startLoc": {
          "line": 400,
          "column": 2,
          "position": 3462
        },
        "endLoc": {
          "line": 413,
          "column": 15,
          "position": 3561
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\invoices.ts",
        "start": 335,
        "end": 348,
        "startLoc": {
          "line": 335,
          "column": 11,
          "position": 2941
        },
        "endLoc": {
          "line": 348,
          "column": 18,
          "position": 3040
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "('/:id', async (req, res) => {\n  try {\n    const { id } = req.params;\n    const orgId = req.headers['x-org-id'] as string;\n    const userId = req.headers['x-user-id'] as string;\n    \n    if (!orgId) {\n      return res.status(400).json({ error: 'Missing x-org-id header' });\n    }\n\n    // Set RLS context\n    await db.execute(`SET LOCAL app.org_id = '${orgId}'`);\n\n    const [deletedInvoice",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\invoices.ts",
        "start": 441,
        "end": 454,
        "startLoc": {
          "line": 441,
          "column": 7,
          "position": 3750
        },
        "endLoc": {
          "line": 454,
          "column": 15,
          "position": 3888
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\invoices.ts",
        "start": 281,
        "end": 396,
        "startLoc": {
          "line": 281,
          "column": 4,
          "position": 2394
        },
        "endLoc": {
          "line": 396,
          "column": 15,
          "position": 3420
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "]),\n  startDate: z.string().datetime(),\n  endDate: z.string().datetime(),\n  generatedBy: z.string().min(1),\n});\n\nconst GetStatsSchema = z.object({\n  organizationId: z.string().min(1),\n});\n\n// Routes\n\n// Product Management",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\inventory-kardex.ts",
        "start": 110,
        "end": 122,
        "startLoc": {
          "line": 110,
          "column": 22,
          "position": 1622
        },
        "endLoc": {
          "line": 122,
          "column": 22,
          "position": 1713
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\supplier-scorecard.ts",
        "start": 134,
        "end": 84,
        "startLoc": {
          "line": 134,
          "column": 17,
          "position": 2126
        },
        "endLoc": {
          "line": 84,
          "column": 55,
          "position": 1026
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "(\n      reportData.organizationId,\n      reportData.reportType,\n      reportData.startDate,\n      reportData.endDate,\n      reportData.generatedBy\n    );\n    \n    res.status(201).json({\n      success: true,\n      data: report,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Error generating inventory report'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\inventory-kardex.ts",
        "start": 423,
        "end": 437,
        "startLoc": {
          "line": 423,
          "column": 24,
          "position": 4360
        },
        "endLoc": {
          "line": 437,
          "column": 36,
          "position": 4458
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\supplier-scorecard.ts",
        "start": 375,
        "end": 389,
        "startLoc": {
          "line": 375,
          "column": 23,
          "position": 4295
        },
        "endLoc": {
          "line": 389,
          "column": 35,
          "position": 4393
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n    \n    logger.error('Failed to get interactions'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\interactions.ts",
        "start": 36,
        "end": 46,
        "startLoc": {
          "line": 36,
          "column": 5,
          "position": 364
        },
        "endLoc": {
          "line": 46,
          "column": 29,
          "position": 445
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\project-completion-deployment.ts",
        "start": 139,
        "end": 149,
        "startLoc": {
          "line": 139,
          "column": 5,
          "position": 1411
        },
        "endLoc": {
          "line": 149,
          "column": 28,
          "position": 1491
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n    \n    logger.error('Failed to create interaction'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\interactions.ts",
        "start": 120,
        "end": 130,
        "startLoc": {
          "line": 120,
          "column": 5,
          "position": 1056
        },
        "endLoc": {
          "line": 130,
          "column": 31,
          "position": 1137
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\project-completion-deployment.ts",
        "start": 139,
        "end": 149,
        "startLoc": {
          "line": 139,
          "column": 5,
          "position": 1411
        },
        "endLoc": {
          "line": 149,
          "column": 28,
          "position": 1491
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ".json({\n      success: true,\n      data: interaction\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n    \n    logger.error('Failed to update interaction'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\interactions.ts",
        "start": 168,
        "end": 181,
        "startLoc": {
          "line": 168,
          "column": 4,
          "position": 1466
        },
        "endLoc": {
          "line": 181,
          "column": 31,
          "position": 1566
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\interactions.ts",
        "start": 117,
        "end": 149,
        "startLoc": {
          "line": 117,
          "column": 2,
          "position": 1037
        },
        "endLoc": {
          "line": 149,
          "column": 28,
          "position": 1491
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "]),\n  startDate: z.string().datetime(),\n  endDate: z.string().datetime(),\n  generatedBy: z.string().min(1),\n});\n\nconst GetStatsSchema = z.object({\n  organizationId: z.string().min(1),\n});\n\n// Routes\n\n// Interaction Management",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\interactions-sas-av.ts",
        "start": 157,
        "end": 169,
        "startLoc": {
          "line": 157,
          "column": 24,
          "position": 2494
        },
        "endLoc": {
          "line": 169,
          "column": 26,
          "position": 2585
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\supplier-scorecard.ts",
        "start": 134,
        "end": 84,
        "startLoc": {
          "line": 134,
          "column": 17,
          "position": 2126
        },
        "endLoc": {
          "line": 84,
          "column": 55,
          "position": 1026
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "(filters.organizationId, filters);\n    \n    res.json({\n      success: true,\n      data: {\n        insights,\n        total: insights.length,\n        filters\n      },\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Error getting voice insights'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\interactions-sas-av.ts",
        "start": 312,
        "end": 324,
        "startLoc": {
          "line": 312,
          "column": 17,
          "position": 3838
        },
        "endLoc": {
          "line": 324,
          "column": 31,
          "position": 3925
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\interactions-sas-av.ts",
        "start": 287,
        "end": 299,
        "startLoc": {
          "line": 287,
          "column": 21,
          "position": 3637
        },
        "endLoc": {
          "line": 299,
          "column": 35,
          "position": 3724
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "(\n      reportData.organizationId,\n      reportData.reportType,\n      reportData.startDate,\n      reportData.endDate,\n      reportData.generatedBy\n    );\n    \n    res.status(201).json({\n      success: true,\n      data: report,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Error generating interaction report'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\interactions-sas-av.ts",
        "start": 337,
        "end": 351,
        "startLoc": {
          "line": 337,
          "column": 26,
          "position": 4039
        },
        "endLoc": {
          "line": 351,
          "column": 38,
          "position": 4137
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\supplier-scorecard.ts",
        "start": 375,
        "end": 389,
        "startLoc": {
          "line": 375,
          "column": 23,
          "position": 4295
        },
        "endLoc": {
          "line": 389,
          "column": 35,
          "position": 4393
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ");\n\n    if (!task) {\n      res.status(404).json({\n        success: false,\n        error: 'Task not found',\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    res.json({\n      success: true,\n      data: task,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    if",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\hitl-v2.ts",
        "start": 195,
        "end": 212,
        "startLoc": {
          "line": 195,
          "column": 14,
          "position": 2071
        },
        "endLoc": {
          "line": 212,
          "column": 3,
          "position": 2190
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\hitl-v2.ts",
        "start": 122,
        "end": 139,
        "startLoc": {
          "line": 122,
          "column": 7,
          "position": 1453
        },
        "endLoc": {
          "line": 139,
          "column": 17,
          "position": 1572
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "res.json({\n      success: true,\n      data: task,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({\n        success: false,\n        error: 'Invalid request data',\n        details: error.errors,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    structuredLogger.error('Failed to update HITL task'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\hitl-v2.ts",
        "start": 206,
        "end": 222,
        "startLoc": {
          "line": 206,
          "column": 5,
          "position": 2139
        },
        "endLoc": {
          "line": 222,
          "column": 29,
          "position": 2271
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\hitl-v2.ts",
        "start": 160,
        "end": 176,
        "startLoc": {
          "line": 160,
          "column": 5,
          "position": 1756
        },
        "endLoc": {
          "line": 176,
          "column": 29,
          "position": 1888
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ",\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({\n        success: false,\n        error: 'Invalid request data',\n        details: error.errors,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    structuredLogger.error('Failed to add HITL comment'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\hitl-v2.ts",
        "start": 255,
        "end": 269,
        "startLoc": {
          "line": 255,
          "column": 8,
          "position": 2551
        },
        "endLoc": {
          "line": 269,
          "column": 29,
          "position": 2665
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\hitl-v2.ts",
        "start": 162,
        "end": 176,
        "startLoc": {
          "line": 162,
          "column": 5,
          "position": 1774
        },
        "endLoc": {
          "line": 176,
          "column": 29,
          "position": 1888
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ",\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({\n        success: false,\n        error: 'Invalid request data',\n        details: error.errors,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    structuredLogger.error('Failed to add HITL attachment'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\hitl-v2.ts",
        "start": 302,
        "end": 316,
        "startLoc": {
          "line": 302,
          "column": 11,
          "position": 2945
        },
        "endLoc": {
          "line": 316,
          "column": 32,
          "position": 3059
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\hitl-v2.ts",
        "start": 162,
        "end": 176,
        "startLoc": {
          "line": 162,
          "column": 5,
          "position": 1774
        },
        "endLoc": {
          "line": 176,
          "column": 29,
          "position": 1888
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": ",\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    res.json({\n      success: true,\n      data: task,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({\n        success: false,\n        error: 'Invalid request data',\n        details: error.errors,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    structuredLogger.error('Failed to advance HITL workflow'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\hitl-v2.ts",
        "start": 341,
        "end": 363,
        "startLoc": {
          "line": 341,
          "column": 34,
          "position": 3298
        },
        "endLoc": {
          "line": 363,
          "column": 34,
          "position": 3460
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\hitl-v2.ts",
        "start": 200,
        "end": 176,
        "startLoc": {
          "line": 200,
          "column": 17,
          "position": 2109
        },
        "endLoc": {
          "line": 176,
          "column": 29,
          "position": 1888
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ",\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({\n        success: false,\n        error: 'Invalid request data',\n        details: error.errors,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    structuredLogger.error('Failed to create HITL batch'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\hitl-v2.ts",
        "start": 386,
        "end": 400,
        "startLoc": {
          "line": 386,
          "column": 6,
          "position": 3658
        },
        "endLoc": {
          "line": 400,
          "column": 30,
          "position": 3772
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\hitl-v2.ts",
        "start": 162,
        "end": 176,
        "startLoc": {
          "line": 162,
          "column": 5,
          "position": 1774
        },
        "endLoc": {
          "line": 176,
          "column": 29,
          "position": 1888
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "res.json({\n      success: true,\n      data: batch,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({\n        success: false,\n        error: 'Invalid request data',\n        details: error.errors,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    structuredLogger.error('Failed to add tasks to HITL batch'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\hitl-v2.ts",
        "start": 430,
        "end": 446,
        "startLoc": {
          "line": 430,
          "column": 5,
          "position": 4025
        },
        "endLoc": {
          "line": 446,
          "column": 36,
          "position": 4157
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\hitl-v2.ts",
        "start": 384,
        "end": 176,
        "startLoc": {
          "line": 384,
          "column": 5,
          "position": 3640
        },
        "endLoc": {
          "line": 176,
          "column": 29,
          "position": 1888
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "]),\n  startDate: z.string().datetime(),\n  endDate: z.string().datetime(),\n  generatedBy: z.string().min(1),\n});\n\nconst GetStatsSchema = z.object({\n  organizationId: z.string().min(1),\n});\n\n// Routes\n\n// Agent Management",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\hitl-ownership-sla.ts",
        "start": 229,
        "end": 241,
        "startLoc": {
          "line": 229,
          "column": 18,
          "position": 3591
        },
        "endLoc": {
          "line": 241,
          "column": 20,
          "position": 3682
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\supplier-scorecard.ts",
        "start": 134,
        "end": 84,
        "startLoc": {
          "line": 134,
          "column": 17,
          "position": 2126
        },
        "endLoc": {
          "line": 84,
          "column": 55,
          "position": 1026
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", filters);\n    \n    res.json({\n      success: true,\n      data: {\n        tasks,\n        total: tasks.length,\n        filters\n      },\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Error getting HITL tasks'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\hitl-ownership-sla.ts",
        "start": 407,
        "end": 419,
        "startLoc": {
          "line": 407,
          "column": 15,
          "position": 5132
        },
        "endLoc": {
          "line": 419,
          "column": 27,
          "position": 5215
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\hitl-v2.ts",
        "start": 92,
        "end": 104,
        "startLoc": {
          "line": 92,
          "column": 7,
          "position": 1208
        },
        "endLoc": {
          "line": 104,
          "column": 27,
          "position": 1290
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ".generateReport(\n      reportData.organizationId,\n      reportData.reportType,\n      reportData.startDate,\n      reportData.endDate,\n      reportData.generatedBy\n    );\n    \n    res.status(201).json({\n      success: true,\n      data: report,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Error generating HITL report'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\hitl-ownership-sla.ts",
        "start": 561,
        "end": 575,
        "startLoc": {
          "line": 561,
          "column": 24,
          "position": 6413
        },
        "endLoc": {
          "line": 575,
          "column": 31,
          "position": 6513
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\sepa-robust.ts",
        "start": 264,
        "end": 389,
        "startLoc": {
          "line": 264,
          "column": 18,
          "position": 2868
        },
        "endLoc": {
          "line": 389,
          "column": 35,
          "position": 4393
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ",\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({\n        success: false,\n        error: 'Invalid request data',\n        details: error.errors,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    structuredLogger.error('Failed to get users'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\graph-wrappers.ts",
        "start": 74,
        "end": 88,
        "startLoc": {
          "line": 74,
          "column": 2,
          "position": 783
        },
        "endLoc": {
          "line": 88,
          "column": 22,
          "position": 897
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\hitl-v2.ts",
        "start": 162,
        "end": 176,
        "startLoc": {
          "line": 162,
          "column": 5,
          "position": 1774
        },
        "endLoc": {
          "line": 176,
          "column": 29,
          "position": 1888
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ",\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({\n        success: false,\n        error: 'Invalid request data',\n        details: error.errors,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    structuredLogger.error('Failed to get user'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\graph-wrappers.ts",
        "start": 122,
        "end": 136,
        "startLoc": {
          "line": 122,
          "column": 5,
          "position": 1168
        },
        "endLoc": {
          "line": 136,
          "column": 21,
          "position": 1282
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\hitl-v2.ts",
        "start": 162,
        "end": 176,
        "startLoc": {
          "line": 162,
          "column": 5,
          "position": 1774
        },
        "endLoc": {
          "line": 176,
          "column": 29,
          "position": 1888
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "},\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({\n        success: false,\n        error: 'Invalid request data',\n        details: error.errors,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    structuredLogger.error('Failed to get messages'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\graph-wrappers.ts",
        "start": 167,
        "end": 181,
        "startLoc": {
          "line": 167,
          "column": 7,
          "position": 1521
        },
        "endLoc": {
          "line": 181,
          "column": 25,
          "position": 1636
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\graph-wrappers.ts",
        "start": 74,
        "end": 176,
        "startLoc": {
          "line": 74,
          "column": 7,
          "position": 782
        },
        "endLoc": {
          "line": 176,
          "column": 29,
          "position": 1888
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ".length\n      },\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({\n        success: false,\n        error: 'Invalid request data',\n        details: error.errors,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    structuredLogger.error('Failed to get calendar events'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\graph-wrappers.ts",
        "start": 210,
        "end": 225,
        "startLoc": {
          "line": 210,
          "column": 7,
          "position": 1857
        },
        "endLoc": {
          "line": 225,
          "column": 32,
          "position": 1976
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\graph-wrappers.ts",
        "start": 73,
        "end": 176,
        "startLoc": {
          "line": 73,
          "column": 6,
          "position": 778
        },
        "endLoc": {
          "line": 176,
          "column": 29,
          "position": 1888
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ".length\n      },\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({\n        success: false,\n        error: 'Invalid request data',\n        details: error.errors,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    structuredLogger.error('Failed to get drive items'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\graph-wrappers.ts",
        "start": 253,
        "end": 268,
        "startLoc": {
          "line": 253,
          "column": 6,
          "position": 2191
        },
        "endLoc": {
          "line": 268,
          "column": 28,
          "position": 2310
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\graph-wrappers.ts",
        "start": 73,
        "end": 176,
        "startLoc": {
          "line": 73,
          "column": 6,
          "position": 778
        },
        "endLoc": {
          "line": 176,
          "column": 29,
          "position": 1888
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ".length\n      },\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({\n        success: false,\n        error: 'Invalid request data',\n        details: error.errors,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    structuredLogger.error('Failed to get teams'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\graph-wrappers.ts",
        "start": 292,
        "end": 307,
        "startLoc": {
          "line": 292,
          "column": 6,
          "position": 2509
        },
        "endLoc": {
          "line": 307,
          "column": 22,
          "position": 2628
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\graph-wrappers.ts",
        "start": 73,
        "end": 176,
        "startLoc": {
          "line": 73,
          "column": 6,
          "position": 778
        },
        "endLoc": {
          "line": 176,
          "column": 29,
          "position": 1888
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ".length\n      },\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({\n        success: false,\n        error: 'Invalid request data',\n        details: error.errors,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    structuredLogger.error('Failed to get team channels'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\graph-wrappers.ts",
        "start": 337,
        "end": 352,
        "startLoc": {
          "line": 337,
          "column": 9,
          "position": 2851
        },
        "endLoc": {
          "line": 352,
          "column": 30,
          "position": 2970
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\graph-wrappers.ts",
        "start": 73,
        "end": 176,
        "startLoc": {
          "line": 73,
          "column": 6,
          "position": 778
        },
        "endLoc": {
          "line": 176,
          "column": 29,
          "position": 1888
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ",\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({\n        success: false,\n        error: 'Invalid request data',\n        details: error.errors,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    structuredLogger.error('Failed to add message to outbox'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\graph-wrappers.ts",
        "start": 375,
        "end": 389,
        "startLoc": {
          "line": 375,
          "column": 8,
          "position": 3168
        },
        "endLoc": {
          "line": 389,
          "column": 34,
          "position": 3282
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\hitl-v2.ts",
        "start": 162,
        "end": 176,
        "startLoc": {
          "line": 162,
          "column": 5,
          "position": 1774
        },
        "endLoc": {
          "line": 176,
          "column": 29,
          "position": 1888
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "},\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({\n        success: false,\n        error: 'Invalid request data',\n        details: error.errors,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    structuredLogger.error('Failed to get outbox messages'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\graph-wrappers.ts",
        "start": 418,
        "end": 432,
        "startLoc": {
          "line": 418,
          "column": 7,
          "position": 3508
        },
        "endLoc": {
          "line": 432,
          "column": 32,
          "position": 3623
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\graph-wrappers.ts",
        "start": 74,
        "end": 176,
        "startLoc": {
          "line": 74,
          "column": 7,
          "position": 782
        },
        "endLoc": {
          "line": 176,
          "column": 29,
          "position": 1888
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ",\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    if (error instanceof Error && error.message.includes('not found')) {\n      res.status(404).json({\n        success: false,\n        error: 'Message not found',\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    if (error instanceof Error && error.message.includes('cannot be cancelled'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\graph-wrappers.ts",
        "start": 500,
        "end": 513,
        "startLoc": {
          "line": 500,
          "column": 27,
          "position": 4216
        },
        "endLoc": {
          "line": 513,
          "column": 22,
          "position": 4343
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\graph-wrappers.ts",
        "start": 454,
        "end": 467,
        "startLoc": {
          "line": 454,
          "column": 25,
          "position": 3814
        },
        "endLoc": {
          "line": 467,
          "column": 24,
          "position": 3941
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "(filters.organizationId, filters);\n    \n    res.json({\n      success: true,\n      data: {\n        transactions,\n        total: transactions.length,\n        filters\n      },\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Error getting VAT transactions'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\fiscalidad-regional.ts",
        "start": 245,
        "end": 257,
        "startLoc": {
          "line": 245,
          "column": 19,
          "position": 2907
        },
        "endLoc": {
          "line": 257,
          "column": 33,
          "position": 2994
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\sepa-robust.ts",
        "start": 102,
        "end": 114,
        "startLoc": {
          "line": 102,
          "column": 16,
          "position": 1480
        },
        "endLoc": {
          "line": 114,
          "column": 41,
          "position": 1567
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ");\n    \n    if (!region) {\n      return res.status(404).json({\n        success: false,\n        error: 'Tax region not found'\n      });\n    }\n    \n    res.json({\n      success: true,\n      data: region,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Failed to get tax region'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\fiscalidad-regional-ue.ts",
        "start": 149,
        "end": 164,
        "startLoc": {
          "line": 149,
          "column": 2,
          "position": 1337
        },
        "endLoc": {
          "line": 164,
          "column": 27,
          "position": 1445
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\fiscalidad-regional.ts",
        "start": 197,
        "end": 212,
        "startLoc": {
          "line": 197,
          "column": 3,
          "position": 2505
        },
        "endLoc": {
          "line": 212,
          "column": 27,
          "position": 2613
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ", error as Error, {\n      org_id: req.params.orgId,\n      requested_by: req.ip\n    });\n    \n    res.status(400).json({\n      success: false,\n      error: 'INVALID_REQUEST',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n/**\n * GET /v1/finops-admin/kill-switch/:orgId/status\n * Check kill switch status for an organization\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\finops-admin.ts",
        "start": 153,
        "end": 169,
        "startLoc": {
          "line": 153,
          "column": 30,
          "position": 1199
        },
        "endLoc": {
          "line": 169,
          "column": 4,
          "position": 1295
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\finops-admin.ts",
        "start": 72,
        "end": 88,
        "startLoc": {
          "line": 72,
          "column": 30,
          "position": 574
        },
        "endLoc": {
          "line": 88,
          "column": 4,
          "position": 670
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ", error as Error, {\n      org_id: req.params.orgId,\n      requested_by: req.ip\n    });\n    \n    res.status(400).json({\n      success: false,\n      error: 'INVALID_REQUEST',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n/**\n * POST /v1/finops-admin/test-budget-exceeded\n * Test endpoint to trigger budget exceeded scenario\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\finops-admin.ts",
        "start": 189,
        "end": 205,
        "startLoc": {
          "line": 189,
          "column": 36,
          "position": 1488
        },
        "endLoc": {
          "line": 205,
          "column": 4,
          "position": 1584
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\finops-admin.ts",
        "start": 72,
        "end": 88,
        "startLoc": {
          "line": 72,
          "column": 30,
          "position": 574
        },
        "endLoc": {
          "line": 88,
          "column": 4,
          "position": 670
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", error as Error, {\n      traceId,\n      spanId\n    });\n    res.status(500).json({\n      success: false,\n      error: 'Internal server error',\n      message: (error as Error).message,\n      timestamp: new Date().toISOString(),\n      traceId\n    });\n  }\n})",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\external-integrations.ts",
        "start": 170,
        "end": 182,
        "startLoc": {
          "line": 170,
          "column": 27,
          "position": 1502
        },
        "endLoc": {
          "line": 182,
          "column": 2,
          "position": 1593
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\external-integrations.ts",
        "start": 122,
        "end": 135,
        "startLoc": {
          "line": 122,
          "column": 24,
          "position": 1134
        },
        "endLoc": {
          "line": 135,
          "column": 2,
          "position": 1227
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", {\n        traceId,\n        spanId,\n        errors: error.errors\n      });\n      res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors,\n        timestamp: new Date().toISOString(),\n        traceId\n      });\n    } else {\n      structuredLogger.error('Payment processing failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\external-integrations.ts",
        "start": 226,
        "end": 239,
        "startLoc": {
          "line": 226,
          "column": 28,
          "position": 1913
        },
        "endLoc": {
          "line": 239,
          "column": 28,
          "position": 2008
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\external-integrations.ts",
        "start": 109,
        "end": 122,
        "startLoc": {
          "line": 109,
          "column": 35,
          "position": 1038
        },
        "endLoc": {
          "line": 122,
          "column": 24,
          "position": 1133
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": ", error as Error, {\n        traceId,\n        spanId\n      });\n      res.status(500).json({\n        success: false,\n        error: 'Internal server error',\n        message: (error as Error).message,\n        timestamp: new Date().toISOString(),\n        traceId\n      });\n    }\n  }\n});\n\n/**\n * POST /v1/integrations/payment/refund\n * Refund payment\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\external-integrations.ts",
        "start": 239,
        "end": 257,
        "startLoc": {
          "line": 239,
          "column": 28,
          "position": 2009
        },
        "endLoc": {
          "line": 257,
          "column": 4,
          "position": 2107
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\external-integrations.ts",
        "start": 122,
        "end": 140,
        "startLoc": {
          "line": 122,
          "column": 24,
          "position": 1134
        },
        "endLoc": {
          "line": 140,
          "column": 4,
          "position": 1232
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n\n    res.json({\n      success: true,\n      data: result,\n      timestamp: new Date().toISOString(),\n      traceId\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      structuredLogger.warn('Refund validation failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\external-integrations.ts",
        "start": 278,
        "end": 288,
        "startLoc": {
          "line": 278,
          "column": 5,
          "position": 2308
        },
        "endLoc": {
          "line": 288,
          "column": 27,
          "position": 2388
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\external-integrations.ts",
        "start": 216,
        "end": 226,
        "startLoc": {
          "line": 216,
          "column": 5,
          "position": 1832
        },
        "endLoc": {
          "line": 226,
          "column": 28,
          "position": 1912
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", {\n        traceId,\n        spanId,\n        errors: error.errors\n      });\n      res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors,\n        timestamp: new Date().toISOString(),\n        traceId\n      });\n    } else {\n      structuredLogger.error('Payment refund failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\external-integrations.ts",
        "start": 288,
        "end": 301,
        "startLoc": {
          "line": 288,
          "column": 27,
          "position": 2389
        },
        "endLoc": {
          "line": 301,
          "column": 24,
          "position": 2484
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\external-integrations.ts",
        "start": 109,
        "end": 122,
        "startLoc": {
          "line": 109,
          "column": 35,
          "position": 1038
        },
        "endLoc": {
          "line": 122,
          "column": 24,
          "position": 1133
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", error as Error, {\n        traceId,\n        spanId\n      });\n      res.status(500).json({\n        success: false,\n        error: 'Internal server error',\n        message: (error as Error).message,\n        timestamp: new Date().toISOString(),\n        traceId\n      });\n    }\n  }\n});\n\n// ============================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\external-integrations.ts",
        "start": 301,
        "end": 316,
        "startLoc": {
          "line": 301,
          "column": 24,
          "position": 2485
        },
        "endLoc": {
          "line": 316,
          "column": 80,
          "position": 2583
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\external-integrations.ts",
        "start": 122,
        "end": 140,
        "startLoc": {
          "line": 122,
          "column": 24,
          "position": 1134
        },
        "endLoc": {
          "line": 140,
          "column": 4,
          "position": 1232
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ", error as Error, {\n      traceId,\n      spanId\n    });\n    res.status(500).json({\n      success: false,\n      error: 'Internal server error',\n      message: (error as Error).message,\n      timestamp: new Date().toISOString(),\n      traceId\n    });\n  }\n});\n\n/**\n * POST /v1/integrations/market-data/batch\n * Get market data for multiple symbols\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\external-integrations.ts",
        "start": 354,
        "end": 371,
        "startLoc": {
          "line": 354,
          "column": 29,
          "position": 2866
        },
        "endLoc": {
          "line": 371,
          "column": 4,
          "position": 2961
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\external-integrations.ts",
        "start": 122,
        "end": 184,
        "startLoc": {
          "line": 122,
          "column": 24,
          "position": 1134
        },
        "endLoc": {
          "line": 184,
          "column": 80,
          "position": 1597
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", {\n        traceId,\n        spanId,\n        errors: error.errors\n      });\n      res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors,\n        timestamp: new Date().toISOString(),\n        traceId\n      });\n    } else {\n      structuredLogger.error('Market data batch request failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\external-integrations.ts",
        "start": 400,
        "end": 413,
        "startLoc": {
          "line": 400,
          "column": 38,
          "position": 3229
        },
        "endLoc": {
          "line": 413,
          "column": 35,
          "position": 3324
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\external-integrations.ts",
        "start": 109,
        "end": 122,
        "startLoc": {
          "line": 109,
          "column": 35,
          "position": 1038
        },
        "endLoc": {
          "line": 122,
          "column": 24,
          "position": 1133
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ", error as Error, {\n        traceId,\n        spanId\n      });\n      res.status(500).json({\n        success: false,\n        error: 'Internal server error',\n        message: (error as Error).message,\n        timestamp: new Date().toISOString(),\n        traceId\n      });\n    }\n  }\n});\n\n// ============================================================================\n// WEATHER ROUTES",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\external-integrations.ts",
        "start": 413,
        "end": 429,
        "startLoc": {
          "line": 413,
          "column": 35,
          "position": 3325
        },
        "endLoc": {
          "line": 429,
          "column": 18,
          "position": 3425
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\external-integrations.ts",
        "start": 122,
        "end": 317,
        "startLoc": {
          "line": 122,
          "column": 24,
          "position": 1134
        },
        "endLoc": {
          "line": 317,
          "column": 22,
          "position": 2585
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ", error as Error, {\n      traceId,\n      spanId\n    });\n    res.status(500).json({\n      success: false,\n      error: 'Internal server error',\n      message: (error as Error).message,\n      timestamp: new Date().toISOString(),\n      traceId\n    });\n  }\n});\n\n/**\n * GET /v1/integrations/weather/forecast/:providerId/:location\n * Get weather forecast for location\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\external-integrations.ts",
        "start": 466,
        "end": 483,
        "startLoc": {
          "line": 466,
          "column": 30,
          "position": 3706
        },
        "endLoc": {
          "line": 483,
          "column": 4,
          "position": 3801
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\external-integrations.ts",
        "start": 122,
        "end": 184,
        "startLoc": {
          "line": 122,
          "column": 24,
          "position": 1134
        },
        "endLoc": {
          "line": 184,
          "column": 80,
          "position": 1597
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", {\n        traceId,\n        spanId,\n        errors: error.errors\n      });\n      res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors,\n        timestamp: new Date().toISOString(),\n        traceId\n      });\n    } else {\n      structuredLogger.error('Weather forecast request failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\external-integrations.ts",
        "start": 517,
        "end": 530,
        "startLoc": {
          "line": 517,
          "column": 37,
          "position": 4128
        },
        "endLoc": {
          "line": 530,
          "column": 34,
          "position": 4223
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\external-integrations.ts",
        "start": 109,
        "end": 122,
        "startLoc": {
          "line": 109,
          "column": 35,
          "position": 1038
        },
        "endLoc": {
          "line": 122,
          "column": 24,
          "position": 1133
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ", error as Error, {\n        traceId,\n        spanId\n      });\n      res.status(500).json({\n        success: false,\n        error: 'Internal server error',\n        message: (error as Error).message,\n        timestamp: new Date().toISOString(),\n        traceId\n      });\n    }\n  }\n});\n\n// ============================================================================\n// HEALTH AND STATUS ROUTES",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\external-integrations.ts",
        "start": 530,
        "end": 546,
        "startLoc": {
          "line": 530,
          "column": 34,
          "position": 4224
        },
        "endLoc": {
          "line": 546,
          "column": 28,
          "position": 4324
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\external-integrations.ts",
        "start": 122,
        "end": 317,
        "startLoc": {
          "line": 122,
          "column": 24,
          "position": 1134
        },
        "endLoc": {
          "line": 317,
          "column": 22,
          "position": 2585
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ", error as Error, {\n      traceId,\n      spanId\n    });\n    res.status(500).json({\n      success: false,\n      error: 'Internal server error',\n      message: (error as Error).message,\n      timestamp: new Date().toISOString(),\n      traceId\n    });\n  }\n});\n\n/**\n * GET /v1/integrations/health/:providerId\n * Get health status of specific provider\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\external-integrations.ts",
        "start": 581,
        "end": 598,
        "startLoc": {
          "line": 581,
          "column": 36,
          "position": 4634
        },
        "endLoc": {
          "line": 598,
          "column": 4,
          "position": 4729
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\external-integrations.ts",
        "start": 122,
        "end": 184,
        "startLoc": {
          "line": 122,
          "column": 24,
          "position": 1134
        },
        "endLoc": {
          "line": 184,
          "column": 80,
          "position": 1597
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ", error as Error, {\n      traceId,\n      spanId\n    });\n    res.status(500).json({\n      success: false,\n      error: 'Internal server error',\n      message: (error as Error).message,\n      timestamp: new Date().toISOString(),\n      traceId\n    });\n  }\n});\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\external-integrations.ts",
        "start": 629,
        "end": 643,
        "startLoc": {
          "line": 629,
          "column": 33,
          "position": 5016
        },
        "endLoc": {
          "line": 643,
          "column": 7,
          "position": 5111
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\external-integrations.ts",
        "start": 122,
        "end": 184,
        "startLoc": {
          "line": 122,
          "column": 24,
          "position": 1134
        },
        "endLoc": {
          "line": 184,
          "column": 80,
          "position": 1597
        }
      }
    },
    {
      "format": "typescript",
      "lines": 27,
      "fragment": "),\n  abTest: z.object({\n    enabled: z.boolean().default(false),\n    variants: z.array(z.object({\n      id: z.string(),\n      subject: z.string(),\n      htmlContent: z.string(),\n      percentage: z.number().min(0).max(100)\n    })).default([]),\n    winner: z.string().optional(),\n    testDuration: z.number().optional()\n  }).optional(),\n  automation: z.object({\n    enabled: z.boolean().default(false),\n    triggers: z.array(z.object({\n      type: z.string(),\n      conditions: z.record(z.any()),\n      delay: z.number().optional()\n    })).default([]),\n    actions: z.array(z.object({\n      type: z.string(),\n      config: z.record(z.any())\n    })).default([])\n  }).optional()\n});\n\nconst CreateSubscriberSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\email-marketing.ts",
        "start": 102,
        "end": 128,
        "startLoc": {
          "line": 102,
          "column": 2,
          "position": 1114
        },
        "endLoc": {
          "line": 128,
          "column": 23,
          "position": 1419
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\email-marketing.ts",
        "start": 61,
        "end": 87,
        "startLoc": {
          "line": 61,
          "column": 5,
          "position": 460
        },
        "endLoc": {
          "line": 87,
          "column": 21,
          "position": 765
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "]),\n    direction: z.enum(['asc', 'desc'])\n  }).optional(),\n  pagination: z.object({\n    page: z.number().min(1).default(1),\n    limit: z.number().min(1).max(100).default(20)\n  }).optional()\n});\n\n// ============================================================================\n// CAMPAIGN ROUTES",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\email-marketing.ts",
        "start": 178,
        "end": 188,
        "startLoc": {
          "line": 178,
          "column": 12,
          "position": 2259
        },
        "endLoc": {
          "line": 188,
          "column": 19,
          "position": 2359
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\document-management.service.ts",
        "start": 121,
        "end": 137,
        "startLoc": {
          "line": 121,
          "column": 7,
          "position": 1383
        },
        "endLoc": {
          "line": 137,
          "column": 18,
          "position": 1727
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      organizationId: req.user?.organizationId\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to create email campaign'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\email-marketing.ts",
        "start": 224,
        "end": 239,
        "startLoc": {
          "line": 224,
          "column": 42,
          "position": 2626
        },
        "endLoc": {
          "line": 239,
          "column": 34,
          "position": 2751
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\social-media-management.ts",
        "start": 171,
        "end": 186,
        "startLoc": {
          "line": 171,
          "column": 42,
          "position": 1971
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ".parse(req.query);\n\n    // Convert date strings to Date objects\n    if (searchParams.filters?.dateRange) {\n      if (searchParams.filters.dateRange.from) {\n        searchParams.filters.dateRange.from = new Date(searchParams.filters.dateRange.from);\n      }\n      if (searchParams.filters.dateRange.to) {\n        searchParams.filters.dateRange.to = new Date(searchParams.filters.dateRange.to);\n      }\n    }\n\n    const result = await emailMarketingService",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\email-marketing.ts",
        "start": 248,
        "end": 260,
        "startLoc": {
          "line": 248,
          "column": 22,
          "position": 2823
        },
        "endLoc": {
          "line": 260,
          "column": 22,
          "position": 2949
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\social-media-management.ts",
        "start": 387,
        "end": 399,
        "startLoc": {
          "line": 387,
          "column": 18,
          "position": 3649
        },
        "endLoc": {
          "line": 399,
          "column": 29,
          "position": 3775
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      organizationId: req.user?.organizationId\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to list email campaigns'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\email-marketing.ts",
        "start": 268,
        "end": 283,
        "startLoc": {
          "line": 268,
          "column": 41,
          "position": 3010
        },
        "endLoc": {
          "line": 283,
          "column": 33,
          "position": 3135
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\social-media-management.ts",
        "start": 171,
        "end": 186,
        "startLoc": {
          "line": 171,
          "column": 42,
          "position": 1971
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ": req.params.id,\n      organizationId: req.user?.organizationId\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to update email campaign'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\email-marketing.ts",
        "start": 364,
        "end": 378,
        "startLoc": {
          "line": 364,
          "column": 11,
          "position": 3753
        },
        "endLoc": {
          "line": 378,
          "column": 34,
          "position": 3862
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\social-media-management.ts",
        "start": 281,
        "end": 186,
        "startLoc": {
          "line": 281,
          "column": 10,
          "position": 2854
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      organizationId: req.user?.organizationId\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to create email subscriber'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\email-marketing.ts",
        "start": 495,
        "end": 510,
        "startLoc": {
          "line": 495,
          "column": 44,
          "position": 4720
        },
        "endLoc": {
          "line": 510,
          "column": 36,
          "position": 4845
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\social-media-management.ts",
        "start": 171,
        "end": 186,
        "startLoc": {
          "line": 171,
          "column": 42,
          "position": 1971
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ": req.params.id,\n      organizationId: req.user?.organizationId\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to update email subscriber'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\email-marketing.ts",
        "start": 599,
        "end": 613,
        "startLoc": {
          "line": 599,
          "column": 13,
          "position": 5558
        },
        "endLoc": {
          "line": 613,
          "column": 36,
          "position": 5667
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\social-media-management.ts",
        "start": 281,
        "end": 186,
        "startLoc": {
          "line": 281,
          "column": 10,
          "position": 2854
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ".getStats();\n    \n    res.json({\n      success: true,\n      data: stats,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Failed to get dunning stats', {\n      error: error instanceof Error ? error.message : String(error),\n      requestId: req.headers['x-request-id'] as string || ''\n    });\n    \n    res.status(500).json({\n      success: false,\n      error: 'Failed to get dunning stats',\n      message: error instanceof Error ? error.message : String(error)\n    });\n  }\n});\n\n/**\n * POST /dunning-3-toques/process\n * Inicia el procesamiento de campañas de dunning\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\dunning-3-toques.ts",
        "start": 50,
        "end": 74,
        "startLoc": {
          "line": 50,
          "column": 22,
          "position": 515
        },
        "endLoc": {
          "line": 74,
          "column": 4,
          "position": 696
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\dunning-solid.ts",
        "start": 105,
        "end": 129,
        "startLoc": {
          "line": 105,
          "column": 20,
          "position": 1377
        },
        "endLoc": {
          "line": 129,
          "column": 4,
          "position": 1558
        }
      }
    },
    {
      "format": "typescript",
      "lines": 31,
      "fragment": ".updateConfig(validatedData);\n    \n    structuredLogger.info('Dunning configuration updated', {\n      config: validatedData,\n      requestId: req.headers['x-request-id'] as string || ''\n    });\n    \n    res.json({\n      success: true,\n      message: 'Dunning configuration updated successfully',\n      data: validatedData,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Failed to update dunning config', {\n      error: error instanceof Error ? error.message : String(error),\n      requestId: req.headers['x-request-id'] as string || ''\n    });\n    \n    res.status(500).json({\n      success: false,\n      error: 'Failed to update dunning configuration',\n      message: error instanceof Error ? error.message : String(error)\n    });\n  }\n});\n\n/**\n * GET /dunning-3-toques/config\n * Obtiene la configuración actual del servicio de dunning\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\dunning-3-toques.ts",
        "start": 311,
        "end": 341,
        "startLoc": {
          "line": 311,
          "column": 22,
          "position": 2591
        },
        "endLoc": {
          "line": 341,
          "column": 4,
          "position": 2823
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\dunning-solid.ts",
        "start": 480,
        "end": 510,
        "startLoc": {
          "line": 480,
          "column": 20,
          "position": 4471
        },
        "endLoc": {
          "line": 510,
          "column": 4,
          "position": 4703
        }
      }
    },
    {
      "format": "typescript",
      "lines": 27,
      "fragment": ",\n      notificationEnabled: true\n    };\n    \n    res.json({\n      success: true,\n      data: config,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Failed to get dunning config', {\n      error: error instanceof Error ? error.message : String(error),\n      requestId: req.headers['x-request-id'] as string || ''\n    });\n    \n    res.status(500).json({\n      success: false,\n      error: 'Failed to get dunning configuration',\n      message: error instanceof Error ? error.message : String(error)\n    });\n  }\n});\n\n/**\n * POST /dunning-3-toques/campaigns/:campaignId/cancel\n * Cancela una campaña de dunning\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\dunning-3-toques.ts",
        "start": 357,
        "end": 383,
        "startLoc": {
          "line": 357,
          "column": 3,
          "position": 2947
        },
        "endLoc": {
          "line": 383,
          "column": 4,
          "position": 3134
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\dunning-solid.ts",
        "start": 525,
        "end": 551,
        "startLoc": {
          "line": 525,
          "column": 2,
          "position": 4826
        },
        "endLoc": {
          "line": 551,
          "column": 4,
          "position": 5013
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "),\n  size: z.number().positive(),\n  mimeType: z.string(),\n  checksum: z.string(),\n  isPublic: z.boolean().default(false),\n  isEncrypted: z.boolean().default(false),\n  retentionPolicy: z.object({\n    retentionDays: z.number().positive().optional(),\n    autoDelete: z.boolean().default(false),\n    legalHold: z.boolean().default(false)\n  }).optional()\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\document-management.ts",
        "start": 58,
        "end": 69,
        "startLoc": {
          "line": 58,
          "column": 8,
          "position": 464
        },
        "endLoc": {
          "line": 69,
          "column": 2,
          "position": 604
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\document-management.service.ts",
        "start": 86,
        "end": 96,
        "startLoc": {
          "line": 86,
          "column": 2,
          "position": 924
        },
        "endLoc": {
          "line": 96,
          "column": 2,
          "position": 1063
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "().optional()\n    }).optional(),\n    sizeRange: z.object({\n      min: z.number().optional(),\n      max: z.number().optional()\n    }).optional()\n  }).optional(),\n  sort: z.object({\n    field: z.enum(['name', 'createdAt', 'updatedAt', 'size', 'type']),\n    direction: z.enum(['asc', 'desc'])\n  }).optional(),\n  pagination: z.object({\n    page: z.number().min(1).default(1),\n    limit: z.number().min(1).max(100).default(20)\n  }).optional()\n});\n\n// ============================================================================\n// DOCUMENT ROUTES",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\document-management.ts",
        "start": 116,
        "end": 134,
        "startLoc": {
          "line": 116,
          "column": 9,
          "position": 1307
        },
        "endLoc": {
          "line": 134,
          "column": 19,
          "position": 1511
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\document-management.service.ts",
        "start": 113,
        "end": 137,
        "startLoc": {
          "line": 113,
          "column": 5,
          "position": 1279
        },
        "endLoc": {
          "line": 137,
          "column": 18,
          "position": 1727
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      organizationId: req.user?.organizationId\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to create document'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\document-management.ts",
        "start": 164,
        "end": 179,
        "startLoc": {
          "line": 164,
          "column": 36,
          "position": 1733
        },
        "endLoc": {
          "line": 179,
          "column": 28,
          "position": 1858
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\social-media-management.ts",
        "start": 171,
        "end": 186,
        "startLoc": {
          "line": 171,
          "column": 42,
          "position": 1971
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      organizationId: req.user?.organizationId\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to list documents'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\document-management.ts",
        "start": 198,
        "end": 213,
        "startLoc": {
          "line": 198,
          "column": 35,
          "position": 2010
        },
        "endLoc": {
          "line": 213,
          "column": 27,
          "position": 2135
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\social-media-management.ts",
        "start": 171,
        "end": 186,
        "startLoc": {
          "line": 171,
          "column": 42,
          "position": 1971
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ": req.params.id,\n      organizationId: req.user?.organizationId\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to update document'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\document-management.ts",
        "start": 288,
        "end": 302,
        "startLoc": {
          "line": 288,
          "column": 11,
          "position": 2708
        },
        "endLoc": {
          "line": 302,
          "column": 28,
          "position": 2817
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\social-media-management.ts",
        "start": 281,
        "end": 186,
        "startLoc": {
          "line": 281,
          "column": 10,
          "position": 2854
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      documentId: req.params.id,\n      organizationId: req.user?.organizationId\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to create document version'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\document-management.ts",
        "start": 381,
        "end": 397,
        "startLoc": {
          "line": 381,
          "column": 44,
          "position": 3380
        },
        "endLoc": {
          "line": 397,
          "column": 36,
          "position": 3516
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\document-management.ts",
        "start": 286,
        "end": 186,
        "startLoc": {
          "line": 286,
          "column": 36,
          "position": 2681
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ", async (req: AuthenticatedRequest, res) => {\n  try {\n    const { id } = req.params;\n    const organizationId = req.user?.organizationId || 'demo-org';\n\n    const document = await documentManagementService.getDocument(id, organizationId);\n\n    if (!document) {\n      return res.status(404).json({\n        success: false,\n        error: 'Document not found'\n      });\n    }\n\n    res.json({\n      success: true,\n      data: document.",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\document-management.ts",
        "start": 403,
        "end": 419,
        "startLoc": {
          "line": 403,
          "column": 16,
          "position": 3538
        },
        "endLoc": {
          "line": 419,
          "column": 2,
          "position": 3683
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\document-management.ts",
        "start": 219,
        "end": 235,
        "startLoc": {
          "line": 219,
          "column": 7,
          "position": 2157
        },
        "endLoc": {
          "line": 235,
          "column": 2,
          "position": 2302
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      documentId: req.params.id,\n      organizationId: req.user?.organizationId\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to grant document permission'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\document-management.ts",
        "start": 476,
        "end": 492,
        "startLoc": {
          "line": 476,
          "column": 46,
          "position": 4090
        },
        "endLoc": {
          "line": 492,
          "column": 38,
          "position": 4226
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\document-management.ts",
        "start": 286,
        "end": 186,
        "startLoc": {
          "line": 286,
          "column": 36,
          "position": 2681
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ", async (req: AuthenticatedRequest, res) => {\n  try {\n    const organizationId = req.user?.organizationId || 'demo-org';\n    const searchParams = SearchDocumentsSchema.parse(req.query);\n\n    const result = await documentManagementService.searchDocuments(organizationId, searchParams);\n\n    res.json({\n      success: true,\n      data: result,\n      message: 'Document search completed successfully'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\document-management.ts",
        "start": 502,
        "end": 512,
        "startLoc": {
          "line": 502,
          "column": 10,
          "position": 4255
        },
        "endLoc": {
          "line": 512,
          "column": 41,
          "position": 4361
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\document-management.ts",
        "start": 185,
        "end": 195,
        "startLoc": {
          "line": 185,
          "column": 4,
          "position": 1880
        },
        "endLoc": {
          "line": 195,
          "column": 35,
          "position": 1986
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      organizationId: req.user?.organizationId\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to search documents'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\document-management.ts",
        "start": 515,
        "end": 530,
        "startLoc": {
          "line": 515,
          "column": 37,
          "position": 4385
        },
        "endLoc": {
          "line": 530,
          "column": 29,
          "position": 4510
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\social-media-management.ts",
        "start": 171,
        "end": 186,
        "startLoc": {
          "line": 171,
          "column": 42,
          "position": 1971
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "]),\n  startDate: z.string().datetime(),\n  endDate: z.string().datetime(),\n  generatedBy: z.string().min(1),\n});\n\nconst GetStatsSchema = z.object({\n  organizationId: z.string().min(1),\n});\n\n// Routes\n\n// DLQ Message Management",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\dlg-grooming.ts",
        "start": 113,
        "end": 125,
        "startLoc": {
          "line": 113,
          "column": 9,
          "position": 1746
        },
        "endLoc": {
          "line": 125,
          "column": 26,
          "position": 1837
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\supplier-scorecard.ts",
        "start": 134,
        "end": 84,
        "startLoc": {
          "line": 134,
          "column": 17,
          "position": 2126
        },
        "endLoc": {
          "line": 84,
          "column": 55,
          "position": 1026
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ".generateReport(\n      reportData.organizationId,\n      reportData.reportType,\n      reportData.startDate,\n      reportData.endDate,\n      reportData.generatedBy\n    );\n    \n    res.status(201).json({\n      success: true,\n      data: report,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Error generating DLQ report'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\dlg-grooming.ts",
        "start": 326,
        "end": 340,
        "startLoc": {
          "line": 326,
          "column": 19,
          "position": 3643
        },
        "endLoc": {
          "line": 340,
          "column": 30,
          "position": 3743
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\sepa-robust.ts",
        "start": 264,
        "end": 389,
        "startLoc": {
          "line": 264,
          "column": 18,
          "position": 2868
        },
        "endLoc": {
          "line": 389,
          "column": 35,
          "position": 4393
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "));\n    }\n\n    if (conditions.length > 0) {\n      query = query.where(and(...conditions));\n    }\n\n    // Apply pagination\n    const offset = (pagination.page - 1) * pagination.limit;\n    query = query.limit(pagination.limit).offset(offset);\n\n    const result = await query;\n\n    // Get total count for pagination\n    const totalQuery = db.select({ count: count() }).from(deals",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\deals.ts",
        "start": 68,
        "end": 82,
        "startLoc": {
          "line": 68,
          "column": 10,
          "position": 610
        },
        "endLoc": {
          "line": 82,
          "column": 6,
          "position": 743
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\invoices.ts",
        "start": 75,
        "end": 90,
        "startLoc": {
          "line": 75,
          "column": 9,
          "position": 669
        },
        "endLoc": {
          "line": 90,
          "column": 9,
          "position": 804
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "router.get('/:id', async (req, res) => {\n  try {\n    const { id } = req.params;\n    const orgId = req.headers['x-org-id'] as string;\n    \n    if (!orgId) {\n      return res.status(400).json({ error: 'Missing x-org-id header' });\n    }\n\n    // Set RLS context\n    await db.execute(`SET LOCAL app.org_id = '${orgId}'`);\n\n    const [deal",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\deals.ts",
        "start": 120,
        "end": 132,
        "startLoc": {
          "line": 120,
          "column": 1,
          "position": 1016
        },
        "endLoc": {
          "line": 132,
          "column": 5,
          "position": 1138
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\invoices.ts",
        "start": 142,
        "end": 154,
        "startLoc": {
          "line": 142,
          "column": 1,
          "position": 1190
        },
        "endLoc": {
          "line": 154,
          "column": 8,
          "position": 1312
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "router.post('/', async (req, res) => {\n  try {\n    const orgId = req.headers['x-org-id'] as string;\n    const userId = req.headers['x-user-id'] as string;\n    \n    if (!orgId) {\n      return res.status(400).json({ error: 'Missing x-org-id header' });\n    }\n\n    // Validate request body\n    const dealData",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\deals.ts",
        "start": 166,
        "end": 176,
        "startLoc": {
          "line": 166,
          "column": 1,
          "position": 1391
        },
        "endLoc": {
          "line": 176,
          "column": 9,
          "position": 1499
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\invoices.ts",
        "start": 188,
        "end": 198,
        "startLoc": {
          "line": 188,
          "column": 1,
          "position": 1565
        },
        "endLoc": {
          "line": 198,
          "column": 12,
          "position": 1673
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "router.put('/:id', async (req, res) => {\n  try {\n    const { id } = req.params;\n    const orgId = req.headers['x-org-id'] as string;\n    const userId = req.headers['x-user-id'] as string;\n    \n    if (!orgId) {\n      return res.status(400).json({ error: 'Missing x-org-id header' });\n    }\n\n    // Validate request body\n    const updateData = UpdateDealSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\deals.ts",
        "start": 229,
        "end": 240,
        "startLoc": {
          "line": 229,
          "column": 1,
          "position": 1880
        },
        "endLoc": {
          "line": 240,
          "column": 17,
          "position": 2008
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\invoices.ts",
        "start": 281,
        "end": 292,
        "startLoc": {
          "line": 281,
          "column": 1,
          "position": 2391
        },
        "endLoc": {
          "line": 292,
          "column": 20,
          "position": 2519
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", async (req, res) => {\n  try {\n    const { id } = req.params;\n    const orgId = req.headers['x-org-id'] as string;\n    const userId = req.headers['x-user-id'] as string;\n    \n    if (!orgId) {\n      return res.status(400).json({ error: 'Missing x-org-id header' });\n    }\n\n    // Validate request body\n    const {",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\deals.ts",
        "start": 296,
        "end": 307,
        "startLoc": {
          "line": 296,
          "column": 18,
          "position": 2410
        },
        "endLoc": {
          "line": 307,
          "column": 2,
          "position": 2529
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\invoices.ts",
        "start": 281,
        "end": 198,
        "startLoc": {
          "line": 281,
          "column": 7,
          "position": 2396
        },
        "endLoc": {
          "line": 198,
          "column": 12,
          "position": 1673
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ")\n      .where(eq(deals.id, id))\n      .returning();\n\n    if (!updatedDeal) {\n      return res.status(404).json({ \n        error: 'Deal not found',\n        message: `Deal with ID ${id} not found or access denied`\n      });\n    }\n\n    structuredLogger.info('Deal stage moved'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\deals.ts",
        "start": 332,
        "end": 343,
        "startLoc": {
          "line": 332,
          "column": 11,
          "position": 2748
        },
        "endLoc": {
          "line": 343,
          "column": 19,
          "position": 2829
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\deals.ts",
        "start": 250,
        "end": 261,
        "startLoc": {
          "line": 250,
          "column": 2,
          "position": 2085
        },
        "endLoc": {
          "line": 261,
          "column": 15,
          "position": 2166
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "});\n\n    res.json({\n      success: true,\n      data: updatedDeal\n    });\n\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    structuredLogger.error('Failed to move deal stage'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\deals.ts",
        "start": 350,
        "end": 365,
        "startLoc": {
          "line": 350,
          "column": 5,
          "position": 2869
        },
        "endLoc": {
          "line": 365,
          "column": 28,
          "position": 2969
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\deals.ts",
        "start": 266,
        "end": 281,
        "startLoc": {
          "line": 266,
          "column": 5,
          "position": 2193
        },
        "endLoc": {
          "line": 281,
          "column": 24,
          "position": 2293
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "router.delete('/:id', async (req, res) => {\n  try {\n    const { id } = req.params;\n    const orgId = req.headers['x-org-id'] as string;\n    const userId = req.headers['x-user-id'] as string;\n    \n    if (!orgId) {\n      return res.status(400).json({ error: 'Missing x-org-id header' });\n    }\n\n    // Set RLS context\n    await db.execute(`SET LOCAL app.org_id = '${orgId}'`);\n\n    const [deletedDeal",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\deals.ts",
        "start": 380,
        "end": 393,
        "startLoc": {
          "line": 380,
          "column": 1,
          "position": 3081
        },
        "endLoc": {
          "line": 393,
          "column": 12,
          "position": 3222
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\invoices.ts",
        "start": 441,
        "end": 396,
        "startLoc": {
          "line": 441,
          "column": 1,
          "position": 3747
        },
        "endLoc": {
          "line": 396,
          "column": 15,
          "position": 3420
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ";\n\n    res.set({\n      'X-Est-Cost-EUR': '0.0020',\n      'X-Budget-Pct': '0.2',\n      'X-Latency-ms': '40',\n      'X-Route': 'local',\n      'X-Correlation-Id': `req_${Date.now()}`\n    });\n\n    res.json({\n      success: true,\n      data: summary\n    });\n\n  } catch (error) {\n    structuredLogger",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\deals.ts",
        "start": 475,
        "end": 491,
        "startLoc": {
          "line": 475,
          "column": 2,
          "position": 4038
        },
        "endLoc": {
          "line": 491,
          "column": 17,
          "position": 4134
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\interactions.ts",
        "start": 242,
        "end": 257,
        "startLoc": {
          "line": 242,
          "column": 2,
          "position": 2082
        },
        "endLoc": {
          "line": 257,
          "column": 7,
          "position": 2179
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", async (req, res) => {\n  try {\n    const orgId = req.headers['x-org-id'] as string;\n    \n    if (!orgId) {\n      return res.status(400).json({ error: 'Missing x-org-id header' });\n    }\n\n    // Set RLS context\n    await db.execute(`SET LOCAL app.org_id = '${orgId}'`);\n\n    // Get analytics data",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\deals.ts",
        "start": 503,
        "end": 514,
        "startLoc": {
          "line": 503,
          "column": 13,
          "position": 4223
        },
        "endLoc": {
          "line": 514,
          "column": 22,
          "position": 4321
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\deals.ts",
        "start": 433,
        "end": 444,
        "startLoc": {
          "line": 433,
          "column": 11,
          "position": 3528
        },
        "endLoc": {
          "line": 444,
          "column": 20,
          "position": 3626
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ";\n\n    res.set({\n      'X-Est-Cost-EUR': '0.0030',\n      'X-Budget-Pct': '0.3',\n      'X-Latency-ms': '60',\n      'X-Route': 'local',\n      'X-Correlation-Id': `req_${Date.now()}`\n    });\n\n    res.json({\n      success: true,\n      data: analytics\n    });\n\n  } catch (error) {\n    structuredLogger",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\deals.ts",
        "start": 559,
        "end": 575,
        "startLoc": {
          "line": 559,
          "column": 2,
          "position": 4955
        },
        "endLoc": {
          "line": 575,
          "column": 17,
          "position": 5051
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\interactions.ts",
        "start": 274,
        "end": 289,
        "startLoc": {
          "line": 274,
          "column": 2,
          "position": 2329
        },
        "endLoc": {
          "line": 289,
          "column": 7,
          "position": 2426
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", async (req, res) => {\n  try {\n    const { organizationId, limit = 100, offset = 0 } = req.query;\n    \n    if (!organizationId) {\n      return res.status(400).json({\n        success: false,\n        error: 'organizationId is required'\n      });\n    }\n\n    // En un sistema real, esto vendría de la base de datos\n    const recommendations",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\deals-nba.ts",
        "start": 207,
        "end": 219,
        "startLoc": {
          "line": 207,
          "column": 19,
          "position": 1715
        },
        "endLoc": {
          "line": 219,
          "column": 16,
          "position": 1819
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\dunning-3-toques.ts",
        "start": 263,
        "end": 275,
        "startLoc": {
          "line": 263,
          "column": 20,
          "position": 2207
        },
        "endLoc": {
          "line": 275,
          "column": 16,
          "position": 2311
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "error: error instanceof Error ? error.message : String(error),\n      requestId: req.headers['x-request-id'] as string || ''\n    });\n    \n    res.status(500).json({\n      success: false,\n      error: 'Failed to get NBA recommendations',\n      message: error instanceof Error ? error.message : String(error)\n    });\n  }\n});\n\n/**\n * GET /deals-nba/explanation/:recommendationId\n * Obtiene la explicación detallada de una recomendación\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\deals-nba.ts",
        "start": 235,
        "end": 250,
        "startLoc": {
          "line": 235,
          "column": 7,
          "position": 1937
        },
        "endLoc": {
          "line": 250,
          "column": 4,
          "position": 2048
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\deals-nba.ts",
        "start": 142,
        "end": 157,
        "startLoc": {
          "line": 142,
          "column": 7,
          "position": 1209
        },
        "endLoc": {
          "line": 157,
          "column": 4,
          "position": 1320
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "senderId: z.string().uuid(),\n  senderType: z.enum(['customer', 'agent', 'bot']),\n  message: z.string().min(1),\n  messageType: z.enum(['text', 'image', 'file', 'system']).default('text'),\n  attachments: z.array(z.object({\n    id: z.string(),\n    name: z.string(),\n    url: z.string().url(),\n    size: z.number(),\n    type: z.string()\n  })).default([])\n});\n\nconst CreateArticleSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\customer-support.ts",
        "start": 59,
        "end": 72,
        "startLoc": {
          "line": 59,
          "column": 3,
          "position": 579
        },
        "endLoc": {
          "line": 72,
          "column": 20,
          "position": 747
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\customer-support.service.ts",
        "start": 60,
        "end": 48,
        "startLoc": {
          "line": 60,
          "column": 3,
          "position": 592
        },
        "endLoc": {
          "line": 48,
          "column": 19,
          "position": 378
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "),\n  skills: z.array(z.string()).default([]),\n  languages: z.array(z.string()).default(['en']),\n  workingHours: z.object({\n    timezone: z.string().default('UTC'),\n    schedule: z.record(z.object({\n      start: z.string(),\n      end: z.string(),\n      isWorking: z.boolean().default(true)\n    }))\n  }).optional()\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\customer-support.ts",
        "start": 86,
        "end": 97,
        "startLoc": {
          "line": 86,
          "column": 3,
          "position": 964
        },
        "endLoc": {
          "line": 97,
          "column": 2,
          "position": 1102
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\customer-support.service.ts",
        "start": 100,
        "end": 110,
        "startLoc": {
          "line": 100,
          "column": 2,
          "position": 1159
        },
        "endLoc": {
          "line": 110,
          "column": 2,
          "position": 1296
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "});\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to create support ticket'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\customer-support.ts",
        "start": 129,
        "end": 141,
        "startLoc": {
          "line": 129,
          "column": 5,
          "position": 1322
        },
        "endLoc": {
          "line": 141,
          "column": 34,
          "position": 1410
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\social-media-management.ts",
        "start": 174,
        "end": 186,
        "startLoc": {
          "line": 174,
          "column": 5,
          "position": 2008
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "});\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to update support ticket'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\customer-support.ts",
        "start": 237,
        "end": 249,
        "startLoc": {
          "line": 237,
          "column": 5,
          "position": 2230
        },
        "endLoc": {
          "line": 249,
          "column": 34,
          "position": 2318
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\social-media-management.ts",
        "start": 174,
        "end": 186,
        "startLoc": {
          "line": 174,
          "column": 5,
          "position": 2008
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      ticketId: req.params.id\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to send message'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\customer-support.ts",
        "start": 324,
        "end": 339,
        "startLoc": {
          "line": 324,
          "column": 33,
          "position": 2832
        },
        "endLoc": {
          "line": 339,
          "column": 25,
          "position": 2956
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\customer-support.ts",
        "start": 234,
        "end": 186,
        "startLoc": {
          "line": 234,
          "column": 42,
          "position": 2194
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error'\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to create knowledge base article'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\customer-support.ts",
        "start": 400,
        "end": 414,
        "startLoc": {
          "line": 400,
          "column": 50,
          "position": 3364
        },
        "endLoc": {
          "line": 414,
          "column": 42,
          "position": 3477
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\customer-support.ts",
        "start": 127,
        "end": 186,
        "startLoc": {
          "line": 127,
          "column": 42,
          "position": 1297
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error'\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to create support agent'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\customer-support.ts",
        "start": 479,
        "end": 493,
        "startLoc": {
          "line": 479,
          "column": 41,
          "position": 3914
        },
        "endLoc": {
          "line": 493,
          "column": 33,
          "position": 4027
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\customer-support.ts",
        "start": 127,
        "end": 186,
        "startLoc": {
          "line": 127,
          "column": 42,
          "position": 1297
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 32,
      "fragment": "z.object({\n    title: z.string().min(1).max(255),\n    description: z.string().optional(),\n    excerpt: z.string().optional(),\n    tags: z.array(z.string()).default([]),\n    categories: z.array(z.string()).default([]),\n    author: z.string().min(1),\n    language: z.string().default('es'),\n    keywords: z.array(z.string()).default([]),\n    customFields: z.record(z.any()).default({}),\n    seo: z.object({\n      metaTitle: z.string().optional(),\n      metaDescription: z.string().optional(),\n      metaKeywords: z.array(z.string()).default([]),\n      canonicalUrl: z.string().optional(),\n      ogTitle: z.string().optional(),\n      ogDescription: z.string().optional(),\n      ogImage: z.string().optional(),\n      twitterCard: z.string().optional(),\n      structuredData: z.record(z.any()).optional()\n    }).optional(),\n    analytics: z.object({\n      views: z.number().default(0),\n      uniqueViews: z.number().default(0),\n      shares: z.number().default(0),\n      comments: z.number().default(0),\n      likes: z.number().default(0),\n      engagement: z.number().default(0),\n      bounceRate: z.number().default(0),\n      timeOnPage: z.number().default(0)\n    }).optional()\n  }),",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\content-management.ts",
        "start": 50,
        "end": 81,
        "startLoc": {
          "line": 50,
          "column": 2,
          "position": 297
        },
        "endLoc": {
          "line": 81,
          "column": 2,
          "position": 787
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\content-management.service.ts",
        "start": 33,
        "end": 64,
        "startLoc": {
          "line": 33,
          "column": 2,
          "position": 178
        },
        "endLoc": {
          "line": 64,
          "column": 2,
          "position": 667
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "().optional(),\n  isPublic: z.boolean().default(false),\n  isFeatured: z.boolean().default(false),\n  isSticky: z.boolean().default(false),\n  allowComments: z.boolean().default(true),\n  allowSharing: z.boolean().default(true),\n  workflow: z.object({\n    currentStep: z.string(),\n    steps: z.array(z.object({\n      step: z.string(),\n      status: z.enum(['pending', 'in_progress', 'completed', 'rejected']),\n      assignedTo: z.string().uuid().optional(),\n      completedAt: z.string",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\content-management.ts",
        "start": 90,
        "end": 102,
        "startLoc": {
          "line": 90,
          "column": 9,
          "position": 943
        },
        "endLoc": {
          "line": 102,
          "column": 7,
          "position": 1125
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\content-management.service.ts",
        "start": 98,
        "end": 110,
        "startLoc": {
          "line": 98,
          "column": 5,
          "position": 1107
        },
        "endLoc": {
          "line": 110,
          "column": 5,
          "position": 1289
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "),\n  workflow: z.object({\n    currentStep: z.string(),\n    steps: z.array(z.object({\n      step: z.string(),\n      status: z.enum(['pending', 'in_progress', 'completed', 'rejected']),\n      assignedTo: z.string().uuid().optional(),\n      completedAt: z.string().datetime().optional(),\n      comments: z.string().optional()\n    })).default([]),\n    approvedBy: z.string().uuid().optional(),\n    approvedAt: z.string().datetime().optional()\n  }).optional()\n});\n\nconst CreateVersionSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\content-management.ts",
        "start": 160,
        "end": 175,
        "startLoc": {
          "line": 160,
          "column": 2,
          "position": 2065
        },
        "endLoc": {
          "line": 175,
          "column": 20,
          "position": 2253
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\content-management.service.ts",
        "start": 103,
        "end": 110,
        "startLoc": {
          "line": 103,
          "column": 5,
          "position": 1192
        },
        "endLoc": {
          "line": 110,
          "column": 20,
          "position": 1216
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "().optional()\n    }).optional(),\n    isPublic: z.boolean().optional(),\n    isFeatured: z.boolean().optional()\n  }).optional(),\n  sort: z.object({\n    field: z.enum(['title', 'createdAt', 'updatedAt', 'publishedAt', 'views', 'engagement']),\n    direction: z.enum(['asc', 'desc'])\n  }).optional(),\n  pagination: z.object({\n    page: z.number().min(1).default(1),\n    limit: z.number().min(1).max(100).default(20)\n  }).optional()\n});\n\n// ============================================================================\n// CONTENT ROUTES",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\content-management.ts",
        "start": 194,
        "end": 210,
        "startLoc": {
          "line": 194,
          "column": 9,
          "position": 2600
        },
        "endLoc": {
          "line": 210,
          "column": 18,
          "position": 2789
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\content-management.service.ts",
        "start": 133,
        "end": 137,
        "startLoc": {
          "line": 133,
          "column": 5,
          "position": 1601
        },
        "endLoc": {
          "line": 137,
          "column": 18,
          "position": 1727
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      organizationId: req.user?.organizationId\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to create content'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\content-management.ts",
        "start": 256,
        "end": 271,
        "startLoc": {
          "line": 256,
          "column": 35,
          "position": 3211
        },
        "endLoc": {
          "line": 271,
          "column": 27,
          "position": 3336
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\social-media-management.ts",
        "start": 171,
        "end": 186,
        "startLoc": {
          "line": 171,
          "column": 42,
          "position": 1971
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ".parse(req.query);\n\n    // Convert date strings to Date objects\n    if (searchParams.filters?.dateRange) {\n      if (searchParams.filters.dateRange.from) {\n        searchParams.filters.dateRange.from = new Date(searchParams.filters.dateRange.from);\n      }\n      if (searchParams.filters.dateRange.to) {\n        searchParams.filters.dateRange.to = new Date(searchParams.filters.dateRange.to);\n      }\n    }\n\n    const result = await contentManagementService",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\content-management.ts",
        "start": 280,
        "end": 292,
        "startLoc": {
          "line": 280,
          "column": 20,
          "position": 3408
        },
        "endLoc": {
          "line": 292,
          "column": 25,
          "position": 3534
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\social-media-management.ts",
        "start": 387,
        "end": 399,
        "startLoc": {
          "line": 387,
          "column": 18,
          "position": 3649
        },
        "endLoc": {
          "line": 399,
          "column": 29,
          "position": 3775
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      organizationId: req.user?.organizationId\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to list content'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\content-management.ts",
        "start": 300,
        "end": 315,
        "startLoc": {
          "line": 300,
          "column": 33,
          "position": 3595
        },
        "endLoc": {
          "line": 315,
          "column": 25,
          "position": 3720
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\social-media-management.ts",
        "start": 171,
        "end": 186,
        "startLoc": {
          "line": 171,
          "column": 42,
          "position": 1971
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", organizationId);\n\n    if (!content) {\n      return res.status(404).json({\n        success: false,\n        error: 'Content not found'\n      });\n    }\n\n    res.json({\n      success: true,\n      data: content,\n      message: 'Content retrieved successfully'\n    });\n  } catch (error) {\n    structuredLogger.error('Failed to get content by slug via API'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\content-management.ts",
        "start": 360,
        "end": 375,
        "startLoc": {
          "line": 360,
          "column": 5,
          "position": 4088
        },
        "endLoc": {
          "line": 375,
          "column": 40,
          "position": 4189
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\content-management.ts",
        "start": 326,
        "end": 341,
        "startLoc": {
          "line": 326,
          "column": 3,
          "position": 3815
        },
        "endLoc": {
          "line": 341,
          "column": 32,
          "position": 3916
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "= {\n      ...validatedData,\n      publishedAt: validatedData.publishedAt ? new Date(validatedData.publishedAt) : undefined,\n      scheduledAt: validatedData.scheduledAt ? new Date(validatedData.scheduledAt) : undefined,\n      expiresAt: validatedData.expiresAt ? new Date(validatedData.expiresAt) : undefined,\n      workflow: validatedData.workflow ? {\n        ...validatedData.workflow,\n        steps: validatedData.workflow.steps.map(step => ({\n          ...step,\n          completedAt: step.completedAt ? new Date(step.completedAt) : undefined\n        })),\n        approvedAt: validatedData.workflow.approvedAt ? new Date(validatedData.workflow.approvedAt) : undefined\n      } : undefined\n    };\n\n    const content = await contentManagementService.updateContent",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\content-management.ts",
        "start": 398,
        "end": 413,
        "startLoc": {
          "line": 398,
          "column": 2,
          "position": 4392
        },
        "endLoc": {
          "line": 413,
          "column": 14,
          "position": 4595
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\content-management.ts",
        "start": 222,
        "end": 237,
        "startLoc": {
          "line": 222,
          "column": 2,
          "position": 2889
        },
        "endLoc": {
          "line": 237,
          "column": 14,
          "position": 3092
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ": req.params.id,\n      organizationId: req.user?.organizationId\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to update content'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\content-management.ts",
        "start": 440,
        "end": 454,
        "startLoc": {
          "line": 440,
          "column": 10,
          "position": 4766
        },
        "endLoc": {
          "line": 454,
          "column": 27,
          "position": 4875
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\social-media-management.ts",
        "start": 281,
        "end": 186,
        "startLoc": {
          "line": 281,
          "column": 10,
          "position": 2854
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      contentId: req.params.id,\n      organizationId: req.user?.organizationId\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to create content version'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\content-management.ts",
        "start": 533,
        "end": 549,
        "startLoc": {
          "line": 533,
          "column": 43,
          "position": 5438
        },
        "endLoc": {
          "line": 549,
          "column": 35,
          "position": 5574
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\content-management.ts",
        "start": 438,
        "end": 186,
        "startLoc": {
          "line": 438,
          "column": 35,
          "position": 4739
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ", async (req: AuthenticatedRequest, res) => {\n  try {\n    const { id } = req.params;\n    const organizationId = req.user?.organizationId || 'demo-org';\n\n    const content = await contentManagementService.getContent(id, organizationId);\n\n    if (!content) {\n      return res.status(404).json({\n        success: false,\n        error: 'Content not found'\n      });\n    }\n\n    res.json({\n      success: true,\n      data: content.",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\content-management.ts",
        "start": 555,
        "end": 571,
        "startLoc": {
          "line": 555,
          "column": 16,
          "position": 5596
        },
        "endLoc": {
          "line": 571,
          "column": 2,
          "position": 5741
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\content-management.ts",
        "start": 321,
        "end": 337,
        "startLoc": {
          "line": 321,
          "column": 7,
          "position": 3742
        },
        "endLoc": {
          "line": 337,
          "column": 2,
          "position": 3887
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ", async (req: AuthenticatedRequest, res) => {\n  try {\n    const organizationId = req.user?.organizationId || 'demo-org';\n    const searchParams = SearchContentSchema.parse(req.query);\n\n    // Convert date strings to Date objects\n    if (searchParams.filters?.dateRange) {\n      if (searchParams.filters.dateRange.from) {\n        searchParams.filters.dateRange.from = new Date(searchParams.filters.dateRange.from);\n      }\n      if (searchParams.filters.dateRange.to) {\n        searchParams.filters.dateRange.to = new Date(searchParams.filters.dateRange.to);\n      }\n    }\n\n    const result = await contentManagementService.searchContent(organizationId, searchParams);\n\n    res.json({\n      success: true,\n      data: result,\n      message: 'Content search completed successfully'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\content-management.ts",
        "start": 677,
        "end": 697,
        "startLoc": {
          "line": 677,
          "column": 10,
          "position": 6521
        },
        "endLoc": {
          "line": 697,
          "column": 40,
          "position": 6734
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\content-management.ts",
        "start": 277,
        "end": 297,
        "startLoc": {
          "line": 277,
          "column": 4,
          "position": 3358
        },
        "endLoc": {
          "line": 297,
          "column": 33,
          "position": 3571
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      organizationId: req.user?.organizationId\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to search content'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\content-management.ts",
        "start": 700,
        "end": 715,
        "startLoc": {
          "line": 700,
          "column": 35,
          "position": 6758
        },
        "endLoc": {
          "line": 715,
          "column": 27,
          "position": 6883
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\social-media-management.ts",
        "start": 171,
        "end": 186,
        "startLoc": {
          "line": 171,
          "column": 42,
          "position": 1971
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "));\n    }\n\n    if (conditions.length > 0) {\n      query = query.where(and(...conditions));\n    }\n\n    // Apply pagination\n    const offset = (pagination.page - 1) * pagination.limit;\n    query = query.limit(pagination.limit).offset(offset);\n\n    const result = await query;\n\n    // Get total count for pagination\n    const totalQuery = db.select({ count: count() }).from(contacts",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\contacts.ts",
        "start": 60,
        "end": 74,
        "startLoc": {
          "line": 60,
          "column": 11,
          "position": 545
        },
        "endLoc": {
          "line": 74,
          "column": 9,
          "position": 678
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\invoices.ts",
        "start": 75,
        "end": 90,
        "startLoc": {
          "line": 75,
          "column": 9,
          "position": 669
        },
        "endLoc": {
          "line": 90,
          "column": 9,
          "position": 804
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ", {\n      orgId,\n      count: result.length,\n      total,\n      filters\n    });\n\n    res.json({\n      success: true,\n      data: result,\n      pagination: {\n        page: pagination.page,\n        limit: pagination.limit,\n        total,\n        totalPages: Math.ceil(total / pagination.limit)\n      }\n    });\n\n  } catch (error) {\n    structuredLogger.error('Failed to retrieve contacts'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\contacts.ts",
        "start": 80,
        "end": 99,
        "startLoc": {
          "line": 80,
          "column": 21,
          "position": 741
        },
        "endLoc": {
          "line": 99,
          "column": 30,
          "position": 862
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\deals.ts",
        "start": 88,
        "end": 107,
        "startLoc": {
          "line": 88,
          "column": 18,
          "position": 806
        },
        "endLoc": {
          "line": 107,
          "column": 27,
          "position": 927
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "router.get('/:id', async (req, res) => {\n  try {\n    const { id } = req.params;\n    const orgId = req.headers['x-org-id'] as string;\n    \n    if (!orgId) {\n      return res.status(400).json({ error: 'Missing x-org-id header' });\n    }\n\n    // Set RLS context\n    await db.execute(`SET LOCAL app.org_id = '${orgId}'`);\n\n    const [contact",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\contacts.ts",
        "start": 112,
        "end": 124,
        "startLoc": {
          "line": 112,
          "column": 1,
          "position": 951
        },
        "endLoc": {
          "line": 124,
          "column": 8,
          "position": 1073
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\invoices.ts",
        "start": 142,
        "end": 154,
        "startLoc": {
          "line": 142,
          "column": 1,
          "position": 1190
        },
        "endLoc": {
          "line": 154,
          "column": 8,
          "position": 1312
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "router.post('/', async (req, res) => {\n  try {\n    const orgId = req.headers['x-org-id'] as string;\n    const userId = req.headers['x-user-id'] as string;\n    \n    if (!orgId) {\n      return res.status(400).json({ error: 'Missing x-org-id header' });\n    }\n\n    // Validate request body\n    const contactData",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\contacts.ts",
        "start": 158,
        "end": 168,
        "startLoc": {
          "line": 158,
          "column": 1,
          "position": 1326
        },
        "endLoc": {
          "line": 168,
          "column": 12,
          "position": 1434
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\invoices.ts",
        "start": 188,
        "end": 198,
        "startLoc": {
          "line": 188,
          "column": 1,
          "position": 1565
        },
        "endLoc": {
          "line": 198,
          "column": 12,
          "position": 1673
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "router.put('/:id', async (req, res) => {\n  try {\n    const { id } = req.params;\n    const orgId = req.headers['x-org-id'] as string;\n    const userId = req.headers['x-user-id'] as string;\n    \n    if (!orgId) {\n      return res.status(400).json({ error: 'Missing x-org-id header' });\n    }\n\n    // Validate request body\n    const updateData = UpdateContactSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\contacts.ts",
        "start": 220,
        "end": 231,
        "startLoc": {
          "line": 220,
          "column": 1,
          "position": 1816
        },
        "endLoc": {
          "line": 231,
          "column": 20,
          "position": 1944
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\invoices.ts",
        "start": 281,
        "end": 292,
        "startLoc": {
          "line": 281,
          "column": 1,
          "position": 2391
        },
        "endLoc": {
          "line": 292,
          "column": 20,
          "position": 2519
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "router.delete('/:id', async (req, res) => {\n  try {\n    const { id } = req.params;\n    const orgId = req.headers['x-org-id'] as string;\n    const userId = req.headers['x-user-id'] as string;\n    \n    if (!orgId) {\n      return res.status(400).json({ error: 'Missing x-org-id header' });\n    }\n\n    // Set RLS context\n    await db.execute(`SET LOCAL app.org_id = '${orgId}'`);\n\n    const [deletedContact",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\contacts.ts",
        "start": 287,
        "end": 300,
        "startLoc": {
          "line": 287,
          "column": 1,
          "position": 2341
        },
        "endLoc": {
          "line": 300,
          "column": 15,
          "position": 2482
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\invoices.ts",
        "start": 441,
        "end": 396,
        "startLoc": {
          "line": 441,
          "column": 1,
          "position": 3747
        },
        "endLoc": {
          "line": 396,
          "column": 15,
          "position": 3420
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "});\n    \n    res.status(500).json({ \n      error: 'Failed to retrieve contacts',\n      message: (error as Error).message \n    });\n  }\n});\n\n// GET /v1/contacts/:id - Get single contact\nrouter.get('/:id', async (req, res) => {\n  try {\n    const { id } = req.params;\n    const orgId = req.headers['x-org-id'] as string ||",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\contacts-simple.ts",
        "start": 74,
        "end": 87,
        "startLoc": {
          "line": 74,
          "column": 5,
          "position": 615
        },
        "endLoc": {
          "line": 87,
          "column": 3,
          "position": 730
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\contacts.ts",
        "start": 102,
        "end": 115,
        "startLoc": {
          "line": 102,
          "column": 5,
          "position": 895
        },
        "endLoc": {
          "line": 115,
          "column": 2,
          "position": 1009
        }
      }
    },
    {
      "format": "typescript",
      "lines": 28,
      "fragment": ") {\n      return res.status(404).json({ \n        error: 'Contact not found',\n        message: `Contact with ID ${id} not found or access denied`\n      });\n    }\n\n    structuredLogger.info('Contact retrieved', { orgId, contactId: id });\n\n    res.json({\n      success: true,\n      data: contact\n    });\n\n  } catch (error) {\n    structuredLogger.error('Failed to retrieve contact', error as Error, {\n      orgId: req.headers['x-org-id'],\n      contactId: req.params.id\n    });\n    \n    res.status(500).json({ \n      error: 'Failed to retrieve contact',\n      message: (error as Error).message \n    });\n  }\n});\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\contacts-simple.ts",
        "start": 91,
        "end": 118,
        "startLoc": {
          "line": 91,
          "column": 10,
          "position": 775
        },
        "endLoc": {
          "line": 118,
          "column": 7,
          "position": 974
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\contacts.ts",
        "start": 130,
        "end": 157,
        "startLoc": {
          "line": 130,
          "column": 8,
          "position": 1125
        },
        "endLoc": {
          "line": 157,
          "column": 38,
          "position": 1324
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ",\n        timestamp: new Date().toISOString(),\n        traceId\n      }\n    });\n\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Invalid configuration data',\n        details: error.errors,\n        poolName",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\connection-pool.ts",
        "start": 310,
        "end": 322,
        "startLoc": {
          "line": 310,
          "column": 42,
          "position": 2794
        },
        "endLoc": {
          "line": 322,
          "column": 9,
          "position": 2887
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\performance-v2.ts",
        "start": 264,
        "end": 276,
        "startLoc": {
          "line": 264,
          "column": 37,
          "position": 2425
        },
        "endLoc": {
          "line": 276,
          "column": 8,
          "position": 2518
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ", async (req, res) => {\n  const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n  const { poolName } = req.params;\n\n  try {\n    const poolStats = connectionPoolService.getPoolStats(poolName);\n    \n    if (!poolStats) {\n      return res.status(404).json({\n        success: false,\n        error: 'Pool not found',\n        poolName,\n        traceId\n      });\n    }\n\n    // Evaluar salud del pool",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\connection-pool.ts",
        "start": 592,
        "end": 609,
        "startLoc": {
          "line": 592,
          "column": 20,
          "position": 5033
        },
        "endLoc": {
          "line": 609,
          "column": 26,
          "position": 5212
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\warmup.ts",
        "start": 31,
        "end": 123,
        "startLoc": {
          "line": 31,
          "column": 10,
          "position": 244
        },
        "endLoc": {
          "line": 123,
          "column": 31,
          "position": 1293
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ", {\n      orgId,\n      count: result.length,\n      total,\n      filters\n    });\n\n    res.json({\n      success: true,\n      data: result,\n      pagination: {\n        page: pagination.page,\n        limit: pagination.limit,\n        total,\n        totalPages: Math.ceil(total / pagination.limit)\n      }\n    });\n\n  } catch (error) {\n    structuredLogger.error('Failed to retrieve companies'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\companies.ts",
        "start": 61,
        "end": 80,
        "startLoc": {
          "line": 61,
          "column": 22,
          "position": 524
        },
        "endLoc": {
          "line": 80,
          "column": 31,
          "position": 645
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\deals.ts",
        "start": 88,
        "end": 107,
        "startLoc": {
          "line": 88,
          "column": 18,
          "position": 806
        },
        "endLoc": {
          "line": 107,
          "column": 27,
          "position": 927
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "router.get('/:id', async (req, res) => {\n  try {\n    const { id } = req.params;\n    const orgId = req.headers['x-org-id'] as string;\n    \n    if (!orgId) {\n      return res.status(400).json({ error: 'Missing x-org-id header' });\n    }\n\n    // Set RLS context\n    await db.execute(`SET LOCAL app.org_id = '${orgId}'`);\n\n    const [company",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\companies.ts",
        "start": 93,
        "end": 105,
        "startLoc": {
          "line": 93,
          "column": 1,
          "position": 734
        },
        "endLoc": {
          "line": 105,
          "column": 8,
          "position": 856
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\invoices.ts",
        "start": 142,
        "end": 154,
        "startLoc": {
          "line": 142,
          "column": 1,
          "position": 1190
        },
        "endLoc": {
          "line": 154,
          "column": 8,
          "position": 1312
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "router.post('/', async (req, res) => {\n  try {\n    const orgId = req.headers['x-org-id'] as string;\n    const userId = req.headers['x-user-id'] as string;\n    \n    if (!orgId) {\n      return res.status(400).json({ error: 'Missing x-org-id header' });\n    }\n\n    // Validate request body\n    const companyData",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\companies.ts",
        "start": 139,
        "end": 149,
        "startLoc": {
          "line": 139,
          "column": 1,
          "position": 1109
        },
        "endLoc": {
          "line": 149,
          "column": 12,
          "position": 1217
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\invoices.ts",
        "start": 188,
        "end": 198,
        "startLoc": {
          "line": 188,
          "column": 1,
          "position": 1565
        },
        "endLoc": {
          "line": 198,
          "column": 12,
          "position": 1673
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "router.put('/:id', async (req, res) => {\n  try {\n    const { id } = req.params;\n    const orgId = req.headers['x-org-id'] as string;\n    const userId = req.headers['x-user-id'] as string;\n    \n    if (!orgId) {\n      return res.status(400).json({ error: 'Missing x-org-id header' });\n    }\n\n    // Validate request body\n    const updateData = UpdateCompanySchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\companies.ts",
        "start": 200,
        "end": 211,
        "startLoc": {
          "line": 200,
          "column": 1,
          "position": 1580
        },
        "endLoc": {
          "line": 211,
          "column": 20,
          "position": 1708
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\invoices.ts",
        "start": 281,
        "end": 292,
        "startLoc": {
          "line": 281,
          "column": 1,
          "position": 2391
        },
        "endLoc": {
          "line": 292,
          "column": 20,
          "position": 2519
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "router.delete('/:id', async (req, res) => {\n  try {\n    const { id } = req.params;\n    const orgId = req.headers['x-org-id'] as string;\n    const userId = req.headers['x-user-id'] as string;\n    \n    if (!orgId) {\n      return res.status(400).json({ error: 'Missing x-org-id header' });\n    }\n\n    // Set RLS context\n    await db.execute(`SET LOCAL app.org_id = '${orgId}'`);\n\n    const [deletedCompany",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\companies.ts",
        "start": 267,
        "end": 280,
        "startLoc": {
          "line": 267,
          "column": 1,
          "position": 2105
        },
        "endLoc": {
          "line": 280,
          "column": 15,
          "position": 2246
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\invoices.ts",
        "start": 441,
        "end": 396,
        "startLoc": {
          "line": 441,
          "column": 1,
          "position": 3747
        },
        "endLoc": {
          "line": 396,
          "column": 15,
          "position": 3420
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": ", {\n      orgId,\n      count: paginatedResults.length,\n      total\n    });\n\n    res.json({\n      success: true,\n      data: paginatedResults,\n      pagination: {\n        page,\n        limit,\n        total,\n        totalPages: Math.ceil(total / limit)\n      }\n    });\n\n  } catch (error) {\n    structuredLogger.error('Failed to retrieve companies'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\companies-simple.ts",
        "start": 51,
        "end": 69,
        "startLoc": {
          "line": 51,
          "column": 22,
          "position": 471
        },
        "endLoc": {
          "line": 69,
          "column": 31,
          "position": 576
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\contacts-simple.ts",
        "start": 54,
        "end": 72,
        "startLoc": {
          "line": 54,
          "column": 21,
          "position": 486
        },
        "endLoc": {
          "line": 72,
          "column": 30,
          "position": 591
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "limit)\n      }\n    });\n\n  } catch (error) {\n    structuredLogger.error('Failed to retrieve companies', error as Error, {\n      orgId: req.headers['x-org-id'],\n      query: req.query\n    });\n    \n    res.status(500).json({ \n      error: 'Failed to retrieve companies',\n      message: (error as Error).message \n    });\n  }\n});\n\n// GET /v1/companies/:id - Get single company\nrouter.get('/:id', async (req, res) => {\n  try {\n    const { id } = req.params;\n    const orgId = req.headers['x-org-id'] as string ||",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\companies-simple.ts",
        "start": 64,
        "end": 85,
        "startLoc": {
          "line": 64,
          "column": 2,
          "position": 548
        },
        "endLoc": {
          "line": 85,
          "column": 3,
          "position": 724
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\companies.ts",
        "start": 75,
        "end": 96,
        "startLoc": {
          "line": 75,
          "column": 2,
          "position": 617
        },
        "endLoc": {
          "line": 96,
          "column": 2,
          "position": 792
        }
      }
    },
    {
      "format": "typescript",
      "lines": 31,
      "fragment": ") {\n      return res.status(404).json({ \n        error: 'Company not found',\n        message: `Company with ID ${id} not found or access denied`\n      });\n    }\n\n    structuredLogger.info('Company retrieved', { orgId, companyId: id });\n\n    res.json({\n      success: true,\n      data: company\n    });\n\n  } catch (error) {\n    structuredLogger.error('Failed to retrieve company', error as Error, {\n      orgId: req.headers['x-org-id'],\n      companyId: req.params.id\n    });\n    \n    res.status(500).json({ \n      error: 'Failed to retrieve company',\n      message: (error as Error).message \n    });\n  }\n});\n\n// POST /v1/companies - Create company\nrouter.post('/', async (req, res) => {\n  try {\n    const orgId = req.headers['x-org-id'] as string ||",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\companies-simple.ts",
        "start": 89,
        "end": 119,
        "startLoc": {
          "line": 89,
          "column": 10,
          "position": 769
        },
        "endLoc": {
          "line": 119,
          "column": 3,
          "position": 1013
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\companies.ts",
        "start": 111,
        "end": 141,
        "startLoc": {
          "line": 111,
          "column": 8,
          "position": 908
        },
        "endLoc": {
          "line": 141,
          "column": 2,
          "position": 1151
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "structuredLogger.error('Failed to create company', error as Error, {\n      orgId: req.headers['x-org-id'],\n      userId: req.headers['x-user-id'],\n      body: req.body\n    });\n    \n    res.status(500).json({ \n      error: 'Failed to create company',\n      message: (error as Error).message \n    });\n  }\n});\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\companies-simple.ts",
        "start": 148,
        "end": 161,
        "startLoc": {
          "line": 148,
          "column": 5,
          "position": 1225
        },
        "endLoc": {
          "line": 161,
          "column": 7,
          "position": 1328
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\companies.ts",
        "start": 186,
        "end": 199,
        "startLoc": {
          "line": 186,
          "column": 5,
          "position": 1475
        },
        "endLoc": {
          "line": 199,
          "column": 42,
          "position": 1578
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "= z.object({\n  department: z.enum(['ceo', 'ia', 'cso', 'cto', 'ciso', 'coo', 'chro', 'cgo', 'cfo', 'cdo']),\n  message: z.string().min(1).max(1000),\n  context: z.object({\n    agentId: z.string().optional(),\n    previousMessages: z.array(z.string()).optional(),\n    includeMetrics: z.boolean().default(true),\n  }).optional(),\n});\n\n/**\n * POST /v1/cockpit-integration/agent-action\n * Ejecuta una acción en un agente del cockpit\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\cockpit-integration.ts",
        "start": 28,
        "end": 41,
        "startLoc": {
          "line": 28,
          "column": 2,
          "position": 330
        },
        "endLoc": {
          "line": 41,
          "column": 4,
          "position": 475
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\cockpit-integration.service.ts",
        "start": 29,
        "end": 39,
        "startLoc": {
          "line": 29,
          "column": 2,
          "position": 324
        },
        "endLoc": {
          "line": 39,
          "column": 7,
          "position": 469
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", async (req, res) => {\n  try {\n    const department = req.params.department as any;\n    \n    if (!['ceo', 'ia', 'cso', 'cto', 'ciso', 'coo', 'chro', 'cgo', 'cfo', 'cdo'].includes(department)) {\n      return res.status(400).json({\n        success: false,\n        error: 'Invalid department',\n      });\n    }\n\n    const agentId",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\cockpit-integration.ts",
        "start": 188,
        "end": 199,
        "startLoc": {
          "line": 188,
          "column": 28,
          "position": 1663
        },
        "endLoc": {
          "line": 199,
          "column": 8,
          "position": 1787
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\cockpit-integration.ts",
        "start": 74,
        "end": 85,
        "startLoc": {
          "line": 74,
          "column": 23,
          "position": 736
        },
        "endLoc": {
          "line": 85,
          "column": 15,
          "position": 860
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", { error, department: req.params.department });\n    res.status(500).json({\n      success: false,\n      error: 'Internal server error',\n      details: error instanceof Error ? error.message : 'Unknown error',\n    });\n  }\n});\n\n/**\n * GET /v1/cockpit-integration/departments\n * Obtiene información de todos los departamentos\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\cockpit-integration.ts",
        "start": 220,
        "end": 232,
        "startLoc": {
          "line": 220,
          "column": 29,
          "position": 1942
        },
        "endLoc": {
          "line": 232,
          "column": 4,
          "position": 2022
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\cockpit-integration.ts",
        "start": 106,
        "end": 118,
        "startLoc": {
          "line": 106,
          "column": 32,
          "position": 1041
        },
        "endLoc": {
          "line": 118,
          "column": 4,
          "position": 1121
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", async (req, res) => {\n  try {\n    const department = req.params.department as any;\n    \n    if (!['ceo', 'ia', 'cso', 'cto', 'ciso', 'coo', 'chro', 'cgo', 'cfo', 'cdo'].includes(department)) {\n      return res.status(400).json({\n        success: false,\n        error: 'Invalid department',\n      });\n    }\n\n    logger",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\cockpit-integration.ts",
        "start": 272,
        "end": 283,
        "startLoc": {
          "line": 272,
          "column": 22,
          "position": 2469
        },
        "endLoc": {
          "line": 283,
          "column": 7,
          "position": 2591
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\cockpit-integration.ts",
        "start": 74,
        "end": 85,
        "startLoc": {
          "line": 74,
          "column": 23,
          "position": 736
        },
        "endLoc": {
          "line": 85,
          "column": 6,
          "position": 858
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", { error, department: req.params.department });\n    res.status(500).json({\n      success: false,\n      error: 'Internal server error',\n      details: error instanceof Error ? error.message : 'Unknown error',\n    });\n  }\n});\n\n/**\n * GET /v1/cockpit-integration/health\n * Health check del servicio\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\cockpit-integration.ts",
        "start": 307,
        "end": 319,
        "startLoc": {
          "line": 307,
          "column": 34,
          "position": 2773
        },
        "endLoc": {
          "line": 319,
          "column": 4,
          "position": 2853
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\cockpit-integration.ts",
        "start": 106,
        "end": 118,
        "startLoc": {
          "line": 106,
          "column": 32,
          "position": 1041
        },
        "endLoc": {
          "line": 118,
          "column": 4,
          "position": 1121
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", error as Error, {\n      orgId: req.headers['x-org-id'],\n      userId: Array.isArray(req.headers['x-user-id']) ? req.headers['x-user-id'][0] : req.headers['x-user-id']\n    });\n\n    res.status(500).json({\n      error: 'Failed to establish SSE connection',\n      message: (error as Error).message\n    });\n  }\n});\n\n// ============================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\cockpit-bff-live.ts",
        "start": 79,
        "end": 91,
        "startLoc": {
          "line": 79,
          "column": 45,
          "position": 648
        },
        "endLoc": {
          "line": 91,
          "column": 80,
          "position": 760
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\events.ts",
        "start": 50,
        "end": 62,
        "startLoc": {
          "line": 50,
          "column": 37,
          "position": 421
        },
        "endLoc": {
          "line": 62,
          "column": 76,
          "position": 533
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", error as Error, {\n      department: req.params.department\n    });\n\n    res.status(400).json({\n      success: false,\n      error: 'INVALID_REQUEST',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n// ============================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\cockpit-bff-live.ts",
        "start": 160,
        "end": 172,
        "startLoc": {
          "line": 160,
          "column": 40,
          "position": 1276
        },
        "endLoc": {
          "line": 172,
          "column": 80,
          "position": 1362
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\cockpit-bff-live.ts",
        "start": 123,
        "end": 138,
        "startLoc": {
          "line": 123,
          "column": 32,
          "position": 993
        },
        "endLoc": {
          "line": 138,
          "column": 4,
          "position": 1079
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", error as Error, {\n      department: req.params.department\n    });\n\n    res.status(400).json({\n      success: false,\n      error: 'INVALID_REQUEST',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n// ============================================================================\n// EVENT ENDPOINTS",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\cockpit-bff-live.ts",
        "start": 240,
        "end": 253,
        "startLoc": {
          "line": 240,
          "column": 34,
          "position": 1856
        },
        "endLoc": {
          "line": 253,
          "column": 19,
          "position": 1944
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\cockpit-bff-live.ts",
        "start": 123,
        "end": 173,
        "startLoc": {
          "line": 123,
          "column": 32,
          "position": 993
        },
        "endLoc": {
          "line": 173,
          "column": 26,
          "position": 1364
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", error as Error, {\n      department: req.params.department\n    });\n\n    res.status(400).json({\n      success: false,\n      error: 'INVALID_REQUEST',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n// ============================================================================\n// WEBSOCKET ENDPOINTS",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\cockpit-bff-live.ts",
        "start": 295,
        "end": 308,
        "startLoc": {
          "line": 295,
          "column": 30,
          "position": 2257
        },
        "endLoc": {
          "line": 308,
          "column": 23,
          "position": 2345
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\cockpit-bff-live.ts",
        "start": 123,
        "end": 173,
        "startLoc": {
          "line": 123,
          "column": 32,
          "position": 993
        },
        "endLoc": {
          "line": 173,
          "column": 26,
          "position": 1364
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Error writing log entry'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\centralized-logging.ts",
        "start": 144,
        "end": 154,
        "startLoc": {
          "line": 144,
          "column": 5,
          "position": 1753
        },
        "endLoc": {
          "line": 154,
          "column": 26,
          "position": 1833
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\project-completion-deployment.ts",
        "start": 139,
        "end": 149,
        "startLoc": {
          "line": 139,
          "column": 5,
          "position": 1411
        },
        "endLoc": {
          "line": 149,
          "column": 28,
          "position": 1491
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Error searching logs'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\centralized-logging.ts",
        "start": 183,
        "end": 193,
        "startLoc": {
          "line": 183,
          "column": 5,
          "position": 2172
        },
        "endLoc": {
          "line": 193,
          "column": 23,
          "position": 2252
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\project-completion-deployment.ts",
        "start": 139,
        "end": 149,
        "startLoc": {
          "line": 139,
          "column": 5,
          "position": 1411
        },
        "endLoc": {
          "line": 149,
          "column": 28,
          "position": 1491
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Error aggregating logs'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\centralized-logging.ts",
        "start": 219,
        "end": 229,
        "startLoc": {
          "line": 219,
          "column": 5,
          "position": 2481
        },
        "endLoc": {
          "line": 229,
          "column": 25,
          "position": 2561
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\project-completion-deployment.ts",
        "start": 139,
        "end": 149,
        "startLoc": {
          "line": 139,
          "column": 5,
          "position": 1411
        },
        "endLoc": {
          "line": 149,
          "column": 28,
          "position": 1491
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Error creating alert rule'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\centralized-logging.ts",
        "start": 309,
        "end": 319,
        "startLoc": {
          "line": 309,
          "column": 5,
          "position": 3227
        },
        "endLoc": {
          "line": 319,
          "column": 28,
          "position": 3307
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\project-completion-deployment.ts",
        "start": 139,
        "end": 149,
        "startLoc": {
          "line": 139,
          "column": 5,
          "position": 1411
        },
        "endLoc": {
          "line": 149,
          "column": 28,
          "position": 1491
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Error creating retention policy'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\centralized-logging.ts",
        "start": 455,
        "end": 465,
        "startLoc": {
          "line": 455,
          "column": 5,
          "position": 4435
        },
        "endLoc": {
          "line": 465,
          "column": 34,
          "position": 4515
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\project-completion-deployment.ts",
        "start": 139,
        "end": 149,
        "startLoc": {
          "line": 139,
          "column": 5,
          "position": 1411
        },
        "endLoc": {
          "line": 149,
          "column": 28,
          "position": 1491
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ".getConfig();\n\n    res.json({\n      success: true,\n      data: config\n    });\n  } catch (error) {\n    logger.error('Error getting configuration', { error });\n    res.status(500).json({\n      success: false,\n      error: 'Failed to get configuration',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n// PUT /api/centralized-logging/config",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\centralized-logging.ts",
        "start": 605,
        "end": 621,
        "startLoc": {
          "line": 605,
          "column": 15,
          "position": 5701
        },
        "endLoc": {
          "line": 621,
          "column": 39,
          "position": 5819
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\project-completion-deployment.ts",
        "start": 433,
        "end": 449,
        "startLoc": {
          "line": 433,
          "column": 25,
          "position": 3867
        },
        "endLoc": {
          "line": 449,
          "column": 49,
          "position": 3985
        }
      }
    },
    {
      "format": "typescript",
      "lines": 28,
      "fragment": ".updateConfig(validatedData);\n\n    res.json({\n      success: true,\n      data: updatedConfig,\n      message: 'Configuration updated successfully'\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Error updating configuration', { error });\n    res.status(500).json({\n      success: false,\n      error: 'Failed to update configuration',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n// ===== HEALTH CHECK =====\n\n// GET /api/centralized-logging/health",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\centralized-logging.ts",
        "start": 626,
        "end": 653,
        "startLoc": {
          "line": 626,
          "column": 15,
          "position": 5880
        },
        "endLoc": {
          "line": 653,
          "column": 39,
          "position": 6069
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\project-completion-deployment.ts",
        "start": 454,
        "end": 481,
        "startLoc": {
          "line": 454,
          "column": 25,
          "position": 4046
        },
        "endLoc": {
          "line": 481,
          "column": 49,
          "position": 4235
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": "}\n    };\n\n    res.json({\n      success: true,\n      data: health\n    });\n  } catch (error) {\n    logger.error('Error checking health', { error });\n    res.status(500).json({\n      success: false,\n      error: 'Health check failed',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n// ===== UTILIDADES =====\n\n// POST /api/centralized-logging/logs/bulk",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\centralized-logging.ts",
        "start": 676,
        "end": 695,
        "startLoc": {
          "line": 676,
          "column": 7,
          "position": 6328
        },
        "endLoc": {
          "line": 695,
          "column": 43,
          "position": 6449
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\project-completion-deployment.ts",
        "start": 503,
        "end": 522,
        "startLoc": {
          "line": 503,
          "column": 7,
          "position": 4469
        },
        "endLoc": {
          "line": 522,
          "column": 51,
          "position": 4590
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ");\n    \n    if (!environment) {\n      return res.status(404).json({\n        success: false,\n        error: 'Environment not found'\n      });\n    }\n    \n    res.json({\n      success: true,\n      data: environment,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Error updating environment metrics'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\blue-green-deployment.ts",
        "start": 129,
        "end": 144,
        "startLoc": {
          "line": 129,
          "column": 8,
          "position": 1610
        },
        "endLoc": {
          "line": 144,
          "column": 37,
          "position": 1718
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\blue-green-deployment.ts",
        "start": 93,
        "end": 108,
        "startLoc": {
          "line": 93,
          "column": 14,
          "position": 1184
        },
        "endLoc": {
          "line": 108,
          "column": 28,
          "position": 1292
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Failed to create backup configuration'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\backup-recovery.ts",
        "start": 185,
        "end": 195,
        "startLoc": {
          "line": 185,
          "column": 5,
          "position": 2105
        },
        "endLoc": {
          "line": 195,
          "column": 40,
          "position": 2185
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\project-completion-deployment.ts",
        "start": 139,
        "end": 149,
        "startLoc": {
          "line": 139,
          "column": 5,
          "position": 1411
        },
        "endLoc": {
          "line": 149,
          "column": 28,
          "position": 1491
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Failed to update backup configuration'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\backup-recovery.ts",
        "start": 234,
        "end": 244,
        "startLoc": {
          "line": 234,
          "column": 5,
          "position": 2477
        },
        "endLoc": {
          "line": 244,
          "column": 40,
          "position": 2557
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\project-completion-deployment.ts",
        "start": 139,
        "end": 149,
        "startLoc": {
          "line": 139,
          "column": 5,
          "position": 1411
        },
        "endLoc": {
          "line": 149,
          "column": 28,
          "position": 1491
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", async (req, res) => {\n  try {\n    const { id } = req.params;\n    const config = await backupRecoveryService.getBackupConfig(id);\n\n    if (!config) {\n      return res.status(404).json({\n        success: false,\n        error: 'Backup configuration not found'\n      });\n    }\n\n    const",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\backup-recovery.ts",
        "start": 298,
        "end": 310,
        "startLoc": {
          "line": 298,
          "column": 24,
          "position": 2975
        },
        "endLoc": {
          "line": 310,
          "column": 6,
          "position": 3076
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\backup-recovery.ts",
        "start": 135,
        "end": 147,
        "startLoc": {
          "line": 135,
          "column": 15,
          "position": 1697
        },
        "endLoc": {
          "line": 147,
          "column": 7,
          "position": 1798
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Failed to execute backup'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\backup-recovery.ts",
        "start": 356,
        "end": 366,
        "startLoc": {
          "line": 356,
          "column": 5,
          "position": 3452
        },
        "endLoc": {
          "line": 366,
          "column": 27,
          "position": 3532
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\project-completion-deployment.ts",
        "start": 139,
        "end": 149,
        "startLoc": {
          "line": 139,
          "column": 5,
          "position": 1411
        },
        "endLoc": {
          "line": 149,
          "column": 28,
          "position": 1491
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Failed to execute recovery'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\backup-recovery.ts",
        "start": 507,
        "end": 517,
        "startLoc": {
          "line": 507,
          "column": 5,
          "position": 4676
        },
        "endLoc": {
          "line": 517,
          "column": 29,
          "position": 4756
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\project-completion-deployment.ts",
        "start": 139,
        "end": 149,
        "startLoc": {
          "line": 139,
          "column": 5,
          "position": 1411
        },
        "endLoc": {
          "line": 149,
          "column": 28,
          "position": 1491
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ".id\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Internal server error'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\azure-integration.ts",
        "start": 87,
        "end": 100,
        "startLoc": {
          "line": 87,
          "column": 2,
          "position": 870
        },
        "endLoc": {
          "line": 100,
          "column": 24,
          "position": 962
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\customer-support.ts",
        "start": 236,
        "end": 186,
        "startLoc": {
          "line": 236,
          "column": 7,
          "position": 2226
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": ", error as Error, {\n      userId: req.user?.id\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Internal server error',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n// ============================================================================\n// TEXT TO SPEECH ENDPOINTS",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\azure-integration.ts",
        "start": 138,
        "end": 159,
        "startLoc": {
          "line": 138,
          "column": 26,
          "position": 1219
        },
        "endLoc": {
          "line": 159,
          "column": 28,
          "position": 1368
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\azure-integration.ts",
        "start": 86,
        "end": 107,
        "startLoc": {
          "line": 86,
          "column": 25,
          "position": 851
        },
        "endLoc": {
          "line": 107,
          "column": 30,
          "position": 1000
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": ", error as Error, {\n      userId: req.user?.id\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Internal server error',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n// ============================================================================\n// HEALTH AND STATUS ENDPOINTS",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\azure-integration.ts",
        "start": 187,
        "end": 208,
        "startLoc": {
          "line": 187,
          "column": 26,
          "position": 1570
        },
        "endLoc": {
          "line": 208,
          "column": 31,
          "position": 1719
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\azure-integration.ts",
        "start": 86,
        "end": 107,
        "startLoc": {
          "line": 86,
          "column": 25,
          "position": 851
        },
        "endLoc": {
          "line": 107,
          "column": 30,
          "position": 1000
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Error creating test suite'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\automated-testing.ts",
        "start": 136,
        "end": 146,
        "startLoc": {
          "line": 136,
          "column": 5,
          "position": 1334
        },
        "endLoc": {
          "line": 146,
          "column": 28,
          "position": 1414
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\project-completion-deployment.ts",
        "start": 139,
        "end": 149,
        "startLoc": {
          "line": 139,
          "column": 5,
          "position": 1411
        },
        "endLoc": {
          "line": 149,
          "column": 28,
          "position": 1491
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Error creating secret rotation'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\automated-testing.ts",
        "start": 299,
        "end": 309,
        "startLoc": {
          "line": 299,
          "column": 5,
          "position": 2765
        },
        "endLoc": {
          "line": 309,
          "column": 33,
          "position": 2845
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\project-completion-deployment.ts",
        "start": 139,
        "end": 149,
        "startLoc": {
          "line": 139,
          "column": 5,
          "position": 1411
        },
        "endLoc": {
          "line": 149,
          "column": 28,
          "position": 1491
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Error creating security checklist'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\automated-testing.ts",
        "start": 428,
        "end": 438,
        "startLoc": {
          "line": 428,
          "column": 5,
          "position": 3890
        },
        "endLoc": {
          "line": 438,
          "column": 36,
          "position": 3970
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\project-completion-deployment.ts",
        "start": 139,
        "end": 149,
        "startLoc": {
          "line": 139,
          "column": 5,
          "position": 1411
        },
        "endLoc": {
          "line": 149,
          "column": 28,
          "position": 1491
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "});\n  } catch (error) {\n    logger.error('Error getting configuration', { error });\n    res.status(500).json({\n      success: false,\n      error: 'Failed to get configuration',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n// PUT /api/automated-testing/config",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\automated-testing.ts",
        "start": 546,
        "end": 557,
        "startLoc": {
          "line": 546,
          "column": 5,
          "position": 4895
        },
        "endLoc": {
          "line": 557,
          "column": 37,
          "position": 4985
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\project-completion-deployment.ts",
        "start": 438,
        "end": 449,
        "startLoc": {
          "line": 438,
          "column": 5,
          "position": 3895
        },
        "endLoc": {
          "line": 449,
          "column": 49,
          "position": 3985
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": ",\n      message: 'Configuration updated successfully'\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Error updating configuration', { error });\n    res.status(500).json({\n      success: false,\n      error: 'Failed to update configuration',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n// ===== HEALTH CHECK =====\n\n// GET /api/automated-testing/health",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\automated-testing.ts",
        "start": 567,
        "end": 590,
        "startLoc": {
          "line": 567,
          "column": 14,
          "position": 5073
        },
        "endLoc": {
          "line": 590,
          "column": 37,
          "position": 5235
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\project-completion-deployment.ts",
        "start": 458,
        "end": 481,
        "startLoc": {
          "line": 458,
          "column": 14,
          "position": 4073
        },
        "endLoc": {
          "line": 481,
          "column": 49,
          "position": 4235
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "}\n    };\n\n    res.json({\n      success: true,\n      data: health\n    });\n  } catch (error) {\n    logger.error('Error checking health', { error });\n    res.status(500).json({\n      success: false,\n      error: 'Health check failed',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\automated-testing.ts",
        "start": 607,
        "end": 624,
        "startLoc": {
          "line": 607,
          "column": 7,
          "position": 5394
        },
        "endLoc": {
          "line": 624,
          "column": 7,
          "position": 5512
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\project-completion-deployment.ts",
        "start": 503,
        "end": 520,
        "startLoc": {
          "line": 503,
          "column": 7,
          "position": 4469
        },
        "endLoc": {
          "line": 520,
          "column": 26,
          "position": 4587
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Error creating documentation'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\automated-documentation.ts",
        "start": 140,
        "end": 150,
        "startLoc": {
          "line": 140,
          "column": 5,
          "position": 1396
        },
        "endLoc": {
          "line": 150,
          "column": 31,
          "position": 1476
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\project-completion-deployment.ts",
        "start": 139,
        "end": 149,
        "startLoc": {
          "line": 139,
          "column": 5,
          "position": 1411
        },
        "endLoc": {
          "line": 149,
          "column": 28,
          "position": 1491
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Error creating runbook'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\automated-documentation.ts",
        "start": 386,
        "end": 396,
        "startLoc": {
          "line": 386,
          "column": 5,
          "position": 3435
        },
        "endLoc": {
          "line": 396,
          "column": 25,
          "position": 3515
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\project-completion-deployment.ts",
        "start": 139,
        "end": 149,
        "startLoc": {
          "line": 139,
          "column": 5,
          "position": 1411
        },
        "endLoc": {
          "line": 149,
          "column": 28,
          "position": 1491
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "router.get('/reports/:period', async (req: Request, res: Response) => {\n  try {\n    const { period } = req.params;\n    \n    if (!['daily', 'weekly', 'monthly'].includes(period)) {\n      return res.status(400).json({\n        success: false,\n        error: 'Invalid period. Must be: daily, weekly, or monthly'\n      });\n    }\n\n    const report = await documentationService",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\automated-documentation.ts",
        "start": 484,
        "end": 495,
        "startLoc": {
          "line": 484,
          "column": 1,
          "position": 4226
        },
        "endLoc": {
          "line": 495,
          "column": 21,
          "position": 4343
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\project-completion-deployment.ts",
        "start": 401,
        "end": 412,
        "startLoc": {
          "line": 401,
          "column": 1,
          "position": 3563
        },
        "endLoc": {
          "line": 412,
          "column": 25,
          "position": 3679
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "router.get('/config', async (req: Request, res: Response) => {\n  try {\n    res.json({\n      success: true,\n      data: defaultConfig\n    });\n  } catch (error) {\n    logger.error('Error getting configuration', { error });\n    res.status(500).json({\n      success: false,\n      error: 'Failed to get configuration',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n// PUT /api/automated-documentation/config",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\automated-documentation.ts",
        "start": 514,
        "end": 530,
        "startLoc": {
          "line": 514,
          "column": 1,
          "position": 4491
        },
        "endLoc": {
          "line": 530,
          "column": 43,
          "position": 4633
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\automated-testing.ts",
        "start": 541,
        "end": 449,
        "startLoc": {
          "line": 541,
          "column": 1,
          "position": 4843
        },
        "endLoc": {
          "line": 449,
          "column": 49,
          "position": 3985
        }
      }
    },
    {
      "format": "typescript",
      "lines": 33,
      "fragment": "router.put('/config', async (req: Request, res: Response) => {\n  try {\n    const validatedData = UpdateConfigSchema.parse(req.body);\n    \n    // Actualizar configuración (en una implementación real, esto se persistiría)\n    Object.assign(defaultConfig, validatedData);\n    \n    res.json({\n      success: true,\n      data: defaultConfig,\n      message: 'Configuration updated successfully'\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Error updating configuration', { error });\n    res.status(500).json({\n      success: false,\n      error: 'Failed to update configuration',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n// ===== HEALTH CHECK =====\n\n// GET /api/automated-documentation/health",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\automated-documentation.ts",
        "start": 531,
        "end": 563,
        "startLoc": {
          "line": 531,
          "column": 1,
          "position": 4635
        },
        "endLoc": {
          "line": 563,
          "column": 43,
          "position": 4883
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\automated-testing.ts",
        "start": 558,
        "end": 481,
        "startLoc": {
          "line": 558,
          "column": 1,
          "position": 4987
        },
        "endLoc": {
          "line": 481,
          "column": 49,
          "position": 4235
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "}\n    };\n\n    res.json({\n      success: true,\n      data: health\n    });\n  } catch (error) {\n    logger.error('Error checking health', { error });\n    res.status(500).json({\n      success: false,\n      error: 'Health check failed',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\nexport default router;",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\automated-documentation.ts",
        "start": 583,
        "end": 600,
        "startLoc": {
          "line": 583,
          "column": 7,
          "position": 5109
        },
        "endLoc": {
          "line": 600,
          "column": 2,
          "position": 5232
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\project-completion-deployment.ts",
        "start": 503,
        "end": 624,
        "startLoc": {
          "line": 503,
          "column": 7,
          "position": 4469
        },
        "endLoc": {
          "line": 624,
          "column": 2,
          "position": 5517
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ".safeParse(req.body);\n    if (!validation.success) {\n      res.status(400).json({\n        error: 'Validation error',\n        message: validation.error.errors.map(e => e.message).join(', '),\n        requestId,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    const loginData",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\auth.ts",
        "start": 59,
        "end": 70,
        "startLoc": {
          "line": 59,
          "column": 12,
          "position": 600
        },
        "endLoc": {
          "line": 70,
          "column": 10,
          "position": 701
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\rate-limiting.ts",
        "start": 134,
        "end": 78,
        "startLoc": {
          "line": 134,
          "column": 17,
          "position": 1140
        },
        "endLoc": {
          "line": 78,
          "column": 2,
          "position": 718
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ".safeParse(req.body);\n    if (!validation.success) {\n      res.status(400).json({\n        error: 'Validation error',\n        message: validation.error.errors.map(e => e.message).join(', '),\n        requestId,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    const { refreshToken",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\auth.ts",
        "start": 125,
        "end": 136,
        "startLoc": {
          "line": 125,
          "column": 19,
          "position": 1151
        },
        "endLoc": {
          "line": 136,
          "column": 13,
          "position": 1254
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\rate-limiting.ts",
        "start": 134,
        "end": 78,
        "startLoc": {
          "line": 134,
          "column": 17,
          "position": 1140
        },
        "endLoc": {
          "line": 78,
          "column": 4,
          "position": 720
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ".safeParse(req.body);\n    if (!validation.success) {\n      res.status(400).json({\n        error: 'Validation error',\n        message: validation.error.errors.map(e => e.message).join(', '),\n        requestId,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    const { sessionId",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\auth.ts",
        "start": 179,
        "end": 190,
        "startLoc": {
          "line": 179,
          "column": 13,
          "position": 1606
        },
        "endLoc": {
          "line": 190,
          "column": 10,
          "position": 1709
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\rate-limiting.ts",
        "start": 134,
        "end": 78,
        "startLoc": {
          "line": 134,
          "column": 17,
          "position": 1140
        },
        "endLoc": {
          "line": 78,
          "column": 4,
          "position": 720
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ".safeParse(req.body);\n    if (!validation.success) {\n      res.status(400).json({\n        error: 'Validation error',\n        message: validation.error.errors.map(e => e.message).join(', '),\n        requestId,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    const { permissions",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\auth.ts",
        "start": 311,
        "end": 322,
        "startLoc": {
          "line": 311,
          "column": 19,
          "position": 2659
        },
        "endLoc": {
          "line": 322,
          "column": 12,
          "position": 2762
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\rate-limiting.ts",
        "start": 134,
        "end": 78,
        "startLoc": {
          "line": 134,
          "column": 17,
          "position": 1140
        },
        "endLoc": {
          "line": 78,
          "column": 4,
          "position": 720
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", authenticateToken, async (req: Request, res: Response): Promise<void> => {\n  const startTime = Date.now();\n  const requestId = req.headers['x-request-id'] as string || `req_${Date.now()}`;\n\n  try {\n    if (!req.user?.id || !req.user?.organizationId) {\n      res.status(400).json({\n        error: 'User context required',\n        message: 'User ID and organization ID are required',\n        requestId,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    // Get user permissions",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\auth.ts",
        "start": 420,
        "end": 435,
        "startLoc": {
          "line": 420,
          "column": 15,
          "position": 3514
        },
        "endLoc": {
          "line": 435,
          "column": 24,
          "position": 3678
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\rate-limiting.ts",
        "start": 61,
        "end": 310,
        "startLoc": {
          "line": 61,
          "column": 10,
          "position": 525
        },
        "endLoc": {
          "line": 310,
          "column": 20,
          "position": 2649
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ".safeParse(req.body);\n    if (!validation.success) {\n      res.status(400).json({\n        error: 'Validation error',\n        message: validation.error.errors.map(e => e.message).join(', '),\n        requestId,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    const { currentPassword",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\auth.ts",
        "start": 494,
        "end": 505,
        "startLoc": {
          "line": 494,
          "column": 21,
          "position": 4160
        },
        "endLoc": {
          "line": 505,
          "column": 16,
          "position": 4263
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\rate-limiting.ts",
        "start": 134,
        "end": 78,
        "startLoc": {
          "line": 134,
          "column": 17,
          "position": 1140
        },
        "endLoc": {
          "line": 78,
          "column": 4,
          "position": 720
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ").optional(),\n  userId: z.string().uuid().optional(),\n  startDate: z.string().datetime().optional(),\n  endDate: z.string().datetime().optional(),\n  limit: z.number().min(1).max(100).default(50),\n  offset: z.number().min(0).default(0)\n});\n\nconst updateConfigSchema = z.object({\n  enabled: z.boolean().optional(),\n  retentionDays",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\audit-trail-crm-undo.ts",
        "start": 48,
        "end": 58,
        "startLoc": {
          "line": 48,
          "column": 2,
          "position": 589
        },
        "endLoc": {
          "line": 58,
          "column": 14,
          "position": 732
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\audit-trail-crm-undo.ts",
        "start": 39,
        "end": 86,
        "startLoc": {
          "line": 39,
          "column": 2,
          "position": 445
        },
        "endLoc": {
          "line": 86,
          "column": 11,
          "position": 1109
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ", error as Error, {\n      userId: req.user?.id\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Internal server error',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n/**\n * @route GET /v1/ai-training/datasets\n * @desc List all training datasets\n * @access Private\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\ai-training.ts",
        "start": 105,
        "end": 129,
        "startLoc": {
          "line": 105,
          "column": 26,
          "position": 1008
        },
        "endLoc": {
          "line": 129,
          "column": 4,
          "position": 1155
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\azure-integration.ts",
        "start": 86,
        "end": 106,
        "startLoc": {
          "line": 86,
          "column": 25,
          "position": 851
        },
        "endLoc": {
          "line": 106,
          "column": 80,
          "position": 998
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ", error as Error, {\n      userId: req.user?.id\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Internal server error',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n/**\n * @route GET /v1/ai-training/jobs\n * @desc List all training jobs\n * @access Private\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\ai-training.ts",
        "start": 274,
        "end": 298,
        "startLoc": {
          "line": 274,
          "column": 31,
          "position": 2189
        },
        "endLoc": {
          "line": 298,
          "column": 4,
          "position": 2336
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\azure-integration.ts",
        "start": 86,
        "end": 106,
        "startLoc": {
          "line": 86,
          "column": 25,
          "position": 851
        },
        "endLoc": {
          "line": 106,
          "column": 80,
          "position": 998
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ",\n        timestamp: new Date().toISOString()\n      }\n    });\n\n  } catch (error) {\n    structuredLogger.error('Health check failed', error as Error);\n\n    res.status(500).json({\n      success: false,\n      error: 'Health check failed',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n/**\n * @route GET /v1/ai-training/status\n * @desc Get service status and statistics\n * @access Private\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\ai-training.ts",
        "start": 497,
        "end": 517,
        "startLoc": {
          "line": 497,
          "column": 23,
          "position": 3663
        },
        "endLoc": {
          "line": 517,
          "column": 4,
          "position": 3775
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\azure-integration.ts",
        "start": 234,
        "end": 254,
        "startLoc": {
          "line": 234,
          "column": 2,
          "position": 1923
        },
        "endLoc": {
          "line": 254,
          "column": 4,
          "position": 2035
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ",\n        timestamp: new Date().toISOString()\n      }\n    });\n\n  } catch (error) {\n    structuredLogger.error('Status check failed', error as Error);\n\n    res.status(500).json({\n      success: false,\n      error: 'Status check failed',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n// ============================================================================\n// CONFIGURATION ENDPOINTS\n// ============================================================================\n\n/**\n * @route POST /v1/ai-training/configure\n * @desc Configure training parameters\n * @access Private\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\ai-training.ts",
        "start": 554,
        "end": 578,
        "startLoc": {
          "line": 554,
          "column": 2,
          "position": 3987
        },
        "endLoc": {
          "line": 578,
          "column": 4,
          "position": 4106
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\azure-integration.ts",
        "start": 265,
        "end": 289,
        "startLoc": {
          "line": 265,
          "column": 7,
          "position": 2146
        },
        "endLoc": {
          "line": 289,
          "column": 4,
          "position": 2265
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": ");\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Internal server error',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\ai-training.ts",
        "start": 601,
        "end": 619,
        "startLoc": {
          "line": 601,
          "column": 6,
          "position": 4288
        },
        "endLoc": {
          "line": 619,
          "column": 7,
          "position": 4411
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\social-media-management.ts",
        "start": 174,
        "end": 106,
        "startLoc": {
          "line": 174,
          "column": 2,
          "position": 2009
        },
        "endLoc": {
          "line": 106,
          "column": 80,
          "position": 998
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "name: z.string().min(1).max(100),\n  description: z.string().min(1).max(500),\n  type: z.enum(['data_protection', 'access_control', 'content_filter', 'audit', 'compliance']),\n  rules: z.array(z.object({\n    field: z.string(),\n    operator: z.enum(['equals', 'contains', 'regex', 'range', 'exists']),\n    value: z.any(),\n    action: z.enum(['allow', 'deny', 'log', 'encrypt', 'anonymize'])\n  })),\n  severity: z.enum(['low', 'medium', 'high', 'critical']),\n  isActive: z.boolean().",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\ai-security-compliance.ts",
        "start": 13,
        "end": 23,
        "startLoc": {
          "line": 13,
          "column": 3,
          "position": 119
        },
        "endLoc": {
          "line": 23,
          "column": 2,
          "position": 311
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\ai-security-compliance.service.ts",
        "start": 8,
        "end": 18,
        "startLoc": {
          "line": 8,
          "column": 3,
          "position": 70
        },
        "endLoc": {
          "line": 18,
          "column": 2,
          "position": 262
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "),\n  period: z.object({\n    start: z.string().datetime(),\n    end: z.string().datetime()\n  })\n});\n\n// Middleware de autenticación y rate limiting\nrouter.use(authenticateToken);\nrouter.use(rateLimiter);\n\n// ===== GESTIÓN DE MÉTRICAS DE PERFORMANCE =====",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\ai-performance-optimization.ts",
        "start": 48,
        "end": 59,
        "startLoc": {
          "line": 48,
          "column": 2,
          "position": 623
        },
        "endLoc": {
          "line": 59,
          "column": 50,
          "position": 693
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\ai-security-compliance.ts",
        "start": 58,
        "end": 69,
        "startLoc": {
          "line": 58,
          "column": 3,
          "position": 775
        },
        "endLoc": {
          "line": 69,
          "column": 49,
          "position": 845
        }
      }
    },
    {
      "format": "typescript",
      "lines": 27,
      "fragment": ".getHealthStatus();\n    \n    const statusCode = health.status === 'healthy' ? 200 : \n                      health.status === 'degraded' ? 200 : 503;\n    \n    res.status(statusCode).json({\n      success: true,\n      data: health,\n      message: `Service is ${health.status}`\n    });\n  } catch (error: any) {\n    logger.error('Health check failed', { \n      error: error.message, \n      userId: req.user?.id \n    });\n    \n    res.status(503).json({\n      success: false,\n      error: 'Health check failed',\n      message: error.message\n    });\n  }\n});\n\n// ===== ESTADÍSTICAS =====\n\n// GET /v1/ai-performance-optimization/stats - Estadísticas del servicio",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\ai-performance-optimization.ts",
        "start": 527,
        "end": 553,
        "startLoc": {
          "line": 527,
          "column": 33,
          "position": 4199
        },
        "endLoc": {
          "line": 553,
          "column": 73,
          "position": 4396
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\ai-security-compliance.ts",
        "start": 422,
        "end": 448,
        "startLoc": {
          "line": 422,
          "column": 28,
          "position": 3446
        },
        "endLoc": {
          "line": 448,
          "column": 68,
          "position": 3643
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": ", { \n      userId: req.user?.id \n    });\n    \n    res.json({\n      success: true,\n      data: stats,\n      message: 'Statistics retrieved successfully'\n    });\n  } catch (error: any) {\n    logger.error('Failed to get statistics', { \n      error: error.message, \n      userId: req.user?.id \n    });\n    \n    res.status(500).json({\n      success: false,\n      error: 'Failed to retrieve statistics',\n      message: error.message\n    });\n  }\n});\n\nexport { router as aiPerformanceOptimizationRoutes",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\ai-performance-optimization.ts",
        "start": 601,
        "end": 624,
        "startLoc": {
          "line": 601,
          "column": 43,
          "position": 4702
        },
        "endLoc": {
          "line": 624,
          "column": 32,
          "position": 4867
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\ai-security-compliance.ts",
        "start": 487,
        "end": 510,
        "startLoc": {
          "line": 487,
          "column": 38,
          "position": 3891
        },
        "endLoc": {
          "line": 510,
          "column": 27,
          "position": 4056
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ", error as Error, {\n      userId: req.user?.id\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Internal server error',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n/**\n * @route GET /v1/ai-model-management/models\n * @desc List all AI models\n * @access Private\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\ai-model-management.ts",
        "start": 168,
        "end": 192,
        "startLoc": {
          "line": 168,
          "column": 27,
          "position": 1824
        },
        "endLoc": {
          "line": 192,
          "column": 4,
          "position": 1971
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\azure-integration.ts",
        "start": 86,
        "end": 106,
        "startLoc": {
          "line": 86,
          "column": 25,
          "position": 851
        },
        "endLoc": {
          "line": 106,
          "column": 80,
          "position": 998
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ", error as Error);\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Internal server error',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n// ============================================================================\n// DEPLOYMENT ENDPOINTS",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\ai-model-management.ts",
        "start": 328,
        "end": 347,
        "startLoc": {
          "line": 328,
          "column": 37,
          "position": 2989
        },
        "endLoc": {
          "line": 347,
          "column": 24,
          "position": 3121
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\ai-training.ts",
        "start": 601,
        "end": 107,
        "startLoc": {
          "line": 601,
          "column": 32,
          "position": 4281
        },
        "endLoc": {
          "line": 107,
          "column": 30,
          "position": 1000
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ", error as Error, {\n      userId: req.user?.id\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Internal server error',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n/**\n * @route GET /v1/ai-model-management/deployments\n * @desc List all model deployments\n * @access Private\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\ai-model-management.ts",
        "start": 378,
        "end": 402,
        "startLoc": {
          "line": 378,
          "column": 26,
          "position": 3336
        },
        "endLoc": {
          "line": 402,
          "column": 4,
          "position": 3483
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\azure-integration.ts",
        "start": 86,
        "end": 106,
        "startLoc": {
          "line": 86,
          "column": 25,
          "position": 851
        },
        "endLoc": {
          "line": 106,
          "column": 80,
          "position": 998
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ", error as Error, {\n      userId: req.user?.id\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Internal server error',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n/**\n * @route POST /v1/ai-model-management/ab-tests/:id/start\n * @desc Start an A/B test\n * @access Private\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\ai-model-management.ts",
        "start": 504,
        "end": 528,
        "startLoc": {
          "line": 504,
          "column": 27,
          "position": 4210
        },
        "endLoc": {
          "line": 528,
          "column": 4,
          "position": 4357
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\azure-integration.ts",
        "start": 86,
        "end": 106,
        "startLoc": {
          "line": 86,
          "column": 25,
          "position": 851
        },
        "endLoc": {
          "line": 106,
          "column": 80,
          "position": 998
        }
      }
    },
    {
      "format": "typescript",
      "lines": 29,
      "fragment": ", error as Error, {\n      userId: req.user?.id\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Internal server error',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n// ============================================================================\n// HEALTH AND STATUS ENDPOINTS\n// ============================================================================\n\n/**\n * @route GET /v1/ai-model-management/health\n * @desc Check health status of AI Model Management\n * @access Private\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\ai-model-management.ts",
        "start": 601,
        "end": 629,
        "startLoc": {
          "line": 601,
          "column": 24,
          "position": 4861
        },
        "endLoc": {
          "line": 629,
          "column": 4,
          "position": 5015
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\azure-integration.ts",
        "start": 86,
        "end": 215,
        "startLoc": {
          "line": 86,
          "column": 25,
          "position": 851
        },
        "endLoc": {
          "line": 215,
          "column": 4,
          "position": 1724
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ",\n        timestamp: new Date().toISOString()\n      }\n    });\n\n  } catch (error) {\n    structuredLogger.error('Health check failed', error as Error);\n\n    res.status(500).json({\n      success: false,\n      error: 'Health check failed',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n/**\n * @route GET /v1/ai-model-management/status\n * @desc Get service status and statistics\n * @access Private\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\ai-model-management.ts",
        "start": 638,
        "end": 658,
        "startLoc": {
          "line": 638,
          "column": 22,
          "position": 5092
        },
        "endLoc": {
          "line": 658,
          "column": 4,
          "position": 5204
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\azure-integration.ts",
        "start": 234,
        "end": 254,
        "startLoc": {
          "line": 234,
          "column": 2,
          "position": 1923
        },
        "endLoc": {
          "line": 254,
          "column": 4,
          "position": 2035
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "],\n        timestamp: new Date().toISOString()\n      }\n    });\n\n  } catch (error) {\n    structuredLogger.error('Status check failed', error as Error);\n\n    res.status(500).json({\n      success: false,\n      error: 'Status check failed',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\ai-model-management.ts",
        "start": 692,
        "end": 708,
        "startLoc": {
          "line": 692,
          "column": 9,
          "position": 5403
        },
        "endLoc": {
          "line": 708,
          "column": 7,
          "position": 5516
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\ai-training.ts",
        "start": 554,
        "end": 281,
        "startLoc": {
          "line": 554,
          "column": 9,
          "position": 3986
        },
        "endLoc": {
          "line": 281,
          "column": 80,
          "position": 2258
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ";\n\n// Schemas de validación\nconst DashboardMetricsSchema = z.object({\n  department: z.enum(['ceo', 'ia', 'cso', 'cto', 'ciso', 'coo', 'chro', 'cgo', 'cfo', 'cdo']),\n  timeframe: z.enum(['1h', '24h', '7d', '30d']).default('24h'),\n  includePredictions: z.boolean().default(true),\n  includeOptimizations: z.boolean().default(true),\n  includeSecurity: z.boolean().default(true),\n});\n\nconst RealTimeMetricsSchema = z.object({\n  department: z.enum(['ceo', 'ia', 'cso', 'cto', 'ciso', 'coo', 'chro', 'cgo', 'cfo', 'cdo']),\n  agentId: z.string().optional(),\n});\n\nconst AgentStatusSchema = z.object({\n  agentId: z.string(),\n  department: z.enum(['ceo', 'ia', 'cso', 'cto', 'ciso', 'coo', 'chro', 'cgo', 'cfo', 'cdo']),\n  status: z.enum(['active', 'paused', 'error', 'maintenance']),\n  lastActivity: z.string",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\ai-dashboard-consolidation.ts",
        "start": 12,
        "end": 32,
        "startLoc": {
          "line": 12,
          "column": 2,
          "position": 107
        },
        "endLoc": {
          "line": 32,
          "column": 7,
          "position": 412
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\ai-dashboard-consolidation.service.ts",
        "start": 13,
        "end": 33,
        "startLoc": {
          "line": 13,
          "column": 19,
          "position": 101
        },
        "endLoc": {
          "line": 33,
          "column": 5,
          "position": 406
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "router.get('/agents/:department', async (req, res) => {\n  try {\n    const department = req.params.department as any;\n    \n    if (!['ceo', 'ia', 'cso', 'cto', 'ciso', 'coo', 'chro', 'cgo', 'cfo', 'cdo'].includes(department)) {\n      return res.status(400).json({\n        success: false,\n        error: 'Invalid department',\n      });\n    }\n\n    logger.info('Getting agents for department'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\ai-dashboard-consolidation.ts",
        "start": 151,
        "end": 162,
        "startLoc": {
          "line": 151,
          "column": 1,
          "position": 1344
        },
        "endLoc": {
          "line": 162,
          "column": 32,
          "position": 1475
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\cockpit-integration.ts",
        "start": 272,
        "end": 283,
        "startLoc": {
          "line": 272,
          "column": 1,
          "position": 2464
        },
        "endLoc": {
          "line": 283,
          "column": 28,
          "position": 2595
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", { error, department: req.params.department });\n    res.status(500).json({\n      success: false,\n      error: 'Internal server error',\n      details: error instanceof Error ? error.message : 'Unknown error',\n    });\n  }\n});\n\n/**\n * GET /v1/ai-dashboard-consolidation/kpis/:department\n * Obtiene KPIs específicos de un departamento\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\ai-dashboard-consolidation.ts",
        "start": 182,
        "end": 194,
        "startLoc": {
          "line": 182,
          "column": 23,
          "position": 1638
        },
        "endLoc": {
          "line": 194,
          "column": 4,
          "position": 1718
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\cockpit-integration.ts",
        "start": 106,
        "end": 118,
        "startLoc": {
          "line": 106,
          "column": 32,
          "position": 1041
        },
        "endLoc": {
          "line": 118,
          "column": 4,
          "position": 1121
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", async (req, res) => {\n  try {\n    const department = req.params.department as any;\n    \n    if (!['ceo', 'ia', 'cso', 'cto', 'ciso', 'coo', 'chro', 'cgo', 'cfo', 'cdo'].includes(department)) {\n      return res.status(400).json({\n        success: false,\n        error: 'Invalid department',\n      });\n    }\n\n    const timeframe",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\ai-dashboard-consolidation.ts",
        "start": 195,
        "end": 206,
        "startLoc": {
          "line": 195,
          "column": 20,
          "position": 1725
        },
        "endLoc": {
          "line": 206,
          "column": 10,
          "position": 1849
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\cockpit-integration.ts",
        "start": 74,
        "end": 85,
        "startLoc": {
          "line": 74,
          "column": 23,
          "position": 736
        },
        "endLoc": {
          "line": 85,
          "column": 15,
          "position": 860
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", { error, department: req.params.department });\n    res.status(500).json({\n      success: false,\n      error: 'Internal server error',\n      details: error instanceof Error ? error.message : 'Unknown error',\n    });\n  }\n});\n\n/**\n * GET /v1/ai-dashboard-consolidation/timeline/:department\n * Obtiene timeline de eventos de un departamento\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\ai-dashboard-consolidation.ts",
        "start": 233,
        "end": 245,
        "startLoc": {
          "line": 233,
          "column": 21,
          "position": 2051
        },
        "endLoc": {
          "line": 245,
          "column": 4,
          "position": 2131
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\cockpit-integration.ts",
        "start": 106,
        "end": 118,
        "startLoc": {
          "line": 106,
          "column": 32,
          "position": 1041
        },
        "endLoc": {
          "line": 118,
          "column": 4,
          "position": 1121
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", async (req, res) => {\n  try {\n    const department = req.params.department as any;\n    \n    if (!['ceo', 'ia', 'cso', 'cto', 'ciso', 'coo', 'chro', 'cgo', 'cfo', 'cdo'].includes(department)) {\n      return res.status(400).json({\n        success: false,\n        error: 'Invalid department',\n      });\n    }\n\n    const timeframe = (req.query.timeframe as string) || '24h';\n\n    logger.info('Getting timeline for department'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\ai-dashboard-consolidation.ts",
        "start": 246,
        "end": 259,
        "startLoc": {
          "line": 246,
          "column": 24,
          "position": 2138
        },
        "endLoc": {
          "line": 259,
          "column": 34,
          "position": 2289
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\cockpit-integration.ts",
        "start": 74,
        "end": 208,
        "startLoc": {
          "line": 74,
          "column": 23,
          "position": 736
        },
        "endLoc": {
          "line": 208,
          "column": 30,
          "position": 1876
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ", {\n      department,\n      timeframe,\n      userId: req.user?.id,\n    });\n\n    const metrics = await aiDashboardConsolidationService.getDashboardMetrics({\n      department,\n      timeframe: timeframe as any,\n      includePredictions: false,\n      includeOptimizations: false,\n      includeSecurity: false,\n    });\n\n    res.json({\n      success: true,\n      data: {\n        department,\n        timeframe,\n        timeline",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\ai-dashboard-consolidation.ts",
        "start": 259,
        "end": 278,
        "startLoc": {
          "line": 259,
          "column": 34,
          "position": 2290
        },
        "endLoc": {
          "line": 278,
          "column": 9,
          "position": 2406
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\ai-dashboard-consolidation.ts",
        "start": 208,
        "end": 227,
        "startLoc": {
          "line": 208,
          "column": 30,
          "position": 1877
        },
        "endLoc": {
          "line": 227,
          "column": 5,
          "position": 1993
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", { error, department: req.params.department });\n    res.status(500).json({\n      success: false,\n      error: 'Internal server error',\n      details: error instanceof Error ? error.message : 'Unknown error',\n    });\n  }\n});\n\n/**\n * GET /v1/ai-dashboard-consolidation/health\n * Health check del servicio\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\ai-dashboard-consolidation.ts",
        "start": 284,
        "end": 296,
        "startLoc": {
          "line": 284,
          "column": 25,
          "position": 2466
        },
        "endLoc": {
          "line": 296,
          "column": 4,
          "position": 2546
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\cockpit-integration.ts",
        "start": 106,
        "end": 118,
        "startLoc": {
          "line": 106,
          "column": 32,
          "position": 1041
        },
        "endLoc": {
          "line": 118,
          "column": 4,
          "position": 1121
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ",\n    };\n\n    logger.info('Health check requested', { userId: req.user?.id });\n\n    res.json({\n      success: true,\n      data: health,\n    });\n  } catch (error) {\n    logger.error('Error in health check', { error });\n    res.status(500).json({\n      success: false,\n      error: 'Health check failed',\n      details: error instanceof Error ? error.message : 'Unknown error',\n    });\n  }\n});\n\nexport { router as aiDashboardConsolidationRoutes",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\ai-dashboard-consolidation.ts",
        "start": 305,
        "end": 324,
        "startLoc": {
          "line": 305,
          "column": 2,
          "position": 2638
        },
        "endLoc": {
          "line": 324,
          "column": 31,
          "position": 2791
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\cockpit-integration.ts",
        "start": 334,
        "end": 353,
        "startLoc": {
          "line": 334,
          "column": 2,
          "position": 2983
        },
        "endLoc": {
          "line": 353,
          "column": 25,
          "position": 3136
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", async (req, res) => {\n  try {\n    const { organizationId, limit = 10 } = req.query;\n    \n    if (!organizationId) {\n      return res.status(400).json({\n        success: false,\n        error: 'Organization ID is required'\n      });\n    }\n    \n    // Implementar obtención de pronósticos",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\ai-cost-prediction.ts",
        "start": 299,
        "end": 310,
        "startLoc": {
          "line": 299,
          "column": 13,
          "position": 2507
        },
        "endLoc": {
          "line": 310,
          "column": 40,
          "position": 2600
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\ai-cost-prediction.ts",
        "start": 221,
        "end": 232,
        "startLoc": {
          "line": 221,
          "column": 15,
          "position": 1929
        },
        "endLoc": {
          "line": 232,
          "column": 41,
          "position": 2022
        }
      }
    },
    {
      "format": "typescript",
      "lines": 27,
      "fragment": ".getHealthStatus();\n    \n    const statusCode = health.status === 'healthy' ? 200 : \n                      health.status === 'degraded' ? 200 : 503;\n    \n    res.status(statusCode).json({\n      success: true,\n      data: health,\n      message: `Service is ${health.status}`\n    });\n  } catch (error: any) {\n    logger.error('Health check failed', { \n      error: error.message, \n      userId: req.user?.id \n    });\n    \n    res.status(503).json({\n      success: false,\n      error: 'Health check failed',\n      message: error.message\n    });\n  }\n});\n\n// ===== ESTADÍSTICAS =====\n\n// GET /v1/ai-cost-prediction/stats - Estadísticas del servicio",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\ai-cost-prediction.ts",
        "start": 667,
        "end": 693,
        "startLoc": {
          "line": 667,
          "column": 24,
          "position": 5031
        },
        "endLoc": {
          "line": 693,
          "column": 64,
          "position": 5228
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\ai-security-compliance.ts",
        "start": 422,
        "end": 448,
        "startLoc": {
          "line": 422,
          "column": 28,
          "position": 3446
        },
        "endLoc": {
          "line": 448,
          "column": 68,
          "position": 3643
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": ", { \n      userId: req.user?.id \n    });\n    \n    res.json({\n      success: true,\n      data: stats,\n      message: 'Statistics retrieved successfully'\n    });\n  } catch (error: any) {\n    logger.error('Failed to get statistics', { \n      error: error.message, \n      userId: req.user?.id \n    });\n    \n    res.status(500).json({\n      success: false,\n      error: 'Failed to retrieve statistics',\n      message: error.message\n    });\n  }\n});\n\nexport { router as aiCostPredictionRoutes",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\ai-cost-prediction.ts",
        "start": 745,
        "end": 768,
        "startLoc": {
          "line": 745,
          "column": 34,
          "position": 5557
        },
        "endLoc": {
          "line": 768,
          "column": 23,
          "position": 5722
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\ai-security-compliance.ts",
        "start": 487,
        "end": 510,
        "startLoc": {
          "line": 487,
          "column": 38,
          "position": 3891
        },
        "endLoc": {
          "line": 510,
          "column": 27,
          "position": 4056
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ": z.enum(['daily', 'weekly', 'monthly', 'custom']),\n  period: z.object({\n    start: z.string().datetime(),\n    end: z.string().datetime()\n  })\n});\n\n// Middleware de autenticación y rate limiting\nrouter.use(authenticateToken);\nrouter.use(rateLimiter);\n\n// ===== GESTIÓN DE REGLAS DE OPTIMIZACIÓN =====",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\ai-cost-optimization.ts",
        "start": 50,
        "end": 61,
        "startLoc": {
          "line": 50,
          "column": 13,
          "position": 607
        },
        "endLoc": {
          "line": 61,
          "column": 49,
          "position": 695
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\ai-performance-optimization.ts",
        "start": 48,
        "end": 69,
        "startLoc": {
          "line": 48,
          "column": 11,
          "position": 605
        },
        "endLoc": {
          "line": 69,
          "column": 49,
          "position": 845
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", { \n      userId: req.user?.id, \n      count: rules.length \n    });\n    \n    res.json({\n      success: true,\n      data: rules,\n      count: rules.length\n    });\n  } catch (error: any) {\n    logger.error('Failed to get cost optimization rules'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\ai-cost-optimization.ts",
        "start": 68,
        "end": 79,
        "startLoc": {
          "line": 68,
          "column": 36,
          "position": 749
        },
        "endLoc": {
          "line": 79,
          "column": 40,
          "position": 836
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\ai-performance-optimization.ts",
        "start": 138,
        "end": 149,
        "startLoc": {
          "line": 138,
          "column": 31,
          "position": 1292
        },
        "endLoc": {
          "line": 149,
          "column": 35,
          "position": 1379
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "router.get('/recommendations', async (req, res) => {\n  try {\n    const { organizationId } = req.query;\n    \n    if (!organizationId) {\n      return res.status(400).json({\n        success: false,\n        error: 'Organization ID is required'\n      });\n    }\n    \n    // Generar análisis para obtener recomendaciones",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\ai-cost-optimization.ts",
        "start": 428,
        "end": 439,
        "startLoc": {
          "line": 428,
          "column": 1,
          "position": 3514
        },
        "endLoc": {
          "line": 439,
          "column": 49,
          "position": 3605
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\ai-cost-prediction.ts",
        "start": 568,
        "end": 579,
        "startLoc": {
          "line": 568,
          "column": 1,
          "position": 4373
        },
        "endLoc": {
          "line": 579,
          "column": 45,
          "position": 4464
        }
      }
    },
    {
      "format": "typescript",
      "lines": 27,
      "fragment": ".getHealthStatus();\n    \n    const statusCode = health.status === 'healthy' ? 200 : \n                      health.status === 'degraded' ? 200 : 503;\n    \n    res.status(statusCode).json({\n      success: true,\n      data: health,\n      message: `Service is ${health.status}`\n    });\n  } catch (error: any) {\n    logger.error('Health check failed', { \n      error: error.message, \n      userId: req.user?.id \n    });\n    \n    res.status(503).json({\n      success: false,\n      error: 'Health check failed',\n      message: error.message\n    });\n  }\n});\n\n// ===== ESTADÍSTICAS =====\n\n// GET /v1/ai-cost-optimization/stats - Estadísticas del servicio",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\ai-cost-optimization.ts",
        "start": 573,
        "end": 599,
        "startLoc": {
          "line": 573,
          "column": 26,
          "position": 4704
        },
        "endLoc": {
          "line": 599,
          "column": 66,
          "position": 4901
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\ai-security-compliance.ts",
        "start": 422,
        "end": 448,
        "startLoc": {
          "line": 422,
          "column": 28,
          "position": 3446
        },
        "endLoc": {
          "line": 448,
          "column": 68,
          "position": 3643
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": ", { \n      userId: req.user?.id \n    });\n    \n    res.json({\n      success: true,\n      data: stats,\n      message: 'Statistics retrieved successfully'\n    });\n  } catch (error: any) {\n    logger.error('Failed to get statistics', { \n      error: error.message, \n      userId: req.user?.id \n    });\n    \n    res.status(500).json({\n      success: false,\n      error: 'Failed to retrieve statistics',\n      message: error.message\n    });\n  }\n});\n\nexport { router as aiCostOptimizationRoutes",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\ai-cost-optimization.ts",
        "start": 650,
        "end": 673,
        "startLoc": {
          "line": 650,
          "column": 36,
          "position": 5223
        },
        "endLoc": {
          "line": 673,
          "column": 25,
          "position": 5388
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\ai-security-compliance.ts",
        "start": 487,
        "end": 510,
        "startLoc": {
          "line": 487,
          "column": 38,
          "position": 3891
        },
        "endLoc": {
          "line": 510,
          "column": 27,
          "position": 4056
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "),\n  context: z.object({\n    domain: z.string().optional(),\n    intent: z.string().optional(),\n    entities: z.record(z.any()).optional(),\n    preferences: z.record(z.any()).optional(),\n    sessionData: z.record(z.any()).optional()\n  }).optional()\n});\n\nconst GetConversationsSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\ai-chat-advanced.ts",
        "start": 32,
        "end": 42,
        "startLoc": {
          "line": 32,
          "column": 2,
          "position": 366
        },
        "endLoc": {
          "line": 42,
          "column": 23,
          "position": 483
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\ai-chat-advanced.ts",
        "start": 18,
        "end": 28,
        "startLoc": {
          "line": 18,
          "column": 2,
          "position": 168
        },
        "endLoc": {
          "line": 28,
          "column": 25,
          "position": 285
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ");\n    \n    if (!conversation) {\n      return res.status(404).json({\n        success: false,\n        error: 'Conversation not found'\n      });\n    }\n    \n    res.json({\n      success: true,\n      data: conversation,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Error updating conversation'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\ai-chat-advanced.ts",
        "start": 206,
        "end": 221,
        "startLoc": {
          "line": 206,
          "column": 8,
          "position": 2317
        },
        "endLoc": {
          "line": 221,
          "column": 30,
          "position": 2425
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\ai-chat-advanced.ts",
        "start": 176,
        "end": 191,
        "startLoc": {
          "line": 176,
          "column": 3,
          "position": 2046
        },
        "endLoc": {
          "line": 191,
          "column": 29,
          "position": 2154
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "id);\n    \n    if (!message) {\n      return res.status(404).json({\n        success: false,\n        error: 'Message not found'\n      });\n    }\n    \n    res.json({\n      success: true,\n      data: message,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Error getting message'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\ai-chat-advanced.ts",
        "start": 320,
        "end": 335,
        "startLoc": {
          "line": 320,
          "column": 2,
          "position": 3295
        },
        "endLoc": {
          "line": 335,
          "column": 24,
          "position": 3404
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\dlg-grooming.ts",
        "start": 154,
        "end": 169,
        "startLoc": {
          "line": 154,
          "column": 2,
          "position": 2153
        },
        "endLoc": {
          "line": 169,
          "column": 28,
          "position": 2262
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ");\n    \n    if (!session) {\n      return res.status(404).json({\n        success: false,\n        error: 'Session not found'\n      });\n    }\n    \n    res.json({\n      success: true,\n      data: session,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Error updating session'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\ai-chat-advanced.ts",
        "start": 458,
        "end": 473,
        "startLoc": {
          "line": 458,
          "column": 8,
          "position": 4455
        },
        "endLoc": {
          "line": 473,
          "column": 25,
          "position": 4563
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\ai-chat-advanced.ts",
        "start": 428,
        "end": 443,
        "startLoc": {
          "line": 428,
          "column": 3,
          "position": 4184
        },
        "endLoc": {
          "line": 443,
          "column": 24,
          "position": 4292
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ", async (req: Request, res: Response) => {\n  try {\n    const { organizationId } = req.params;\n    const { reason } = req.body;\n\n    if (!reason || typeof reason !== 'string') {\n      res.status(400).json({\n        success: false,\n        error: 'Reason is required',\n        code: 'REASON_REQUIRED'\n      });\n      return;\n    }\n\n    await aiBudgetUXService.deactivateReadOnlyMode",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\ai-budget-ux.ts",
        "start": 372,
        "end": 386,
        "startLoc": {
          "line": 372,
          "column": 40,
          "position": 3028
        },
        "endLoc": {
          "line": 386,
          "column": 23,
          "position": 3157
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\ai-budget-ux.ts",
        "start": 333,
        "end": 347,
        "startLoc": {
          "line": 333,
          "column": 38,
          "position": 2734
        },
        "endLoc": {
          "line": 347,
          "column": 21,
          "position": 2863
        }
      }
    },
    {
      "format": "typescript",
      "lines": 74,
      "fragment": ",\n    });\n  } catch (error) {\n    console.error('Error getting insights:', error);\n    res.status(500).json({\n      success: false,\n      error: 'Failed to get insights',\n      message: error instanceof Error ? error.message : 'Unknown error',\n    });\n  }\n});\n\n/**\n * @swagger\n * /v1/ai-analytics/trends:\n *   get:\n *     summary: Get AI trends\n *     description: Get trend data for an organization\n *     tags: [AI Analytics]\n *     security:\n *       - bearerAuth: []\n *     parameters:\n *       - in: query\n *         name: organizationId\n *         required: true\n *         schema:\n *           type: string\n *           format: uuid\n *         description: Organization ID\n *       - in: query\n *         name: trendType\n *         schema:\n *           type: string\n *         description: Filter by trend type\n *       - in: query\n *         name: period\n *         schema:\n *           type: string\n *           enum: [daily, weekly, monthly]\n *         description: Filter by trend period\n *     responses:\n *       200:\n *         description: Trends retrieved successfully\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 success:\n *                   type: boolean\n *                 data:\n *                   type: array\n *                   items:\n *                     type: object\n *                     properties:\n *                       id:\n *                         type: string\n *                       name:\n *                         type: string\n *                       type:\n *                         type: string\n *                       data:\n *                         type: object\n *                       period:\n *                         type: string\n *                       createdAt:\n *                         type: string\n *       400:\n *         description: Invalid request parameters\n *       401:\n *         description: Unauthorized\n *       500:\n *         description: Internal server error\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\ai-analytics.ts",
        "start": 428,
        "end": 501,
        "startLoc": {
          "line": 428,
          "column": 9,
          "position": 1404
        },
        "endLoc": {
          "line": 501,
          "column": 4,
          "position": 1494
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\next-ai-platform.ts",
        "start": 422,
        "end": 479,
        "startLoc": {
          "line": 422,
          "column": 17,
          "position": 1119
        },
        "endLoc": {
          "line": 479,
          "column": 4,
          "position": 1209
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ".getHealthStatus();\n    \n    res.status(200).json({\n      success: true,\n      data: healthStatus,\n    });\n  } catch (error) {\n    console.error('Error getting health status:', error);\n    res.status(500).json({\n      success: false,\n      error: 'Failed to get health status',\n      message: error instanceof Error ? error.message : 'Unknown error',\n    });\n  }\n});\n\nexport { router as aiAnalyticsRoutes",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\ai-analytics.ts",
        "start": 735,
        "end": 751,
        "startLoc": {
          "line": 735,
          "column": 19,
          "position": 2546
        },
        "endLoc": {
          "line": 751,
          "column": 18,
          "position": 2676
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\next-ai-platform.ts",
        "start": 795,
        "end": 811,
        "startLoc": {
          "line": 795,
          "column": 22,
          "position": 2452
        },
        "endLoc": {
          "line": 811,
          "column": 21,
          "position": 2582
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": ", {\n      traceId,\n      filters,\n      count: rules.length\n    });\n\n    res.json({\n      success: true,\n      data: {\n        rules,\n        count: rules.length,\n        filters\n      },\n      timestamp: new Date().toISOString(),\n      traceId\n    });\n\n  } catch (error) {\n    structuredLogger.error('Failed to get threat detection rules'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-security.ts",
        "start": 286,
        "end": 304,
        "startLoc": {
          "line": 286,
          "column": 35,
          "position": 2457
        },
        "endLoc": {
          "line": 304,
          "column": 39,
          "position": 2563
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\advanced-security.ts",
        "start": 189,
        "end": 207,
        "startLoc": {
          "line": 189,
          "column": 29,
          "position": 1717
        },
        "endLoc": {
          "line": 207,
          "column": 33,
          "position": 1823
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": "});\n\n    res.status(201).json({\n      success: true,\n      data: rule,\n      timestamp: new Date().toISOString(),\n      traceId\n    });\n\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Invalid rule data',\n        details: error.errors,\n        traceId\n      });\n    }\n\n    structuredLogger.error('Failed to create threat detection rule'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-security.ts",
        "start": 333,
        "end": 352,
        "startLoc": {
          "line": 333,
          "column": 5,
          "position": 2788
        },
        "endLoc": {
          "line": 352,
          "column": 41,
          "position": 2923
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\advanced-security.ts",
        "start": 236,
        "end": 255,
        "startLoc": {
          "line": 236,
          "column": 5,
          "position": 2048
        },
        "endLoc": {
          "line": 255,
          "column": 35,
          "position": 2183
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ",\n      body: req.body\n    });\n    \n    if (error instanceof z.ZodError) {\n      res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    } else {\n      res.status(500).json({\n        success: false,\n        error: 'Failed to update report'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-reporting.ts",
        "start": 214,
        "end": 227,
        "startLoc": {
          "line": 214,
          "column": 9,
          "position": 1759
        },
        "endLoc": {
          "line": 227,
          "column": 26,
          "position": 1860
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\advanced-reporting.ts",
        "start": 94,
        "end": 107,
        "startLoc": {
          "line": 94,
          "column": 16,
          "position": 860
        },
        "endLoc": {
          "line": 107,
          "column": 26,
          "position": 961
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ",\n      reportId: req.params.reportId,\n      body: req.body\n    });\n    \n    if (error instanceof z.ZodError) {\n      res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    } else {\n      res.status(500).json({\n        success: false,\n        error: error",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-reporting.ts",
        "start": 305,
        "end": 319,
        "startLoc": {
          "line": 305,
          "column": 18,
          "position": 2373
        },
        "endLoc": {
          "line": 319,
          "column": 6,
          "position": 2485
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\advanced-reporting.ts",
        "start": 213,
        "end": 107,
        "startLoc": {
          "line": 213,
          "column": 16,
          "position": 1748
        },
        "endLoc": {
          "line": 107,
          "column": 26,
          "position": 961
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ");\n    \n    if (!dashboard) {\n      return res.status(404).json({\n        success: false,\n        error: 'Dashboard not found'\n      });\n    }\n    \n    res.json({\n      success: true,\n      data: dashboard\n    });\n  } catch (error) {\n    logger",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-performance-monitoring.ts",
        "start": 242,
        "end": 256,
        "startLoc": {
          "line": 242,
          "column": 8,
          "position": 2309
        },
        "endLoc": {
          "line": 256,
          "column": 7,
          "position": 2398
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\data-analytics-dashboard.ts",
        "start": 75,
        "end": 89,
        "startLoc": {
          "line": 75,
          "column": 12,
          "position": 841
        },
        "endLoc": {
          "line": 89,
          "column": 17,
          "position": 928
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ".parse(req.query);\n    \n    // Convertir strings de fecha a objetos Date\n    if (filters.startTime) {\n      filters.startTime = new Date(filters.startTime as string);\n    }\n    if (filters.endTime) {\n      filters.endTime = new Date(filters.endTime as string);\n    }\n    \n    const traces",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-observability.ts",
        "start": 297,
        "end": 307,
        "startLoc": {
          "line": 297,
          "column": 19,
          "position": 2676
        },
        "endLoc": {
          "line": 307,
          "column": 7,
          "position": 2765
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\advanced-observability.ts",
        "start": 201,
        "end": 211,
        "startLoc": {
          "line": 201,
          "column": 17,
          "position": 1938
        },
        "endLoc": {
          "line": 211,
          "column": 5,
          "position": 2027
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ".listAlertRules();\n    \n    res.json({\n      success: true,\n      data: rules,\n      count: rules.length\n    });\n  } catch (error) {\n    logger.error('Error listing alert rules', { error });\n    res.status(500).json({\n      success: false,\n      error: 'Failed to list alert rules',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n// GET /api/advanced-metrics-alerts/alert-rules/:id",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-metrics-alerts.ts",
        "start": 177,
        "end": 194,
        "startLoc": {
          "line": 177,
          "column": 21,
          "position": 1788
        },
        "endLoc": {
          "line": 194,
          "column": 52,
          "position": 1916
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\centralized-logging.ts",
        "start": 243,
        "end": 260,
        "startLoc": {
          "line": 243,
          "column": 15,
          "position": 2677
        },
        "endLoc": {
          "line": 260,
          "column": 48,
          "position": 2804
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": ".getAlertRule(id);\n    \n    if (!rule) {\n      return res.status(404).json({\n        success: false,\n        error: 'Alert rule not found'\n      });\n    }\n\n    res.json({\n      success: true,\n      data: rule\n    });\n  } catch (error) {\n    logger.error('Error getting alert rule', { error });\n    res.status(500).json({\n      success: false,\n      error: 'Failed to get alert rule',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n// POST /api/advanced-metrics-alerts/alert-rules",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-metrics-alerts.ts",
        "start": 198,
        "end": 221,
        "startLoc": {
          "line": 198,
          "column": 21,
          "position": 1975
        },
        "endLoc": {
          "line": 221,
          "column": 49,
          "position": 2141
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\centralized-logging.ts",
        "start": 264,
        "end": 287,
        "startLoc": {
          "line": 264,
          "column": 15,
          "position": 2863
        },
        "endLoc": {
          "line": 287,
          "column": 45,
          "position": 3028
        }
      }
    },
    {
      "format": "typescript",
      "lines": 28,
      "fragment": ",\n      actions: validatedData.actions\n    });\n\n    res.status(201).json({\n      success: true,\n      data: rule,\n      message: 'Alert rule created successfully'\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Error creating alert rule', { error });\n    res.status(500).json({\n      success: false,\n      error: 'Failed to create alert rule',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n// PUT /api/advanced-metrics-alerts/alert-rules/:id",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-metrics-alerts.ts",
        "start": 234,
        "end": 261,
        "startLoc": {
          "line": 234,
          "column": 7,
          "position": 2290
        },
        "endLoc": {
          "line": 261,
          "column": 52,
          "position": 2489
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\centralized-logging.ts",
        "start": 301,
        "end": 328,
        "startLoc": {
          "line": 301,
          "column": 5,
          "position": 3178
        },
        "endLoc": {
          "line": 328,
          "column": 48,
          "position": 3377
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ".updateAlertRule(id, updates);\n    \n    if (!updatedRule) {\n      return res.status(404).json({\n        success: false,\n        error: 'Alert rule not found'\n      });\n    }\n\n    res.json({\n      success: true,\n      data: updatedRule,\n      message: 'Alert rule updated successfully'\n    });\n  } catch (error) {\n    logger.error('Error updating alert rule', { error });\n    res.status(500).json({\n      success: false,\n      error: 'Failed to update alert rule',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n// DELETE /api/advanced-metrics-alerts/alert-rules/:id",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-metrics-alerts.ts",
        "start": 267,
        "end": 291,
        "startLoc": {
          "line": 267,
          "column": 21,
          "position": 2562
        },
        "endLoc": {
          "line": 291,
          "column": 55,
          "position": 2738
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\centralized-logging.ts",
        "start": 334,
        "end": 358,
        "startLoc": {
          "line": 334,
          "column": 15,
          "position": 3449
        },
        "endLoc": {
          "line": 358,
          "column": 51,
          "position": 3624
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": ".deleteAlertRule(id);\n    \n    if (!deleted) {\n      return res.status(404).json({\n        success: false,\n        error: 'Alert rule not found'\n      });\n    }\n\n    res.json({\n      success: true,\n      message: 'Alert rule deleted successfully'\n    });\n  } catch (error) {\n    logger.error('Error deleting alert rule', { error });\n    res.status(500).json({\n      success: false,\n      error: 'Failed to delete alert rule',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n// POST /api/advanced-metrics-alerts/alert-rules/evaluate",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-metrics-alerts.ts",
        "start": 295,
        "end": 318,
        "startLoc": {
          "line": 295,
          "column": 21,
          "position": 2797
        },
        "endLoc": {
          "line": 318,
          "column": 58,
          "position": 2963
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\centralized-logging.ts",
        "start": 362,
        "end": 385,
        "startLoc": {
          "line": 362,
          "column": 15,
          "position": 3683
        },
        "endLoc": {
          "line": 385,
          "column": 49,
          "position": 3848
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ");\n    \n    if (!alert) {\n      return res.status(404).json({\n        success: false,\n        error: 'Alert not found'\n      });\n    }\n\n    res.json({\n      success: true,\n      data: alert\n    });\n  } catch (error) {\n    logger.error('Error getting alert'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-metrics-alerts.ts",
        "start": 373,
        "end": 387,
        "startLoc": {
          "line": 373,
          "column": 3,
          "position": 3502
        },
        "endLoc": {
          "line": 387,
          "column": 22,
          "position": 3594
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\advanced-performance-monitoring.ts",
        "start": 153,
        "end": 167,
        "startLoc": {
          "line": 153,
          "column": 8,
          "position": 1600
        },
        "endLoc": {
          "line": 167,
          "column": 24,
          "position": 1693
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Error creating SLA'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-metrics-alerts.ts",
        "start": 530,
        "end": 540,
        "startLoc": {
          "line": 530,
          "column": 5,
          "position": 4776
        },
        "endLoc": {
          "line": 540,
          "column": 21,
          "position": 4856
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\project-completion-deployment.ts",
        "start": 139,
        "end": 149,
        "startLoc": {
          "line": 139,
          "column": 5,
          "position": 1411
        },
        "endLoc": {
          "line": 149,
          "column": 28,
          "position": 1491
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "router.get('/reports/:period', async (req: Request, res: Response) => {\n  try {\n    const { period } = req.params;\n    \n    if (!['hourly', 'daily', 'weekly', 'monthly'].includes(period)) {\n      return res.status(400).json({\n        success: false,\n        error: 'Invalid period. Must be: hourly, daily, weekly, or monthly'\n      });\n    }\n\n    const report = await metricsAlertsService",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-metrics-alerts.ts",
        "start": 598,
        "end": 609,
        "startLoc": {
          "line": 598,
          "column": 1,
          "position": 5353
        },
        "endLoc": {
          "line": 609,
          "column": 21,
          "position": 5473
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\centralized-logging.ts",
        "start": 573,
        "end": 584,
        "startLoc": {
          "line": 573,
          "column": 1,
          "position": 5390
        },
        "endLoc": {
          "line": 584,
          "column": 15,
          "position": 5509
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "router.get('/config', async (req: Request, res: Response) => {\n  try {\n    res.json({\n      success: true,\n      data: defaultConfig\n    });\n  } catch (error) {\n    logger.error('Error getting configuration', { error });\n    res.status(500).json({\n      success: false,\n      error: 'Failed to get configuration',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n// PUT /api/advanced-metrics-alerts/config",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-metrics-alerts.ts",
        "start": 628,
        "end": 644,
        "startLoc": {
          "line": 628,
          "column": 1,
          "position": 5625
        },
        "endLoc": {
          "line": 644,
          "column": 43,
          "position": 5767
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\automated-testing.ts",
        "start": 541,
        "end": 449,
        "startLoc": {
          "line": 541,
          "column": 1,
          "position": 4843
        },
        "endLoc": {
          "line": 449,
          "column": 49,
          "position": 3985
        }
      }
    },
    {
      "format": "typescript",
      "lines": 33,
      "fragment": "router.put('/config', async (req: Request, res: Response) => {\n  try {\n    const validatedData = UpdateConfigSchema.parse(req.body);\n    \n    // Actualizar configuración (en una implementación real, esto se persistiría)\n    Object.assign(defaultConfig, validatedData);\n    \n    res.json({\n      success: true,\n      data: defaultConfig,\n      message: 'Configuration updated successfully'\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Error updating configuration', { error });\n    res.status(500).json({\n      success: false,\n      error: 'Failed to update configuration',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n// ===== HEALTH CHECK =====\n\n// GET /api/advanced-metrics-alerts/health",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-metrics-alerts.ts",
        "start": 645,
        "end": 677,
        "startLoc": {
          "line": 645,
          "column": 1,
          "position": 5769
        },
        "endLoc": {
          "line": 677,
          "column": 43,
          "position": 6017
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\automated-testing.ts",
        "start": 558,
        "end": 481,
        "startLoc": {
          "line": 558,
          "column": 1,
          "position": 4987
        },
        "endLoc": {
          "line": 481,
          "column": 49,
          "position": 4235
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "}\n    };\n\n    res.json({\n      success: true,\n      data: health\n    });\n  } catch (error) {\n    logger.error('Error checking health', { error });\n    res.status(500).json({\n      success: false,\n      error: 'Health check failed',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\nexport default router;",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-metrics-alerts.ts",
        "start": 696,
        "end": 713,
        "startLoc": {
          "line": 696,
          "column": 7,
          "position": 6222
        },
        "endLoc": {
          "line": 713,
          "column": 2,
          "position": 6345
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\project-completion-deployment.ts",
        "start": 503,
        "end": 624,
        "startLoc": {
          "line": 503,
          "column": 7,
          "position": 4469
        },
        "endLoc": {
          "line": 624,
          "column": 2,
          "position": 5517
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "(req, res);\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({ error: 'Validation error', details: error.errors });\n    } else {\n      res.status(500).json({ error: 'Internal server error' });\n    }\n  }\n});\n\nrouter.post('/ai/analyze-seasonality'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-features.ts",
        "start": 103,
        "end": 113,
        "startLoc": {
          "line": 103,
          "column": 18,
          "position": 1258
        },
        "endLoc": {
          "line": 113,
          "column": 26,
          "position": 1364
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\advanced-features.ts",
        "start": 90,
        "end": 100,
        "startLoc": {
          "line": 90,
          "column": 14,
          "position": 1108
        },
        "endLoc": {
          "line": 100,
          "column": 25,
          "position": 1214
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "(req, res);\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({ error: 'Validation error', details: error.errors });\n    } else {\n      res.status(500).json({ error: 'Internal server error' });\n    }\n  }\n});\n\nrouter.post('/ai/generate-recommendations'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-features.ts",
        "start": 116,
        "end": 126,
        "startLoc": {
          "line": 116,
          "column": 19,
          "position": 1408
        },
        "endLoc": {
          "line": 126,
          "column": 31,
          "position": 1514
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\advanced-features.ts",
        "start": 90,
        "end": 100,
        "startLoc": {
          "line": 90,
          "column": 14,
          "position": 1108
        },
        "endLoc": {
          "line": 100,
          "column": 25,
          "position": 1214
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "(req, res);\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({ error: 'Validation error', details: error.errors });\n    } else {\n      res.status(500).json({ error: 'Internal server error' });\n    }\n  }\n});\n\n// PR-13: Metrics routes",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-features.ts",
        "start": 129,
        "end": 139,
        "startLoc": {
          "line": 129,
          "column": 24,
          "position": 1558
        },
        "endLoc": {
          "line": 139,
          "column": 25,
          "position": 1660
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\advanced-features.ts",
        "start": 90,
        "end": 100,
        "startLoc": {
          "line": 90,
          "column": 14,
          "position": 1108
        },
        "endLoc": {
          "line": 100,
          "column": 7,
          "position": 1210
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "(req, res);\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({ error: 'Validation error', details: error.errors });\n    } else {\n      res.status(500).json({ error: 'Internal server error' });\n    }\n  }\n});\n\n// PR-14: AutoML routes",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-features.ts",
        "start": 167,
        "end": 177,
        "startLoc": {
          "line": 167,
          "column": 13,
          "position": 1947
        },
        "endLoc": {
          "line": 177,
          "column": 24,
          "position": 2049
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\advanced-features.ts",
        "start": 90,
        "end": 100,
        "startLoc": {
          "line": 90,
          "column": 14,
          "position": 1108
        },
        "endLoc": {
          "line": 100,
          "column": 7,
          "position": 1210
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "(req, res);\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({ error: 'Validation error', details: error.errors });\n    } else {\n      res.status(500).json({ error: 'Internal server error' });\n    }\n  }\n});\n\nrouter.post('/ml/predict'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-features.ts",
        "start": 181,
        "end": 191,
        "startLoc": {
          "line": 181,
          "column": 11,
          "position": 2099
        },
        "endLoc": {
          "line": 191,
          "column": 14,
          "position": 2205
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\advanced-features.ts",
        "start": 90,
        "end": 100,
        "startLoc": {
          "line": 90,
          "column": 14,
          "position": 1108
        },
        "endLoc": {
          "line": 100,
          "column": 25,
          "position": 1214
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "(req, res);\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({ error: 'Validation error', details: error.errors });\n    } else {\n      res.status(500).json({ error: 'Internal server error' });\n    }\n  }\n});\n\nrouter.post('/ml/evaluate'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-features.ts",
        "start": 194,
        "end": 204,
        "startLoc": {
          "line": 194,
          "column": 8,
          "position": 2249
        },
        "endLoc": {
          "line": 204,
          "column": 15,
          "position": 2355
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\advanced-features.ts",
        "start": 90,
        "end": 100,
        "startLoc": {
          "line": 90,
          "column": 14,
          "position": 1108
        },
        "endLoc": {
          "line": 100,
          "column": 25,
          "position": 1214
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "(req, res);\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({ error: 'Validation error', details: error.errors });\n    } else {\n      res.status(500).json({ error: 'Internal server error' });\n    }\n  }\n});\n\nrouter.get",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-features.ts",
        "start": 214,
        "end": 224,
        "startLoc": {
          "line": 214,
          "column": 14,
          "position": 2492
        },
        "endLoc": {
          "line": 224,
          "column": 4,
          "position": 2596
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\advanced-features.ts",
        "start": 90,
        "end": 100,
        "startLoc": {
          "line": 90,
          "column": 14,
          "position": 1108
        },
        "endLoc": {
          "line": 100,
          "column": 5,
          "position": 1212
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "(req, res);\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({ error: 'Validation error', details: error.errors });\n    } else {\n      res.status(500).json({ error: 'Internal server error' });\n    }\n  }\n});\n\nrouter.post('/sentiment/batch'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-features.ts",
        "start": 236,
        "end": 246,
        "startLoc": {
          "line": 236,
          "column": 17,
          "position": 2723
        },
        "endLoc": {
          "line": 246,
          "column": 19,
          "position": 2829
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\advanced-features.ts",
        "start": 90,
        "end": 100,
        "startLoc": {
          "line": 90,
          "column": 14,
          "position": 1108
        },
        "endLoc": {
          "line": 100,
          "column": 25,
          "position": 1214
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "(req, res);\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({ error: 'Validation error', details: error.errors });\n    } else {\n      res.status(500).json({ error: 'Internal server error' });\n    }\n  }\n});\n\nrouter.get('/sentiment/trends'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-features.ts",
        "start": 249,
        "end": 259,
        "startLoc": {
          "line": 249,
          "column": 22,
          "position": 2873
        },
        "endLoc": {
          "line": 259,
          "column": 20,
          "position": 2979
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\advanced-features.ts",
        "start": 90,
        "end": 224,
        "startLoc": {
          "line": 90,
          "column": 14,
          "position": 1108
        },
        "endLoc": {
          "line": 224,
          "column": 13,
          "position": 2598
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "(req, res);\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({ error: 'Validation error', details: error.errors });\n    } else {\n      res.status(500).json({ error: 'Internal server error' });\n    }\n  }\n});\n\nrouter.post('/azure/generate-image'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-features.ts",
        "start": 271,
        "end": 281,
        "startLoc": {
          "line": 271,
          "column": 5,
          "position": 3104
        },
        "endLoc": {
          "line": 281,
          "column": 24,
          "position": 3210
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\advanced-features.ts",
        "start": 90,
        "end": 100,
        "startLoc": {
          "line": 90,
          "column": 14,
          "position": 1108
        },
        "endLoc": {
          "line": 100,
          "column": 25,
          "position": 1214
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "(req, res);\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({ error: 'Validation error', details: error.errors });\n    } else {\n      res.status(500).json({ error: 'Internal server error' });\n    }\n  }\n});\n\nrouter.post('/azure/text-to-speech'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-features.ts",
        "start": 284,
        "end": 294,
        "startLoc": {
          "line": 284,
          "column": 14,
          "position": 3254
        },
        "endLoc": {
          "line": 294,
          "column": 24,
          "position": 3360
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\advanced-features.ts",
        "start": 90,
        "end": 100,
        "startLoc": {
          "line": 90,
          "column": 14,
          "position": 1108
        },
        "endLoc": {
          "line": 100,
          "column": 25,
          "position": 1214
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "(req, res);\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({ error: 'Validation error', details: error.errors });\n    } else {\n      res.status(500).json({ error: 'Internal server error' });\n    }\n  }\n});\n\nrouter.get('/azure/usage-stats'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-features.ts",
        "start": 297,
        "end": 307,
        "startLoc": {
          "line": 297,
          "column": 13,
          "position": 3404
        },
        "endLoc": {
          "line": 307,
          "column": 21,
          "position": 3510
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\advanced-features.ts",
        "start": 90,
        "end": 224,
        "startLoc": {
          "line": 90,
          "column": 14,
          "position": 1108
        },
        "endLoc": {
          "line": 224,
          "column": 13,
          "position": 2598
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "(req, res);\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({ error: 'Validation error', details: error.errors });\n    } else {\n      res.status(500).json({ error: 'Internal server error' });\n    }\n  }\n});\n\nrouter.post('/search/news'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-features.ts",
        "start": 319,
        "end": 329,
        "startLoc": {
          "line": 319,
          "column": 7,
          "position": 3635
        },
        "endLoc": {
          "line": 329,
          "column": 15,
          "position": 3741
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\advanced-features.ts",
        "start": 90,
        "end": 100,
        "startLoc": {
          "line": 90,
          "column": 14,
          "position": 1108
        },
        "endLoc": {
          "line": 100,
          "column": 25,
          "position": 1214
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "(req, res);\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({ error: 'Validation error', details: error.errors });\n    } else {\n      res.status(500).json({ error: 'Internal server error' });\n    }\n  }\n});\n\nrouter.get('/search/trending'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-features.ts",
        "start": 332,
        "end": 342,
        "startLoc": {
          "line": 332,
          "column": 11,
          "position": 3785
        },
        "endLoc": {
          "line": 342,
          "column": 19,
          "position": 3891
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\advanced-features.ts",
        "start": 90,
        "end": 224,
        "startLoc": {
          "line": 90,
          "column": 14,
          "position": 1108
        },
        "endLoc": {
          "line": 224,
          "column": 13,
          "position": 2598
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "= z.object({\n  organizationId: z.string().min(1),\n  reportType: z.enum(['daily', 'weekly', 'monthly', 'ad_hoc']),\n  startDate: z.string().datetime(),\n  endDate: z.string().datetime(),\n  generatedBy: z.string().min(1),\n});\n\nconst GetStatsSchema = z.object({\n  organizationId: z.string().min(1),\n});\n\n// Routes\n\n// Error Management",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-error-management.ts",
        "start": 185,
        "end": 199,
        "startLoc": {
          "line": 185,
          "column": 2,
          "position": 2910
        },
        "endLoc": {
          "line": 199,
          "column": 20,
          "position": 3044
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\dlg-grooming.ts",
        "start": 111,
        "end": 84,
        "startLoc": {
          "line": 111,
          "column": 2,
          "position": 1703
        },
        "endLoc": {
          "line": 84,
          "column": 55,
          "position": 1026
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ".getPatterns(filters.organizationId, filters);\n    \n    res.json({\n      success: true,\n      data: {\n        patterns,\n        total: patterns.length,\n        filters\n      },\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Error getting patterns'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-error-management.ts",
        "start": 276,
        "end": 288,
        "startLoc": {
          "line": 276,
          "column": 31,
          "position": 3761
        },
        "endLoc": {
          "line": 288,
          "column": 25,
          "position": 3850
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\dlg-grooming.ts",
        "start": 202,
        "end": 214,
        "startLoc": {
          "line": 202,
          "column": 19,
          "position": 2554
        },
        "endLoc": {
          "line": 214,
          "column": 29,
          "position": 2643
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": ".getAlerts(filters.organizationId, filters);\n    \n    res.json({\n      success: true,\n      data: {\n        alerts,\n        total: alerts.length,\n        filters\n      },\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Error getting alerts', { error });\n    res.status(400).json({\n      success: false,\n      error: 'Invalid request data',\n      details: error.errors\n    });\n  }\n});\n\nadvancedErrorManagementRouter",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-error-management.ts",
        "start": 366,
        "end": 387,
        "startLoc": {
          "line": 366,
          "column": 31,
          "position": 4523
        },
        "endLoc": {
          "line": 387,
          "column": 30,
          "position": 4670
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\inventory-kardex.ts",
        "start": 295,
        "end": 316,
        "startLoc": {
          "line": 295,
          "column": 23,
          "position": 3224
        },
        "endLoc": {
          "line": 316,
          "column": 22,
          "position": 3371
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "(\n      reportData.organizationId,\n      reportData.reportType,\n      reportData.startDate,\n      reportData.endDate,\n      reportData.generatedBy\n    );\n    \n    res.status(201).json({\n      success: true,\n      data: report,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Error generating error report'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-error-management.ts",
        "start": 487,
        "end": 501,
        "startLoc": {
          "line": 487,
          "column": 20,
          "position": 5536
        },
        "endLoc": {
          "line": 501,
          "column": 32,
          "position": 5634
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\supplier-scorecard.ts",
        "start": 375,
        "end": 389,
        "startLoc": {
          "line": 375,
          "column": 23,
          "position": 4295
        },
        "endLoc": {
          "line": 389,
          "column": 35,
          "position": 4393
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "},\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Error checking health', { error });\n    res.status(500).json({\n      success: false,\n      error: 'Health check failed'\n    });\n  }\n});\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-error-management.ts",
        "start": 546,
        "end": 558,
        "startLoc": {
          "line": 546,
          "column": 7,
          "position": 6006
        },
        "endLoc": {
          "line": 558,
          "column": 7,
          "position": 6093
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\reportes-mensuales.ts",
        "start": 257,
        "end": 269,
        "startLoc": {
          "line": 257,
          "column": 7,
          "position": 2571
        },
        "endLoc": {
          "line": 269,
          "column": 30,
          "position": 2658
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ");\n    \n    if (!environment) {\n      return res.status(404).json({\n        success: false,\n        error: 'Environment not found'\n      });\n    }\n    \n    res.json({\n      success: true,\n      data: environment\n    });\n  } catch (error) {\n    logger",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-deployment-automation.ts",
        "start": 231,
        "end": 245,
        "startLoc": {
          "line": 231,
          "column": 8,
          "position": 2343
        },
        "endLoc": {
          "line": 245,
          "column": 7,
          "position": 2432
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\configuration.ts",
        "start": 228,
        "end": 242,
        "startLoc": {
          "line": 228,
          "column": 5,
          "position": 1829
        },
        "endLoc": {
          "line": 242,
          "column": 4,
          "position": 1918
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ");\n    \n    if (!job) {\n      return res.status(404).json({\n        success: false,\n        error: 'Job not found'\n      });\n    }\n    \n    res.json({\n      success: true,\n      data: job\n    });\n  } catch (error) {\n    logger.error('Error updating job status:'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-deployment-automation.ts",
        "start": 374,
        "end": 388,
        "startLoc": {
          "line": 374,
          "column": 9,
          "position": 3533
        },
        "endLoc": {
          "line": 388,
          "column": 29,
          "position": 3626
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\advanced-deployment-automation.ts",
        "start": 347,
        "end": 361,
        "startLoc": {
          "line": 347,
          "column": 3,
          "position": 3313
        },
        "endLoc": {
          "line": 361,
          "column": 21,
          "position": 3406
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": ".getStatistics();\n    \n    res.json({\n      success: true,\n      data: statistics\n    });\n  } catch (error) {\n    logger.error('Error getting statistics:', error);\n    res.status(500).json({\n      success: false,\n      error: 'Failed to retrieve statistics'\n    });\n  }\n});\n\n// Health check endpoint\nrouter.get('/health', async (req, res) => {\n  try {\n    const statistics = await advancedDeploymentAutomationService",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-deployment-automation.ts",
        "start": 640,
        "end": 658,
        "startLoc": {
          "line": 640,
          "column": 36,
          "position": 5617
        },
        "endLoc": {
          "line": 658,
          "column": 36,
          "position": 5747
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\advanced-performance-monitoring.ts",
        "start": 410,
        "end": 428,
        "startLoc": {
          "line": 410,
          "column": 37,
          "position": 3699
        },
        "endLoc": {
          "line": 428,
          "column": 37,
          "position": 3829
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "}\n    });\n  } catch (error) {\n    logger.error('Error checking health:', error);\n    res.status(500).json({\n      success: false,\n      status: 'unhealthy',\n      error: 'Health check failed'\n    });\n  }\n});\n\nexport default router;",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-deployment-automation.ts",
        "start": 669,
        "end": 681,
        "startLoc": {
          "line": 669,
          "column": 7,
          "position": 5834
        },
        "endLoc": {
          "line": 681,
          "column": 2,
          "position": 5914
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\advanced-performance-monitoring.ts",
        "start": 438,
        "end": 450,
        "startLoc": {
          "line": 438,
          "column": 7,
          "position": 3907
        },
        "endLoc": {
          "line": 450,
          "column": 2,
          "position": 3987
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Failed to create configuration'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-configuration-management.ts",
        "start": 235,
        "end": 245,
        "startLoc": {
          "line": 235,
          "column": 5,
          "position": 2599
        },
        "endLoc": {
          "line": 245,
          "column": 33,
          "position": 2679
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\project-completion-deployment.ts",
        "start": 139,
        "end": 149,
        "startLoc": {
          "line": 139,
          "column": 5,
          "position": 1411
        },
        "endLoc": {
          "line": 149,
          "column": 28,
          "position": 1491
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ",\n      message: 'Configuration updated successfully'\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Failed to update configuration'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-configuration-management.ts",
        "start": 284,
        "end": 296,
        "startLoc": {
          "line": 284,
          "column": 7,
          "position": 2987
        },
        "endLoc": {
          "line": 296,
          "column": 33,
          "position": 3076
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\project-completion-deployment.ts",
        "start": 458,
        "end": 149,
        "startLoc": {
          "line": 458,
          "column": 14,
          "position": 4073
        },
        "endLoc": {
          "line": 149,
          "column": 28,
          "position": 1491
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ",\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\nrouter.delete('/configs/:id', async (req, res) => {\n  try {\n    const { id } = req.params;\n    const { userId } = req.body;\n\n    const success = await advancedConfigurationManagementService",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-configuration-management.ts",
        "start": 303,
        "end": 314,
        "startLoc": {
          "line": 303,
          "column": 33,
          "position": 3142
        },
        "endLoc": {
          "line": 314,
          "column": 39,
          "position": 3244
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\backup-recovery.ts",
        "start": 251,
        "end": 262,
        "startLoc": {
          "line": 251,
          "column": 40,
          "position": 2623
        },
        "endLoc": {
          "line": 262,
          "column": 22,
          "position": 2725
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", async (req, res) => {\n  try {\n    const { id } = req.params;\n    const config = await advancedConfigurationManagementService.getConfig(id);\n\n    if (!config) {\n      return res.status(404).json({\n        success: false,\n        error: 'Configuration not found'\n      });\n    }\n\n    const",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-configuration-management.ts",
        "start": 350,
        "end": 362,
        "startLoc": {
          "line": 350,
          "column": 24,
          "position": 3494
        },
        "endLoc": {
          "line": 362,
          "column": 6,
          "position": 3595
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\advanced-configuration-management.ts",
        "start": 143,
        "end": 155,
        "startLoc": {
          "line": 143,
          "column": 15,
          "position": 1870
        },
        "endLoc": {
          "line": 155,
          "column": 7,
          "position": 1971
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", {\n      configId: id,\n      isValid: validation.isValid,\n      errorsCount: validation.errors.length,\n      warningsCount: validation.warnings.length\n    });\n\n    res.json({\n      success: true,\n      data: validation\n    });\n  } catch (error) {\n    logger.error('Failed to validate configuration'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-configuration-management.ts",
        "start": 364,
        "end": 376,
        "startLoc": {
          "line": 364,
          "column": 26,
          "position": 3618
        },
        "endLoc": {
          "line": 376,
          "column": 35,
          "position": 3706
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\backup-recovery.ts",
        "start": 312,
        "end": 324,
        "startLoc": {
          "line": 312,
          "column": 33,
          "position": 3099
        },
        "endLoc": {
          "line": 324,
          "column": 42,
          "position": 3187
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Failed to create template'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-configuration-management.ts",
        "start": 466,
        "end": 476,
        "startLoc": {
          "line": 466,
          "column": 5,
          "position": 4428
        },
        "endLoc": {
          "line": 476,
          "column": 28,
          "position": 4508
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\project-completion-deployment.ts",
        "start": 139,
        "end": 149,
        "startLoc": {
          "line": 139,
          "column": 5,
          "position": 1411
        },
        "endLoc": {
          "line": 149,
          "column": 28,
          "position": 1491
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Failed to generate configurations from template'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-configuration-management.ts",
        "start": 508,
        "end": 518,
        "startLoc": {
          "line": 508,
          "column": 5,
          "position": 4756
        },
        "endLoc": {
          "line": 518,
          "column": 50,
          "position": 4836
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\project-completion-deployment.ts",
        "start": 139,
        "end": 149,
        "startLoc": {
          "line": 139,
          "column": 5,
          "position": 1411
        },
        "endLoc": {
          "line": 149,
          "column": 28,
          "position": 1491
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Failed to create deployment'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-configuration-management.ts",
        "start": 547,
        "end": 557,
        "startLoc": {
          "line": 547,
          "column": 5,
          "position": 5074
        },
        "endLoc": {
          "line": 557,
          "column": 30,
          "position": 5154
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\project-completion-deployment.ts",
        "start": 139,
        "end": 149,
        "startLoc": {
          "line": 139,
          "column": 5,
          "position": 1411
        },
        "endLoc": {
          "line": 149,
          "column": 28,
          "position": 1491
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ".length\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Failed to export configurations'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-configuration-management.ts",
        "start": 746,
        "end": 757,
        "startLoc": {
          "line": 746,
          "column": 2,
          "position": 6708
        },
        "endLoc": {
          "line": 757,
          "column": 34,
          "position": 6792
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\centralized-logging.ts",
        "start": 182,
        "end": 149,
        "startLoc": {
          "line": 182,
          "column": 5,
          "position": 2168
        },
        "endLoc": {
          "line": 149,
          "column": 28,
          "position": 1491
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Failed to import configurations'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-configuration-management.ts",
        "start": 792,
        "end": 802,
        "startLoc": {
          "line": 792,
          "column": 5,
          "position": 7065
        },
        "endLoc": {
          "line": 802,
          "column": 34,
          "position": 7145
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\project-completion-deployment.ts",
        "start": 139,
        "end": 149,
        "startLoc": {
          "line": 139,
          "column": 5,
          "position": 1411
        },
        "endLoc": {
          "line": 149,
          "column": 28,
          "position": 1491
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ",\n      body: req.body\n    });\n    \n    if (error instanceof z.ZodError) {\n      res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    } else {\n      res.status(500).json({\n        success: false,\n        error: 'Failed to create deployment'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-cicd.ts",
        "start": 107,
        "end": 120,
        "startLoc": {
          "line": 107,
          "column": 24,
          "position": 1046
        },
        "endLoc": {
          "line": 120,
          "column": 30,
          "position": 1147
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\advanced-reporting.ts",
        "start": 94,
        "end": 107,
        "startLoc": {
          "line": 94,
          "column": 16,
          "position": 860
        },
        "endLoc": {
          "line": 107,
          "column": 26,
          "position": 961
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ",\n      body: req.body\n    });\n    \n    if (error instanceof z.ZodError) {\n      res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    } else {\n      res.status(500).json({\n        success: false,\n        error: 'Failed to create artifact'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-cicd.ts",
        "start": 320,
        "end": 333,
        "startLoc": {
          "line": 320,
          "column": 22,
          "position": 2658
        },
        "endLoc": {
          "line": 333,
          "column": 28,
          "position": 2759
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\advanced-reporting.ts",
        "start": 94,
        "end": 107,
        "startLoc": {
          "line": 94,
          "column": 16,
          "position": 860
        },
        "endLoc": {
          "line": 107,
          "column": 26,
          "position": 961
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ",\n      body: req.body\n    });\n    \n    if (error instanceof z.ZodError) {\n      res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    } else {\n      res.status(500).json({\n        success: false,\n        error: 'Failed to record test result'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-cicd.ts",
        "start": 416,
        "end": 429,
        "startLoc": {
          "line": 416,
          "column": 25,
          "position": 3361
        },
        "endLoc": {
          "line": 429,
          "column": 31,
          "position": 3462
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\advanced-reporting.ts",
        "start": 94,
        "end": 107,
        "startLoc": {
          "line": 94,
          "column": 16,
          "position": 860
        },
        "endLoc": {
          "line": 107,
          "column": 26,
          "position": 961
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ",\n      body: req.body\n    });\n    \n    if (error instanceof z.ZodError) {\n      res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    } else {\n      res.status(500).json({\n        success: false,\n        error: 'Failed to update configuration'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-cicd.ts",
        "start": 513,
        "end": 526,
        "startLoc": {
          "line": 513,
          "column": 12,
          "position": 4113
        },
        "endLoc": {
          "line": 526,
          "column": 33,
          "position": 4214
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\advanced-reporting.ts",
        "start": 94,
        "end": 107,
        "startLoc": {
          "line": 94,
          "column": 16,
          "position": 860
        },
        "endLoc": {
          "line": 107,
          "column": 26,
          "position": 961
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": ".getServiceStats();\n    \n    res.json({\n      success: true,\n      data: stats\n    });\n  } catch (error) {\n    structuredLogger.error('Failed to get service stats', error as Error, {\n      operation: 'stats_get'\n    });\n    \n    res.status(500).json({\n      success: false,\n      error: 'Failed to get service stats'\n    });\n  }\n});\n\n// ============================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-cicd.ts",
        "start": 569,
        "end": 587,
        "startLoc": {
          "line": 569,
          "column": 12,
          "position": 4469
        },
        "endLoc": {
          "line": 587,
          "column": 80,
          "position": 4581
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\advanced-reporting.ts",
        "start": 453,
        "end": 471,
        "startLoc": {
          "line": 453,
          "column": 17,
          "position": 3365
        },
        "endLoc": {
          "line": 471,
          "column": 7,
          "position": 3477
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": ",\n        total: result.total,\n        filters,\n        timestamp: new Date().toISOString(),\n        traceId\n      }\n    });\n\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Invalid filter parameters',\n        details: error.errors,\n        traceId\n      });\n    }\n\n    structuredLogger.error('Failed to get compliance violations'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\routes\\advanced-audit-compliance.ts",
        "start": 353,
        "end": 371,
        "startLoc": {
          "line": 353,
          "column": 11,
          "position": 3068
        },
        "endLoc": {
          "line": 371,
          "column": 38,
          "position": 3190
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\advanced-audit-compliance.ts",
        "start": 189,
        "end": 207,
        "startLoc": {
          "line": 189,
          "column": 7,
          "position": 1878
        },
        "endLoc": {
          "line": 207,
          "column": 29,
          "position": 2000
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ",\n            content: {\n              'application/json': {\n                schema: {\n                  type: 'object',\n                  properties: {\n                    success: { type: 'boolean', example: true },\n                    data: {\n                      type: 'array',\n                      items: {\n                        type: 'object',\n                        properties: {\n                          id: { type: 'string',",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\openapi\\spec.ts",
        "start": 434,
        "end": 446,
        "startLoc": {
          "line": 434,
          "column": 33,
          "position": 3155
        },
        "endLoc": {
          "line": 446,
          "column": 2,
          "position": 3250
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\openapi\\spec.ts",
        "start": 226,
        "end": 238,
        "startLoc": {
          "line": 226,
          "column": 32,
          "position": 1518
        },
        "endLoc": {
          "line": 238,
          "column": 2,
          "position": 1614
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "}\n\n  if (errors.length > 0) {\n    const problemDetails: ProblemDetails = {\n      type: 'https://econeura.com/errors/validation-failed',\n      title: 'Validation Failed',\n      status: 400,\n      detail: 'Request validation failed',\n      instance: req.url,\n      timestamp: new Date().toISOString(),\n      errors: errors\n    };\n\n    res.status(400).json(problemDetails);\n    return;\n  }\n\n  next();\n};",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\middleware\\validation.middleware.ts",
        "start": 130,
        "end": 148,
        "startLoc": {
          "line": 130,
          "column": 3,
          "position": 1342
        },
        "endLoc": {
          "line": 148,
          "column": 2,
          "position": 1464
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\middleware\\validation.middleware.ts",
        "start": 66,
        "end": 84,
        "startLoc": {
          "line": 66,
          "column": 3,
          "position": 725
        },
        "endLoc": {
          "line": 84,
          "column": 2,
          "position": 847
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": "= (req: Request, res: Response, next: NextFunction): void => {\n  // Sanitizar body\n  if (req.body && typeof req.body === 'object') {\n    req.body = sanitizeObject(req.body);\n  }\n\n  // Sanitizar query parameters\n  if (req.query && typeof req.query === 'object') {\n    req.query = sanitizeObject(req.query);\n  }\n\n  // Sanitizar params\n  if (req.params && typeof req.params === 'object') {\n    req.params = sanitizeObject(req.params);\n  }\n\n  next();\n};\n\n// ========================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\middleware\\security.middleware.ts",
        "start": 85,
        "end": 104,
        "startLoc": {
          "line": 85,
          "column": 2,
          "position": 568
        },
        "endLoc": {
          "line": 104,
          "column": 76,
          "position": 741
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\middleware\\security.ts",
        "start": 107,
        "end": 126,
        "startLoc": {
          "line": 107,
          "column": 2,
          "position": 886
        },
        "endLoc": {
          "line": 126,
          "column": 31,
          "position": 1062
        }
      }
    },
    {
      "format": "typescript",
      "lines": 41,
      "fragment": ": ['GET', 'POST', 'PUT', 'PATCH', 'DELETE', 'OPTIONS', 'HEAD'],\n  allowedHeaders: [\n    'Content-Type',\n    'Authorization',\n    'X-Requested-With',\n    'X-Org-ID',\n    'X-User-ID',\n    'X-Correlation-ID',\n    'X-Tenant-ID',\n    'X-User-Role',\n    'X-Permissions',\n    'X-Session-ID',\n    'X-Request-ID',\n    'X-CSRF-Token',\n    'X-API-Key',\n    'X-Client-Version',\n    'X-Client-Platform',\n    'Accept',\n    'Accept-Language',\n    'Accept-Encoding',\n    'Cache-Control',\n    'Pragma'\n  ],\n  exposedHeaders: [\n    'X-System-Mode',\n    'X-Est-Cost-EUR',\n    'X-Budget-Pct',\n    'X-Latency-ms',\n    'X-Route',\n    'X-RLS-Policies-Applied',\n    'X-RLS-Rules-Evaluated',\n    'X-RLS-Execution-Time',\n    'X-RLS-Tenant-Isolation',\n    'X-RateLimit-Limit',\n    'X-RateLimit-Remaining',\n    'X-RateLimit-Reset',\n    'X-Cache-Status',\n    'X-Response-Time',\n    'X-Request-ID'\n  ],\n  maxAge",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\middleware\\security-enhanced.middleware.ts",
        "start": 48,
        "end": 88,
        "startLoc": {
          "line": 48,
          "column": 8,
          "position": 288
        },
        "endLoc": {
          "line": 88,
          "column": 7,
          "position": 472
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\security-config.service.ts",
        "start": 77,
        "end": 117,
        "startLoc": {
          "line": 77,
          "column": 15,
          "position": 449
        },
        "endLoc": {
          "line": 117,
          "column": 12,
          "position": 633
        }
      }
    },
    {
      "format": "typescript",
      "lines": 40,
      "fragment": "\"https://cdn.jsdelivr.net\",\n        \"https://unpkg.com\"\n      ],\n      styleSrc: [\n        \"'self'\",\n        \"'unsafe-inline'\",\n        \"https://fonts.googleapis.com\",\n        \"https://cdn.jsdelivr.net\"\n      ],\n      fontSrc: [\n        \"'self'\",\n        \"https://fonts.gstatic.com\",\n        \"data:\"\n      ],\n      imgSrc: [\n        \"'self'\",\n        \"data:\",\n        \"https:\",\n        \"blob:\"\n      ],\n      connectSrc: [\n        \"'self'\",\n        \"https:\",\n        \"wss:\",\n        \"ws:\"\n      ],\n      mediaSrc: [\n        \"'self'\",\n        \"data:\",\n        \"blob:\"\n      ],\n      objectSrc: [\"'none'\"],\n      baseUri: [\"'self'\"],\n      formAction: [\"'self'\"],\n      frameAncestors: [\"'none'\"],\n      upgradeInsecureRequests: []\n    },\n    reportOnly: false\n  },\n  crossOriginEmbedderPolicy",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\middleware\\security-enhanced.middleware.ts",
        "start": 102,
        "end": 141,
        "startLoc": {
          "line": 102,
          "column": 9,
          "position": 549
        },
        "endLoc": {
          "line": 141,
          "column": 26,
          "position": 734
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\security-config.service.ts",
        "start": 128,
        "end": 167,
        "startLoc": {
          "line": 128,
          "column": 15,
          "position": 695
        },
        "endLoc": {
          "line": 167,
          "column": 5,
          "position": 880
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ";\n    \n    const userId = req.headers['x-user-id'] as string || \n                   req.headers['x-subject'] as string;\n    \n    const role = req.headers['x-user-role'] as string || \n                 req.headers['x-role'] as string || \n                 'user';\n    \n    const permissions = req.headers['x-permissions'] as string ? \n                       (req.headers['x-permissions'] as string).split(',') : \n                       [",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\middleware\\rls-tenant.middleware.ts",
        "start": 34,
        "end": 45,
        "startLoc": {
          "line": 34,
          "column": 15,
          "position": 244
        },
        "endLoc": {
          "line": 45,
          "column": 2,
          "position": 370
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\middleware\\rls.ts",
        "start": 19,
        "end": 30,
        "startLoc": {
          "line": 19,
          "column": 10,
          "position": 189
        },
        "endLoc": {
          "line": 30,
          "column": 10,
          "position": 315
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "if (req.gatewayInfo?.serviceId) {\n          apiGateway.recordRequest(req.gatewayInfo.serviceId, responseTime, success);\n        }\n\n        // Decrementar contador de conexiones activas\n        if (req.gatewayInfo?.serviceId) {\n          const service = apiGateway.getService(req.gatewayInfo.serviceId);\n          if (service) {\n            service.currentConnections = Math.max(0, service.currentConnections - 1);\n          }\n        }\n\n        logger",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\middleware\\gateway.ts",
        "start": 203,
        "end": 215,
        "startLoc": {
          "line": 203,
          "column": 9,
          "position": 1739
        },
        "endLoc": {
          "line": 215,
          "column": 7,
          "position": 1852
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\middleware\\gateway.ts",
        "start": 155,
        "end": 167,
        "startLoc": {
          "line": 155,
          "column": 9,
          "position": 1322
        },
        "endLoc": {
          "line": 167,
          "column": 22,
          "position": 1435
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ") {\n      instance.status = 'completed';\n      instance.completedAt = new Date();\n      instance.updatedAt = new Date();\n      instance.history.push({\n        timestamp: new Date(),\n        action: 'workflow_completed',\n        message: 'Workflow completed successfully',\n      });\n      return;\n    }\n\n    // Encontrar transiciones disponibles",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\workflows.ts",
        "start": 758,
        "end": 770,
        "startLoc": {
          "line": 758,
          "column": 8,
          "position": 7337
        },
        "endLoc": {
          "line": 770,
          "column": 38,
          "position": 7427
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\workflows.ts",
        "start": 703,
        "end": 715,
        "startLoc": {
          "line": 703,
          "column": 11,
          "position": 6856
        },
        "endLoc": {
          "line": 715,
          "column": 32,
          "position": 6946
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "): Promise<Workflow[]> {\n    let workflows = Array.from(this.workflows.values());\n    \n    if (filters?.type) {\n      workflows = workflows.filter(w => w.type === filters.type);\n    }\n    \n    if (filters?.status) {\n      workflows = workflows.filter(w => w.status === filters.status);\n    }\n    \n    return",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\workflows.service.ts",
        "start": 231,
        "end": 242,
        "startLoc": {
          "line": 231,
          "column": 2,
          "position": 2640
        },
        "endLoc": {
          "line": 242,
          "column": 7,
          "position": 2760
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\workflows.ts",
        "start": 284,
        "end": 295,
        "startLoc": {
          "line": 284,
          "column": 16,
          "position": 2751
        },
        "endLoc": {
          "line": 295,
          "column": 3,
          "position": 2868
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", { service, duration });\n      metrics.warmupServiceDuration.observe({ service, status: 'success' }, duration);\n\n    } catch (error) {\n      const duration = Date.now() - startTime;\n      this.results.set(service, {\n        service,\n        status: 'error',\n        duration,\n        error: error instanceof Error ? error.message : String(error)\n      });\n\n      structuredLogger.error('Cache warmup failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\warmup-system.service.ts",
        "start": 202,
        "end": 214,
        "startLoc": {
          "line": 202,
          "column": 25,
          "position": 1527
        },
        "endLoc": {
          "line": 214,
          "column": 22,
          "position": 1655
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\warmup-system.service.ts",
        "start": 161,
        "end": 173,
        "startLoc": {
          "line": 161,
          "column": 28,
          "position": 1178
        },
        "endLoc": {
          "line": 173,
          "column": 25,
          "position": 1306
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", { service, duration });\n      metrics.warmupServiceDuration.observe({ service, status: 'success' }, duration);\n\n    } catch (error) {\n      const duration = Date.now() - startTime;\n      this.results.set(service, {\n        service,\n        status: 'error',\n        duration,\n        error: error instanceof Error ? error.message : String(error)\n      });\n\n      structuredLogger.error('AI Router warmup failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\warmup-system.service.ts",
        "start": 243,
        "end": 255,
        "startLoc": {
          "line": 243,
          "column": 29,
          "position": 1881
        },
        "endLoc": {
          "line": 255,
          "column": 26,
          "position": 2009
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\warmup-system.service.ts",
        "start": 161,
        "end": 173,
        "startLoc": {
          "line": 161,
          "column": 28,
          "position": 1178
        },
        "endLoc": {
          "line": 173,
          "column": 25,
          "position": 1306
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", { service, duration });\n      metrics.warmupServiceDuration.observe({ service, status: 'success' }, duration);\n\n    } catch (error) {\n      const duration = Date.now() - startTime;\n      this.results.set(service, {\n        service,\n        status: 'error',\n        duration,\n        error: error instanceof Error ? error.message : String(error)\n      });\n\n      structuredLogger.error('Analytics warmup failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\warmup-system.service.ts",
        "start": 284,
        "end": 296,
        "startLoc": {
          "line": 284,
          "column": 29,
          "position": 2230
        },
        "endLoc": {
          "line": 296,
          "column": 26,
          "position": 2358
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\warmup-system.service.ts",
        "start": 161,
        "end": 173,
        "startLoc": {
          "line": 161,
          "column": 28,
          "position": 1178
        },
        "endLoc": {
          "line": 173,
          "column": 25,
          "position": 1306
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", { service, duration });\n      metrics.warmupServiceDuration.observe({ service, status: 'success' }, duration);\n\n    } catch (error) {\n      const duration = Date.now() - startTime;\n      this.results.set(service, {\n        service,\n        status: 'error',\n        duration,\n        error: error instanceof Error ? error.message : String(error)\n      });\n\n      structuredLogger.error('Security warmup failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\warmup-system.service.ts",
        "start": 325,
        "end": 337,
        "startLoc": {
          "line": 325,
          "column": 28,
          "position": 2579
        },
        "endLoc": {
          "line": 337,
          "column": 25,
          "position": 2707
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\warmup-system.service.ts",
        "start": 161,
        "end": 173,
        "startLoc": {
          "line": 161,
          "column": 28,
          "position": 1178
        },
        "endLoc": {
          "line": 173,
          "column": 25,
          "position": 1306
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", { service, duration });\n      metrics.warmupServiceDuration.observe({ service, status: 'success' }, duration);\n\n    } catch (error) {\n      const duration = Date.now() - startTime;\n      this.results.set(service, {\n        service,\n        status: 'error',\n        duration,\n        error: error instanceof Error ? error.message : String(error)\n      });\n\n      structuredLogger.error('FinOps warmup failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\warmup-system.service.ts",
        "start": 366,
        "end": 378,
        "startLoc": {
          "line": 366,
          "column": 26,
          "position": 2928
        },
        "endLoc": {
          "line": 378,
          "column": 23,
          "position": 3056
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\warmup-system.service.ts",
        "start": 161,
        "end": 173,
        "startLoc": {
          "line": 161,
          "column": 28,
          "position": 1178
        },
        "endLoc": {
          "line": 173,
          "column": 25,
          "position": 1306
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", { service, duration });\n      metrics.warmupServiceDuration.observe({ service, status: 'success' }, duration);\n\n    } catch (error) {\n      const duration = Date.now() - startTime;\n      this.results.set(service, {\n        service,\n        status: 'error',\n        duration,\n        error: error instanceof Error ? error.message : String(error)\n      });\n\n      structuredLogger.error('Health Monitor warmup failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\warmup-system.service.ts",
        "start": 407,
        "end": 419,
        "startLoc": {
          "line": 407,
          "column": 34,
          "position": 3277
        },
        "endLoc": {
          "line": 419,
          "column": 31,
          "position": 3405
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\warmup-system.service.ts",
        "start": 161,
        "end": 173,
        "startLoc": {
          "line": 161,
          "column": 28,
          "position": 1178
        },
        "endLoc": {
          "line": 173,
          "column": 25,
          "position": 1306
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", { service, duration });\n      metrics.warmupServiceDuration.observe({ service, status: 'success' }, duration);\n\n    } catch (error) {\n      const duration = Date.now() - startTime;\n      this.results.set(service, {\n        service,\n        status: 'error',\n        duration,\n        error: error instanceof Error ? error.message : String(error)\n      });\n\n      structuredLogger.error('Endpoints warmup failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\warmup-system.service.ts",
        "start": 448,
        "end": 460,
        "startLoc": {
          "line": 448,
          "column": 29,
          "position": 3632
        },
        "endLoc": {
          "line": 460,
          "column": 26,
          "position": 3760
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\warmup-system.service.ts",
        "start": 161,
        "end": 173,
        "startLoc": {
          "line": 161,
          "column": 28,
          "position": 1178
        },
        "endLoc": {
          "line": 173,
          "column": 25,
          "position": 1306
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "= {\n      id: `report_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`,\n      organizationId,\n      reportType: reportType as any,\n      period: { startDate, endDate },\n      summary,\n      data,\n      generatedBy,\n      createdAt: new Date().toISOString()\n    };\n\n    structuredLogger.info('SEPA robust report generated'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\sepa-robust.service.ts",
        "start": 730,
        "end": 741,
        "startLoc": {
          "line": 730,
          "column": 2,
          "position": 6643
        },
        "endLoc": {
          "line": 741,
          "column": 31,
          "position": 6748
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\supplier-scorecard.service.ts",
        "start": 796,
        "end": 807,
        "startLoc": {
          "line": 796,
          "column": 2,
          "position": 7290
        },
        "endLoc": {
          "line": 807,
          "column": 28,
          "position": 7395
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ",\n        transactionsCount: transactions.length,\n        processedCount: transactions.length - errors.length,\n        errorsCount: errors.length,\n        status: errors.length === 0 ? 'success' : errors.length < transactions.length ? 'partial' : 'failed',\n        errors,\n        createdAt: new Date()\n      };\n    } catch (error) {\n      return {\n        fileId: `mt940_error_",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\sepa-parser.service.ts",
        "start": 100,
        "end": 110,
        "startLoc": {
          "line": 100,
          "column": 17,
          "position": 869
        },
        "endLoc": {
          "line": 110,
          "column": 14,
          "position": 979
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\sepa-parser.service.ts",
        "start": 35,
        "end": 45,
        "startLoc": {
          "line": 35,
          "column": 16,
          "position": 313
        },
        "endLoc": {
          "line": 45,
          "column": 13,
          "position": 423
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ";\n  category: string;\n  subcategory?: string;\n  tags: string[];\n  metadata: Record<string, any>;\n  ipAddress?: string;\n  userAgent?: string;\n  sessionId?: string;\n  resource?: string;\n  action?: string;\n  result?: SecurityEvent",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\security-types.ts",
        "start": 515,
        "end": 525,
        "startLoc": {
          "line": 515,
          "column": 2,
          "position": 4193
        },
        "endLoc": {
          "line": 525,
          "column": 14,
          "position": 4277
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\security-types.ts",
        "start": 22,
        "end": 32,
        "startLoc": {
          "line": 22,
          "column": 12,
          "position": 145
        },
        "endLoc": {
          "line": 32,
          "column": 10,
          "position": 229
        }
      }
    },
    {
      "format": "typescript",
      "lines": 30,
      "fragment": ",\n        variables: [\n          {\n            id: 'policy_name',\n            name: 'policy_name',\n            type: 'string',\n            required: true,\n            description: 'Name of the policy'\n          },\n          {\n            id: 'schema_name',\n            name: 'schema_name',\n            type: 'string',\n            required: true,\n            description: 'Database schema name'\n          },\n          {\n            id: 'table_name',\n            name: 'table_name',\n            type: 'string',\n            required: true,\n            description: 'Database table name'\n          },\n          {\n            id: 'policy_type',\n            name: 'policy_type',\n            type: 'string',\n            required: true,\n            defaultValue: 'SELECT',\n            description: 'Type of policy'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\rls-policy-generator.service.ts",
        "start": 103,
        "end": 132,
        "startLoc": {
          "line": 103,
          "column": 34,
          "position": 600
        },
        "endLoc": {
          "line": 132,
          "column": 17,
          "position": 773
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\rls-policy-generator.service.ts",
        "start": 33,
        "end": 62,
        "startLoc": {
          "line": 33,
          "column": 38,
          "position": 213
        },
        "endLoc": {
          "line": 62,
          "column": 55,
          "position": 386
        }
      }
    },
    {
      "format": "typescript",
      "lines": 39,
      "fragment": ",\n        variables: [\n          {\n            id: 'policy_name',\n            name: 'policy_name',\n            type: 'string',\n            required: true,\n            description: 'Name of the policy'\n          },\n          {\n            id: 'schema_name',\n            name: 'schema_name',\n            type: 'string',\n            required: true,\n            description: 'Database schema name'\n          },\n          {\n            id: 'table_name',\n            name: 'table_name',\n            type: 'string',\n            required: true,\n            description: 'Database table name'\n          },\n          {\n            id: 'policy_type',\n            name: 'policy_type',\n            type: 'string',\n            required: true,\n            defaultValue: 'SELECT',\n            description: 'Type of policy'\n          },\n          {\n            id: 'roles',\n            name: 'roles',\n            type: 'array',\n            required: true,\n            description: 'Roles that can access this policy'\n          }\n        ]",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\rls-policy-generator.service.ts",
        "start": 181,
        "end": 219,
        "startLoc": {
          "line": 181,
          "column": 59,
          "position": 1035
        },
        "endLoc": {
          "line": 219,
          "column": 2,
          "position": 1255
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\rls-policy-generator.service.ts",
        "start": 33,
        "end": 140,
        "startLoc": {
          "line": 33,
          "column": 38,
          "position": 213
        },
        "endLoc": {
          "line": 140,
          "column": 2,
          "position": 818
        }
      }
    },
    {
      "format": "typescript",
      "lines": 42,
      "fragment": ",\n        variables: [\n          {\n            id: 'policy_name',\n            name: 'policy_name',\n            type: 'string',\n            required: true,\n            description: 'Name of the policy'\n          },\n          {\n            id: 'schema_name',\n            name: 'schema_name',\n            type: 'string',\n            required: true,\n            description: 'Database schema name'\n          },\n          {\n            id: 'table_name',\n            name: 'table_name',\n            type: 'string',\n            required: true,\n            description: 'Database table name'\n          },\n          {\n            id: 'policy_type',\n            name: 'policy_type',\n            type: 'string',\n            required: true,\n            defaultValue: 'SELECT',\n            description: 'Type of policy'\n          },\n          {\n            id: 'roles',\n            name: 'roles',\n            type: 'array',\n            required: true,\n            description: 'Roles that can access this policy'\n          }\n        ],\n        examples: [\n          {\n            id: 'sensitivity_policy_example'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\rls-policy-generator.service.ts",
        "start": 251,
        "end": 292,
        "startLoc": {
          "line": 251,
          "column": 67,
          "position": 1422
        },
        "endLoc": {
          "line": 292,
          "column": 29,
          "position": 1658
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\rls-policy-generator.service.ts",
        "start": 33,
        "end": 222,
        "startLoc": {
          "line": 33,
          "column": 38,
          "position": 213
        },
        "endLoc": {
          "line": 222,
          "column": 21,
          "position": 1271
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "} = data;\n\n    if (!this.rooms.has(roomId)) {\n      this.sendToConnection(connectionId, {\n        type: 'error',\n        message: 'Room not found',\n        roomId\n      });\n      return;\n    }\n\n    const room = this.rooms.get(roomId)!;\n    this",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\real-time-collaboration.ts",
        "start": 417,
        "end": 429,
        "startLoc": {
          "line": 417,
          "column": 2,
          "position": 3749
        },
        "endLoc": {
          "line": 429,
          "column": 5,
          "position": 3833
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\real-time-collaboration.ts",
        "start": 245,
        "end": 258,
        "startLoc": {
          "line": 245,
          "column": 2,
          "position": 2390
        },
        "endLoc": {
          "line": 258,
          "column": 26,
          "position": 2475
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ");\n  }\n\n  // Create permission\n  async createPermission(permission: Omit<Permission, 'id'>): Promise<string> {\n    const id = `perm_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    const newPermission: Permission = {\n      ...permission,\n      id\n    };\n\n    this.permissions.set(id, newPermission);\n    \n    structuredLogger",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\rbac-granular.ts",
        "start": 117,
        "end": 130,
        "startLoc": {
          "line": 117,
          "column": 10,
          "position": 941
        },
        "endLoc": {
          "line": 130,
          "column": 17,
          "position": 1057
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\rbac-simple.ts",
        "start": 73,
        "end": 81,
        "startLoc": {
          "line": 73,
          "column": 10,
          "position": 725
        },
        "endLoc": {
          "line": 81,
          "column": 7,
          "position": 835
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ");\n  }\n\n  // Get all permissions\n  async getAllPermissions(): Promise<Permission[]> {\n    return Array.from(this.permissions.values());\n  }\n\n  // Get all roles\n  async getAllRoles(): Promise<Role[]> {\n    return Array.from(this.roles.values());\n  }\n\n  // Get user roles",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\rbac-granular.ts",
        "start": 212,
        "end": 225,
        "startLoc": {
          "line": 212,
          "column": 2,
          "position": 1716
        },
        "endLoc": {
          "line": 225,
          "column": 18,
          "position": 1806
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\rbac-simple.ts",
        "start": 98,
        "end": 111,
        "startLoc": {
          "line": 98,
          "column": 14,
          "position": 1073
        },
        "endLoc": {
          "line": 111,
          "column": 26,
          "position": 1163
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ";\n  }\n\n  // Private helper methods\n  // Removed duplicate getUserRoles method (already defined above)\n\n  private getUserPermissionsFromRoles(userRoles: UserRole[]): Permission[] {\n    const permissions: Permission[] = [];\n    \n    for (const userRole of userRoles) {\n      const role = this.roles.get(userRole.roleId);\n      if (role) {\n        for (const permissionId of role.permissions) {\n          const permission = this.permissions.get(permissionId);\n          if (permission) {\n            permissions.push(permission);\n          }\n        }\n      }\n    }\n    \n    return permissions;\n  }\n\n  private evaluateConditions",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\rbac-granular.ts",
        "start": 251,
        "end": 275,
        "startLoc": {
          "line": 251,
          "column": 2,
          "position": 2130
        },
        "endLoc": {
          "line": 275,
          "column": 19,
          "position": 2303
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\rbac-simple.ts",
        "start": 108,
        "end": 132,
        "startLoc": {
          "line": 108,
          "column": 2,
          "position": 1156
        },
        "endLoc": {
          "line": 132,
          "column": 22,
          "position": 1329
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "getStats(): any {\n    return {\n      totalPermissions: this.permissions.size,\n      totalRoles: this.roles.size,\n      totalUserRoles: Array.from(this.userRoles.values()).flat().length,\n      lastUpdated: new Date().toISOString()\n    };\n  }\n}\n\nexport const granularRBAC",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\rbac-granular.ts",
        "start": 370,
        "end": 380,
        "startLoc": {
          "line": 370,
          "column": 3,
          "position": 3221
        },
        "endLoc": {
          "line": 380,
          "column": 13,
          "position": 3309
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\rbac-simple.ts",
        "start": 177,
        "end": 187,
        "startLoc": {
          "line": 177,
          "column": 3,
          "position": 1709
        },
        "endLoc": {
          "line": 187,
          "column": 11,
          "position": 1797
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "import { structuredLogger } from './structured-logger.js';\n\nexport interface Permission {\n  id: string;\n  name: string;\n  resource: string;\n  action: string;\n}\n\nexport interface Role {\n  id: string;\n  name: string;\n  description: string;\n  permissions: string[];\n}\n\nexport class",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\rbac-basic.ts",
        "start": 1,
        "end": 17,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 17,
          "column": 6,
          "position": 96
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\rbac-simple.ts",
        "start": 1,
        "end": 17,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 17,
          "column": 10,
          "position": 96
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "=> \n        permission.resource === resource && permission.action === action\n      );\n    } catch (error) {\n      structuredLogger.error('Error checking permission', error as Error);\n      return false;\n    }\n  }\n\n  // Check if user has role\n  async hasRole(userId: string, orgId: string, roleName: string): Promise<boolean> {\n    // For demo purposes, return true for admin users",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\rbac-basic.ts",
        "start": 41,
        "end": 52,
        "startLoc": {
          "line": 41,
          "column": 2,
          "position": 296
        },
        "endLoc": {
          "line": 52,
          "column": 50,
          "position": 397
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\rbac-simple.ts",
        "start": 44,
        "end": 55,
        "startLoc": {
          "line": 44,
          "column": 2,
          "position": 346
        },
        "endLoc": {
          "line": 55,
          "column": 6,
          "position": 447
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": ");\n  }\n\n  // Create permission\n  async createPermission(permission: Omit<Permission, 'id'>): Promise<string> {\n    const id = `perm_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    const newPermission: Permission = { ...permission, id };\n    this.permissions.set(id, newPermission);\n    return id;\n  }\n\n  // Create role\n  async createRole(role: Omit<Role, 'id'>): Promise<string> {\n    const id = `role_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    const newRole: Role = { ...role, id };\n    this.roles.set(id, newRole);\n    return id;\n  }\n\n  // Assign role to user\n  async assignRole(userId: string, roleId: string, orgId: string): Promise<void> {\n    // Simplified implementation - just log the assignment",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\rbac-basic.ts",
        "start": 81,
        "end": 102,
        "startLoc": {
          "line": 81,
          "column": 7,
          "position": 684
        },
        "endLoc": {
          "line": 102,
          "column": 55,
          "position": 950
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\rbac-simple.ts",
        "start": 73,
        "end": 94,
        "startLoc": {
          "line": 73,
          "column": 10,
          "position": 725
        },
        "endLoc": {
          "line": 94,
          "column": 6,
          "position": 991
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", { userId, roleId, orgId });\n  }\n\n  // Get all permissions\n  async getAllPermissions(): Promise<Permission[]> {\n    return Array.from(this.permissions.values());\n  }\n\n  // Get all roles\n  async getAllRoles(): Promise<Role[]> {\n    return Array.from(this.roles.values());\n  }\n\n  private",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\rbac-basic.ts",
        "start": 103,
        "end": 116,
        "startLoc": {
          "line": 103,
          "column": 16,
          "position": 958
        },
        "endLoc": {
          "line": 116,
          "column": 8,
          "position": 1061
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\rbac-granular.ts",
        "start": 208,
        "end": 111,
        "startLoc": {
          "line": 208,
          "column": 25,
          "position": 1699
        },
        "endLoc": {
          "line": 111,
          "column": 26,
          "position": 1163
        }
      }
    },
    {
      "format": "typescript",
      "lines": 41,
      "fragment": ";\n  }\n\n  private initializeDefaultData(): void {\n    // Create default permissions\n    const defaultPermissions = [\n      { name: 'analytics:read', resource: 'analytics', action: 'read' },\n      { name: 'analytics:write', resource: 'analytics', action: 'write' },\n      { name: 'security:read', resource: 'security', action: 'read' },\n      { name: 'security:write', resource: 'security', action: 'write' },\n      { name: 'finops:read', resource: 'finops', action: 'read' },\n      { name: 'finops:write', resource: 'finops', action: 'write' },\n      { name: 'admin:all', resource: '*', action: '*' }\n    ];\n\n    defaultPermissions.forEach(permission => {\n      this.createPermission(permission);\n    });\n\n    // Create default roles\n    const defaultRoles = [\n      {\n        name: 'admin',\n        description: 'System administrator',\n        permissions: ['admin:all']\n      },\n      {\n        name: 'analyst',\n        description: 'Data analyst',\n        permissions: ['analytics:read']\n      },\n      {\n        name: 'security_officer',\n        description: 'Security officer',\n        permissions: ['security:read', 'security:write']\n      },\n      {\n        name: 'finance_manager',\n        description: 'Finance manager',\n        permissions: ['finops:read', 'finops:write']\n      },",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\rbac-basic.ts",
        "start": 113,
        "end": 153,
        "startLoc": {
          "line": 113,
          "column": 2,
          "position": 1054
        },
        "endLoc": {
          "line": 153,
          "column": 2,
          "position": 1407
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\rbac-simple.ts",
        "start": 129,
        "end": 170,
        "startLoc": {
          "line": 129,
          "column": 12,
          "position": 1320
        },
        "endLoc": {
          "line": 170,
          "column": 2,
          "position": 1675
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "public async optimizeQuery(\n    query: string,\n    params: any[] = []\n  ): Promise<QueryOptimization> {\n    const startTime = Date.now();\n    \n    try {\n      // Verificar caché de consultas\n      const cacheKey = this.generateQueryCacheKey(query, params);\n      const cachedResult = this.queryCache.get(cacheKey);\n      \n      if (cachedResult && this.isQueryCacheValid(cachedResult)) {\n        return {",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\performance-optimizer.service.ts",
        "start": 191,
        "end": 203,
        "startLoc": {
          "line": 191,
          "column": 3,
          "position": 1303
        },
        "endLoc": {
          "line": 203,
          "column": 2,
          "position": 1423
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\db\\optimization\\database-optimizer.service.ts",
        "start": 407,
        "end": 416,
        "startLoc": {
          "line": 407,
          "column": 3,
          "position": 2578
        },
        "endLoc": {
          "line": 416,
          "column": 13,
          "position": 2693
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "time: executionTime,\n      timestamp: Date.now()\n    });\n\n    // Mantener solo las últimas 100 consultas lentas\n    if (this.slowQueries.length > 100) {\n      this.slowQueries = this.slowQueries.slice(-100);\n    }\n\n    structuredLogger.warn('Slow query detected', {\n      query: query.substring(0, 200),\n      executionTime,\n      threshold: this.config.queryOptimization",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\performance-optimizer.service.ts",
        "start": 401,
        "end": 413,
        "startLoc": {
          "line": 401,
          "column": 7,
          "position": 2906
        },
        "endLoc": {
          "line": 413,
          "column": 18,
          "position": 3007
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\db\\optimization\\database-optimizer.service.ts",
        "start": 715,
        "end": 727,
        "startLoc": {
          "line": 715,
          "column": 7,
          "position": 5220
        },
        "endLoc": {
          "line": 727,
          "column": 19,
          "position": 5321
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "let cleanedCount = 0;\n\n    for (const [key, value] of this.queryCache.entries()) {\n      if (!this.isQueryCacheValid(value)) {\n        this.queryCache.delete(key);\n        cleanedCount++;\n      }\n    }\n\n    if (cleanedCount > 0) {\n      structuredLogger.debug('Cache cleanup completed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\performance-optimizer.service.ts",
        "start": 489,
        "end": 499,
        "startLoc": {
          "line": 489,
          "column": 5,
          "position": 3482
        },
        "endLoc": {
          "line": 499,
          "column": 26,
          "position": 3574
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\db\\optimization\\database-optimizer.service.ts",
        "start": 769,
        "end": 779,
        "startLoc": {
          "line": 769,
          "column": 5,
          "position": 5622
        },
        "endLoc": {
          "line": 779,
          "column": 32,
          "position": 5714
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "private analyzeSlowQueries(): void {\n    if (this.slowQueries.length === 0) return;\n\n    const recentSlowQueries = this.slowQueries.filter(\n      q => (Date.now() - q.timestamp) < 3600000 // Última hora\n    );\n\n    if (recentSlowQueries.length > 10) {\n      structuredLogger.warn('High number of slow queries detected', {\n        count: recentSlowQueries.length,\n        threshold: 10\n      });\n    }\n  }\n\n  /**\n   * Optimiza uso de memoria\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\performance-optimizer.service.ts",
        "start": 506,
        "end": 523,
        "startLoc": {
          "line": 506,
          "column": 3,
          "position": 3596
        },
        "endLoc": {
          "line": 523,
          "column": 6,
          "position": 3723
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\db\\optimization\\database-optimizer.service.ts",
        "start": 783,
        "end": 800,
        "startLoc": {
          "line": 783,
          "column": 3,
          "position": 5733
        },
        "endLoc": {
          "line": 800,
          "column": 6,
          "position": 5860
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "],\n        availability: [\n          { dayOfWeek: 0, startTime: '00:00', endTime: '23:59', timezone: 'UTC' },\n          { dayOfWeek: 1, startTime: '00:00', endTime: '23:59', timezone: 'UTC' },\n          { dayOfWeek: 2, startTime: '00:00', endTime: '23:59', timezone: 'UTC' },\n          { dayOfWeek: 3, startTime: '00:00', endTime: '23:59', timezone: 'UTC' },\n          { dayOfWeek: 4, startTime: '00:00', endTime: '23:59', timezone: 'UTC' },\n          { dayOfWeek: 5, startTime: '00:00', endTime: '23:59', timezone: 'UTC' },\n          { dayOfWeek: 6, startTime: '00:00', endTime: '23:59', timezone: 'UTC' }\n        ]\n      }\n    ]",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\oncall.service.ts",
        "start": 336,
        "end": 347,
        "startLoc": {
          "line": 336,
          "column": 26,
          "position": 2736
        },
        "endLoc": {
          "line": 347,
          "column": 2,
          "position": 2954
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\oncall.service.ts",
        "start": 319,
        "end": 329,
        "startLoc": {
          "line": 319,
          "column": 24,
          "position": 2471
        },
        "endLoc": {
          "line": 329,
          "column": 2,
          "position": 2687
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ") {\n      if (!rule.enabled) continue;\n\n      try {\n        const shouldTrigger = await this.evaluateRule(rule);\n        \n        if (shouldTrigger) {\n          await this.triggerAlert(rule);\n        } else {\n          await this.resolveAlert(ruleId);\n        }\n      } catch (error) {\n        structuredLogger",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\monitoring-alerts.service.ts",
        "start": 336,
        "end": 348,
        "startLoc": {
          "line": 336,
          "column": 2,
          "position": 2485
        },
        "endLoc": {
          "line": 348,
          "column": 17,
          "position": 2580
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\infrastructure\\observability\\alerting.service.ts",
        "start": 319,
        "end": 331,
        "startLoc": {
          "line": 319,
          "column": 11,
          "position": 2515
        },
        "endLoc": {
          "line": 331,
          "column": 5,
          "position": 2610
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "): boolean {\n    switch (condition.operator) {\n      case 'gt':\n        return value > condition.threshold;\n      case 'lt':\n        return value < condition.threshold;\n      case 'eq':\n        return value === condition.threshold;\n      case 'gte':\n        return value >= condition.threshold;\n      case 'lte':\n        return value <= condition.threshold;\n      case",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\monitoring-alerts.service.ts",
        "start": 395,
        "end": 407,
        "startLoc": {
          "line": 395,
          "column": 15,
          "position": 3069
        },
        "endLoc": {
          "line": 407,
          "column": 5,
          "position": 3178
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\ai-performance-optimization.service.ts",
        "start": 542,
        "end": 549,
        "startLoc": {
          "line": 542,
          "column": 7,
          "position": 4429
        },
        "endLoc": {
          "line": 549,
          "column": 8,
          "position": 4533
        }
      }
    },
    {
      "format": "typescript",
      "lines": 44,
      "fragment": "private metricsInitialized: boolean = false;\n\n  constructor() {\n    this.initializeMetrics();\n  }\n\n  private initializeMetrics(): void {\n    if (this.metricsInitialized) return;\n\n    // Initialize default metrics\n    collectDefaultMetrics({ register });\n\n    // Health check metrics\n    this.healthCheckCounter = new Counter({\n      name: 'health_check_total',\n      help: 'Total number of health checks',\n      labelNames: ['type', 'status'],\n      registers: [register]\n    });\n\n    this.healthCheckDuration = new Histogram({\n      name: 'health_check_duration_seconds',\n      help: 'Health check duration in seconds',\n      labelNames: ['type', 'status'],\n      buckets: [0.1, 0.5, 1, 2, 5],\n      registers: [register]\n    });\n\n    this.metricsInitialized = true;\n  }\n\n  incrementHealthCheck(type: string, status: string = 'success'): void {\n    this.healthCheckCounter.labels(type, status).inc();\n  }\n\n  recordHealthCheckDuration(type: string, durationMs: number, status: string = 'success'): void {\n    this.healthCheckDuration.labels(type, status).observe(durationMs / 1000);\n  }\n\n  async getMetrics(): Promise<string> {\n    return register.metrics();\n  }\n\n  async",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\metrics.new.ts",
        "start": 6,
        "end": 49,
        "startLoc": {
          "line": 6,
          "column": 3,
          "position": 52
        },
        "endLoc": {
          "line": 49,
          "column": 6,
          "position": 401
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\metrics.ts",
        "start": 8,
        "end": 51,
        "startLoc": {
          "line": 8,
          "column": 3,
          "position": 58
        },
        "endLoc": {
          "line": 51,
          "column": 63,
          "position": 407
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "{\n      total: this.config.maxMemoryMB,\n      used: Math.round(memUsage.rss / 1024 / 1024),\n      free: this.config.maxMemoryMB - Math.round(memUsage.rss / 1024 / 1024),\n      heap: {\n        total: Math.round(memUsage.heapTotal / 1024 / 1024),\n        used: Math.round(memUsage.heapUsed / 1024 / 1024),\n        free: Math.round((memUsage.heapTotal - memUsage.heapUsed) / 1024 / 1024),\n        external: Math.round(memUsage.external / 1024 / 1024),\n        arrayBuffers: Math.round(memUsage.arrayBuffers / 1024 / 1024)\n      },\n      rss: Math.round(memUsage.rss / 1024 / 1024),\n      external: Math.round(memUsage.external / 1024 / 1024),\n      arrayBuffers: Math.round(memUsage.arrayBuffers / 1024 / 1024),\n      gc: {\n        major: this",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\memory-manager.service.ts",
        "start": 234,
        "end": 249,
        "startLoc": {
          "line": 234,
          "column": 2,
          "position": 1771
        },
        "endLoc": {
          "line": 249,
          "column": 5,
          "position": 2039
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\memory-manager.service.ts",
        "start": 129,
        "end": 144,
        "startLoc": {
          "line": 129,
          "column": 2,
          "position": 891
        },
        "endLoc": {
          "line": 144,
          "column": 2,
          "position": 1159
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ";\n  }\n\n  deleteRule(ruleId: string): boolean {\n    const ruleIndex = this.rules.findIndex(rule => rule.id === ruleId);\n    if (ruleIndex === -1) return false;\n\n    this.rules.splice(ruleIndex, 1);\n    return true;\n  }\n\n  getRules",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\matching-engine.service.ts",
        "start": 199,
        "end": 210,
        "startLoc": {
          "line": 199,
          "column": 5,
          "position": 1782
        },
        "endLoc": {
          "line": 210,
          "column": 9,
          "position": 1872
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\rule-engine.service.ts",
        "start": 156,
        "end": 167,
        "startLoc": {
          "line": 156,
          "column": 2,
          "position": 1124
        },
        "endLoc": {
          "line": 167,
          "column": 8,
          "position": 1214
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "= {\n      id: `report_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`,\n      organizationId,\n      reportType: reportType as any,\n      period: { startDate, endDate },\n      summary,\n      data,\n      generatedBy,\n      createdAt: new Date().toISOString()\n    };\n\n    structuredLogger.info('Inventory report generated'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\inventory-kardex.service.ts",
        "start": 878,
        "end": 889,
        "startLoc": {
          "line": 878,
          "column": 2,
          "position": 8072
        },
        "endLoc": {
          "line": 889,
          "column": 29,
          "position": 8177
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\supplier-scorecard.service.ts",
        "start": 796,
        "end": 807,
        "startLoc": {
          "line": 796,
          "column": 2,
          "position": 7290
        },
        "endLoc": {
          "line": 807,
          "column": 28,
          "position": 7395
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ".isActive === filters.isActive);\n    }\n\n    if (filters.limit) {\n      insights = insights.slice(0, filters.limit);\n    }\n\n    return insights.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime());\n  }\n\n  // Reports",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\interactions-sas-av.service.ts",
        "start": 868,
        "end": 878,
        "startLoc": {
          "line": 868,
          "column": 3,
          "position": 7865
        },
        "endLoc": {
          "line": 878,
          "column": 11,
          "position": 7964
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\interactions-sas-av.service.ts",
        "start": 840,
        "end": 850,
        "startLoc": {
          "line": 840,
          "column": 3,
          "position": 7552
        },
        "endLoc": {
          "line": 850,
          "column": 6,
          "position": 7651
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "= {\n      id: `report_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`,\n      organizationId,\n      reportType: reportType as any,\n      period: { startDate, endDate },\n      summary,\n      data,\n      generatedBy,\n      createdAt: new Date().toISOString()\n    };\n\n    structuredLogger.info('Interaction report generated'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\interactions-sas-av.service.ts",
        "start": 939,
        "end": 950,
        "startLoc": {
          "line": 939,
          "column": 2,
          "position": 8683
        },
        "endLoc": {
          "line": 950,
          "column": 31,
          "position": 8788
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\supplier-scorecard.service.ts",
        "start": 796,
        "end": 807,
        "startLoc": {
          "line": 796,
          "column": 2,
          "position": 7290
        },
        "endLoc": {
          "line": 807,
          "column": 28,
          "position": 7395
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ",\n          period: 'monthly',\n          trend: 'increasing',\n          changePercentage: Math.random() * 20 - 10,\n          confidence: 0.8 + Math.random() * 0.2,\n          forecast: [],\n          seasonality: {\n            hasSeasonality: false,\n            period: 0,\n            strength: 0,\n            pattern: []\n          },\n          anomalies: [],\n          organizationId: 'sample'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\intelligent-reporting.service.ts",
        "start": 536,
        "end": 549,
        "startLoc": {
          "line": 536,
          "column": 3,
          "position": 4765
        },
        "endLoc": {
          "line": 549,
          "column": 9,
          "position": 4877
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\intelligent-reporting.service.ts",
        "start": 205,
        "end": 218,
        "startLoc": {
          "line": 205,
          "column": 9,
          "position": 1684
        },
        "endLoc": {
          "line": 218,
          "column": 7,
          "position": 1796
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ") {\n            updated++;\n          } else {\n            failed++;\n            errors.push(`Deal ${update.id} not found or access denied`);\n          }\n        } catch (error) {\n          failed++;\n          errors.push(`Failed to update deal ${update.id}: ${(error as Error).message}`);\n        }\n      }\n\n      logger",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\deals.service.ts",
        "start": 649,
        "end": 661,
        "startLoc": {
          "line": 649,
          "column": 7,
          "position": 6496
        },
        "endLoc": {
          "line": 661,
          "column": 7,
          "position": 6584
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\deals.ts",
        "start": 625,
        "end": 637,
        "startLoc": {
          "line": 625,
          "column": 12,
          "position": 5490
        },
        "endLoc": {
          "line": 637,
          "column": 4,
          "position": 5578
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "${update.id}: ${(error as Error).message}`);\n        }\n      }\n\n      logger.info('Bulk update completed', {\n        orgId,\n        userId,\n        updated,\n        failed,\n        total: updates.length\n      });\n\n      return { updated, failed, errors };\n    } catch (error) {\n      logger.error('Failed to bulk update deals'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\deals.service.ts",
        "start": 657,
        "end": 671,
        "startLoc": {
          "line": 657,
          "column": 24,
          "position": 6557
        },
        "endLoc": {
          "line": 671,
          "column": 30,
          "position": 6655
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\interactions.service.ts",
        "start": 605,
        "end": 619,
        "startLoc": {
          "line": 605,
          "column": 31,
          "position": 6172
        },
        "endLoc": {
          "line": 619,
          "column": 37,
          "position": 6270
        }
      }
    },
    {
      "format": "typescript",
      "lines": 27,
      "fragment": "config = {\n      enabled: true,\n      modelVersion: 'v1.0',\n      confidenceThreshold: 0.7,\n      maxRecommendations: 5,\n      expirationHours: 24,\n      factors: {\n        dealValue: 0.15,\n        stage: 0.20,\n        timeInStage: 0.10,\n        ownerExperience: 0.12,\n        companySize: 0.08,\n        industry: 0.10,\n        seasonality: 0.05,\n        competitorActivity: 0.08,\n        lastActivity: 0.07,\n        marketConditions: 0.05\n      },\n      actions: {\n        call: { enabled: true, weight: 0.25 },\n        email: { enabled: true, weight: 0.20 },\n        meeting: { enabled: true, weight: 0.20 },\n        proposal: { enabled: true, weight: 0.15 },\n        follow_up: { enabled: true, weight: 0.10 },\n        negotiation: { enabled: true, weight: 0.05 },\n        close: { enabled: true, weight: 0.05 }\n      },",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\deals-nba.service.ts",
        "start": 112,
        "end": 138,
        "startLoc": {
          "line": 112,
          "column": 2,
          "position": 897
        },
        "endLoc": {
          "line": 138,
          "column": 2,
          "position": 1164
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\deals-nba.ts",
        "start": 327,
        "end": 354,
        "startLoc": {
          "line": 327,
          "column": 2,
          "position": 2654
        },
        "endLoc": {
          "line": 354,
          "column": 2,
          "position": 2923
        }
      }
    },
    {
      "format": "typescript",
      "lines": 31,
      "fragment": "const CreateDashboardSchema = z.object({\n  name: z.string().min(1).max(100),\n  description: z.string().max(500).optional(),\n  layout: z.object({\n    columns: z.number().min(1).max(12).default(4),\n    rows: z.number().min(1).max(20).default(10),\n    responsive: z.boolean().default(true),\n    theme: z.enum(['light', 'dark', 'auto']).default('auto')\n  }),\n  filters: z.array(z.object({\n    field: z.string(),\n    label: z.string(),\n    type: z.enum(['select', 'multiselect', 'date', 'daterange', 'number', 'text']),\n    options: z.array(z.string()).optional(),\n    defaultValue: z.any().optional(),\n    isRequired: z.boolean().default(false),\n    validation: z.object({\n      min: z.number().optional(),\n      max: z.number().optional(),\n      pattern: z.string().optional()\n    }).optional()\n  })).default([]),\n  permissions: z.object({\n    isPublic: z.boolean().default(false),\n    allowedUsers: z.array(z.string()).default([]),\n    allowedRoles: z.array(z.string()).default([])\n  }),\n  tags: z.array(z.string()).default([])\n});\n\nconst CreateWidgetSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\data-analytics-dashboard.service.ts",
        "start": 190,
        "end": 220,
        "startLoc": {
          "line": 190,
          "column": 1,
          "position": 1356
        },
        "endLoc": {
          "line": 220,
          "column": 19,
          "position": 1808
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\data-analytics-dashboard.ts",
        "start": 16,
        "end": 46,
        "startLoc": {
          "line": 16,
          "column": 5,
          "position": 123
        },
        "endLoc": {
          "line": 46,
          "column": 14,
          "position": 577
        }
      }
    },
    {
      "format": "typescript",
      "lines": 31,
      "fragment": ";\n\nconst CreateWidgetSchema = z.object({\n  type: z.enum(['chart', 'metric', 'table', 'gauge', 'map', 'heatmap', 'trend']),\n  title: z.string().min(1).max(100),\n  description: z.string().max(500).optional(),\n  dataSource: z.string(),\n  configuration: z.object({\n    chartType: z.enum(['line', 'bar', 'pie', 'area', 'scatter', 'doughnut']).optional(),\n    metrics: z.array(z.string()),\n    dimensions: z.array(z.string()).optional(),\n    filters: z.record(z.any()).optional(),\n    timeRange: z.string().optional(),\n    refreshInterval: z.number().optional(),\n    colors: z.array(z.string()).optional(),\n    showLegend: z.boolean().optional(),\n    showDataLabels: z.boolean().optional(),\n    yAxisLabel: z.string().optional(),\n    xAxisLabel: z.string().optional()\n  }),\n  position: z.object({\n    x: z.number().min(0),\n    y: z.number().min(0),\n    width: z.number().min(1).max(12),\n    height: z.number().min(1).max(20)\n  }),\n  isVisible: z.boolean().default(true),\n  isEditable: z.boolean().default(true)\n});\n\nconst CreateAlertSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\data-analytics-dashboard.service.ts",
        "start": 218,
        "end": 248,
        "startLoc": {
          "line": 218,
          "column": 2,
          "position": 1803
        },
        "endLoc": {
          "line": 248,
          "column": 18,
          "position": 2241
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\data-analytics-dashboard.ts",
        "start": 200,
        "end": 229,
        "startLoc": {
          "line": 200,
          "column": 3,
          "position": 1842
        },
        "endLoc": {
          "line": 229,
          "column": 11,
          "position": 2282
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ";\n\nconst CreateAlertSchema = z.object({\n  name: z.string().min(1).max(100),\n  description: z.string().max(500).optional(),\n  metric: z.string(),\n  condition: z.object({\n    operator: z.enum(['greater_than', 'less_than', 'equals', 'not_equals', 'contains']),\n    value: z.union([z.number(), z.string()]),\n    threshold: z.number()\n  }),\n  severity: z.enum(['low', 'medium', 'high', 'critical']),\n  recipients: z.array(z.string())\n});\n\n// ============================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\data-analytics-dashboard.service.ts",
        "start": 246,
        "end": 261,
        "startLoc": {
          "line": 246,
          "column": 2,
          "position": 2236
        },
        "endLoc": {
          "line": 261,
          "column": 80,
          "position": 2422
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\data-analytics-dashboard.ts",
        "start": 507,
        "end": 521,
        "startLoc": {
          "line": 507,
          "column": 11,
          "position": 4563
        },
        "endLoc": {
          "line": 521,
          "column": 6,
          "position": 4751
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "= z.object({\n  'csp-report': z.object({\n    'document-uri': z.string(),\n    'referrer': z.string().optional(),\n    'violated-directive': z.string(),\n    'effective-directive': z.string().optional(),\n    'original-policy': z.string(),\n    'disposition': z.enum(['enforce', 'report']),\n    'blocked-uri': z.string().optional(),\n    'line-number': z.number().optional(),\n    'column-number': z.number().optional(),\n    'source-file': z.string().optional(),\n    'status-code': z.number().optional(),\n    'script-sample': z.string().optional(),\n  })\n});\n\nconst",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\csp-sri-banking.service.ts",
        "start": 5,
        "end": 22,
        "startLoc": {
          "line": 5,
          "column": 2,
          "position": 33
        },
        "endLoc": {
          "line": 22,
          "column": 6,
          "position": 230
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\csp-sri-banking.ts",
        "start": 9,
        "end": 26,
        "startLoc": {
          "line": 9,
          "column": 2,
          "position": 77
        },
        "endLoc": {
          "line": 26,
          "column": 42,
          "position": 274
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "= z.object({\n  'sri-report': z.object({\n    'document-uri': z.string(),\n    'referrer': z.string().optional(),\n    'blocked-uri': z.string(),\n    'violation-type': z.enum(['integrity-mismatch', 'missing-integrity', 'invalid-integrity']),\n    'expected-hash': z.string().optional(),\n    'actual-hash': z.string().optional(),\n    'algorithm': z.enum(['sha256', 'sha384', 'sha512']).optional(),\n  })\n});\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\csp-sri-banking.service.ts",
        "start": 22,
        "end": 34,
        "startLoc": {
          "line": 22,
          "column": 2,
          "position": 234
        },
        "endLoc": {
          "line": 34,
          "column": 7,
          "position": 372
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\csp-sri-banking.ts",
        "start": 27,
        "end": 39,
        "startLoc": {
          "line": 27,
          "column": 2,
          "position": 280
        },
        "endLoc": {
          "line": 39,
          "column": 35,
          "position": 418
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ") {\n      if (contacts.length > 1) {\n        for (let i = 0; i < contacts.length; i++) {\n          for (let j = i + 1; j < contacts.length; j++) {\n            const contact1 = contacts[i];\n            const contact2 = contacts[j];\n\n            duplicates.push({\n              contactId: contact1.id,\n              duplicateId: contact2.id,\n              confidence: 0.9",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\contacts-dedupe.service.ts",
        "start": 249,
        "end": 259,
        "startLoc": {
          "line": 249,
          "column": 9,
          "position": 1980
        },
        "endLoc": {
          "line": 259,
          "column": 4,
          "position": 2115
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\contacts-dedupe.service.ts",
        "start": 210,
        "end": 220,
        "startLoc": {
          "line": 210,
          "column": 9,
          "position": 1602
        },
        "endLoc": {
          "line": 220,
          "column": 5,
          "position": 1737
        }
      }
    },
    {
      "format": "typescript",
      "lines": 27,
      "fragment": "),\n  context: z.record(z.any()).optional(),\n  metadata: z.record(z.any()).optional(),\n  userId: z.string().optional(),\n  organizationId: z.string().optional(),\n  requestId: z.string().optional(),\n  sessionId: z.string().optional(),\n  correlationId: z.string().optional(),\n  tags: z.array(z.string()).optional(),\n  source: z.string().optional(),\n  hostname: z.string().optional(),\n  pid: z.number().optional(),\n  version: z.string().optional()\n});\n\nconst LogQuerySchema = z.object({\n  level: z.enum(['DEBUG', 'INFO', 'WARN', 'ERROR', 'FATAL']).optional(),\n  service: z.string().optional(),\n  environment: z.string().optional(),\n  userId: z.string().optional(),\n  organizationId: z.string().optional(),\n  requestId: z.string().optional(),\n  sessionId: z.string().optional(),\n  correlationId: z.string().optional(),\n  tags: z.array(z.string()).optional(),\n  source: z.string().optional(),\n  startTime: z.coerce",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\centralized-logging.service.ts",
        "start": 37,
        "end": 63,
        "startLoc": {
          "line": 37,
          "column": 2,
          "position": 424
        },
        "endLoc": {
          "line": 63,
          "column": 7,
          "position": 814
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\centralized-logging.ts",
        "start": 41,
        "end": 67,
        "startLoc": {
          "line": 41,
          "column": 2,
          "position": 333
        },
        "endLoc": {
          "line": 67,
          "column": 7,
          "position": 723
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "().optional(),\n  message: z.string().optional(),\n  limit: z.number().min(1).max(10000).optional(),\n  offset: z.number().min(0).optional(),\n  sort: z.enum(['timestamp', 'level', 'service']).optional(),\n  order: z.enum(['asc', 'desc']).optional()\n});\n\nconst LogAggregationSchema = z.object({\n  groupBy: z.array(z.enum(['level', 'service', 'environment', 'userId', 'organizationId', 'source', 'tags'])),\n  timeRange: z.object({\n    start: z.coerce",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\centralized-logging.service.ts",
        "start": 64,
        "end": 75,
        "startLoc": {
          "line": 64,
          "column": 5,
          "position": 834
        },
        "endLoc": {
          "line": 75,
          "column": 7,
          "position": 1016
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\centralized-logging.ts",
        "start": 68,
        "end": 79,
        "startLoc": {
          "line": 68,
          "column": 7,
          "position": 739
        },
        "endLoc": {
          "line": 79,
          "column": 7,
          "position": 921
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ",\n          properties: {\n            service: logEntry.service,\n            environment: logEntry.environment,\n            userId: logEntry.userId,\n            organizationId: logEntry.organizationId,\n            requestId: logEntry.requestId,\n            correlationId: logEntry.correlationId,\n            ...logEntry.context,\n            ...logEntry.metadata\n          }\n        });\n      }\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\centralized-logging.service.ts",
        "start": 601,
        "end": 614,
        "startLoc": {
          "line": 601,
          "column": 6,
          "position": 6283
        },
        "endLoc": {
          "line": 614,
          "column": 2,
          "position": 6370
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\centralized-logging.service.ts",
        "start": 586,
        "end": 598,
        "startLoc": {
          "line": 586,
          "column": 2,
          "position": 6170
        },
        "endLoc": {
          "line": 598,
          "column": 5,
          "position": 6256
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "{\n        '@timestamp': logEntry.timestamp.toISOString(),\n        level: logEntry.level,\n        message: logEntry.message,\n        service: logEntry.service,\n        environment: logEntry.environment,\n        context: logEntry.context,\n        metadata: logEntry.metadata,\n        userId: logEntry.userId,\n        organizationId: logEntry.organizationId,\n        requestId: logEntry.requestId,\n        sessionId: logEntry.sessionId,\n        correlationId: logEntry.correlationId,\n        tags: logEntry.tags,\n        source: logEntry.source,\n        hostname: logEntry.hostname,\n        pid: logEntry.pid,\n        version: logEntry.version\n      })",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\centralized-logging.service.ts",
        "start": 657,
        "end": 675,
        "startLoc": {
          "line": 657,
          "column": 2,
          "position": 6798
        },
        "endLoc": {
          "line": 675,
          "column": 2,
          "position": 6958
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\centralized-logging.service.ts",
        "start": 623,
        "end": 642,
        "startLoc": {
          "line": 623,
          "column": 2,
          "position": 6475
        },
        "endLoc": {
          "line": 642,
          "column": 2,
          "position": 6637
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ".reduce((acc, log) => {\n        const existing = acc.find(item => item.message === log.message);\n        if (existing) {\n          existing.count++;\n        } else {\n          acc.push({ message: log.message, count: 1 });\n        }\n        return acc;\n      }, [] as Array<{ message: string; count: number }>)\n      .sort((a, b) => b.count - a.count)\n      .slice(0, 10);\n\n    const serviceBreakdown",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\centralized-logging.service.ts",
        "start": 799,
        "end": 811,
        "startLoc": {
          "line": 799,
          "column": 7,
          "position": 8441
        },
        "endLoc": {
          "line": 811,
          "column": 17,
          "position": 8605
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\centralized-logging.service.ts",
        "start": 741,
        "end": 753,
        "startLoc": {
          "line": 741,
          "column": 10,
          "position": 7695
        },
        "endLoc": {
          "line": 753,
          "column": 10,
          "position": 7859
        }
      }
    },
    {
      "format": "typescript",
      "lines": 35,
      "fragment": "name: z.string().min(1).max(100),\n  description: z.string().max(500).optional(),\n  type: z.enum(['database', 'files', 'configuration', 'full', 'incremental']),\n  source: z.object({\n    type: z.enum(['database', 'filesystem', 'api', 'config']),\n    path: z.string().optional(),\n    connectionString: z.string().optional(),\n    tables: z.array(z.string()).optional(),\n    includeData: z.boolean().default(true),\n    includeSchema: z.boolean().default(true)\n  }),\n  destination: z.object({\n    type: z.enum(['local', 'azure_blob', 's3', 'ftp', 'sftp']),\n    path: z.string(),\n    credentials: z.record(z.string(), z.string()).optional(),\n    compression: z.boolean().default(true),\n    encryption: z.boolean().default(true)\n  }),\n  schedule: z.object({\n    enabled: z.boolean().default(false),\n    cron: z.string().optional(),\n    timezone: z.string().default('UTC'),\n    retention: z.object({\n      days: z.number().min(1).max(365).default(30),\n      maxBackups: z.number().min(1).max(1000).default(100)\n    })\n  }),\n  filters: z.object({\n    include: z.array(z.string()).default([]),\n    exclude: z.array(z.string()).default([]),\n    maxFileSize: z.number().optional(),\n    fileTypes: z.array(z.string()).optional()\n  }).optional(),\n  isActive: z.boolean().default(true),\n  createdAt",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\backup-recovery.service.ts",
        "start": 10,
        "end": 44,
        "startLoc": {
          "line": 10,
          "column": 3,
          "position": 100
        },
        "endLoc": {
          "line": 44,
          "column": 10,
          "position": 636
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\backup-recovery.ts",
        "start": 10,
        "end": 44,
        "startLoc": {
          "line": 10,
          "column": 3,
          "position": 80
        },
        "endLoc": {
          "line": 44,
          "column": 10,
          "position": 616
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ": z.string(),\n  target: z.object({\n    type: z.enum(['database', 'filesystem', 'api']),\n    path: z.string().optional(),\n    connectionString: z.string().optional(),\n    tables: z.array(z.string()).optional()\n  }),\n  options: z.object({\n    overwrite: z.boolean().default(false),\n    verify: z.boolean().default(true),\n    restoreSchema: z.boolean().default(true),\n    restoreData: z.boolean().default(true)\n  }),\n  status",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\backup-recovery.service.ts",
        "start": 68,
        "end": 81,
        "startLoc": {
          "line": 68,
          "column": 9,
          "position": 975
        },
        "endLoc": {
          "line": 81,
          "column": 7,
          "position": 1147
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\backup-recovery.ts",
        "start": 92,
        "end": 105,
        "startLoc": {
          "line": 92,
          "column": 12,
          "position": 1298
        },
        "endLoc": {
          "line": 105,
          "column": 7,
          "position": 1470
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": ";\n\n    let data = mockData;\n    \n    // Aplicar compresión si está habilitada\n    if (config.destination.compression) {\n      data = this.compressData(data);\n    }\n\n    // Aplicar encriptación si está habilitada\n    if (config.destination.encryption) {\n      data = this.encryptData(data);\n    }\n\n    await fs.writeFile(backupPath, data);\n\n    return {\n      size: Buffer.byteLength(data),\n      filesCount,",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\backup-recovery.service.ts",
        "start": 586,
        "end": 604,
        "startLoc": {
          "line": 586,
          "column": 8,
          "position": 5397
        },
        "endLoc": {
          "line": 604,
          "column": 2,
          "position": 5512
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\backup-recovery.service.ts",
        "start": 530,
        "end": 548,
        "startLoc": {
          "line": 530,
          "column": 51,
          "position": 4964
        },
        "endLoc": {
          "line": 548,
          "column": 2,
          "position": 5079
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ";\n    \n    // Aplicar compresión si está habilitada\n    if (config.destination.compression) {\n      data = this.compressData(data);\n    }\n\n    // Aplicar encriptación si está habilitada\n    if (config.destination.encryption) {\n      data = this.encryptData(data);\n    }\n\n    await fs.writeFile(backupPath, data);\n\n    return {\n      size: Buffer.byteLength(data),\n      filesCount: 1,\n      metadata: {\n        backupPath,\n        environment",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\backup-recovery.service.ts",
        "start": 640,
        "end": 659,
        "startLoc": {
          "line": 640,
          "column": 2,
          "position": 5843
        },
        "endLoc": {
          "line": 659,
          "column": 12,
          "position": 5963
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\backup-recovery.service.ts",
        "start": 532,
        "end": 551,
        "startLoc": {
          "line": 532,
          "column": 9,
          "position": 4975
        },
        "endLoc": {
          "line": 551,
          "column": 7,
          "position": 5095
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "config = {\n      enabled: true,\n      retentionDays: 90,\n      undoWindowHours: 24,\n      maxUndoOperations: 1000,\n      autoExpire: true,\n      trackFields: ['name', 'email', 'phone', 'status', 'value', 'stage', 'priority', 'description'],\n      sensitiveFields: ['password', 'token', 'secret', 'key'],\n      excludeActions: ['view', 'list', 'search'],\n      includeMetadata: true,\n      compressionEnabled: true,",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\audit-trail-crm-undo.service.ts",
        "start": 96,
        "end": 106,
        "startLoc": {
          "line": 96,
          "column": 2,
          "position": 754
        },
        "endLoc": {
          "line": 106,
          "column": 2,
          "position": 870
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\audit-trail-crm-undo.ts",
        "start": 335,
        "end": 346,
        "startLoc": {
          "line": 335,
          "column": 2,
          "position": 3048
        },
        "endLoc": {
          "line": 346,
          "column": 2,
          "position": 3166
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ", // 100MB\n      allowedExtensions: ['.txt', '.pdf', '.doc', '.docx', '.xls', '.xlsx', '.jpg', '.png', '.gif'],\n      blockedExtensions: ['.exe', '.bat', '.cmd', '.scr', '.pif', '.com', '.vbs', '.js'],\n      quarantineRetentionDays: 30,\n      modules: {\n        file: true,\n        email: true,\n        api: true,\n        database: true,\n        cache: true,\n        queue: true\n      },\n      threatDatabase: {\n        enabled: true,\n        updateInterval: 24, // 24 horas",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\antivirus-global.service.ts",
        "start": 110,
        "end": 124,
        "startLoc": {
          "line": 110,
          "column": 5,
          "position": 892
        },
        "endLoc": {
          "line": 124,
          "column": 12,
          "position": 1037
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\antivirus-global.ts",
        "start": 440,
        "end": 455,
        "startLoc": {
          "line": 440,
          "column": 10,
          "position": 3748
        },
        "endLoc": {
          "line": 455,
          "column": 8,
          "position": 3894
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "};\n\n    const response = await fetch(config.url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        ...config.headers\n      },\n      body: JSON.stringify(payload)\n    });\n\n    if (!response.ok) {\n      throw new Error(`Webhook request failed with status ${response.status}`);\n    }\n  }\n\n  /**\n   * Send email alert\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\alerting-system.ts",
        "start": 338,
        "end": 356,
        "startLoc": {
          "line": 338,
          "column": 5,
          "position": 2572
        },
        "endLoc": {
          "line": 356,
          "column": 6,
          "position": 2678
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\alerting-system.ts",
        "start": 307,
        "end": 325,
        "startLoc": {
          "line": 307,
          "column": 5,
          "position": 2334
        },
        "endLoc": {
          "line": 325,
          "column": 6,
          "position": 2440
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "}]\n    };\n\n    const response = await fetch(config.webhookUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload)\n    });\n\n    if (!response.ok) {\n      throw new Error(`Slack request failed with status ${response.status}`);\n    }\n  }\n\n  /**\n   * Get severity color for Slack\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\alerting-system.ts",
        "start": 447,
        "end": 465,
        "startLoc": {
          "line": 447,
          "column": 7,
          "position": 3405
        },
        "endLoc": {
          "line": 465,
          "column": 6,
          "position": 3508
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\alerting-system.ts",
        "start": 405,
        "end": 423,
        "startLoc": {
          "line": 405,
          "column": 7,
          "position": 3081
        },
        "endLoc": {
          "line": 423,
          "column": 6,
          "position": 3184
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "{\n        id: dbTask.id,\n        agentId: dbTask.agentId,\n        inputs: JSON.parse(dbTask.inputs),\n        context: JSON.parse(dbTask.context),\n        status: dbTask.status as any,\n        priority: dbTask.priority as any,\n        retryCount: dbTask.retryCount,\n        maxRetries: dbTask.maxRetries,\n        timeoutMs: dbTask.timeoutMs,\n        dependencies: dbTask.dependencies ? JSON.parse(dbTask.dependencies) : undefined,\n        outputs: dbTask.outputs ? JSON.parse(dbTask.outputs) : undefined,\n        error: dbTask.error || undefined,\n        costEur: dbTask.costEur || undefined,\n        executionTimeMs: dbTask.executionTimeMs || undefined,\n        createdAt: dbTask.createdAt,\n        updatedAt: dbTask.updatedAt\n      };\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\agent-runtime.service.ts",
        "start": 702,
        "end": 720,
        "startLoc": {
          "line": 702,
          "column": 2,
          "position": 5849
        },
        "endLoc": {
          "line": 720,
          "column": 2,
          "position": 6059
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\agent-runtime.service.ts",
        "start": 602,
        "end": 621,
        "startLoc": {
          "line": 602,
          "column": 2,
          "position": 4921
        },
        "endLoc": {
          "line": 621,
          "column": 5,
          "position": 5132
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", {\n        error: (error as Error).message\n      });\n    }\n  }\n\n  private async getCPUUsage(): Promise<number> {\n    const startUsage = process.cpuUsage();\n    await new Promise(resolve => setTimeout(resolve, 100));\n    const endUsage = process.cpuUsage(startUsage);\n    \n    const totalUsage = (endUsage.user + endUsage.system) / 1000000;\n    return",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\advanced-monitoring-alerts.service.ts",
        "start": 401,
        "end": 413,
        "startLoc": {
          "line": 401,
          "column": 28,
          "position": 3100
        },
        "endLoc": {
          "line": 413,
          "column": 7,
          "position": 3224
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\performance-optimizer-v3.service.ts",
        "start": 193,
        "end": 204,
        "startLoc": {
          "line": 193,
          "column": 40,
          "position": 1430
        },
        "endLoc": {
          "line": 204,
          "column": 22,
          "position": 1553
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "operator) {\n      case 'gt': return value > threshold;\n      case 'lt': return value < threshold;\n      case 'gte': return value >= threshold;\n      case 'lte': return value <= threshold;\n      case 'eq': return value === threshold;\n      case 'ne': return value !== threshold;\n      default: return false;\n    }\n  }\n\n  // ===== GESTIÓN DE ALERTAS =====",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\advanced-metrics-alerts.service.ts",
        "start": 484,
        "end": 495,
        "startLoc": {
          "line": 484,
          "column": 2,
          "position": 5325
        },
        "endLoc": {
          "line": 495,
          "column": 34,
          "position": 5437
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\alerts.ts",
        "start": 248,
        "end": 259,
        "startLoc": {
          "line": 248,
          "column": 2,
          "position": 2025
        },
        "endLoc": {
          "line": 259,
          "column": 8,
          "position": 2137
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": "name: z.string().min(1).max(100),\n  description: z.string().max(500).optional(),\n  category: z.enum(['system', 'feature', 'integration', 'security', 'performance', 'monitoring']),\n  type: z.enum(['string', 'number', 'boolean', 'object', 'array', 'json']),\n  value: z.any(),\n  defaultValue: z.any(),\n  environment: z.enum(['development', 'staging', 'production', 'all']),\n  isSecret: z.boolean().default(false),\n  isRequired: z.boolean().default(false),\n  validation: z.object({\n    min: z.number().optional(),\n    max: z.number().optional(),\n    pattern: z.string().optional(),\n    enum: z.array(z.any()).optional(),\n    custom: z.string().optional()\n  }).optional(),\n  dependencies: z.array(z.string()).default([]),\n  tags: z.array(z.string()).default([]),\n  version: z.string().default('1.0.0'),\n  isActive: z.boolean().default(true),\n  createdAt",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\advanced-configuration-management.service.ts",
        "start": 7,
        "end": 27,
        "startLoc": {
          "line": 7,
          "column": 3,
          "position": 63
        },
        "endLoc": {
          "line": 27,
          "column": 10,
          "position": 413
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\advanced-configuration-management.ts",
        "start": 10,
        "end": 30,
        "startLoc": {
          "line": 10,
          "column": 3,
          "position": 80
        },
        "endLoc": {
          "line": 30,
          "column": 10,
          "position": 430
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "= z.object({\n  id: z.string().uuid().optional(),\n  name: z.string().min(1).max(100),\n  description: z.string().max(500).optional(),\n  category: z.enum(['system', 'feature', 'integration', 'security', 'performance', 'monitoring']),\n  template: z.record(z.string(), z.any()),\n  variables: z.array(z.object({\n    name: z.string(),\n    type: z.enum(['string', 'number', 'boolean', 'object', 'array']),\n    required: z.boolean().default(false),\n    defaultValue: z.any().optional(),\n    description: z.string().optional()\n  })).default([]),\n  isActive: z.boolean().default(true),",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\advanced-configuration-management.service.ts",
        "start": 33,
        "end": 46,
        "startLoc": {
          "line": 33,
          "column": 2,
          "position": 482
        },
        "endLoc": {
          "line": 46,
          "column": 2,
          "position": 724
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\configuration.service.ts",
        "start": 4,
        "end": 72,
        "startLoc": {
          "line": 4,
          "column": 2,
          "position": 22
        },
        "endLoc": {
          "line": 72,
          "column": 2,
          "position": 1103
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "deploymentStrategy: z.enum(['immediate', 'gradual', 'canary', 'blue_green']),\n  rolloutPercentage: z.number().min(0).max(100).default(100),\n  schedule: z.object({\n    enabled: z.boolean().default(false),\n    cron: z.string().optional(),\n    timezone: z.string().default('UTC')\n  }).optional(),\n  rollbackConfig: z.object({\n    enabled: z.boolean().default(true),\n    autoRollback: z.boolean().default(false),\n    rollbackConditions: z.array(z.string()).default([])\n  }).optional(),",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\advanced-configuration-management.service.ts",
        "start": 57,
        "end": 68,
        "startLoc": {
          "line": 57,
          "column": 3,
          "position": 873
        },
        "endLoc": {
          "line": 68,
          "column": 2,
          "position": 1056
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\routes\\advanced-configuration-management.ts",
        "start": 79,
        "end": 91,
        "startLoc": {
          "line": 79,
          "column": 3,
          "position": 1198
        },
        "endLoc": {
          "line": 91,
          "column": 2,
          "position": 1382
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "[]): Array<{ action: string; count: number }> {\n    const actionCounts = events.reduce((acc, event) => {\n      acc[event.action] = (acc[event.action] || 0) + 1;\n      return acc;\n    }, {} as Record<string, number>);\n    \n    return Object.entries(actionCounts)\n      .map(([action, count]) => ({ action, count }))\n      .sort((a, b) => b.count - a.count)\n      .slice(0, 10);\n  }\n\n  private getTopEntities",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\lib\\advanced-analytics.ts",
        "start": 251,
        "end": 263,
        "startLoc": {
          "line": 251,
          "column": 15,
          "position": 2425
        },
        "endLoc": {
          "line": 263,
          "column": 15,
          "position": 2606
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\advanced-audit-compliance.service.ts",
        "start": 566,
        "end": 578,
        "startLoc": {
          "line": 566,
          "column": 11,
          "position": 5116
        },
        "endLoc": {
          "line": 578,
          "column": 16,
          "position": 5296
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": ", error);\n      \n      if (error instanceof Error && error.message.includes('Validation error')) {\n        res.status(400).json({\n          type: 'https://econeura/errors/validation-error',\n          title: 'Validation Error',\n          status: 400,\n          detail: error.message,\n          instance: req.path,\n        });\n        return;\n      }\n\n      res.status(500).json({\n        type: 'https://econeura/errors/internal-error',\n        title: 'Internal Server Error',\n        status: 500,\n        detail: 'An unexpected error occurred',\n        instance: req.path,\n      });\n    }\n  }\n\n  async getMemoryStats",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\controllers\\memory.controller.ts",
        "start": 46,
        "end": 69,
        "startLoc": {
          "line": 46,
          "column": 24,
          "position": 411
        },
        "endLoc": {
          "line": 69,
          "column": 15,
          "position": 571
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\controllers\\memory.controller.ts",
        "start": 15,
        "end": 38,
        "startLoc": {
          "line": 15,
          "column": 22,
          "position": 165
        },
        "endLoc": {
          "line": 38,
          "column": 12,
          "position": 325
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": "export interface SearchResult {\n    title: string;\n    url: string;\n    snippet: string;\n    source: string;\n    publishedDate?: Date;\n    relevanceScore: number;\n}\nexport interface SearchResponse {\n    query: string;\n    results: SearchResult[];\n    totalResults: number;\n    searchTime: number;\n    source: 'google' | 'bing' | 'demo';\n    timestamp: Date;\n}\nexport interface SearchOptions {\n    maxResults?: number;\n    language?: string;\n    region?: string;\n    safeSearch?: 'off' | 'moderate' | 'strict';\n    dateRange?: 'day' | 'week' | 'month' | 'year';\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\web-search.service.d.ts",
        "start": 1,
        "end": 24,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 24,
          "column": 8,
          "position": 187
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\web-search.service.ts",
        "start": 3,
        "end": 29,
        "startLoc": {
          "line": 3,
          "column": 1,
          "position": 14
        },
        "endLoc": {
          "line": 29,
          "column": 6,
          "position": 204
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": ", {\n    organizationId?: string;\n    metadata?: Record<string, any>;\n    id?: string;\n    createdAt?: Date;\n    updatedAt?: Date;\n    isActive?: boolean;\n    username?: string;\n    permissions?: string[];\n    isVerified?: boolean;\n    accessToken?: string;\n    platform?: \"linkedin\" | \"twitter\" | \"facebook\" | \"instagram\" | \"youtube\" | \"tiktok\" | \"pinterest\" | \"snapchat\" | \"telegram\" | \"discord\";\n    displayName?: string;\n    refreshToken?: string;\n    profileUrl?: string;\n    avatarUrl?: string;\n    bio?: string;\n    followersCount?: number;\n    followingCount?: number;\n    postsCount?: number;\n    tokenExpiresAt?: Date;\n    lastSyncAt?: Date;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\social-media-management.service.d.ts",
        "start": 50,
        "end": 72,
        "startLoc": {
          "line": 50,
          "column": 2,
          "position": 719
        },
        "endLoc": {
          "line": 72,
          "column": 2,
          "position": 936
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\social-media-management.service.d.ts",
        "start": 28,
        "end": 50,
        "startLoc": {
          "line": 28,
          "column": 11,
          "position": 502
        },
        "endLoc": {
          "line": 50,
          "column": 2,
          "position": 719
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", {\n        views?: number;\n        comments?: number;\n        shares?: number;\n        likes?: number;\n        clicks?: number;\n        saves?: number;\n        reach?: number;\n        impressions?: number;\n        engagementRate?: number;\n        clickThroughRate?: number;\n    }>>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\social-media-management.service.d.ts",
        "start": 110,
        "end": 121,
        "startLoc": {
          "line": 110,
          "column": 2,
          "position": 1467
        },
        "endLoc": {
          "line": 121,
          "column": 3,
          "position": 1553
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\social-media-management.service.d.ts",
        "start": 99,
        "end": 110,
        "startLoc": {
          "line": 99,
          "column": 11,
          "position": 1381
        },
        "endLoc": {
          "line": 110,
          "column": 2,
          "position": 1467
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": ", {\n        sentiment?: {\n            score?: number;\n            positive?: number;\n            negative?: number;\n            neutral?: number;\n        };\n        demographics?: Record<string, any>;\n        topLocations?: {\n            count?: number;\n            location?: string;\n        }[];\n        topHashtags?: {\n            count?: number;\n            hashtag?: string;\n        }[];\n        bestTimeToPost?: {\n            day?: string;\n            hour?: number;\n            engagement?: number;\n        }[];\n    }>>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\social-media-management.service.d.ts",
        "start": 194,
        "end": 215,
        "startLoc": {
          "line": 194,
          "column": 2,
          "position": 2236
        },
        "endLoc": {
          "line": 215,
          "column": 3,
          "position": 2394
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\social-media-management.service.d.ts",
        "start": 173,
        "end": 194,
        "startLoc": {
          "line": 173,
          "column": 11,
          "position": 2078
        },
        "endLoc": {
          "line": 194,
          "column": 2,
          "position": 2236
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "{\n        sentiment?: {\n            score?: number;\n            positive?: number;\n            negative?: number;\n            neutral?: number;\n        };\n        demographics?: Record<string, any>;\n        topLocations?: {\n            count?: number;\n            location?: string;\n        }[];\n        topHashtags?: {\n            count?: number;\n            hashtag?: string;\n        }[];\n        bestTimeToPost?: {\n            day?: string;\n            hour?: number;\n            engagement?: number;\n        }[];\n    };",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\social-media-management.service.d.ts",
        "start": 235,
        "end": 256,
        "startLoc": {
          "line": 235,
          "column": 2,
          "position": 2648
        },
        "endLoc": {
          "line": 256,
          "column": 2,
          "position": 2804
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\social-media-management.service.d.ts",
        "start": 173,
        "end": 194,
        "startLoc": {
          "line": 173,
          "column": 2,
          "position": 2080
        },
        "endLoc": {
          "line": 194,
          "column": 2,
          "position": 2236
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "{\n        views?: number;\n        comments?: number;\n        shares?: number;\n        likes?: number;\n        clicks?: number;\n        saves?: number;\n        reach?: number;\n        impressions?: number;\n        engagementRate?: number;\n        clickThroughRate?: number;\n    };",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\social-media-management.service.d.ts",
        "start": 261,
        "end": 272,
        "startLoc": {
          "line": 261,
          "column": 2,
          "position": 2879
        },
        "endLoc": {
          "line": 272,
          "column": 2,
          "position": 2963
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\social-media-management.service.d.ts",
        "start": 99,
        "end": 110,
        "startLoc": {
          "line": 99,
          "column": 2,
          "position": 1383
        },
        "endLoc": {
          "line": 110,
          "column": 2,
          "position": 1467
        }
      }
    },
    {
      "format": "typescript",
      "lines": 58,
      "fragment": ", {\n    type?: \"live\" | \"text\" | \"link\" | \"event\" | \"video\" | \"image\" | \"carousel\" | \"story\" | \"reel\" | \"poll\";\n    status?: \"failed\" | \"draft\" | \"scheduled\" | \"deleted\" | \"published\";\n    organizationId?: string;\n    id?: string;\n    tags?: string[];\n    createdAt?: Date;\n    updatedAt?: Date;\n    content?: string;\n    scheduledAt?: Date;\n    accountId?: string;\n    analytics?: {\n        sentiment?: {\n            score?: number;\n            positive?: number;\n            negative?: number;\n            neutral?: number;\n        };\n        demographics?: Record<string, any>;\n        topLocations?: {\n            count?: number;\n            location?: string;\n        }[];\n        topHashtags?: {\n            count?: number;\n            hashtag?: string;\n        }[];\n        bestTimeToPost?: {\n            day?: string;\n            hour?: number;\n            engagement?: number;\n        }[];\n    };\n    createdBy?: string;\n    updatedBy?: string;\n    platform?: \"linkedin\" | \"twitter\" | \"facebook\" | \"instagram\" | \"youtube\" | \"tiktok\" | \"pinterest\" | \"snapchat\" | \"telegram\" | \"discord\";\n    campaignId?: string;\n    engagement?: {\n        views?: number;\n        comments?: number;\n        shares?: number;\n        likes?: number;\n        clicks?: number;\n        saves?: number;\n        reach?: number;\n        impressions?: number;\n        engagementRate?: number;\n        clickThroughRate?: number;\n    };\n    publishedAt?: Date;\n    mediaUrls?: string[];\n    hashtags?: string[];\n    mentions?: string[];\n    platformPostId?: string;\n    platformPostUrl?: string;\n    aiGenerated?: boolean;\n    aiPrompt?: string;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\social-media-management.service.d.ts",
        "start": 281,
        "end": 338,
        "startLoc": {
          "line": 281,
          "column": 2,
          "position": 3036
        },
        "endLoc": {
          "line": 338,
          "column": 2,
          "position": 3567
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\social-media-management.service.d.ts",
        "start": 224,
        "end": 281,
        "startLoc": {
          "line": 224,
          "column": 11,
          "position": 2505
        },
        "endLoc": {
          "line": 281,
          "column": 2,
          "position": 3036
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ";\n    sentiment: z.ZodOptional<z.ZodObject<{\n        positive: z.ZodDefault<z.ZodNumber>;\n        negative: z.ZodDefault<z.ZodNumber>;\n        neutral: z.ZodDefault<z.ZodNumber>;\n        score: z.ZodDefault<z.ZodNumber>;\n    }, \"strip\", z.ZodTypeAny, {\n        score?: number;\n        positive?: number;\n        negative?: number;\n        neutral?: number;\n    }, {\n        score?: number;\n        positive?: number;\n        negative?: number;\n        neutral?: number;\n    }>>;\n    isRelevant",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\social-media-management.service.d.ts",
        "start": 353,
        "end": 370,
        "startLoc": {
          "line": 353,
          "column": 8,
          "position": 3787
        },
        "endLoc": {
          "line": 370,
          "column": 11,
          "position": 3949
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\social-media-management.service.d.ts",
        "start": 143,
        "end": 160,
        "startLoc": {
          "line": 143,
          "column": 3,
          "position": 1785
        },
        "endLoc": {
          "line": 160,
          "column": 15,
          "position": 1947
        }
      }
    },
    {
      "format": "typescript",
      "lines": 31,
      "fragment": ", {\n    organizationId?: string;\n    metadata?: Record<string, any>;\n    url?: string;\n    id?: string;\n    tags?: string[];\n    createdAt?: Date;\n    updatedAt?: Date;\n    content?: string;\n    category?: \"other\" | \"suggestion\" | \"question\" | \"complaint\" | \"praise\";\n    priority?: \"low\" | \"medium\" | \"high\" | \"urgent\";\n    sentiment?: {\n        score?: number;\n        positive?: number;\n        negative?: number;\n        neutral?: number;\n    };\n    platform?: \"linkedin\" | \"twitter\" | \"facebook\" | \"instagram\" | \"youtube\" | \"tiktok\" | \"pinterest\" | \"snapchat\" | \"telegram\" | \"discord\";\n    responseId?: string;\n    publishedAt?: Date;\n    authorId?: string;\n    mediaUrls?: string[];\n    hashtags?: string[];\n    mentions?: string[];\n    postId?: string;\n    authorUsername?: string;\n    authorDisplayName?: string;\n    authorAvatarUrl?: string;\n    isRelevant?: boolean;\n    isResponded?: boolean;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\social-media-management.service.d.ts",
        "start": 409,
        "end": 439,
        "startLoc": {
          "line": 409,
          "column": 2,
          "position": 4428
        },
        "endLoc": {
          "line": 439,
          "column": 2,
          "position": 4738
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\social-media-management.service.d.ts",
        "start": 379,
        "end": 409,
        "startLoc": {
          "line": 379,
          "column": 11,
          "position": 4118
        },
        "endLoc": {
          "line": 409,
          "column": 2,
          "position": 4428
        }
      }
    },
    {
      "format": "typescript",
      "lines": 33,
      "fragment": ", {\n    status?: \"completed\" | \"cancelled\" | \"active\" | \"draft\" | \"paused\";\n    organizationId?: string;\n    name?: string;\n    metrics?: {\n        cost?: number;\n        conversions?: number;\n        engagement?: number;\n        clicks?: number;\n        reach?: number;\n        impressions?: number;\n        roi?: number;\n    };\n    id?: string;\n    createdAt?: Date;\n    updatedAt?: Date;\n    description?: string;\n    startDate?: Date;\n    endDate?: Date;\n    createdBy?: string;\n    updatedBy?: string;\n    budget?: number;\n    objectives?: string[];\n    platforms?: (\"linkedin\" | \"twitter\" | \"facebook\" | \"instagram\" | \"youtube\" | \"tiktok\" | \"pinterest\" | \"snapchat\" | \"telegram\" | \"discord\")[];\n    accounts?: string[];\n    targetAudience?: {\n        languages?: string[];\n        demographics?: Record<string, any>;\n        interests?: string[];\n        locations?: string[];\n    };\n    posts?: string[];\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\social-media-management.service.d.ts",
        "start": 530,
        "end": 562,
        "startLoc": {
          "line": 530,
          "column": 2,
          "position": 5804
        },
        "endLoc": {
          "line": 562,
          "column": 2,
          "position": 6121
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\social-media-management.service.d.ts",
        "start": 498,
        "end": 530,
        "startLoc": {
          "line": 498,
          "column": 11,
          "position": 5487
        },
        "endLoc": {
          "line": 530,
          "column": 2,
          "position": 5804
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ", {\n        status?: (\"failed\" | \"draft\" | \"scheduled\" | \"deleted\" | \"published\")[];\n        tags?: string[];\n        types?: (\"live\" | \"text\" | \"link\" | \"event\" | \"video\" | \"image\" | \"carousel\" | \"story\" | \"reel\" | \"poll\")[];\n        platforms?: (\"linkedin\" | \"twitter\" | \"facebook\" | \"instagram\" | \"youtube\" | \"tiktok\" | \"pinterest\" | \"snapchat\" | \"telegram\" | \"discord\")[];\n        accounts?: string[];\n        dateRange?: {\n            from?: Date;\n            to?: Date;\n        };\n    }>>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\social-media-management.service.d.ts",
        "start": 591,
        "end": 601,
        "startLoc": {
          "line": 591,
          "column": 2,
          "position": 6639
        },
        "endLoc": {
          "line": 601,
          "column": 3,
          "position": 6816
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\social-media-management.service.d.ts",
        "start": 581,
        "end": 591,
        "startLoc": {
          "line": 581,
          "column": 11,
          "position": 6462
        },
        "endLoc": {
          "line": 591,
          "column": 2,
          "position": 6639
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "{\n        status?: (\"failed\" | \"draft\" | \"scheduled\" | \"deleted\" | \"published\")[];\n        tags?: string[];\n        types?: (\"live\" | \"text\" | \"link\" | \"event\" | \"video\" | \"image\" | \"carousel\" | \"story\" | \"reel\" | \"poll\")[];\n        platforms?: (\"linkedin\" | \"twitter\" | \"facebook\" | \"instagram\" | \"youtube\" | \"tiktok\" | \"pinterest\" | \"snapchat\" | \"telegram\" | \"discord\")[];\n        accounts?: string[];\n        dateRange?: {\n            from?: Date;\n            to?: Date;\n        };\n    };",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\social-media-management.service.d.ts",
        "start": 628,
        "end": 638,
        "startLoc": {
          "line": 628,
          "column": 2,
          "position": 7145
        },
        "endLoc": {
          "line": 638,
          "column": 2,
          "position": 7320
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\social-media-management.service.d.ts",
        "start": 581,
        "end": 591,
        "startLoc": {
          "line": 581,
          "column": 2,
          "position": 6464
        },
        "endLoc": {
          "line": 591,
          "column": 2,
          "position": 6639
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": ", {\n    query?: string;\n    sort?: {\n        field?: \"createdAt\" | \"engagement\" | \"publishedAt\" | \"reach\" | \"impressions\";\n        direction?: \"asc\" | \"desc\";\n    };\n    filters?: {\n        status?: (\"failed\" | \"draft\" | \"scheduled\" | \"deleted\" | \"published\")[];\n        tags?: string[];\n        types?: (\"live\" | \"text\" | \"link\" | \"event\" | \"video\" | \"image\" | \"carousel\" | \"story\" | \"reel\" | \"poll\")[];\n        platforms?: (\"linkedin\" | \"twitter\" | \"facebook\" | \"instagram\" | \"youtube\" | \"tiktok\" | \"pinterest\" | \"snapchat\" | \"telegram\" | \"discord\")[];\n        accounts?: string[];\n        dateRange?: {\n            from?: Date;\n            to?: Date;\n        };\n    };\n    pagination?: {\n        page?: number;\n        limit?: number;\n    };\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\social-media-management.service.d.ts",
        "start": 643,
        "end": 664,
        "startLoc": {
          "line": 643,
          "column": 2,
          "position": 7350
        },
        "endLoc": {
          "line": 664,
          "column": 2,
          "position": 7619
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\social-media-management.service.d.ts",
        "start": 622,
        "end": 643,
        "startLoc": {
          "line": 622,
          "column": 11,
          "position": 7081
        },
        "endLoc": {
          "line": 643,
          "column": 2,
          "position": 7350
        }
      }
    },
    {
      "format": "typescript",
      "lines": 60,
      "fragment": "export interface SentimentResult {\n    id?: string;\n    text: string;\n    sentiment: 'positive' | 'negative' | 'neutral';\n    confidence: number;\n    emotions: EmotionAnalysis;\n    keywords: string[];\n    topics: string[];\n    language: string;\n    source?: string;\n    organizationId?: string;\n    userId?: string;\n    timestamp: Date;\n    processingTime: number;\n    metadata?: Record<string, any>;\n}\nexport interface EmotionAnalysis {\n    joy: number;\n    sadness: number;\n    anger: number;\n    fear: number;\n    surprise: number;\n    disgust: number;\n    trust: number;\n    anticipation: number;\n}\nexport interface BatchSentimentResult {\n    results: SentimentResult[];\n    summary: {\n        total: number;\n        positive: number;\n        negative: number;\n        neutral: number;\n        averageConfidence: number;\n        processingTime: number;\n        languageDistribution: Record<string, number>;\n        emotionDistribution: Record<string, number>;\n    };\n}\nexport interface TrendAnalysis {\n    period: string;\n    sentimentTrend: 'improving' | 'declining' | 'stable';\n    averageSentiment: number;\n    keyTopics: string[];\n    emotionChanges: Record<string, number>;\n    confidence: number;\n    sampleSize: number;\n}\nexport interface SentimentConfig {\n    enableCaching: boolean;\n    cacheTTL: number;\n    maxTextLength: number;\n    enableEmotionAnalysis: boolean;\n    enableTopicExtraction: boolean;\n    enableKeywordExtraction: boolean;\n    enableTrendAnalysis: boolean;\n    batchSize: number;\n    enableAuditLog: boolean;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\sentiment-analysis.service.d.ts",
        "start": 1,
        "end": 60,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 60,
          "column": 8,
          "position": 444
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\sentiment-analysis.service.ts",
        "start": 10,
        "end": 74,
        "startLoc": {
          "line": 10,
          "column": 1,
          "position": 69
        },
        "endLoc": {
          "line": 74,
          "column": 6,
          "position": 518
        }
      }
    },
    {
      "format": "typescript",
      "lines": 42,
      "fragment": "export interface SecurityConfig {\n    cors: {\n        allowedOrigins: string[];\n        allowedMethods: string[];\n        allowedHeaders: string[];\n        exposedHeaders: string[];\n        credentials: boolean;\n        maxAge: number;\n    };\n    helmet: {\n        contentSecurityPolicy: any;\n        hsts: any;\n        frameguard: any;\n        noSniff: boolean;\n        xssFilter: boolean;\n    };\n    rateLimit: {\n        windowMs: number;\n        maxRequests: number;\n        skipSuccessfulRequests: boolean;\n        skipFailedRequests: boolean;\n    };\n    validation: {\n        maxRequestSize: number;\n        allowedContentTypes: string[];\n        allowedHttpMethods: string[];\n    };\n    monitoring: {\n        enableLogging: boolean;\n        enableMetrics: boolean;\n        logLevel: 'info' | 'warn' | 'error';\n    };\n}\nexport interface SecurityMetrics {\n    totalRequests: number;\n    blockedRequests: number;\n    suspiciousRequests: number;\n    corsRequests: number;\n    rateLimitedRequests: number;\n    lastUpdated: string;\n}\ndeclare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\security-config.service.d.ts",
        "start": 1,
        "end": 42,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 42,
          "column": 8,
          "position": 279
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\security-config.service.ts",
        "start": 10,
        "end": 53,
        "startLoc": {
          "line": 10,
          "column": 1,
          "position": 17
        },
        "endLoc": {
          "line": 53,
          "column": 6,
          "position": 298
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "export interface DemandPrediction {\n    productId: string;\n    predictedDemand: number;\n    confidence: number;\n    seasonality: number;\n    trend: 'increasing' | 'decreasing' | 'stable';\n    recommendations: string[];\n}\nexport interface InventoryOptimization {\n    productId: string;\n    currentStock: number;\n    optimalStock: number;\n    reorderPoint: number;\n    safetyStock: number;\n    recommendations: string[];\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\predictive-ai.service.d.ts",
        "start": 1,
        "end": 17,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 17,
          "column": 8,
          "position": 118
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\predictive-ai.service.ts",
        "start": 3,
        "end": 21,
        "startLoc": {
          "line": 3,
          "column": 1,
          "position": 14
        },
        "endLoc": {
          "line": 21,
          "column": 6,
          "position": 134
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ";\n        return span;\n    }\n    createHttpSpan(req, res, options = {}) {\n        const span = this.tracer.startSpan(`${req.method} ${req.path}`, {\n            kind: SpanKind.SERVER,\n            attributes: {\n                'http.method': req.method,\n                'http.url': req.url,\n                'http.route': req.route?.path || req.path,\n                'http.user_agent': req.headers['user-agent'] || '',\n                'http.request_id': req.headers['x-request-id'] || '',\n                'http.tenant_id'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\observability-otel.service.js",
        "start": 159,
        "end": 171,
        "startLoc": {
          "line": 159,
          "column": 3,
          "position": 1202
        },
        "endLoc": {
          "line": 171,
          "column": 17,
          "position": 1346
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\infrastructure\\observability\\tracing.service.js",
        "start": 23,
        "end": 35,
        "startLoc": {
          "line": 23,
          "column": 2,
          "position": 207
        },
        "endLoc": {
          "line": 35,
          "column": 15,
          "position": 351
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": ";\n        return span;\n    }\n    createExternalApiSpan(service, endpoint, options = {}) {\n        const span = this.tracer.startSpan(`external.${service}`, {\n            kind: SpanKind.CLIENT,\n            attributes: {\n                'http.method': 'POST',\n                'http.url': endpoint,\n                'external.service': service,\n                'service.name': this",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\observability-otel.service.js",
        "start": 205,
        "end": 215,
        "startLoc": {
          "line": 205,
          "column": 3,
          "position": 1699
        },
        "endLoc": {
          "line": 215,
          "column": 5,
          "position": 1791
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\infrastructure\\observability\\tracing.service.js",
        "start": 59,
        "end": 69,
        "startLoc": {
          "line": 59,
          "column": 2,
          "position": 544
        },
        "endLoc": {
          "line": 69,
          "column": 15,
          "position": 636
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": ",\n                'service.name': this.config.service.name,\n                'service.version': this.config.service.version,\n                ...options.attributes\n            }\n        });\n        this.activeSpans.set(span.spanContext().spanId, span);\n        this.spanMetrics.totalSpans++;\n        this.spanMetrics.activeSpans++;\n        return span;\n    }\n    createBusinessSpan",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\observability-otel.service.js",
        "start": 214,
        "end": 225,
        "startLoc": {
          "line": 214,
          "column": 8,
          "position": 1785
        },
        "endLoc": {
          "line": 225,
          "column": 19,
          "position": 1875
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\observability-otel.service.js",
        "start": 197,
        "end": 208,
        "startLoc": {
          "line": 197,
          "column": 6,
          "position": 1621
        },
        "endLoc": {
          "line": 208,
          "column": 22,
          "position": 1711
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": ",\n                'service.name': this.config.service.name,\n                'service.version': this.config.service.version,\n                ...options.attributes\n            }\n        });\n        this.activeSpans.set(span.spanContext().spanId, span);\n        this.spanMetrics.totalSpans++;\n        this.spanMetrics.activeSpans++;\n        return span;\n    }\n    async",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\observability-otel.service.js",
        "start": 230,
        "end": 241,
        "startLoc": {
          "line": 230,
          "column": 15,
          "position": 1942
        },
        "endLoc": {
          "line": 241,
          "column": 6,
          "position": 2032
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\observability-otel.service.js",
        "start": 197,
        "end": 208,
        "startLoc": {
          "line": 197,
          "column": 6,
          "position": 1621
        },
        "endLoc": {
          "line": 208,
          "column": 22,
          "position": 1711
        }
      }
    },
    {
      "format": "javascript",
      "lines": 22,
      "fragment": "}\n    getCurrentSpan() {\n        return trace.getActiveSpan();\n    }\n    getCurrentTraceId() {\n        const span = this.getCurrentSpan();\n        return span?.spanContext().traceId;\n    }\n    getCurrentSpanId() {\n        const span = this.getCurrentSpan();\n        return span?.spanContext().spanId;\n    }\n    getTraceContext() {\n        const span = this.getCurrentSpan();\n        if (!span)\n            return undefined;\n        const spanContext = span.spanContext();\n        return {\n            traceId: spanContext.traceId,\n            spanId: spanContext.spanId,\n            operation: span.name,\n            service: this",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\observability-otel.service.js",
        "start": 313,
        "end": 334,
        "startLoc": {
          "line": 313,
          "column": 5,
          "position": 2801
        },
        "endLoc": {
          "line": 334,
          "column": 5,
          "position": 2982
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\infrastructure\\observability\\tracing.service.js",
        "start": 146,
        "end": 167,
        "startLoc": {
          "line": 146,
          "column": 5,
          "position": 1330
        },
        "endLoc": {
          "line": 167,
          "column": 15,
          "position": 1511
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": ";\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'http.response_size': JSON.stringify(res.locals.responseBody || {}).length,\n                    'performance.duration_ms': duration\n                });\n                if (res.statusCode >= 400) {\n                    span.setStatus({\n                        code: SpanStatusCode.ERROR,\n                        message: `HTTP ${res.statusCode}`\n                    });\n                }",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\observability-otel.service.js",
        "start": 461,
        "end": 472,
        "startLoc": {
          "line": 461,
          "column": 2,
          "position": 4343
        },
        "endLoc": {
          "line": 472,
          "column": 2,
          "position": 4444
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\observability-otel.service.js",
        "start": 279,
        "end": 290,
        "startLoc": {
          "line": 279,
          "column": 10,
          "position": 2470
        },
        "endLoc": {
          "line": 290,
          "column": 5,
          "position": 2571
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "});\n                if (res.statusCode >= 400) {\n                    span.setStatus({\n                        code: SpanStatusCode.ERROR,\n                        message: `HTTP ${res.statusCode}`\n                    });\n                }\n                else {\n                    span.setStatus({ code: SpanStatusCode.OK });\n                }\n                this",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\observability-otel.service.js",
        "start": 466,
        "end": 476,
        "startLoc": {
          "line": 466,
          "column": 17,
          "position": 4391
        },
        "endLoc": {
          "line": 476,
          "column": 5,
          "position": 4473
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\infrastructure\\observability\\tracing.service.js",
        "start": 180,
        "end": 190,
        "startLoc": {
          "line": 180,
          "column": 17,
          "position": 1662
        },
        "endLoc": {
          "line": 190,
          "column": 5,
          "position": 1744
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "'service.name': this.config.service.name,\n                'service.version': this.config.service.version,\n                ...options.attributes\n            }\n        });\n        this.activeSpans.set(span.spanContext().spanId, span);\n        this.spanMetrics.totalSpans++;\n        this.spanMetrics.activeSpans++;\n        return span;\n    }\n    traceError",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\observability-otel.service.js",
        "start": 486,
        "end": 496,
        "startLoc": {
          "line": 486,
          "column": 17,
          "position": 4572
        },
        "endLoc": {
          "line": 496,
          "column": 11,
          "position": 4659
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\observability-otel.service.js",
        "start": 198,
        "end": 208,
        "startLoc": {
          "line": 198,
          "column": 17,
          "position": 1624
        },
        "endLoc": {
          "line": 208,
          "column": 22,
          "position": 1711
        }
      }
    },
    {
      "format": "javascript",
      "lines": 17,
      "fragment": "}\n    traceError(error, context = {}) {\n        const span = this.getCurrentSpan();\n        if (span) {\n            span.recordException(error);\n            span.setAttributes({\n                'error.name': error.name,\n                'error.message': error.message,\n                'error.stack': error.stack || '',\n                ...context\n            });\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: error.message\n            });\n        }\n        this",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\observability-otel.service.js",
        "start": 495,
        "end": 511,
        "startLoc": {
          "line": 495,
          "column": 5,
          "position": 4656
        },
        "endLoc": {
          "line": 511,
          "column": 5,
          "position": 4786
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\infrastructure\\observability\\tracing.service.js",
        "start": 236,
        "end": 252,
        "startLoc": {
          "line": 236,
          "column": 5,
          "position": 2141
        },
        "endLoc": {
          "line": 252,
          "column": 2,
          "position": 2271
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": "}\n    traceBusinessOperation(operation, organizationId, context = {}) {\n        const span = this.createBusinessSpan(operation, organizationId);\n        span.setAttributes({\n            'business.operation': operation,\n            'organization.id': organizationId,\n            ...context\n        });\n        return span;\n    }\n}\nexport const observabilityOTelService",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\observability-otel.service.js",
        "start": 514,
        "end": 525,
        "startLoc": {
          "line": 514,
          "column": 5,
          "position": 4847
        },
        "endLoc": {
          "line": 525,
          "column": 25,
          "position": 4931
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\infrastructure\\observability\\tracing.service.js",
        "start": 252,
        "end": 263,
        "startLoc": {
          "line": 252,
          "column": 5,
          "position": 2271
        },
        "endLoc": {
          "line": 263,
          "column": 8,
          "position": 2355
        }
      }
    },
    {
      "format": "typescript",
      "lines": 77,
      "fragment": "export interface ObservabilityConfig {\n    service: {\n        name: string;\n        version: string;\n        environment: string;\n        instance: string;\n    };\n    tracing: {\n        enabled: boolean;\n        samplingRate: number;\n        maxSpansPerTrace: number;\n        batchSize: number;\n        exportTimeout: number;\n    };\n    metrics: {\n        enabled: boolean;\n        collectionInterval: number;\n        customMetrics: boolean;\n    };\n    logging: {\n        enabled: boolean;\n        level: 'debug' | 'info' | 'warn' | 'error';\n        structured: boolean;\n    };\n}\nexport interface TraceContext {\n    traceId: string;\n    spanId: string;\n    parentSpanId?: string;\n    operation: string;\n    service: string;\n    userId?: string;\n    organizationId?: string;\n    tenantId?: string;\n    requestId?: string;\n    metadata?: Record<string, any>;\n}\nexport interface SpanMetrics {\n    totalSpans: number;\n    activeSpans: number;\n    completedSpans: number;\n    errorSpans: number;\n    averageDuration: number;\n    p95Duration: number;\n    p99Duration: number;\n}\nexport interface ServiceMetrics {\n    requests: {\n        total: number;\n        successful: number;\n        failed: number;\n        rate: number;\n    };\n    latency: {\n        average: number;\n        p50: number;\n        p95: number;\n        p99: number;\n    };\n    errors: {\n        total: number;\n        rate: number;\n        byType: Record<string, number>;\n    };\n    resources: {\n        memory: {\n            used: number;\n            total: number;\n            percentage: number;\n        };\n        cpu: {\n            usage: number;\n            load: number;\n        };\n    };\n}\ndeclare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\observability-otel.service.d.ts",
        "start": 3,
        "end": 79,
        "startLoc": {
          "line": 3,
          "column": 1,
          "position": 35
        },
        "endLoc": {
          "line": 79,
          "column": 8,
          "position": 541
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\observability-otel.service.ts",
        "start": 14,
        "end": 94,
        "startLoc": {
          "line": 14,
          "column": 1,
          "position": 72
        },
        "endLoc": {
          "line": 94,
          "column": 6,
          "position": 582
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": ",\n            };\n        }\n        catch (error) {\n            if (error instanceof z.ZodError) {\n                throw new Error(`Validation error: ${error.errors.map(e => e.message).join(', ')}`);\n            }\n            throw error;\n        }\n    }\n    async getMemoryStats",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\memory.service.js",
        "start": 33,
        "end": 43,
        "startLoc": {
          "line": 33,
          "column": 7,
          "position": 338
        },
        "endLoc": {
          "line": 43,
          "column": 15,
          "position": 420
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\memory.service.js",
        "start": 14,
        "end": 24,
        "startLoc": {
          "line": 14,
          "column": 2,
          "position": 156
        },
        "endLoc": {
          "line": 24,
          "column": 12,
          "position": 238
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": ");\n            const responseTime = Date.now() - startTime;\n            this.updateHealthCheck(providerId, 'healthy', responseTime);\n            return data;\n        }\n        catch (error) {\n            this.updateHealthCheck(providerId, 'down', 0, true);\n            throw error;\n        }\n    }\n    async getWeatherForecast",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\external-integrations.service.js",
        "start": 211,
        "end": 221,
        "startLoc": {
          "line": 211,
          "column": 9,
          "position": 2412
        },
        "endLoc": {
          "line": 221,
          "column": 19,
          "position": 2499
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\external-integrations.service.js",
        "start": 171,
        "end": 181,
        "startLoc": {
          "line": 171,
          "column": 7,
          "position": 1959
        },
        "endLoc": {
          "line": 181,
          "column": 19,
          "position": 2046
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": ");\n            const responseTime = Date.now() - startTime;\n            this.updateHealthCheck(providerId, 'healthy', responseTime);\n            return data;\n        }\n        catch (error) {\n            this.updateHealthCheck(providerId, 'down', 0, true);\n            throw error;\n        }\n    }\n    addShippingProvider",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\external-integrations.service.js",
        "start": 231,
        "end": 241,
        "startLoc": {
          "line": 231,
          "column": 5,
          "position": 2634
        },
        "endLoc": {
          "line": 241,
          "column": 20,
          "position": 2719
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\external-integrations.service.js",
        "start": 171,
        "end": 181,
        "startLoc": {
          "line": 171,
          "column": 7,
          "position": 1959
        },
        "endLoc": {
          "line": 181,
          "column": 6,
          "position": 2044
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", {\n    type?: \"custom\" | \"fedex\" | \"ups\" | \"dhl\" | \"usps\";\n    name?: string;\n    id?: string;\n    isActive?: boolean;\n    settings?: Record<string, any>;\n    apiKey?: string;\n    rateLimit?: {\n        requestsPerMinute?: number;\n        requestsPerHour?: number;\n    };\n    apiUrl?: string;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\external-integrations.service.d.ts",
        "start": 32,
        "end": 44,
        "startLoc": {
          "line": 32,
          "column": 2,
          "position": 339
        },
        "endLoc": {
          "line": 44,
          "column": 2,
          "position": 449
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\external-integrations.service.d.ts",
        "start": 20,
        "end": 32,
        "startLoc": {
          "line": 20,
          "column": 11,
          "position": 229
        },
        "endLoc": {
          "line": 32,
          "column": 2,
          "position": 339
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", {\n    type?: \"custom\" | \"yahoo\" | \"alpha_vantage\" | \"iex\";\n    name?: string;\n    id?: string;\n    isActive?: boolean;\n    settings?: Record<string, any>;\n    apiKey?: string;\n    rateLimit?: {\n        requestsPerMinute?: number;\n        requestsPerDay?: number;\n    };\n    apiUrl?: string;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\external-integrations.service.d.ts",
        "start": 103,
        "end": 115,
        "startLoc": {
          "line": 103,
          "column": 2,
          "position": 1091
        },
        "endLoc": {
          "line": 115,
          "column": 2,
          "position": 1197
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\external-integrations.service.d.ts",
        "start": 91,
        "end": 103,
        "startLoc": {
          "line": 91,
          "column": 11,
          "position": 985
        },
        "endLoc": {
          "line": 103,
          "column": 2,
          "position": 1091
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ", \"custom\"]>;\n    apiKey: z.ZodString;\n    apiUrl: z.ZodString;\n    isActive: z.ZodDefault<z.ZodBoolean>;\n    rateLimit: z.ZodObject<{\n        requestsPerMinute: z.ZodDefault<z.ZodNumber>;\n        requestsPerDay: z.ZodDefault<z.ZodNumber>;\n    }, \"strip\", z.ZodTypeAny, {\n        requestsPerMinute?: number;\n        requestsPerDay?: number;\n    }, {\n        requestsPerMinute?: number;\n        requestsPerDay?: number;\n    }>;\n    settings: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;\n}, \"strip\", z.ZodTypeAny, {\n    type?: \"custom\" | \"openweather\"",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\external-integrations.service.d.ts",
        "start": 119,
        "end": 135,
        "startLoc": {
          "line": 119,
          "column": 14,
          "position": 1247
        },
        "endLoc": {
          "line": 135,
          "column": 14,
          "position": 1426
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\external-integrations.service.d.ts",
        "start": 76,
        "end": 92,
        "startLoc": {
          "line": 76,
          "column": 6,
          "position": 819
        },
        "endLoc": {
          "line": 92,
          "column": 8,
          "position": 998
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ";\n    name?: string;\n    id?: string;\n    isActive?: boolean;\n    settings?: Record<string, any>;\n    apiKey?: string;\n    rateLimit?: {\n        requestsPerMinute?: number;\n        requestsPerDay?: number;\n    };\n    apiUrl?: string;\n}, {\n    type?: \"custom\" | \"openweather\"",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\external-integrations.service.d.ts",
        "start": 135,
        "end": 147,
        "startLoc": {
          "line": 135,
          "column": 14,
          "position": 1435
        },
        "endLoc": {
          "line": 147,
          "column": 14,
          "position": 1532
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\external-integrations.service.d.ts",
        "start": 92,
        "end": 104,
        "startLoc": {
          "line": 92,
          "column": 6,
          "position": 1007
        },
        "endLoc": {
          "line": 104,
          "column": 8,
          "position": 1104
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", {\n    type?: \"custom\" | \"openweather\" | \"weather_api\" | \"accuweather\";\n    name?: string;\n    id?: string;\n    isActive?: boolean;\n    settings?: Record<string, any>;\n    apiKey?: string;\n    rateLimit?: {\n        requestsPerMinute?: number;\n        requestsPerDay?: number;\n    };\n    apiUrl?: string;\n}>;\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\external-integrations.service.d.ts",
        "start": 146,
        "end": 159,
        "startLoc": {
          "line": 146,
          "column": 2,
          "position": 1519
        },
        "endLoc": {
          "line": 159,
          "column": 7,
          "position": 1628
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\external-integrations.service.d.ts",
        "start": 134,
        "end": 116,
        "startLoc": {
          "line": 134,
          "column": 11,
          "position": 1413
        },
        "endLoc": {
          "line": 116,
          "column": 8,
          "position": 1200
        }
      }
    },
    {
      "format": "typescript",
      "lines": 55,
      "fragment": "export type ShippingProvider = z.infer<typeof ShippingProviderSchema>;\nexport type PaymentProvider = z.infer<typeof PaymentProviderSchema>;\nexport type MarketDataProvider = z.infer<typeof MarketDataProviderSchema>;\nexport type WeatherProvider = z.infer<typeof WeatherProviderSchema>;\nexport interface ShippingQuote {\n    provider: string;\n    service: string;\n    cost: number;\n    currency: string;\n    estimatedDays: number;\n    trackingNumber?: string;\n    validUntil: Date;\n}\nexport interface PaymentResult {\n    provider: string;\n    transactionId: string;\n    status: 'success' | 'failed' | 'pending';\n    amount: number;\n    currency: string;\n    fees: number;\n    timestamp: Date;\n    metadata?: Record<string, any>;\n}\nexport interface MarketData {\n    symbol: string;\n    price: number;\n    currency: string;\n    change: number;\n    changePercent: number;\n    volume: number;\n    timestamp: Date;\n    metadata?: Record<string, any>;\n}\nexport interface WeatherData {\n    location: string;\n    temperature: number;\n    humidity: number;\n    description: string;\n    windSpeed: number;\n    timestamp: Date;\n    forecast?: Array<{\n        date: Date;\n        temperature: number;\n        description: string;\n    }>;\n}\nexport interface IntegrationHealth {\n    provider: string;\n    status: 'healthy' | 'degraded' | 'down';\n    responseTime: number;\n    lastCheck: Date;\n    errorRate: number;\n    uptime: number;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\external-integrations.service.d.ts",
        "start": 159,
        "end": 213,
        "startLoc": {
          "line": 159,
          "column": 1,
          "position": 1628
        },
        "endLoc": {
          "line": 213,
          "column": 8,
          "position": 2063
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\external-integrations.service.ts",
        "start": 64,
        "end": 124,
        "startLoc": {
          "line": 64,
          "column": 1,
          "position": 710
        },
        "endLoc": {
          "line": 124,
          "column": 6,
          "position": 1151
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", {\n    name?: string;\n    id?: string;\n    createdAt?: Date;\n    updatedAt?: Date;\n    description?: string;\n    conditions?: {\n        value?: any;\n        field?: string;\n        operator?: \"greater_than\" | \"less_than\" | \"equals\" | \"not_equals\" | \"contains\" | \"not_contains\" | \"in\" | \"not_in\";\n        logic?: \"and\" | \"or\";\n    }[];\n    subscriberCount?: number;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\email-marketing.service.d.ts",
        "start": 42,
        "end": 55,
        "startLoc": {
          "line": 42,
          "column": 2,
          "position": 615
        },
        "endLoc": {
          "line": 55,
          "column": 2,
          "position": 745
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\email-marketing.service.d.ts",
        "start": 29,
        "end": 42,
        "startLoc": {
          "line": 29,
          "column": 11,
          "position": 485
        },
        "endLoc": {
          "line": 42,
          "column": 2,
          "position": 615
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", {\n    type?: \"text\" | \"html\" | \"responsive\" | \"drag_drop\";\n    name?: string;\n    id?: string;\n    createdAt?: Date;\n    updatedAt?: Date;\n    subject?: string;\n    variables?: string[];\n    isDefault?: boolean;\n    htmlContent?: string;\n    textContent?: string;\n    previewText?: string;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\email-marketing.service.d.ts",
        "start": 80,
        "end": 92,
        "startLoc": {
          "line": 80,
          "column": 2,
          "position": 1019
        },
        "endLoc": {
          "line": 92,
          "column": 2,
          "position": 1126
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\email-marketing.service.d.ts",
        "start": 68,
        "end": 80,
        "startLoc": {
          "line": 68,
          "column": 11,
          "position": 912
        },
        "endLoc": {
          "line": 80,
          "column": 2,
          "position": 1019
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", {\n        bounced?: number;\n        sent?: number;\n        unsubscribed?: number;\n        bounceRate?: number;\n        delivered?: number;\n        opened?: number;\n        complained?: number;\n        clicked?: number;\n        openRate?: number;\n        clickRate?: number;\n        unsubscribeRate?: number;\n        complaintRate?: number;\n    }>>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\email-marketing.service.d.ts",
        "start": 139,
        "end": 152,
        "startLoc": {
          "line": 139,
          "column": 2,
          "position": 1725
        },
        "endLoc": {
          "line": 152,
          "column": 3,
          "position": 1827
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\email-marketing.service.d.ts",
        "start": 126,
        "end": 139,
        "startLoc": {
          "line": 126,
          "column": 11,
          "position": 1623
        },
        "endLoc": {
          "line": 139,
          "column": 2,
          "position": 1725
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", {\n        actions?: {\n            type?: string;\n            config?: Record<string, any>;\n        }[];\n        enabled?: boolean;\n        triggers?: {\n            type?: string;\n            delay?: number;\n            conditions?: Record<string, any>;\n        }[];\n    }>>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\email-marketing.service.d.ts",
        "start": 230,
        "end": 241,
        "startLoc": {
          "line": 230,
          "column": 2,
          "position": 2594
        },
        "endLoc": {
          "line": 241,
          "column": 3,
          "position": 2686
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\email-marketing.service.d.ts",
        "start": 219,
        "end": 230,
        "startLoc": {
          "line": 219,
          "column": 11,
          "position": 2502
        },
        "endLoc": {
          "line": 230,
          "column": 2,
          "position": 2594
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "{\n        actions?: {\n            type?: string;\n            config?: Record<string, any>;\n        }[];\n        enabled?: boolean;\n        triggers?: {\n            type?: string;\n            delay?: number;\n            conditions?: Record<string, any>;\n        }[];\n    };",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\email-marketing.service.d.ts",
        "start": 251,
        "end": 262,
        "startLoc": {
          "line": 251,
          "column": 2,
          "position": 2831
        },
        "endLoc": {
          "line": 262,
          "column": 2,
          "position": 2921
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\email-marketing.service.d.ts",
        "start": 219,
        "end": 230,
        "startLoc": {
          "line": 219,
          "column": 2,
          "position": 2504
        },
        "endLoc": {
          "line": 230,
          "column": 2,
          "position": 2594
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "{\n        bounced?: number;\n        sent?: number;\n        unsubscribed?: number;\n        bounceRate?: number;\n        delivered?: number;\n        opened?: number;\n        complained?: number;\n        clicked?: number;\n        openRate?: number;\n        clickRate?: number;\n        unsubscribeRate?: number;\n        complaintRate?: number;\n    };",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\email-marketing.service.d.ts",
        "start": 269,
        "end": 282,
        "startLoc": {
          "line": 269,
          "column": 2,
          "position": 2976
        },
        "endLoc": {
          "line": 282,
          "column": 2,
          "position": 3076
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\email-marketing.service.d.ts",
        "start": 126,
        "end": 139,
        "startLoc": {
          "line": 126,
          "column": 2,
          "position": 1625
        },
        "endLoc": {
          "line": 139,
          "column": 2,
          "position": 1725
        }
      }
    },
    {
      "format": "typescript",
      "lines": 62,
      "fragment": ", {\n    type?: \"other\" | \"announcement\" | \"welcome\" | \"survey\" | \"newsletter\" | \"promotional\" | \"transactional\" | \"abandoned_cart\" | \"re_engagement\";\n    status?: \"completed\" | \"cancelled\" | \"draft\" | \"sent\" | \"paused\" | \"scheduled\" | \"sending\";\n    organizationId?: string;\n    name?: string;\n    automation?: {\n        actions?: {\n            type?: string;\n            config?: Record<string, any>;\n        }[];\n        enabled?: boolean;\n        triggers?: {\n            type?: string;\n            delay?: number;\n            conditions?: Record<string, any>;\n        }[];\n    };\n    id?: string;\n    createdAt?: Date;\n    updatedAt?: Date;\n    subject?: string;\n    scheduledAt?: Date;\n    completedAt?: Date;\n    analytics?: {\n        bounced?: number;\n        sent?: number;\n        unsubscribed?: number;\n        bounceRate?: number;\n        delivered?: number;\n        opened?: number;\n        complained?: number;\n        clicked?: number;\n        openRate?: number;\n        clickRate?: number;\n        unsubscribeRate?: number;\n        complaintRate?: number;\n    };\n    createdBy?: string;\n    recipients?: string[];\n    updatedBy?: string;\n    templateId?: string;\n    sentAt?: Date;\n    segments?: string[];\n    htmlContent?: string;\n    textContent?: string;\n    previewText?: string;\n    fromName?: string;\n    fromEmail?: string;\n    replyTo?: string;\n    trackingEnabled?: boolean;\n    abTest?: {\n        enabled?: boolean;\n        variants?: {\n            id?: string;\n            subject?: string;\n            percentage?: number;\n            htmlContent?: string;\n        }[];\n        winner?: string;\n        testDuration?: number;\n    };\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\email-marketing.service.d.ts",
        "start": 307,
        "end": 368,
        "startLoc": {
          "line": 307,
          "column": 2,
          "position": 3267
        },
        "endLoc": {
          "line": 368,
          "column": 2,
          "position": 3800
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\email-marketing.service.d.ts",
        "start": 246,
        "end": 307,
        "startLoc": {
          "line": 246,
          "column": 11,
          "position": 2734
        },
        "endLoc": {
          "line": 307,
          "column": 2,
          "position": 3267
        }
      }
    },
    {
      "format": "typescript",
      "lines": 30,
      "fragment": ", {\n    status?: \"pending\" | \"active\" | \"bounced\" | \"unsubscribed\" | \"complained\";\n    organizationId?: string;\n    id?: string;\n    source?: string;\n    userAgent?: string;\n    location?: {\n        city?: string;\n        country?: string;\n        region?: string;\n        timezone?: string;\n    };\n    email?: string;\n    tags?: string[];\n    createdAt?: Date;\n    updatedAt?: Date;\n    firstName?: string;\n    lastName?: string;\n    ipAddress?: string;\n    customFields?: Record<string, any>;\n    preferences?: {\n        format?: \"text\" | \"html\";\n        categories?: string[];\n        frequency?: \"never\" | \"monthly\" | \"daily\" | \"weekly\";\n    };\n    segments?: string[];\n    lastActivityAt?: Date;\n    subscribedAt?: Date;\n    unsubscribedAt?: Date;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\email-marketing.service.d.ts",
        "start": 445,
        "end": 474,
        "startLoc": {
          "line": 445,
          "column": 2,
          "position": 4684
        },
        "endLoc": {
          "line": 474,
          "column": 2,
          "position": 4947
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\email-marketing.service.d.ts",
        "start": 416,
        "end": 445,
        "startLoc": {
          "line": 416,
          "column": 11,
          "position": 4421
        },
        "endLoc": {
          "line": 445,
          "column": 2,
          "position": 4684
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "]>, \"many\">>;\n        dateRange: z.ZodOptional<z.ZodObject<{\n            from: z.ZodOptional<z.ZodDate>;\n            to: z.ZodOptional<z.ZodDate>;\n        }, \"strip\", z.ZodTypeAny, {\n            from?: Date;\n            to?: Date;\n        }, {\n            from?: Date;\n            to?: Date;\n        }>>;\n        tags: z.ZodOptional<z.ZodArray<z.ZodString, \"many\">>;\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\email-marketing.service.d.ts",
        "start": 479,
        "end": 491,
        "startLoc": {
          "line": 479,
          "column": 12,
          "position": 5079
        },
        "endLoc": {
          "line": 491,
          "column": 2,
          "position": 5208
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\social-media-management.service.d.ts",
        "start": 568,
        "end": 580,
        "startLoc": {
          "line": 568,
          "column": 10,
          "position": 6303
        },
        "endLoc": {
          "line": 580,
          "column": 9,
          "position": 6432
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ";\n        direction?: \"asc\" | \"desc\";\n    }>>;\n    pagination: z.ZodOptional<z.ZodObject<{\n        page: z.ZodDefault<z.ZodNumber>;\n        limit: z.ZodDefault<z.ZodNumber>;\n    }, \"strip\", z.ZodTypeAny, {\n        page?: number;\n        limit?: number;\n    }, {\n        page?: number;\n        limit?: number;\n    }>>;\n}, \"strip\", z.ZodTypeAny, {\n    query?: string;\n    sort?: {\n        field?: \"name\"",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\email-marketing.service.d.ts",
        "start": 515,
        "end": 531,
        "startLoc": {
          "line": 515,
          "column": 12,
          "position": 5601
        },
        "endLoc": {
          "line": 531,
          "column": 7,
          "position": 5752
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\social-media-management.service.d.ts",
        "start": 609,
        "end": 625,
        "startLoc": {
          "line": 609,
          "column": 14,
          "position": 6954
        },
        "endLoc": {
          "line": 625,
          "column": 12,
          "position": 7105
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "?: string[];\n        dateRange?: {\n            from?: Date;\n            to?: Date;\n        };\n    };\n    pagination?: {\n        page?: number;\n        limit?: number;\n    };\n}, {\n    query?: string;\n    sort?: {\n        field?: \"name\"",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\email-marketing.service.d.ts",
        "start": 537,
        "end": 550,
        "startLoc": {
          "line": 537,
          "column": 5,
          "position": 5876
        },
        "endLoc": {
          "line": 550,
          "column": 7,
          "position": 5967
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\social-media-management.service.d.ts",
        "start": 633,
        "end": 646,
        "startLoc": {
          "line": 633,
          "column": 9,
          "position": 7283
        },
        "endLoc": {
          "line": 646,
          "column": 12,
          "position": 7374
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ", {\n    query?: string;\n    sort?: {\n        field?: \"name\" | \"createdAt\" | \"sentAt\" | \"openRate\" | \"clickRate\";\n        direction?: \"asc\" | \"desc\";\n    };\n    filters?: {\n        type?: (\"other\" | \"announcement\" | \"welcome\" | \"survey\" | \"newsletter\" | \"promotional\" | \"transactional\" | \"abandoned_cart\" | \"re_engagement\")[];\n        status?: (\"completed\" | \"cancelled\" | \"draft\" | \"sent\" | \"paused\" | \"scheduled\" | \"sending\")[];\n        tags?: string[];\n        dateRange?: {\n            from?: Date;\n            to?: Date;\n        };\n    };\n    pagination?: {\n        page?: number;\n        limit?: number;\n    };\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\email-marketing.service.d.ts",
        "start": 547,
        "end": 566,
        "startLoc": {
          "line": 547,
          "column": 2,
          "position": 5943
        },
        "endLoc": {
          "line": 566,
          "column": 2,
          "position": 6158
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\email-marketing.service.d.ts",
        "start": 528,
        "end": 547,
        "startLoc": {
          "line": 528,
          "column": 11,
          "position": 5728
        },
        "endLoc": {
          "line": 547,
          "column": 2,
          "position": 5943
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": ".sort((a, b) => {\n                    let aValue, bValue;\n                    switch (field) {\n                        case 'name':\n                            aValue = a.name;\n                            bValue = b.name;\n                            break;\n                        case 'createdAt':\n                            aValue = a.createdAt;\n                            bValue = b.createdAt;\n                            break;\n                        case 'updatedAt'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\document-management.service.js",
        "start": 435,
        "end": 446,
        "startLoc": {
          "line": 435,
          "column": 10,
          "position": 4132
        },
        "endLoc": {
          "line": 446,
          "column": 12,
          "position": 4227
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\email-marketing.service.js",
        "start": 663,
        "end": 674,
        "startLoc": {
          "line": 663,
          "column": 10,
          "position": 6032
        },
        "endLoc": {
          "line": 674,
          "column": 9,
          "position": 6127
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": ", {\n    language?: string;\n    title?: string;\n    tags?: string[];\n    description?: string;\n    summary?: string;\n    category?: string;\n    author?: string;\n    customFields?: Record<string, any>;\n    sentiment?: {\n        score?: number;\n        label?: \"positive\" | \"negative\" | \"neutral\";\n        magnitude?: number;\n    };\n    keywords?: string[];\n    entities?: {\n        value?: string;\n        type?: string;\n        confidence?: number;\n    }[];\n    extractedText?: string;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\document-management.service.d.ts",
        "start": 63,
        "end": 84,
        "startLoc": {
          "line": 63,
          "column": 2,
          "position": 745
        },
        "endLoc": {
          "line": 84,
          "column": 2,
          "position": 920
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\document-management.service.d.ts",
        "start": 42,
        "end": 63,
        "startLoc": {
          "line": 42,
          "column": 11,
          "position": 570
        },
        "endLoc": {
          "line": 63,
          "column": 2,
          "position": 745
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", {\n    version?: string;\n    id?: string;\n    size?: number;\n    createdAt?: Date;\n    content?: string;\n    isActive?: boolean;\n    changes?: string;\n    createdBy?: string;\n    checksum?: string;\n    documentId?: string;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\document-management.service.d.ts",
        "start": 107,
        "end": 118,
        "startLoc": {
          "line": 107,
          "column": 2,
          "position": 1132
        },
        "endLoc": {
          "line": 118,
          "column": 2,
          "position": 1217
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\document-management.service.d.ts",
        "start": 96,
        "end": 107,
        "startLoc": {
          "line": 96,
          "column": 11,
          "position": 1047
        },
        "endLoc": {
          "line": 107,
          "column": 2,
          "position": 1132
        }
      }
    },
    {
      "format": "typescript",
      "lines": 81,
      "fragment": ": z.ZodObject<{\n        title: z.ZodString;\n        description: z.ZodOptional<z.ZodString>;\n        tags: z.ZodDefault<z.ZodArray<z.ZodString, \"many\">>;\n        category: z.ZodOptional<z.ZodString>;\n        author: z.ZodString;\n        language: z.ZodDefault<z.ZodString>;\n        keywords: z.ZodDefault<z.ZodArray<z.ZodString, \"many\">>;\n        customFields: z.ZodDefault<z.ZodRecord<z.ZodString, z.ZodAny>>;\n        extractedText: z.ZodOptional<z.ZodString>;\n        summary: z.ZodOptional<z.ZodString>;\n        entities: z.ZodDefault<z.ZodArray<z.ZodObject<{\n            type: z.ZodString;\n            value: z.ZodString;\n            confidence: z.ZodNumber;\n        }, \"strip\", z.ZodTypeAny, {\n            value?: string;\n            type?: string;\n            confidence?: number;\n        }, {\n            value?: string;\n            type?: string;\n            confidence?: number;\n        }>, \"many\">>;\n        sentiment: z.ZodOptional<z.ZodObject<{\n            score: z.ZodNumber;\n            magnitude: z.ZodNumber;\n            label: z.ZodEnum<[\"positive\", \"negative\", \"neutral\"]>;\n        }, \"strip\", z.ZodTypeAny, {\n            score?: number;\n            label?: \"positive\" | \"negative\" | \"neutral\";\n            magnitude?: number;\n        }, {\n            score?: number;\n            label?: \"positive\" | \"negative\" | \"neutral\";\n            magnitude?: number;\n        }>>;\n    }, \"strip\", z.ZodTypeAny, {\n        language?: string;\n        title?: string;\n        tags?: string[];\n        description?: string;\n        summary?: string;\n        category?: string;\n        author?: string;\n        customFields?: Record<string, any>;\n        sentiment?: {\n            score?: number;\n            label?: \"positive\" | \"negative\" | \"neutral\";\n            magnitude?: number;\n        };\n        keywords?: string[];\n        entities?: {\n            value?: string;\n            type?: string;\n            confidence?: number;\n        }[];\n        extractedText?: string;\n    }, {\n        language?: string;\n        title?: string;\n        tags?: string[];\n        description?: string;\n        summary?: string;\n        category?: string;\n        author?: string;\n        customFields?: Record<string, any>;\n        sentiment?: {\n            score?: number;\n            label?: \"positive\" | \"negative\" | \"neutral\";\n            magnitude?: number;\n        };\n        keywords?: string[];\n        entities?: {\n            value?: string;\n            type?: string;\n            confidence?: number;\n        }[];\n        extractedText?: string;\n    }>;\n    storagePath",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\document-management.service.d.ts",
        "start": 126,
        "end": 206,
        "startLoc": {
          "line": 126,
          "column": 9,
          "position": 1352
        },
        "endLoc": {
          "line": 206,
          "column": 12,
          "position": 2142
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\document-management.service.d.ts",
        "start": 5,
        "end": 85,
        "startLoc": {
          "line": 5,
          "column": 23,
          "position": 137
        },
        "endLoc": {
          "line": 85,
          "column": 7,
          "position": 923
        }
      }
    },
    {
      "format": "typescript",
      "lines": 34,
      "fragment": "z.ZodObject<{\n        id: z.ZodString;\n        documentId: z.ZodString;\n        version: z.ZodString;\n        content: z.ZodString;\n        size: z.ZodNumber;\n        checksum: z.ZodString;\n        changes: z.ZodOptional<z.ZodString>;\n        createdBy: z.ZodString;\n        createdAt: z.ZodDate;\n        isActive: z.ZodDefault<z.ZodBoolean>;\n    }, \"strip\", z.ZodTypeAny, {\n        version?: string;\n        id?: string;\n        size?: number;\n        createdAt?: Date;\n        content?: string;\n        isActive?: boolean;\n        changes?: string;\n        createdBy?: string;\n        checksum?: string;\n        documentId?: string;\n    }, {\n        version?: string;\n        id?: string;\n        size?: number;\n        createdAt?: Date;\n        content?: string;\n        isActive?: boolean;\n        changes?: string;\n        createdBy?: string;\n        checksum?: string;\n        documentId?: string;\n    }>,",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\document-management.service.d.ts",
        "start": 225,
        "end": 258,
        "startLoc": {
          "line": 225,
          "column": 2,
          "position": 2384
        },
        "endLoc": {
          "line": 258,
          "column": 2,
          "position": 2673
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\document-management.service.d.ts",
        "start": 85,
        "end": 118,
        "startLoc": {
          "line": 85,
          "column": 2,
          "position": 932
        },
        "endLoc": {
          "line": 118,
          "column": 2,
          "position": 1218
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "{\n        language?: string;\n        title?: string;\n        tags?: string[];\n        description?: string;\n        summary?: string;\n        category?: string;\n        author?: string;\n        customFields?: Record<string, any>;\n        sentiment?: {\n            score?: number;\n            label?: \"positive\" | \"negative\" | \"neutral\";\n            magnitude?: number;\n        };\n        keywords?: string[];\n        entities?: {\n            value?: string;\n            type?: string;\n            confidence?: number;\n        }[];\n        extractedText?: string;\n    };",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\document-management.service.d.ts",
        "start": 287,
        "end": 308,
        "startLoc": {
          "line": 287,
          "column": 2,
          "position": 3026
        },
        "endLoc": {
          "line": 308,
          "column": 2,
          "position": 3200
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\document-management.service.d.ts",
        "start": 42,
        "end": 63,
        "startLoc": {
          "line": 42,
          "column": 2,
          "position": 572
        },
        "endLoc": {
          "line": 63,
          "column": 2,
          "position": 745
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "{\n        version?: string;\n        id?: string;\n        size?: number;\n        createdAt?: Date;\n        content?: string;\n        isActive?: boolean;\n        changes?: string;\n        createdBy?: string;\n        checksum?: string;\n        documentId?: string;\n    }[",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\document-management.service.d.ts",
        "start": 323,
        "end": 334,
        "startLoc": {
          "line": 323,
          "column": 2,
          "position": 3328
        },
        "endLoc": {
          "line": 334,
          "column": 2,
          "position": 3412
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\document-management.service.d.ts",
        "start": 96,
        "end": 107,
        "startLoc": {
          "line": 96,
          "column": 2,
          "position": 1049
        },
        "endLoc": {
          "line": 107,
          "column": 2,
          "position": 1132
        }
      }
    },
    {
      "format": "typescript",
      "lines": 66,
      "fragment": ", {\n    type?: \"json\" | \"csv\" | \"pdf\" | \"audio\" | \"html\" | \"video\" | \"image\" | \"other\" | \"xml\" | \"docx\" | \"xlsx\" | \"pptx\" | \"txt\" | \"md\";\n    status?: \"archived\" | \"draft\" | \"approved\" | \"deleted\" | \"review\";\n    organizationId?: string;\n    name?: string;\n    metadata?: {\n        language?: string;\n        title?: string;\n        tags?: string[];\n        description?: string;\n        summary?: string;\n        category?: string;\n        author?: string;\n        customFields?: Record<string, any>;\n        sentiment?: {\n            score?: number;\n            label?: \"positive\" | \"negative\" | \"neutral\";\n            magnitude?: number;\n        };\n        keywords?: string[];\n        entities?: {\n            value?: string;\n            type?: string;\n            confidence?: number;\n        }[];\n        extractedText?: string;\n    };\n    id?: string;\n    size?: number;\n    createdAt?: Date;\n    updatedAt?: Date;\n    mimeType?: string;\n    createdBy?: string;\n    updatedBy?: string;\n    permissions?: {\n        userId?: string;\n        permission?: \"admin\" | \"read\" | \"write\" | \"owner\";\n        grantedBy?: string;\n        grantedAt?: Date;\n    }[];\n    isPublic?: boolean;\n    versions?: {\n        version?: string;\n        id?: string;\n        size?: number;\n        createdAt?: Date;\n        content?: string;\n        isActive?: boolean;\n        changes?: string;\n        createdBy?: string;\n        checksum?: string;\n        documentId?: string;\n    }[];\n    currentVersion?: string;\n    checksum?: string;\n    originalName?: string;\n    storagePath?: string;\n    storageProvider?: \"azure\" | \"local\" | \"gcp\" | \"aws\";\n    encryptionKey?: string;\n    isEncrypted?: boolean;\n    retentionPolicy?: {\n        retentionDays?: number;\n        autoDelete?: boolean;\n        legalHold?: boolean;\n    };\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\document-management.service.d.ts",
        "start": 347,
        "end": 412,
        "startLoc": {
          "line": 347,
          "column": 2,
          "position": 3520
        },
        "endLoc": {
          "line": 412,
          "column": 2,
          "position": 4123
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\document-management.service.d.ts",
        "start": 282,
        "end": 347,
        "startLoc": {
          "line": 282,
          "column": 11,
          "position": 2917
        },
        "endLoc": {
          "line": 347,
          "column": 2,
          "position": 3520
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ";\n        dateRange: z.ZodOptional<z.ZodObject<{\n            from: z.ZodOptional<z.ZodDate>;\n            to: z.ZodOptional<z.ZodDate>;\n        }, \"strip\", z.ZodTypeAny, {\n            from?: Date;\n            to?: Date;\n        }, {\n            from?: Date;\n            to?: Date;\n        }>>;\n        sizeRange",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\document-management.service.d.ts",
        "start": 420,
        "end": 431,
        "startLoc": {
          "line": 420,
          "column": 2,
          "position": 4326
        },
        "endLoc": {
          "line": 431,
          "column": 10,
          "position": 4428
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\social-media-management.service.d.ts",
        "start": 568,
        "end": 579,
        "startLoc": {
          "line": 568,
          "column": 3,
          "position": 6309
        },
        "endLoc": {
          "line": 579,
          "column": 5,
          "position": 6411
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ", {\n        type?: (\"json\" | \"csv\" | \"pdf\" | \"audio\" | \"html\" | \"video\" | \"image\" | \"other\" | \"xml\" | \"docx\" | \"xlsx\" | \"pptx\" | \"txt\" | \"md\")[];\n        status?: (\"archived\" | \"draft\" | \"approved\" | \"deleted\" | \"review\")[];\n        tags?: string[];\n        category?: string;\n        author?: string[];\n        dateRange?: {\n            from?: Date;\n            to?: Date;\n        };\n        sizeRange?: {\n            max?: number;\n            min?: number;\n        };\n    }>>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\document-management.service.d.ts",
        "start": 455,
        "end": 469,
        "startLoc": {
          "line": 455,
          "column": 2,
          "position": 4716
        },
        "endLoc": {
          "line": 469,
          "column": 3,
          "position": 4896
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\document-management.service.d.ts",
        "start": 441,
        "end": 455,
        "startLoc": {
          "line": 441,
          "column": 11,
          "position": 4536
        },
        "endLoc": {
          "line": 455,
          "column": 2,
          "position": 4716
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ";\n        direction?: \"asc\" | \"desc\";\n    }>>;\n    pagination: z.ZodOptional<z.ZodObject<{\n        page: z.ZodDefault<z.ZodNumber>;\n        limit: z.ZodDefault<z.ZodNumber>;\n    }, \"strip\", z.ZodTypeAny, {\n        page?: number;\n        limit?: number;\n    }, {\n        page?: number;\n        limit?: number;\n    }>>;\n}, \"strip\", z.ZodTypeAny, {\n    query?: string;\n    sort?: {\n        field?: \"type\"",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\document-management.service.d.ts",
        "start": 477,
        "end": 493,
        "startLoc": {
          "line": 477,
          "column": 12,
          "position": 5034
        },
        "endLoc": {
          "line": 493,
          "column": 7,
          "position": 5185
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\social-media-management.service.d.ts",
        "start": 609,
        "end": 625,
        "startLoc": {
          "line": 609,
          "column": 14,
          "position": 6954
        },
        "endLoc": {
          "line": 625,
          "column": 12,
          "position": 7105
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "{\n        type?: (\"json\" | \"csv\" | \"pdf\" | \"audio\" | \"html\" | \"video\" | \"image\" | \"other\" | \"xml\" | \"docx\" | \"xlsx\" | \"pptx\" | \"txt\" | \"md\")[];\n        status?: (\"archived\" | \"draft\" | \"approved\" | \"deleted\" | \"review\")[];\n        tags?: string[];\n        category?: string;\n        author?: string[];\n        dateRange?: {\n            from?: Date;\n            to?: Date;\n        };\n        sizeRange?: {\n            max?: number;\n            min?: number;\n        };\n    };",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\document-management.service.d.ts",
        "start": 496,
        "end": 510,
        "startLoc": {
          "line": 496,
          "column": 2,
          "position": 5225
        },
        "endLoc": {
          "line": 510,
          "column": 2,
          "position": 5403
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\document-management.service.d.ts",
        "start": 441,
        "end": 455,
        "startLoc": {
          "line": 441,
          "column": 2,
          "position": 4538
        },
        "endLoc": {
          "line": 455,
          "column": 2,
          "position": 4716
        }
      }
    },
    {
      "format": "typescript",
      "lines": 26,
      "fragment": ", {\n    query?: string;\n    sort?: {\n        field?: \"type\" | \"name\" | \"size\" | \"createdAt\" | \"updatedAt\";\n        direction?: \"asc\" | \"desc\";\n    };\n    filters?: {\n        type?: (\"json\" | \"csv\" | \"pdf\" | \"audio\" | \"html\" | \"video\" | \"image\" | \"other\" | \"xml\" | \"docx\" | \"xlsx\" | \"pptx\" | \"txt\" | \"md\")[];\n        status?: (\"archived\" | \"draft\" | \"approved\" | \"deleted\" | \"review\")[];\n        tags?: string[];\n        category?: string;\n        author?: string[];\n        dateRange?: {\n            from?: Date;\n            to?: Date;\n        };\n        sizeRange?: {\n            max?: number;\n            min?: number;\n        };\n    };\n    pagination?: {\n        page?: number;\n        limit?: number;\n    };\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\document-management.service.d.ts",
        "start": 515,
        "end": 540,
        "startLoc": {
          "line": 515,
          "column": 2,
          "position": 5433
        },
        "endLoc": {
          "line": 540,
          "column": 2,
          "position": 5705
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\document-management.service.d.ts",
        "start": 490,
        "end": 515,
        "startLoc": {
          "line": 490,
          "column": 11,
          "position": 5161
        },
        "endLoc": {
          "line": 515,
          "column": 2,
          "position": 5433
        }
      }
    },
    {
      "format": "typescript",
      "lines": 28,
      "fragment": ", {\n    status?: \"pending\" | \"open\" | \"in_progress\" | \"resolved\" | \"closed\";\n    organizationId?: string;\n    metadata?: Record<string, any>;\n    id?: string;\n    source?: \"chat\" | \"email\" | \"phone\" | \"api\" | \"social\" | \"portal\";\n    tags?: string[];\n    createdAt?: Date;\n    updatedAt?: Date;\n    description?: string;\n    assignedTo?: string;\n    subject?: string;\n    category?: \"technical\" | \"general\" | \"billing\" | \"feature_request\" | \"bug_report\";\n    priority?: \"critical\" | \"low\" | \"medium\" | \"high\" | \"urgent\";\n    resolvedAt?: Date;\n    attachments?: {\n        type?: string;\n        name?: string;\n        url?: string;\n        id?: string;\n        size?: number;\n    }[];\n    customerId?: string;\n    customerName?: string;\n    customerEmail?: string;\n    assignedAt?: Date;\n    closedAt?: Date;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\customer-support.service.d.ts",
        "start": 72,
        "end": 99,
        "startLoc": {
          "line": 72,
          "column": 2,
          "position": 910
        },
        "endLoc": {
          "line": 99,
          "column": 2,
          "position": 1196
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\customer-support.service.d.ts",
        "start": 45,
        "end": 72,
        "startLoc": {
          "line": 45,
          "column": 11,
          "position": 624
        },
        "endLoc": {
          "line": 72,
          "column": 2,
          "position": 910
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ">>;\n    attachments: z.ZodDefault<z.ZodArray<z.ZodObject<{\n        id: z.ZodString;\n        name: z.ZodString;\n        url: z.ZodString;\n        size: z.ZodNumber;\n        type: z.ZodString;\n    }, \"strip\", z.ZodTypeAny, {\n        type?: string;\n        name?: string;\n        url?: string;\n        id?: string;\n        size?: number;\n    }, {\n        type?: string;\n        name?: string;\n        url?: string;\n        id?: string;\n        size?: number;\n    }>, \"many\">>;\n    isRead",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\customer-support.service.d.ts",
        "start": 106,
        "end": 126,
        "startLoc": {
          "line": 106,
          "column": 2,
          "position": 1294
        },
        "endLoc": {
          "line": 126,
          "column": 7,
          "position": 1470
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\customer-support.service.d.ts",
        "start": 22,
        "end": 42,
        "startLoc": {
          "line": 22,
          "column": 7,
          "position": 399
        },
        "endLoc": {
          "line": 42,
          "column": 9,
          "position": 575
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ", {\n    message?: string;\n    id?: string;\n    createdAt?: Date;\n    isRead?: boolean;\n    readAt?: Date;\n    attachments?: {\n        type?: string;\n        name?: string;\n        url?: string;\n        id?: string;\n        size?: number;\n    }[];\n    messageType?: \"system\" | \"text\" | \"image\" | \"file\";\n    senderId?: string;\n    ticketId?: string;\n    senderType?: \"customer\" | \"agent\" | \"bot\";\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\customer-support.service.d.ts",
        "start": 146,
        "end": 163,
        "startLoc": {
          "line": 146,
          "column": 2,
          "position": 1665
        },
        "endLoc": {
          "line": 163,
          "column": 2,
          "position": 1815
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\customer-support.service.d.ts",
        "start": 129,
        "end": 146,
        "startLoc": {
          "line": 129,
          "column": 11,
          "position": 1515
        },
        "endLoc": {
          "line": 146,
          "column": 2,
          "position": 1665
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ", {\n    organizationId?: string;\n    title?: string;\n    id?: string;\n    tags?: string[];\n    createdAt?: Date;\n    updatedAt?: Date;\n    content?: string;\n    category?: string;\n    isPublished?: boolean;\n    viewCount?: number;\n    helpfulCount?: number;\n    notHelpfulCount?: number;\n    authorId?: string;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\customer-support.service.d.ts",
        "start": 192,
        "end": 206,
        "startLoc": {
          "line": 192,
          "column": 2,
          "position": 2102
        },
        "endLoc": {
          "line": 206,
          "column": 2,
          "position": 2213
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\customer-support.service.d.ts",
        "start": 178,
        "end": 192,
        "startLoc": {
          "line": 178,
          "column": 11,
          "position": 1991
        },
        "endLoc": {
          "line": 192,
          "column": 2,
          "position": 2102
        }
      }
    },
    {
      "format": "typescript",
      "lines": 28,
      "fragment": ", {\n    userId?: string;\n    organizationId?: string;\n    name?: string;\n    performance?: {\n        responseTime?: number;\n        averageResolutionTime?: number;\n        ticketsResolved?: number;\n        customerSatisfaction?: number;\n    };\n    id?: string;\n    email?: string;\n    createdAt?: Date;\n    updatedAt?: Date;\n    isActive?: boolean;\n    languages?: string[];\n    skills?: string[];\n    maxTickets?: number;\n    currentTickets?: number;\n    workingHours?: {\n        timezone?: string;\n        schedule?: Record<string, {\n            end?: string;\n            start?: string;\n            isWorking?: boolean;\n        }>;\n    };\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\customer-support.service.d.ts",
        "start": 293,
        "end": 320,
        "startLoc": {
          "line": 293,
          "column": 2,
          "position": 3029
        },
        "endLoc": {
          "line": 320,
          "column": 2,
          "position": 3237
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\customer-support.service.d.ts",
        "start": 266,
        "end": 293,
        "startLoc": {
          "line": 266,
          "column": 11,
          "position": 2821
        },
        "endLoc": {
          "line": 293,
          "column": 2,
          "position": 3029
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "getSupportStatistics(organizationId: string): Promise<{\n        totalTickets: number;\n        ticketsByStatus: Record<string, number>;\n        ticketsByPriority: Record<string, number>;\n        ticketsByCategory: Record<string, number>;\n        averageResolutionTime: number;\n        totalAgents: number;\n        activeAgents: number;\n        totalArticles: number;\n        topCategories: Array<{\n            category: string;\n            count: number;",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\customer-support.service.d.ts",
        "start": 353,
        "end": 364,
        "startLoc": {
          "line": 353,
          "column": 5,
          "position": 3776
        },
        "endLoc": {
          "line": 364,
          "column": 2,
          "position": 3883
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\customer-support.service.ts",
        "start": 900,
        "end": 909,
        "startLoc": {
          "line": 900,
          "column": 2,
          "position": 7080
        },
        "endLoc": {
          "line": 909,
          "column": 2,
          "position": 7186
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ", {\n        structuredData?: Record<string, any>;\n        metaTitle?: string;\n        metaDescription?: string;\n        metaKeywords?: string[];\n        canonicalUrl?: string;\n        ogTitle?: string;\n        ogDescription?: string;\n        ogImage?: string;\n        twitterCard?: string;\n    }>>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\content-management.service.d.ts",
        "start": 35,
        "end": 45,
        "startLoc": {
          "line": 35,
          "column": 2,
          "position": 543
        },
        "endLoc": {
          "line": 45,
          "column": 3,
          "position": 629
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\content-management.service.d.ts",
        "start": 25,
        "end": 35,
        "startLoc": {
          "line": 25,
          "column": 11,
          "position": 457
        },
        "endLoc": {
          "line": 35,
          "column": 2,
          "position": 543
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "{\n        structuredData?: Record<string, any>;\n        metaTitle?: string;\n        metaDescription?: string;\n        metaKeywords?: string[];\n        canonicalUrl?: string;\n        ogTitle?: string;\n        ogDescription?: string;\n        ogImage?: string;\n        twitterCard?: string;\n    };",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\content-management.service.d.ts",
        "start": 93,
        "end": 103,
        "startLoc": {
          "line": 93,
          "column": 2,
          "position": 1080
        },
        "endLoc": {
          "line": 103,
          "column": 2,
          "position": 1164
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\content-management.service.d.ts",
        "start": 25,
        "end": 35,
        "startLoc": {
          "line": 25,
          "column": 2,
          "position": 459
        },
        "endLoc": {
          "line": 35,
          "column": 2,
          "position": 543
        }
      }
    },
    {
      "format": "typescript",
      "lines": 32,
      "fragment": ", {\n    language?: string;\n    title?: string;\n    tags?: string[];\n    description?: string;\n    categories?: string[];\n    analytics?: {\n        views?: number;\n        comments?: number;\n        bounceRate?: number;\n        engagement?: number;\n        uniqueViews?: number;\n        shares?: number;\n        likes?: number;\n        timeOnPage?: number;\n    };\n    author?: string;\n    customFields?: Record<string, any>;\n    keywords?: string[];\n    seo?: {\n        structuredData?: Record<string, any>;\n        metaTitle?: string;\n        metaDescription?: string;\n        metaKeywords?: string[];\n        canonicalUrl?: string;\n        ogTitle?: string;\n        ogDescription?: string;\n        ogImage?: string;\n        twitterCard?: string;\n    };\n    excerpt?: string;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\content-management.service.d.ts",
        "start": 105,
        "end": 136,
        "startLoc": {
          "line": 105,
          "column": 2,
          "position": 1175
        },
        "endLoc": {
          "line": 136,
          "column": 2,
          "position": 1430
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\content-management.service.d.ts",
        "start": 74,
        "end": 105,
        "startLoc": {
          "line": 74,
          "column": 11,
          "position": 920
        },
        "endLoc": {
          "line": 105,
          "column": 2,
          "position": 1175
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", {\n    version?: string;\n    id?: string;\n    createdAt?: Date;\n    content?: string;\n    isActive?: boolean;\n    changes?: string;\n    createdBy?: string;\n    contentId?: string;\n    htmlContent?: string;\n    markdownContent?: string;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\content-management.service.d.ts",
        "start": 159,
        "end": 170,
        "startLoc": {
          "line": 159,
          "column": 2,
          "position": 1652
        },
        "endLoc": {
          "line": 170,
          "column": 2,
          "position": 1737
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\content-management.service.d.ts",
        "start": 148,
        "end": 159,
        "startLoc": {
          "line": 148,
          "column": 11,
          "position": 1567
        },
        "endLoc": {
          "line": 159,
          "column": 2,
          "position": 1652
        }
      }
    },
    {
      "format": "typescript",
      "lines": 133,
      "fragment": ": z.ZodObject<{\n        title: z.ZodString;\n        description: z.ZodOptional<z.ZodString>;\n        excerpt: z.ZodOptional<z.ZodString>;\n        tags: z.ZodDefault<z.ZodArray<z.ZodString, \"many\">>;\n        categories: z.ZodDefault<z.ZodArray<z.ZodString, \"many\">>;\n        author: z.ZodString;\n        language: z.ZodDefault<z.ZodString>;\n        keywords: z.ZodDefault<z.ZodArray<z.ZodString, \"many\">>;\n        customFields: z.ZodDefault<z.ZodRecord<z.ZodString, z.ZodAny>>;\n        seo: z.ZodOptional<z.ZodObject<{\n            metaTitle: z.ZodOptional<z.ZodString>;\n            metaDescription: z.ZodOptional<z.ZodString>;\n            metaKeywords: z.ZodDefault<z.ZodArray<z.ZodString, \"many\">>;\n            canonicalUrl: z.ZodOptional<z.ZodString>;\n            ogTitle: z.ZodOptional<z.ZodString>;\n            ogDescription: z.ZodOptional<z.ZodString>;\n            ogImage: z.ZodOptional<z.ZodString>;\n            twitterCard: z.ZodOptional<z.ZodString>;\n            structuredData: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;\n        }, \"strip\", z.ZodTypeAny, {\n            structuredData?: Record<string, any>;\n            metaTitle?: string;\n            metaDescription?: string;\n            metaKeywords?: string[];\n            canonicalUrl?: string;\n            ogTitle?: string;\n            ogDescription?: string;\n            ogImage?: string;\n            twitterCard?: string;\n        }, {\n            structuredData?: Record<string, any>;\n            metaTitle?: string;\n            metaDescription?: string;\n            metaKeywords?: string[];\n            canonicalUrl?: string;\n            ogTitle?: string;\n            ogDescription?: string;\n            ogImage?: string;\n            twitterCard?: string;\n        }>>;\n        analytics: z.ZodOptional<z.ZodObject<{\n            views: z.ZodDefault<z.ZodNumber>;\n            uniqueViews: z.ZodDefault<z.ZodNumber>;\n            shares: z.ZodDefault<z.ZodNumber>;\n            comments: z.ZodDefault<z.ZodNumber>;\n            likes: z.ZodDefault<z.ZodNumber>;\n            engagement: z.ZodDefault<z.ZodNumber>;\n            bounceRate: z.ZodDefault<z.ZodNumber>;\n            timeOnPage: z.ZodDefault<z.ZodNumber>;\n        }, \"strip\", z.ZodTypeAny, {\n            views?: number;\n            comments?: number;\n            bounceRate?: number;\n            engagement?: number;\n            uniqueViews?: number;\n            shares?: number;\n            likes?: number;\n            timeOnPage?: number;\n        }, {\n            views?: number;\n            comments?: number;\n            bounceRate?: number;\n            engagement?: number;\n            uniqueViews?: number;\n            shares?: number;\n            likes?: number;\n            timeOnPage?: number;\n        }>>;\n    }, \"strip\", z.ZodTypeAny, {\n        language?: string;\n        title?: string;\n        tags?: string[];\n        description?: string;\n        categories?: string[];\n        analytics?: {\n            views?: number;\n            comments?: number;\n            bounceRate?: number;\n            engagement?: number;\n            uniqueViews?: number;\n            shares?: number;\n            likes?: number;\n            timeOnPage?: number;\n        };\n        author?: string;\n        customFields?: Record<string, any>;\n        keywords?: string[];\n        seo?: {\n            structuredData?: Record<string, any>;\n            metaTitle?: string;\n            metaDescription?: string;\n            metaKeywords?: string[];\n            canonicalUrl?: string;\n            ogTitle?: string;\n            ogDescription?: string;\n            ogImage?: string;\n            twitterCard?: string;\n        };\n        excerpt?: string;\n    }, {\n        language?: string;\n        title?: string;\n        tags?: string[];\n        description?: string;\n        categories?: string[];\n        analytics?: {\n            views?: number;\n            comments?: number;\n            bounceRate?: number;\n            engagement?: number;\n            uniqueViews?: number;\n            shares?: number;\n            likes?: number;\n            timeOnPage?: number;\n        };\n        author?: string;\n        customFields?: Record<string, any>;\n        keywords?: string[];\n        seo?: {\n            structuredData?: Record<string, any>;\n            metaTitle?: string;\n            metaDescription?: string;\n            metaKeywords?: string[];\n            canonicalUrl?: string;\n            ogTitle?: string;\n            ogDescription?: string;\n            ogImage?: string;\n            twitterCard?: string;\n        };\n        excerpt?: string;\n    }>;\n    content",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\content-management.service.d.ts",
        "start": 179,
        "end": 311,
        "startLoc": {
          "line": 179,
          "column": 9,
          "position": 1895
        },
        "endLoc": {
          "line": 311,
          "column": 8,
          "position": 3195
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\content-management.service.d.ts",
        "start": 5,
        "end": 137,
        "startLoc": {
          "line": 5,
          "column": 22,
          "position": 137
        },
        "endLoc": {
          "line": 137,
          "column": 7,
          "position": 1433
        }
      }
    },
    {
      "format": "typescript",
      "lines": 34,
      "fragment": "z.ZodObject<{\n        id: z.ZodString;\n        contentId: z.ZodString;\n        version: z.ZodString;\n        content: z.ZodString;\n        htmlContent: z.ZodOptional<z.ZodString>;\n        markdownContent: z.ZodOptional<z.ZodString>;\n        changes: z.ZodOptional<z.ZodString>;\n        createdBy: z.ZodString;\n        createdAt: z.ZodDate;\n        isActive: z.ZodDefault<z.ZodBoolean>;\n    }, \"strip\", z.ZodTypeAny, {\n        version?: string;\n        id?: string;\n        createdAt?: Date;\n        content?: string;\n        isActive?: boolean;\n        changes?: string;\n        createdBy?: string;\n        contentId?: string;\n        htmlContent?: string;\n        markdownContent?: string;\n    }, {\n        version?: string;\n        id?: string;\n        createdAt?: Date;\n        content?: string;\n        isActive?: boolean;\n        changes?: string;\n        createdBy?: string;\n        contentId?: string;\n        htmlContent?: string;\n        markdownContent?: string;\n    }>,",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\content-management.service.d.ts",
        "start": 317,
        "end": 350,
        "startLoc": {
          "line": 317,
          "column": 2,
          "position": 3299
        },
        "endLoc": {
          "line": 350,
          "column": 2,
          "position": 3598
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\content-management.service.d.ts",
        "start": 137,
        "end": 170,
        "startLoc": {
          "line": 137,
          "column": 2,
          "position": 1442
        },
        "endLoc": {
          "line": 170,
          "column": 2,
          "position": 1738
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", {\n        approvedBy?: string;\n        approvedAt?: Date;\n        currentStep?: string;\n        steps?: {\n            status?: \"pending\" | \"completed\" | \"rejected\" | \"in_progress\";\n            assignedTo?: string;\n            completedAt?: Date;\n            step?: string;\n            comments?: string;\n        }[];\n    }>>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\content-management.service.d.ts",
        "start": 394,
        "end": 405,
        "startLoc": {
          "line": 394,
          "column": 2,
          "position": 4106
        },
        "endLoc": {
          "line": 405,
          "column": 3,
          "position": 4201
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\content-management.service.d.ts",
        "start": 383,
        "end": 394,
        "startLoc": {
          "line": 383,
          "column": 11,
          "position": 4011
        },
        "endLoc": {
          "line": 394,
          "column": 2,
          "position": 4106
        }
      }
    },
    {
      "format": "typescript",
      "lines": 32,
      "fragment": "{\n        language?: string;\n        title?: string;\n        tags?: string[];\n        description?: string;\n        categories?: string[];\n        analytics?: {\n            views?: number;\n            comments?: number;\n            bounceRate?: number;\n            engagement?: number;\n            uniqueViews?: number;\n            shares?: number;\n            likes?: number;\n            timeOnPage?: number;\n        };\n        author?: string;\n        customFields?: Record<string, any>;\n        keywords?: string[];\n        seo?: {\n            structuredData?: Record<string, any>;\n            metaTitle?: string;\n            metaDescription?: string;\n            metaKeywords?: string[];\n            canonicalUrl?: string;\n            ogTitle?: string;\n            ogDescription?: string;\n            ogImage?: string;\n            twitterCard?: string;\n        };\n        excerpt?: string;\n    };",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\content-management.service.d.ts",
        "start": 414,
        "end": 445,
        "startLoc": {
          "line": 414,
          "column": 2,
          "position": 4342
        },
        "endLoc": {
          "line": 445,
          "column": 2,
          "position": 4596
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\content-management.service.d.ts",
        "start": 74,
        "end": 105,
        "startLoc": {
          "line": 74,
          "column": 2,
          "position": 922
        },
        "endLoc": {
          "line": 105,
          "column": 2,
          "position": 1175
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "{\n        version?: string;\n        id?: string;\n        createdAt?: Date;\n        content?: string;\n        isActive?: boolean;\n        changes?: string;\n        createdBy?: string;\n        contentId?: string;\n        htmlContent?: string;\n        markdownContent?: string;\n    }[",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\content-management.service.d.ts",
        "start": 460,
        "end": 471,
        "startLoc": {
          "line": 460,
          "column": 2,
          "position": 4739
        },
        "endLoc": {
          "line": 471,
          "column": 2,
          "position": 4823
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\content-management.service.d.ts",
        "start": 148,
        "end": 159,
        "startLoc": {
          "line": 148,
          "column": 2,
          "position": 1569
        },
        "endLoc": {
          "line": 159,
          "column": 2,
          "position": 1652
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "{\n        approvedBy?: string;\n        approvedAt?: Date;\n        currentStep?: string;\n        steps?: {\n            status?: \"pending\" | \"completed\" | \"rejected\" | \"in_progress\";\n            assignedTo?: string;\n            completedAt?: Date;\n            step?: string;\n            comments?: string;\n        }[];\n    };",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\content-management.service.d.ts",
        "start": 473,
        "end": 484,
        "startLoc": {
          "line": 473,
          "column": 2,
          "position": 4840
        },
        "endLoc": {
          "line": 484,
          "column": 2,
          "position": 4933
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\content-management.service.d.ts",
        "start": 383,
        "end": 394,
        "startLoc": {
          "line": 383,
          "column": 2,
          "position": 4013
        },
        "endLoc": {
          "line": 394,
          "column": 2,
          "position": 4106
        }
      }
    },
    {
      "format": "typescript",
      "lines": 84,
      "fragment": ", {\n    type?: \"page\" | \"event\" | \"product\" | \"article\" | \"other\" | \"documentation\" | \"news\" | \"tutorial\" | \"faq\" | \"blog\" | \"landing\";\n    status?: \"archived\" | \"draft\" | \"approved\" | \"deleted\" | \"review\" | \"published\";\n    organizationId?: string;\n    metadata?: {\n        language?: string;\n        title?: string;\n        tags?: string[];\n        description?: string;\n        categories?: string[];\n        analytics?: {\n            views?: number;\n            comments?: number;\n            bounceRate?: number;\n            engagement?: number;\n            uniqueViews?: number;\n            shares?: number;\n            likes?: number;\n            timeOnPage?: number;\n        };\n        author?: string;\n        customFields?: Record<string, any>;\n        keywords?: string[];\n        seo?: {\n            structuredData?: Record<string, any>;\n            metaTitle?: string;\n            metaDescription?: string;\n            metaKeywords?: string[];\n            canonicalUrl?: string;\n            ogTitle?: string;\n            ogDescription?: string;\n            ogImage?: string;\n            twitterCard?: string;\n        };\n        excerpt?: string;\n    };\n    images?: string[];\n    title?: string;\n    id?: string;\n    createdAt?: Date;\n    updatedAt?: Date;\n    content?: string;\n    scheduledAt?: Date;\n    expiresAt?: Date;\n    slug?: string;\n    createdBy?: string;\n    template?: \"default\" | \"custom\" | \"product\" | \"news\" | \"blog\" | \"landing\";\n    updatedBy?: string;\n    attachments?: string[];\n    isPublic?: boolean;\n    versions?: {\n        version?: string;\n        id?: string;\n        createdAt?: Date;\n        content?: string;\n        isActive?: boolean;\n        changes?: string;\n        createdBy?: string;\n        contentId?: string;\n        htmlContent?: string;\n        markdownContent?: string;\n    }[];\n    currentVersion?: string;\n    workflow?: {\n        approvedBy?: string;\n        approvedAt?: Date;\n        currentStep?: string;\n        steps?: {\n            status?: \"pending\" | \"completed\" | \"rejected\" | \"in_progress\";\n            assignedTo?: string;\n            completedAt?: Date;\n            step?: string;\n            comments?: string;\n        }[];\n    };\n    htmlContent?: string;\n    markdownContent?: string;\n    featuredImage?: string;\n    publishedAt?: Date;\n    isFeatured?: boolean;\n    isSticky?: boolean;\n    allowComments?: boolean;\n    allowSharing?: boolean;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\content-management.service.d.ts",
        "start": 493,
        "end": 576,
        "startLoc": {
          "line": 493,
          "column": 2,
          "position": 5000
        },
        "endLoc": {
          "line": 576,
          "column": 2,
          "position": 5751
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\content-management.service.d.ts",
        "start": 410,
        "end": 493,
        "startLoc": {
          "line": 410,
          "column": 11,
          "position": 4249
        },
        "endLoc": {
          "line": 493,
          "column": 2,
          "position": 5000
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "]>, \"many\">>;\n        dateRange: z.ZodOptional<z.ZodObject<{\n            from: z.ZodOptional<z.ZodDate>;\n            to: z.ZodOptional<z.ZodDate>;\n        }, \"strip\", z.ZodTypeAny, {\n            from?: Date;\n            to?: Date;\n        }, {\n            from?: Date;\n            to?: Date;\n        }>>;\n        isPublic",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\content-management.service.d.ts",
        "start": 585,
        "end": 596,
        "startLoc": {
          "line": 585,
          "column": 9,
          "position": 5990
        },
        "endLoc": {
          "line": 596,
          "column": 9,
          "position": 6098
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\social-media-management.service.d.ts",
        "start": 568,
        "end": 579,
        "startLoc": {
          "line": 568,
          "column": 10,
          "position": 6303
        },
        "endLoc": {
          "line": 579,
          "column": 5,
          "position": 6411
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", {\n        type?: (\"page\" | \"event\" | \"product\" | \"article\" | \"other\" | \"documentation\" | \"news\" | \"tutorial\" | \"faq\" | \"blog\" | \"landing\")[];\n        status?: (\"archived\" | \"draft\" | \"approved\" | \"deleted\" | \"review\" | \"published\")[];\n        tags?: string[];\n        categories?: string[];\n        template?: (\"default\" | \"custom\" | \"product\" | \"news\" | \"blog\" | \"landing\")[];\n        author?: string[];\n        isPublic?: boolean;\n        dateRange?: {\n            from?: Date;\n            to?: Date;\n        };\n        isFeatured?: boolean;\n    }>>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\content-management.service.d.ts",
        "start": 611,
        "end": 624,
        "startLoc": {
          "line": 611,
          "column": 2,
          "position": 6330
        },
        "endLoc": {
          "line": 624,
          "column": 3,
          "position": 6525
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\content-management.service.d.ts",
        "start": 598,
        "end": 611,
        "startLoc": {
          "line": 598,
          "column": 11,
          "position": 6135
        },
        "endLoc": {
          "line": 611,
          "column": 2,
          "position": 6330
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ";\n        direction?: \"asc\" | \"desc\";\n    }>>;\n    pagination: z.ZodOptional<z.ZodObject<{\n        page: z.ZodDefault<z.ZodNumber>;\n        limit: z.ZodDefault<z.ZodNumber>;\n    }, \"strip\", z.ZodTypeAny, {\n        page?: number;\n        limit?: number;\n    }, {\n        page?: number;\n        limit?: number;\n    }>>;\n}, \"strip\", z.ZodTypeAny, {\n    query?: string;\n    sort?: {\n        field?: \"title\"",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\content-management.service.d.ts",
        "start": 632,
        "end": 648,
        "startLoc": {
          "line": 632,
          "column": 14,
          "position": 6674
        },
        "endLoc": {
          "line": 648,
          "column": 8,
          "position": 6825
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\social-media-management.service.d.ts",
        "start": 609,
        "end": 625,
        "startLoc": {
          "line": 609,
          "column": 14,
          "position": 6954
        },
        "endLoc": {
          "line": 625,
          "column": 12,
          "position": 7105
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "{\n        type?: (\"page\" | \"event\" | \"product\" | \"article\" | \"other\" | \"documentation\" | \"news\" | \"tutorial\" | \"faq\" | \"blog\" | \"landing\")[];\n        status?: (\"archived\" | \"draft\" | \"approved\" | \"deleted\" | \"review\" | \"published\")[];\n        tags?: string[];\n        categories?: string[];\n        template?: (\"default\" | \"custom\" | \"product\" | \"news\" | \"blog\" | \"landing\")[];\n        author?: string[];\n        isPublic?: boolean;\n        dateRange?: {\n            from?: Date;\n            to?: Date;\n        };\n        isFeatured?: boolean;\n    };",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\content-management.service.d.ts",
        "start": 651,
        "end": 664,
        "startLoc": {
          "line": 651,
          "column": 2,
          "position": 6869
        },
        "endLoc": {
          "line": 664,
          "column": 2,
          "position": 7062
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\content-management.service.d.ts",
        "start": 598,
        "end": 611,
        "startLoc": {
          "line": 598,
          "column": 2,
          "position": 6137
        },
        "endLoc": {
          "line": 611,
          "column": 2,
          "position": 6330
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ", {\n    query?: string;\n    sort?: {\n        field?: \"title\" | \"createdAt\" | \"updatedAt\" | \"views\" | \"engagement\" | \"publishedAt\";\n        direction?: \"asc\" | \"desc\";\n    };\n    filters?: {\n        type?: (\"page\" | \"event\" | \"product\" | \"article\" | \"other\" | \"documentation\" | \"news\" | \"tutorial\" | \"faq\" | \"blog\" | \"landing\")[];\n        status?: (\"archived\" | \"draft\" | \"approved\" | \"deleted\" | \"review\" | \"published\")[];\n        tags?: string[];\n        categories?: string[];\n        template?: (\"default\" | \"custom\" | \"product\" | \"news\" | \"blog\" | \"landing\")[];\n        author?: string[];\n        isPublic?: boolean;\n        dateRange?: {\n            from?: Date;\n            to?: Date;\n        };\n        isFeatured?: boolean;\n    };\n    pagination?: {\n        page?: number;\n        limit?: number;\n    };\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\content-management.service.d.ts",
        "start": 669,
        "end": 693,
        "startLoc": {
          "line": 669,
          "column": 2,
          "position": 7092
        },
        "endLoc": {
          "line": 693,
          "column": 2,
          "position": 7383
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\content-management.service.d.ts",
        "start": 645,
        "end": 669,
        "startLoc": {
          "line": 645,
          "column": 11,
          "position": 6801
        },
        "endLoc": {
          "line": 669,
          "column": 2,
          "position": 7092
        }
      }
    },
    {
      "format": "typescript",
      "lines": 99,
      "fragment": "export interface CockpitAgentRequest {\n    agentId: string;\n    department: string;\n    action: 'run' | 'pause' | 'stop' | 'status';\n    parameters?: Record<string, any>;\n}\nexport interface CockpitMetricsRequest {\n    department: string;\n    timeframe: string;\n    includeDetails: boolean;\n}\nexport interface CockpitChatRequest {\n    department: string;\n    message: string;\n    context?: {\n        agentId?: string;\n        previousMessages?: string[];\n        includeMetrics?: boolean;\n    };\n}\nexport interface CockpitAgentResponse {\n    agentId: string;\n    department: string;\n    status: 'active' | 'paused' | 'stopped' | 'error';\n    message: string;\n    metrics: {\n        tokens: number;\n        cost: number;\n        latency: number;\n        calls: number;\n    };\n    timestamp: Date;\n}\nexport interface CockpitMetricsResponse {\n    department: string;\n    timeframe: string;\n    summary: {\n        totalCost: number;\n        totalTokens: number;\n        averageLatency: number;\n        successRate: number;\n        activeAgents: number;\n        errorRate: number;\n    };\n    details?: {\n        costBreakdown: Array<{\n            agentId: string;\n            cost: number;\n            tokens: number;\n            calls: number;\n        }>;\n        performanceMetrics: Array<{\n            agentId: string;\n            latency: number;\n            successRate: number;\n            errorRate: number;\n        }>;\n        predictions: {\n            costForecast: {\n                optimistic: number;\n                base: number;\n                pessimistic: number;\n            };\n            usageForecast: {\n                tokens: number;\n                calls: number;\n            };\n            confidence: number;\n        };\n        optimizations: {\n            activeRules: number;\n            savings: number;\n            recommendations: string[];\n        };\n        security: {\n            complianceScore: number;\n            activePolicies: number;\n            incidents: number;\n            lastAudit: Date;\n        };\n    };\n    timestamp: Date;\n}\nexport interface CockpitChatResponse {\n    department: string;\n    message: string;\n    response: string;\n    context: {\n        agentId?: string;\n        metrics?: {\n            tokens: number;\n            cost: number;\n            latency: number;\n        };\n        suggestions: string[];\n    };\n    timestamp: Date;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\cockpit-integration.service.d.ts",
        "start": 1,
        "end": 99,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 99,
          "column": 8,
          "position": 662
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\cockpit-integration.service.ts",
        "start": 39,
        "end": 143,
        "startLoc": {
          "line": 39,
          "column": 1,
          "position": 469
        },
        "endLoc": {
          "line": 143,
          "column": 6,
          "position": 1137
        }
      }
    },
    {
      "format": "typescript",
      "lines": 47,
      "fragment": "export interface CockpitEvent {\n    id: string;\n    type: 'agent_status' | 'metrics_update' | 'system_alert' | 'user_action' | 'department_update';\n    department: string;\n    data: any;\n    timestamp: Date;\n    priority: 'low' | 'medium' | 'high' | 'critical';\n    source: string;\n}\nexport interface CockpitMetrics {\n    department: string;\n    timestamp: Date;\n    metrics: {\n        activeAgents: number;\n        totalCost: number;\n        totalTokens: number;\n        successRate: number;\n        responseTime: number;\n        errorRate: number;\n        uptime: number;\n    };\n    alerts: Array<{\n        type: string;\n        message: string;\n        severity: 'info' | 'warning' | 'error' | 'critical';\n        timestamp: Date;\n    }>;\n}\nexport interface CockpitAgentStatus {\n    agentId: string;\n    department: string;\n    status: 'running' | 'paused' | 'stopped' | 'error' | 'maintenance';\n    lastActivity: Date;\n    metrics: {\n        requestsProcessed: number;\n        averageResponseTime: number;\n        errorCount: number;\n        cost: number;\n    };\n    health: {\n        cpu: number;\n        memory: number;\n        disk: number;\n        network: number;\n    };\n}\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\cockpit-bff-live.service.d.ts",
        "start": 2,
        "end": 48,
        "startLoc": {
          "line": 2,
          "column": 1,
          "position": 13
        },
        "endLoc": {
          "line": 48,
          "column": 7,
          "position": 366
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\cockpit-bff-live.service.ts",
        "start": 71,
        "end": 120,
        "startLoc": {
          "line": 71,
          "column": 1,
          "position": 711
        },
        "endLoc": {
          "line": 120,
          "column": 80,
          "position": 1067
        }
      }
    },
    {
      "format": "typescript",
      "lines": 53,
      "fragment": "export interface ChatMessage {\n    role: 'system' | 'user' | 'assistant';\n    content: string;\n}\nexport interface ChatResponse {\n    content: string;\n    usage: {\n        promptTokens: number;\n        completionTokens: number;\n        totalTokens: number;\n    };\n    finishReason: string;\n    model: string;\n    timestamp: Date;\n}\nexport interface ImageGenerationRequest {\n    prompt: string;\n    size?: '1024x1024' | '1792x1024' | '1024x1792';\n    quality?: 'standard' | 'hd';\n    style?: 'vivid' | 'natural';\n}\nexport interface ImageGenerationResponse {\n    url: string;\n    revisedPrompt?: string;\n    usage: {\n        promptTokens: number;\n        completionTokens: number;\n        totalTokens: number;\n    };\n    timestamp: Date;\n}\nexport interface TTSRequest {\n    text: string;\n    voice?: string;\n    speed?: number;\n    pitch?: number;\n}\nexport interface TTSResponse {\n    audioUrl: string;\n    duration: number;\n    format: string;\n    usage: {\n        characters: number;\n        cost: number;\n    };\n    timestamp: Date;\n}\nexport interface ContentFilterResult {\n    filtered: boolean;\n    reason?: string;\n    severity?: 'low' | 'medium' | 'high';\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\azure-openai.service.d.ts",
        "start": 1,
        "end": 53,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 53,
          "column": 8,
          "position": 367
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\azure-openai.service.ts",
        "start": 3,
        "end": 62,
        "startLoc": {
          "line": 3,
          "column": 1,
          "position": 14
        },
        "endLoc": {
          "line": 62,
          "column": 6,
          "position": 388
        }
      }
    },
    {
      "format": "typescript",
      "lines": 73,
      "fragment": "export interface AzureOpenAIConfig {\n    endpoint: string;\n    apiKey: string;\n    apiVersion: string;\n    chatDeployment: string;\n    imageDeployment?: string;\n    speechKey?: string;\n    speechRegion?: string;\n}\nexport interface ChatMessage {\n    role: 'system' | 'user' | 'assistant';\n    content: string;\n}\nexport interface ChatRequest {\n    messages: ChatMessage[];\n    maxTokens?: number;\n    temperature?: number;\n    topP?: number;\n    frequencyPenalty?: number;\n    presencePenalty?: number;\n    stop?: string[];\n}\nexport interface ChatResponse {\n    id: string;\n    object: string;\n    created: number;\n    model: string;\n    choices: Array<{\n        index: number;\n        message: ChatMessage;\n        finishReason: string;\n    }>;\n    usage: {\n        promptTokens: number;\n        completionTokens: number;\n        totalTokens: number;\n    };\n}\nexport interface ImageRequest {\n    prompt: string;\n    size?: '1024x1024' | '1792x1024' | '1024x1792';\n    quality?: 'standard' | 'hd';\n    style?: 'vivid' | 'natural';\n    n?: number;\n}\nexport interface ImageResponse {\n    created: number;\n    data: Array<{\n        url: string;\n        revisedPrompt?: string;\n    }>;\n}\nexport interface TTSRequest {\n    text: string;\n    voice?: string;\n    language?: string;\n    outputFormat?: 'mp3' | 'wav' | 'ogg';\n    rate?: number;\n    pitch?: number;\n}\nexport interface TTSResponse {\n    audioData: ArrayBuffer;\n    contentType: string;\n    duration: number;\n}\nexport interface AzureServiceHealth {\n    service: string;\n    status: 'healthy' | 'degraded' | 'unhealthy';\n    lastCheck: Date;\n    responseTime?: number;\n    error?: string;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\azure-integration.service.d.ts",
        "start": 1,
        "end": 73,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 73,
          "column": 8,
          "position": 529
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\azure-integration.service.ts",
        "start": 8,
        "end": 89,
        "startLoc": {
          "line": 8,
          "column": 1,
          "position": 34
        },
        "endLoc": {
          "line": 89,
          "column": 6,
          "position": 572
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": "export interface MLModel {\n    id: string;\n    name: string;\n    algorithm: 'linear' | 'random_forest' | 'neural_network' | 'xgboost';\n    accuracy: number;\n    precision: number;\n    recall: number;\n    f1Score: number;\n    trained: boolean;\n    lastTrained: Date;\n    hyperparameters: Record<string, any>;\n}\nexport interface TrainingData {\n    features: number[][];\n    labels: number[];\n    featureNames: string[];\n}\nexport interface PredictionResult {\n    prediction: number;\n    confidence: number;\n    model: string;\n    timestamp: Date;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\automl.service.d.ts",
        "start": 1,
        "end": 24,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 24,
          "column": 8,
          "position": 177
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\automl.service.ts",
        "start": 3,
        "end": 29,
        "startLoc": {
          "line": 3,
          "column": 1,
          "position": 14
        },
        "endLoc": {
          "line": 29,
          "column": 6,
          "position": 194
        }
      }
    },
    {
      "format": "typescript",
      "lines": 55,
      "fragment": "export interface TrainingDataset {\n    id: string;\n    name: string;\n    description: string;\n    type: 'classification' | 'regression' | 'clustering' | 'nlp' | 'computer_vision';\n    size: number;\n    features: string[];\n    targetColumn?: string;\n    createdAt: Date;\n    updatedAt: Date;\n    status: 'uploading' | 'processing' | 'ready' | 'error';\n    metadata: {\n        source: string;\n        format: 'csv' | 'json' | 'parquet' | 'images';\n        encoding?: string;\n        delimiter?: string;\n        hasHeader?: boolean;\n    };\n}\nexport interface TrainingJob {\n    id: string;\n    name: string;\n    description: string;\n    datasetId: string;\n    modelType: 'linear_regression' | 'random_forest' | 'neural_network' | 'xgboost' | 'transformer' | 'cnn' | 'lstm';\n    hyperparameters: Record<string, any>;\n    status: 'pending' | 'running' | 'completed' | 'failed' | 'cancelled';\n    progress: number;\n    startedAt?: Date;\n    completedAt?: Date;\n    estimatedDuration?: number;\n    actualDuration?: number;\n    metrics?: TrainingMetrics;\n    error?: string;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface TrainingMetrics {\n    accuracy?: number;\n    precision?: number;\n    recall?: number;\n    f1Score?: number;\n    mae?: number;\n    mse?: number;\n    rmse?: number;\n    r2Score?: number;\n    loss?: number;\n    validationLoss?: number;\n    epochs?: number;\n    learningRate?: number;\n    batchSize?: number;\n    confusionMatrix?: number[][];\n    featureImportance?: Array<{\n        feature: string;\n        importance: number;",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\ai-training.service.d.ts",
        "start": 1,
        "end": 55,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 55,
          "column": 2,
          "position": 490
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\ai-training.service.ts",
        "start": 8,
        "end": 62,
        "startLoc": {
          "line": 8,
          "column": 1,
          "position": 34
        },
        "endLoc": {
          "line": 62,
          "column": 2,
          "position": 525
        }
      }
    },
    {
      "format": "typescript",
      "lines": 58,
      "fragment": "}>;\n}\nexport interface ModelVersion {\n    id: string;\n    modelId: string;\n    version: string;\n    trainingJobId: string;\n    status: 'training' | 'ready' | 'deployed' | 'archived';\n    metrics: TrainingMetrics;\n    filePath: string;\n    fileSize: number;\n    createdAt: Date;\n    deployedAt?: Date;\n    performance: {\n        accuracy: number;\n        latency: number;\n        throughput: number;\n        memoryUsage: number;\n    };\n}\nexport interface TrainingConfiguration {\n    algorithm: string;\n    hyperparameters: Record<string, any>;\n    validationStrategy: 'holdout' | 'kfold' | 'stratified_kfold';\n    validationSplit: number;\n    testSplit: number;\n    crossValidationFolds?: number;\n    earlyStopping?: {\n        enabled: boolean;\n        patience: number;\n        minDelta: number;\n    };\n    dataAugmentation?: {\n        enabled: boolean;\n        techniques: string[];\n    };\n    preprocessing?: {\n        normalization: boolean;\n        scaling: 'standard' | 'minmax' | 'robust';\n        encoding: 'onehot' | 'label' | 'target';\n        featureSelection: boolean;\n    };\n}\nexport interface TrainingProgress {\n    jobId: string;\n    currentEpoch?: number;\n    totalEpochs?: number;\n    currentBatch?: number;\n    totalBatches?: number;\n    loss: number;\n    validationLoss?: number;\n    accuracy?: number;\n    learningRate: number;\n    estimatedTimeRemaining?: number;\n    status: string;\n    timestamp: Date;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\ai-training.service.d.ts",
        "start": 56,
        "end": 113,
        "startLoc": {
          "line": 56,
          "column": 5,
          "position": 493
        },
        "endLoc": {
          "line": 113,
          "column": 8,
          "position": 914
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\ai-training.service.ts",
        "start": 62,
        "end": 123,
        "startLoc": {
          "line": 62,
          "column": 2,
          "position": 525
        },
        "endLoc": {
          "line": 123,
          "column": 6,
          "position": 950
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "{\n                id: row.id,\n                name: row.name,\n                description: row.description,\n                type: row.type,\n                rules: row.rules,\n                severity: row.severity,\n                isActive: row.is_active,\n                createdAt: row.created_at,\n                updatedAt: row.updated_at\n            }))",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\ai-security-compliance.service.js",
        "start": 222,
        "end": 232,
        "startLoc": {
          "line": 222,
          "column": 2,
          "position": 2031
        },
        "endLoc": {
          "line": 232,
          "column": 2,
          "position": 2116
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\ai-security-compliance.service.js",
        "start": 145,
        "end": 155,
        "startLoc": {
          "line": 145,
          "column": 2,
          "position": 1215
        },
        "endLoc": {
          "line": 155,
          "column": 2,
          "position": 1300
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", {\n    type?: \"audit\" | \"compliance\" | \"access_control\" | \"data_protection\" | \"content_filter\";\n    name?: string;\n    id?: string;\n    severity?: \"critical\" | \"low\" | \"medium\" | \"high\";\n    createdAt?: Date;\n    updatedAt?: Date;\n    description?: string;\n    isActive?: boolean;\n    rules?: {\n        value?: any;\n        field?: string;\n        action?: \"anonymize\" | \"allow\" | \"log\" | \"deny\" | \"encrypt\";\n        operator?: \"range\" | \"equals\" | \"contains\" | \"regex\" | \"exists\";\n    }[];\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\ai-security-compliance.service.d.ts",
        "start": 42,
        "end": 57,
        "startLoc": {
          "line": 42,
          "column": 2,
          "position": 553
        },
        "endLoc": {
          "line": 57,
          "column": 2,
          "position": 727
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\ai-security-compliance.service.d.ts",
        "start": 27,
        "end": 42,
        "startLoc": {
          "line": 27,
          "column": 11,
          "position": 379
        },
        "endLoc": {
          "line": 42,
          "column": 2,
          "position": 553
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ", {\n        details?: Record<string, any>;\n        score?: number;\n        passed?: boolean;\n        violations?: {\n            severity?: \"critical\" | \"low\" | \"medium\" | \"high\";\n            description?: string;\n            rule?: string;\n            recommendation?: string;\n        }[];\n    }>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\ai-security-compliance.service.d.ts",
        "start": 93,
        "end": 103,
        "startLoc": {
          "line": 93,
          "column": 2,
          "position": 1141
        },
        "endLoc": {
          "line": 103,
          "column": 2,
          "position": 1234
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\ai-security-compliance.service.d.ts",
        "start": 83,
        "end": 93,
        "startLoc": {
          "line": 83,
          "column": 11,
          "position": 1048
        },
        "endLoc": {
          "line": 93,
          "column": 2,
          "position": 1141
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "{\n        details?: Record<string, any>;\n        score?: number;\n        passed?: boolean;\n        violations?: {\n            severity?: \"critical\" | \"low\" | \"medium\" | \"high\";\n            description?: string;\n            rule?: string;\n            recommendation?: string;\n        }[];\n    };",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\ai-security-compliance.service.d.ts",
        "start": 112,
        "end": 122,
        "startLoc": {
          "line": 112,
          "column": 2,
          "position": 1331
        },
        "endLoc": {
          "line": 122,
          "column": 2,
          "position": 1422
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\ai-security-compliance.service.d.ts",
        "start": 83,
        "end": 93,
        "startLoc": {
          "line": 83,
          "column": 2,
          "position": 1050
        },
        "endLoc": {
          "line": 93,
          "column": 2,
          "position": 1141
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ", {\n    status?: \"pending\" | \"completed\" | \"failed\" | \"running\";\n    id?: string;\n    createdAt?: Date;\n    completedAt?: Date;\n    result?: {\n        details?: Record<string, any>;\n        score?: number;\n        passed?: boolean;\n        violations?: {\n            severity?: \"critical\" | \"low\" | \"medium\" | \"high\";\n            description?: string;\n            rule?: string;\n            recommendation?: string;\n        }[];\n    };\n    startedAt?: Date;\n    policyId?: string;\n    checkType?: \"data_retention\" | \"access_audit\" | \"content_scan\" | \"encryption_check\" | \"gdpr_compliance\";\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\ai-security-compliance.service.d.ts",
        "start": 126,
        "end": 145,
        "startLoc": {
          "line": 126,
          "column": 2,
          "position": 1465
        },
        "endLoc": {
          "line": 145,
          "column": 2,
          "position": 1652
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\ai-security-compliance.service.d.ts",
        "start": 107,
        "end": 126,
        "startLoc": {
          "line": 107,
          "column": 11,
          "position": 1278
        },
        "endLoc": {
          "line": 126,
          "column": 2,
          "position": 1465
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", {\n    type?: \"data_breach\" | \"unauthorized_access\" | \"system_compromise\" | \"content_violation\" | \"policy_violation\";\n    status?: \"open\" | \"investigating\" | \"resolved\" | \"closed\";\n    id?: string;\n    severity?: \"critical\" | \"low\" | \"medium\" | \"high\";\n    createdAt?: Date;\n    description?: string;\n    resolvedAt?: Date;\n    remediation?: string;\n    reportedAt?: Date;\n    affectedUsers?: string[];\n    affectedData?: string[];\n    detectionMethod?: string;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\ai-security-compliance.service.d.ts",
        "start": 172,
        "end": 185,
        "startLoc": {
          "line": 172,
          "column": 2,
          "position": 2001
        },
        "endLoc": {
          "line": 185,
          "column": 2,
          "position": 2146
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\ai-security-compliance.service.d.ts",
        "start": 159,
        "end": 172,
        "startLoc": {
          "line": 159,
          "column": 11,
          "position": 1856
        },
        "endLoc": {
          "line": 172,
          "column": 2,
          "position": 2001
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", {\n    success?: boolean;\n    userId?: string;\n    timestamp?: Date;\n    details?: Record<string, any>;\n    id?: string;\n    action?: string;\n    userAgent?: string;\n    resourceId?: string;\n    ipAddress?: string;\n    resource?: string;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\ai-security-compliance.service.d.ts",
        "start": 208,
        "end": 219,
        "startLoc": {
          "line": 208,
          "column": 2,
          "position": 2367
        },
        "endLoc": {
          "line": 219,
          "column": 2,
          "position": 2458
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\ai-security-compliance.service.d.ts",
        "start": 197,
        "end": 208,
        "startLoc": {
          "line": 197,
          "column": 11,
          "position": 2276
        },
        "endLoc": {
          "line": 208,
          "column": 2,
          "position": 2367
        }
      }
    },
    {
      "format": "typescript",
      "lines": 51,
      "fragment": "export type SecurityPolicy = z.infer<typeof SecurityPolicySchema>;\nexport type ComplianceCheck = z.infer<typeof ComplianceCheckSchema>;\nexport type SecurityIncident = z.infer<typeof SecurityIncidentSchema>;\nexport type AuditLog = z.infer<typeof AuditLogSchema>;\nexport interface AISecurityRequest {\n    userId: string;\n    organizationId: string;\n    action: string;\n    data: any;\n    context: {\n        ipAddress: string;\n        userAgent: string;\n        sessionId?: string;\n    };\n}\nexport interface AISecurityResponse {\n    allowed: boolean;\n    reason?: string;\n    violations: Array<{\n        rule: string;\n        severity: 'low' | 'medium' | 'high' | 'critical';\n        description: string;\n    }>;\n    recommendations: string[];\n    auditId: string;\n}\nexport interface ComplianceReport {\n    id: string;\n    organizationId: string;\n    reportType: string;\n    period: {\n        start: Date;\n        end: Date;\n    };\n    summary: {\n        totalChecks: number;\n        passedChecks: number;\n        failedChecks: number;\n        overallScore: number;\n    };\n    details: {\n        dataProtection: ComplianceCheck['result'];\n        accessControl: ComplianceCheck['result'];\n        contentFilter: ComplianceCheck['result'];\n        auditTrail: ComplianceCheck['result'];\n        gdprCompliance: ComplianceCheck['result'];\n    };\n    recommendations: string[];\n    generatedAt: Date;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\ai-security-compliance.service.d.ts",
        "start": 220,
        "end": 270,
        "startLoc": {
          "line": 220,
          "column": 1,
          "position": 2461
        },
        "endLoc": {
          "line": 270,
          "column": 8,
          "position": 2861
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\ai-security-compliance.service.ts",
        "start": 73,
        "end": 127,
        "startLoc": {
          "line": 73,
          "column": 1,
          "position": 917
        },
        "endLoc": {
          "line": 127,
          "column": 6,
          "position": 1321
        }
      }
    },
    {
      "format": "javascript",
      "lines": 25,
      "fragment": ".size >= 0\n            };\n            const healthyServices = Object.values(services).filter(Boolean).length;\n            const totalServices = Object.keys(services).length;\n            let status;\n            if (healthyServices === totalServices) {\n                status = 'healthy';\n            }\n            else if (healthyServices >= totalServices * 0.5) {\n                status = 'degraded';\n            }\n            else {\n                status = 'unhealthy';\n            }\n            return {\n                status,\n                services,\n                lastCheck: new Date()\n            };\n        }\n        catch (error) {\n            logger.error('Health check failed', { error: error.message });\n            return {\n                status: 'unhealthy',\n                services: { database: false, monitoring",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\ai-performance-optimization.service.js",
        "start": 728,
        "end": 752,
        "startLoc": {
          "line": 728,
          "column": 12,
          "position": 6480
        },
        "endLoc": {
          "line": 752,
          "column": 11,
          "position": 6690
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\ai-security-compliance.service.js",
        "start": 718,
        "end": 742,
        "startLoc": {
          "line": 718,
          "column": 16,
          "position": 6529
        },
        "endLoc": {
          "line": 742,
          "column": 9,
          "position": 6739
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": ", {\n    name?: string;\n    id?: string;\n    action?: {\n        type?: \"retry\" | \"model_switch\" | \"scale_down\" | \"scale_up\" | \"cache_clear\" | \"fallback\";\n        priority?: \"critical\" | \"low\" | \"medium\" | \"high\";\n        parameters?: Record<string, any>;\n    };\n    createdAt?: Date;\n    updatedAt?: Date;\n    description?: string;\n    isActive?: boolean;\n    condition?: {\n        duration?: number;\n        metric?: string;\n        threshold?: number;\n        operator?: \"gt\" | \"lt\" | \"gte\" | \"lte\" | \"eq\";\n    };\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\ai-performance-optimization.service.d.ts",
        "start": 81,
        "end": 99,
        "startLoc": {
          "line": 81,
          "column": 2,
          "position": 1006
        },
        "endLoc": {
          "line": 99,
          "column": 2,
          "position": 1191
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\ai-performance-optimization.service.d.ts",
        "start": 63,
        "end": 81,
        "startLoc": {
          "line": 63,
          "column": 11,
          "position": 821
        },
        "endLoc": {
          "line": 81,
          "column": 2,
          "position": 1006
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", {\n    message?: string;\n    status?: \"acknowledged\" | \"active\" | \"resolved\";\n    serviceName?: string;\n    metadata?: Record<string, any>;\n    id?: string;\n    severity?: \"critical\" | \"low\" | \"medium\" | \"high\";\n    threshold?: number;\n    ruleId?: string;\n    currentValue?: number;\n    resolvedAt?: Date;\n    triggeredAt?: Date;\n    metricType?: string;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\ai-performance-optimization.service.d.ts",
        "start": 126,
        "end": 139,
        "startLoc": {
          "line": 126,
          "column": 2,
          "position": 1495
        },
        "endLoc": {
          "line": 139,
          "column": 2,
          "position": 1622
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\ai-performance-optimization.service.d.ts",
        "start": 113,
        "end": 126,
        "startLoc": {
          "line": 113,
          "column": 11,
          "position": 1368
        },
        "endLoc": {
          "line": 126,
          "column": 2,
          "position": 1495
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ", {\n    serviceName?: string;\n    period?: {\n        end?: Date;\n        start?: Date;\n    };\n    id?: string;\n    summary?: {\n        errorRate?: number;\n        successRate?: number;\n        totalCost?: number;\n        averageAccuracy?: number;\n        totalRequests?: number;\n        averageLatency?: number;\n        averageThroughput?: number;\n    };\n    reportType?: \"custom\" | \"monthly\" | \"daily\" | \"weekly\";\n    generatedAt?: Date;\n    optimizations?: {\n        type?: string;\n        impact?: number;\n        description?: string;\n        recommendation?: string;\n    }[];\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\ai-performance-optimization.service.d.ts",
        "start": 220,
        "end": 244,
        "startLoc": {
          "line": 220,
          "column": 2,
          "position": 2323
        },
        "endLoc": {
          "line": 244,
          "column": 2,
          "position": 2511
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\ai-performance-optimization.service.d.ts",
        "start": 196,
        "end": 220,
        "startLoc": {
          "line": 196,
          "column": 11,
          "position": 2135
        },
        "endLoc": {
          "line": 220,
          "column": 2,
          "position": 2323
        }
      }
    },
    {
      "format": "typescript",
      "lines": 34,
      "fragment": "export type PerformanceMetric = z.infer<typeof PerformanceMetricSchema>;\nexport type OptimizationRule = z.infer<typeof OptimizationRuleSchema>;\nexport type PerformanceAlert = z.infer<typeof PerformanceAlertSchema>;\nexport type OptimizationReport = z.infer<typeof OptimizationReportSchema>;\nexport interface PerformanceOptimizationRequest {\n    serviceName: string;\n    metricType: string;\n    value: number;\n    metadata?: Record<string, any>;\n}\nexport interface PerformanceOptimizationResponse {\n    optimized: boolean;\n    actions: Array<{\n        type: string;\n        parameters: Record<string, any>;\n        impact: number;\n        description: string;\n    }>;\n    recommendations: string[];\n    metrics: {\n        before: number;\n        after: number;\n        improvement: number;\n    };\n}\nexport interface AutoScalingConfig {\n    minInstances: number;\n    maxInstances: number;\n    targetUtilization: number;\n    scaleUpThreshold: number;\n    scaleDownThreshold: number;\n    cooldownPeriod: number;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\ai-performance-optimization.service.d.ts",
        "start": 245,
        "end": 278,
        "startLoc": {
          "line": 245,
          "column": 1,
          "position": 2514
        },
        "endLoc": {
          "line": 278,
          "column": 8,
          "position": 2789
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\ai-performance-optimization.service.ts",
        "start": 78,
        "end": 115,
        "startLoc": {
          "line": 78,
          "column": 1,
          "position": 903
        },
        "endLoc": {
          "line": 115,
          "column": 6,
          "position": 1182
        }
      }
    },
    {
      "format": "typescript",
      "lines": 132,
      "fragment": "export interface AIModel {\n    id: string;\n    name: string;\n    description: string;\n    type: 'classification' | 'regression' | 'clustering' | 'nlp' | 'computer_vision' | 'generative';\n    algorithm: string;\n    version: string;\n    status: 'development' | 'testing' | 'staging' | 'production' | 'archived';\n    performance: ModelPerformance;\n    metadata: ModelMetadata;\n    createdAt: Date;\n    updatedAt: Date;\n    deployedAt?: Date;\n    archivedAt?: Date;\n}\nexport interface ModelPerformance {\n    accuracy: number;\n    precision: number;\n    recall: number;\n    f1Score: number;\n    latency: number;\n    throughput: number;\n    memoryUsage: number;\n    cpuUsage: number;\n    lastEvaluated: Date;\n    evaluationCount: number;\n    driftScore?: number;\n    dataQuality?: number;\n}\nexport interface ModelMetadata {\n    trainingData: {\n        size: number;\n        features: string[];\n        targetColumn?: string;\n        dataQuality: number;\n        lastUpdated: Date;\n    };\n    hyperparameters: Record<string, any>;\n    architecture?: {\n        layers?: number;\n        neurons?: number[];\n        activation?: string;\n        optimizer?: string;\n        lossFunction?: string;\n    };\n    deployment: {\n        environment: string;\n        replicas: number;\n        resources: {\n            cpu: string;\n            memory: string;\n            gpu?: string;\n        };\n        scaling: {\n            minReplicas: number;\n            maxReplicas: number;\n            targetUtilization: number;\n        };\n    };\n    monitoring: {\n        enabled: boolean;\n        alerts: AlertConfig[];\n        metrics: string[];\n        thresholds: Record<string, number>;\n    };\n}\nexport interface AlertConfig {\n    id: string;\n    name: string;\n    metric: string;\n    condition: 'gt' | 'lt' | 'eq' | 'gte' | 'lte';\n    threshold: number;\n    severity: 'low' | 'medium' | 'high' | 'critical';\n    enabled: boolean;\n    channels: string[];\n    cooldown: number;\n}\nexport interface ModelDeployment {\n    id: string;\n    modelId: string;\n    environment: 'development' | 'staging' | 'production';\n    status: 'pending' | 'deploying' | 'active' | 'failed' | 'scaling' | 'rolling_back';\n    replicas: number;\n    targetReplicas: number;\n    resources: {\n        cpu: string;\n        memory: string;\n        gpu?: string;\n    };\n    endpoints: ModelEndpoint[];\n    health: DeploymentHealth;\n    createdAt: Date;\n    updatedAt: Date;\n    deployedAt?: Date;\n}\nexport interface ModelEndpoint {\n    id: string;\n    name: string;\n    url: string;\n    method: 'GET' | 'POST' | 'PUT' | 'DELETE';\n    authentication: 'none' | 'api_key' | 'jwt' | 'oauth';\n    rateLimit: {\n        requests: number;\n        window: number;\n    };\n    version: string;\n    status: 'active' | 'inactive' | 'maintenance';\n    lastHealthCheck: Date;\n}\nexport interface DeploymentHealth {\n    status: 'healthy' | 'degraded' | 'unhealthy';\n    uptime: number;\n    responseTime: number;\n    errorRate: number;\n    lastCheck: Date;\n    checks: HealthCheck[];\n}\nexport interface HealthCheck {\n    name: string;\n    status: 'pass' | 'fail' | 'warn';\n    message: string;\n    timestamp: Date;\n    duration: number;\n}\nexport interface ModelABTest {\n    id: string;\n    name: string;\n    description: string;\n    modelA: string;\n    modelB: string;\n    trafficSplit: number;\n    status",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\ai-model-management.service.d.ts",
        "start": 1,
        "end": 132,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 132,
          "column": 7,
          "position": 1035
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\ai-model-management.service.ts",
        "start": 8,
        "end": 146,
        "startLoc": {
          "line": 8,
          "column": 1,
          "position": 34
        },
        "endLoc": {
          "line": 146,
          "column": 34,
          "position": 1076
        }
      }
    },
    {
      "format": "typescript",
      "lines": 44,
      "fragment": "status: 'draft' | 'running' | 'completed' | 'cancelled';\n    metrics: ABTestMetrics;\n    startDate?: Date;\n    endDate?: Date;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface ABTestMetrics {\n    modelA: {\n        requests: number;\n        successRate: number;\n        avgResponseTime: number;\n        accuracy: number;\n        businessMetrics: Record<string, number>;\n    };\n    modelB: {\n        requests: number;\n        successRate: number;\n        avgResponseTime: number;\n        accuracy: number;\n        businessMetrics: Record<string, number>;\n    };\n    statisticalSignificance: number;\n    confidence: number;\n    winner?: 'A' | 'B' | 'inconclusive';\n}\nexport interface ModelRollback {\n    id: string;\n    modelId: string;\n    fromVersion: string;\n    toVersion: string;\n    reason: string;\n    status: 'pending' | 'in_progress' | 'completed' | 'failed';\n    initiatedBy: string;\n    createdAt: Date;\n    completedAt?: Date;\n    rollbackData: {\n        deploymentId: string;\n        endpointUrls: string[];\n        trafficRedirected: boolean;\n        dataBackup: boolean;\n    };\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\ai-model-management.service.d.ts",
        "start": 132,
        "end": 175,
        "startLoc": {
          "line": 132,
          "column": 5,
          "position": 1035
        },
        "endLoc": {
          "line": 175,
          "column": 8,
          "position": 1362
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\ai-model-management.service.ts",
        "start": 147,
        "end": 193,
        "startLoc": {
          "line": 147,
          "column": 3,
          "position": 1079
        },
        "endLoc": {
          "line": 193,
          "column": 6,
          "position": 1409
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ");\n        return {\n            department: input.department,\n            timestamp: now,\n            agents,\n            kpis: {\n                totalCost: costMetrics.totalCost,\n                totalTokens: costMetrics.totalTokens,\n                averageLatency: costMetrics.averageLatency,\n                successRate: costMetrics.successRate,\n                activeAgents: agents.filter(a => a.status === 'active').length,\n                errorRate: costMetrics.errorRate,\n            },\n            timeline",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\ai-dashboard-consolidation.service.js",
        "start": 140,
        "end": 153,
        "startLoc": {
          "line": 140,
          "column": 6,
          "position": 1643
        },
        "endLoc": {
          "line": 153,
          "column": 9,
          "position": 1751
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\ai-dashboard-consolidation.service.js",
        "start": 115,
        "end": 128,
        "startLoc": {
          "line": 115,
          "column": 11,
          "position": 1389
        },
        "endLoc": {
          "line": 128,
          "column": 12,
          "position": 1497
        }
      }
    },
    {
      "format": "javascript",
      "lines": 22,
      "fragment": "(department, since) {\n        try {\n            const costData = await db.select()\n                .from(aiCostOptimization)\n                .where(and(eq(aiCostOptimization.department, department), gte(aiCostOptimization.createdAt, since)))\n                .orderBy(desc(aiCostOptimization.createdAt))\n                .limit(100);\n            const totalCost = costData.reduce((sum, record) => sum + (record.costSavings || 0), 0);\n            const totalTokens = costData.reduce((sum, record) => sum + (record.tokensUsed || 0), 0);\n            const averageLatency = costData.reduce((sum, record) => sum + (record.latencyMs || 0), 0) / costData.length || 0;\n            const successRate = costData.filter(r => r.status === 'success').length / costData.length || 0;\n            const errorRate = costData.filter(r => r.status === 'error').length / costData.length || 0;\n            return {\n                totalCost,\n                totalTokens,\n                averageLatency,\n                successRate,\n                errorRate,\n            };\n        }\n        catch (error) {\n            logger.error('Error getting cost metrics'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\ai-dashboard-consolidation.service.js",
        "start": 156,
        "end": 177,
        "startLoc": {
          "line": 156,
          "column": 15,
          "position": 1765
        },
        "endLoc": {
          "line": 177,
          "column": 29,
          "position": 2097
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\cockpit-integration.service.js",
        "start": 245,
        "end": 266,
        "startLoc": {
          "line": 245,
          "column": 12,
          "position": 2703
        },
        "endLoc": {
          "line": 266,
          "column": 26,
          "position": 3035
        }
      }
    },
    {
      "format": "javascript",
      "lines": 18,
      "fragment": ";\n            }\n            const latest = predictionData[0];\n            return {\n                costForecast: {\n                    optimistic: latest.optimisticForecast || 0,\n                    base: latest.baseForecast || 0,\n                    pessimistic: latest.pessimisticForecast || 0,\n                },\n                usageForecast: {\n                    tokens: latest.predictedTokens || 0,\n                    calls: latest.predictedCalls || 0,\n                },\n                confidence: latest.confidenceScore || 0,\n            };\n        }\n        catch (error) {\n            logger.error('Error getting prediction metrics'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\ai-dashboard-consolidation.service.js",
        "start": 195,
        "end": 212,
        "startLoc": {
          "line": 195,
          "column": 10,
          "position": 2252
        },
        "endLoc": {
          "line": 212,
          "column": 35,
          "position": 2394
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\cockpit-integration.service.js",
        "start": 288,
        "end": 305,
        "startLoc": {
          "line": 288,
          "column": 2,
          "position": 3246
        },
        "endLoc": {
          "line": 305,
          "column": 32,
          "position": 3388
        }
      }
    },
    {
      "format": "javascript",
      "lines": 21,
      "fragment": "(department) {\n        try {\n            const optimizationData = await db.select()\n                .from(aiCostOptimization)\n                .where(eq(aiCostOptimization.department, department))\n                .orderBy(desc(aiCostOptimization.createdAt))\n                .limit(10);\n            const activeRules = optimizationData.filter(r => r.status === 'active').length;\n            const savings = optimizationData.reduce((sum, r) => sum + (r.costSavings || 0), 0);\n            const recommendations = optimizationData\n                .filter(r => r.recommendations)\n                .map(r => r.recommendations)\n                .slice(0, 5);\n            return {\n                activeRules,\n                savings,\n                recommendations: recommendations,\n            };\n        }\n        catch (error) {\n            logger.error('Error getting optimization metrics'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\ai-dashboard-consolidation.service.js",
        "start": 216,
        "end": 236,
        "startLoc": {
          "line": 216,
          "column": 23,
          "position": 2424
        },
        "endLoc": {
          "line": 236,
          "column": 37,
          "position": 2645
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\cockpit-integration.service.js",
        "start": 313,
        "end": 333,
        "startLoc": {
          "line": 313,
          "column": 20,
          "position": 3474
        },
        "endLoc": {
          "line": 333,
          "column": 34,
          "position": 3695
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": ";\n            }\n            const latest = securityData[0];\n            return {\n                complianceScore: latest.complianceScore || 0,\n                activePolicies: latest.activePolicies || 0,\n                incidents: latest.securityIncidents || 0,\n                lastAudit: latest.lastAuditDate || new Date(),\n            };\n        }\n        catch (error) {\n            logger.error('Error getting security metrics'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\ai-dashboard-consolidation.service.js",
        "start": 248,
        "end": 259,
        "startLoc": {
          "line": 248,
          "column": 10,
          "position": 2762
        },
        "endLoc": {
          "line": 259,
          "column": 33,
          "position": 2862
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\cockpit-integration.service.js",
        "start": 354,
        "end": 365,
        "startLoc": {
          "line": 354,
          "column": 2,
          "position": 3872
        },
        "endLoc": {
          "line": 365,
          "column": 30,
          "position": 3972
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": ";\n    }\n    getTimeframeMs(timeframe) {\n        switch (timeframe) {\n            case '1h': return 60 * 60 * 1000;\n            case '24h': return 24 * 60 * 60 * 1000;\n            case '7d': return 7 * 24 * 60 * 60 * 1000;\n            case '30d': return 30 * 24 * 60 * 60 * 1000;\n            default: return 24 * 60 * 60 * 1000;\n        }\n    }\n    notifyRealTimeConnections",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\ai-dashboard-consolidation.service.js",
        "start": 337,
        "end": 348,
        "startLoc": {
          "line": 337,
          "column": 7,
          "position": 3710
        },
        "endLoc": {
          "line": 348,
          "column": 26,
          "position": 3856
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\cockpit-integration.service.js",
        "start": 468,
        "end": 479,
        "startLoc": {
          "line": 468,
          "column": 7,
          "position": 4753
        },
        "endLoc": {
          "line": 479,
          "column": 2,
          "position": 4898
        }
      }
    },
    {
      "format": "typescript",
      "lines": 71,
      "fragment": "export interface DashboardMetrics {\n    department: string;\n    timeframe: string;\n    includePredictions: boolean;\n    includeOptimizations: boolean;\n    includeSecurity: boolean;\n}\nexport interface RealTimeMetrics {\n    department: string;\n    agentId?: string;\n}\nexport interface AgentStatus {\n    agentId: string;\n    department: string;\n    status: 'active' | 'paused' | 'error' | 'maintenance';\n    lastActivity: Date;\n    metrics: {\n        tokens: number;\n        cost: number;\n        latency: number;\n        calls: number;\n    };\n}\nexport interface ConsolidatedDashboardData {\n    department: string;\n    timestamp: Date;\n    agents: AgentStatus[];\n    kpis: {\n        totalCost: number;\n        totalTokens: number;\n        averageLatency: number;\n        successRate: number;\n        activeAgents: number;\n        errorRate: number;\n    };\n    predictions?: {\n        costForecast: {\n            optimistic: number;\n            base: number;\n            pessimistic: number;\n        };\n        usageForecast: {\n            tokens: number;\n            calls: number;\n        };\n        confidence: number;\n    };\n    optimizations?: {\n        activeRules: number;\n        savings: number;\n        recommendations: string[];\n    };\n    security?: {\n        complianceScore: number;\n        activePolicies: number;\n        incidents: number;\n        lastAudit: Date;\n    };\n    performance?: {\n        optimizationScore: number;\n        activeOptimizations: number;\n        performanceGains: number;\n    };\n    timeline: Array<{\n        timestamp: Date;\n        type: 'success' | 'warning' | 'error' | 'info';\n        message: string;\n        agentId?: string;\n    }>;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\ai-dashboard-consolidation.service.d.ts",
        "start": 1,
        "end": 71,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 71,
          "column": 8,
          "position": 477
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\ai-dashboard-consolidation.service.ts",
        "start": 42,
        "end": 116,
        "startLoc": {
          "line": 42,
          "column": 1,
          "position": 475
        },
        "endLoc": {
          "line": 116,
          "column": 6,
          "position": 956
        }
      }
    },
    {
      "format": "javascript",
      "lines": 18,
      "fragment": "{\n                id: row.id,\n                name: row.name,\n                description: row.description,\n                type: row.type,\n                algorithm: row.algorithm,\n                features: row.features,\n                hyperparameters: row.hyperparameters,\n                accuracy: parseFloat(row.accuracy),\n                mae: parseFloat(row.mae),\n                mse: parseFloat(row.mse),\n                rmse: parseFloat(row.rmse),\n                r2Score: parseFloat(row.r2_score),\n                isActive: row.is_active,\n                lastTrained: row.last_trained,\n                createdAt: row.created_at,\n                updatedAt: row.updated_at\n            }))",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\ai-cost-prediction.service.js",
        "start": 275,
        "end": 292,
        "startLoc": {
          "line": 275,
          "column": 2,
          "position": 2390
        },
        "endLoc": {
          "line": 292,
          "column": 2,
          "position": 2553
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\ai-cost-prediction.service.js",
        "start": 173,
        "end": 190,
        "startLoc": {
          "line": 173,
          "column": 2,
          "position": 1465
        },
        "endLoc": {
          "line": 190,
          "column": 2,
          "position": 1628
        }
      }
    },
    {
      "format": "javascript",
      "lines": 24,
      "fragment": "};\n            const healthyServices = Object.values(services).filter(Boolean).length;\n            const totalServices = Object.keys(services).length;\n            let status;\n            if (healthyServices === totalServices) {\n                status = 'healthy';\n            }\n            else if (healthyServices >= totalServices * 0.5) {\n                status = 'degraded';\n            }\n            else {\n                status = 'unhealthy';\n            }\n            return {\n                status,\n                services,\n                lastCheck: new Date()\n            };\n        }\n        catch (error) {\n            logger.error('Health check failed', { error: error.message });\n            return {\n                status: 'unhealthy',\n                services: { database: false, models",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\ai-cost-prediction.service.js",
        "start": 730,
        "end": 753,
        "startLoc": {
          "line": 730,
          "column": 13,
          "position": 7355
        },
        "endLoc": {
          "line": 753,
          "column": 7,
          "position": 7557
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\basic-ai\\basic-ai.service.js",
        "start": 362,
        "end": 742,
        "startLoc": {
          "line": 362,
          "column": 9,
          "position": 3000
        },
        "endLoc": {
          "line": 742,
          "column": 9,
          "position": 6739
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ", {\n    type?: \"neural_network\" | \"time_series\" | \"regression\" | \"ensemble\";\n    name?: string;\n    features?: string[];\n    id?: string;\n    createdAt?: Date;\n    updatedAt?: Date;\n    description?: string;\n    isActive?: boolean;\n    accuracy?: number;\n    hyperparameters?: Record<string, any>;\n    algorithm?: \"arima\" | \"linear_regression\" | \"random_forest\" | \"xgboost\" | \"lstm\" | \"prophet\";\n    mae?: number;\n    mse?: number;\n    rmse?: number;\n    r2Score?: number;\n    lastTrained?: Date;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\ai-cost-prediction.service.d.ts",
        "start": 36,
        "end": 53,
        "startLoc": {
          "line": 36,
          "column": 2,
          "position": 404
        },
        "endLoc": {
          "line": 53,
          "column": 2,
          "position": 577
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\ai-cost-prediction.service.d.ts",
        "start": 19,
        "end": 36,
        "startLoc": {
          "line": 19,
          "column": 11,
          "position": 231
        },
        "endLoc": {
          "line": 36,
          "column": 2,
          "position": 404
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ", {\n    organizationId?: string;\n    id?: string;\n    modelId?: string;\n    predictions?: {\n        date?: Date;\n        confidence?: number;\n        factors?: Record<string, number>;\n        predictedCost?: number;\n        lowerBound?: number;\n        upperBound?: number;\n    }[];\n    predictionType?: \"monthly\" | \"daily\" | \"weekly\" | \"quarterly\" | \"yearly\";\n    accuracy?: number;\n    generatedAt?: Date;\n    horizon?: number;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\ai-cost-prediction.service.d.ts",
        "start": 100,
        "end": 116,
        "startLoc": {
          "line": 100,
          "column": 2,
          "position": 1041
        },
        "endLoc": {
          "line": 116,
          "column": 2,
          "position": 1185
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\ai-cost-prediction.service.d.ts",
        "start": 84,
        "end": 100,
        "startLoc": {
          "line": 84,
          "column": 11,
          "position": 897
        },
        "endLoc": {
          "line": 100,
          "column": 2,
          "position": 1041
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ", {\n    organizationId?: string;\n    id?: string;\n    recommendations?: string[];\n    generatedAt?: Date;\n    scenarios?: {\n        name?: string;\n        probability?: number;\n        predictions?: {\n            period?: string;\n            cost?: number;\n            confidence?: number;\n        }[];\n    }[];\n    forecastType?: \"risk_assessment\" | \"budget_planning\" | \"cost_optimization\" | \"capacity_planning\";\n    timeHorizon?: number;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\ai-cost-prediction.service.d.ts",
        "start": 173,
        "end": 189,
        "startLoc": {
          "line": 173,
          "column": 2,
          "position": 1704
        },
        "endLoc": {
          "line": 189,
          "column": 2,
          "position": 1837
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\ai-cost-prediction.service.d.ts",
        "start": 157,
        "end": 173,
        "startLoc": {
          "line": 157,
          "column": 11,
          "position": 1571
        },
        "endLoc": {
          "line": 173,
          "column": 2,
          "position": 1704
        }
      }
    },
    {
      "format": "typescript",
      "lines": 32,
      "fragment": "export type CostPredictionModel = z.infer<typeof CostPredictionModelSchema>;\nexport type CostPrediction = z.infer<typeof CostPredictionSchema>;\nexport type CostForecast = z.infer<typeof CostForecastSchema>;\nexport interface CostPredictionRequest {\n    organizationId: string;\n    predictionType: 'daily' | 'weekly' | 'monthly' | 'quarterly' | 'yearly';\n    horizon: number;\n    features?: Record<string, any>;\n    modelId?: string;\n}\nexport interface CostForecastRequest {\n    organizationId: string;\n    forecastType: 'budget_planning' | 'cost_optimization' | 'capacity_planning' | 'risk_assessment';\n    timeHorizon: number;\n    scenarios?: string[];\n    confidence?: number;\n}\nexport interface ModelTrainingData {\n    organizationId: string;\n    historicalData: Array<{\n        date: Date;\n        cost: number;\n        tokens: number;\n        requests: number;\n        models: string[];\n        providers: string[];\n        features: Record<string, number>;\n    }>;\n    targetVariable: string;\n    features: string[];\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\ai-cost-prediction.service.d.ts",
        "start": 190,
        "end": 221,
        "startLoc": {
          "line": 190,
          "column": 1,
          "position": 1840
        },
        "endLoc": {
          "line": 221,
          "column": 8,
          "position": 2131
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\ai-cost-prediction.service.ts",
        "start": 62,
        "end": 97,
        "startLoc": {
          "line": 62,
          "column": 1,
          "position": 794
        },
        "endLoc": {
          "line": 97,
          "column": 6,
          "position": 1089
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": ";\n    constructor() {\n        this.db = getDatabaseService();\n        this.initializeService();\n    }\n    async initializeService() {\n        try {\n            await this.createTables();\n            await this.loadOptimizationRules();\n            await this.initializeDefaultRules();\n            await this.startCostMonitoring",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\ai-cost-optimization.service.js",
        "start": 84,
        "end": 94,
        "startLoc": {
          "line": 84,
          "column": 2,
          "position": 1121
        },
        "endLoc": {
          "line": 94,
          "column": 20,
          "position": 1202
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\ai-performance-optimization.service.js",
        "start": 75,
        "end": 85,
        "startLoc": {
          "line": 75,
          "column": 2,
          "position": 938
        },
        "endLoc": {
          "line": 85,
          "column": 27,
          "position": 1019
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "{\n                id: row.id,\n                name: row.name,\n                description: row.description,\n                type: row.type,\n                condition: row.condition,\n                action: row.action,\n                isActive: row.is_active,\n                createdAt: row.created_at,\n                updatedAt: row.updated_at\n            }))",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\ai-cost-optimization.service.js",
        "start": 299,
        "end": 309,
        "startLoc": {
          "line": 299,
          "column": 2,
          "position": 2537
        },
        "endLoc": {
          "line": 309,
          "column": 2,
          "position": 2622
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\ai-cost-optimization.service.js",
        "start": 159,
        "end": 169,
        "startLoc": {
          "line": 159,
          "column": 2,
          "position": 1404
        },
        "endLoc": {
          "line": 169,
          "column": 2,
          "position": 1489
        }
      }
    },
    {
      "format": "javascript",
      "lines": 26,
      "fragment": ",\n                monitoring: true\n            };\n            const healthyServices = Object.values(services).filter(Boolean).length;\n            const totalServices = Object.keys(services).length;\n            let status;\n            if (healthyServices === totalServices) {\n                status = 'healthy';\n            }\n            else if (healthyServices >= totalServices * 0.5) {\n                status = 'degraded';\n            }\n            else {\n                status = 'unhealthy';\n            }\n            return {\n                status,\n                services,\n                lastCheck: new Date()\n            };\n        }\n        catch (error) {\n            logger.error('Health check failed', { error: error.message });\n            return {\n                status: 'unhealthy',\n                services: { database: false, rules",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\ai-cost-optimization.service.js",
        "start": 779,
        "end": 804,
        "startLoc": {
          "line": 779,
          "column": 2,
          "position": 7213
        },
        "endLoc": {
          "line": 804,
          "column": 6,
          "position": 7424
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\ai-cost-prediction.service.js",
        "start": 728,
        "end": 742,
        "startLoc": {
          "line": 728,
          "column": 5,
          "position": 7346
        },
        "endLoc": {
          "line": 742,
          "column": 9,
          "position": 6739
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ";\n        priority?: \"critical\" | \"low\" | \"medium\" | \"high\";\n        parameters?: Record<string, any>;\n    };\n    createdAt?: Date;\n    updatedAt?: Date;\n    description?: string;\n    isActive?: boolean;\n    condition?: {\n        duration?: number;\n        metric?: \"cost_per_request\"",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\ai-cost-optimization.service.d.ts",
        "start": 44,
        "end": 54,
        "startLoc": {
          "line": 44,
          "column": 13,
          "position": 662
        },
        "endLoc": {
          "line": 54,
          "column": 19,
          "position": 754
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\ai-performance-optimization.service.d.ts",
        "start": 67,
        "end": 77,
        "startLoc": {
          "line": 67,
          "column": 11,
          "position": 874
        },
        "endLoc": {
          "line": 77,
          "column": 7,
          "position": 966
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ", {\n    type?: \"auto_scaling\" | \"budget_alert\" | \"model_switch\" | \"provider_switch\" | \"request_batching\" | \"cache_optimization\";\n    name?: string;\n    id?: string;\n    action?: {\n        type?: \"send_alert\" | \"switch_to_cheaper_model\" | \"switch_to_cheaper_provider\" | \"enable_batching\" | \"enable_caching\" | \"scale_down\";\n        priority?: \"critical\" | \"low\" | \"medium\" | \"high\";\n        parameters?: Record<string, any>;\n    };\n    createdAt?: Date;\n    updatedAt?: Date;\n    description?: string;\n    isActive?: boolean;\n    condition?: {\n        duration?: number;\n        metric?: \"cost_per_request\" | \"daily_cost\" | \"monthly_cost\" | \"cost_efficiency\" | \"token_usage\";\n        threshold?: number;\n        operator?: \"gt\" | \"lt\" | \"gte\" | \"lte\" | \"eq\";\n    };\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\ai-cost-optimization.service.d.ts",
        "start": 58,
        "end": 77,
        "startLoc": {
          "line": 58,
          "column": 2,
          "position": 810
        },
        "endLoc": {
          "line": 77,
          "column": 2,
          "position": 1039
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\ai-cost-optimization.service.d.ts",
        "start": 39,
        "end": 58,
        "startLoc": {
          "line": 39,
          "column": 11,
          "position": 581
        },
        "endLoc": {
          "line": 58,
          "column": 2,
          "position": 810
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ": z.ZodEnum<[\"daily\", \"weekly\", \"monthly\", \"custom\"]>;\n    period: z.ZodObject<{\n        start: z.ZodDate;\n        end: z.ZodDate;\n    }, \"strip\", z.ZodTypeAny, {\n        end?: Date;\n        start?: Date;\n    }, {\n        end?: Date;\n        start?: Date;\n    }>;\n    summary: z.ZodObject<{\n        totalCost",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\ai-cost-optimization.service.d.ts",
        "start": 81,
        "end": 93,
        "startLoc": {
          "line": 81,
          "column": 13,
          "position": 1075
        },
        "endLoc": {
          "line": 93,
          "column": 10,
          "position": 1192
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\ai-performance-optimization.service.d.ts",
        "start": 143,
        "end": 155,
        "startLoc": {
          "line": 143,
          "column": 11,
          "position": 1658
        },
        "endLoc": {
          "line": 155,
          "column": 14,
          "position": 1775
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ", {\n        totalCost?: number;\n        totalRequests?: number;\n        topModels?: {\n            model?: string;\n            cost?: number;\n            efficiency?: number;\n            requests?: number;\n        }[];\n        averageCostPerRequest?: number;\n        costEfficiency?: number;\n        topProviders?: {\n            provider?: string;\n            cost?: number;\n            efficiency?: number;\n            requests?: number;\n        }[];\n    }>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\ai-cost-optimization.service.d.ts",
        "start": 146,
        "end": 163,
        "startLoc": {
          "line": 146,
          "column": 2,
          "position": 1651
        },
        "endLoc": {
          "line": 163,
          "column": 2,
          "position": 1779
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\ai-cost-optimization.service.d.ts",
        "start": 129,
        "end": 146,
        "startLoc": {
          "line": 129,
          "column": 11,
          "position": 1523
        },
        "endLoc": {
          "line": 146,
          "column": 2,
          "position": 1651
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "{\n        totalCost?: number;\n        totalRequests?: number;\n        topModels?: {\n            model?: string;\n            cost?: number;\n            efficiency?: number;\n            requests?: number;\n        }[];\n        averageCostPerRequest?: number;\n        costEfficiency?: number;\n        topProviders?: {\n            provider?: string;\n            cost?: number;\n            efficiency?: number;\n            requests?: number;\n        }[];\n    };",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\ai-cost-optimization.service.d.ts",
        "start": 188,
        "end": 205,
        "startLoc": {
          "line": 188,
          "column": 2,
          "position": 1995
        },
        "endLoc": {
          "line": 205,
          "column": 2,
          "position": 2121
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\ai-cost-optimization.service.d.ts",
        "start": 129,
        "end": 146,
        "startLoc": {
          "line": 129,
          "column": 2,
          "position": 1525
        },
        "endLoc": {
          "line": 146,
          "column": 2,
          "position": 1651
        }
      }
    },
    {
      "format": "typescript",
      "lines": 34,
      "fragment": ", {\n    organizationId?: string;\n    period?: {\n        end?: Date;\n        start?: Date;\n    };\n    id?: string;\n    summary?: {\n        totalCost?: number;\n        totalRequests?: number;\n        topModels?: {\n            model?: string;\n            cost?: number;\n            efficiency?: number;\n            requests?: number;\n        }[];\n        averageCostPerRequest?: number;\n        costEfficiency?: number;\n        topProviders?: {\n            provider?: string;\n            cost?: number;\n            efficiency?: number;\n            requests?: number;\n        }[];\n    };\n    recommendations?: {\n        type?: string;\n        impact?: number;\n        description?: string;\n        implementation?: string;\n    }[];\n    generatedAt?: Date;\n    analysisType?: \"custom\" | \"monthly\" | \"daily\" | \"weekly\";\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\ai-cost-optimization.service.d.ts",
        "start": 214,
        "end": 247,
        "startLoc": {
          "line": 214,
          "column": 2,
          "position": 2197
        },
        "endLoc": {
          "line": 247,
          "column": 2,
          "position": 2451
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\ai-cost-optimization.service.d.ts",
        "start": 181,
        "end": 214,
        "startLoc": {
          "line": 181,
          "column": 11,
          "position": 1943
        },
        "endLoc": {
          "line": 214,
          "column": 2,
          "position": 2197
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", {\n    message?: string;\n    type?: \"budget_warning\" | \"budget_exceeded\" | \"optimization_opportunity\" | \"cost_spike\" | \"inefficiency_detected\";\n    status?: \"acknowledged\" | \"active\" | \"resolved\";\n    organizationId?: string;\n    metadata?: Record<string, any>;\n    id?: string;\n    severity?: \"critical\" | \"low\" | \"medium\" | \"high\";\n    createdAt?: Date;\n    threshold?: number;\n    currentValue?: number;\n    resolvedAt?: Date;\n    triggeredAt?: Date;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\ai-cost-optimization.service.d.ts",
        "start": 274,
        "end": 287,
        "startLoc": {
          "line": 274,
          "column": 2,
          "position": 2784
        },
        "endLoc": {
          "line": 287,
          "column": 2,
          "position": 2927
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\ai-cost-optimization.service.d.ts",
        "start": 261,
        "end": 274,
        "startLoc": {
          "line": 261,
          "column": 11,
          "position": 2641
        },
        "endLoc": {
          "line": 274,
          "column": 2,
          "position": 2784
        }
      }
    },
    {
      "format": "typescript",
      "lines": 66,
      "fragment": "export interface ObservabilityMetrics {\n    logs: number;\n    traces: number;\n    metrics: number;\n    alerts: number;\n    errors: number;\n    warnings: number;\n    performance: {\n        avgResponseTime: number;\n        p95ResponseTime: number;\n        p99ResponseTime: number;\n        throughput: number;\n        errorRate: number;\n    };\n    system: {\n        cpuUsage: number;\n        memoryUsage: number;\n        diskUsage: number;\n        networkLatency: number;\n    };\n}\nexport interface LogEntry {\n    id: string;\n    timestamp: Date;\n    level: 'debug' | 'info' | 'warn' | 'error' | 'fatal';\n    message: string;\n    service: string;\n    userId?: string;\n    requestId?: string;\n    traceId?: string;\n    spanId?: string;\n    metadata: Record<string, any>;\n}\nexport interface TraceSpan {\n    id: string;\n    traceId: string;\n    parentId?: string;\n    operationName: string;\n    service: string;\n    startTime: Date;\n    endTime?: Date;\n    duration?: number;\n    tags: Record<string, any>;\n    logs: Array<{\n        timestamp: Date;\n        fields: Record<string, any>;\n    }>;\n    status: 'started' | 'finished' | 'error';\n}\nexport interface AlertRule {\n    id: string;\n    name: string;\n    description: string;\n    enabled: boolean;\n    conditions: AlertCondition[];\n    actions: AlertAction[];\n    severity: 'low' | 'medium' | 'high' | 'critical';\n    lastTriggered?: Date;\n    cooldownMinutes: number;\n}\nexport interface AlertCondition {\n    metric: string;\n    operator: 'gt' | 'lt' | 'eq' | 'ne' | 'gte' | 'lte';\n    threshold: number;\n    timeWindow: number;\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\advanced-observability.service.d.ts",
        "start": 1,
        "end": 66,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 66,
          "column": 2,
          "position": 517
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\advanced-observability.service.ts",
        "start": 16,
        "end": 84,
        "startLoc": {
          "line": 16,
          "column": 1,
          "position": 17
        },
        "endLoc": {
          "line": 84,
          "column": 11,
          "position": 538
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": "}\nexport interface AlertAction {\n    type: 'email' | 'sms' | 'webhook' | 'slack' | 'pagerduty';\n    target: string;\n    template?: string;\n}\nexport interface Alert {\n    id: string;\n    ruleId: string;\n    severity: 'low' | 'medium' | 'high' | 'critical';\n    message: string;\n    status: 'firing' | 'resolved' | 'acknowledged';\n    triggeredAt: Date;\n    resolvedAt?: Date;\n    acknowledgedAt?: Date;\n    acknowledgedBy?: string;\n    metadata: Record<string, any>;\n}\nexport interface Dashboard {\n    id: string;\n    name: string;\n    description?: string;\n    widgets: DashboardWidget[];\n    refreshInterval: number;\n    createdAt",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\advanced-observability.service.d.ts",
        "start": 66,
        "end": 90,
        "startLoc": {
          "line": 66,
          "column": 1,
          "position": 517
        },
        "endLoc": {
          "line": 90,
          "column": 10,
          "position": 723
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\advanced-observability.service.ts",
        "start": 85,
        "end": 111,
        "startLoc": {
          "line": 85,
          "column": 1,
          "position": 540
        },
        "endLoc": {
          "line": 111,
          "column": 11,
          "position": 748
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "createdAt: Date;\n    updatedAt: Date;\n}\nexport interface DashboardWidget {\n    id: string;\n    type: 'metric' | 'chart' | 'table' | 'alert' | 'log';\n    title: string;\n    position: {\n        x: number;\n        y: number;\n        w: number;\n        h: number;",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\advanced-observability.service.d.ts",
        "start": 90,
        "end": 101,
        "startLoc": {
          "line": 90,
          "column": 5,
          "position": 723
        },
        "endLoc": {
          "line": 101,
          "column": 2,
          "position": 815
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\advanced-observability.service.ts",
        "start": 112,
        "end": 120,
        "startLoc": {
          "line": 112,
          "column": 3,
          "position": 751
        },
        "endLoc": {
          "line": 120,
          "column": 2,
          "position": 841
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "};\n    config: Record<string, any>;\n}\nexport interface PerformanceAnalysis {\n    service: string;\n    timeRange: string;\n    metrics: {\n        avgResponseTime: number;\n        p95ResponseTime: number;\n        p99ResponseTime: number;\n        throughput: number;\n        errorRate: number;\n        availability: number;\n    };\n    trends: {\n        responseTime: 'improving' | 'degrading' | 'stable';\n        throughput: 'increasing' | 'decreasing' | 'stable';\n        errorRate: 'improving' | 'degrading' | 'stable';\n    };\n    recommendations: string[];\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\advanced-observability.service.d.ts",
        "start": 102,
        "end": 123,
        "startLoc": {
          "line": 102,
          "column": 5,
          "position": 818
        },
        "endLoc": {
          "line": 123,
          "column": 8,
          "position": 978
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\advanced-observability.service.ts",
        "start": 120,
        "end": 143,
        "startLoc": {
          "line": 120,
          "column": 2,
          "position": 841
        },
        "endLoc": {
          "line": 143,
          "column": 6,
          "position": 1003
        }
      }
    },
    {
      "format": "typescript",
      "lines": 86,
      "fragment": ";\nexport type DeploymentStatus = z.infer<typeof DeploymentStatusSchema>;\nexport type Environment = z.infer<typeof EnvironmentSchema>;\nexport type DeploymentStrategy = z.infer<typeof DeploymentStrategySchema>;\nexport interface Deployment {\n    id: string;\n    version: string;\n    environment: Environment;\n    strategy: DeploymentStrategy;\n    status: DeploymentStatus;\n    startedAt: Date;\n    completedAt?: Date;\n    rollbackAt?: Date;\n    triggeredBy: string;\n    commitSha: string;\n    branch: string;\n    buildNumber: string;\n    artifacts: {\n        api: string;\n        web: string;\n        workers: string;\n    };\n    healthChecks: HealthCheck[];\n    metrics: DeploymentMetrics;\n    rollbackReason?: string;\n    metadata: Record<string, any>;\n}\nexport interface HealthCheck {\n    name: string;\n    url: string;\n    status: 'pending' | 'passing' | 'failing';\n    lastChecked: Date;\n    responseTime?: number;\n    error?: string;\n}\nexport interface DeploymentMetrics {\n    deploymentTime: number;\n    downtime: number;\n    errorRate: number;\n    responseTime: number;\n    throughput: number;\n    resourceUsage: {\n        cpu: number;\n        memory: number;\n        disk: number;\n    };\n}\nexport interface DeploymentConfig {\n    environment: Environment;\n    strategy: DeploymentStrategy;\n    healthCheckTimeout: number;\n    rollbackThreshold: number;\n    canaryPercentage?: number;\n    autoRollback: boolean;\n    notifications: {\n        slack?: string;\n        teams?: string;\n        email?: string[];\n    };\n}\nexport interface BuildArtifact {\n    id: string;\n    name: string;\n    version: string;\n    type: 'api' | 'web' | 'workers' | 'infrastructure';\n    size: number;\n    checksum: string;\n    createdAt: Date;\n    metadata: Record<string, any>;\n}\nexport interface TestResult {\n    id: string;\n    type: 'unit' | 'integration' | 'e2e' | 'performance' | 'security';\n    status: 'passed' | 'failed' | 'skipped';\n    duration: number;\n    coverage?: number;\n    results: {\n        total: number;\n        passed: number;\n        failed: number;\n        skipped: number;\n    };\n    artifacts: string[];\n    createdAt: Date;\n}\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\services\\advanced-cicd.service.d.ts",
        "start": 4,
        "end": 89,
        "startLoc": {
          "line": 4,
          "column": 2,
          "position": 89
        },
        "endLoc": {
          "line": 89,
          "column": 7,
          "position": 744
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\services\\advanced-cicd.service.ts",
        "start": 17,
        "end": 110,
        "startLoc": {
          "line": 17,
          "column": 2,
          "position": 110
        },
        "endLoc": {
          "line": 110,
          "column": 80,
          "position": 773
        }
      }
    },
    {
      "format": "typescript",
      "lines": 75,
      "fragment": "export interface SecurityConfig {\n    jwt: {\n        secret: string;\n        expiresIn: string;\n        refreshExpiresIn: string;\n        algorithm: string;\n    };\n    mfa: {\n        enabled: boolean;\n        issuer: string;\n        window: number;\n        backupCodes: number;\n    };\n    csrf: {\n        enabled: boolean;\n        secret: string;\n        tokenLength: number;\n        cookieName: string;\n    };\n    rateLimit: {\n        enabled: boolean;\n        windowMs: number;\n        maxRequests: number;\n        skipSuccessfulRequests: boolean;\n    };\n    inputSanitization: {\n        enabled: boolean;\n        maxLength: number;\n        allowedTags: string[];\n        blockedPatterns: string[];\n    };\n    threatDetection: {\n        enabled: boolean;\n        suspiciousPatterns: string[];\n        maxFailedAttempts: number;\n        lockoutDuration: number;\n    };\n}\nexport interface UserSession {\n    userId: string;\n    organizationId: string;\n    roles: string[];\n    permissions: string[];\n    mfaVerified: boolean;\n    lastActivity: Date;\n    ipAddress: string;\n    userAgent: string;\n    sessionId: string;\n}\nexport interface SecurityEvent {\n    type: 'login' | 'logout' | 'mfa_attempt' | 'mfa_success' | 'mfa_failure' | 'permission_denied' | 'suspicious_activity' | 'csrf_attack' | 'rate_limit_exceeded' | 'input_sanitization' | 'threat_detected';\n    userId?: string;\n    organizationId?: string;\n    ipAddress: string;\n    userAgent: string;\n    details: any;\n    severity: 'low' | 'medium' | 'high' | 'critical';\n    timestamp: Date;\n}\nexport interface MFASecret {\n    secret: string;\n    qrCode: string;\n    backupCodes: string[];\n    createdAt: Date;\n}\nexport interface ThreatDetection {\n    ipAddress: string;\n    threatLevel: 'low' | 'medium' | 'high' | 'critical';\n    attackTypes: string[];\n    attempts: number;\n    firstSeen: Date;\n    lastSeen: Date;\n    blocked: boolean;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\security\\security-manager.service.d.ts",
        "start": 1,
        "end": 75,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 75,
          "column": 8,
          "position": 556
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\security\\security-manager.service.ts",
        "start": 14,
        "end": 95,
        "startLoc": {
          "line": 14,
          "column": 1,
          "position": 48
        },
        "endLoc": {
          "line": 95,
          "column": 6,
          "position": 613
        }
      }
    },
    {
      "format": "typescript",
      "lines": 68,
      "fragment": "export interface Role {\n    id: string;\n    name: string;\n    description: string;\n    permissions: string[];\n    inheritedRoles: string[];\n    organizationId: string;\n    isSystem: boolean;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface Permission {\n    id: string;\n    name: string;\n    resource: string;\n    action: string;\n    conditions?: string[];\n    description: string;\n    category: string;\n}\nexport interface UserRole {\n    userId: string;\n    roleId: string;\n    organizationId: string;\n    assignedBy: string;\n    assignedAt: Date;\n    expiresAt?: Date;\n    isActive: boolean;\n}\nexport interface AccessPolicy {\n    id: string;\n    name: string;\n    description: string;\n    rules: AccessRule[];\n    organizationId: string;\n    isActive: boolean;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface AccessRule {\n    id: string;\n    resource: string;\n    actions: string[];\n    conditions: string[];\n    effect: 'allow' | 'deny';\n    priority: number;\n}\nexport interface AccessDecision {\n    allowed: boolean;\n    reason: string;\n    matchedRules: string[];\n    evaluatedPolicies: string[];\n    timestamp: Date;\n}\nexport interface AuditLog {\n    id: string;\n    userId: string;\n    organizationId: string;\n    action: string;\n    resource: string;\n    result: 'allowed' | 'denied';\n    reason: string;\n    ipAddress: string;\n    userAgent: string;\n    timestamp: Date;\n    metadata: any;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\security\\rbac.service.d.ts",
        "start": 1,
        "end": 68,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 68,
          "column": 8,
          "position": 469
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\security\\rbac.service.ts",
        "start": 11,
        "end": 85,
        "startLoc": {
          "line": 11,
          "column": 1,
          "position": 30
        },
        "endLoc": {
          "line": 85,
          "column": 6,
          "position": 506
        }
      }
    },
    {
      "format": "typescript",
      "lines": 38,
      "fragment": "export interface MFAMethod {\n    id: string;\n    type: 'totp' | 'sms' | 'email' | 'push' | 'backup';\n    name: string;\n    enabled: boolean;\n    verified: boolean;\n    createdAt: Date;\n    lastUsed?: Date;\n}\nexport interface MFASession {\n    userId: string;\n    sessionId: string;\n    methods: MFAMethod[];\n    requiredMethods: string[];\n    completedMethods: string[];\n    expiresAt: Date;\n    ipAddress: string;\n    userAgent: string;\n}\nexport interface MFACode {\n    code: string;\n    type: 'totp' | 'sms' | 'email' | 'backup';\n    expiresAt: Date;\n    attempts: number;\n    maxAttempts: number;\n    used: boolean;\n}\nexport interface MFANotification {\n    id: string;\n    userId: string;\n    type: 'login_attempt' | 'mfa_required' | 'mfa_success' | 'mfa_failure' | 'new_device';\n    title: string;\n    message: string;\n    data: any;\n    read: boolean;\n    createdAt: Date;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\security\\mfa.service.d.ts",
        "start": 1,
        "end": 38,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 38,
          "column": 8,
          "position": 296
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\security\\mfa.service.ts",
        "start": 12,
        "end": 53,
        "startLoc": {
          "line": 12,
          "column": 1,
          "position": 39
        },
        "endLoc": {
          "line": 53,
          "column": 6,
          "position": 339
        }
      }
    },
    {
      "format": "javascript",
      "lines": 22,
      "fragment": ", {\n            error: error instanceof Error ? error.message : 'Unknown error',\n            body: req.body\n        });\n        if (error instanceof z.ZodError) {\n            res.status(400).json({\n                success: false,\n                error: 'Invalid request data',\n                details: error.errors,\n                timestamp: new Date().toISOString()\n            });\n        }\n        else {\n            res.status(500).json({\n                success: false,\n                error: error instanceof Error ? error.message : 'Unknown error',\n                timestamp: new Date().toISOString()\n            });\n        }\n    }\n});\nrouter.post('/cron/manage'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\workers-integration.js",
        "start": 111,
        "end": 132,
        "startLoc": {
          "line": 111,
          "column": 53,
          "position": 1176
        },
        "endLoc": {
          "line": 132,
          "column": 15,
          "position": 1364
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\workers-integration.js",
        "start": 54,
        "end": 75,
        "startLoc": {
          "line": 54,
          "column": 47,
          "position": 630
        },
        "endLoc": {
          "line": 75,
          "column": 23,
          "position": 818
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ",\n                    result: result.result,\n                    serviceId: result.serviceId,\n                    responseTime: result.responseTime\n                },\n                timestamp: new Date().toISOString()\n            });\n        }\n        else {\n            res.status(500).json({\n                success: false,\n                error: result.error,\n                jobId",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\workers-integration.js",
        "start": 146,
        "end": 158,
        "startLoc": {
          "line": 146,
          "column": 7,
          "position": 1507
        },
        "endLoc": {
          "line": 158,
          "column": 6,
          "position": 1595
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\workers-integration.js",
        "start": 36,
        "end": 48,
        "startLoc": {
          "line": 36,
          "column": 10,
          "position": 494
        },
        "endLoc": {
          "line": 48,
          "column": 10,
          "position": 582
        }
      }
    },
    {
      "format": "javascript",
      "lines": 22,
      "fragment": ", {\n            error: error instanceof Error ? error.message : 'Unknown error',\n            body: req.body\n        });\n        if (error instanceof z.ZodError) {\n            res.status(400).json({\n                success: false,\n                error: 'Invalid request data',\n                details: error.errors,\n                timestamp: new Date().toISOString()\n            });\n        }\n        else {\n            res.status(500).json({\n                success: false,\n                error: error instanceof Error ? error.message : 'Unknown error',\n                timestamp: new Date().toISOString()\n            });\n        }\n    }\n});\nrouter.get",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\workers-integration.js",
        "start": 164,
        "end": 185,
        "startLoc": {
          "line": 164,
          "column": 49,
          "position": 1643
        },
        "endLoc": {
          "line": 185,
          "column": 4,
          "position": 1829
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\workers-integration.js",
        "start": 54,
        "end": 75,
        "startLoc": {
          "line": 54,
          "column": 47,
          "position": 630
        },
        "endLoc": {
          "line": 75,
          "column": 5,
          "position": 816
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": ", {\n            error: error instanceof Error ? error.message : 'Unknown error'\n        });\n        res.status(500).json({\n            success: false,\n            error: error instanceof Error ? error.message : 'Unknown error',\n            timestamp: new Date().toISOString()\n        });\n    }\n});\nrouter.post",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\workers-integration.js",
        "start": 219,
        "end": 229,
        "startLoc": {
          "line": 219,
          "column": 39,
          "position": 2147
        },
        "endLoc": {
          "line": 229,
          "column": 5,
          "position": 2244
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\workers-integration.js",
        "start": 199,
        "end": 209,
        "startLoc": {
          "line": 199,
          "column": 36,
          "position": 1955
        },
        "endLoc": {
          "line": 209,
          "column": 4,
          "position": 2052
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ",\n            timestamp: new Date().toISOString()\n        });\n    }\n    catch (error) {\n        structuredLogger.error('Error getting supplier performance', { error });\n        res.status(400).json({\n            success: false,\n            error: 'Invalid request data',\n            details: error.errors\n        });\n    }\n});\nsupplierScorecardRouter.get('/comparisons'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\supplier-scorecard.js",
        "start": 280,
        "end": 293,
        "startLoc": {
          "line": 280,
          "column": 12,
          "position": 3614
        },
        "endLoc": {
          "line": 293,
          "column": 15,
          "position": 3713
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\supplier-scorecard.js",
        "start": 254,
        "end": 267,
        "startLoc": {
          "line": 254,
          "column": 2,
          "position": 3326
        },
        "endLoc": {
          "line": 267,
          "column": 27,
          "position": 3425
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ");\n        if (!receipt) {\n            return res.status(404).json({\n                success: false,\n                error: 'Receipt not found'\n            });\n        }\n        res.json({\n            success: true,\n            data: receipt,\n            timestamp: new Date().toISOString()\n        });\n    }\n    catch (error) {\n        structuredLogger.error('Error reconciling Stripe receipt'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\stripe-receipts.js",
        "start": 162,
        "end": 176,
        "startLoc": {
          "line": 162,
          "column": 6,
          "position": 1916
        },
        "endLoc": {
          "line": 176,
          "column": 35,
          "position": 2021
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\stripe-receipts.js",
        "start": 98,
        "end": 112,
        "startLoc": {
          "line": 98,
          "column": 3,
          "position": 1290
        },
        "endLoc": {
          "line": 112,
          "column": 31,
          "position": 1395
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ",\n    username: z.string().min(1).max(100),\n    displayName: z.string().min(1).max(255),\n    profileUrl: z.string().url(),\n    avatarUrl: z.string().url().optional(),\n    bio: z.string().optional(),\n    followersCount: z.number().default(0),\n    followingCount: z.number().default(0),\n    postsCount: z.number().default(0),\n    isVerified: z.boolean().default(false),\n    isActive: z.boolean().default(true),\n    accessToken: z.string().optional(),\n    refreshToken: z.string().optional(),\n    tokenExpiresAt: z.string",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\social-media-management.js",
        "start": 7,
        "end": 20,
        "startLoc": {
          "line": 7,
          "column": 2,
          "position": 114
        },
        "endLoc": {
          "line": 20,
          "column": 7,
          "position": 323
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\social-media-management.service.js",
        "start": 15,
        "end": 28,
        "startLoc": {
          "line": 15,
          "column": 21,
          "position": 253
        },
        "endLoc": {
          "line": 28,
          "column": 5,
          "position": 462
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": "().optional()\n        }).optional(),\n        tags: z.array(z.string()).optional(),\n        accounts: z.array(z.string().uuid()).optional()\n    }).optional(),\n    sort: z.object({\n        field: z.enum(['createdAt', 'publishedAt', 'engagement', 'reach', 'impressions']),\n        direction: z.enum(['asc', 'desc'])\n    }).optional(),\n    pagination: z.object({\n        page: z.number().min(1).default(1),\n        limit: z.number().min(1).max(100).default(20)\n    }).optional()\n});\nrouter",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\social-media-management.js",
        "start": 77,
        "end": 91,
        "startLoc": {
          "line": 77,
          "column": 9,
          "position": 1459
        },
        "endLoc": {
          "line": 91,
          "column": 7,
          "position": 1656
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\social-media-management.service.js",
        "start": 165,
        "end": 179,
        "startLoc": {
          "line": 165,
          "column": 5,
          "position": 2500
        },
        "endLoc": {
          "line": 179,
          "column": 7,
          "position": 2697
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ",\n            organizationId: req.user?.organizationId\n        });\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        res.status(500).json({\n            success: false,\n            error: 'Failed to update social account'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\social-media-management.js",
        "start": 203,
        "end": 215,
        "startLoc": {
          "line": 203,
          "column": 3,
          "position": 2717
        },
        "endLoc": {
          "line": 215,
          "column": 34,
          "position": 2817
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\social-media-management.js",
        "start": 114,
        "end": 126,
        "startLoc": {
          "line": 114,
          "column": 16,
          "position": 1901
        },
        "endLoc": {
          "line": 126,
          "column": 34,
          "position": 2001
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ", {\n            error: error instanceof Error ? error.message : 'Unknown error',\n            organizationId: req.user?.organizationId\n        });\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        res.status(500).json({\n            success: false,\n            error: 'Failed to create social post'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\social-media-management.js",
        "start": 263,
        "end": 276,
        "startLoc": {
          "line": 263,
          "column": 39,
          "position": 3267
        },
        "endLoc": {
          "line": 276,
          "column": 31,
          "position": 3390
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\social-media-management.js",
        "start": 113,
        "end": 126,
        "startLoc": {
          "line": 113,
          "column": 42,
          "position": 1878
        },
        "endLoc": {
          "line": 126,
          "column": 34,
          "position": 2001
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ", {\n            error: error instanceof Error ? error.message : 'Unknown error',\n            organizationId: req.user?.organizationId\n        });\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        res.status(500).json({\n            success: false,\n            error: 'Failed to list social posts'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\social-media-management.js",
        "start": 300,
        "end": 313,
        "startLoc": {
          "line": 300,
          "column": 38,
          "position": 3638
        },
        "endLoc": {
          "line": 313,
          "column": 30,
          "position": 3761
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\social-media-management.js",
        "start": 113,
        "end": 126,
        "startLoc": {
          "line": 113,
          "column": 42,
          "position": 1878
        },
        "endLoc": {
          "line": 126,
          "column": 34,
          "position": 2001
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ": req.params.id,\n            organizationId: req.user?.organizationId\n        });\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        res.status(500).json({\n            success: false,\n            error: 'Failed to update social post'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\social-media-management.js",
        "start": 363,
        "end": 375,
        "startLoc": {
          "line": 363,
          "column": 7,
          "position": 4227
        },
        "endLoc": {
          "line": 375,
          "column": 31,
          "position": 4334
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\social-media-management.js",
        "start": 203,
        "end": 126,
        "startLoc": {
          "line": 203,
          "column": 10,
          "position": 2710
        },
        "endLoc": {
          "line": 126,
          "column": 34,
          "position": 2001
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ");\n        if (!document) {\n            return res.status(404).json({\n                success: false,\n                error: 'Document not found'\n            });\n        }\n        res.json({\n            success: true,\n            data: document,\n            timestamp: new Date().toISOString()\n        });\n    }\n    catch (error) {\n        structuredLogger.error('Error updating document'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\semantic-search-crm.js",
        "start": 171,
        "end": 185,
        "startLoc": {
          "line": 171,
          "column": 8,
          "position": 2463
        },
        "endLoc": {
          "line": 185,
          "column": 26,
          "position": 2568
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\semantic-search-crm.js",
        "start": 145,
        "end": 159,
        "startLoc": {
          "line": 145,
          "column": 11,
          "position": 2200
        },
        "endLoc": {
          "line": 159,
          "column": 25,
          "position": 2305
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": "(filters.organizationId, filters);\n        res.json({\n            success: true,\n            data: {\n                rules,\n                total: rules.length,\n                filters\n            },\n            timestamp: new Date().toISOString()\n        });\n    }\n    catch (error) {\n        structuredLogger.error('Error getting RLS rules'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\rls-generativa.js",
        "start": 233,
        "end": 245,
        "startLoc": {
          "line": 233,
          "column": 12,
          "position": 2880
        },
        "endLoc": {
          "line": 245,
          "column": 26,
          "position": 2966
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\sepa-robust.js",
        "start": 155,
        "end": 167,
        "startLoc": {
          "line": 155,
          "column": 9,
          "position": 2081
        },
        "endLoc": {
          "line": 167,
          "column": 34,
          "position": 2167
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ");\n        if (!reporte) {\n            return res.status(404).json({\n                success: false,\n                error: 'Reporte not found'\n            });\n        }\n        res.json({\n            success: true,\n            data: reporte,\n            timestamp: new Date().toISOString()\n        });\n    }\n    catch (error) {\n        structuredLogger.error('Error updating reporte'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\reportes-mensuales.js",
        "start": 271,
        "end": 285,
        "startLoc": {
          "line": 271,
          "column": 8,
          "position": 2939
        },
        "endLoc": {
          "line": 285,
          "column": 25,
          "position": 3044
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\reportes-mensuales.js",
        "start": 245,
        "end": 259,
        "startLoc": {
          "line": 245,
          "column": 3,
          "position": 2681
        },
        "endLoc": {
          "line": 259,
          "column": 24,
          "position": 2786
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": ");\n        if (!validation.success) {\n            res.status(400).json({\n                error: 'Validation error',\n                message: validation.error.errors.map(e => e.message).join(', '),\n                requestId,\n                timestamp: new Date().toISOString()\n            });\n            return;\n        }\n        const { key } = validation.data;\n        await",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\rate-limiting.js",
        "start": 87,
        "end": 98,
        "startLoc": {
          "line": 87,
          "column": 5,
          "position": 1015
        },
        "endLoc": {
          "line": 98,
          "column": 6,
          "position": 1123
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\rate-limiting.js",
        "start": 36,
        "end": 47,
        "startLoc": {
          "line": 36,
          "column": 6,
          "position": 534
        },
        "endLoc": {
          "line": 47,
          "column": 6,
          "position": 642
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": ".safeParse(req.body);\n        if (!validation.success) {\n            res.status(400).json({\n                error: 'Validation error',\n                message: validation.error.errors.map(e => e.message).join(', '),\n                requestId,\n                timestamp: new Date().toISOString()\n            });\n            return;\n        }\n        const ruleData",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\rate-limiting.js",
        "start": 207,
        "end": 217,
        "startLoc": {
          "line": 207,
          "column": 14,
          "position": 2156
        },
        "endLoc": {
          "line": 217,
          "column": 9,
          "position": 2256
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\rate-limiting.js",
        "start": 87,
        "end": 46,
        "startLoc": {
          "line": 87,
          "column": 17,
          "position": 1009
        },
        "endLoc": {
          "line": 46,
          "column": 2,
          "position": 628
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": ".safeParse(req.body);\n        if (!validation.success) {\n            res.status(400).json({\n                error: 'Validation error',\n                message: validation.error.errors.map(e => e.message).join(', '),\n                requestId,\n                timestamp: new Date().toISOString()\n            });\n            return;\n        }\n        const existingRule",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\rate-limiting.js",
        "start": 267,
        "end": 277,
        "startLoc": {
          "line": 267,
          "column": 17,
          "position": 2734
        },
        "endLoc": {
          "line": 277,
          "column": 13,
          "position": 2834
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\rate-limiting.js",
        "start": 87,
        "end": 46,
        "startLoc": {
          "line": 87,
          "column": 17,
          "position": 1009
        },
        "endLoc": {
          "line": 46,
          "column": 2,
          "position": 628
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "const existingRule = globalRateLimiter.getRule(id);\n        if (!existingRule) {\n            res.status(404).json({\n                error: 'Rule not found',\n                message: `Rule with ID '${id}' not found`,\n                requestId,\n                timestamp: new Date().toISOString()\n            });\n            return;\n        }\n        const",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\rate-limiting.js",
        "start": 329,
        "end": 339,
        "startLoc": {
          "line": 329,
          "column": 9,
          "position": 3324
        },
        "endLoc": {
          "line": 339,
          "column": 6,
          "position": 3409
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\rate-limiting.js",
        "start": 277,
        "end": 287,
        "startLoc": {
          "line": 277,
          "column": 9,
          "position": 2832
        },
        "endLoc": {
          "line": 287,
          "column": 18,
          "position": 2917
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "});\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        logger.error('Error creating health check'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\project-completion-deployment.js",
        "start": 252,
        "end": 262,
        "startLoc": {
          "line": 252,
          "column": 9,
          "position": 2606
        },
        "endLoc": {
          "line": 262,
          "column": 30,
          "position": 2686
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\project-completion-deployment.js",
        "start": 112,
        "end": 122,
        "startLoc": {
          "line": 112,
          "column": 9,
          "position": 1318
        },
        "endLoc": {
          "line": 122,
          "column": 28,
          "position": 1398
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "});\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        logger.error('Error updating configuration'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\project-completion-deployment.js",
        "start": 386,
        "end": 396,
        "startLoc": {
          "line": 386,
          "column": 9,
          "position": 3833
        },
        "endLoc": {
          "line": 396,
          "column": 31,
          "position": 3913
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\project-completion-deployment.js",
        "start": 112,
        "end": 122,
        "startLoc": {
          "line": 112,
          "column": 9,
          "position": 1318
        },
        "endLoc": {
          "line": 122,
          "column": 28,
          "position": 1398
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "attributes: attributes || {}\n        });\n        res.json({\n            success: true,\n            data: {\n                spanId: span.spanContext().spanId,\n                traceId: span.spanContext().traceId,\n                name: span.name,\n                attributes: span.attributes\n            },\n            message: 'Business span created successfully'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\observability-otel.js",
        "start": 201,
        "end": 211,
        "startLoc": {
          "line": 201,
          "column": 13,
          "position": 1710
        },
        "endLoc": {
          "line": 211,
          "column": 37,
          "position": 1796
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\observability-otel.js",
        "start": 164,
        "end": 174,
        "startLoc": {
          "line": 164,
          "column": 13,
          "position": 1388
        },
        "endLoc": {
          "line": 174,
          "column": 28,
          "position": 1474
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": ", {\n            attributes: attributes || {}\n        });\n        res.json({\n            success: true,\n            data: {\n                spanId: span.spanContext().spanId,\n                traceId: span.spanContext().traceId,\n                name: span.name,\n                attributes: span.attributes\n            },\n            message: 'Database span created successfully'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\observability-otel.js",
        "start": 237,
        "end": 248,
        "startLoc": {
          "line": 237,
          "column": 6,
          "position": 2027
        },
        "endLoc": {
          "line": 248,
          "column": 37,
          "position": 2118
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\observability-otel.js",
        "start": 200,
        "end": 174,
        "startLoc": {
          "line": 200,
          "column": 15,
          "position": 1705
        },
        "endLoc": {
          "line": 174,
          "column": 28,
          "position": 1474
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": ", {\n            attributes: attributes || {}\n        });\n        res.json({\n            success: true,\n            data: {\n                spanId: span.spanContext().spanId,\n                traceId: span.spanContext().traceId,\n                name: span.name,\n                attributes: span.attributes\n            },\n            message: 'External API span created successfully'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\observability-otel.js",
        "start": 274,
        "end": 285,
        "startLoc": {
          "line": 274,
          "column": 9,
          "position": 2349
        },
        "endLoc": {
          "line": 285,
          "column": 41,
          "position": 2440
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\observability-otel.js",
        "start": 200,
        "end": 174,
        "startLoc": {
          "line": 200,
          "column": 15,
          "position": 1705
        },
        "endLoc": {
          "line": 174,
          "column": 28,
          "position": 1474
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "= z.object({\n    userId: z.string().uuid(),\n    orgId: z.string().uuid(),\n    type: z.enum(['info', 'success', 'warning', 'error', 'alert', 'reminder', 'update', 'announcement']),\n    priority: z.enum(['low', 'medium', 'high', 'urgent']),\n    title: z.string().min(1).max(200),\n    message: z.string().min(1).max(1000),\n    data: z.record(z.any()).optional(),\n    channels: z.array(z.enum(['email', 'sms', 'push', 'in_app', 'webhook'])),\n    templateId: z.string().optional(),\n    templateVariables",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\notifications.js",
        "start": 33,
        "end": 43,
        "startLoc": {
          "line": 33,
          "column": 2,
          "position": 544
        },
        "endLoc": {
          "line": 43,
          "column": 18,
          "position": 749
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\notifications.js",
        "start": 21,
        "end": 31,
        "startLoc": {
          "line": 21,
          "column": 2,
          "position": 314
        },
        "endLoc": {
          "line": 31,
          "column": 12,
          "position": 519
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": ", {\n            templateId: req.params.id,\n            error: error.message,\n            userId: req.user?.id\n        });\n        res.status(400).json({\n            success: false,\n            error: error.message\n        });\n    }\n});\nrouter.post",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\notifications.js",
        "start": 190,
        "end": 201,
        "startLoc": {
          "line": 190,
          "column": 28,
          "position": 2186
        },
        "endLoc": {
          "line": 201,
          "column": 5,
          "position": 2267
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\notifications.js",
        "start": 165,
        "end": 176,
        "startLoc": {
          "line": 165,
          "column": 28,
          "position": 1979
        },
        "endLoc": {
          "line": 176,
          "column": 7,
          "position": 2060
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": ": req.params.id,\n            error: error.message,\n            userId: req.user?.id\n        });\n        res.status(500).json({\n            success: false,\n            error: 'Internal server error'\n        });\n    }\n});\nrouter.get('/notifications'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\notifications.js",
        "start": 245,
        "end": 255,
        "startLoc": {
          "line": 245,
          "column": 15,
          "position": 2649
        },
        "endLoc": {
          "line": 255,
          "column": 17,
          "position": 2724
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\notifications.js",
        "start": 112,
        "end": 122,
        "startLoc": {
          "line": 112,
          "column": 11,
          "position": 1515
        },
        "endLoc": {
          "line": 122,
          "column": 13,
          "position": 1590
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": ": req.params.id,\n            error: error.message,\n            userId: req.user?.id\n        });\n        res.status(400).json({\n            success: false,\n            error: error.message\n        });\n    }\n});\nrouter.delete('/notifications/:id'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\notifications.js",
        "start": 302,
        "end": 312,
        "startLoc": {
          "line": 302,
          "column": 15,
          "position": 3174
        },
        "endLoc": {
          "line": 312,
          "column": 21,
          "position": 3251
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\notifications.js",
        "start": 166,
        "end": 176,
        "startLoc": {
          "line": 166,
          "column": 11,
          "position": 1985
        },
        "endLoc": {
          "line": 176,
          "column": 17,
          "position": 2062
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": ", {\n            notificationId: req.params.id,\n            error: error.message,\n            userId: req.user?.id\n        });\n        res.status(400).json({\n            success: false,\n            error: error.message\n        });\n    }\n});\nrouter.patch",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\notifications.js",
        "start": 326,
        "end": 337,
        "startLoc": {
          "line": 326,
          "column": 32,
          "position": 3375
        },
        "endLoc": {
          "line": 337,
          "column": 6,
          "position": 3456
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\notifications.js",
        "start": 301,
        "end": 176,
        "startLoc": {
          "line": 301,
          "column": 32,
          "position": 3168
        },
        "endLoc": {
          "line": 176,
          "column": 7,
          "position": 2060
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": ", {\n            notificationId: req.params.id,\n            error: error.message,\n            userId: req.user?.id\n        });\n        res.status(400).json({\n            success: false,\n            error: error.message\n        });\n    }\n});\nrouter.patch('/notifications/read-all'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\notifications.js",
        "start": 352,
        "end": 363,
        "startLoc": {
          "line": 352,
          "column": 38,
          "position": 3595
        },
        "endLoc": {
          "line": 363,
          "column": 26,
          "position": 3678
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\notifications.js",
        "start": 301,
        "end": 337,
        "startLoc": {
          "line": 301,
          "column": 32,
          "position": 3168
        },
        "endLoc": {
          "line": 337,
          "column": 26,
          "position": 3458
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": ", async (req, res) => {\n    try {\n        const userId = req.user?.id || req.query.userId;\n        const orgId = req.user?.orgId || req.query.orgId;\n        if (!userId || !orgId) {\n            return res.status(400).json({\n                success: false,\n                error: 'User ID and Organization ID are required'\n            });\n        }\n        const preferences",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\notifications.js",
        "start": 510,
        "end": 520,
        "startLoc": {
          "line": 510,
          "column": 15,
          "position": 5028
        },
        "endLoc": {
          "line": 520,
          "column": 12,
          "position": 5147
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\notifications.js",
        "start": 255,
        "end": 265,
        "startLoc": {
          "line": 255,
          "column": 17,
          "position": 2725
        },
        "endLoc": {
          "line": 265,
          "column": 8,
          "position": 2844
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": ", async (req, res) => {\n    try {\n        const userId = req.user?.id || req.body.userId;\n        const orgId = req.user?.orgId || req.body.orgId;\n        if (!userId || !orgId) {\n            return res.status(400).json({\n                success: false,\n                error: 'User ID and Organization ID are required'\n            });\n        }\n        const",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\notifications.js",
        "start": 537,
        "end": 547,
        "startLoc": {
          "line": 537,
          "column": 15,
          "position": 5278
        },
        "endLoc": {
          "line": 547,
          "column": 6,
          "position": 5395
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\notifications.js",
        "start": 363,
        "end": 373,
        "startLoc": {
          "line": 363,
          "column": 26,
          "position": 3679
        },
        "endLoc": {
          "line": 373,
          "column": 6,
          "position": 3796
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": ", async (req, res) => {\n    try {\n        const userId = req.user?.id || req.query.userId;\n        const orgId = req.user?.orgId || req.query.orgId;\n        if (!userId || !orgId) {\n            return res.status(400).json({\n                success: false,\n                error: 'User ID and Organization ID are required'\n            });\n        }\n        const count",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\notifications.js",
        "start": 596,
        "end": 606,
        "startLoc": {
          "line": 596,
          "column": 16,
          "position": 5798
        },
        "endLoc": {
          "line": 606,
          "column": 6,
          "position": 5917
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\notifications.js",
        "start": 255,
        "end": 265,
        "startLoc": {
          "line": 255,
          "column": 17,
          "position": 2725
        },
        "endLoc": {
          "line": 265,
          "column": 8,
          "position": 2844
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "= req.body;\n        const templateEngine = TemplateEngineFactory.create({\n            engine: 'handlebars',\n            defaultLanguage: 'es',\n            supportedLanguages: ['es', 'en'],\n            cacheEnabled: true,\n            cacheSize: 100,\n            strictMode: true,\n            escapeHtml: true\n        });\n        const result = await templateEngine.validateTemplate",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\notifications.js",
        "start": 727,
        "end": 737,
        "startLoc": {
          "line": 727,
          "column": 2,
          "position": 6940
        },
        "endLoc": {
          "line": 737,
          "column": 17,
          "position": 7029
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\notifications.js",
        "start": 691,
        "end": 701,
        "startLoc": {
          "line": 691,
          "column": 2,
          "position": 6675
        },
        "endLoc": {
          "line": 701,
          "column": 7,
          "position": 6764
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ", authMiddleware, async (req, res) => {\n    try {\n        const { sessionId, userId, organizationId, data, context, options } = req.body;\n        if (!sessionId || !userId || !organizationId || !data) {\n            return res.status(400).json({\n                success: false,\n                error: 'Missing required fields: sessionId, userId, organizationId, data',\n            });\n        }\n        const request = {\n            sessionId,\n            userId,\n            organizationId,\n            requestType: 'prediction'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\next-ai-platform.js",
        "start": 174,
        "end": 187,
        "startLoc": {
          "line": 174,
          "column": 11,
          "position": 1724
        },
        "endLoc": {
          "line": 187,
          "column": 13,
          "position": 1864
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\next-ai-platform.js",
        "start": 142,
        "end": 155,
        "startLoc": {
          "line": 142,
          "column": 11,
          "position": 1436
        },
        "endLoc": {
          "line": 155,
          "column": 11,
          "position": 1576
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": ",\n            traceId\n        });\n    }\n});\nrouter.get('/metrics', async (req, res) => {\n    const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n    try {\n        const status = memoryManager.getStatus();\n        const",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\memory-management.js",
        "start": 58,
        "end": 68,
        "startLoc": {
          "line": 58,
          "column": 30,
          "position": 726
        },
        "endLoc": {
          "line": 68,
          "column": 6,
          "position": 853
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\performance-v2.js",
        "start": 59,
        "end": 26,
        "startLoc": {
          "line": 59,
          "column": 35,
          "position": 763
        },
        "endLoc": {
          "line": 26,
          "column": 17,
          "position": 474
        }
      }
    },
    {
      "format": "javascript",
      "lines": 17,
      "fragment": ", {\n            traceId,\n            spanId,\n            analysis\n        });\n        res.json({\n            success: true,\n            data: {\n                metrics: status.metrics,\n                analysis,\n                timestamp: new Date().toISOString(),\n                traceId\n            }\n        });\n    }\n    catch (error) {\n        structuredLogger.error('Failed to get memory metrics'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\memory-management.js",
        "start": 113,
        "end": 129,
        "startLoc": {
          "line": 113,
          "column": 27,
          "position": 1464
        },
        "endLoc": {
          "line": 129,
          "column": 31,
          "position": 1560
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\performance-v2.js",
        "start": 105,
        "end": 121,
        "startLoc": {
          "line": 105,
          "column": 32,
          "position": 1415
        },
        "endLoc": {
          "line": 121,
          "column": 36,
          "position": 1511
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ",\n            traceId\n        });\n    }\n});\nrouter.post('/optimize', async (req, res) => {\n    const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n    try {\n        const { type } = req.body;\n        if (type && !OptimizationTypeSchema.safeParse(type).success) {\n            return res.status(400).json({\n                success: false,\n                error: 'Invalid optimization type',\n                validTypes: ['gc'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\memory-management.js",
        "start": 136,
        "end": 150,
        "startLoc": {
          "line": 136,
          "column": 31,
          "position": 1625
        },
        "endLoc": {
          "line": 150,
          "column": 5,
          "position": 1807
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\performance-v2.js",
        "start": 128,
        "end": 142,
        "startLoc": {
          "line": 128,
          "column": 36,
          "position": 1576
        },
        "endLoc": {
          "line": 142,
          "column": 9,
          "position": 1758
        }
      }
    },
    {
      "format": "javascript",
      "lines": 25,
      "fragment": ", {\n            traceId,\n            spanId,\n            newConfig: newStatus.config\n        });\n        res.json({\n            success: true,\n            data: {\n                config: newStatus.config,\n                message: 'Configuration updated successfully',\n                timestamp: new Date().toISOString(),\n                traceId\n            }\n        });\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Invalid configuration data',\n                details: error.errors,\n                traceId\n            });\n        }\n        structuredLogger.error('Failed to update memory config'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\memory-management.js",
        "start": 208,
        "end": 232,
        "startLoc": {
          "line": 208,
          "column": 24,
          "position": 2330
        },
        "endLoc": {
          "line": 232,
          "column": 33,
          "position": 2497
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\performance-v2.js",
        "start": 199,
        "end": 223,
        "startLoc": {
          "line": 199,
          "column": 29,
          "position": 2309
        },
        "endLoc": {
          "line": 223,
          "column": 38,
          "position": 2476
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": ",\n            traceId\n        });\n    }\n});\nrouter.get('/health', async (req, res) => {\n    const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n    try {\n        const status = memoryManager.getStatus();\n        const healthChecks",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\memory-management.js",
        "start": 352,
        "end": 362,
        "startLoc": {
          "line": 352,
          "column": 27,
          "position": 3975
        },
        "endLoc": {
          "line": 362,
          "column": 13,
          "position": 4104
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\performance-v2.js",
        "start": 287,
        "end": 68,
        "startLoc": {
          "line": 287,
          "column": 42,
          "position": 3227
        },
        "endLoc": {
          "line": 68,
          "column": 9,
          "position": 855
        }
      }
    },
    {
      "format": "javascript",
      "lines": 20,
      "fragment": ", {\n            traceId,\n            spanId,\n            healthStatus,\n            healthChecks\n        });\n        res.status(isHealthy ? 200 : 503).json({\n            success: true,\n            data: {\n                status: healthStatus,\n                checks: healthChecks,\n                metrics: status.metrics,\n                isOptimizing: status.isOptimizing,\n                timestamp: new Date().toISOString(),\n                traceId\n            }\n        });\n    }\n    catch (error) {\n        structuredLogger.error('Memory health check failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\memory-management.js",
        "start": 371,
        "end": 390,
        "startLoc": {
          "line": 371,
          "column": 22,
          "position": 4272
        },
        "endLoc": {
          "line": 390,
          "column": 29,
          "position": 4404
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\performance-v2.js",
        "start": 307,
        "end": 326,
        "startLoc": {
          "line": 307,
          "column": 27,
          "position": 3557
        },
        "endLoc": {
          "line": 326,
          "column": 34,
          "position": 3689
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": ",\n            traceId\n        });\n    }\n});\nrouter.get('/recommendations', async (req, res) => {\n    const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n    try {\n        const status = memoryManager.getStatus();\n        const recommendations",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\memory-management.js",
        "start": 397,
        "end": 407,
        "startLoc": {
          "line": 397,
          "column": 29,
          "position": 4469
        },
        "endLoc": {
          "line": 407,
          "column": 16,
          "position": 4598
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\performance-v2.js",
        "start": 333,
        "end": 68,
        "startLoc": {
          "line": 333,
          "column": 34,
          "position": 3754
        },
        "endLoc": {
          "line": 68,
          "column": 9,
          "position": 855
        }
      }
    },
    {
      "format": "javascript",
      "lines": 17,
      "fragment": ", {\n            traceId,\n            spanId,\n            recommendationsCount: recommendations.length\n        });\n        res.json({\n            success: true,\n            data: {\n                recommendations,\n                count: recommendations.length,\n                timestamp: new Date().toISOString(),\n                traceId\n            }\n        });\n    }\n    catch (error) {\n        structuredLogger.error('Failed to get memory recommendations'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\memory-management.js",
        "start": 458,
        "end": 474,
        "startLoc": {
          "line": 458,
          "column": 35,
          "position": 5025
        },
        "endLoc": {
          "line": 474,
          "column": 39,
          "position": 5126
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\performance-v2.js",
        "start": 384,
        "end": 400,
        "startLoc": {
          "line": 384,
          "column": 40,
          "position": 4223
        },
        "endLoc": {
          "line": 400,
          "column": 44,
          "position": 4324
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": ",\n            updatedAt: new Date().toISOString()\n        })\n            .where(eq(invoices.id, id))\n            .returning();\n        if (!updatedInvoice) {\n            return res.status(404).json({\n                error: 'Invoice not found',\n                message: `Invoice with ID ${id} not found or access denied`\n            });\n        }\n        structuredLogger.info('Invoice sent'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\invoices.js",
        "start": 299,
        "end": 310,
        "startLoc": {
          "line": 299,
          "column": 2,
          "position": 3196
        },
        "endLoc": {
          "line": 310,
          "column": 15,
          "position": 3292
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\invoices.js",
        "start": 245,
        "end": 256,
        "startLoc": {
          "line": 245,
          "column": 11,
          "position": 2712
        },
        "endLoc": {
          "line": 256,
          "column": 18,
          "position": 2808
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "});\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        logger.error('Failed to get interactions'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\interactions.js",
        "start": 29,
        "end": 39,
        "startLoc": {
          "line": 29,
          "column": 9,
          "position": 336
        },
        "endLoc": {
          "line": 39,
          "column": 29,
          "position": 416
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\project-completion-deployment.js",
        "start": 112,
        "end": 122,
        "startLoc": {
          "line": 112,
          "column": 9,
          "position": 1318
        },
        "endLoc": {
          "line": 122,
          "column": 28,
          "position": 1398
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "});\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        logger.error('Failed to create interaction'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\interactions.js",
        "start": 101,
        "end": 111,
        "startLoc": {
          "line": 101,
          "column": 9,
          "position": 968
        },
        "endLoc": {
          "line": 111,
          "column": 31,
          "position": 1048
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\project-completion-deployment.js",
        "start": 112,
        "end": 122,
        "startLoc": {
          "line": 112,
          "column": 9,
          "position": 1318
        },
        "endLoc": {
          "line": 122,
          "column": 28,
          "position": 1398
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ".json({\n            success: true,\n            data: interaction\n        });\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        logger.error('Failed to update interaction'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\interactions.js",
        "start": 142,
        "end": 155,
        "startLoc": {
          "line": 142,
          "column": 4,
          "position": 1344
        },
        "endLoc": {
          "line": 155,
          "column": 31,
          "position": 1443
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\interactions.js",
        "start": 98,
        "end": 122,
        "startLoc": {
          "line": 98,
          "column": 2,
          "position": 949
        },
        "endLoc": {
          "line": 122,
          "column": 28,
          "position": 1398
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": "(filters.organizationId, filters);\n        res.json({\n            success: true,\n            data: {\n                insights,\n                total: insights.length,\n                filters\n            },\n            timestamp: new Date().toISOString()\n        });\n    }\n    catch (error) {\n        structuredLogger.error('Error getting voice insights'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\interactions-sas-av.js",
        "start": 287,
        "end": 299,
        "startLoc": {
          "line": 287,
          "column": 17,
          "position": 3799
        },
        "endLoc": {
          "line": 299,
          "column": 31,
          "position": 3885
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\interactions-sas-av.js",
        "start": 264,
        "end": 276,
        "startLoc": {
          "line": 264,
          "column": 21,
          "position": 3602
        },
        "endLoc": {
          "line": 276,
          "column": 35,
          "position": 3688
        }
      }
    },
    {
      "format": "javascript",
      "lines": 17,
      "fragment": ");\n        if (!task) {\n            res.status(404).json({\n                success: false,\n                error: 'Task not found',\n                timestamp: new Date().toISOString()\n            });\n            return;\n        }\n        res.json({\n            success: true,\n            data: task,\n            timestamp: new Date().toISOString()\n        });\n    }\n    catch (error) {\n        if",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\hitl-v2.js",
        "start": 172,
        "end": 188,
        "startLoc": {
          "line": 172,
          "column": 14,
          "position": 2020
        },
        "endLoc": {
          "line": 188,
          "column": 3,
          "position": 2138
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\hitl-v2.js",
        "start": 109,
        "end": 125,
        "startLoc": {
          "line": 109,
          "column": 7,
          "position": 1424
        },
        "endLoc": {
          "line": 125,
          "column": 17,
          "position": 1542
        }
      }
    },
    {
      "format": "javascript",
      "lines": 17,
      "fragment": "res.json({\n            success: true,\n            data: task,\n            timestamp: new Date().toISOString()\n        });\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            res.status(400).json({\n                success: false,\n                error: 'Invalid request data',\n                details: error.errors,\n                timestamp: new Date().toISOString()\n            });\n            return;\n        }\n        structuredLogger.error('Failed to update HITL task'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\hitl-v2.js",
        "start": 181,
        "end": 197,
        "startLoc": {
          "line": 181,
          "column": 9,
          "position": 2086
        },
        "endLoc": {
          "line": 197,
          "column": 29,
          "position": 2218
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\hitl-v2.js",
        "start": 141,
        "end": 157,
        "startLoc": {
          "line": 141,
          "column": 9,
          "position": 1715
        },
        "endLoc": {
          "line": 157,
          "column": 29,
          "position": 1847
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ",\n            timestamp: new Date().toISOString()\n        });\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            res.status(400).json({\n                success: false,\n                error: 'Invalid request data',\n                details: error.errors,\n                timestamp: new Date().toISOString()\n            });\n            return;\n        }\n        structuredLogger.error('Failed to add HITL comment'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\hitl-v2.js",
        "start": 224,
        "end": 238,
        "startLoc": {
          "line": 224,
          "column": 8,
          "position": 2486
        },
        "endLoc": {
          "line": 238,
          "column": 29,
          "position": 2600
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\hitl-v2.js",
        "start": 143,
        "end": 157,
        "startLoc": {
          "line": 143,
          "column": 5,
          "position": 1733
        },
        "endLoc": {
          "line": 157,
          "column": 29,
          "position": 1847
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ",\n            timestamp: new Date().toISOString()\n        });\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            res.status(400).json({\n                success: false,\n                error: 'Invalid request data',\n                details: error.errors,\n                timestamp: new Date().toISOString()\n            });\n            return;\n        }\n        structuredLogger.error('Failed to add HITL attachment'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\hitl-v2.js",
        "start": 265,
        "end": 279,
        "startLoc": {
          "line": 265,
          "column": 11,
          "position": 2868
        },
        "endLoc": {
          "line": 279,
          "column": 32,
          "position": 2982
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\hitl-v2.js",
        "start": 143,
        "end": 157,
        "startLoc": {
          "line": 143,
          "column": 5,
          "position": 1733
        },
        "endLoc": {
          "line": 157,
          "column": 29,
          "position": 1847
        }
      }
    },
    {
      "format": "javascript",
      "lines": 22,
      "fragment": ",\n                timestamp: new Date().toISOString()\n            });\n            return;\n        }\n        res.json({\n            success: true,\n            data: task,\n            timestamp: new Date().toISOString()\n        });\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            res.status(400).json({\n                success: false,\n                error: 'Invalid request data',\n                details: error.errors,\n                timestamp: new Date().toISOString()\n            });\n            return;\n        }\n        structuredLogger.error('Failed to advance HITL workflow'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\hitl-v2.js",
        "start": 299,
        "end": 320,
        "startLoc": {
          "line": 299,
          "column": 34,
          "position": 3210
        },
        "endLoc": {
          "line": 320,
          "column": 34,
          "position": 3371
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\hitl-v2.js",
        "start": 176,
        "end": 157,
        "startLoc": {
          "line": 176,
          "column": 17,
          "position": 2057
        },
        "endLoc": {
          "line": 157,
          "column": 29,
          "position": 1847
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ",\n            timestamp: new Date().toISOString()\n        });\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            res.status(400).json({\n                success: false,\n                error: 'Invalid request data',\n                details: error.errors,\n                timestamp: new Date().toISOString()\n            });\n            return;\n        }\n        structuredLogger.error('Failed to create HITL batch'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\hitl-v2.js",
        "start": 338,
        "end": 352,
        "startLoc": {
          "line": 338,
          "column": 6,
          "position": 3558
        },
        "endLoc": {
          "line": 352,
          "column": 30,
          "position": 3672
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\hitl-v2.js",
        "start": 143,
        "end": 157,
        "startLoc": {
          "line": 143,
          "column": 5,
          "position": 1733
        },
        "endLoc": {
          "line": 157,
          "column": 29,
          "position": 1847
        }
      }
    },
    {
      "format": "javascript",
      "lines": 17,
      "fragment": "res.json({\n            success: true,\n            data: batch,\n            timestamp: new Date().toISOString()\n        });\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            res.status(400).json({\n                success: false,\n                error: 'Invalid request data',\n                details: error.errors,\n                timestamp: new Date().toISOString()\n            });\n            return;\n        }\n        structuredLogger.error('Failed to add tasks to HITL batch'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\hitl-v2.js",
        "start": 376,
        "end": 392,
        "startLoc": {
          "line": 376,
          "column": 9,
          "position": 3913
        },
        "endLoc": {
          "line": 392,
          "column": 36,
          "position": 4045
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\hitl-v2.js",
        "start": 336,
        "end": 157,
        "startLoc": {
          "line": 336,
          "column": 9,
          "position": 3540
        },
        "endLoc": {
          "line": 157,
          "column": 29,
          "position": 1847
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": "organizationId, filters);\n        res.json({\n            success: true,\n            data: {\n                tasks,\n                total: tasks.length,\n                filters\n            },\n            timestamp: new Date().toISOString()\n        });\n    }\n    catch (error) {\n        structuredLogger.error('Error getting HITL tasks'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\hitl-ownership-sla.js",
        "start": 376,
        "end": 388,
        "startLoc": {
          "line": 376,
          "column": 2,
          "position": 5086
        },
        "endLoc": {
          "line": 388,
          "column": 27,
          "position": 5169
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\hitl-v2.js",
        "start": 83,
        "end": 95,
        "startLoc": {
          "line": 83,
          "column": 2,
          "position": 1188
        },
        "endLoc": {
          "line": 95,
          "column": 27,
          "position": 1271
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": ", requireAADRole(\"approver\"), async (req, res) => {\n    let prisma = null;\n    try {\n        const db = await import(\"@econeura/db\");\n        const getPrisma = db.getPrisma;\n        prisma = typeof getPrisma === 'function' ? getPrisma() : null;\n    }\n    catch { }\n    if (!prisma)\n        return res.status(503).json({ type: \"about:blank\", title: \"Service Unavailable\", status: 503, detail: \"DB not configured\" });\n    const id = req.params.id;\n    const reason",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\hil.approvals.v2.js",
        "start": 36,
        "end": 47,
        "startLoc": {
          "line": 36,
          "column": 21,
          "position": 545
        },
        "endLoc": {
          "line": 47,
          "column": 7,
          "position": 708
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\hil.approvals.v2.js",
        "start": 18,
        "end": 29,
        "startLoc": {
          "line": 18,
          "column": 22,
          "position": 243
        },
        "endLoc": {
          "line": 29,
          "column": 5,
          "position": 406
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ",\n            timestamp: new Date().toISOString()\n        });\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            res.status(400).json({\n                success: false,\n                error: 'Invalid request data',\n                details: error.errors,\n                timestamp: new Date().toISOString()\n            });\n            return;\n        }\n        structuredLogger.error('Failed to get users'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\graph-wrappers.js",
        "start": 59,
        "end": 73,
        "startLoc": {
          "line": 59,
          "column": 2,
          "position": 765
        },
        "endLoc": {
          "line": 73,
          "column": 22,
          "position": 879
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\hitl-v2.js",
        "start": 143,
        "end": 157,
        "startLoc": {
          "line": 143,
          "column": 5,
          "position": 1733
        },
        "endLoc": {
          "line": 157,
          "column": 29,
          "position": 1847
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ",\n            timestamp: new Date().toISOString()\n        });\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            res.status(400).json({\n                success: false,\n                error: 'Invalid request data',\n                details: error.errors,\n                timestamp: new Date().toISOString()\n            });\n            return;\n        }\n        structuredLogger.error('Failed to get user'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\graph-wrappers.js",
        "start": 101,
        "end": 115,
        "startLoc": {
          "line": 101,
          "column": 5,
          "position": 1138
        },
        "endLoc": {
          "line": 115,
          "column": 21,
          "position": 1252
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\hitl-v2.js",
        "start": 143,
        "end": 157,
        "startLoc": {
          "line": 143,
          "column": 5,
          "position": 1733
        },
        "endLoc": {
          "line": 157,
          "column": 29,
          "position": 1847
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": "},\n            timestamp: new Date().toISOString()\n        });\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            res.status(400).json({\n                success: false,\n                error: 'Invalid request data',\n                details: error.errors,\n                timestamp: new Date().toISOString()\n            });\n            return;\n        }\n        structuredLogger.error('Failed to get messages'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\graph-wrappers.js",
        "start": 137,
        "end": 151,
        "startLoc": {
          "line": 137,
          "column": 13,
          "position": 1474
        },
        "endLoc": {
          "line": 151,
          "column": 25,
          "position": 1589
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\graph-wrappers.js",
        "start": 59,
        "end": 157,
        "startLoc": {
          "line": 59,
          "column": 13,
          "position": 764
        },
        "endLoc": {
          "line": 157,
          "column": 29,
          "position": 1847
        }
      }
    },
    {
      "format": "javascript",
      "lines": 16,
      "fragment": ".length\n            },\n            timestamp: new Date().toISOString()\n        });\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            res.status(400).json({\n                success: false,\n                error: 'Invalid request data',\n                details: error.errors,\n                timestamp: new Date().toISOString()\n            });\n            return;\n        }\n        structuredLogger.error('Failed to get calendar events'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\graph-wrappers.js",
        "start": 170,
        "end": 185,
        "startLoc": {
          "line": 170,
          "column": 7,
          "position": 1792
        },
        "endLoc": {
          "line": 185,
          "column": 32,
          "position": 1911
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\graph-wrappers.js",
        "start": 58,
        "end": 157,
        "startLoc": {
          "line": 58,
          "column": 6,
          "position": 760
        },
        "endLoc": {
          "line": 157,
          "column": 29,
          "position": 1847
        }
      }
    },
    {
      "format": "javascript",
      "lines": 16,
      "fragment": ".length\n            },\n            timestamp: new Date().toISOString()\n        });\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            res.status(400).json({\n                success: false,\n                error: 'Invalid request data',\n                details: error.errors,\n                timestamp: new Date().toISOString()\n            });\n            return;\n        }\n        structuredLogger.error('Failed to get drive items'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\graph-wrappers.js",
        "start": 204,
        "end": 219,
        "startLoc": {
          "line": 204,
          "column": 6,
          "position": 2109
        },
        "endLoc": {
          "line": 219,
          "column": 28,
          "position": 2228
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\graph-wrappers.js",
        "start": 58,
        "end": 157,
        "startLoc": {
          "line": 58,
          "column": 6,
          "position": 760
        },
        "endLoc": {
          "line": 157,
          "column": 29,
          "position": 1847
        }
      }
    },
    {
      "format": "javascript",
      "lines": 16,
      "fragment": ".length\n            },\n            timestamp: new Date().toISOString()\n        });\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            res.status(400).json({\n                success: false,\n                error: 'Invalid request data',\n                details: error.errors,\n                timestamp: new Date().toISOString()\n            });\n            return;\n        }\n        structuredLogger.error('Failed to get teams'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\graph-wrappers.js",
        "start": 238,
        "end": 253,
        "startLoc": {
          "line": 238,
          "column": 6,
          "position": 2416
        },
        "endLoc": {
          "line": 253,
          "column": 22,
          "position": 2535
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\graph-wrappers.js",
        "start": 58,
        "end": 157,
        "startLoc": {
          "line": 58,
          "column": 6,
          "position": 760
        },
        "endLoc": {
          "line": 157,
          "column": 29,
          "position": 1847
        }
      }
    },
    {
      "format": "javascript",
      "lines": 16,
      "fragment": ".length\n            },\n            timestamp: new Date().toISOString()\n        });\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            res.status(400).json({\n                success: false,\n                error: 'Invalid request data',\n                details: error.errors,\n                timestamp: new Date().toISOString()\n            });\n            return;\n        }\n        structuredLogger.error('Failed to get team channels'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\graph-wrappers.js",
        "start": 275,
        "end": 290,
        "startLoc": {
          "line": 275,
          "column": 9,
          "position": 2742
        },
        "endLoc": {
          "line": 290,
          "column": 30,
          "position": 2861
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\graph-wrappers.js",
        "start": 58,
        "end": 157,
        "startLoc": {
          "line": 58,
          "column": 6,
          "position": 760
        },
        "endLoc": {
          "line": 157,
          "column": 29,
          "position": 1847
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ",\n            timestamp: new Date().toISOString()\n        });\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            res.status(400).json({\n                success: false,\n                error: 'Invalid request data',\n                details: error.errors,\n                timestamp: new Date().toISOString()\n            });\n            return;\n        }\n        structuredLogger.error('Failed to add message to outbox'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\graph-wrappers.js",
        "start": 308,
        "end": 322,
        "startLoc": {
          "line": 308,
          "column": 8,
          "position": 3048
        },
        "endLoc": {
          "line": 322,
          "column": 34,
          "position": 3162
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\hitl-v2.js",
        "start": 143,
        "end": 157,
        "startLoc": {
          "line": 143,
          "column": 5,
          "position": 1733
        },
        "endLoc": {
          "line": 157,
          "column": 29,
          "position": 1847
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": "},\n            timestamp: new Date().toISOString()\n        });\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            res.status(400).json({\n                success: false,\n                error: 'Invalid request data',\n                details: error.errors,\n                timestamp: new Date().toISOString()\n            });\n            return;\n        }\n        structuredLogger.error('Failed to get outbox messages'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\graph-wrappers.js",
        "start": 343,
        "end": 357,
        "startLoc": {
          "line": 343,
          "column": 13,
          "position": 3372
        },
        "endLoc": {
          "line": 357,
          "column": 32,
          "position": 3487
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\graph-wrappers.js",
        "start": 59,
        "end": 157,
        "startLoc": {
          "line": 59,
          "column": 13,
          "position": 764
        },
        "endLoc": {
          "line": 157,
          "column": 29,
          "position": 1847
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ",\n            timestamp: new Date().toISOString()\n        });\n    }\n    catch (error) {\n        if (error instanceof Error && error.message.includes('not found')) {\n            res.status(404).json({\n                success: false,\n                error: 'Message not found',\n                timestamp: new Date().toISOString()\n            });\n            return;\n        }\n        if (error instanceof Error && error.message.includes('cannot be cancelled'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\graph-wrappers.js",
        "start": 414,
        "end": 427,
        "startLoc": {
          "line": 414,
          "column": 27,
          "position": 4057
        },
        "endLoc": {
          "line": 427,
          "column": 22,
          "position": 4184
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\graph-wrappers.js",
        "start": 374,
        "end": 387,
        "startLoc": {
          "line": 374,
          "column": 25,
          "position": 3667
        },
        "endLoc": {
          "line": 387,
          "column": 24,
          "position": 3794
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": ",\n            message: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\nrouter.get('/health', async (req, res) => {\n    try {\n        const health = {\n            status: 'healthy',\n            timestamp: new Date().toISOString(),\n            services: {\n                gdprRequests",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\gdpr-compliance.js",
        "start": 680,
        "end": 691,
        "startLoc": {
          "line": 680,
          "column": 35,
          "position": 6982
        },
        "endLoc": {
          "line": 691,
          "column": 13,
          "position": 7079
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\gdpr-hitl.js",
        "start": 401,
        "end": 412,
        "startLoc": {
          "line": 401,
          "column": 39,
          "position": 4182
        },
        "endLoc": {
          "line": 412,
          "column": 17,
          "position": 4279
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": "(filters.organizationId, filters);\n        res.json({\n            success: true,\n            data: {\n                transactions,\n                total: transactions.length,\n                filters\n            },\n            timestamp: new Date().toISOString()\n        });\n    }\n    catch (error) {\n        structuredLogger.error('Error getting VAT transactions'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\fiscalidad-regional.js",
        "start": 223,
        "end": 235,
        "startLoc": {
          "line": 223,
          "column": 19,
          "position": 2877
        },
        "endLoc": {
          "line": 235,
          "column": 33,
          "position": 2963
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\sepa-robust.js",
        "start": 88,
        "end": 100,
        "startLoc": {
          "line": 88,
          "column": 16,
          "position": 1463
        },
        "endLoc": {
          "line": 100,
          "column": 41,
          "position": 1549
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ");\n        if (!region) {\n            return res.status(404).json({\n                success: false,\n                error: 'Tax region not found'\n            });\n        }\n        res.json({\n            success: true,\n            data: region,\n            timestamp: new Date().toISOString()\n        });\n    }\n    catch (error) {\n        structuredLogger.error('Failed to get tax region'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\fiscalidad-regional-ue.js",
        "start": 113,
        "end": 127,
        "startLoc": {
          "line": 113,
          "column": 2,
          "position": 1286
        },
        "endLoc": {
          "line": 127,
          "column": 27,
          "position": 1391
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\fiscalidad-regional.js",
        "start": 179,
        "end": 193,
        "startLoc": {
          "line": 179,
          "column": 3,
          "position": 2483
        },
        "endLoc": {
          "line": 193,
          "column": 27,
          "position": 2588
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": ", error, {\n            org_id: req.params.orgId,\n            requested_by: req.ip\n        });\n        res.status(400).json({\n            success: false,\n            error: 'INVALID_REQUEST',\n            message: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\nrouter.get",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\finops-admin.js",
        "start": 106,
        "end": 117,
        "startLoc": {
          "line": 106,
          "column": 30,
          "position": 1092
        },
        "endLoc": {
          "line": 117,
          "column": 4,
          "position": 1183
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\finops-admin.js",
        "start": 43,
        "end": 54,
        "startLoc": {
          "line": 43,
          "column": 30,
          "position": 511
        },
        "endLoc": {
          "line": 54,
          "column": 5,
          "position": 602
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": ", error, {\n            org_id: req.params.orgId,\n            requested_by: req.ip\n        });\n        res.status(400).json({\n            success: false,\n            error: 'INVALID_REQUEST',\n            message: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\nrouter.post('/test-budget-exceeded'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\finops-admin.js",
        "start": 135,
        "end": 146,
        "startLoc": {
          "line": 135,
          "column": 36,
          "position": 1363
        },
        "endLoc": {
          "line": 146,
          "column": 24,
          "position": 1456
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\finops-admin.js",
        "start": 43,
        "end": 54,
        "startLoc": {
          "line": 43,
          "column": 30,
          "position": 511
        },
        "endLoc": {
          "line": 54,
          "column": 17,
          "position": 604
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": ": req.body,\n            requested_by: req.ip\n        });\n        res.status(400).json({\n            success: false,\n            error: 'INVALID_REQUEST',\n            message: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\nrouter.get",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\finops-admin.js",
        "start": 176,
        "end": 186,
        "startLoc": {
          "line": 176,
          "column": 10,
          "position": 1724
        },
        "endLoc": {
          "line": 186,
          "column": 4,
          "position": 1804
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\finops-admin.js",
        "start": 75,
        "end": 85,
        "startLoc": {
          "line": 75,
          "column": 7,
          "position": 819
        },
        "endLoc": {
          "line": 85,
          "column": 5,
          "position": 899
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ", error, {\n            traceId,\n            spanId\n        });\n        res.status(500).json({\n            success: false,\n            error: 'Internal server error',\n            message: error.message,\n            timestamp: new Date().toISOString(),\n            traceId\n        });\n    }\n})",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\external-integrations.js",
        "start": 129,
        "end": 141,
        "startLoc": {
          "line": 129,
          "column": 27,
          "position": 1445
        },
        "endLoc": {
          "line": 141,
          "column": 2,
          "position": 1526
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\external-integrations.js",
        "start": 92,
        "end": 105,
        "startLoc": {
          "line": 92,
          "column": 24,
          "position": 1098
        },
        "endLoc": {
          "line": 105,
          "column": 2,
          "position": 1181
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ", {\n                traceId,\n                spanId,\n                errors: error.errors\n            });\n            res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors,\n                timestamp: new Date().toISOString(),\n                traceId\n            });\n        }\n        else {\n            structuredLogger.error('Payment processing failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\external-integrations.js",
        "start": 167,
        "end": 181,
        "startLoc": {
          "line": 167,
          "column": 28,
          "position": 1825
        },
        "endLoc": {
          "line": 181,
          "column": 28,
          "position": 1921
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\external-integrations.js",
        "start": 78,
        "end": 92,
        "startLoc": {
          "line": 78,
          "column": 35,
          "position": 1001
        },
        "endLoc": {
          "line": 92,
          "column": 24,
          "position": 1097
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ", error, {\n                traceId,\n                spanId\n            });\n            res.status(500).json({\n                success: false,\n                error: 'Internal server error',\n                message: error.message,\n                timestamp: new Date().toISOString(),\n                traceId\n            });\n        }\n    }\n});\nrouter.post",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\external-integrations.js",
        "start": 181,
        "end": 195,
        "startLoc": {
          "line": 181,
          "column": 28,
          "position": 1922
        },
        "endLoc": {
          "line": 195,
          "column": 5,
          "position": 2011
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\external-integrations.js",
        "start": 92,
        "end": 106,
        "startLoc": {
          "line": 92,
          "column": 24,
          "position": 1098
        },
        "endLoc": {
          "line": 106,
          "column": 4,
          "position": 1187
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "});\n        res.json({\n            success: true,\n            data: result,\n            timestamp: new Date().toISOString(),\n            traceId\n        });\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            structuredLogger.warn('Refund validation failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\external-integrations.js",
        "start": 208,
        "end": 218,
        "startLoc": {
          "line": 208,
          "column": 9,
          "position": 2199
        },
        "endLoc": {
          "line": 218,
          "column": 27,
          "position": 2279
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\external-integrations.js",
        "start": 157,
        "end": 167,
        "startLoc": {
          "line": 157,
          "column": 9,
          "position": 1744
        },
        "endLoc": {
          "line": 167,
          "column": 28,
          "position": 1824
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ", {\n                traceId,\n                spanId,\n                errors: error.errors\n            });\n            res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors,\n                timestamp: new Date().toISOString(),\n                traceId\n            });\n        }\n        else {\n            structuredLogger.error('Payment refund failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\external-integrations.js",
        "start": 218,
        "end": 232,
        "startLoc": {
          "line": 218,
          "column": 27,
          "position": 2280
        },
        "endLoc": {
          "line": 232,
          "column": 24,
          "position": 2376
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\external-integrations.js",
        "start": 78,
        "end": 92,
        "startLoc": {
          "line": 78,
          "column": 35,
          "position": 1001
        },
        "endLoc": {
          "line": 92,
          "column": 24,
          "position": 1097
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ", error, {\n                traceId,\n                spanId\n            });\n            res.status(500).json({\n                success: false,\n                error: 'Internal server error',\n                message: error.message,\n                timestamp: new Date().toISOString(),\n                traceId\n            });\n        }\n    }\n});\nrouter.get('/market-data/:providerId/:symbol'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\external-integrations.js",
        "start": 232,
        "end": 246,
        "startLoc": {
          "line": 232,
          "column": 24,
          "position": 2377
        },
        "endLoc": {
          "line": 246,
          "column": 35,
          "position": 2468
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\external-integrations.js",
        "start": 92,
        "end": 106,
        "startLoc": {
          "line": 92,
          "column": 24,
          "position": 1098
        },
        "endLoc": {
          "line": 106,
          "column": 46,
          "position": 1189
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ", error, {\n            traceId,\n            spanId\n        });\n        res.status(500).json({\n            success: false,\n            error: 'Internal server error',\n            message: error.message,\n            timestamp: new Date().toISOString(),\n            traceId\n        });\n    }\n});\nrouter.post('/market-data/batch'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\external-integrations.js",
        "start": 270,
        "end": 283,
        "startLoc": {
          "line": 270,
          "column": 29,
          "position": 2730
        },
        "endLoc": {
          "line": 283,
          "column": 21,
          "position": 2818
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\external-integrations.js",
        "start": 92,
        "end": 142,
        "startLoc": {
          "line": 92,
          "column": 24,
          "position": 1098
        },
        "endLoc": {
          "line": 142,
          "column": 19,
          "position": 1533
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ", {\n                traceId,\n                spanId,\n                errors: error.errors\n            });\n            res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors,\n                timestamp: new Date().toISOString(),\n                traceId\n            });\n        }\n        else {\n            structuredLogger.error('Market data batch request failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\external-integrations.js",
        "start": 305,
        "end": 319,
        "startLoc": {
          "line": 305,
          "column": 38,
          "position": 3072
        },
        "endLoc": {
          "line": 319,
          "column": 35,
          "position": 3168
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\external-integrations.js",
        "start": 78,
        "end": 92,
        "startLoc": {
          "line": 78,
          "column": 35,
          "position": 1001
        },
        "endLoc": {
          "line": 92,
          "column": 24,
          "position": 1097
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ", error, {\n                traceId,\n                spanId\n            });\n            res.status(500).json({\n                success: false,\n                error: 'Internal server error',\n                message: error.message,\n                timestamp: new Date().toISOString(),\n                traceId\n            });\n        }\n    }\n});\nrouter.get('/weather/:providerId/:location'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\external-integrations.js",
        "start": 319,
        "end": 333,
        "startLoc": {
          "line": 319,
          "column": 35,
          "position": 3169
        },
        "endLoc": {
          "line": 333,
          "column": 33,
          "position": 3260
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\external-integrations.js",
        "start": 92,
        "end": 106,
        "startLoc": {
          "line": 92,
          "column": 24,
          "position": 1098
        },
        "endLoc": {
          "line": 106,
          "column": 46,
          "position": 1189
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ", error, {\n            traceId,\n            spanId\n        });\n        res.status(500).json({\n            success: false,\n            error: 'Internal server error',\n            message: error.message,\n            timestamp: new Date().toISOString(),\n            traceId\n        });\n    }\n});\nrouter.get",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\external-integrations.js",
        "start": 357,
        "end": 370,
        "startLoc": {
          "line": 357,
          "column": 30,
          "position": 3522
        },
        "endLoc": {
          "line": 370,
          "column": 4,
          "position": 3608
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\external-integrations.js",
        "start": 92,
        "end": 142,
        "startLoc": {
          "line": 92,
          "column": 24,
          "position": 1098
        },
        "endLoc": {
          "line": 142,
          "column": 5,
          "position": 1531
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ", {\n                traceId,\n                spanId,\n                errors: error.errors\n            });\n            res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors,\n                timestamp: new Date().toISOString(),\n                traceId\n            });\n        }\n        else {\n            structuredLogger.error('Weather forecast request failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\external-integrations.js",
        "start": 396,
        "end": 410,
        "startLoc": {
          "line": 396,
          "column": 37,
          "position": 3918
        },
        "endLoc": {
          "line": 410,
          "column": 34,
          "position": 4014
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\external-integrations.js",
        "start": 78,
        "end": 92,
        "startLoc": {
          "line": 78,
          "column": 35,
          "position": 1001
        },
        "endLoc": {
          "line": 92,
          "column": 24,
          "position": 1097
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ", error, {\n                traceId,\n                spanId\n            });\n            res.status(500).json({\n                success: false,\n                error: 'Internal server error',\n                message: error.message,\n                timestamp: new Date().toISOString(),\n                traceId\n            });\n        }\n    }\n});\nrouter.get('/health'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\external-integrations.js",
        "start": 410,
        "end": 424,
        "startLoc": {
          "line": 410,
          "column": 34,
          "position": 4015
        },
        "endLoc": {
          "line": 424,
          "column": 10,
          "position": 4106
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\external-integrations.js",
        "start": 92,
        "end": 106,
        "startLoc": {
          "line": 92,
          "column": 24,
          "position": 1098
        },
        "endLoc": {
          "line": 106,
          "column": 46,
          "position": 1189
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ", error, {\n            traceId,\n            spanId\n        });\n        res.status(500).json({\n            success: false,\n            error: 'Internal server error',\n            message: error.message,\n            timestamp: new Date().toISOString(),\n            traceId\n        });\n    }\n});\nrouter.get('/health/:providerId'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\external-integrations.js",
        "start": 450,
        "end": 463,
        "startLoc": {
          "line": 450,
          "column": 36,
          "position": 4403
        },
        "endLoc": {
          "line": 463,
          "column": 22,
          "position": 4491
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\external-integrations.js",
        "start": 92,
        "end": 370,
        "startLoc": {
          "line": 92,
          "column": 24,
          "position": 1098
        },
        "endLoc": {
          "line": 370,
          "column": 42,
          "position": 3610
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ", error, {\n            traceId,\n            spanId\n        });\n        res.status(500).json({\n            success: false,\n            error: 'Internal server error',\n            message: error.message,\n            timestamp: new Date().toISOString(),\n            traceId\n        });\n    }\n});\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\external-integrations.js",
        "start": 490,
        "end": 503,
        "startLoc": {
          "line": 490,
          "column": 33,
          "position": 4769
        },
        "endLoc": {
          "line": 503,
          "column": 7,
          "position": 4853
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\external-integrations.js",
        "start": 92,
        "end": 142,
        "startLoc": {
          "line": 92,
          "column": 24,
          "position": 1098
        },
        "endLoc": {
          "line": 142,
          "column": 7,
          "position": 1529
        }
      }
    },
    {
      "format": "javascript",
      "lines": 25,
      "fragment": "),\n    abTest: z.object({\n        enabled: z.boolean().default(false),\n        variants: z.array(z.object({\n            id: z.string(),\n            subject: z.string(),\n            htmlContent: z.string(),\n            percentage: z.number().min(0).max(100)\n        })).default([]),\n        winner: z.string().optional(),\n        testDuration: z.number().optional()\n    }).optional(),\n    automation: z.object({\n        enabled: z.boolean().default(false),\n        triggers: z.array(z.object({\n            type: z.string(),\n            conditions: z.record(z.any()),\n            delay: z.number().optional()\n        })).default([]),\n        actions: z.array(z.object({\n            type: z.string(),\n            config: z.record(z.any())\n        })).default([])\n    }).optional()\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\email-marketing.js",
        "start": 21,
        "end": 45,
        "startLoc": {
          "line": 21,
          "column": 5,
          "position": 396
        },
        "endLoc": {
          "line": 45,
          "column": 2,
          "position": 694
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\email-marketing.service.js",
        "start": 70,
        "end": 93,
        "startLoc": {
          "line": 70,
          "column": 2,
          "position": 1097
        },
        "endLoc": {
          "line": 93,
          "column": 2,
          "position": 1394
        }
      }
    },
    {
      "format": "javascript",
      "lines": 26,
      "fragment": ").optional(),\n    abTest: z.object({\n        enabled: z.boolean().default(false),\n        variants: z.array(z.object({\n            id: z.string(),\n            subject: z.string(),\n            htmlContent: z.string(),\n            percentage: z.number().min(0).max(100)\n        })).default([]),\n        winner: z.string().optional(),\n        testDuration: z.number().optional()\n    }).optional(),\n    automation: z.object({\n        enabled: z.boolean().default(false),\n        triggers: z.array(z.object({\n            type: z.string(),\n            conditions: z.record(z.any()),\n            delay: z.number().optional()\n        })).default([]),\n        actions: z.array(z.object({\n            type: z.string(),\n            config: z.record(z.any())\n        })).default([])\n    }).optional()\n});\nconst CreateSubscriberSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\email-marketing.js",
        "start": 61,
        "end": 86,
        "startLoc": {
          "line": 61,
          "column": 2,
          "position": 1045
        },
        "endLoc": {
          "line": 86,
          "column": 23,
          "position": 1353
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\email-marketing.service.js",
        "start": 70,
        "end": 46,
        "startLoc": {
          "line": 70,
          "column": 2,
          "position": 1093
        },
        "endLoc": {
          "line": 46,
          "column": 21,
          "position": 700
        }
      }
    },
    {
      "format": "javascript",
      "lines": 16,
      "fragment": "),\n    source: z.string().optional(),\n    ipAddress: z.string().optional(),\n    userAgent: z.string().optional(),\n    location: z.object({\n        country: z.string().optional(),\n        region: z.string().optional(),\n        city: z.string().optional(),\n        timezone: z.string().optional()\n    }).optional(),\n    preferences: z.object({\n        frequency: z.enum(['daily', 'weekly', 'monthly', 'never']).default('weekly'),\n        categories: z.array(z.string()).default([]),\n        format: z.enum(['html', 'text']).default('html')\n    }).optional()\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\email-marketing.js",
        "start": 93,
        "end": 108,
        "startLoc": {
          "line": 93,
          "column": 2,
          "position": 1506
        },
        "endLoc": {
          "line": 108,
          "column": 2,
          "position": 1721
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\email-marketing.service.js",
        "start": 111,
        "end": 125,
        "startLoc": {
          "line": 111,
          "column": 2,
          "position": 1655
        },
        "endLoc": {
          "line": 125,
          "column": 2,
          "position": 1869
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": "().optional()\n        }).optional(),\n        tags: z.array(z.string()).optional()\n    }).optional(),\n    sort: z.object({\n        field: z.enum(['name', 'createdAt', 'sentAt', 'openRate', 'clickRate']),\n        direction: z.enum(['asc', 'desc'])\n    }).optional(),\n    pagination: z.object({\n        page: z.number().min(1).default(1),\n        limit: z.number().min(1).max(100).default(20)\n    }).optional()\n});\nrouter.post('/campaigns'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\email-marketing.js",
        "start": 129,
        "end": 142,
        "startLoc": {
          "line": 129,
          "column": 9,
          "position": 2115
        },
        "endLoc": {
          "line": 142,
          "column": 13,
          "position": 2292
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\email-marketing.service.js",
        "start": 136,
        "end": 91,
        "startLoc": {
          "line": 136,
          "column": 5,
          "position": 1999
        },
        "endLoc": {
          "line": 91,
          "column": 12,
          "position": 1660
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ", {\n            error: error instanceof Error ? error.message : 'Unknown error',\n            organizationId: req.user?.organizationId\n        });\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        res.status(500).json({\n            success: false,\n            error: 'Failed to create email campaign'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\email-marketing.js",
        "start": 165,
        "end": 178,
        "startLoc": {
          "line": 165,
          "column": 42,
          "position": 2532
        },
        "endLoc": {
          "line": 178,
          "column": 34,
          "position": 2655
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\social-media-management.js",
        "start": 113,
        "end": 126,
        "startLoc": {
          "line": 113,
          "column": 42,
          "position": 1878
        },
        "endLoc": {
          "line": 126,
          "column": 34,
          "position": 2001
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ", {\n            error: error instanceof Error ? error.message : 'Unknown error',\n            organizationId: req.user?.organizationId\n        });\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        res.status(500).json({\n            success: false,\n            error: 'Failed to list email campaigns'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\email-marketing.js",
        "start": 202,
        "end": 215,
        "startLoc": {
          "line": 202,
          "column": 41,
          "position": 2903
        },
        "endLoc": {
          "line": 215,
          "column": 33,
          "position": 3026
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\social-media-management.js",
        "start": 113,
        "end": 126,
        "startLoc": {
          "line": 113,
          "column": 42,
          "position": 1878
        },
        "endLoc": {
          "line": 126,
          "column": 34,
          "position": 2001
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ": req.params.id,\n            organizationId: req.user?.organizationId\n        });\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        res.status(500).json({\n            success: false,\n            error: 'Failed to update email campaign'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\email-marketing.js",
        "start": 278,
        "end": 290,
        "startLoc": {
          "line": 278,
          "column": 11,
          "position": 3614
        },
        "endLoc": {
          "line": 290,
          "column": 34,
          "position": 3721
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\social-media-management.js",
        "start": 203,
        "end": 126,
        "startLoc": {
          "line": 203,
          "column": 10,
          "position": 2710
        },
        "endLoc": {
          "line": 126,
          "column": 34,
          "position": 2001
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ", {\n            error: error instanceof Error ? error.message : 'Unknown error',\n            organizationId: req.user?.organizationId\n        });\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        res.status(500).json({\n            success: false,\n            error: 'Failed to create email subscriber'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\email-marketing.js",
        "start": 381,
        "end": 394,
        "startLoc": {
          "line": 381,
          "column": 44,
          "position": 4534
        },
        "endLoc": {
          "line": 394,
          "column": 36,
          "position": 4657
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\social-media-management.js",
        "start": 113,
        "end": 126,
        "startLoc": {
          "line": 113,
          "column": 42,
          "position": 1878
        },
        "endLoc": {
          "line": 126,
          "column": 34,
          "position": 2001
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ": req.params.id,\n            organizationId: req.user?.organizationId\n        });\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        res.status(500).json({\n            success: false,\n            error: 'Failed to update email subscriber'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\email-marketing.js",
        "start": 467,
        "end": 479,
        "startLoc": {
          "line": 467,
          "column": 13,
          "position": 5325
        },
        "endLoc": {
          "line": 479,
          "column": 36,
          "position": 5432
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\social-media-management.js",
        "start": 203,
        "end": 126,
        "startLoc": {
          "line": 203,
          "column": 10,
          "position": 2710
        },
        "endLoc": {
          "line": 126,
          "column": 34,
          "position": 2001
        }
      }
    },
    {
      "format": "javascript",
      "lines": 20,
      "fragment": ".getStats();\n        res.json({\n            success: true,\n            data: stats,\n            timestamp: new Date().toISOString()\n        });\n    }\n    catch (error) {\n        structuredLogger.error('Failed to get dunning stats', {\n            error: error instanceof Error ? error.message : String(error),\n            requestId: req.headers['x-request-id'] || ''\n        });\n        res.status(500).json({\n            success: false,\n            error: 'Failed to get dunning stats',\n            message: error instanceof Error ? error.message : String(error)\n        });\n    }\n});\nrouter.post",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\dunning-3-toques.js",
        "start": 34,
        "end": 53,
        "startLoc": {
          "line": 34,
          "column": 22,
          "position": 503
        },
        "endLoc": {
          "line": 53,
          "column": 5,
          "position": 678
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\dunning-solid.js",
        "start": 84,
        "end": 103,
        "startLoc": {
          "line": 84,
          "column": 20,
          "position": 1356
        },
        "endLoc": {
          "line": 103,
          "column": 4,
          "position": 1531
        }
      }
    },
    {
      "format": "javascript",
      "lines": 29,
      "fragment": ".updateConfig(validatedData);\n        structuredLogger.info('Dunning configuration updated', {\n            config: validatedData,\n            requestId: req.headers['x-request-id'] || ''\n        });\n        res.json({\n            success: true,\n            message: 'Dunning configuration updated successfully',\n            data: validatedData,\n            timestamp: new Date().toISOString()\n        });\n    }\n    catch (error) {\n        structuredLogger.error('Failed to update dunning config', {\n            error: error instanceof Error ? error.message : String(error),\n            requestId: req.headers['x-request-id'] || ''\n        });\n        res.status(500).json({\n            success: false,\n            error: 'Failed to update dunning configuration',\n            message: error instanceof Error ? error.message : String(error)\n        });\n    }\n});\nrouter.get('/config', async (req, res) => {\n    try {\n        const config = {\n            enabled: true,\n            maxSteps",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\dunning-3-toques.js",
        "start": 238,
        "end": 266,
        "startLoc": {
          "line": 238,
          "column": 22,
          "position": 2469
        },
        "endLoc": {
          "line": 266,
          "column": 9,
          "position": 2729
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\dunning-solid.js",
        "start": 371,
        "end": 399,
        "startLoc": {
          "line": 371,
          "column": 20,
          "position": 4281
        },
        "endLoc": {
          "line": 399,
          "column": 11,
          "position": 4541
        }
      }
    },
    {
      "format": "javascript",
      "lines": 22,
      "fragment": ",\n            notificationEnabled: true\n        };\n        res.json({\n            success: true,\n            data: config,\n            timestamp: new Date().toISOString()\n        });\n    }\n    catch (error) {\n        structuredLogger.error('Failed to get dunning config', {\n            error: error instanceof Error ? error.message : String(error),\n            requestId: req.headers['x-request-id'] || ''\n        });\n        res.status(500).json({\n            success: false,\n            error: 'Failed to get dunning configuration',\n            message: error instanceof Error ? error.message : String(error)\n        });\n    }\n});\nrouter.post('/campaigns/:campaignId/cancel'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\dunning-3-toques.js",
        "start": 276,
        "end": 297,
        "startLoc": {
          "line": 276,
          "column": 3,
          "position": 2806
        },
        "endLoc": {
          "line": 297,
          "column": 32,
          "position": 2989
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\dunning-solid.js",
        "start": 408,
        "end": 429,
        "startLoc": {
          "line": 408,
          "column": 2,
          "position": 4617
        },
        "endLoc": {
          "line": 429,
          "column": 11,
          "position": 4800
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": "),\n    size: z.number().positive(),\n    mimeType: z.string(),\n    checksum: z.string(),\n    isPublic: z.boolean().default(false),\n    isEncrypted: z.boolean().default(false),\n    retentionPolicy: z.object({\n        retentionDays: z.number().positive().optional(),\n        autoDelete: z.boolean().default(false),\n        legalHold: z.boolean().default(false)\n    }).optional()\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\document-management.js",
        "start": 22,
        "end": 33,
        "startLoc": {
          "line": 22,
          "column": 8,
          "position": 400
        },
        "endLoc": {
          "line": 33,
          "column": 2,
          "position": 540
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\document-management.service.js",
        "start": 61,
        "end": 71,
        "startLoc": {
          "line": 61,
          "column": 2,
          "position": 908
        },
        "endLoc": {
          "line": 71,
          "column": 2,
          "position": 1047
        }
      }
    },
    {
      "format": "javascript",
      "lines": 17,
      "fragment": "().optional()\n        }).optional(),\n        sizeRange: z.object({\n            min: z.number().optional(),\n            max: z.number().optional()\n        }).optional()\n    }).optional(),\n    sort: z.object({\n        field: z.enum(['name', 'createdAt', 'updatedAt', 'size', 'type']),\n        direction: z.enum(['asc', 'desc'])\n    }).optional(),\n    pagination: z.object({\n        page: z.number().min(1).default(1),\n        limit: z.number().min(1).max(100).default(20)\n    }).optional()\n});\nrouter.post('/'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\document-management.js",
        "start": 76,
        "end": 92,
        "startLoc": {
          "line": 76,
          "column": 9,
          "position": 1239
        },
        "endLoc": {
          "line": 92,
          "column": 4,
          "position": 1444
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\document-management.service.js",
        "start": 87,
        "end": 91,
        "startLoc": {
          "line": 87,
          "column": 5,
          "position": 1262
        },
        "endLoc": {
          "line": 91,
          "column": 12,
          "position": 1660
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ", {\n            error: error instanceof Error ? error.message : 'Unknown error',\n            organizationId: req.user?.organizationId\n        });\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        res.status(500).json({\n            success: false,\n            error: 'Failed to create document'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\document-management.js",
        "start": 111,
        "end": 124,
        "startLoc": {
          "line": 111,
          "column": 36,
          "position": 1643
        },
        "endLoc": {
          "line": 124,
          "column": 28,
          "position": 1766
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\social-media-management.js",
        "start": 113,
        "end": 126,
        "startLoc": {
          "line": 113,
          "column": 42,
          "position": 1878
        },
        "endLoc": {
          "line": 126,
          "column": 34,
          "position": 2001
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ", {\n            error: error instanceof Error ? error.message : 'Unknown error',\n            organizationId: req.user?.organizationId\n        });\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        res.status(500).json({\n            success: false,\n            error: 'Failed to list documents'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\document-management.js",
        "start": 140,
        "end": 153,
        "startLoc": {
          "line": 140,
          "column": 35,
          "position": 1911
        },
        "endLoc": {
          "line": 153,
          "column": 27,
          "position": 2034
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\social-media-management.js",
        "start": 113,
        "end": 126,
        "startLoc": {
          "line": 113,
          "column": 42,
          "position": 1878
        },
        "endLoc": {
          "line": 126,
          "column": 34,
          "position": 2001
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ": req.params.id,\n            organizationId: req.user?.organizationId\n        });\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        res.status(500).json({\n            success: false,\n            error: 'Failed to update document'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\document-management.js",
        "start": 212,
        "end": 224,
        "startLoc": {
          "line": 212,
          "column": 11,
          "position": 2581
        },
        "endLoc": {
          "line": 224,
          "column": 28,
          "position": 2688
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\social-media-management.js",
        "start": 203,
        "end": 126,
        "startLoc": {
          "line": 203,
          "column": 10,
          "position": 2710
        },
        "endLoc": {
          "line": 126,
          "column": 34,
          "position": 2001
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ", {\n            error: error instanceof Error ? error.message : 'Unknown error',\n            documentId: req.params.id,\n            organizationId: req.user?.organizationId\n        });\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        res.status(500).json({\n            success: false,\n            error: 'Failed to create document version'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\document-management.js",
        "start": 284,
        "end": 298,
        "startLoc": {
          "line": 284,
          "column": 44,
          "position": 3219
        },
        "endLoc": {
          "line": 298,
          "column": 36,
          "position": 3353
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\document-management.js",
        "start": 210,
        "end": 126,
        "startLoc": {
          "line": 210,
          "column": 36,
          "position": 2554
        },
        "endLoc": {
          "line": 126,
          "column": 34,
          "position": 2001
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ", async (req, res) => {\n    try {\n        const { id } = req.params;\n        const organizationId = req.user?.organizationId || 'demo-org';\n        const document = await documentManagementService.getDocument(id, organizationId);\n        if (!document) {\n            return res.status(404).json({\n                success: false,\n                error: 'Document not found'\n            });\n        }\n        res.json({\n            success: true,\n            data: document.",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\document-management.js",
        "start": 302,
        "end": 315,
        "startLoc": {
          "line": 302,
          "column": 16,
          "position": 3372
        },
        "endLoc": {
          "line": 315,
          "column": 2,
          "position": 3511
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\document-management.js",
        "start": 157,
        "end": 170,
        "startLoc": {
          "line": 157,
          "column": 7,
          "position": 2053
        },
        "endLoc": {
          "line": 170,
          "column": 2,
          "position": 2192
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ", {\n            error: error instanceof Error ? error.message : 'Unknown error',\n            documentId: req.params.id,\n            organizationId: req.user?.organizationId\n        });\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        res.status(500).json({\n            success: false,\n            error: 'Failed to grant document permission'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\document-management.js",
        "start": 356,
        "end": 370,
        "startLoc": {
          "line": 356,
          "column": 46,
          "position": 3893
        },
        "endLoc": {
          "line": 370,
          "column": 38,
          "position": 4027
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\document-management.js",
        "start": 210,
        "end": 126,
        "startLoc": {
          "line": 210,
          "column": 36,
          "position": 2554
        },
        "endLoc": {
          "line": 126,
          "column": 34,
          "position": 2001
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ", {\n            error: error instanceof Error ? error.message : 'Unknown error',\n            organizationId: req.user?.organizationId\n        });\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        res.status(500).json({\n            success: false,\n            error: 'Failed to search documents'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\document-management.js",
        "start": 386,
        "end": 399,
        "startLoc": {
          "line": 386,
          "column": 37,
          "position": 4172
        },
        "endLoc": {
          "line": 399,
          "column": 29,
          "position": 4295
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\social-media-management.js",
        "start": 113,
        "end": 126,
        "startLoc": {
          "line": 113,
          "column": 42,
          "position": 1878
        },
        "endLoc": {
          "line": 126,
          "column": 34,
          "position": 2001
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "} from '@econeura/db/src/schema';\nimport { eq, and, ilike, or, gte, lte, count } from 'drizzle-orm';\nimport { structuredLogger } from '../lib/structured-logger.js';\nconst router = Router();\nrouter.get('/', async (req, res) => {\n    try {\n        const orgId = req.headers['x-org-id'];\n        if (!orgId) {\n            return res.status(400).json({ error: 'Missing x-org-id header' });\n        }\n        const filters = DealFilterSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\deals.js",
        "start": 6,
        "end": 16,
        "startLoc": {
          "line": 6,
          "column": 2,
          "position": 80
        },
        "endLoc": {
          "line": 16,
          "column": 17,
          "position": 225
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\invoices.js",
        "start": 6,
        "end": 16,
        "startLoc": {
          "line": 6,
          "column": 2,
          "position": 77
        },
        "endLoc": {
          "line": 16,
          "column": 20,
          "position": 222
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ",\n            message: error.message\n        });\n    }\n});\nrouter.get('/:id', async (req, res) => {\n    try {\n        const { id } = req.params;\n        const orgId = req.headers['x-org-id'];\n        if (!orgId) {\n            return res.status(400).json({ error: 'Missing x-org-id header' });\n        }\n        await db.execute(`SET LOCAL app.org_id = '${orgId}'`);\n        const [deal",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\deals.js",
        "start": 76,
        "end": 89,
        "startLoc": {
          "line": 76,
          "column": 27,
          "position": 908
        },
        "endLoc": {
          "line": 89,
          "column": 5,
          "position": 1041
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\invoices.js",
        "start": 90,
        "end": 103,
        "startLoc": {
          "line": 90,
          "column": 30,
          "position": 1059
        },
        "endLoc": {
          "line": 103,
          "column": 8,
          "position": 1192
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ",\n            message: error.message\n        });\n    }\n});\nrouter.post('/', async (req, res) => {\n    try {\n        const orgId = req.headers['x-org-id'];\n        const userId = req.headers['x-user-id'];\n        if (!orgId) {\n            return res.status(400).json({ error: 'Missing x-org-id header' });\n        }\n        const dealData",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\deals.js",
        "start": 112,
        "end": 124,
        "startLoc": {
          "line": 112,
          "column": 26,
          "position": 1251
        },
        "endLoc": {
          "line": 124,
          "column": 9,
          "position": 1367
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\invoices.js",
        "start": 126,
        "end": 138,
        "startLoc": {
          "line": 126,
          "column": 29,
          "position": 1402
        },
        "endLoc": {
          "line": 138,
          "column": 12,
          "position": 1518
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ",\n            message: error.message\n        });\n    }\n});\nrouter.put('/:id', async (req, res) => {\n    try {\n        const { id } = req.params;\n        const orgId = req.headers['x-org-id'];\n        const userId = req.headers['x-user-id'];\n        if (!orgId) {\n            return res.status(400).json({ error: 'Missing x-org-id header' });\n        }\n        const updateData = UpdateDealSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\deals.js",
        "start": 162,
        "end": 175,
        "startLoc": {
          "line": 162,
          "column": 24,
          "position": 1700
        },
        "endLoc": {
          "line": 175,
          "column": 17,
          "position": 1836
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\invoices.js",
        "start": 200,
        "end": 213,
        "startLoc": {
          "line": 200,
          "column": 27,
          "position": 2178
        },
        "endLoc": {
          "line": 213,
          "column": 20,
          "position": 2314
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": "});\n        res.json({\n            success: true,\n            data: updatedDeal\n        });\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        structuredLogger.error('Failed to move deal stage'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\deals.js",
        "start": 264,
        "end": 277,
        "startLoc": {
          "line": 264,
          "column": 9,
          "position": 2638
        },
        "endLoc": {
          "line": 277,
          "column": 28,
          "position": 2736
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\deals.js",
        "start": 196,
        "end": 209,
        "startLoc": {
          "line": 196,
          "column": 9,
          "position": 2013
        },
        "endLoc": {
          "line": 209,
          "column": 24,
          "position": 2111
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ",\n            message: error.message\n        });\n    }\n});\nrouter.delete('/:id', async (req, res) => {\n    try {\n        const { id } = req.params;\n        const orgId = req.headers['x-org-id'];\n        const userId = req.headers['x-user-id'];\n        if (!orgId) {\n            return res.status(400).json({ error: 'Missing x-org-id header' });\n        }\n        await db.execute(`SET LOCAL app.org_id = '${orgId}'`);\n        const [deletedDeal",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\deals.js",
        "start": 284,
        "end": 298,
        "startLoc": {
          "line": 284,
          "column": 28,
          "position": 2809
        },
        "endLoc": {
          "line": 298,
          "column": 12,
          "position": 2957
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\invoices.js",
        "start": 329,
        "end": 295,
        "startLoc": {
          "line": 329,
          "column": 25,
          "position": 3438
        },
        "endLoc": {
          "line": 295,
          "column": 15,
          "position": 3154
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ";\n        res.set({\n            'X-Est-Cost-EUR': '0.0020',\n            'X-Budget-Pct': '0.2',\n            'X-Latency-ms': '40',\n            'X-Route': 'local',\n            'X-Correlation-Id': `req_${Date.now()}`\n        });\n        res.json({\n            success: true,\n            data: summary\n        });\n    }\n    catch (error) {\n        structuredLogger",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\deals.js",
        "start": 364,
        "end": 378,
        "startLoc": {
          "line": 364,
          "column": 2,
          "position": 3711
        },
        "endLoc": {
          "line": 378,
          "column": 17,
          "position": 3805
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\interactions.js",
        "start": 206,
        "end": 220,
        "startLoc": {
          "line": 206,
          "column": 2,
          "position": 1904
        },
        "endLoc": {
          "line": 220,
          "column": 7,
          "position": 1998
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ";\n        res.set({\n            'X-Est-Cost-EUR': '0.0030',\n            'X-Budget-Pct': '0.3',\n            'X-Latency-ms': '60',\n            'X-Route': 'local',\n            'X-Correlation-Id': `req_${Date.now()}`\n        });\n        res.json({\n            success: true,\n            data: analytics\n        });\n    }\n    catch (error) {\n        structuredLogger",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\deals.js",
        "start": 430,
        "end": 444,
        "startLoc": {
          "line": 430,
          "column": 2,
          "position": 4580
        },
        "endLoc": {
          "line": 444,
          "column": 17,
          "position": 4674
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\interactions.js",
        "start": 233,
        "end": 247,
        "startLoc": {
          "line": 233,
          "column": 2,
          "position": 2125
        },
        "endLoc": {
          "line": 247,
          "column": 7,
          "position": 2219
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "error: error instanceof Error ? error.message : String(error),\n            requestId: req.headers['x-request-id'] || ''\n        });\n        res.status(500).json({\n            success: false,\n            error: 'Failed to get NBA recommendations',\n            message: error instanceof Error ? error.message : String(error)\n        });\n    }\n});\nrouter.get",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\deals-nba.js",
        "start": 181,
        "end": 191,
        "startLoc": {
          "line": 181,
          "column": 13,
          "position": 1846
        },
        "endLoc": {
          "line": 191,
          "column": 4,
          "position": 1952
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\deals-nba.js",
        "start": 108,
        "end": 118,
        "startLoc": {
          "line": 108,
          "column": 13,
          "position": 1160
        },
        "endLoc": {
          "line": 118,
          "column": 5,
          "position": 1266
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": "senderId: z.string().uuid(),\n    senderType: z.enum(['customer', 'agent', 'bot']),\n    message: z.string().min(1),\n    messageType: z.enum(['text', 'image', 'file', 'system']).default('text'),\n    attachments: z.array(z.object({\n        id: z.string(),\n        name: z.string(),\n        url: z.string().url(),\n        size: z.number(),\n        type: z.string()\n    })).default([])\n});\nconst CreateArticleSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\customer-support.js",
        "start": 34,
        "end": 46,
        "startLoc": {
          "line": 34,
          "column": 5,
          "position": 565
        },
        "endLoc": {
          "line": 46,
          "column": 20,
          "position": 732
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\customer-support.service.js",
        "start": 39,
        "end": 24,
        "startLoc": {
          "line": 39,
          "column": 5,
          "position": 579
        },
        "endLoc": {
          "line": 24,
          "column": 19,
          "position": 365
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": "),\n    skills: z.array(z.string()).default([]),\n    languages: z.array(z.string()).default(['en']),\n    workingHours: z.object({\n        timezone: z.string().default('UTC'),\n        schedule: z.record(z.object({\n            start: z.string(),\n            end: z.string(),\n            isWorking: z.boolean().default(true)\n        }))\n    }).optional()\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\customer-support.js",
        "start": 59,
        "end": 70,
        "startLoc": {
          "line": 59,
          "column": 3,
          "position": 948
        },
        "endLoc": {
          "line": 70,
          "column": 2,
          "position": 1086
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\customer-support.service.js",
        "start": 77,
        "end": 87,
        "startLoc": {
          "line": 77,
          "column": 2,
          "position": 1144
        },
        "endLoc": {
          "line": 87,
          "column": 2,
          "position": 1281
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "});\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        res.status(500).json({\n            success: false,\n            error: 'Failed to create support ticket'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\customer-support.js",
        "start": 91,
        "end": 101,
        "startLoc": {
          "line": 91,
          "column": 9,
          "position": 1287
        },
        "endLoc": {
          "line": 101,
          "column": 34,
          "position": 1373
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\social-media-management.js",
        "start": 116,
        "end": 126,
        "startLoc": {
          "line": 116,
          "column": 9,
          "position": 1915
        },
        "endLoc": {
          "line": 126,
          "column": 34,
          "position": 2001
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "});\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        res.status(500).json({\n            success: false,\n            error: 'Failed to update support ticket'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\customer-support.js",
        "start": 188,
        "end": 198,
        "startLoc": {
          "line": 188,
          "column": 9,
          "position": 2164
        },
        "endLoc": {
          "line": 198,
          "column": 34,
          "position": 2250
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\social-media-management.js",
        "start": 116,
        "end": 126,
        "startLoc": {
          "line": 116,
          "column": 9,
          "position": 1915
        },
        "endLoc": {
          "line": 126,
          "column": 34,
          "position": 2001
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ", {\n            error: error instanceof Error ? error.message : 'Unknown error',\n            ticketId: req.params.id\n        });\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        res.status(500).json({\n            success: false,\n            error: 'Failed to send message'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\customer-support.js",
        "start": 248,
        "end": 261,
        "startLoc": {
          "line": 248,
          "column": 33,
          "position": 2730
        },
        "endLoc": {
          "line": 261,
          "column": 25,
          "position": 2852
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\customer-support.js",
        "start": 185,
        "end": 126,
        "startLoc": {
          "line": 185,
          "column": 42,
          "position": 2128
        },
        "endLoc": {
          "line": 126,
          "column": 34,
          "position": 2001
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ", {\n            error: error instanceof Error ? error.message : 'Unknown error'\n        });\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        res.status(500).json({\n            success: false,\n            error: 'Failed to create knowledge base article'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\customer-support.js",
        "start": 307,
        "end": 319,
        "startLoc": {
          "line": 307,
          "column": 50,
          "position": 3238
        },
        "endLoc": {
          "line": 319,
          "column": 42,
          "position": 3349
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\customer-support.js",
        "start": 89,
        "end": 126,
        "startLoc": {
          "line": 89,
          "column": 42,
          "position": 1262
        },
        "endLoc": {
          "line": 126,
          "column": 34,
          "position": 2001
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ", {\n            error: error instanceof Error ? error.message : 'Unknown error'\n        });\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        res.status(500).json({\n            success: false,\n            error: 'Failed to create support agent'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\customer-support.js",
        "start": 365,
        "end": 377,
        "startLoc": {
          "line": 365,
          "column": 41,
          "position": 3750
        },
        "endLoc": {
          "line": 377,
          "column": 33,
          "position": 3861
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\customer-support.js",
        "start": 89,
        "end": 126,
        "startLoc": {
          "line": 89,
          "column": 42,
          "position": 1262
        },
        "endLoc": {
          "line": 126,
          "column": 34,
          "position": 2001
        }
      }
    },
    {
      "format": "javascript",
      "lines": 32,
      "fragment": "z.object({\n        title: z.string().min(1).max(255),\n        description: z.string().optional(),\n        excerpt: z.string().optional(),\n        tags: z.array(z.string()).default([]),\n        categories: z.array(z.string()).default([]),\n        author: z.string().min(1),\n        language: z.string().default('es'),\n        keywords: z.array(z.string()).default([]),\n        customFields: z.record(z.any()).default({}),\n        seo: z.object({\n            metaTitle: z.string().optional(),\n            metaDescription: z.string().optional(),\n            metaKeywords: z.array(z.string()).default([]),\n            canonicalUrl: z.string().optional(),\n            ogTitle: z.string().optional(),\n            ogDescription: z.string().optional(),\n            ogImage: z.string().optional(),\n            twitterCard: z.string().optional(),\n            structuredData: z.record(z.any()).optional()\n        }).optional(),\n        analytics: z.object({\n            views: z.number().default(0),\n            uniqueViews: z.number().default(0),\n            shares: z.number().default(0),\n            comments: z.number().default(0),\n            likes: z.number().default(0),\n            engagement: z.number().default(0),\n            bounceRate: z.number().default(0),\n            timeOnPage: z.number().default(0)\n        }).optional()\n    }),",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\content-management.js",
        "start": 12,
        "end": 43,
        "startLoc": {
          "line": 12,
          "column": 2,
          "position": 233
        },
        "endLoc": {
          "line": 43,
          "column": 2,
          "position": 723
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\content-management.service.js",
        "start": 9,
        "end": 40,
        "startLoc": {
          "line": 9,
          "column": 2,
          "position": 164
        },
        "endLoc": {
          "line": 40,
          "column": 2,
          "position": 653
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": "().optional(),\n    isPublic: z.boolean().default(false),\n    isFeatured: z.boolean().default(false),\n    isSticky: z.boolean().default(false),\n    allowComments: z.boolean().default(true),\n    allowSharing: z.boolean().default(true),\n    workflow: z.object({\n        currentStep: z.string(),\n        steps: z.array(z.object({\n            step: z.string(),\n            status: z.enum(['pending', 'in_progress', 'completed', 'rejected']),\n            assignedTo: z.string().uuid().optional(),\n            completedAt: z.string",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\content-management.js",
        "start": 52,
        "end": 64,
        "startLoc": {
          "line": 52,
          "column": 9,
          "position": 879
        },
        "endLoc": {
          "line": 64,
          "column": 7,
          "position": 1061
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\content-management.service.js",
        "start": 72,
        "end": 84,
        "startLoc": {
          "line": 72,
          "column": 5,
          "position": 1091
        },
        "endLoc": {
          "line": 84,
          "column": 5,
          "position": 1273
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": "),\n    workflow: z.object({\n        currentStep: z.string(),\n        steps: z.array(z.object({\n            step: z.string(),\n            status: z.enum(['pending', 'in_progress', 'completed', 'rejected']),\n            assignedTo: z.string().uuid().optional(),\n            completedAt: z.string().datetime().optional(),\n            comments: z.string().optional()\n        })).default([]),\n        approvedBy: z.string().uuid().optional(),\n        approvedAt: z.string().datetime().optional()\n    }).optional()\n});\nconst CreateVersionSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\content-management.js",
        "start": 121,
        "end": 135,
        "startLoc": {
          "line": 121,
          "column": 2,
          "position": 2000
        },
        "endLoc": {
          "line": 135,
          "column": 20,
          "position": 2187
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\content-management.service.js",
        "start": 77,
        "end": 71,
        "startLoc": {
          "line": 77,
          "column": 5,
          "position": 1176
        },
        "endLoc": {
          "line": 71,
          "column": 20,
          "position": 1151
        }
      }
    },
    {
      "format": "javascript",
      "lines": 19,
      "fragment": "().optional()\n        }).optional(),\n        isPublic: z.boolean().optional(),\n        isFeatured: z.boolean().optional()\n    }).optional(),\n    sort: z.object({\n        field: z.enum(['title', 'createdAt', 'updatedAt', 'publishedAt', 'views', 'engagement']),\n        direction: z.enum(['asc', 'desc'])\n    }).optional(),\n    pagination: z.object({\n        page: z.number().min(1).default(1),\n        limit: z.number().min(1).max(100).default(20)\n    }).optional()\n});\nrouter.post('/', async (req, res) => {\n    try {\n        const organizationId = req.user?.organizationId || 'demo-org';\n        const createdBy = req.user?.id || 'demo-user';\n        const validatedData = CreateContentSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\content-management.js",
        "start": 153,
        "end": 171,
        "startLoc": {
          "line": 153,
          "column": 9,
          "position": 2533
        },
        "endLoc": {
          "line": 171,
          "column": 20,
          "position": 2789
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\content-management.service.js",
        "start": 106,
        "end": 96,
        "startLoc": {
          "line": 106,
          "column": 5,
          "position": 1584
        },
        "endLoc": {
          "line": 96,
          "column": 21,
          "position": 1510
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ", {\n            error: error instanceof Error ? error.message : 'Unknown error',\n            organizationId: req.user?.organizationId\n        });\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        res.status(500).json({\n            success: false,\n            error: 'Failed to create content'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\content-management.js",
        "start": 200,
        "end": 213,
        "startLoc": {
          "line": 200,
          "column": 35,
          "position": 3118
        },
        "endLoc": {
          "line": 213,
          "column": 27,
          "position": 3241
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\social-media-management.js",
        "start": 113,
        "end": 126,
        "startLoc": {
          "line": 113,
          "column": 42,
          "position": 1878
        },
        "endLoc": {
          "line": 126,
          "column": 34,
          "position": 2001
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ", {\n            error: error instanceof Error ? error.message : 'Unknown error',\n            organizationId: req.user?.organizationId\n        });\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        res.status(500).json({\n            success: false,\n            error: 'Failed to list content'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\content-management.js",
        "start": 237,
        "end": 250,
        "startLoc": {
          "line": 237,
          "column": 33,
          "position": 3489
        },
        "endLoc": {
          "line": 250,
          "column": 25,
          "position": 3612
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\social-media-management.js",
        "start": 113,
        "end": 126,
        "startLoc": {
          "line": 113,
          "column": 42,
          "position": 1878
        },
        "endLoc": {
          "line": 126,
          "column": 34,
          "position": 2001
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ", organizationId);\n        if (!content) {\n            return res.status(404).json({\n                success: false,\n                error: 'Content not found'\n            });\n        }\n        res.json({\n            success: true,\n            data: content,\n            message: 'Content retrieved successfully'\n        });\n    }\n    catch (error) {\n        structuredLogger.error('Failed to get content by slug via API'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\content-management.js",
        "start": 287,
        "end": 301,
        "startLoc": {
          "line": 287,
          "column": 5,
          "position": 3964
        },
        "endLoc": {
          "line": 301,
          "column": 40,
          "position": 4064
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\content-management.js",
        "start": 258,
        "end": 272,
        "startLoc": {
          "line": 258,
          "column": 3,
          "position": 3700
        },
        "endLoc": {
          "line": 272,
          "column": 32,
          "position": 3800
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": "= {\n            ...validatedData,\n            publishedAt: validatedData.publishedAt ? new Date(validatedData.publishedAt) : undefined,\n            scheduledAt: validatedData.scheduledAt ? new Date(validatedData.scheduledAt) : undefined,\n            expiresAt: validatedData.expiresAt ? new Date(validatedData.expiresAt) : undefined,\n            workflow: validatedData.workflow ? {\n                ...validatedData.workflow,\n                steps: validatedData.workflow.steps.map(step => ({\n                    ...step,\n                    completedAt: step.completedAt ? new Date(step.completedAt) : undefined\n                })),\n                approvedAt: validatedData.workflow.approvedAt ? new Date(validatedData.workflow.approvedAt) : undefined\n            } : undefined\n        };\n        const content = await contentManagementService.updateContent",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\content-management.js",
        "start": 318,
        "end": 332,
        "startLoc": {
          "line": 318,
          "column": 2,
          "position": 4255
        },
        "endLoc": {
          "line": 332,
          "column": 14,
          "position": 4457
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\content-management.js",
        "start": 172,
        "end": 186,
        "startLoc": {
          "line": 172,
          "column": 2,
          "position": 2804
        },
        "endLoc": {
          "line": 186,
          "column": 14,
          "position": 3006
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ": req.params.id,\n            organizationId: req.user?.organizationId\n        });\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        res.status(500).json({\n            success: false,\n            error: 'Failed to update content'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\content-management.js",
        "start": 352,
        "end": 364,
        "startLoc": {
          "line": 352,
          "column": 10,
          "position": 4619
        },
        "endLoc": {
          "line": 364,
          "column": 27,
          "position": 4726
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\social-media-management.js",
        "start": 203,
        "end": 126,
        "startLoc": {
          "line": 203,
          "column": 10,
          "position": 2710
        },
        "endLoc": {
          "line": 126,
          "column": 34,
          "position": 2001
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ", {\n            error: error instanceof Error ? error.message : 'Unknown error',\n            contentId: req.params.id,\n            organizationId: req.user?.organizationId\n        });\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        res.status(500).json({\n            success: false,\n            error: 'Failed to create content version'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\content-management.js",
        "start": 424,
        "end": 438,
        "startLoc": {
          "line": 424,
          "column": 43,
          "position": 5257
        },
        "endLoc": {
          "line": 438,
          "column": 35,
          "position": 5391
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\content-management.js",
        "start": 350,
        "end": 126,
        "startLoc": {
          "line": 350,
          "column": 35,
          "position": 4592
        },
        "endLoc": {
          "line": 126,
          "column": 34,
          "position": 2001
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ", async (req, res) => {\n    try {\n        const { id } = req.params;\n        const organizationId = req.user?.organizationId || 'demo-org';\n        const content = await contentManagementService.getContent(id, organizationId);\n        if (!content) {\n            return res.status(404).json({\n                success: false,\n                error: 'Content not found'\n            });\n        }\n        res.json({\n            success: true,\n            data: content.",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\content-management.js",
        "start": 442,
        "end": 455,
        "startLoc": {
          "line": 442,
          "column": 16,
          "position": 5410
        },
        "endLoc": {
          "line": 455,
          "column": 2,
          "position": 5549
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\content-management.js",
        "start": 254,
        "end": 267,
        "startLoc": {
          "line": 254,
          "column": 7,
          "position": 3631
        },
        "endLoc": {
          "line": 267,
          "column": 2,
          "position": 3770
        }
      }
    },
    {
      "format": "javascript",
      "lines": 17,
      "fragment": ", async (req, res) => {\n    try {\n        const organizationId = req.user?.organizationId || 'demo-org';\n        const searchParams = SearchContentSchema.parse(req.query);\n        if (searchParams.filters?.dateRange) {\n            if (searchParams.filters.dateRange.from) {\n                searchParams.filters.dateRange.from = new Date(searchParams.filters.dateRange.from);\n            }\n            if (searchParams.filters.dateRange.to) {\n                searchParams.filters.dateRange.to = new Date(searchParams.filters.dateRange.to);\n            }\n        }\n        const result = await contentManagementService.searchContent(organizationId, searchParams);\n        res.json({\n            success: true,\n            data: result,\n            message: 'Content search completed successfully'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\content-management.js",
        "start": 539,
        "end": 555,
        "startLoc": {
          "line": 539,
          "column": 10,
          "position": 6292
        },
        "endLoc": {
          "line": 555,
          "column": 40,
          "position": 6496
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\content-management.js",
        "start": 217,
        "end": 233,
        "startLoc": {
          "line": 217,
          "column": 4,
          "position": 3260
        },
        "endLoc": {
          "line": 233,
          "column": 33,
          "position": 3464
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ", {\n            error: error instanceof Error ? error.message : 'Unknown error',\n            organizationId: req.user?.organizationId\n        });\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        res.status(500).json({\n            success: false,\n            error: 'Failed to search content'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\content-management.js",
        "start": 559,
        "end": 572,
        "startLoc": {
          "line": 559,
          "column": 35,
          "position": 6521
        },
        "endLoc": {
          "line": 572,
          "column": 27,
          "position": 6644
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\social-media-management.js",
        "start": 113,
        "end": 126,
        "startLoc": {
          "line": 113,
          "column": 42,
          "position": 1878
        },
        "endLoc": {
          "line": 126,
          "column": 34,
          "position": 2001
        }
      }
    },
    {
      "format": "javascript",
      "lines": 19,
      "fragment": ", {\n            orgId,\n            count: result.length,\n            total,\n            filters\n        });\n        res.json({\n            success: true,\n            data: result,\n            pagination: {\n                page: pagination.page,\n                limit: pagination.limit,\n                total,\n                totalPages: Math.ceil(total / pagination.limit)\n            }\n        });\n    }\n    catch (error) {\n        structuredLogger.error('Failed to retrieve contacts'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\contacts.js",
        "start": 47,
        "end": 65,
        "startLoc": {
          "line": 47,
          "column": 21,
          "position": 676
        },
        "endLoc": {
          "line": 65,
          "column": 30,
          "position": 796
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\deals.js",
        "start": 53,
        "end": 71,
        "startLoc": {
          "line": 53,
          "column": 18,
          "position": 738
        },
        "endLoc": {
          "line": 71,
          "column": 27,
          "position": 858
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ",\n            message: error.message\n        });\n    }\n});\nrouter.get('/:id', async (req, res) => {\n    try {\n        const { id } = req.params;\n        const orgId = req.headers['x-org-id'];\n        if (!orgId) {\n            return res.status(400).json({ error: 'Missing x-org-id header' });\n        }\n        await db.execute(`SET LOCAL app.org_id = '${orgId}'`);\n        const [contact",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\contacts.js",
        "start": 70,
        "end": 83,
        "startLoc": {
          "line": 70,
          "column": 30,
          "position": 846
        },
        "endLoc": {
          "line": 83,
          "column": 8,
          "position": 979
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\invoices.js",
        "start": 90,
        "end": 103,
        "startLoc": {
          "line": 90,
          "column": 30,
          "position": 1059
        },
        "endLoc": {
          "line": 103,
          "column": 8,
          "position": 1192
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ",\n            message: error.message\n        });\n    }\n});\nrouter.post('/', async (req, res) => {\n    try {\n        const orgId = req.headers['x-org-id'];\n        const userId = req.headers['x-user-id'];\n        if (!orgId) {\n            return res.status(400).json({ error: 'Missing x-org-id header' });\n        }\n        const contactData",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\contacts.js",
        "start": 106,
        "end": 118,
        "startLoc": {
          "line": 106,
          "column": 29,
          "position": 1189
        },
        "endLoc": {
          "line": 118,
          "column": 12,
          "position": 1305
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\invoices.js",
        "start": 126,
        "end": 138,
        "startLoc": {
          "line": 126,
          "column": 29,
          "position": 1402
        },
        "endLoc": {
          "line": 138,
          "column": 12,
          "position": 1518
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ",\n            message: error.message\n        });\n    }\n});\nrouter.put('/:id', async (req, res) => {\n    try {\n        const { id } = req.params;\n        const orgId = req.headers['x-org-id'];\n        const userId = req.headers['x-user-id'];\n        if (!orgId) {\n            return res.status(400).json({ error: 'Missing x-org-id header' });\n        }\n        const updateData = UpdateContactSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\contacts.js",
        "start": 155,
        "end": 168,
        "startLoc": {
          "line": 155,
          "column": 27,
          "position": 1639
        },
        "endLoc": {
          "line": 168,
          "column": 20,
          "position": 1775
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\invoices.js",
        "start": 200,
        "end": 213,
        "startLoc": {
          "line": 200,
          "column": 27,
          "position": 2178
        },
        "endLoc": {
          "line": 213,
          "column": 20,
          "position": 2314
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ",\n            message: error.message\n        });\n    }\n});\nrouter.delete('/:id', async (req, res) => {\n    try {\n        const { id } = req.params;\n        const orgId = req.headers['x-org-id'];\n        const userId = req.headers['x-user-id'];\n        if (!orgId) {\n            return res.status(400).json({ error: 'Missing x-org-id header' });\n        }\n        await db.execute(`SET LOCAL app.org_id = '${orgId}'`);\n        const [deletedContact",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\contacts.js",
        "start": 209,
        "end": 223,
        "startLoc": {
          "line": 209,
          "column": 27,
          "position": 2123
        },
        "endLoc": {
          "line": 223,
          "column": 15,
          "position": 2271
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\invoices.js",
        "start": 329,
        "end": 295,
        "startLoc": {
          "line": 329,
          "column": 25,
          "position": 3438
        },
        "endLoc": {
          "line": 295,
          "column": 15,
          "position": 3154
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "});\n        res.status(500).json({\n            error: 'Failed to retrieve contacts',\n            message: error.message\n        });\n    }\n});\nrouter.get('/:id', async (req, res) => {\n    try {\n        const { id } = req.params;\n        const orgId = req.headers['x-org-id'] ||",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\contacts-simple.js",
        "start": 60,
        "end": 70,
        "startLoc": {
          "line": 60,
          "column": 9,
          "position": 573
        },
        "endLoc": {
          "line": 70,
          "column": 3,
          "position": 671
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\contacts.js",
        "start": 68,
        "end": 78,
        "startLoc": {
          "line": 68,
          "column": 9,
          "position": 825
        },
        "endLoc": {
          "line": 78,
          "column": 2,
          "position": 922
        }
      }
    },
    {
      "format": "javascript",
      "lines": 24,
      "fragment": ") {\n            return res.status(404).json({\n                error: 'Contact not found',\n                message: `Contact with ID ${id} not found or access denied`\n            });\n        }\n        structuredLogger.info('Contact retrieved', { orgId, contactId: id });\n        res.json({\n            success: true,\n            data: contact\n        });\n    }\n    catch (error) {\n        structuredLogger.error('Failed to retrieve contact', error, {\n            orgId: req.headers['x-org-id'],\n            contactId: req.params.id\n        });\n        res.status(500).json({\n            error: 'Failed to retrieve contact',\n            message: error.message\n        });\n    }\n});\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\contacts-simple.js",
        "start": 72,
        "end": 95,
        "startLoc": {
          "line": 72,
          "column": 10,
          "position": 713
        },
        "endLoc": {
          "line": 95,
          "column": 7,
          "position": 894
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\contacts.js",
        "start": 88,
        "end": 111,
        "startLoc": {
          "line": 88,
          "column": 8,
          "position": 1030
        },
        "endLoc": {
          "line": 111,
          "column": 7,
          "position": 1211
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ",\n                timestamp: new Date().toISOString(),\n                traceId\n            }\n        });\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Invalid configuration data',\n                details: error.errors,\n                poolName",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\connection-pool.js",
        "start": 248,
        "end": 260,
        "startLoc": {
          "line": 248,
          "column": 42,
          "position": 2716
        },
        "endLoc": {
          "line": 260,
          "column": 9,
          "position": 2809
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\performance-v2.js",
        "start": 208,
        "end": 220,
        "startLoc": {
          "line": 208,
          "column": 37,
          "position": 2368
        },
        "endLoc": {
          "line": 220,
          "column": 8,
          "position": 2461
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ", async (req, res) => {\n    const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n    const { poolName } = req.params;\n    try {\n        const poolStats = connectionPoolService.getPoolStats(poolName);\n        if (!poolStats) {\n            return res.status(404).json({\n                success: false,\n                error: 'Pool not found',\n                poolName,\n                traceId\n            });\n        }\n        const healthChecks",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\connection-pool.js",
        "start": 482,
        "end": 496,
        "startLoc": {
          "line": 482,
          "column": 20,
          "position": 4878
        },
        "endLoc": {
          "line": 496,
          "column": 13,
          "position": 5055
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\warmup.js",
        "start": 16,
        "end": 93,
        "startLoc": {
          "line": 16,
          "column": 10,
          "position": 234
        },
        "endLoc": {
          "line": 93,
          "column": 9,
          "position": 1257
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": ",\n            traceId\n        });\n    }\n});\nrouter.get('/health', async (req, res) => {\n    const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n    try {\n        const stats = connectionPoolService.getStats();\n        const pools",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\connection-pool.js",
        "start": 538,
        "end": 548,
        "startLoc": {
          "line": 538,
          "column": 9,
          "position": 5464
        },
        "endLoc": {
          "line": 548,
          "column": 6,
          "position": 5593
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\performance-v2.js",
        "start": 287,
        "end": 30,
        "startLoc": {
          "line": 287,
          "column": 42,
          "position": 3227
        },
        "endLoc": {
          "line": 30,
          "column": 10,
          "position": 546
        }
      }
    },
    {
      "format": "javascript",
      "lines": 19,
      "fragment": ", {\n            orgId,\n            count: result.length,\n            total,\n            filters\n        });\n        res.json({\n            success: true,\n            data: result,\n            pagination: {\n                page: pagination.page,\n                limit: pagination.limit,\n                total,\n                totalPages: Math.ceil(total / pagination.limit)\n            }\n        });\n    }\n    catch (error) {\n        structuredLogger.error('Failed to retrieve companies'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\companies.js",
        "start": 40,
        "end": 58,
        "startLoc": {
          "line": 40,
          "column": 22,
          "position": 477
        },
        "endLoc": {
          "line": 58,
          "column": 31,
          "position": 597
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\deals.js",
        "start": 53,
        "end": 71,
        "startLoc": {
          "line": 53,
          "column": 18,
          "position": 738
        },
        "endLoc": {
          "line": 71,
          "column": 27,
          "position": 858
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ",\n            message: error.message\n        });\n    }\n});\nrouter.get('/:id', async (req, res) => {\n    try {\n        const { id } = req.params;\n        const orgId = req.headers['x-org-id'];\n        if (!orgId) {\n            return res.status(400).json({ error: 'Missing x-org-id header' });\n        }\n        await db.execute(`SET LOCAL app.org_id = '${orgId}'`);\n        const [company",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\companies.js",
        "start": 63,
        "end": 76,
        "startLoc": {
          "line": 63,
          "column": 31,
          "position": 647
        },
        "endLoc": {
          "line": 76,
          "column": 8,
          "position": 780
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\invoices.js",
        "start": 90,
        "end": 103,
        "startLoc": {
          "line": 90,
          "column": 30,
          "position": 1059
        },
        "endLoc": {
          "line": 103,
          "column": 8,
          "position": 1192
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ",\n            message: error.message\n        });\n    }\n});\nrouter.post('/', async (req, res) => {\n    try {\n        const orgId = req.headers['x-org-id'];\n        const userId = req.headers['x-user-id'];\n        if (!orgId) {\n            return res.status(400).json({ error: 'Missing x-org-id header' });\n        }\n        const companyData",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\companies.js",
        "start": 99,
        "end": 111,
        "startLoc": {
          "line": 99,
          "column": 29,
          "position": 990
        },
        "endLoc": {
          "line": 111,
          "column": 12,
          "position": 1106
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\invoices.js",
        "start": 126,
        "end": 138,
        "startLoc": {
          "line": 126,
          "column": 29,
          "position": 1402
        },
        "endLoc": {
          "line": 138,
          "column": 12,
          "position": 1518
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ",\n            message: error.message\n        });\n    }\n});\nrouter.put('/:id', async (req, res) => {\n    try {\n        const { id } = req.params;\n        const orgId = req.headers['x-org-id'];\n        const userId = req.headers['x-user-id'];\n        if (!orgId) {\n            return res.status(400).json({ error: 'Missing x-org-id header' });\n        }\n        const updateData = UpdateCompanySchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\companies.js",
        "start": 147,
        "end": 160,
        "startLoc": {
          "line": 147,
          "column": 27,
          "position": 1421
        },
        "endLoc": {
          "line": 160,
          "column": 20,
          "position": 1557
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\invoices.js",
        "start": 200,
        "end": 213,
        "startLoc": {
          "line": 200,
          "column": 27,
          "position": 2178
        },
        "endLoc": {
          "line": 213,
          "column": 20,
          "position": 2314
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ",\n            message: error.message\n        });\n    }\n});\nrouter.delete('/:id', async (req, res) => {\n    try {\n        const { id } = req.params;\n        const orgId = req.headers['x-org-id'];\n        const userId = req.headers['x-user-id'];\n        if (!orgId) {\n            return res.status(400).json({ error: 'Missing x-org-id header' });\n        }\n        await db.execute(`SET LOCAL app.org_id = '${orgId}'`);\n        const [deletedCompany",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\companies.js",
        "start": 201,
        "end": 215,
        "startLoc": {
          "line": 201,
          "column": 27,
          "position": 1905
        },
        "endLoc": {
          "line": 215,
          "column": 15,
          "position": 2053
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\invoices.js",
        "start": 329,
        "end": 295,
        "startLoc": {
          "line": 329,
          "column": 25,
          "position": 3438
        },
        "endLoc": {
          "line": 295,
          "column": 15,
          "position": 3154
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": ",\n            traceId\n        });\n    }\n});\nrouter.get('/health', async (req, res) => {\n    const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n    try {\n        const taxonomies = companiesTaxonomyService.getTaxonomies();\n        const",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\companies-taxonomy.js",
        "start": 245,
        "end": 255,
        "startLoc": {
          "line": 245,
          "column": 7,
          "position": 2275
        },
        "endLoc": {
          "line": 255,
          "column": 6,
          "position": 2402
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\performance-v2.js",
        "start": 287,
        "end": 31,
        "startLoc": {
          "line": 287,
          "column": 42,
          "position": 3227
        },
        "endLoc": {
          "line": 31,
          "column": 17,
          "position": 451
        }
      }
    },
    {
      "format": "javascript",
      "lines": 18,
      "fragment": ", {\n            orgId,\n            count: paginatedResults.length,\n            total\n        });\n        res.json({\n            success: true,\n            data: paginatedResults,\n            pagination: {\n                page,\n                limit,\n                total,\n                totalPages: Math.ceil(total / limit)\n            }\n        });\n    }\n    catch (error) {\n        structuredLogger.error('Failed to retrieve companies'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\companies-simple.js",
        "start": 37,
        "end": 54,
        "startLoc": {
          "line": 37,
          "column": 22,
          "position": 421
        },
        "endLoc": {
          "line": 54,
          "column": 31,
          "position": 525
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\contacts-simple.js",
        "start": 41,
        "end": 58,
        "startLoc": {
          "line": 41,
          "column": 21,
          "position": 449
        },
        "endLoc": {
          "line": 58,
          "column": 30,
          "position": 553
        }
      }
    },
    {
      "format": "javascript",
      "lines": 19,
      "fragment": "limit)\n            }\n        });\n    }\n    catch (error) {\n        structuredLogger.error('Failed to retrieve companies', error, {\n            orgId: req.headers['x-org-id'],\n            query: req.query\n        });\n        res.status(500).json({\n            error: 'Failed to retrieve companies',\n            message: error.message\n        });\n    }\n});\nrouter.get('/:id', async (req, res) => {\n    try {\n        const { id } = req.params;\n        const orgId = req.headers['x-org-id'] ||",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\companies-simple.js",
        "start": 49,
        "end": 67,
        "startLoc": {
          "line": 49,
          "column": 2,
          "position": 497
        },
        "endLoc": {
          "line": 67,
          "column": 3,
          "position": 652
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\companies.js",
        "start": 53,
        "end": 71,
        "startLoc": {
          "line": 53,
          "column": 2,
          "position": 569
        },
        "endLoc": {
          "line": 71,
          "column": 2,
          "position": 723
        }
      }
    },
    {
      "format": "javascript",
      "lines": 26,
      "fragment": ") {\n            return res.status(404).json({\n                error: 'Company not found',\n                message: `Company with ID ${id} not found or access denied`\n            });\n        }\n        structuredLogger.info('Company retrieved', { orgId, companyId: id });\n        res.json({\n            success: true,\n            data: company\n        });\n    }\n    catch (error) {\n        structuredLogger.error('Failed to retrieve company', error, {\n            orgId: req.headers['x-org-id'],\n            companyId: req.params.id\n        });\n        res.status(500).json({\n            error: 'Failed to retrieve company',\n            message: error.message\n        });\n    }\n});\nrouter.post('/', async (req, res) => {\n    try {\n        const orgId = req.headers['x-org-id'] ||",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\companies-simple.js",
        "start": 69,
        "end": 94,
        "startLoc": {
          "line": 69,
          "column": 10,
          "position": 694
        },
        "endLoc": {
          "line": 94,
          "column": 3,
          "position": 914
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\companies.js",
        "start": 81,
        "end": 106,
        "startLoc": {
          "line": 81,
          "column": 8,
          "position": 831
        },
        "endLoc": {
          "line": 106,
          "column": 2,
          "position": 1050
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": "structuredLogger.error('Failed to create company', error, {\n            orgId: req.headers['x-org-id'],\n            userId: req.headers['x-user-id'],\n            body: req.body\n        });\n        res.status(500).json({\n            error: 'Failed to create company',\n            message: error.message\n        });\n    }\n});\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\companies-simple.js",
        "start": 118,
        "end": 129,
        "startLoc": {
          "line": 118,
          "column": 9,
          "position": 1116
        },
        "endLoc": {
          "line": 129,
          "column": 7,
          "position": 1204
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\companies.js",
        "start": 141,
        "end": 152,
        "startLoc": {
          "line": 141,
          "column": 9,
          "position": 1355
        },
        "endLoc": {
          "line": 152,
          "column": 7,
          "position": 1443
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": ", error, {\n            orgId: req.headers['x-org-id'],\n            userId: Array.isArray(req.headers['x-user-id']) ? req.headers['x-user-id'][0] : req.headers['x-user-id']\n        });\n        res.status(500).json({\n            error: 'Failed to establish SSE connection',\n            message: error.message\n        });\n    }\n});\nrouter.get",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\cockpit-bff-live.js",
        "start": 47,
        "end": 57,
        "startLoc": {
          "line": 47,
          "column": 45,
          "position": 579
        },
        "endLoc": {
          "line": 57,
          "column": 4,
          "position": 681
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\events.js",
        "start": 38,
        "end": 48,
        "startLoc": {
          "line": 38,
          "column": 37,
          "position": 389
        },
        "endLoc": {
          "line": 48,
          "column": 5,
          "position": 491
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": ", error, {\n            department: req.params.department\n        });\n        res.status(400).json({\n            success: false,\n            error: 'INVALID_REQUEST',\n            message: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\nrouter.get('/agent/:agentId/status'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\cockpit-bff-live.js",
        "start": 107,
        "end": 117,
        "startLoc": {
          "line": 107,
          "column": 40,
          "position": 1152
        },
        "endLoc": {
          "line": 117,
          "column": 25,
          "position": 1236
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\cockpit-bff-live.js",
        "start": 78,
        "end": 88,
        "startLoc": {
          "line": 78,
          "column": 32,
          "position": 889
        },
        "endLoc": {
          "line": 88,
          "column": 31,
          "position": 973
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": ", error, {\n            department: req.params.department\n        });\n        res.status(400).json({\n            success: false,\n            error: 'INVALID_REQUEST',\n            message: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\nrouter.get('/events/:department/history'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\cockpit-bff-live.js",
        "start": 166,
        "end": 176,
        "startLoc": {
          "line": 166,
          "column": 34,
          "position": 1691
        },
        "endLoc": {
          "line": 176,
          "column": 30,
          "position": 1775
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\cockpit-bff-live.js",
        "start": 78,
        "end": 88,
        "startLoc": {
          "line": 78,
          "column": 32,
          "position": 889
        },
        "endLoc": {
          "line": 88,
          "column": 31,
          "position": 973
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": ", error, {\n            department: req.params.department\n        });\n        res.status(400).json({\n            success: false,\n            error: 'INVALID_REQUEST',\n            message: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\nrouter.get('/websocket/info'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\cockpit-bff-live.js",
        "start": 207,
        "end": 217,
        "startLoc": {
          "line": 207,
          "column": 30,
          "position": 2055
        },
        "endLoc": {
          "line": 217,
          "column": 18,
          "position": 2139
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\cockpit-bff-live.js",
        "start": 78,
        "end": 88,
        "startLoc": {
          "line": 78,
          "column": 32,
          "position": 889
        },
        "endLoc": {
          "line": 88,
          "column": 31,
          "position": 973
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "});\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        logger.error('Error writing log entry'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\centralized-logging.js",
        "start": 119,
        "end": 129,
        "startLoc": {
          "line": 119,
          "column": 9,
          "position": 1672
        },
        "endLoc": {
          "line": 129,
          "column": 26,
          "position": 1752
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\project-completion-deployment.js",
        "start": 112,
        "end": 122,
        "startLoc": {
          "line": 112,
          "column": 9,
          "position": 1318
        },
        "endLoc": {
          "line": 122,
          "column": 28,
          "position": 1398
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "});\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        logger.error('Error searching logs'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\centralized-logging.js",
        "start": 154,
        "end": 164,
        "startLoc": {
          "line": 154,
          "column": 9,
          "position": 2057
        },
        "endLoc": {
          "line": 164,
          "column": 23,
          "position": 2137
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\project-completion-deployment.js",
        "start": 112,
        "end": 122,
        "startLoc": {
          "line": 112,
          "column": 9,
          "position": 1318
        },
        "endLoc": {
          "line": 122,
          "column": 28,
          "position": 1398
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "});\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        logger.error('Error aggregating logs'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\centralized-logging.js",
        "start": 186,
        "end": 196,
        "startLoc": {
          "line": 186,
          "column": 9,
          "position": 2348
        },
        "endLoc": {
          "line": 196,
          "column": 25,
          "position": 2428
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\project-completion-deployment.js",
        "start": 112,
        "end": 122,
        "startLoc": {
          "line": 112,
          "column": 9,
          "position": 1318
        },
        "endLoc": {
          "line": 122,
          "column": 28,
          "position": 1398
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "});\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        logger.error('Error creating alert rule'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\centralized-logging.js",
        "start": 265,
        "end": 275,
        "startLoc": {
          "line": 265,
          "column": 9,
          "position": 3061
        },
        "endLoc": {
          "line": 275,
          "column": 28,
          "position": 3141
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\project-completion-deployment.js",
        "start": 112,
        "end": 122,
        "startLoc": {
          "line": 112,
          "column": 9,
          "position": 1318
        },
        "endLoc": {
          "line": 122,
          "column": 28,
          "position": 1398
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "});\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        logger.error('Error creating retention policy'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\centralized-logging.js",
        "start": 393,
        "end": 403,
        "startLoc": {
          "line": 393,
          "column": 9,
          "position": 4215
        },
        "endLoc": {
          "line": 403,
          "column": 34,
          "position": 4295
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\project-completion-deployment.js",
        "start": 112,
        "end": 122,
        "startLoc": {
          "line": 112,
          "column": 9,
          "position": 1318
        },
        "endLoc": {
          "line": 122,
          "column": 28,
          "position": 1398
        }
      }
    },
    {
      "format": "javascript",
      "lines": 19,
      "fragment": ".getConfig();\n        res.json({\n            success: true,\n            data: config\n        });\n    }\n    catch (error) {\n        logger.error('Error getting configuration', { error });\n        res.status(500).json({\n            success: false,\n            error: 'Failed to get configuration',\n            message: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\nrouter.put('/config', async (req, res) => {\n    try {\n        const validatedData = UpdateConfigSchema.parse(req.body);\n        const updatedConfig = await loggingService",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\centralized-logging.js",
        "start": 522,
        "end": 540,
        "startLoc": {
          "line": 522,
          "column": 15,
          "position": 5400
        },
        "endLoc": {
          "line": 540,
          "column": 15,
          "position": 5568
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\project-completion-deployment.js",
        "start": 363,
        "end": 381,
        "startLoc": {
          "line": 363,
          "column": 25,
          "position": 3629
        },
        "endLoc": {
          "line": 381,
          "column": 25,
          "position": 3797
        }
      }
    },
    {
      "format": "javascript",
      "lines": 26,
      "fragment": ".updateConfig(validatedData);\n        res.json({\n            success: true,\n            data: updatedConfig,\n            message: 'Configuration updated successfully'\n        });\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        logger.error('Error updating configuration', { error });\n        res.status(500).json({\n            success: false,\n            error: 'Failed to update configuration',\n            message: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\nrouter.get('/health', async (req, res) => {\n    try {\n        const statistics",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\centralized-logging.js",
        "start": 540,
        "end": 565,
        "startLoc": {
          "line": 540,
          "column": 15,
          "position": 5569
        },
        "endLoc": {
          "line": 565,
          "column": 11,
          "position": 5781
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\project-completion-deployment.js",
        "start": 381,
        "end": 406,
        "startLoc": {
          "line": 381,
          "column": 25,
          "position": 3798
        },
        "endLoc": {
          "line": 406,
          "column": 7,
          "position": 4010
        }
      }
    },
    {
      "format": "javascript",
      "lines": 17,
      "fragment": "}\n        };\n        res.json({\n            success: true,\n            data: health\n        });\n    }\n    catch (error) {\n        logger.error('Error checking health', { error });\n        res.status(500).json({\n            success: false,\n            error: 'Health check failed',\n            message: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\nrouter.post('/logs/bulk'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\centralized-logging.js",
        "start": 584,
        "end": 600,
        "startLoc": {
          "line": 584,
          "column": 13,
          "position": 6003
        },
        "endLoc": {
          "line": 600,
          "column": 13,
          "position": 6124
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\project-completion-deployment.js",
        "start": 424,
        "end": 440,
        "startLoc": {
          "line": 424,
          "column": 13,
          "position": 4207
        },
        "endLoc": {
          "line": 440,
          "column": 11,
          "position": 4328
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ");\n        if (!environment) {\n            return res.status(404).json({\n                success: false,\n                error: 'Environment not found'\n            });\n        }\n        res.json({\n            success: true,\n            data: environment,\n            timestamp: new Date().toISOString()\n        });\n    }\n    catch (error) {\n        structuredLogger.error('Error updating environment metrics'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\blue-green-deployment.js",
        "start": 114,
        "end": 128,
        "startLoc": {
          "line": 114,
          "column": 8,
          "position": 1588
        },
        "endLoc": {
          "line": 128,
          "column": 37,
          "position": 1693
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\blue-green-deployment.js",
        "start": 81,
        "end": 95,
        "startLoc": {
          "line": 81,
          "column": 14,
          "position": 1168
        },
        "endLoc": {
          "line": 95,
          "column": 28,
          "position": 1273
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "});\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        logger.error('Failed to create backup configuration'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\backup-recovery.js",
        "start": 168,
        "end": 178,
        "startLoc": {
          "line": 168,
          "column": 9,
          "position": 2086
        },
        "endLoc": {
          "line": 178,
          "column": 40,
          "position": 2166
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\project-completion-deployment.js",
        "start": 112,
        "end": 122,
        "startLoc": {
          "line": 112,
          "column": 9,
          "position": 1318
        },
        "endLoc": {
          "line": 122,
          "column": 28,
          "position": 1398
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "});\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        logger.error('Failed to update backup configuration'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\backup-recovery.js",
        "start": 207,
        "end": 217,
        "startLoc": {
          "line": 207,
          "column": 9,
          "position": 2444
        },
        "endLoc": {
          "line": 217,
          "column": 40,
          "position": 2524
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\project-completion-deployment.js",
        "start": 112,
        "end": 122,
        "startLoc": {
          "line": 112,
          "column": 9,
          "position": 1318
        },
        "endLoc": {
          "line": 122,
          "column": 28,
          "position": 1398
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": ", async (req, res) => {\n    try {\n        const { id } = req.params;\n        const config = await backupRecoveryService.getBackupConfig(id);\n        if (!config) {\n            return res.status(404).json({\n                success: false,\n                error: 'Backup configuration not found'\n            });\n        }\n        const",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\backup-recovery.js",
        "start": 260,
        "end": 270,
        "startLoc": {
          "line": 260,
          "column": 24,
          "position": 2927
        },
        "endLoc": {
          "line": 270,
          "column": 6,
          "position": 3026
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\backup-recovery.js",
        "start": 124,
        "end": 134,
        "startLoc": {
          "line": 124,
          "column": 15,
          "position": 1684
        },
        "endLoc": {
          "line": 134,
          "column": 7,
          "position": 1783
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "});\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        logger.error('Failed to execute backup'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\backup-recovery.js",
        "start": 309,
        "end": 319,
        "startLoc": {
          "line": 309,
          "column": 9,
          "position": 3394
        },
        "endLoc": {
          "line": 319,
          "column": 27,
          "position": 3474
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\project-completion-deployment.js",
        "start": 112,
        "end": 122,
        "startLoc": {
          "line": 112,
          "column": 9,
          "position": 1318
        },
        "endLoc": {
          "line": 122,
          "column": 28,
          "position": 1398
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "});\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        logger.error('Failed to execute recovery'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\backup-recovery.js",
        "start": 435,
        "end": 445,
        "startLoc": {
          "line": 435,
          "column": 9,
          "position": 4566
        },
        "endLoc": {
          "line": 445,
          "column": 29,
          "position": 4646
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\project-completion-deployment.js",
        "start": 112,
        "end": 122,
        "startLoc": {
          "line": 112,
          "column": 9,
          "position": 1318
        },
        "endLoc": {
          "line": 122,
          "column": 28,
          "position": 1398
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": ".id\n        });\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        res.status(500).json({\n            success: false,\n            error: 'Internal server error'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\azure-integration.js",
        "start": 59,
        "end": 70,
        "startLoc": {
          "line": 59,
          "column": 2,
          "position": 830
        },
        "endLoc": {
          "line": 70,
          "column": 24,
          "position": 920
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\customer-support.js",
        "start": 187,
        "end": 126,
        "startLoc": {
          "line": 187,
          "column": 7,
          "position": 2160
        },
        "endLoc": {
          "line": 126,
          "column": 34,
          "position": 2001
        }
      }
    },
    {
      "format": "javascript",
      "lines": 18,
      "fragment": ", error, {\n            userId: req.user?.id\n        });\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        res.status(500).json({\n            success: false,\n            error: 'Internal server error',\n            message: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\nrouter.post('/speech/synthesis'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\azure-integration.js",
        "start": 95,
        "end": 112,
        "startLoc": {
          "line": 95,
          "column": 26,
          "position": 1163
        },
        "endLoc": {
          "line": 112,
          "column": 20,
          "position": 1307
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\azure-integration.js",
        "start": 58,
        "end": 75,
        "startLoc": {
          "line": 58,
          "column": 25,
          "position": 815
        },
        "endLoc": {
          "line": 75,
          "column": 22,
          "position": 959
        }
      }
    },
    {
      "format": "javascript",
      "lines": 18,
      "fragment": ", error, {\n            userId: req.user?.id\n        });\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        res.status(500).json({\n            success: false,\n            error: 'Internal server error',\n            message: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\nrouter.get",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\azure-integration.js",
        "start": 127,
        "end": 144,
        "startLoc": {
          "line": 127,
          "column": 26,
          "position": 1490
        },
        "endLoc": {
          "line": 144,
          "column": 4,
          "position": 1632
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\azure-integration.js",
        "start": 58,
        "end": 75,
        "startLoc": {
          "line": 58,
          "column": 25,
          "position": 815
        },
        "endLoc": {
          "line": 75,
          "column": 5,
          "position": 957
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "});\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        logger.error('Error creating test suite'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\automated-testing.js",
        "start": 111,
        "end": 121,
        "startLoc": {
          "line": 111,
          "column": 9,
          "position": 1238
        },
        "endLoc": {
          "line": 121,
          "column": 28,
          "position": 1318
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\project-completion-deployment.js",
        "start": 112,
        "end": 122,
        "startLoc": {
          "line": 112,
          "column": 9,
          "position": 1318
        },
        "endLoc": {
          "line": 122,
          "column": 28,
          "position": 1398
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "});\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        logger.error('Error creating secret rotation'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\automated-testing.js",
        "start": 255,
        "end": 265,
        "startLoc": {
          "line": 255,
          "column": 9,
          "position": 2597
        },
        "endLoc": {
          "line": 265,
          "column": 33,
          "position": 2677
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\project-completion-deployment.js",
        "start": 112,
        "end": 122,
        "startLoc": {
          "line": 112,
          "column": 9,
          "position": 1318
        },
        "endLoc": {
          "line": 122,
          "column": 28,
          "position": 1398
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "});\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        logger.error('Error creating security checklist'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\automated-testing.js",
        "start": 370,
        "end": 380,
        "startLoc": {
          "line": 370,
          "column": 9,
          "position": 3664
        },
        "endLoc": {
          "line": 380,
          "column": 36,
          "position": 3744
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\project-completion-deployment.js",
        "start": 112,
        "end": 122,
        "startLoc": {
          "line": 112,
          "column": 9,
          "position": 1318
        },
        "endLoc": {
          "line": 122,
          "column": 28,
          "position": 1398
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": "});\n    }\n    catch (error) {\n        logger.error('Error getting configuration', { error });\n        res.status(500).json({\n            success: false,\n            error: 'Failed to get configuration',\n            message: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\nrouter.put('/config', async (req, res) => {\n    try {\n        const validatedData = UpdateConfigSchema.parse(req.body);\n        Object",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\automated-testing.js",
        "start": 472,
        "end": 486,
        "startLoc": {
          "line": 472,
          "column": 9,
          "position": 4595
        },
        "endLoc": {
          "line": 486,
          "column": 7,
          "position": 4728
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\project-completion-deployment.js",
        "start": 367,
        "end": 381,
        "startLoc": {
          "line": 367,
          "column": 9,
          "position": 3656
        },
        "endLoc": {
          "line": 381,
          "column": 6,
          "position": 3789
        }
      }
    },
    {
      "format": "javascript",
      "lines": 23,
      "fragment": ",\n            message: 'Configuration updated successfully'\n        });\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        logger.error('Error updating configuration', { error });\n        res.status(500).json({\n            success: false,\n            error: 'Failed to update configuration',\n            message: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\nrouter.get('/health', async (req, res) => {\n    try {\n        const statistics = await testingService",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\automated-testing.js",
        "start": 489,
        "end": 511,
        "startLoc": {
          "line": 489,
          "column": 14,
          "position": 4758
        },
        "endLoc": {
          "line": 511,
          "column": 15,
          "position": 4950
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\project-completion-deployment.js",
        "start": 384,
        "end": 565,
        "startLoc": {
          "line": 384,
          "column": 14,
          "position": 3824
        },
        "endLoc": {
          "line": 565,
          "column": 15,
          "position": 5787
        }
      }
    },
    {
      "format": "javascript",
      "lines": 17,
      "fragment": "}\n        };\n        res.json({\n            success: true,\n            data: health\n        });\n    }\n    catch (error) {\n        logger.error('Error checking health', { error });\n        res.status(500).json({\n            success: false,\n            error: 'Health check failed',\n            message: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\automated-testing.js",
        "start": 524,
        "end": 540,
        "startLoc": {
          "line": 524,
          "column": 13,
          "position": 5065
        },
        "endLoc": {
          "line": 540,
          "column": 7,
          "position": 5182
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\project-completion-deployment.js",
        "start": 424,
        "end": 440,
        "startLoc": {
          "line": 424,
          "column": 13,
          "position": 4207
        },
        "endLoc": {
          "line": 440,
          "column": 7,
          "position": 4324
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "});\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        logger.error('Error creating documentation'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\automated-documentation.js",
        "start": 114,
        "end": 124,
        "startLoc": {
          "line": 114,
          "column": 9,
          "position": 1302
        },
        "endLoc": {
          "line": 124,
          "column": 31,
          "position": 1382
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\project-completion-deployment.js",
        "start": 112,
        "end": 122,
        "startLoc": {
          "line": 112,
          "column": 9,
          "position": 1318
        },
        "endLoc": {
          "line": 122,
          "column": 28,
          "position": 1398
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "});\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        logger.error('Error creating runbook'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\automated-documentation.js",
        "start": 330,
        "end": 340,
        "startLoc": {
          "line": 330,
          "column": 9,
          "position": 3228
        },
        "endLoc": {
          "line": 340,
          "column": 25,
          "position": 3308
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\project-completion-deployment.js",
        "start": 112,
        "end": 122,
        "startLoc": {
          "line": 112,
          "column": 9,
          "position": 1318
        },
        "endLoc": {
          "line": 122,
          "column": 28,
          "position": 1398
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ",\n            message: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\nrouter.get('/reports/:period', async (req, res) => {\n    try {\n        const { period } = req.params;\n        if (!['daily', 'weekly', 'monthly'].includes(period)) {\n            return res.status(400).json({\n                success: false,\n                error: 'Invalid period. Must be: daily, weekly, or monthly'\n            });\n        }\n        const report = await documentationService",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\automated-documentation.js",
        "start": 410,
        "end": 424,
        "startLoc": {
          "line": 410,
          "column": 41,
          "position": 3945
        },
        "endLoc": {
          "line": 424,
          "column": 21,
          "position": 4087
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\project-completion-deployment.js",
        "start": 332,
        "end": 346,
        "startLoc": {
          "line": 332,
          "column": 34,
          "position": 3323
        },
        "endLoc": {
          "line": 346,
          "column": 25,
          "position": 3465
        }
      }
    },
    {
      "format": "javascript",
      "lines": 50,
      "fragment": ",\n            message: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\nrouter.get('/config', async (req, res) => {\n    try {\n        res.json({\n            success: true,\n            data: defaultConfig\n        });\n    }\n    catch (error) {\n        logger.error('Error getting configuration', { error });\n        res.status(500).json({\n            success: false,\n            error: 'Failed to get configuration',\n            message: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\nrouter.put('/config', async (req, res) => {\n    try {\n        const validatedData = UpdateConfigSchema.parse(req.body);\n        Object.assign(defaultConfig, validatedData);\n        res.json({\n            success: true,\n            data: defaultConfig,\n            message: 'Configuration updated successfully'\n        });\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        logger.error('Error updating configuration', { error });\n        res.status(500).json({\n            success: false,\n            error: 'Failed to update configuration',\n            message: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\nrouter.get('/health', async (req, res) => {\n    try {\n        const statistics = await documentationService",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\automated-documentation.js",
        "start": 434,
        "end": 483,
        "startLoc": {
          "line": 434,
          "column": 42,
          "position": 4182
        },
        "endLoc": {
          "line": 483,
          "column": 21,
          "position": 4617
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\automated-testing.js",
        "start": 462,
        "end": 565,
        "startLoc": {
          "line": 462,
          "column": 36,
          "position": 4515
        },
        "endLoc": {
          "line": 565,
          "column": 15,
          "position": 5787
        }
      }
    },
    {
      "format": "javascript",
      "lines": 18,
      "fragment": "}\n        };\n        res.json({\n            success: true,\n            data: health\n        });\n    }\n    catch (error) {\n        logger.error('Error checking health', { error });\n        res.status(500).json({\n            success: false,\n            error: 'Health check failed',\n            message: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\nexport default router;\n//# sourceMappingURL=automated-documentation.js.map",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\automated-documentation.js",
        "start": 499,
        "end": 516,
        "startLoc": {
          "line": 499,
          "column": 13,
          "position": 4797
        },
        "endLoc": {
          "line": 516,
          "column": 52,
          "position": 4921
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\project-completion-deployment.js",
        "start": 424,
        "end": 541,
        "startLoc": {
          "line": 424,
          "column": 13,
          "position": 4207
        },
        "endLoc": {
          "line": 541,
          "column": 46,
          "position": 5189
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": ".safeParse(req.body);\n        if (!validation.success) {\n            res.status(400).json({\n                error: 'Validation error',\n                message: validation.error.errors.map(e => e.message).join(', '),\n                requestId,\n                timestamp: new Date().toISOString()\n            });\n            return;\n        }\n        const loginData",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\auth.js",
        "start": 38,
        "end": 48,
        "startLoc": {
          "line": 38,
          "column": 12,
          "position": 514
        },
        "endLoc": {
          "line": 48,
          "column": 10,
          "position": 614
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\rate-limiting.js",
        "start": 87,
        "end": 46,
        "startLoc": {
          "line": 87,
          "column": 17,
          "position": 1009
        },
        "endLoc": {
          "line": 46,
          "column": 2,
          "position": 628
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": ".safeParse(req.body);\n        if (!validation.success) {\n            res.status(400).json({\n                error: 'Validation error',\n                message: validation.error.errors.map(e => e.message).join(', '),\n                requestId,\n                timestamp: new Date().toISOString()\n            });\n            return;\n        }\n        const { refreshToken",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\auth.js",
        "start": 86,
        "end": 96,
        "startLoc": {
          "line": 86,
          "column": 19,
          "position": 979
        },
        "endLoc": {
          "line": 96,
          "column": 13,
          "position": 1081
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\rate-limiting.js",
        "start": 87,
        "end": 46,
        "startLoc": {
          "line": 87,
          "column": 17,
          "position": 1009
        },
        "endLoc": {
          "line": 46,
          "column": 4,
          "position": 630
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": ".safeParse(req.body);\n        if (!validation.success) {\n            res.status(400).json({\n                error: 'Validation error',\n                message: validation.error.errors.map(e => e.message).join(', '),\n                requestId,\n                timestamp: new Date().toISOString()\n            });\n            return;\n        }\n        const { sessionId",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\auth.js",
        "start": 130,
        "end": 140,
        "startLoc": {
          "line": 130,
          "column": 13,
          "position": 1409
        },
        "endLoc": {
          "line": 140,
          "column": 10,
          "position": 1511
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\rate-limiting.js",
        "start": 87,
        "end": 46,
        "startLoc": {
          "line": 87,
          "column": 17,
          "position": 1009
        },
        "endLoc": {
          "line": 46,
          "column": 4,
          "position": 630
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": ".safeParse(req.body);\n        if (!validation.success) {\n            res.status(400).json({\n                error: 'Validation error',\n                message: validation.error.errors.map(e => e.message).join(', '),\n                requestId,\n                timestamp: new Date().toISOString()\n            });\n            return;\n        }\n        const { permissions",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\auth.js",
        "start": 240,
        "end": 250,
        "startLoc": {
          "line": 240,
          "column": 19,
          "position": 2431
        },
        "endLoc": {
          "line": 250,
          "column": 12,
          "position": 2533
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\rate-limiting.js",
        "start": 87,
        "end": 46,
        "startLoc": {
          "line": 87,
          "column": 17,
          "position": 1009
        },
        "endLoc": {
          "line": 46,
          "column": 4,
          "position": 630
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ", authenticateToken, async (req, res) => {\n    const startTime = Date.now();\n    const requestId = req.headers['x-request-id'] || `req_${Date.now()}`;\n    try {\n        if (!req.user?.id || !req.user?.organizationId) {\n            res.status(400).json({\n                error: 'User context required',\n                message: 'User ID and organization ID are required',\n                requestId,\n                timestamp: new Date().toISOString()\n            });\n            return;\n        }\n        const permissions",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\auth.js",
        "start": 328,
        "end": 341,
        "startLoc": {
          "line": 328,
          "column": 15,
          "position": 3272
        },
        "endLoc": {
          "line": 341,
          "column": 12,
          "position": 3420
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\auth.js",
        "start": 183,
        "end": 240,
        "startLoc": {
          "line": 183,
          "column": 14,
          "position": 1877
        },
        "endLoc": {
          "line": 240,
          "column": 11,
          "position": 2426
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": ".safeParse(req.body);\n        if (!validation.success) {\n            res.status(400).json({\n                error: 'Validation error',\n                message: validation.error.errors.map(e => e.message).join(', '),\n                requestId,\n                timestamp: new Date().toISOString()\n            });\n            return;\n        }\n        const { currentPassword",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\auth.js",
        "start": 389,
        "end": 399,
        "startLoc": {
          "line": 389,
          "column": 21,
          "position": 3882
        },
        "endLoc": {
          "line": 399,
          "column": 16,
          "position": 3984
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\rate-limiting.js",
        "start": 87,
        "end": 46,
        "startLoc": {
          "line": 87,
          "column": 17,
          "position": 1009
        },
        "endLoc": {
          "line": 46,
          "column": 4,
          "position": 630
        }
      }
    },
    {
      "format": "javascript",
      "lines": 18,
      "fragment": ", error, {\n            userId: req.user?.id\n        });\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        res.status(500).json({\n            success: false,\n            error: 'Internal server error',\n            message: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\nrouter.get('/datasets'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\ai-training.js",
        "start": 78,
        "end": 95,
        "startLoc": {
          "line": 78,
          "column": 26,
          "position": 973
        },
        "endLoc": {
          "line": 95,
          "column": 12,
          "position": 1117
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\azure-integration.js",
        "start": 58,
        "end": 144,
        "startLoc": {
          "line": 58,
          "column": 25,
          "position": 815
        },
        "endLoc": {
          "line": 144,
          "column": 10,
          "position": 1634
        }
      }
    },
    {
      "format": "javascript",
      "lines": 18,
      "fragment": ", error, {\n            userId: req.user?.id\n        });\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        res.status(500).json({\n            success: false,\n            error: 'Internal server error',\n            message: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\nrouter.get('/jobs'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\ai-training.js",
        "start": 203,
        "end": 220,
        "startLoc": {
          "line": 203,
          "column": 31,
          "position": 2092
        },
        "endLoc": {
          "line": 220,
          "column": 8,
          "position": 2236
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\azure-integration.js",
        "start": 58,
        "end": 144,
        "startLoc": {
          "line": 58,
          "column": 25,
          "position": 815
        },
        "endLoc": {
          "line": 144,
          "column": 10,
          "position": 1634
        }
      }
    },
    {
      "format": "javascript",
      "lines": 17,
      "fragment": ",\n                timestamp: new Date().toISOString()\n            }\n        });\n    }\n    catch (error) {\n        structuredLogger.error('Health check failed', error);\n        res.status(500).json({\n            success: false,\n            error: 'Health check failed',\n            message: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\nrouter.get('/status', async (req, res) => {\n    try {\n        const",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\ai-training.js",
        "start": 361,
        "end": 377,
        "startLoc": {
          "line": 361,
          "column": 23,
          "position": 3475
        },
        "endLoc": {
          "line": 377,
          "column": 6,
          "position": 3607
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\azure-integration.js",
        "start": 160,
        "end": 176,
        "startLoc": {
          "line": 160,
          "column": 2,
          "position": 1820
        },
        "endLoc": {
          "line": 176,
          "column": 4,
          "position": 1952
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ",\n                timestamp: new Date().toISOString()\n            }\n        });\n    }\n    catch (error) {\n        structuredLogger.error('Status check failed', error);\n        res.status(500).json({\n            success: false,\n            error: 'Status check failed',\n            message: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\nrouter.post",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\ai-training.js",
        "start": 410,
        "end": 424,
        "startLoc": {
          "line": 410,
          "column": 2,
          "position": 3789
        },
        "endLoc": {
          "line": 424,
          "column": 5,
          "position": 3897
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\azure-integration.js",
        "start": 184,
        "end": 198,
        "startLoc": {
          "line": 184,
          "column": 7,
          "position": 2035
        },
        "endLoc": {
          "line": 198,
          "column": 4,
          "position": 2143
        }
      }
    },
    {
      "format": "javascript",
      "lines": 16,
      "fragment": ");\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        res.status(500).json({\n            success: false,\n            error: 'Internal server error',\n            message: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\ai-training.js",
        "start": 443,
        "end": 458,
        "startLoc": {
          "line": 443,
          "column": 6,
          "position": 4065
        },
        "endLoc": {
          "line": 458,
          "column": 7,
          "position": 4185
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\social-media-management.js",
        "start": 116,
        "end": 75,
        "startLoc": {
          "line": 116,
          "column": 2,
          "position": 1916
        },
        "endLoc": {
          "line": 75,
          "column": 7,
          "position": 955
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "name: z.string().min(1).max(100),\n    description: z.string().min(1).max(500),\n    type: z.enum(['data_protection', 'access_control', 'content_filter', 'audit', 'compliance']),\n    rules: z.array(z.object({\n        field: z.string(),\n        operator: z.enum(['equals', 'contains', 'regex', 'range', 'exists']),\n        value: z.any(),\n        action: z.enum(['allow', 'deny', 'log', 'encrypt', 'anonymize'])\n    })),\n    severity: z.enum(['low', 'medium', 'high', 'critical']),\n    isActive: z.boolean().",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\ai-security-compliance.js",
        "start": 10,
        "end": 20,
        "startLoc": {
          "line": 10,
          "column": 5,
          "position": 115
        },
        "endLoc": {
          "line": 20,
          "column": 2,
          "position": 307
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\ai-security-compliance.service.js",
        "start": 6,
        "end": 16,
        "startLoc": {
          "line": 6,
          "column": 5,
          "position": 67
        },
        "endLoc": {
          "line": 16,
          "column": 2,
          "position": 259
        }
      }
    },
    {
      "format": "javascript",
      "lines": 25,
      "fragment": ".getHealthStatus();\n        const statusCode = health.status === 'healthy' ? 200 :\n            health.status === 'degraded' ? 200 : 503;\n        res.status(statusCode).json({\n            success: true,\n            data: health,\n            message: `Service is ${health.status}`\n        });\n    }\n    catch (error) {\n        logger.error('Health check failed', {\n            error: error.message,\n            userId: req.user?.id\n        });\n        res.status(503).json({\n            success: false,\n            error: 'Health check failed',\n            message: error.message\n        });\n    }\n});\nrouter.get('/stats', async (req, res) => {\n    try {\n        const stats = {\n            metrics",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\ai-performance-optimization.js",
        "start": 419,
        "end": 443,
        "startLoc": {
          "line": 419,
          "column": 33,
          "position": 3889
        },
        "endLoc": {
          "line": 443,
          "column": 8,
          "position": 4105
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\ai-security-compliance.js",
        "start": 331,
        "end": 355,
        "startLoc": {
          "line": 331,
          "column": 28,
          "position": 3201
        },
        "endLoc": {
          "line": 355,
          "column": 9,
          "position": 3417
        }
      }
    },
    {
      "format": "javascript",
      "lines": 22,
      "fragment": ", {\n            userId: req.user?.id\n        });\n        res.json({\n            success: true,\n            data: stats,\n            message: 'Statistics retrieved successfully'\n        });\n    }\n    catch (error) {\n        logger.error('Failed to get statistics', {\n            error: error.message,\n            userId: req.user?.id\n        });\n        res.status(500).json({\n            success: false,\n            error: 'Failed to retrieve statistics',\n            message: error.message\n        });\n    }\n});\nexport { router as aiPerformanceOptimizationRoutes",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\ai-performance-optimization.js",
        "start": 486,
        "end": 507,
        "startLoc": {
          "line": 486,
          "column": 43,
          "position": 4372
        },
        "endLoc": {
          "line": 507,
          "column": 32,
          "position": 4525
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\ai-security-compliance.js",
        "start": 389,
        "end": 410,
        "startLoc": {
          "line": 389,
          "column": 38,
          "position": 3626
        },
        "endLoc": {
          "line": 410,
          "column": 27,
          "position": 3779
        }
      }
    },
    {
      "format": "javascript",
      "lines": 18,
      "fragment": ", error, {\n            userId: req.user?.id\n        });\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        res.status(500).json({\n            success: false,\n            error: 'Internal server error',\n            message: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\nrouter.get('/models'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\ai-model-management.js",
        "start": 138,
        "end": 155,
        "startLoc": {
          "line": 138,
          "column": 27,
          "position": 1786
        },
        "endLoc": {
          "line": 155,
          "column": 10,
          "position": 1930
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\azure-integration.js",
        "start": 58,
        "end": 144,
        "startLoc": {
          "line": 58,
          "column": 25,
          "position": 815
        },
        "endLoc": {
          "line": 144,
          "column": 10,
          "position": 1634
        }
      }
    },
    {
      "format": "javascript",
      "lines": 16,
      "fragment": ", error);\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        res.status(500).json({\n            success: false,\n            error: 'Internal server error',\n            message: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\nrouter.post('/models/:id/deploy'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\ai-model-management.js",
        "start": 259,
        "end": 274,
        "startLoc": {
          "line": 259,
          "column": 37,
          "position": 2893
        },
        "endLoc": {
          "line": 274,
          "column": 21,
          "position": 3020
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\ai-training.js",
        "start": 443,
        "end": 75,
        "startLoc": {
          "line": 443,
          "column": 32,
          "position": 4062
        },
        "endLoc": {
          "line": 75,
          "column": 22,
          "position": 959
        }
      }
    },
    {
      "format": "javascript",
      "lines": 18,
      "fragment": ", error, {\n            userId: req.user?.id\n        });\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        res.status(500).json({\n            success: false,\n            error: 'Internal server error',\n            message: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\nrouter.get('/deployments'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\ai-model-management.js",
        "start": 294,
        "end": 311,
        "startLoc": {
          "line": 294,
          "column": 26,
          "position": 3220
        },
        "endLoc": {
          "line": 311,
          "column": 15,
          "position": 3364
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\azure-integration.js",
        "start": 58,
        "end": 144,
        "startLoc": {
          "line": 58,
          "column": 25,
          "position": 815
        },
        "endLoc": {
          "line": 144,
          "column": 10,
          "position": 1634
        }
      }
    },
    {
      "format": "javascript",
      "lines": 18,
      "fragment": ", error, {\n            userId: req.user?.id\n        });\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        res.status(500).json({\n            success: false,\n            error: 'Internal server error',\n            message: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\nrouter.post('/ab-tests/:id/start'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\ai-model-management.js",
        "start": 386,
        "end": 403,
        "startLoc": {
          "line": 386,
          "column": 27,
          "position": 4043
        },
        "endLoc": {
          "line": 403,
          "column": 22,
          "position": 4187
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\azure-integration.js",
        "start": 58,
        "end": 75,
        "startLoc": {
          "line": 58,
          "column": 25,
          "position": 815
        },
        "endLoc": {
          "line": 75,
          "column": 22,
          "position": 959
        }
      }
    },
    {
      "format": "javascript",
      "lines": 20,
      "fragment": ", error, {\n            userId: req.user?.id\n        });\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        res.status(500).json({\n            success: false,\n            error: 'Internal server error',\n            message: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\nrouter.get('/health', async (req, res) => {\n    try {\n        const healthStatus = await aiModelManagementService",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\ai-model-management.js",
        "start": 452,
        "end": 471,
        "startLoc": {
          "line": 452,
          "column": 24,
          "position": 4654
        },
        "endLoc": {
          "line": 471,
          "column": 25,
          "position": 4828
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\azure-integration.js",
        "start": 58,
        "end": 146,
        "startLoc": {
          "line": 58,
          "column": 25,
          "position": 815
        },
        "endLoc": {
          "line": 146,
          "column": 17,
          "position": 1664
        }
      }
    },
    {
      "format": "javascript",
      "lines": 17,
      "fragment": ",\n                timestamp: new Date().toISOString()\n            }\n        });\n    }\n    catch (error) {\n        structuredLogger.error('Health check failed', error);\n        res.status(500).json({\n            success: false,\n            error: 'Health check failed',\n            message: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\nrouter.get('/status', async (req, res) => {\n    try {\n        const healthStatus = await aiModelManagementService",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\ai-model-management.js",
        "start": 476,
        "end": 492,
        "startLoc": {
          "line": 476,
          "column": 22,
          "position": 4867
        },
        "endLoc": {
          "line": 492,
          "column": 25,
          "position": 5007
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\azure-integration.js",
        "start": 160,
        "end": 377,
        "startLoc": {
          "line": 160,
          "column": 2,
          "position": 1820
        },
        "endLoc": {
          "line": 377,
          "column": 18,
          "position": 3615
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": "],\n                timestamp: new Date().toISOString()\n            }\n        });\n    }\n    catch (error) {\n        structuredLogger.error('Status check failed', error);\n        res.status(500).json({\n            success: false,\n            error: 'Status check failed',\n            message: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\ai-model-management.js",
        "start": 522,
        "end": 536,
        "startLoc": {
          "line": 522,
          "column": 17,
          "position": 5168
        },
        "endLoc": {
          "line": 536,
          "column": 7,
          "position": 5275
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\ai-training.js",
        "start": 410,
        "end": 198,
        "startLoc": {
          "line": 410,
          "column": 17,
          "position": 3788
        },
        "endLoc": {
          "line": 198,
          "column": 7,
          "position": 2141
        }
      }
    },
    {
      "format": "javascript",
      "lines": 17,
      "fragment": ";\nconst DashboardMetricsSchema = z.object({\n    department: z.enum(['ceo', 'ia', 'cso', 'cto', 'ciso', 'coo', 'chro', 'cgo', 'cfo', 'cdo']),\n    timeframe: z.enum(['1h', '24h', '7d', '30d']).default('24h'),\n    includePredictions: z.boolean().default(true),\n    includeOptimizations: z.boolean().default(true),\n    includeSecurity: z.boolean().default(true),\n});\nconst RealTimeMetricsSchema = z.object({\n    department: z.enum(['ceo', 'ia', 'cso', 'cto', 'ciso', 'coo', 'chro', 'cgo', 'cfo', 'cdo']),\n    agentId: z.string().optional(),\n});\nconst AgentStatusSchema = z.object({\n    agentId: z.string(),\n    department: z.enum(['ceo', 'ia', 'cso', 'cto', 'ciso', 'coo', 'chro', 'cgo', 'cfo', 'cdo']),\n    status: z.enum(['active', 'paused', 'error', 'maintenance']),\n    lastActivity: z.string",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\ai-dashboard-consolidation.js",
        "start": 9,
        "end": 25,
        "startLoc": {
          "line": 9,
          "column": 2,
          "position": 103
        },
        "endLoc": {
          "line": 25,
          "column": 7,
          "position": 403
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\ai-dashboard-consolidation.service.js",
        "start": 5,
        "end": 21,
        "startLoc": {
          "line": 5,
          "column": 19,
          "position": 81
        },
        "endLoc": {
          "line": 21,
          "column": 5,
          "position": 381
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ",\n            details: error instanceof Error ? error.message : 'Unknown error',\n        });\n    }\n});\nrouter.get('/agents/:department', async (req, res) => {\n    try {\n        const department = req.params.department;\n        if (!['ceo', 'ia', 'cso', 'cto', 'ciso', 'coo', 'chro', 'cgo', 'cfo', 'cdo'].includes(department)) {\n            return res.status(400).json({\n                success: false,\n                error: 'Invalid department',\n            });\n        }\n        logger.info('Getting agents for department'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\ai-dashboard-consolidation.js",
        "start": 113,
        "end": 127,
        "startLoc": {
          "line": 113,
          "column": 23,
          "position": 1282
        },
        "endLoc": {
          "line": 127,
          "column": 32,
          "position": 1441
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\cockpit-integration.js",
        "start": 209,
        "end": 223,
        "startLoc": {
          "line": 209,
          "column": 24,
          "position": 2369
        },
        "endLoc": {
          "line": 223,
          "column": 28,
          "position": 2528
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": ", async (req, res) => {\n    try {\n        const department = req.params.department;\n        if (!['ceo', 'ia', 'cso', 'cto', 'ciso', 'coo', 'chro', 'cgo', 'cfo', 'cdo'].includes(department)) {\n            return res.status(400).json({\n                success: false,\n                error: 'Invalid department',\n            });\n        }\n        const timeframe = req.query.timeframe || '24h';\n        logger.info('Getting timeline for department'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\ai-dashboard-consolidation.js",
        "start": 196,
        "end": 206,
        "startLoc": {
          "line": 196,
          "column": 24,
          "position": 2078
        },
        "endLoc": {
          "line": 206,
          "column": 34,
          "position": 2215
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\cockpit-integration.js",
        "start": 55,
        "end": 164,
        "startLoc": {
          "line": 55,
          "column": 23,
          "position": 719
        },
        "endLoc": {
          "line": 164,
          "column": 30,
          "position": 1824
        }
      }
    },
    {
      "format": "javascript",
      "lines": 18,
      "fragment": ", {\n            department,\n            timeframe,\n            userId: req.user?.id,\n        });\n        const metrics = await aiDashboardConsolidationService.getDashboardMetrics({\n            department,\n            timeframe: timeframe,\n            includePredictions: false,\n            includeOptimizations: false,\n            includeSecurity: false,\n        });\n        res.json({\n            success: true,\n            data: {\n                department,\n                timeframe,\n                timeline",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\ai-dashboard-consolidation.js",
        "start": 206,
        "end": 223,
        "startLoc": {
          "line": 206,
          "column": 34,
          "position": 2216
        },
        "endLoc": {
          "line": 223,
          "column": 9,
          "position": 2326
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\ai-dashboard-consolidation.js",
        "start": 164,
        "end": 181,
        "startLoc": {
          "line": 164,
          "column": 30,
          "position": 1825
        },
        "endLoc": {
          "line": 181,
          "column": 5,
          "position": 1935
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ", { error, department: req.params.department });\n        res.status(500).json({\n            success: false,\n            error: 'Internal server error',\n            details: error instanceof Error ? error.message : 'Unknown error',\n        });\n    }\n});\nrouter.get('/health', async (req, res) => {\n    try {\n        const health = {\n            status: 'healthy',\n            service: 'ai-dashboard-consolidation'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\ai-dashboard-consolidation.js",
        "start": 230,
        "end": 242,
        "startLoc": {
          "line": 230,
          "column": 25,
          "position": 2387
        },
        "endLoc": {
          "line": 242,
          "column": 29,
          "position": 2511
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\cockpit-integration.js",
        "start": 83,
        "end": 257,
        "startLoc": {
          "line": 83,
          "column": 32,
          "position": 1015
        },
        "endLoc": {
          "line": 257,
          "column": 22,
          "position": 2826
        }
      }
    },
    {
      "format": "javascript",
      "lines": 18,
      "fragment": ",\n        };\n        logger.info('Health check requested', { userId: req.user?.id });\n        res.json({\n            success: true,\n            data: health,\n        });\n    }\n    catch (error) {\n        logger.error('Error in health check', { error });\n        res.status(500).json({\n            success: false,\n            error: 'Health check failed',\n            details: error instanceof Error ? error.message : 'Unknown error',\n        });\n    }\n});\nexport { router as aiDashboardConsolidationRoutes",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\ai-dashboard-consolidation.js",
        "start": 246,
        "end": 263,
        "startLoc": {
          "line": 246,
          "column": 2,
          "position": 2556
        },
        "endLoc": {
          "line": 263,
          "column": 31,
          "position": 2707
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\cockpit-integration.js",
        "start": 267,
        "end": 284,
        "startLoc": {
          "line": 267,
          "column": 2,
          "position": 2909
        },
        "endLoc": {
          "line": 284,
          "column": 25,
          "position": 3060
        }
      }
    },
    {
      "format": "javascript",
      "lines": 25,
      "fragment": ".getHealthStatus();\n        const statusCode = health.status === 'healthy' ? 200 :\n            health.status === 'degraded' ? 200 : 503;\n        res.status(statusCode).json({\n            success: true,\n            data: health,\n            message: `Service is ${health.status}`\n        });\n    }\n    catch (error) {\n        logger.error('Health check failed', {\n            error: error.message,\n            userId: req.user?.id\n        });\n        res.status(503).json({\n            success: false,\n            error: 'Health check failed',\n            message: error.message\n        });\n    }\n});\nrouter.get('/stats', async (req, res) => {\n    try {\n        const stats = {\n            models",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\ai-cost-prediction.js",
        "start": 565,
        "end": 589,
        "startLoc": {
          "line": 565,
          "column": 24,
          "position": 4736
        },
        "endLoc": {
          "line": 589,
          "column": 7,
          "position": 4952
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\ai-security-compliance.js",
        "start": 331,
        "end": 355,
        "startLoc": {
          "line": 331,
          "column": 28,
          "position": 3201
        },
        "endLoc": {
          "line": 355,
          "column": 9,
          "position": 3417
        }
      }
    },
    {
      "format": "javascript",
      "lines": 22,
      "fragment": ", {\n            userId: req.user?.id\n        });\n        res.json({\n            success: true,\n            data: stats,\n            message: 'Statistics retrieved successfully'\n        });\n    }\n    catch (error) {\n        logger.error('Failed to get statistics', {\n            error: error.message,\n            userId: req.user?.id\n        });\n        res.status(500).json({\n            success: false,\n            error: 'Failed to retrieve statistics',\n            message: error.message\n        });\n    }\n});\nexport { router as aiCostPredictionRoutes",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\ai-cost-prediction.js",
        "start": 636,
        "end": 657,
        "startLoc": {
          "line": 636,
          "column": 34,
          "position": 5242
        },
        "endLoc": {
          "line": 657,
          "column": 23,
          "position": 5395
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\ai-security-compliance.js",
        "start": 389,
        "end": 410,
        "startLoc": {
          "line": 389,
          "column": 38,
          "position": 3626
        },
        "endLoc": {
          "line": 410,
          "column": 27,
          "position": 3779
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": "name: z.string().min(1).max(100),\n    description: z.string().min(1).max(500),\n    type: z.enum(['model_switch', 'provider_switch', 'request_batching', 'cache_optimization', 'budget_alert', 'auto_scaling']),\n    condition: z.object({\n        metric: z.enum(['cost_per_request', 'daily_cost', 'monthly_cost', 'cost_efficiency', 'token_usage']),\n        operator: z.enum(['gt', 'lt', 'eq', 'gte', 'lte']),\n        threshold: z.number(),\n        duration: z.number().positive()\n    }),\n    action: z.object({\n        type: z.enum(['switch_to_cheaper_model', 'switch_to_cheaper_provider', 'enable_batching', 'enable_caching', 'send_alert', 'scale_down']),\n        parameters: z.record(z.any()),\n        priority: z.enum(['low', 'medium', 'high', 'critical'])\n    }),\n    isActive: z.boolean().",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\ai-cost-optimization.js",
        "start": 10,
        "end": 24,
        "startLoc": {
          "line": 10,
          "column": 5,
          "position": 115
        },
        "endLoc": {
          "line": 24,
          "column": 2,
          "position": 368
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\ai-cost-optimization.service.js",
        "start": 6,
        "end": 20,
        "startLoc": {
          "line": 6,
          "column": 5,
          "position": 67
        },
        "endLoc": {
          "line": 20,
          "column": 2,
          "position": 320
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": ", {\n            userId: req.user?.id,\n            count: rules.length\n        });\n        res.json({\n            success: true,\n            data: rules,\n            count: rules.length\n        });\n    }\n    catch (error) {\n        logger.error('Failed to get cost optimization rules'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\ai-cost-optimization.js",
        "start": 55,
        "end": 66,
        "startLoc": {
          "line": 55,
          "column": 36,
          "position": 731
        },
        "endLoc": {
          "line": 66,
          "column": 40,
          "position": 811
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\ai-performance-optimization.js",
        "start": 106,
        "end": 117,
        "startLoc": {
          "line": 106,
          "column": 31,
          "position": 1217
        },
        "endLoc": {
          "line": 117,
          "column": 35,
          "position": 1297
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ",\n            message: error.message\n        });\n    }\n});\nrouter.get('/recommendations', async (req, res) => {\n    try {\n        const { organizationId } = req.query;\n        if (!organizationId) {\n            return res.status(400).json({\n                success: false,\n                error: 'Organization ID is required'\n            });\n        }\n        const analysis",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\ai-cost-optimization.js",
        "start": 330,
        "end": 344,
        "startLoc": {
          "line": 330,
          "column": 34,
          "position": 3230
        },
        "endLoc": {
          "line": 344,
          "column": 9,
          "position": 3341
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\ai-cost-prediction.js",
        "start": 470,
        "end": 484,
        "startLoc": {
          "line": 470,
          "column": 38,
          "position": 4082
        },
        "endLoc": {
          "line": 484,
          "column": 16,
          "position": 4193
        }
      }
    },
    {
      "format": "javascript",
      "lines": 25,
      "fragment": ".getHealthStatus();\n        const statusCode = health.status === 'healthy' ? 200 :\n            health.status === 'degraded' ? 200 : 503;\n        res.status(statusCode).json({\n            success: true,\n            data: health,\n            message: `Service is ${health.status}`\n        });\n    }\n    catch (error) {\n        logger.error('Health check failed', {\n            error: error.message,\n            userId: req.user?.id\n        });\n        res.status(503).json({\n            success: false,\n            error: 'Health check failed',\n            message: error.message\n        });\n    }\n});\nrouter.get('/stats', async (req, res) => {\n    try {\n        const stats = {\n            rules",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\ai-cost-optimization.js",
        "start": 460,
        "end": 484,
        "startLoc": {
          "line": 460,
          "column": 26,
          "position": 4385
        },
        "endLoc": {
          "line": 484,
          "column": 6,
          "position": 4601
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\ai-security-compliance.js",
        "start": 331,
        "end": 355,
        "startLoc": {
          "line": 331,
          "column": 28,
          "position": 3201
        },
        "endLoc": {
          "line": 355,
          "column": 9,
          "position": 3417
        }
      }
    },
    {
      "format": "javascript",
      "lines": 22,
      "fragment": ", {\n            userId: req.user?.id\n        });\n        res.json({\n            success: true,\n            data: stats,\n            message: 'Statistics retrieved successfully'\n        });\n    }\n    catch (error) {\n        logger.error('Failed to get statistics', {\n            error: error.message,\n            userId: req.user?.id\n        });\n        res.status(500).json({\n            success: false,\n            error: 'Failed to retrieve statistics',\n            message: error.message\n        });\n    }\n});\nexport { router as aiCostOptimizationRoutes",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\ai-cost-optimization.js",
        "start": 530,
        "end": 551,
        "startLoc": {
          "line": 530,
          "column": 36,
          "position": 4884
        },
        "endLoc": {
          "line": 551,
          "column": 25,
          "position": 5037
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\ai-security-compliance.js",
        "start": 389,
        "end": 410,
        "startLoc": {
          "line": 389,
          "column": 38,
          "position": 3626
        },
        "endLoc": {
          "line": 410,
          "column": 27,
          "position": 3779
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ");\n        if (!conversation) {\n            return res.status(404).json({\n                success: false,\n                error: 'Conversation not found'\n            });\n        }\n        res.json({\n            success: true,\n            data: conversation,\n            timestamp: new Date().toISOString()\n        });\n    }\n    catch (error) {\n        structuredLogger.error('Error updating conversation'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\ai-chat-advanced.js",
        "start": 177,
        "end": 191,
        "startLoc": {
          "line": 177,
          "column": 8,
          "position": 2270
        },
        "endLoc": {
          "line": 191,
          "column": 30,
          "position": 2375
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\ai-chat-advanced.js",
        "start": 151,
        "end": 165,
        "startLoc": {
          "line": 151,
          "column": 3,
          "position": 2007
        },
        "endLoc": {
          "line": 165,
          "column": 29,
          "position": 2112
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": "id);\n        if (!message) {\n            return res.status(404).json({\n                success: false,\n                error: 'Message not found'\n            });\n        }\n        res.json({\n            success: true,\n            data: message,\n            timestamp: new Date().toISOString()\n        });\n    }\n    catch (error) {\n        structuredLogger.error('Error getting message'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\ai-chat-advanced.js",
        "start": 275,
        "end": 289,
        "startLoc": {
          "line": 275,
          "column": 2,
          "position": 3217
        },
        "endLoc": {
          "line": 289,
          "column": 24,
          "position": 3323
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\dlg-grooming.js",
        "start": 140,
        "end": 154,
        "startLoc": {
          "line": 140,
          "column": 2,
          "position": 2135
        },
        "endLoc": {
          "line": 154,
          "column": 28,
          "position": 2241
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ");\n        if (!session) {\n            return res.status(404).json({\n                success: false,\n                error: 'Session not found'\n            });\n        }\n        res.json({\n            success: true,\n            data: session,\n            timestamp: new Date().toISOString()\n        });\n    }\n    catch (error) {\n        structuredLogger.error('Error updating session'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\ai-chat-advanced.js",
        "start": 386,
        "end": 400,
        "startLoc": {
          "line": 386,
          "column": 8,
          "position": 4328
        },
        "endLoc": {
          "line": 400,
          "column": 25,
          "position": 4433
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\ai-chat-advanced.js",
        "start": 360,
        "end": 374,
        "startLoc": {
          "line": 360,
          "column": 3,
          "position": 4065
        },
        "endLoc": {
          "line": 374,
          "column": 24,
          "position": 4170
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ", async (req, res) => {\n    try {\n        const { organizationId } = req.params;\n        const { reason } = req.body;\n        if (!reason || typeof reason !== 'string') {\n            res.status(400).json({\n                success: false,\n                error: 'Reason is required',\n                code: 'REASON_REQUIRED'\n            });\n            return;\n        }\n        await aiBudgetUXService.deactivateReadOnlyMode",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\ai-budget-ux.js",
        "start": 294,
        "end": 306,
        "startLoc": {
          "line": 294,
          "column": 40,
          "position": 2864
        },
        "endLoc": {
          "line": 306,
          "column": 23,
          "position": 2985
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\ai-budget-ux.js",
        "start": 263,
        "end": 275,
        "startLoc": {
          "line": 263,
          "column": 38,
          "position": 2586
        },
        "endLoc": {
          "line": 275,
          "column": 21,
          "position": 2707
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ",\n        });\n    }\n    catch (error) {\n        console.error('Error getting insights:', error);\n        res.status(500).json({\n            success: false,\n            error: 'Failed to get insights',\n            message: error instanceof Error ? error.message : 'Unknown error',\n        });\n    }\n});\nrouter.get",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\ai-analytics.js",
        "start": 123,
        "end": 135,
        "startLoc": {
          "line": 123,
          "column": 9,
          "position": 1340
        },
        "endLoc": {
          "line": 135,
          "column": 4,
          "position": 1432
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\next-ai-platform.js",
        "start": 98,
        "end": 110,
        "startLoc": {
          "line": 98,
          "column": 17,
          "position": 1050
        },
        "endLoc": {
          "line": 110,
          "column": 5,
          "position": 1142
        }
      }
    },
    {
      "format": "javascript",
      "lines": 16,
      "fragment": ".getHealthStatus();\n        res.status(200).json({\n            success: true,\n            data: healthStatus,\n        });\n    }\n    catch (error) {\n        console.error('Error getting health status:', error);\n        res.status(500).json({\n            success: false,\n            error: 'Failed to get health status',\n            message: error instanceof Error ? error.message : 'Unknown error',\n        });\n    }\n});\nexport { router as aiAnalyticsRoutes",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\ai-analytics.js",
        "start": 263,
        "end": 278,
        "startLoc": {
          "line": 263,
          "column": 19,
          "position": 2439
        },
        "endLoc": {
          "line": 278,
          "column": 18,
          "position": 2567
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\next-ai-platform.js",
        "start": 240,
        "end": 255,
        "startLoc": {
          "line": 240,
          "column": 22,
          "position": 2333
        },
        "endLoc": {
          "line": 255,
          "column": 21,
          "position": 2461
        }
      }
    },
    {
      "format": "javascript",
      "lines": 18,
      "fragment": ", {\n            traceId,\n            filters,\n            count: rules.length\n        });\n        res.json({\n            success: true,\n            data: {\n                rules,\n                count: rules.length,\n                filters\n            },\n            timestamp: new Date().toISOString(),\n            traceId\n        });\n    }\n    catch (error) {\n        structuredLogger.error('Failed to get threat detection rules'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-security.js",
        "start": 217,
        "end": 234,
        "startLoc": {
          "line": 217,
          "column": 35,
          "position": 2343
        },
        "endLoc": {
          "line": 234,
          "column": 39,
          "position": 2448
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\advanced-security.js",
        "start": 141,
        "end": 158,
        "startLoc": {
          "line": 141,
          "column": 29,
          "position": 1632
        },
        "endLoc": {
          "line": 158,
          "column": 33,
          "position": 1737
        }
      }
    },
    {
      "format": "javascript",
      "lines": 18,
      "fragment": "});\n        res.status(201).json({\n            success: true,\n            data: rule,\n            timestamp: new Date().toISOString(),\n            traceId\n        });\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Invalid rule data',\n                details: error.errors,\n                traceId\n            });\n        }\n        structuredLogger.error('Failed to create threat detection rule'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-security.js",
        "start": 255,
        "end": 272,
        "startLoc": {
          "line": 255,
          "column": 9,
          "position": 2665
        },
        "endLoc": {
          "line": 272,
          "column": 41,
          "position": 2798
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\advanced-security.js",
        "start": 179,
        "end": 196,
        "startLoc": {
          "line": 179,
          "column": 9,
          "position": 1954
        },
        "endLoc": {
          "line": 196,
          "column": 35,
          "position": 2087
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ",\n            body: req.body\n        });\n        if (error instanceof z.ZodError) {\n            res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        else {\n            res.status(500).json({\n                success: false,\n                error: 'Failed to update report'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-reporting.js",
        "start": 159,
        "end": 172,
        "startLoc": {
          "line": 159,
          "column": 9,
          "position": 1619
        },
        "endLoc": {
          "line": 172,
          "column": 26,
          "position": 1719
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\advanced-reporting.js",
        "start": 63,
        "end": 76,
        "startLoc": {
          "line": 63,
          "column": 16,
          "position": 795
        },
        "endLoc": {
          "line": 76,
          "column": 26,
          "position": 895
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ",\n            reportId: req.params.reportId,\n            body: req.body\n        });\n        if (error instanceof z.ZodError) {\n            res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        else {\n            res.status(500).json({\n                success: false,\n                error: error",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-reporting.js",
        "start": 226,
        "end": 240,
        "startLoc": {
          "line": 226,
          "column": 18,
          "position": 2173
        },
        "endLoc": {
          "line": 240,
          "column": 6,
          "position": 2284
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\advanced-reporting.js",
        "start": 158,
        "end": 76,
        "startLoc": {
          "line": 158,
          "column": 16,
          "position": 1608
        },
        "endLoc": {
          "line": 76,
          "column": 26,
          "position": 895
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ");\n        if (!dashboard) {\n            return res.status(404).json({\n                success: false,\n                error: 'Dashboard not found'\n            });\n        }\n        res.json({\n            success: true,\n            data: dashboard\n        });\n    }\n    catch (error) {\n        logger",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-performance-monitoring.js",
        "start": 219,
        "end": 232,
        "startLoc": {
          "line": 219,
          "column": 8,
          "position": 2247
        },
        "endLoc": {
          "line": 232,
          "column": 7,
          "position": 2333
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\data-analytics-dashboard.js",
        "start": 64,
        "end": 77,
        "startLoc": {
          "line": 64,
          "column": 12,
          "position": 807
        },
        "endLoc": {
          "line": 77,
          "column": 17,
          "position": 893
        }
      }
    },
    {
      "format": "javascript",
      "lines": 20,
      "fragment": ".listAlertRules();\n        res.json({\n            success: true,\n            data: rules,\n            count: rules.length\n        });\n    }\n    catch (error) {\n        logger.error('Error listing alert rules', { error });\n        res.status(500).json({\n            success: false,\n            error: 'Failed to list alert rules',\n            message: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\nrouter.get('/alert-rules/:id', async (req, res) => {\n    try {\n        const { id } = req.params;\n        const rule = await metricsAlertsService",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-metrics-alerts.js",
        "start": 146,
        "end": 165,
        "startLoc": {
          "line": 146,
          "column": 21,
          "position": 1646
        },
        "endLoc": {
          "line": 165,
          "column": 21,
          "position": 1822
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\centralized-logging.js",
        "start": 206,
        "end": 225,
        "startLoc": {
          "line": 206,
          "column": 15,
          "position": 2532
        },
        "endLoc": {
          "line": 225,
          "column": 15,
          "position": 2708
        }
      }
    },
    {
      "format": "javascript",
      "lines": 25,
      "fragment": ".getAlertRule(id);\n        if (!rule) {\n            return res.status(404).json({\n                success: false,\n                error: 'Alert rule not found'\n            });\n        }\n        res.json({\n            success: true,\n            data: rule\n        });\n    }\n    catch (error) {\n        logger.error('Error getting alert rule', { error });\n        res.status(500).json({\n            success: false,\n            error: 'Failed to get alert rule',\n            message: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\nrouter.post('/alert-rules', async (req, res) => {\n    try {\n        const validatedData = CreateAlertRuleSchema.parse(req.body);\n        const rule = await metricsAlertsService",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-metrics-alerts.js",
        "start": 165,
        "end": 189,
        "startLoc": {
          "line": 165,
          "column": 21,
          "position": 1823
        },
        "endLoc": {
          "line": 189,
          "column": 21,
          "position": 2037
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\centralized-logging.js",
        "start": 225,
        "end": 249,
        "startLoc": {
          "line": 225,
          "column": 15,
          "position": 2709
        },
        "endLoc": {
          "line": 249,
          "column": 15,
          "position": 2923
        }
      }
    },
    {
      "format": "javascript",
      "lines": 30,
      "fragment": ",\n            actions: validatedData.actions\n        });\n        res.status(201).json({\n            success: true,\n            data: rule,\n            message: 'Alert rule created successfully'\n        });\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        logger.error('Error creating alert rule', { error });\n        res.status(500).json({\n            success: false,\n            error: 'Failed to create alert rule',\n            message: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\nrouter.put('/alert-rules/:id', async (req, res) => {\n    try {\n        const { id } = req.params;\n        const updates = req.body;\n        const updatedRule = await metricsAlertsService",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-metrics-alerts.js",
        "start": 197,
        "end": 226,
        "startLoc": {
          "line": 197,
          "column": 7,
          "position": 2125
        },
        "endLoc": {
          "line": 226,
          "column": 21,
          "position": 2384
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\centralized-logging.js",
        "start": 258,
        "end": 287,
        "startLoc": {
          "line": 258,
          "column": 5,
          "position": 3013
        },
        "endLoc": {
          "line": 287,
          "column": 15,
          "position": 3272
        }
      }
    },
    {
      "format": "javascript",
      "lines": 26,
      "fragment": ".updateAlertRule(id, updates);\n        if (!updatedRule) {\n            return res.status(404).json({\n                success: false,\n                error: 'Alert rule not found'\n            });\n        }\n        res.json({\n            success: true,\n            data: updatedRule,\n            message: 'Alert rule updated successfully'\n        });\n    }\n    catch (error) {\n        logger.error('Error updating alert rule', { error });\n        res.status(500).json({\n            success: false,\n            error: 'Failed to update alert rule',\n            message: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\nrouter.delete('/alert-rules/:id', async (req, res) => {\n    try {\n        const { id } = req.params;\n        const deleted = await metricsAlertsService",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-metrics-alerts.js",
        "start": 226,
        "end": 251,
        "startLoc": {
          "line": 226,
          "column": 21,
          "position": 2385
        },
        "endLoc": {
          "line": 251,
          "column": 21,
          "position": 2608
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\centralized-logging.js",
        "start": 287,
        "end": 312,
        "startLoc": {
          "line": 287,
          "column": 15,
          "position": 3273
        },
        "endLoc": {
          "line": 312,
          "column": 15,
          "position": 3496
        }
      }
    },
    {
      "format": "javascript",
      "lines": 22,
      "fragment": ".deleteAlertRule(id);\n        if (!deleted) {\n            return res.status(404).json({\n                success: false,\n                error: 'Alert rule not found'\n            });\n        }\n        res.json({\n            success: true,\n            message: 'Alert rule deleted successfully'\n        });\n    }\n    catch (error) {\n        logger.error('Error deleting alert rule', { error });\n        res.status(500).json({\n            success: false,\n            error: 'Failed to delete alert rule',\n            message: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\nrouter.post",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-metrics-alerts.js",
        "start": 251,
        "end": 272,
        "startLoc": {
          "line": 251,
          "column": 21,
          "position": 2609
        },
        "endLoc": {
          "line": 272,
          "column": 5,
          "position": 2774
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\centralized-logging.js",
        "start": 312,
        "end": 333,
        "startLoc": {
          "line": 312,
          "column": 15,
          "position": 3497
        },
        "endLoc": {
          "line": 333,
          "column": 4,
          "position": 3662
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ");\n        if (!alert) {\n            return res.status(404).json({\n                success: false,\n                error: 'Alert not found'\n            });\n        }\n        res.json({\n            success: true,\n            data: alert\n        });\n    }\n    catch (error) {\n        logger.error('Error getting alert'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-metrics-alerts.js",
        "start": 321,
        "end": 334,
        "startLoc": {
          "line": 321,
          "column": 3,
          "position": 3265
        },
        "endLoc": {
          "line": 334,
          "column": 22,
          "position": 3355
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\advanced-performance-monitoring.js",
        "start": 138,
        "end": 151,
        "startLoc": {
          "line": 138,
          "column": 8,
          "position": 1554
        },
        "endLoc": {
          "line": 151,
          "column": 24,
          "position": 1644
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "});\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        logger.error('Error creating SLA'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-metrics-alerts.js",
        "start": 458,
        "end": 468,
        "startLoc": {
          "line": 458,
          "column": 9,
          "position": 4476
        },
        "endLoc": {
          "line": 468,
          "column": 21,
          "position": 4556
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\project-completion-deployment.js",
        "start": 112,
        "end": 122,
        "startLoc": {
          "line": 112,
          "column": 9,
          "position": 1318
        },
        "endLoc": {
          "line": 122,
          "column": 28,
          "position": 1398
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ",\n            message: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\nrouter.get('/reports/:period', async (req, res) => {\n    try {\n        const { period } = req.params;\n        if (!['hourly', 'daily', 'weekly', 'monthly'].includes(period)) {\n            return res.status(400).json({\n                success: false,\n                error: 'Invalid period. Must be: hourly, daily, weekly, or monthly'\n            });\n        }\n        const report = await metricsAlertsService",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-metrics-alerts.js",
        "start": 511,
        "end": 525,
        "startLoc": {
          "line": 511,
          "column": 35,
          "position": 4982
        },
        "endLoc": {
          "line": 525,
          "column": 21,
          "position": 5127
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\centralized-logging.js",
        "start": 491,
        "end": 505,
        "startLoc": {
          "line": 491,
          "column": 31,
          "position": 5091
        },
        "endLoc": {
          "line": 505,
          "column": 15,
          "position": 5236
        }
      }
    },
    {
      "format": "javascript",
      "lines": 50,
      "fragment": ",\n            message: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\nrouter.get('/config', async (req, res) => {\n    try {\n        res.json({\n            success: true,\n            data: defaultConfig\n        });\n    }\n    catch (error) {\n        logger.error('Error getting configuration', { error });\n        res.status(500).json({\n            success: false,\n            error: 'Failed to get configuration',\n            message: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\nrouter.put('/config', async (req, res) => {\n    try {\n        const validatedData = UpdateConfigSchema.parse(req.body);\n        Object.assign(defaultConfig, validatedData);\n        res.json({\n            success: true,\n            data: defaultConfig,\n            message: 'Configuration updated successfully'\n        });\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        logger.error('Error updating configuration', { error });\n        res.status(500).json({\n            success: false,\n            error: 'Failed to update configuration',\n            message: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\nrouter.get('/health', async (req, res) => {\n    try {\n        const statistics = await metricsAlertsService",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-metrics-alerts.js",
        "start": 535,
        "end": 584,
        "startLoc": {
          "line": 535,
          "column": 36,
          "position": 5222
        },
        "endLoc": {
          "line": 584,
          "column": 21,
          "position": 5657
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\automated-testing.js",
        "start": 462,
        "end": 565,
        "startLoc": {
          "line": 462,
          "column": 36,
          "position": 4515
        },
        "endLoc": {
          "line": 565,
          "column": 15,
          "position": 5787
        }
      }
    },
    {
      "format": "javascript",
      "lines": 18,
      "fragment": "}\n        };\n        res.json({\n            success: true,\n            data: health\n        });\n    }\n    catch (error) {\n        logger.error('Error checking health', { error });\n        res.status(500).json({\n            success: false,\n            error: 'Health check failed',\n            message: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\nexport default router;\n//# sourceMappingURL=advanced-metrics-alerts.js.map",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-metrics-alerts.js",
        "start": 599,
        "end": 616,
        "startLoc": {
          "line": 599,
          "column": 13,
          "position": 5818
        },
        "endLoc": {
          "line": 616,
          "column": 52,
          "position": 5942
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\project-completion-deployment.js",
        "start": 424,
        "end": 541,
        "startLoc": {
          "line": 424,
          "column": 13,
          "position": 4207
        },
        "endLoc": {
          "line": 541,
          "column": 46,
          "position": 5189
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": "(req, res);\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            res.status(400).json({ error: 'Validation error', details: error.errors });\n        }\n        else {\n            res.status(500).json({ error: 'Internal server error' });\n        }\n    }\n});\nrouter.post('/ai/analyze-seasonality'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-features.js",
        "start": 89,
        "end": 100,
        "startLoc": {
          "line": 89,
          "column": 18,
          "position": 1242
        },
        "endLoc": {
          "line": 100,
          "column": 26,
          "position": 1349
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\advanced-features.js",
        "start": 75,
        "end": 86,
        "startLoc": {
          "line": 75,
          "column": 14,
          "position": 1091
        },
        "endLoc": {
          "line": 86,
          "column": 25,
          "position": 1198
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": "(req, res);\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            res.status(400).json({ error: 'Validation error', details: error.errors });\n        }\n        else {\n            res.status(500).json({ error: 'Internal server error' });\n        }\n    }\n});\nrouter.post('/ai/generate-recommendations'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-features.js",
        "start": 103,
        "end": 114,
        "startLoc": {
          "line": 103,
          "column": 19,
          "position": 1393
        },
        "endLoc": {
          "line": 114,
          "column": 31,
          "position": 1500
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\advanced-features.js",
        "start": 75,
        "end": 86,
        "startLoc": {
          "line": 75,
          "column": 14,
          "position": 1091
        },
        "endLoc": {
          "line": 86,
          "column": 25,
          "position": 1198
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": "(req, res);\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            res.status(400).json({ error: 'Validation error', details: error.errors });\n        }\n        else {\n            res.status(500).json({ error: 'Internal server error' });\n        }\n    }\n});\nrouter.get",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-features.js",
        "start": 117,
        "end": 128,
        "startLoc": {
          "line": 117,
          "column": 24,
          "position": 1544
        },
        "endLoc": {
          "line": 128,
          "column": 4,
          "position": 1649
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\advanced-features.js",
        "start": 75,
        "end": 86,
        "startLoc": {
          "line": 75,
          "column": 14,
          "position": 1091
        },
        "endLoc": {
          "line": 86,
          "column": 5,
          "position": 1196
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": "(req, res);\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            res.status(400).json({ error: 'Validation error', details: error.errors });\n        }\n        else {\n            res.status(500).json({ error: 'Internal server error' });\n        }\n    }\n});\nrouter.post('/ml/train'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-features.js",
        "start": 155,
        "end": 166,
        "startLoc": {
          "line": 155,
          "column": 13,
          "position": 1932
        },
        "endLoc": {
          "line": 166,
          "column": 12,
          "position": 2039
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\advanced-features.js",
        "start": 75,
        "end": 86,
        "startLoc": {
          "line": 75,
          "column": 14,
          "position": 1091
        },
        "endLoc": {
          "line": 86,
          "column": 25,
          "position": 1198
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": "(req, res);\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            res.status(400).json({ error: 'Validation error', details: error.errors });\n        }\n        else {\n            res.status(500).json({ error: 'Internal server error' });\n        }\n    }\n});\nrouter.post('/ml/predict'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-features.js",
        "start": 169,
        "end": 180,
        "startLoc": {
          "line": 169,
          "column": 11,
          "position": 2083
        },
        "endLoc": {
          "line": 180,
          "column": 14,
          "position": 2190
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\advanced-features.js",
        "start": 75,
        "end": 86,
        "startLoc": {
          "line": 75,
          "column": 14,
          "position": 1091
        },
        "endLoc": {
          "line": 86,
          "column": 25,
          "position": 1198
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": "(req, res);\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            res.status(400).json({ error: 'Validation error', details: error.errors });\n        }\n        else {\n            res.status(500).json({ error: 'Internal server error' });\n        }\n    }\n});\nrouter.post('/ml/evaluate'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-features.js",
        "start": 183,
        "end": 194,
        "startLoc": {
          "line": 183,
          "column": 8,
          "position": 2234
        },
        "endLoc": {
          "line": 194,
          "column": 15,
          "position": 2341
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\advanced-features.js",
        "start": 75,
        "end": 86,
        "startLoc": {
          "line": 75,
          "column": 14,
          "position": 1091
        },
        "endLoc": {
          "line": 86,
          "column": 25,
          "position": 1198
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": "(req, res);\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            res.status(400).json({ error: 'Validation error', details: error.errors });\n        }\n        else {\n            res.status(500).json({ error: 'Internal server error' });\n        }\n    }\n});\nrouter.get('/ml/models'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-features.js",
        "start": 204,
        "end": 215,
        "startLoc": {
          "line": 204,
          "column": 14,
          "position": 2478
        },
        "endLoc": {
          "line": 215,
          "column": 13,
          "position": 2585
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\advanced-features.js",
        "start": 75,
        "end": 128,
        "startLoc": {
          "line": 75,
          "column": 14,
          "position": 1091
        },
        "endLoc": {
          "line": 128,
          "column": 25,
          "position": 1651
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": "(req, res);\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            res.status(400).json({ error: 'Validation error', details: error.errors });\n        }\n        else {\n            res.status(500).json({ error: 'Internal server error' });\n        }\n    }\n});\nrouter.post('/sentiment/batch'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-features.js",
        "start": 226,
        "end": 237,
        "startLoc": {
          "line": 226,
          "column": 17,
          "position": 2708
        },
        "endLoc": {
          "line": 237,
          "column": 19,
          "position": 2815
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\advanced-features.js",
        "start": 75,
        "end": 86,
        "startLoc": {
          "line": 75,
          "column": 14,
          "position": 1091
        },
        "endLoc": {
          "line": 86,
          "column": 25,
          "position": 1198
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": "(req, res);\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            res.status(400).json({ error: 'Validation error', details: error.errors });\n        }\n        else {\n            res.status(500).json({ error: 'Internal server error' });\n        }\n    }\n});\nrouter.get('/sentiment/trends'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-features.js",
        "start": 240,
        "end": 251,
        "startLoc": {
          "line": 240,
          "column": 22,
          "position": 2859
        },
        "endLoc": {
          "line": 251,
          "column": 20,
          "position": 2966
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\advanced-features.js",
        "start": 75,
        "end": 128,
        "startLoc": {
          "line": 75,
          "column": 14,
          "position": 1091
        },
        "endLoc": {
          "line": 128,
          "column": 25,
          "position": 1651
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": "(req, res);\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            res.status(400).json({ error: 'Validation error', details: error.errors });\n        }\n        else {\n            res.status(500).json({ error: 'Internal server error' });\n        }\n    }\n});\nrouter.post('/azure/generate-image'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-features.js",
        "start": 262,
        "end": 273,
        "startLoc": {
          "line": 262,
          "column": 5,
          "position": 3089
        },
        "endLoc": {
          "line": 273,
          "column": 24,
          "position": 3196
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\advanced-features.js",
        "start": 75,
        "end": 86,
        "startLoc": {
          "line": 75,
          "column": 14,
          "position": 1091
        },
        "endLoc": {
          "line": 86,
          "column": 25,
          "position": 1198
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": "(req, res);\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            res.status(400).json({ error: 'Validation error', details: error.errors });\n        }\n        else {\n            res.status(500).json({ error: 'Internal server error' });\n        }\n    }\n});\nrouter.post('/azure/text-to-speech'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-features.js",
        "start": 276,
        "end": 287,
        "startLoc": {
          "line": 276,
          "column": 14,
          "position": 3240
        },
        "endLoc": {
          "line": 287,
          "column": 24,
          "position": 3347
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\advanced-features.js",
        "start": 75,
        "end": 86,
        "startLoc": {
          "line": 75,
          "column": 14,
          "position": 1091
        },
        "endLoc": {
          "line": 86,
          "column": 25,
          "position": 1198
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": "(req, res);\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            res.status(400).json({ error: 'Validation error', details: error.errors });\n        }\n        else {\n            res.status(500).json({ error: 'Internal server error' });\n        }\n    }\n});\nrouter.get('/azure/usage-stats'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-features.js",
        "start": 290,
        "end": 301,
        "startLoc": {
          "line": 290,
          "column": 13,
          "position": 3391
        },
        "endLoc": {
          "line": 301,
          "column": 21,
          "position": 3498
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\advanced-features.js",
        "start": 75,
        "end": 128,
        "startLoc": {
          "line": 75,
          "column": 14,
          "position": 1091
        },
        "endLoc": {
          "line": 128,
          "column": 25,
          "position": 1651
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": "(req, res);\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            res.status(400).json({ error: 'Validation error', details: error.errors });\n        }\n        else {\n            res.status(500).json({ error: 'Internal server error' });\n        }\n    }\n});\nrouter.post('/search/news'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-features.js",
        "start": 312,
        "end": 323,
        "startLoc": {
          "line": 312,
          "column": 7,
          "position": 3621
        },
        "endLoc": {
          "line": 323,
          "column": 15,
          "position": 3728
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\advanced-features.js",
        "start": 75,
        "end": 86,
        "startLoc": {
          "line": 75,
          "column": 14,
          "position": 1091
        },
        "endLoc": {
          "line": 86,
          "column": 25,
          "position": 1198
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": "(req, res);\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            res.status(400).json({ error: 'Validation error', details: error.errors });\n        }\n        else {\n            res.status(500).json({ error: 'Internal server error' });\n        }\n    }\n});\nrouter.get('/search/trending'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-features.js",
        "start": 326,
        "end": 337,
        "startLoc": {
          "line": 326,
          "column": 11,
          "position": 3772
        },
        "endLoc": {
          "line": 337,
          "column": 19,
          "position": 3879
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\advanced-features.js",
        "start": 75,
        "end": 128,
        "startLoc": {
          "line": 75,
          "column": 14,
          "position": 1091
        },
        "endLoc": {
          "line": 128,
          "column": 25,
          "position": 1651
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "= z.object({\n    organizationId: z.string().min(1),\n    reportType: z.enum(['daily', 'weekly', 'monthly', 'ad_hoc']),\n    startDate: z.string().datetime(),\n    endDate: z.string().datetime(),\n    generatedBy: z.string().min(1),\n});\nconst GetStatsSchema = z.object({\n    organizationId: z.string().min(1),\n});\nadvancedErrorManagementRouter",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-error-management.js",
        "start": 174,
        "end": 184,
        "startLoc": {
          "line": 174,
          "column": 2,
          "position": 2898
        },
        "endLoc": {
          "line": 184,
          "column": 30,
          "position": 3027
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\dlg-grooming.js",
        "start": 103,
        "end": 132,
        "startLoc": {
          "line": 103,
          "column": 2,
          "position": 1694
        },
        "endLoc": {
          "line": 132,
          "column": 6,
          "position": 2199
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ".getPatterns(filters.organizationId, filters);\n        res.json({\n            success: true,\n            data: {\n                patterns,\n                total: patterns.length,\n                filters\n            },\n            timestamp: new Date().toISOString()\n        });\n    }\n    catch (error) {\n        structuredLogger.error('Error getting patterns'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-error-management.js",
        "start": 255,
        "end": 267,
        "startLoc": {
          "line": 255,
          "column": 31,
          "position": 3732
        },
        "endLoc": {
          "line": 267,
          "column": 25,
          "position": 3820
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\dlg-grooming.js",
        "start": 184,
        "end": 196,
        "startLoc": {
          "line": 184,
          "column": 19,
          "position": 2528
        },
        "endLoc": {
          "line": 196,
          "column": 29,
          "position": 2616
        }
      }
    },
    {
      "format": "javascript",
      "lines": 21,
      "fragment": ".getAlerts(filters.organizationId, filters);\n        res.json({\n            success: true,\n            data: {\n                alerts,\n                total: alerts.length,\n                filters\n            },\n            timestamp: new Date().toISOString()\n        });\n    }\n    catch (error) {\n        structuredLogger.error('Error getting alerts', { error });\n        res.status(400).json({\n            success: false,\n            error: 'Invalid request data',\n            details: error.errors\n        });\n    }\n});\nadvancedErrorManagementRouter",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-error-management.js",
        "start": 339,
        "end": 359,
        "startLoc": {
          "line": 339,
          "column": 31,
          "position": 4482
        },
        "endLoc": {
          "line": 359,
          "column": 30,
          "position": 4627
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\inventory-kardex.js",
        "start": 265,
        "end": 285,
        "startLoc": {
          "line": 265,
          "column": 23,
          "position": 3179
        },
        "endLoc": {
          "line": 285,
          "column": 22,
          "position": 3324
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": "},\n            timestamp: new Date().toISOString()\n        });\n    }\n    catch (error) {\n        structuredLogger.error('Error checking health', { error });\n        res.status(500).json({\n            success: false,\n            error: 'Health check failed'\n        });\n    }\n});\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-error-management.js",
        "start": 499,
        "end": 511,
        "startLoc": {
          "line": 499,
          "column": 13,
          "position": 5929
        },
        "endLoc": {
          "line": 511,
          "column": 7,
          "position": 6016
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\reportes-mensuales.js",
        "start": 230,
        "end": 242,
        "startLoc": {
          "line": 230,
          "column": 13,
          "position": 2518
        },
        "endLoc": {
          "line": 242,
          "column": 24,
          "position": 2605
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ");\n        if (!environment) {\n            return res.status(404).json({\n                success: false,\n                error: 'Environment not found'\n            });\n        }\n        res.json({\n            success: true,\n            data: environment\n        });\n    }\n    catch (error) {\n        logger",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-deployment-automation.js",
        "start": 211,
        "end": 224,
        "startLoc": {
          "line": 211,
          "column": 8,
          "position": 2307
        },
        "endLoc": {
          "line": 224,
          "column": 7,
          "position": 2393
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\configuration.js",
        "start": 200,
        "end": 213,
        "startLoc": {
          "line": 200,
          "column": 5,
          "position": 1726
        },
        "endLoc": {
          "line": 213,
          "column": 4,
          "position": 1812
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ");\n        if (!job) {\n            return res.status(404).json({\n                success: false,\n                error: 'Job not found'\n            });\n        }\n        res.json({\n            success: true,\n            data: job\n        });\n    }\n    catch (error) {\n        logger.error('Error updating job status:'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-deployment-automation.js",
        "start": 340,
        "end": 353,
        "startLoc": {
          "line": 340,
          "column": 9,
          "position": 3454
        },
        "endLoc": {
          "line": 353,
          "column": 29,
          "position": 3544
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\advanced-deployment-automation.js",
        "start": 316,
        "end": 329,
        "startLoc": {
          "line": 316,
          "column": 3,
          "position": 3240
        },
        "endLoc": {
          "line": 329,
          "column": 21,
          "position": 3330
        }
      }
    },
    {
      "format": "javascript",
      "lines": 17,
      "fragment": ".getStatistics();\n        res.json({\n            success: true,\n            data: statistics\n        });\n    }\n    catch (error) {\n        logger.error('Error getting statistics:', error);\n        res.status(500).json({\n            success: false,\n            error: 'Failed to retrieve statistics'\n        });\n    }\n});\nrouter.get('/health', async (req, res) => {\n    try {\n        const statistics = await advancedDeploymentAutomationService",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-deployment-automation.js",
        "start": 570,
        "end": 586,
        "startLoc": {
          "line": 570,
          "column": 36,
          "position": 5455
        },
        "endLoc": {
          "line": 586,
          "column": 36,
          "position": 5581
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\advanced-performance-monitoring.js",
        "start": 371,
        "end": 387,
        "startLoc": {
          "line": 371,
          "column": 37,
          "position": 3593
        },
        "endLoc": {
          "line": 387,
          "column": 37,
          "position": 3719
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": "}\n        });\n    }\n    catch (error) {\n        logger.error('Error checking health:', error);\n        res.status(500).json({\n            success: false,\n            status: 'unhealthy',\n            error: 'Health check failed'\n        });\n    }\n});\nexport default router;\n//# sourceMappingURL=advanced-deployment-automation.js.map",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-deployment-automation.js",
        "start": 596,
        "end": 609,
        "startLoc": {
          "line": 596,
          "column": 13,
          "position": 5666
        },
        "endLoc": {
          "line": 609,
          "column": 59,
          "position": 5748
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\advanced-performance-monitoring.js",
        "start": 396,
        "end": 409,
        "startLoc": {
          "line": 396,
          "column": 13,
          "position": 3795
        },
        "endLoc": {
          "line": 409,
          "column": 60,
          "position": 3877
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "});\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        logger.error('Failed to create configuration'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-configuration-management.js",
        "start": 206,
        "end": 216,
        "startLoc": {
          "line": 206,
          "column": 9,
          "position": 2545
        },
        "endLoc": {
          "line": 216,
          "column": 33,
          "position": 2625
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\project-completion-deployment.js",
        "start": 112,
        "end": 122,
        "startLoc": {
          "line": 112,
          "column": 9,
          "position": 1318
        },
        "endLoc": {
          "line": 122,
          "column": 28,
          "position": 1398
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ",\n            message: 'Configuration updated successfully'\n        });\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        logger.error('Failed to update configuration'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-configuration-management.js",
        "start": 245,
        "end": 257,
        "startLoc": {
          "line": 245,
          "column": 7,
          "position": 2919
        },
        "endLoc": {
          "line": 257,
          "column": 33,
          "position": 3008
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\project-completion-deployment.js",
        "start": 384,
        "end": 122,
        "startLoc": {
          "line": 384,
          "column": 14,
          "position": 3824
        },
        "endLoc": {
          "line": 122,
          "column": 28,
          "position": 1398
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": ", async (req, res) => {\n    try {\n        const { id } = req.params;\n        const config = await advancedConfigurationManagementService.getConfig(id);\n        if (!config) {\n            return res.status(404).json({\n                success: false,\n                error: 'Configuration not found'\n            });\n        }\n        const",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-configuration-management.js",
        "start": 300,
        "end": 310,
        "startLoc": {
          "line": 300,
          "column": 24,
          "position": 3411
        },
        "endLoc": {
          "line": 310,
          "column": 6,
          "position": 3510
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\advanced-configuration-management.js",
        "start": 128,
        "end": 138,
        "startLoc": {
          "line": 128,
          "column": 15,
          "position": 1838
        },
        "endLoc": {
          "line": 138,
          "column": 7,
          "position": 1937
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ", {\n            configId: id,\n            isValid: validation.isValid,\n            errorsCount: validation.errors.length,\n            warningsCount: validation.warnings.length\n        });\n        res.json({\n            success: true,\n            data: validation\n        });\n    }\n    catch (error) {\n        logger.error('Failed to validate configuration'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-configuration-management.js",
        "start": 311,
        "end": 323,
        "startLoc": {
          "line": 311,
          "column": 26,
          "position": 3532
        },
        "endLoc": {
          "line": 323,
          "column": 35,
          "position": 3620
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\backup-recovery.js",
        "start": 271,
        "end": 283,
        "startLoc": {
          "line": 271,
          "column": 33,
          "position": 3048
        },
        "endLoc": {
          "line": 283,
          "column": 42,
          "position": 3136
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "});\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        logger.error('Failed to create template'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-configuration-management.js",
        "start": 401,
        "end": 411,
        "startLoc": {
          "line": 401,
          "column": 9,
          "position": 4329
        },
        "endLoc": {
          "line": 411,
          "column": 28,
          "position": 4409
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\project-completion-deployment.js",
        "start": 112,
        "end": 122,
        "startLoc": {
          "line": 112,
          "column": 9,
          "position": 1318
        },
        "endLoc": {
          "line": 122,
          "column": 28,
          "position": 1398
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "});\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        logger.error('Failed to generate configurations from template'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-configuration-management.js",
        "start": 435,
        "end": 445,
        "startLoc": {
          "line": 435,
          "column": 9,
          "position": 4646
        },
        "endLoc": {
          "line": 445,
          "column": 50,
          "position": 4726
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\project-completion-deployment.js",
        "start": 112,
        "end": 122,
        "startLoc": {
          "line": 112,
          "column": 9,
          "position": 1318
        },
        "endLoc": {
          "line": 122,
          "column": 28,
          "position": 1398
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "});\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        logger.error('Failed to create deployment'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-configuration-management.js",
        "start": 469,
        "end": 479,
        "startLoc": {
          "line": 469,
          "column": 9,
          "position": 4958
        },
        "endLoc": {
          "line": 479,
          "column": 30,
          "position": 5038
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\project-completion-deployment.js",
        "start": 112,
        "end": 122,
        "startLoc": {
          "line": 112,
          "column": 9,
          "position": 1318
        },
        "endLoc": {
          "line": 122,
          "column": 28,
          "position": 1398
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": ".length\n        });\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        logger.error('Failed to export configurations'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-configuration-management.js",
        "start": 636,
        "end": 647,
        "startLoc": {
          "line": 636,
          "column": 2,
          "position": 6527
        },
        "endLoc": {
          "line": 647,
          "column": 34,
          "position": 6611
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\centralized-logging.js",
        "start": 153,
        "end": 122,
        "startLoc": {
          "line": 153,
          "column": 5,
          "position": 2053
        },
        "endLoc": {
          "line": 122,
          "column": 28,
          "position": 1398
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "});\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        logger.error('Failed to import configurations'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-configuration-management.js",
        "start": 674,
        "end": 684,
        "startLoc": {
          "line": 674,
          "column": 9,
          "position": 6872
        },
        "endLoc": {
          "line": 684,
          "column": 34,
          "position": 6952
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\project-completion-deployment.js",
        "start": 112,
        "end": 122,
        "startLoc": {
          "line": 112,
          "column": 9,
          "position": 1318
        },
        "endLoc": {
          "line": 122,
          "column": 28,
          "position": 1398
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ",\n            body: req.body\n        });\n        if (error instanceof z.ZodError) {\n            res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        else {\n            res.status(500).json({\n                success: false,\n                error: 'Failed to create deployment'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-cicd.js",
        "start": 71,
        "end": 84,
        "startLoc": {
          "line": 71,
          "column": 24,
          "position": 983
        },
        "endLoc": {
          "line": 84,
          "column": 30,
          "position": 1083
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\advanced-reporting.js",
        "start": 63,
        "end": 76,
        "startLoc": {
          "line": 63,
          "column": 16,
          "position": 795
        },
        "endLoc": {
          "line": 76,
          "column": 26,
          "position": 895
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ";\n        if (!deployment) {\n            return res.status(404).json({\n                success: false,\n                error: 'Deployment not found'\n            });\n        }\n        res.json({\n            success: true,\n            data: deployment\n        });\n    }\n    catch (error) {\n        structuredLogger",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-cicd.js",
        "start": 133,
        "end": 146,
        "startLoc": {
          "line": 133,
          "column": 2,
          "position": 1597
        },
        "endLoc": {
          "line": 146,
          "column": 17,
          "position": 1682
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\project-completion-deployment.js",
        "start": 152,
        "end": 165,
        "startLoc": {
          "line": 152,
          "column": 5,
          "position": 1705
        },
        "endLoc": {
          "line": 165,
          "column": 7,
          "position": 1790
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ",\n            body: req.body\n        });\n        if (error instanceof z.ZodError) {\n            res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        else {\n            res.status(500).json({\n                success: false,\n                error: 'Failed to create artifact'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-cicd.js",
        "start": 230,
        "end": 243,
        "startLoc": {
          "line": 230,
          "column": 22,
          "position": 2436
        },
        "endLoc": {
          "line": 243,
          "column": 28,
          "position": 2536
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\advanced-reporting.js",
        "start": 63,
        "end": 76,
        "startLoc": {
          "line": 63,
          "column": 16,
          "position": 795
        },
        "endLoc": {
          "line": 76,
          "column": 26,
          "position": 895
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ",\n            body: req.body\n        });\n        if (error instanceof z.ZodError) {\n            res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        else {\n            res.status(500).json({\n                success: false,\n                error: 'Failed to record test result'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-cicd.js",
        "start": 299,
        "end": 312,
        "startLoc": {
          "line": 299,
          "column": 25,
          "position": 3062
        },
        "endLoc": {
          "line": 312,
          "column": 31,
          "position": 3162
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\advanced-reporting.js",
        "start": 63,
        "end": 76,
        "startLoc": {
          "line": 63,
          "column": 16,
          "position": 795
        },
        "endLoc": {
          "line": 76,
          "column": 26,
          "position": 895
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ",\n            body: req.body\n        });\n        if (error instanceof z.ZodError) {\n            res.status(400).json({\n                success: false,\n                error: 'Validation error',\n                details: error.errors\n            });\n        }\n        else {\n            res.status(500).json({\n                success: false,\n                error: 'Failed to update configuration'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-cicd.js",
        "start": 375,
        "end": 388,
        "startLoc": {
          "line": 375,
          "column": 12,
          "position": 3740
        },
        "endLoc": {
          "line": 388,
          "column": 33,
          "position": 3840
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\advanced-reporting.js",
        "start": 63,
        "end": 76,
        "startLoc": {
          "line": 63,
          "column": 16,
          "position": 795
        },
        "endLoc": {
          "line": 76,
          "column": 26,
          "position": 895
        }
      }
    },
    {
      "format": "javascript",
      "lines": 17,
      "fragment": ".getServiceStats();\n        res.json({\n            success: true,\n            data: stats\n        });\n    }\n    catch (error) {\n        structuredLogger.error('Failed to get service stats', error, {\n            operation: 'stats_get'\n        });\n        res.status(500).json({\n            success: false,\n            error: 'Failed to get service stats'\n        });\n    }\n});\nrouter",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-cicd.js",
        "start": 415,
        "end": 431,
        "startLoc": {
          "line": 415,
          "column": 12,
          "position": 4057
        },
        "endLoc": {
          "line": 431,
          "column": 7,
          "position": 4161
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\advanced-reporting.js",
        "start": 333,
        "end": 349,
        "startLoc": {
          "line": 333,
          "column": 17,
          "position": 3057
        },
        "endLoc": {
          "line": 349,
          "column": 7,
          "position": 3161
        }
      }
    },
    {
      "format": "javascript",
      "lines": 18,
      "fragment": ",\n                total: result.total,\n                filters,\n                timestamp: new Date().toISOString(),\n                traceId\n            }\n        });\n    }\n    catch (error) {\n        if (error instanceof z.ZodError) {\n            return res.status(400).json({\n                success: false,\n                error: 'Invalid filter parameters',\n                details: error.errors,\n                traceId\n            });\n        }\n        structuredLogger.error('Failed to get compliance violations'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-audit-compliance.js",
        "start": 286,
        "end": 303,
        "startLoc": {
          "line": 286,
          "column": 11,
          "position": 3006
        },
        "endLoc": {
          "line": 303,
          "column": 38,
          "position": 3127
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\advanced-audit-compliance.js",
        "start": 155,
        "end": 172,
        "startLoc": {
          "line": 155,
          "column": 7,
          "position": 1846
        },
        "endLoc": {
          "line": 172,
          "column": 29,
          "position": 1967
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": ",\n            traceId\n        });\n    }\n});\nrouter.get('/health', async (req, res) => {\n    const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n    try {\n        const rules = await advancedAuditComplianceService.getComplianceRules();\n        const",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-audit-compliance.js",
        "start": 494,
        "end": 504,
        "startLoc": {
          "line": 494,
          "column": 15,
          "position": 4828
        },
        "endLoc": {
          "line": 504,
          "column": 6,
          "position": 4957
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\performance-v2.js",
        "start": 287,
        "end": 189,
        "startLoc": {
          "line": 287,
          "column": 42,
          "position": 3227
        },
        "endLoc": {
          "line": 189,
          "column": 17,
          "position": 2161
        }
      }
    },
    {
      "format": "javascript",
      "lines": 21,
      "fragment": ",\n            message: error instanceof Error ? error.message : 'Unknown error',\n        });\n    }\n});\nrouter.get('/insights', authMiddleware, async (req, res) => {\n    try {\n        const { organizationId, limit = 20, type, impact } = req.query;\n        if (!organizationId) {\n            return res.status(400).json({\n                success: false,\n                error: 'organizationId is required',\n            });\n        }\n        if (!/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i.test(organizationId)) {\n            return res.status(400).json({\n                success: false,\n                error: 'Invalid organizationId format',\n            });\n        }\n        const insights = await advancedAIFeaturesService",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-ai-features.js",
        "start": 41,
        "end": 61,
        "startLoc": {
          "line": 41,
          "column": 45,
          "position": 472
        },
        "endLoc": {
          "line": 61,
          "column": 26,
          "position": 670
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\next-ai-platform.js",
        "start": 68,
        "end": 88,
        "startLoc": {
          "line": 68,
          "column": 32,
          "position": 734
        },
        "endLoc": {
          "line": 88,
          "column": 22,
          "position": 932
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": "(organizationId, parseInt(limit));\n        let filteredInsights = insights;\n        if (type) {\n            filteredInsights = filteredInsights.filter(insight => insight.type === type);\n        }\n        if (impact) {\n            filteredInsights = filteredInsights.filter(insight => insight.impact === impact);\n        }\n        res.status(200).json({\n            success: true,\n            data: filteredInsights,\n        });\n    }\n    catch (error) {\n        console.error('Error getting advanced AI insights:'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-ai-features.js",
        "start": 61,
        "end": 75,
        "startLoc": {
          "line": 61,
          "column": 20,
          "position": 673
        },
        "endLoc": {
          "line": 75,
          "column": 38,
          "position": 812
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\next-ai-platform.js",
        "start": 88,
        "end": 102,
        "startLoc": {
          "line": 88,
          "column": 12,
          "position": 935
        },
        "endLoc": {
          "line": 102,
          "column": 26,
          "position": 1074
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": ", context, options } = req.body;\n        if (!sessionId || !userId || !organizationId || !prompt) {\n            return res.status(400).json({\n                success: false,\n                error: 'Missing required fields: sessionId, userId, organizationId, prompt',\n            });\n        }\n        const request = {\n            sessionId,\n            userId,\n            organizationId,\n            featureType",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-ai-features.js",
        "start": 150,
        "end": 161,
        "startLoc": {
          "line": 150,
          "column": 9,
          "position": 1510
        },
        "endLoc": {
          "line": 161,
          "column": 12,
          "position": 1609
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\next-ai-platform.js",
        "start": 208,
        "end": 219,
        "startLoc": {
          "line": 208,
          "column": 7,
          "position": 2050
        },
        "endLoc": {
          "line": 219,
          "column": 12,
          "position": 2149
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": ", context, options } = req.body;\n        if (!sessionId || !userId || !organizationId || !text) {\n            return res.status(400).json({\n                success: false,\n                error: 'Missing required fields: sessionId, userId, organizationId, text',\n            });\n        }\n        const request = {\n            sessionId,\n            userId,\n            organizationId,\n            featureType: 'nlp-advanced'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-ai-features.js",
        "start": 279,
        "end": 290,
        "startLoc": {
          "line": 279,
          "column": 5,
          "position": 2676
        },
        "endLoc": {
          "line": 290,
          "column": 15,
          "position": 2778
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\advanced-ai-features.js",
        "start": 85,
        "end": 96,
        "startLoc": {
          "line": 85,
          "column": 7,
          "position": 924
        },
        "endLoc": {
          "line": 96,
          "column": 13,
          "position": 1026
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ", authMiddleware, async (req, res) => {\n    try {\n        const { sessionId, userId, organizationId, data, context, options } = req.body;\n        if (!sessionId || !userId || !organizationId || !data) {\n            return res.status(400).json({\n                success: false,\n                error: 'Missing required fields: sessionId, userId, organizationId, data',\n            });\n        }\n        const request = {\n            sessionId,\n            userId,\n            organizationId,\n            featureType",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-ai-features.js",
        "start": 309,
        "end": 322,
        "startLoc": {
          "line": 309,
          "column": 14,
          "position": 2926
        },
        "endLoc": {
          "line": 322,
          "column": 12,
          "position": 3063
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\next-ai-platform.js",
        "start": 142,
        "end": 155,
        "startLoc": {
          "line": 142,
          "column": 11,
          "position": 1436
        },
        "endLoc": {
          "line": 155,
          "column": 12,
          "position": 1573
        }
      }
    },
    {
      "format": "javascript",
      "lines": 16,
      "fragment": ".getHealthStatus();\n        res.status(200).json({\n            success: true,\n            data: healthStatus,\n        });\n    }\n    catch (error) {\n        console.error('Error getting health status:', error);\n        res.status(500).json({\n            success: false,\n            error: 'Failed to get health status',\n            message: error instanceof Error ? error.message : 'Unknown error',\n        });\n    }\n});\nexport { router as advancedAIFeaturesRoutes",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\routes\\advanced-ai-features.js",
        "start": 343,
        "end": 358,
        "startLoc": {
          "line": 343,
          "column": 26,
          "position": 3244
        },
        "endLoc": {
          "line": 358,
          "column": 25,
          "position": 3372
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\next-ai-platform.js",
        "start": 240,
        "end": 255,
        "startLoc": {
          "line": 240,
          "column": 22,
          "position": 2333
        },
        "endLoc": {
          "line": 255,
          "column": 21,
          "position": 2461
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ",\n                        content: {\n                            'application/json': {\n                                schema: {\n                                    type: 'object',\n                                    properties: {\n                                        success: { type: 'boolean', example: true },\n                                        data: {\n                                            type: 'array',\n                                            items: {\n                                                type: 'object',\n                                                properties: {\n                                                    id: { type: 'string',",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\openapi\\spec.js",
        "start": 434,
        "end": 446,
        "startLoc": {
          "line": 434,
          "column": 33,
          "position": 3155
        },
        "endLoc": {
          "line": 446,
          "column": 2,
          "position": 3250
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\openapi\\spec.js",
        "start": 226,
        "end": 238,
        "startLoc": {
          "line": 226,
          "column": 32,
          "position": 1518
        },
        "endLoc": {
          "line": 238,
          "column": 2,
          "position": 1614
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": ": {\n            get: {\n                tags: string[];\n                summary: string;\n                description: string;\n                responses: {\n                    '200': {\n                        description: string;\n                        content: {\n                            'application/json': {\n                                schema: {\n                                    type: string;\n                                    properties: {\n                                        status: {\n                                            type: string;\n                                            example: string;\n                                        };\n                                        timestamp: {\n                                            type: string;\n                                            format: string;\n                                        };\n                                    }",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\openapi\\spec.d.ts",
        "start": 63,
        "end": 84,
        "startLoc": {
          "line": 63,
          "column": 15,
          "position": 377
        },
        "endLoc": {
          "line": 84,
          "column": 2,
          "position": 509
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\openapi\\spec.d.ts",
        "start": 26,
        "end": 47,
        "startLoc": {
          "line": 26,
          "column": 10,
          "position": 164
        },
        "endLoc": {
          "line": 47,
          "column": 7,
          "position": 296
        }
      }
    },
    {
      "format": "typescript",
      "lines": 30,
      "fragment": ": {\n            get: {\n                tags: string[];\n                summary: string;\n                description: string;\n                responses: {\n                    '200': {\n                        description: string;\n                        content: {\n                            'application/json': {\n                                schema: {\n                                    type: string;\n                                    properties: {\n                                        status: {\n                                            type: string;\n                                            example: string;\n                                        };\n                                        timestamp: {\n                                            type: string;\n                                            format: string;\n                                        };\n                                    };\n                                };\n                            };\n                        };\n                    };\n                };\n            };\n        };\n        '/metrics'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\openapi\\spec.d.ts",
        "start": 92,
        "end": 121,
        "startLoc": {
          "line": 92,
          "column": 16,
          "position": 542
        },
        "endLoc": {
          "line": 121,
          "column": 11,
          "position": 706
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\openapi\\spec.d.ts",
        "start": 26,
        "end": 92,
        "startLoc": {
          "line": 26,
          "column": 10,
          "position": 164
        },
        "endLoc": {
          "line": 92,
          "column": 16,
          "position": 541
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ";\n                responses: {\n                    '200': {\n                        description: string;\n                        content: {\n                            'application/json': {\n                                schema: {\n                                    type: string;\n                                    properties: {\n                                        success: {\n                                            type: string;\n                                            example: boolean;\n                                        };\n                                        data: {\n                                            type: string;\n                                            properties: {\n                                                revenue",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\openapi\\spec.d.ts",
        "start": 346,
        "end": 362,
        "startLoc": {
          "line": 346,
          "column": 7,
          "position": 2028
        },
        "endLoc": {
          "line": 362,
          "column": 8,
          "position": 2124
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\openapi\\spec.d.ts",
        "start": 292,
        "end": 308,
        "startLoc": {
          "line": 292,
          "column": 2,
          "position": 1720
        },
        "endLoc": {
          "line": 308,
          "column": 12,
          "position": 1816
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ": {\n            get: {\n                tags: string[];\n                summary: string;\n                description: string;\n                responses: {\n                    '200': {\n                        description: string;\n                        content: {\n                            'application/json': {\n                                schema: {\n                                    type: string;\n                                    properties: {\n                                        success: {\n                                            type: string;\n                                            example: boolean;\n                                        };\n                                        data: {\n                                            type: string;\n                                            properties: {\n                                                totalThreats",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\openapi\\spec.d.ts",
        "start": 501,
        "end": 521,
        "startLoc": {
          "line": 501,
          "column": 32,
          "position": 2920
        },
        "endLoc": {
          "line": 521,
          "column": 13,
          "position": 3047
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\openapi\\spec.d.ts",
        "start": 342,
        "end": 308,
        "startLoc": {
          "line": 342,
          "column": 47,
          "position": 1997
        },
        "endLoc": {
          "line": 308,
          "column": 12,
          "position": 1816
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ": {\n            get: {\n                tags: string[];\n                summary: string;\n                description: string;\n                responses: {\n                    '200': {\n                        description: string;\n                        content: {\n                            'application/json': {\n                                schema: {\n                                    type: string;\n                                    properties: {\n                                        success: {\n                                            type: string;\n                                            example: boolean;\n                                        };\n                                        data: {\n                                            type: string;\n                                            items",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\openapi\\spec.d.ts",
        "start": 547,
        "end": 566,
        "startLoc": {
          "line": 547,
          "column": 21,
          "position": 3184
        },
        "endLoc": {
          "line": 566,
          "column": 6,
          "position": 3305
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\openapi\\spec.d.ts",
        "start": 342,
        "end": 361,
        "startLoc": {
          "line": 342,
          "column": 47,
          "position": 1997
        },
        "endLoc": {
          "line": 361,
          "column": 11,
          "position": 2118
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ";\n                responses: {\n                    '200': {\n                        description: string;\n                        content: {\n                            'application/json': {\n                                schema: {\n                                    type: string;\n                                    properties: {\n                                        success: {\n                                            type: string;\n                                            example: boolean;\n                                        };\n                                        data: {\n                                            type: string;\n                                            items: {\n                                                type: string;\n                                                properties: {\n                                                    id: {\n                                                        type: string;\n                                                        example",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\openapi\\spec.d.ts",
        "start": 551,
        "end": 571,
        "startLoc": {
          "line": 551,
          "column": 7,
          "position": 3215
        },
        "endLoc": {
          "line": 571,
          "column": 8,
          "position": 3337
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\openapi\\spec.d.ts",
        "start": 236,
        "end": 256,
        "startLoc": {
          "line": 236,
          "column": 2,
          "position": 1394
        },
        "endLoc": {
          "line": 256,
          "column": 2,
          "position": 1516
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ";\n                                    };\n                                };\n                            };\n                        };\n                    };\n                };\n                responses: {\n                    '201': {\n                        description: string;\n                        content: {\n                            'application/json': {\n                                schema: {\n                                    type: string;\n                                    properties: {\n                                        success: {\n                                            type: string;\n                                            example: boolean;\n                                        };\n                                        budgetId",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\openapi\\spec.d.ts",
        "start": 629,
        "end": 648,
        "startLoc": {
          "line": 629,
          "column": 2,
          "position": 3681
        },
        "endLoc": {
          "line": 648,
          "column": 9,
          "position": 3782
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\openapi\\spec.d.ts",
        "start": 182,
        "end": 201,
        "startLoc": {
          "line": 182,
          "column": 2,
          "position": 1079
        },
        "endLoc": {
          "line": 201,
          "column": 8,
          "position": 1180
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ": {\n            get: {\n                tags: string[];\n                summary: string;\n                description: string;\n                responses: {\n                    '200': {\n                        description: string;\n                        content: {\n                            'application/json': {\n                                schema: {\n                                    type: string;\n                                    properties: {\n                                        success: {\n                                            type: string;\n                                            example: boolean;\n                                        };\n                                        data: {\n                                            type: string;\n                                            properties: {\n                                                totalCost",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\openapi\\spec.d.ts",
        "start": 664,
        "end": 684,
        "startLoc": {
          "line": 664,
          "column": 19,
          "position": 3863
        },
        "endLoc": {
          "line": 684,
          "column": 10,
          "position": 3990
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\openapi\\spec.d.ts",
        "start": 342,
        "end": 308,
        "startLoc": {
          "line": 342,
          "column": 47,
          "position": 1997
        },
        "endLoc": {
          "line": 308,
          "column": 12,
          "position": 1816
        }
      }
    },
    {
      "format": "javascript",
      "lines": 17,
      "fragment": "}\n    if (errors.length > 0) {\n        const problemDetails = {\n            type: 'https://econeura.com/errors/validation-failed',\n            title: 'Validation Failed',\n            status: 400,\n            detail: 'Request validation failed',\n            instance: req.url,\n            timestamp: new Date().toISOString(),\n            errors: errors\n        };\n        res.status(400).json(problemDetails);\n        return;\n    }\n    next();\n};\n//# sourceMappingURL=validation.middleware.js.map",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\middleware\\validation.middleware.js",
        "start": 100,
        "end": 116,
        "startLoc": {
          "line": 100,
          "column": 5,
          "position": 1235
        },
        "endLoc": {
          "line": 116,
          "column": 50,
          "position": 1353
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\middleware\\validation.middleware.js",
        "start": 52,
        "end": 68,
        "startLoc": {
          "line": 52,
          "column": 5,
          "position": 657
        },
        "endLoc": {
          "line": 68,
          "column": 7,
          "position": 775
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": "});\n            if (res.statusCode >= 400) {\n                span.setStatus({\n                    code: SpanStatusCode.ERROR,\n                    message: `HTTP ${res.statusCode}`\n                });\n            }\n            else {\n                span.setStatus({ code: SpanStatusCode.OK });\n            }\n            span.end();\n            structuredLogger",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\middleware\\trace-propagation.middleware.js",
        "start": 108,
        "end": 119,
        "startLoc": {
          "line": 108,
          "column": 13,
          "position": 1003
        },
        "endLoc": {
          "line": 119,
          "column": 17,
          "position": 1093
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\infrastructure\\observability\\tracing.service.js",
        "start": 180,
        "end": 191,
        "startLoc": {
          "line": 180,
          "column": 17,
          "position": 1662
        },
        "endLoc": {
          "line": 191,
          "column": 2,
          "position": 1752
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": "= (req, res, next) => {\n    if (req.body && typeof req.body === 'object') {\n        req.body = sanitizeObject(req.body);\n    }\n    if (req.query && typeof req.query === 'object') {\n        req.query = sanitizeObject(req.query);\n    }\n    if (req.params && typeof req.params === 'object') {\n        req.params = sanitizeObject(req.params);\n    }\n    next();\n};\nexport const securityHeadersMiddleware",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\middleware\\security.js",
        "start": 80,
        "end": 92,
        "startLoc": {
          "line": 80,
          "column": 2,
          "position": 776
        },
        "endLoc": {
          "line": 92,
          "column": 26,
          "position": 928
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\middleware\\security.middleware.js",
        "start": 47,
        "end": 59,
        "startLoc": {
          "line": 47,
          "column": 2,
          "position": 433
        },
        "endLoc": {
          "line": 59,
          "column": 29,
          "position": 585
        }
      }
    },
    {
      "format": "javascript",
      "lines": 41,
      "fragment": ": ['GET', 'POST', 'PUT', 'PATCH', 'DELETE', 'OPTIONS', 'HEAD'],\n    allowedHeaders: [\n        'Content-Type',\n        'Authorization',\n        'X-Requested-With',\n        'X-Org-ID',\n        'X-User-ID',\n        'X-Correlation-ID',\n        'X-Tenant-ID',\n        'X-User-Role',\n        'X-Permissions',\n        'X-Session-ID',\n        'X-Request-ID',\n        'X-CSRF-Token',\n        'X-API-Key',\n        'X-Client-Version',\n        'X-Client-Platform',\n        'Accept',\n        'Accept-Language',\n        'Accept-Encoding',\n        'Cache-Control',\n        'Pragma'\n    ],\n    exposedHeaders: [\n        'X-System-Mode',\n        'X-Est-Cost-EUR',\n        'X-Budget-Pct',\n        'X-Latency-ms',\n        'X-Route',\n        'X-RLS-Policies-Applied',\n        'X-RLS-Rules-Evaluated',\n        'X-RLS-Execution-Time',\n        'X-RLS-Tenant-Isolation',\n        'X-RateLimit-Limit',\n        'X-RateLimit-Remaining',\n        'X-RateLimit-Reset',\n        'X-Cache-Status',\n        'X-Response-Time',\n        'X-Request-ID'\n    ],\n    maxAge",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\middleware\\security-enhanced.middleware.js",
        "start": 30,
        "end": 70,
        "startLoc": {
          "line": 30,
          "column": 8,
          "position": 217
        },
        "endLoc": {
          "line": 70,
          "column": 7,
          "position": 401
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\security-config.service.js",
        "start": 24,
        "end": 64,
        "startLoc": {
          "line": 24,
          "column": 15,
          "position": 142
        },
        "endLoc": {
          "line": 64,
          "column": 12,
          "position": 326
        }
      }
    },
    {
      "format": "javascript",
      "lines": 48,
      "fragment": "{\n    contentSecurityPolicy: {\n        directives: {\n            defaultSrc: [\"'self'\"],\n            scriptSrc: [\n                \"'self'\",\n                \"'unsafe-inline'\",\n                \"'unsafe-eval'\",\n                \"https://cdn.jsdelivr.net\",\n                \"https://unpkg.com\"\n            ],\n            styleSrc: [\n                \"'self'\",\n                \"'unsafe-inline'\",\n                \"https://fonts.googleapis.com\",\n                \"https://cdn.jsdelivr.net\"\n            ],\n            fontSrc: [\n                \"'self'\",\n                \"https://fonts.gstatic.com\",\n                \"data:\"\n            ],\n            imgSrc: [\n                \"'self'\",\n                \"data:\",\n                \"https:\",\n                \"blob:\"\n            ],\n            connectSrc: [\n                \"'self'\",\n                \"https:\",\n                \"wss:\",\n                \"ws:\"\n            ],\n            mediaSrc: [\n                \"'self'\",\n                \"data:\",\n                \"blob:\"\n            ],\n            objectSrc: [\"'none'\"],\n            baseUri: [\"'self'\"],\n            formAction: [\"'self'\"],\n            frameAncestors: [\"'none'\"],\n            upgradeInsecureRequests: []\n        },\n        reportOnly: false\n    },\n    crossOriginEmbedderPolicy",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\middleware\\security-enhanced.middleware.js",
        "start": 74,
        "end": 121,
        "startLoc": {
          "line": 74,
          "column": 2,
          "position": 429
        },
        "endLoc": {
          "line": 121,
          "column": 26,
          "position": 656
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\security-config.service.js",
        "start": 67,
        "end": 114,
        "startLoc": {
          "line": 67,
          "column": 2,
          "position": 346
        },
        "endLoc": {
          "line": 114,
          "column": 5,
          "position": 573
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ": {\n    cors: {\n        origin: (origin: string | undefined, callback: (err: Error | null, allow?: boolean) => void) => void;\n        credentials: boolean;\n        methods: string[];\n        allowedHeaders: string[];\n        exposedHeaders: string[];\n        maxAge: number;\n        preflightContinue: boolean;\n        optionsSuccessStatus: number;\n    };\n    helmet: {\n        contentSecurityPolicy: {",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\middleware\\security-enhanced.middleware.d.ts",
        "start": 20,
        "end": 32,
        "startLoc": {
          "line": 20,
          "column": 15,
          "position": 497
        },
        "endLoc": {
          "line": 32,
          "column": 2,
          "position": 622
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\security-config.service.d.ts",
        "start": 104,
        "end": 116,
        "startLoc": {
          "line": 104,
          "column": 2,
          "position": 821
        },
        "endLoc": {
          "line": 116,
          "column": 4,
          "position": 946
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": ";\nexport interface RateLimitConfig {\n    windowMs: number;\n    maxRequests: number;\n    skipSuccessfulRequests?: boolean;\n    skipFailedRequests?: boolean;\n    keyGenerator?: (req: Request) => string;\n    onLimitReached?: (req: Request, res: Response) => void;\n    message?: string;\n    standardHeaders?: boolean;\n    legacyHeaders?: boolean;\n}\nexport interface RateLimitInfo {\n    limit: number;\n    remaining: number;\n    reset: number;\n    retryAfter?: number;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\middleware\\rate-limiter.d.ts",
        "start": 1,
        "end": 19,
        "startLoc": {
          "line": 1,
          "column": 10,
          "position": 17
        },
        "endLoc": {
          "line": 19,
          "column": 8,
          "position": 164
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\middleware\\rate-limiter.ts",
        "start": 4,
        "end": 25,
        "startLoc": {
          "line": 4,
          "column": 30,
          "position": 45
        },
        "endLoc": {
          "line": 25,
          "column": 6,
          "position": 195
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": ";\n            if (req.gatewayInfo?.serviceId) {\n                apiGateway.recordRequest(req.gatewayInfo.serviceId, responseTime, success);\n            }\n            if (req.gatewayInfo?.serviceId) {\n                const service = apiGateway.getService(req.gatewayInfo.serviceId);\n                if (service) {\n                    service.currentConnections = Math.max(0, service.currentConnections - 1);\n                }\n            }\n            logger",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\middleware\\gateway.js",
        "start": 142,
        "end": 152,
        "startLoc": {
          "line": 142,
          "column": 6,
          "position": 1485
        },
        "endLoc": {
          "line": 152,
          "column": 7,
          "position": 1596
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\middleware\\gateway.js",
        "start": 109,
        "end": 119,
        "startLoc": {
          "line": 109,
          "column": 3,
          "position": 1106
        },
        "endLoc": {
          "line": 119,
          "column": 6,
          "position": 1217
        }
      }
    },
    {
      "format": "typescript",
      "lines": 46,
      "fragment": "export interface CostEstimate {\n    provider: string;\n    model: string;\n    inputTokens: number;\n    outputTokens: number;\n    costPerInputToken: number;\n    costPerOutputToken: number;\n}\nexport interface BudgetLimits {\n    dailyLimitEUR: number;\n    monthlyLimitEUR: number;\n    perRequestLimitEUR: number;\n    warningThreshold: number;\n    criticalThreshold: number;\n    emergencyThreshold: number;\n}\nexport interface CostStatus {\n    orgId: string;\n    currentDaily: number;\n    currentMonthly: number;\n    limits: BudgetLimits;\n    status: 'healthy' | 'warning' | 'critical' | 'emergency';\n    killSwitchActive: boolean;\n    lastUpdated: Date;\n}\nexport interface BudgetExceededEvent {\n    type: 'BUDGET_EXCEEDED';\n    orgId: string;\n    currentCost: number;\n    limit: number;\n    period: 'daily' | 'monthly' | 'per_request';\n    provider?: string;\n    model?: string;\n    route: string;\n    correlationId: string;\n    timestamp: Date;\n    killSwitchActivated: boolean;\n}\nexport interface FinOpsRequest extends Request {\n    orgId?: string;\n    userId?: string;\n    correlationId?: string;\n    costEstimate?: CostEstimate;\n    startTime?: number;\n}\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\middleware\\finops-enforce-v2.d.ts",
        "start": 2,
        "end": 47,
        "startLoc": {
          "line": 2,
          "column": 1,
          "position": 19
        },
        "endLoc": {
          "line": 47,
          "column": 7,
          "position": 345
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\middleware\\finops-enforce-v2.ts",
        "start": 52,
        "end": 102,
        "startLoc": {
          "line": 52,
          "column": 1,
          "position": 449
        },
        "endLoc": {
          "line": 102,
          "column": 80,
          "position": 780
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ";\nexport interface FeatureFlagRequest extends Request {\n    featureFlags?: {\n        [key: string]: boolean;\n    };\n    featureFlagContext?: FeatureFlagContext;\n}\nexport interface FeatureFlagMiddlewareOptions {\n    flags?: string[];\n    requireAll?: boolean;\n    contextExtractor?: (req: Request) => FeatureFlagContext;\n}\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\middleware\\feature-flags.d.ts",
        "start": 2,
        "end": 14,
        "startLoc": {
          "line": 2,
          "column": 26,
          "position": 30
        },
        "endLoc": {
          "line": 14,
          "column": 7,
          "position": 122
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\middleware\\feature-flags.ts",
        "start": 3,
        "end": 20,
        "startLoc": {
          "line": 3,
          "column": 19,
          "position": 46
        },
        "endLoc": {
          "line": 20,
          "column": 4,
          "position": 141
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "export interface CorrelationRequest extends Request {\n    correlationId: string;\n    requestId: string;\n    traceId: string;\n    spanId: string;\n    parentSpanId?: string;\n    correlationContext: CorrelationContext;\n}\nexport interface CorrelationResponse extends Response {\n    correlationId: string;\n    requestId: string;\n    traceId: string;\n    spanId: string;\n}\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\middleware\\correlation.d.ts",
        "start": 3,
        "end": 17,
        "startLoc": {
          "line": 3,
          "column": 1,
          "position": 32
        },
        "endLoc": {
          "line": 17,
          "column": 7,
          "position": 131
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\middleware\\correlation.ts",
        "start": 30,
        "end": 46,
        "startLoc": {
          "line": 30,
          "column": 1,
          "position": 122
        },
        "endLoc": {
          "line": 46,
          "column": 80,
          "position": 223
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "z.ZodObject<{\n        id: z.ZodString;\n        type: z.ZodEnum<[\"startEvent\", \"endEvent\", \"task\", \"gateway\", \"intermediateEvent\"]>;\n        name: z.ZodString;\n        x: z.ZodOptional<z.ZodNumber>;\n        y: z.ZodOptional<z.ZodNumber>;\n        actions: z.ZodOptional<z.ZodArray<z.ZodString, \"many\">>;\n    }, \"strip\", z.ZodTypeAny, {\n        type?: \"task\" | \"startEvent\" | \"endEvent\" | \"gateway\" | \"intermediateEvent\";\n        name?: string;\n        id?: string;\n        actions?: string[];\n        x?: number;\n        y?: number;\n    }, {\n        type?: \"task\" | \"startEvent\" | \"endEvent\" | \"gateway\" | \"intermediateEvent\";\n        name?: string;\n        id?: string;\n        actions?: string[];\n        x?: number;\n        y?: number;\n    }>,",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\workflows.service.d.ts",
        "start": 41,
        "end": 62,
        "startLoc": {
          "line": 41,
          "column": 2,
          "position": 440
        },
        "endLoc": {
          "line": 62,
          "column": 2,
          "position": 694
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\workflows.service.d.ts",
        "start": 2,
        "end": 23,
        "startLoc": {
          "line": 2,
          "column": 2,
          "position": 22
        },
        "endLoc": {
          "line": 23,
          "column": 2,
          "position": 273
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "z.ZodObject<{\n        id: z.ZodString;\n        source: z.ZodString;\n        target: z.ZodString;\n        condition: z.ZodOptional<z.ZodString>;\n    }, \"strip\", z.ZodTypeAny, {\n        id?: string;\n        source?: string;\n        condition?: string;\n        target?: string;\n    }, {\n        id?: string;\n        source?: string;\n        condition?: string;\n        target?: string;\n    }>,",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\workflows.service.d.ts",
        "start": 63,
        "end": 78,
        "startLoc": {
          "line": 63,
          "column": 2,
          "position": 708
        },
        "endLoc": {
          "line": 78,
          "column": 2,
          "position": 842
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\workflows.service.d.ts",
        "start": 24,
        "end": 39,
        "startLoc": {
          "line": 24,
          "column": 2,
          "position": 284
        },
        "endLoc": {
          "line": 39,
          "column": 2,
          "position": 415
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ", {\n    elements?: {\n        type?: \"task\" | \"startEvent\" | \"endEvent\" | \"gateway\" | \"intermediateEvent\";\n        name?: string;\n        id?: string;\n        actions?: string[];\n        x?: number;\n        y?: number;\n    }[];\n    flows?: {\n        id?: string;\n        source?: string;\n        condition?: string;\n        target?: string;\n    }[];\n    startElement?: string;\n    endElements?: string[];\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\workflows.service.d.ts",
        "start": 98,
        "end": 115,
        "startLoc": {
          "line": 98,
          "column": 2,
          "position": 1030
        },
        "endLoc": {
          "line": 115,
          "column": 2,
          "position": 1177
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\workflows.service.d.ts",
        "start": 81,
        "end": 98,
        "startLoc": {
          "line": 81,
          "column": 11,
          "position": 883
        },
        "endLoc": {
          "line": 98,
          "column": 2,
          "position": 1030
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "z.ZodObject<{\n        id: z.ZodString;\n        name: z.ZodString;\n        type: z.ZodEnum<[\"initial\", \"intermediate\", \"final\"]>;\n        actions: z.ZodOptional<z.ZodArray<z.ZodString, \"many\">>;\n    }, \"strip\", z.ZodTypeAny, {\n        type?: \"initial\" | \"intermediate\" | \"final\";\n        name?: string;\n        id?: string;\n        actions?: string[];\n    }, {\n        type?: \"initial\" | \"intermediate\" | \"final\";\n        name?: string;\n        id?: string;\n        actions?: string[];\n    }>,",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\workflows.service.d.ts",
        "start": 152,
        "end": 167,
        "startLoc": {
          "line": 152,
          "column": 2,
          "position": 1550
        },
        "endLoc": {
          "line": 167,
          "column": 2,
          "position": 1722
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\workflows.service.d.ts",
        "start": 116,
        "end": 131,
        "startLoc": {
          "line": 116,
          "column": 2,
          "position": 1189
        },
        "endLoc": {
          "line": 131,
          "column": 2,
          "position": 1358
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "z.ZodObject<{\n        id: z.ZodString;\n        from: z.ZodString;\n        to: z.ZodString;\n        event: z.ZodString;\n        condition: z.ZodOptional<z.ZodString>;\n    }, \"strip\", z.ZodTypeAny, {\n        id?: string;\n        from?: string;\n        event?: string;\n        condition?: string;\n        to?: string;\n    }, {\n        id?: string;\n        from?: string;\n        event?: string;\n        condition?: string;\n        to?: string;\n    }>,",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\workflows.service.d.ts",
        "start": 168,
        "end": 186,
        "startLoc": {
          "line": 168,
          "column": 2,
          "position": 1736
        },
        "endLoc": {
          "line": 186,
          "column": 2,
          "position": 1895
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\workflows.service.d.ts",
        "start": 132,
        "end": 150,
        "startLoc": {
          "line": 132,
          "column": 2,
          "position": 1369
        },
        "endLoc": {
          "line": 150,
          "column": 2,
          "position": 1525
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ", {\n    states?: {\n        type?: \"initial\" | \"intermediate\" | \"final\";\n        name?: string;\n        id?: string;\n        actions?: string[];\n    }[];\n    transitions?: {\n        id?: string;\n        from?: string;\n        event?: string;\n        condition?: string;\n        to?: string;\n    }[];\n    initialState?: string;\n    finalStates?: string[];\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\workflows.service.d.ts",
        "start": 205,
        "end": 221,
        "startLoc": {
          "line": 205,
          "column": 2,
          "position": 2067
        },
        "endLoc": {
          "line": 221,
          "column": 2,
          "position": 2198
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\workflows.service.d.ts",
        "start": 189,
        "end": 205,
        "startLoc": {
          "line": 189,
          "column": 11,
          "position": 1936
        },
        "endLoc": {
          "line": 205,
          "column": 2,
          "position": 2067
        }
      }
    },
    {
      "format": "typescript",
      "lines": 76,
      "fragment": "z.ZodObject<{\n        elements: z.ZodArray<z.ZodObject<{\n            id: z.ZodString;\n            type: z.ZodEnum<[\"startEvent\", \"endEvent\", \"task\", \"gateway\", \"intermediateEvent\"]>;\n            name: z.ZodString;\n            x: z.ZodOptional<z.ZodNumber>;\n            y: z.ZodOptional<z.ZodNumber>;\n            actions: z.ZodOptional<z.ZodArray<z.ZodString, \"many\">>;\n        }, \"strip\", z.ZodTypeAny, {\n            type?: \"task\" | \"startEvent\" | \"endEvent\" | \"gateway\" | \"intermediateEvent\";\n            name?: string;\n            id?: string;\n            actions?: string[];\n            x?: number;\n            y?: number;\n        }, {\n            type?: \"task\" | \"startEvent\" | \"endEvent\" | \"gateway\" | \"intermediateEvent\";\n            name?: string;\n            id?: string;\n            actions?: string[];\n            x?: number;\n            y?: number;\n        }>, \"many\">;\n        flows: z.ZodArray<z.ZodObject<{\n            id: z.ZodString;\n            source: z.ZodString;\n            target: z.ZodString;\n            condition: z.ZodOptional<z.ZodString>;\n        }, \"strip\", z.ZodTypeAny, {\n            id?: string;\n            source?: string;\n            condition?: string;\n            target?: string;\n        }, {\n            id?: string;\n            source?: string;\n            condition?: string;\n            target?: string;\n        }>, \"many\">;\n        startElement: z.ZodString;\n        endElements: z.ZodArray<z.ZodString, \"many\">;\n    }, \"strip\", z.ZodTypeAny, {\n        elements?: {\n            type?: \"task\" | \"startEvent\" | \"endEvent\" | \"gateway\" | \"intermediateEvent\";\n            name?: string;\n            id?: string;\n            actions?: string[];\n            x?: number;\n            y?: number;\n        }[];\n        flows?: {\n            id?: string;\n            source?: string;\n            condition?: string;\n            target?: string;\n        }[];\n        startElement?: string;\n        endElements?: string[];\n    }, {\n        elements?: {\n            type?: \"task\" | \"startEvent\" | \"endEvent\" | \"gateway\" | \"intermediateEvent\";\n            name?: string;\n            id?: string;\n            actions?: string[];\n            x?: number;\n            y?: number;\n        }[];\n        flows?: {\n            id?: string;\n            source?: string;\n            condition?: string;\n            target?: string;\n        }[];\n        startElement?: string;\n        endElements?: string[];\n    }>,",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\workflows.service.d.ts",
        "start": 269,
        "end": 344,
        "startLoc": {
          "line": 269,
          "column": 2,
          "position": 2750
        },
        "endLoc": {
          "line": 344,
          "column": 2,
          "position": 3505
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\workflows.service.d.ts",
        "start": 40,
        "end": 115,
        "startLoc": {
          "line": 40,
          "column": 2,
          "position": 426
        },
        "endLoc": {
          "line": 115,
          "column": 2,
          "position": 1178
        }
      }
    },
    {
      "format": "typescript",
      "lines": 71,
      "fragment": "z.ZodObject<{\n        states: z.ZodArray<z.ZodObject<{\n            id: z.ZodString;\n            name: z.ZodString;\n            type: z.ZodEnum<[\"initial\", \"intermediate\", \"final\"]>;\n            actions: z.ZodOptional<z.ZodArray<z.ZodString, \"many\">>;\n        }, \"strip\", z.ZodTypeAny, {\n            type?: \"initial\" | \"intermediate\" | \"final\";\n            name?: string;\n            id?: string;\n            actions?: string[];\n        }, {\n            type?: \"initial\" | \"intermediate\" | \"final\";\n            name?: string;\n            id?: string;\n            actions?: string[];\n        }>, \"many\">;\n        transitions: z.ZodArray<z.ZodObject<{\n            id: z.ZodString;\n            from: z.ZodString;\n            to: z.ZodString;\n            event: z.ZodString;\n            condition: z.ZodOptional<z.ZodString>;\n        }, \"strip\", z.ZodTypeAny, {\n            id?: string;\n            from?: string;\n            event?: string;\n            condition?: string;\n            to?: string;\n        }, {\n            id?: string;\n            from?: string;\n            event?: string;\n            condition?: string;\n            to?: string;\n        }>, \"many\">;\n        initialState: z.ZodString;\n        finalStates: z.ZodArray<z.ZodString, \"many\">;\n    }, \"strip\", z.ZodTypeAny, {\n        states?: {\n            type?: \"initial\" | \"intermediate\" | \"final\";\n            name?: string;\n            id?: string;\n            actions?: string[];\n        }[];\n        transitions?: {\n            id?: string;\n            from?: string;\n            event?: string;\n            condition?: string;\n            to?: string;\n        }[];\n        initialState?: string;\n        finalStates?: string[];\n    }, {\n        states?: {\n            type?: \"initial\" | \"intermediate\" | \"final\";\n            name?: string;\n            id?: string;\n            actions?: string[];\n        }[];\n        transitions?: {\n            id?: string;\n            from?: string;\n            event?: string;\n            condition?: string;\n            to?: string;\n        }[];\n        initialState?: string;\n        finalStates?: string[];\n    }>]",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\workflows.service.d.ts",
        "start": 344,
        "end": 414,
        "startLoc": {
          "line": 344,
          "column": 2,
          "position": 3507
        },
        "endLoc": {
          "line": 414,
          "column": 2,
          "position": 4173
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\workflows.service.d.ts",
        "start": 151,
        "end": 221,
        "startLoc": {
          "line": 151,
          "column": 2,
          "position": 1536
        },
        "endLoc": {
          "line": 221,
          "column": 2,
          "position": 2199
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "z.ZodObject<{\n        id: z.ZodString;\n        name: z.ZodString;\n        type: z.ZodEnum<[\"function\", \"http\", \"notification\", \"delay\", \"condition\"]>;\n        config: z.ZodRecord<z.ZodString, z.ZodAny>;\n        order: z.ZodNumber;\n    }, \"strip\", z.ZodTypeAny, {\n        type?: \"function\" | \"delay\" | \"http\" | \"notification\" | \"condition\";\n        name?: string;\n        order?: number;\n        config?: Record<string, any>;\n        id?: string;\n    }, {\n        type?: \"function\" | \"delay\" | \"http\" | \"notification\" | \"condition\";\n        name?: string;\n        order?: number;\n        config?: Record<string, any>;\n        id?: string;\n    }>,",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\workflows.service.d.ts",
        "start": 415,
        "end": 433,
        "startLoc": {
          "line": 415,
          "column": 2,
          "position": 4185
        },
        "endLoc": {
          "line": 433,
          "column": 2,
          "position": 4410
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\workflows.service.d.ts",
        "start": 222,
        "end": 240,
        "startLoc": {
          "line": 222,
          "column": 2,
          "position": 2210
        },
        "endLoc": {
          "line": 240,
          "column": 2,
          "position": 2432
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": ": z.ZodObject<{\n        author: z.ZodString;\n        category: z.ZodOptional<z.ZodString>;\n        tags: z.ZodOptional<z.ZodArray<z.ZodString, \"many\">>;\n        priority: z.ZodOptional<z.ZodNumber>;\n        timeout: z.ZodOptional<z.ZodNumber>;\n        description: z.ZodOptional<z.ZodString>;\n    }, \"strip\", z.ZodTypeAny, {\n        timeout?: number;\n        tags?: string[];\n        description?: string;\n        category?: string;\n        priority?: number;\n        author?: string;\n    }, {\n        timeout?: number;\n        tags?: string[];\n        description?: string;\n        category?: string;\n        priority?: number;\n        author?: string;\n    }>;\n    createdAt",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\workflows.service.d.ts",
        "start": 434,
        "end": 456,
        "startLoc": {
          "line": 434,
          "column": 9,
          "position": 4418
        },
        "endLoc": {
          "line": 456,
          "column": 10,
          "position": 4638
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\workflows.service.d.ts",
        "start": 241,
        "end": 263,
        "startLoc": {
          "line": 241,
          "column": 23,
          "position": 2441
        },
        "endLoc": {
          "line": 263,
          "column": 7,
          "position": 2657
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "{\n        elements?: {\n            type?: \"task\" | \"startEvent\" | \"endEvent\" | \"gateway\" | \"intermediateEvent\";\n            name?: string;\n            id?: string;\n            actions?: string[];\n            x?: number;\n            y?: number;\n        }[];\n        flows?: {\n            id?: string;\n            source?: string;\n            condition?: string;\n            target?: string;\n        }[];\n        startElement?: string;\n        endElements?: string[];\n    } |",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\workflows.service.d.ts",
        "start": 481,
        "end": 498,
        "startLoc": {
          "line": 481,
          "column": 2,
          "position": 4887
        },
        "endLoc": {
          "line": 498,
          "column": 2,
          "position": 5034
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\workflows.service.d.ts",
        "start": 81,
        "end": 98,
        "startLoc": {
          "line": 81,
          "column": 2,
          "position": 885
        },
        "endLoc": {
          "line": 98,
          "column": 2,
          "position": 1030
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "{\n        states?: {\n            type?: \"initial\" | \"intermediate\" | \"final\";\n            name?: string;\n            id?: string;\n            actions?: string[];\n        }[];\n        transitions?: {\n            id?: string;\n            from?: string;\n            event?: string;\n            condition?: string;\n            to?: string;\n        }[];\n        initialState?: string;\n        finalStates?: string[];\n    };",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\workflows.service.d.ts",
        "start": 498,
        "end": 514,
        "startLoc": {
          "line": 498,
          "column": 2,
          "position": 5036
        },
        "endLoc": {
          "line": 514,
          "column": 2,
          "position": 5166
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\workflows.service.d.ts",
        "start": 189,
        "end": 205,
        "startLoc": {
          "line": 189,
          "column": 2,
          "position": 1938
        },
        "endLoc": {
          "line": 205,
          "column": 2,
          "position": 2067
        }
      }
    },
    {
      "format": "typescript",
      "lines": 58,
      "fragment": ", {\n    type?: \"bpmn\" | \"state_machine\";\n    status?: \"active\" | \"inactive\" | \"draft\";\n    version?: number;\n    name?: string;\n    metadata?: {\n        timeout?: number;\n        tags?: string[];\n        description?: string;\n        category?: string;\n        priority?: number;\n        author?: string;\n    };\n    id?: string;\n    createdAt?: Date;\n    updatedAt?: Date;\n    actions?: {\n        type?: \"function\" | \"delay\" | \"http\" | \"notification\" | \"condition\";\n        name?: string;\n        order?: number;\n        config?: Record<string, any>;\n        id?: string;\n    }[];\n    definition?: {\n        elements?: {\n            type?: \"task\" | \"startEvent\" | \"endEvent\" | \"gateway\" | \"intermediateEvent\";\n            name?: string;\n            id?: string;\n            actions?: string[];\n            x?: number;\n            y?: number;\n        }[];\n        flows?: {\n            id?: string;\n            source?: string;\n            condition?: string;\n            target?: string;\n        }[];\n        startElement?: string;\n        endElements?: string[];\n    } | {\n        states?: {\n            type?: \"initial\" | \"intermediate\" | \"final\";\n            name?: string;\n            id?: string;\n            actions?: string[];\n        }[];\n        transitions?: {\n            id?: string;\n            from?: string;\n            event?: string;\n            condition?: string;\n            to?: string;\n        }[];\n        initialState?: string;\n        finalStates?: string[];\n    };\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\workflows.service.d.ts",
        "start": 515,
        "end": 572,
        "startLoc": {
          "line": 515,
          "column": 2,
          "position": 5169
        },
        "endLoc": {
          "line": 572,
          "column": 2,
          "position": 5664
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\workflows.service.d.ts",
        "start": 458,
        "end": 515,
        "startLoc": {
          "line": 458,
          "column": 11,
          "position": 4674
        },
        "endLoc": {
          "line": 515,
          "column": 2,
          "position": 5169
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ", {\n    status?: \"completed\" | \"failed\" | \"cancelled\" | \"running\" | \"paused\";\n    context?: Record<string, any>;\n    metadata?: Record<string, any>;\n    id?: string;\n    completedAt?: Date;\n    workflowId?: string;\n    currentElement?: string;\n    currentState?: string;\n    startedAt?: Date;\n    executionHistory?: {\n        status?: \"success\" | \"failed\" | \"skipped\";\n        timestamp?: Date;\n        details?: Record<string, any>;\n        action?: string;\n    }[];\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\workflows.service.d.ts",
        "start": 615,
        "end": 631,
        "startLoc": {
          "line": 615,
          "column": 2,
          "position": 6198
        },
        "endLoc": {
          "line": 631,
          "column": 2,
          "position": 6362
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\workflows.service.d.ts",
        "start": 599,
        "end": 615,
        "startLoc": {
          "line": 599,
          "column": 11,
          "position": 6034
        },
        "endLoc": {
          "line": 615,
          "column": 2,
          "position": 6198
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "export type WorkflowElement = z.infer<typeof WorkflowElementSchema>;\nexport type WorkflowFlow = z.infer<typeof WorkflowFlowSchema>;\nexport type BPMNDefinition = z.infer<typeof BPMNDefinitionSchema>;\nexport type StateMachineState = z.infer<typeof StateMachineStateSchema>;\nexport type StateMachineTransition = z.infer<typeof StateMachineTransitionSchema>;\nexport type StateMachineDefinition = z.infer<typeof StateMachineDefinitionSchema>;\nexport type WorkflowAction = z.infer<typeof WorkflowActionSchema>;\nexport type WorkflowMetadata = z.infer<typeof WorkflowMetadataSchema>;\nexport type Workflow = z.infer<typeof WorkflowSchema>;\nexport type WorkflowInstance = z.infer<typeof WorkflowInstanceSchema>;\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\workflows.service.d.ts",
        "start": 632,
        "end": 642,
        "startLoc": {
          "line": 632,
          "column": 1,
          "position": 6365
        },
        "endLoc": {
          "line": 642,
          "column": 7,
          "position": 6545
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\workflows.service.ts",
        "start": 98,
        "end": 109,
        "startLoc": {
          "line": 98,
          "column": 1,
          "position": 1229
        },
        "endLoc": {
          "line": 109,
          "column": 25,
          "position": 1410
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": ") {\n            instance.status = 'completed';\n            instance.completedAt = new Date();\n            instance.updatedAt = new Date();\n            instance.history.push({\n                timestamp: new Date(),\n                action: 'workflow_completed',\n                message: 'Workflow completed successfully',\n            });\n            return;\n        }\n        const availableTransitions",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\workflows.js",
        "start": 512,
        "end": 523,
        "startLoc": {
          "line": 512,
          "column": 8,
          "position": 5850
        },
        "endLoc": {
          "line": 523,
          "column": 21,
          "position": 5941
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\workflows.js",
        "start": 469,
        "end": 480,
        "startLoc": {
          "line": 469,
          "column": 11,
          "position": 5409
        },
        "endLoc": {
          "line": 480,
          "column": 14,
          "position": 5500
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ": z.ZodObject<{\n    id: z.ZodString;\n    source: z.ZodString;\n    target: z.ZodString;\n    condition: z.ZodOptional<z.ZodString>;\n}, \"strip\", z.ZodTypeAny, {\n    id?: string;\n    source?: string;\n    condition?: string;\n    target?: string;\n}, {\n    id?: string;\n    source?: string;\n    condition?: string;\n    target?: string;\n}>;\nexport declare const BpmnWorkflowSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\workflows.d.ts",
        "start": 42,
        "end": 58,
        "startLoc": {
          "line": 42,
          "column": 15,
          "position": 650
        },
        "endLoc": {
          "line": 58,
          "column": 19,
          "position": 791
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\workflows.service.d.ts",
        "start": 24,
        "end": 40,
        "startLoc": {
          "line": 24,
          "column": 19,
          "position": 282
        },
        "endLoc": {
          "line": 40,
          "column": 21,
          "position": 423
        }
      }
    },
    {
      "format": "typescript",
      "lines": 28,
      "fragment": "z.ZodObject<{\n        id: z.ZodString;\n        type: z.ZodEnum<[\"startEvent\", \"endEvent\", \"task\", \"gateway\", \"subprocess\"]>;\n        name: z.ZodString;\n        x: z.ZodNumber;\n        y: z.ZodNumber;\n        properties: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;\n        actions: z.ZodOptional<z.ZodArray<z.ZodString, \"many\">>;\n        conditions: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;\n    }, \"strip\", z.ZodTypeAny, {\n        type?: \"task\" | \"startEvent\" | \"endEvent\" | \"gateway\" | \"subprocess\";\n        name?: string;\n        id?: string;\n        actions?: string[];\n        conditions?: Record<string, string>;\n        x?: number;\n        y?: number;\n        properties?: Record<string, any>;\n    }, {\n        type?: \"task\" | \"startEvent\" | \"endEvent\" | \"gateway\" | \"subprocess\";\n        name?: string;\n        id?: string;\n        actions?: string[];\n        conditions?: Record<string, string>;\n        x?: number;\n        y?: number;\n        properties?: Record<string, any>;\n    }>,",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\workflows.d.ts",
        "start": 59,
        "end": 86,
        "startLoc": {
          "line": 59,
          "column": 2,
          "position": 808
        },
        "endLoc": {
          "line": 86,
          "column": 2,
          "position": 1154
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\workflows.d.ts",
        "start": 14,
        "end": 41,
        "startLoc": {
          "line": 14,
          "column": 2,
          "position": 298
        },
        "endLoc": {
          "line": 41,
          "column": 2,
          "position": 641
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": ";\n    }>, \"many\">;\n    flows: z.ZodArray<z.ZodObject<{\n        id: z.ZodString;\n        source: z.ZodString;\n        target: z.ZodString;\n        condition: z.ZodOptional<z.ZodString>;\n    }, \"strip\", z.ZodTypeAny, {\n        id?: string;\n        source?: string;\n        condition?: string;\n        target?: string;\n    }, {\n        id?: string;\n        source?: string;\n        condition?: string;\n        target?: string;\n    }>, \"many\">;\n    startElement: z.ZodString;\n    endElements: z.ZodArray<z.ZodString, \"many\">;\n}, \"strip\", z.ZodTypeAny, {\n    elements?: {\n        type?: \"task\" | \"startEvent\" | \"endEvent\" | \"gateway\" | \"subprocess\"",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\workflows.d.ts",
        "start": 85,
        "end": 107,
        "startLoc": {
          "line": 85,
          "column": 2,
          "position": 1149
        },
        "endLoc": {
          "line": 107,
          "column": 13,
          "position": 1375
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\workflows.service.d.ts",
        "start": 61,
        "end": 83,
        "startLoc": {
          "line": 61,
          "column": 7,
          "position": 689
        },
        "endLoc": {
          "line": 83,
          "column": 20,
          "position": 915
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ";\n    }[];\n    flows?: {\n        id?: string;\n        source?: string;\n        condition?: string;\n        target?: string;\n    }[];\n    startElement?: string;\n    endElements?: string[];\n}, {\n    elements?: {\n        type?: \"task\" | \"startEvent\" | \"endEvent\" | \"gateway\" | \"subprocess\"",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\workflows.d.ts",
        "start": 114,
        "end": 126,
        "startLoc": {
          "line": 114,
          "column": 2,
          "position": 1446
        },
        "endLoc": {
          "line": 126,
          "column": 13,
          "position": 1550
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\workflows.service.d.ts",
        "start": 88,
        "end": 100,
        "startLoc": {
          "line": 88,
          "column": 7,
          "position": 958
        },
        "endLoc": {
          "line": 100,
          "column": 20,
          "position": 1062
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ", {\n    elements?: {\n        type?: \"task\" | \"startEvent\" | \"endEvent\" | \"gateway\" | \"subprocess\";\n        name?: string;\n        id?: string;\n        actions?: string[];\n        conditions?: Record<string, string>;\n        x?: number;\n        y?: number;\n        properties?: Record<string, any>;\n    }[];\n    flows?: {\n        id?: string;\n        source?: string;\n        condition?: string;\n        target?: string;\n    }[];\n    startElement?: string;\n    endElements?: string[];\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\workflows.d.ts",
        "start": 124,
        "end": 143,
        "startLoc": {
          "line": 124,
          "column": 2,
          "position": 1518
        },
        "endLoc": {
          "line": 143,
          "column": 2,
          "position": 1693
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\workflows.d.ts",
        "start": 105,
        "end": 124,
        "startLoc": {
          "line": 105,
          "column": 11,
          "position": 1343
        },
        "endLoc": {
          "line": 124,
          "column": 2,
          "position": 1518
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ";\n    }[];\n    flows?: {\n        id?: string;\n        source?: string;\n        condition?: string;\n        target?: string;\n    }[];\n    startElement?: string;\n    endElements?: string[];\n}>;\nexport declare const StateTypeSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\workflows.d.ts",
        "start": 133,
        "end": 144,
        "startLoc": {
          "line": 133,
          "column": 2,
          "position": 1621
        },
        "endLoc": {
          "line": 144,
          "column": 16,
          "position": 1702
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\workflows.service.d.ts",
        "start": 105,
        "end": 116,
        "startLoc": {
          "line": 105,
          "column": 7,
          "position": 1105
        },
        "endLoc": {
          "line": 116,
          "column": 24,
          "position": 1186
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ";\n    condition: z.ZodOptional<z.ZodString>;\n}, \"strip\", z.ZodTypeAny, {\n    id?: string;\n    from?: string;\n    event?: string;\n    condition?: string;\n    to?: string;\n}, {\n    id?: string;\n    from?: string;\n    event?: string;\n    condition?: string;\n    to?: string;\n}>;\nexport declare const StateMachineWorkflowSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\workflows.d.ts",
        "start": 172,
        "end": 187,
        "startLoc": {
          "line": 172,
          "column": 2,
          "position": 2068
        },
        "endLoc": {
          "line": 187,
          "column": 27,
          "position": 2192
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\workflows.service.d.ts",
        "start": 136,
        "end": 151,
        "startLoc": {
          "line": 136,
          "column": 10,
          "position": 1409
        },
        "endLoc": {
          "line": 151,
          "column": 29,
          "position": 1533
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "z.ZodObject<{\n        id: z.ZodString;\n        name: z.ZodString;\n        type: z.ZodEnum<[\"initial\", \"intermediate\", \"final\", \"error\"]>;\n        actions: z.ZodOptional<z.ZodArray<z.ZodString, \"many\">>;\n        timeout: z.ZodOptional<z.ZodNumber>;\n        properties: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;\n    }, \"strip\", z.ZodTypeAny, {\n        type?: \"error\" | \"initial\" | \"intermediate\" | \"final\";\n        timeout?: number;\n        name?: string;\n        id?: string;\n        actions?: string[];\n        properties?: Record<string, any>;\n    }, {\n        type?: \"error\" | \"initial\" | \"intermediate\" | \"final\";\n        timeout?: number;\n        name?: string;\n        id?: string;\n        actions?: string[];\n        properties?: Record<string, any>;\n    }>,",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\workflows.d.ts",
        "start": 188,
        "end": 209,
        "startLoc": {
          "line": 188,
          "column": 2,
          "position": 2209
        },
        "endLoc": {
          "line": 209,
          "column": 2,
          "position": 2473
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\workflows.d.ts",
        "start": 146,
        "end": 167,
        "startLoc": {
          "line": 146,
          "column": 2,
          "position": 1751
        },
        "endLoc": {
          "line": 167,
          "column": 2,
          "position": 2012
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": "z.ZodObject<{\n        id: z.ZodString;\n        from: z.ZodString;\n        to: z.ZodString;\n        event: z.ZodOptional<z.ZodString>;\n        condition: z.ZodOptional<z.ZodString>;\n    }, \"strip\", z.ZodTypeAny, {\n        id?: string;\n        from?: string;\n        event?: string;\n        condition?: string;\n        to?: string;\n    }, {\n        id?: string;\n        from?: string;\n        event?: string;\n        condition?: string;\n        to?: string;\n    }>, \"many\">;\n    initialState: z.ZodString;\n    finalStates: z.ZodArray<z.ZodString, \"many\">;\n}, \"strip\", z.ZodTypeAny, {\n    states?: {\n        type?: \"error\"",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\workflows.d.ts",
        "start": 210,
        "end": 233,
        "startLoc": {
          "line": 210,
          "column": 2,
          "position": 2487
        },
        "endLoc": {
          "line": 233,
          "column": 8,
          "position": 2708
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\workflows.d.ts",
        "start": 168,
        "end": 191,
        "startLoc": {
          "line": 168,
          "column": 2,
          "position": 2023
        },
        "endLoc": {
          "line": 191,
          "column": 10,
          "position": 1952
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ";\n    }[];\n    transitions?: {\n        id?: string;\n        from?: string;\n        event?: string;\n        condition?: string;\n        to?: string;\n    }[];\n    initialState?: string;\n    finalStates?: string[];\n}, {\n    states?: {\n        type?: \"error\"",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\workflows.d.ts",
        "start": 238,
        "end": 251,
        "startLoc": {
          "line": 238,
          "column": 2,
          "position": 2769
        },
        "endLoc": {
          "line": 251,
          "column": 8,
          "position": 2865
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\workflows.service.d.ts",
        "start": 194,
        "end": 207,
        "startLoc": {
          "line": 194,
          "column": 2,
          "position": 1987
        },
        "endLoc": {
          "line": 207,
          "column": 10,
          "position": 2083
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ", {\n    states?: {\n        type?: \"error\" | \"initial\" | \"intermediate\" | \"final\";\n        timeout?: number;\n        name?: string;\n        id?: string;\n        actions?: string[];\n        properties?: Record<string, any>;\n    }[];\n    transitions?: {\n        id?: string;\n        from?: string;\n        event?: string;\n        condition?: string;\n        to?: string;\n    }[];\n    initialState?: string;\n    finalStates?: string[];\n}>;\nexport declare const ActionSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\workflows.d.ts",
        "start": 249,
        "end": 268,
        "startLoc": {
          "line": 249,
          "column": 2,
          "position": 2849
        },
        "endLoc": {
          "line": 268,
          "column": 13,
          "position": 3015
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\workflows.d.ts",
        "start": 231,
        "end": 222,
        "startLoc": {
          "line": 231,
          "column": 11,
          "position": 2692
        },
        "endLoc": {
          "line": 222,
          "column": 21,
          "position": 2207
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", {\n    type?: \"function\" | \"delay\" | \"http\" | \"notification\" | \"condition\";\n    timeout?: number;\n    name?: string;\n    order?: number;\n    config?: Record<string, any>;\n    id?: string;\n    retry?: {\n        delay?: number;\n        strategy?: \"fixed\" | \"linear\" | \"exponential\";\n        maxAttempts?: number;\n    };\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\workflows.d.ts",
        "start": 300,
        "end": 312,
        "startLoc": {
          "line": 300,
          "column": 2,
          "position": 3378
        },
        "endLoc": {
          "line": 312,
          "column": 2,
          "position": 3496
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\workflows.d.ts",
        "start": 288,
        "end": 300,
        "startLoc": {
          "line": 288,
          "column": 11,
          "position": 3260
        },
        "endLoc": {
          "line": 300,
          "column": 2,
          "position": 3378
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": ";\n    category: z.ZodOptional<z.ZodString>;\n    tags: z.ZodOptional<z.ZodArray<z.ZodString, \"many\">>;\n    priority: z.ZodOptional<z.ZodNumber>;\n    timeout: z.ZodOptional<z.ZodNumber>;\n    description: z.ZodOptional<z.ZodString>;\n}, \"strip\", z.ZodTypeAny, {\n    timeout?: number;\n    tags?: string[];\n    description?: string;\n    category?: string;\n    priority?: number;\n    author?: string;\n}, {\n    timeout?: number;\n    tags?: string[];\n    description?: string;\n    category?: string;\n    priority?: number;\n    author?: string;\n}>;\nexport declare const WorkflowSchema: z.ZodObject<{\n    id: z.ZodString",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\workflows.d.ts",
        "start": 314,
        "end": 336,
        "startLoc": {
          "line": 314,
          "column": 2,
          "position": 3526
        },
        "endLoc": {
          "line": 336,
          "column": 10,
          "position": 3748
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\workflows.service.d.ts",
        "start": 242,
        "end": 264,
        "startLoc": {
          "line": 242,
          "column": 10,
          "position": 2456
        },
        "endLoc": {
          "line": 264,
          "column": 12,
          "position": 2678
        }
      }
    },
    {
      "format": "typescript",
      "lines": 86,
      "fragment": "z.ZodObject<{\n        elements: z.ZodArray<z.ZodObject<{\n            id: z.ZodString;\n            type: z.ZodEnum<[\"startEvent\", \"endEvent\", \"task\", \"gateway\", \"subprocess\"]>;\n            name: z.ZodString;\n            x: z.ZodNumber;\n            y: z.ZodNumber;\n            properties: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;\n            actions: z.ZodOptional<z.ZodArray<z.ZodString, \"many\">>;\n            conditions: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;\n        }, \"strip\", z.ZodTypeAny, {\n            type?: \"task\" | \"startEvent\" | \"endEvent\" | \"gateway\" | \"subprocess\";\n            name?: string;\n            id?: string;\n            actions?: string[];\n            conditions?: Record<string, string>;\n            x?: number;\n            y?: number;\n            properties?: Record<string, any>;\n        }, {\n            type?: \"task\" | \"startEvent\" | \"endEvent\" | \"gateway\" | \"subprocess\";\n            name?: string;\n            id?: string;\n            actions?: string[];\n            conditions?: Record<string, string>;\n            x?: number;\n            y?: number;\n            properties?: Record<string, any>;\n        }>, \"many\">;\n        flows: z.ZodArray<z.ZodObject<{\n            id: z.ZodString;\n            source: z.ZodString;\n            target: z.ZodString;\n            condition: z.ZodOptional<z.ZodString>;\n        }, \"strip\", z.ZodTypeAny, {\n            id?: string;\n            source?: string;\n            condition?: string;\n            target?: string;\n        }, {\n            id?: string;\n            source?: string;\n            condition?: string;\n            target?: string;\n        }>, \"many\">;\n        startElement: z.ZodString;\n        endElements: z.ZodArray<z.ZodString, \"many\">;\n    }, \"strip\", z.ZodTypeAny, {\n        elements?: {\n            type?: \"task\" | \"startEvent\" | \"endEvent\" | \"gateway\" | \"subprocess\";\n            name?: string;\n            id?: string;\n            actions?: string[];\n            conditions?: Record<string, string>;\n            x?: number;\n            y?: number;\n            properties?: Record<string, any>;\n        }[];\n        flows?: {\n            id?: string;\n            source?: string;\n            condition?: string;\n            target?: string;\n        }[];\n        startElement?: string;\n        endElements?: string[];\n    }, {\n        elements?: {\n            type?: \"task\" | \"startEvent\" | \"endEvent\" | \"gateway\" | \"subprocess\";\n            name?: string;\n            id?: string;\n            actions?: string[];\n            conditions?: Record<string, string>;\n            x?: number;\n            y?: number;\n            properties?: Record<string, any>;\n        }[];\n        flows?: {\n            id?: string;\n            source?: string;\n            condition?: string;\n            target?: string;\n        }[];\n        startElement?: string;\n        endElements?: string[];\n    }>,",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\workflows.d.ts",
        "start": 341,
        "end": 426,
        "startLoc": {
          "line": 341,
          "column": 2,
          "position": 3818
        },
        "endLoc": {
          "line": 426,
          "column": 2,
          "position": 4721
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\workflows.d.ts",
        "start": 58,
        "end": 143,
        "startLoc": {
          "line": 58,
          "column": 2,
          "position": 794
        },
        "endLoc": {
          "line": 143,
          "column": 2,
          "position": 1694
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ";\n        }[];\n        flows?: {\n            id?: string;\n            source?: string;\n            condition?: string;\n            target?: string;\n        }[];\n        startElement?: string;\n        endElements?: string[];\n    }>, z.ZodObject<{\n        states: z.ZodArray<z.ZodObject<{\n            id: z.ZodString;\n            name: z.ZodString;\n            type: z.ZodEnum<[\"initial\", \"intermediate\", \"final\",",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\workflows.d.ts",
        "start": 416,
        "end": 430,
        "startLoc": {
          "line": 416,
          "column": 2,
          "position": 4647
        },
        "endLoc": {
          "line": 430,
          "column": 2,
          "position": 4777
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\workflows.service.d.ts",
        "start": 334,
        "end": 348,
        "startLoc": {
          "line": 334,
          "column": 7,
          "position": 3431
        },
        "endLoc": {
          "line": 348,
          "column": 2,
          "position": 3561
        }
      }
    },
    {
      "format": "typescript",
      "lines": 85,
      "fragment": "z.ZodObject<{\n        states: z.ZodArray<z.ZodObject<{\n            id: z.ZodString;\n            name: z.ZodString;\n            type: z.ZodEnum<[\"initial\", \"intermediate\", \"final\", \"error\"]>;\n            actions: z.ZodOptional<z.ZodArray<z.ZodString, \"many\">>;\n            timeout: z.ZodOptional<z.ZodNumber>;\n            properties: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;\n        }, \"strip\", z.ZodTypeAny, {\n            type?: \"error\" | \"initial\" | \"intermediate\" | \"final\";\n            timeout?: number;\n            name?: string;\n            id?: string;\n            actions?: string[];\n            properties?: Record<string, any>;\n        }, {\n            type?: \"error\" | \"initial\" | \"intermediate\" | \"final\";\n            timeout?: number;\n            name?: string;\n            id?: string;\n            actions?: string[];\n            properties?: Record<string, any>;\n        }>, \"many\">;\n        transitions: z.ZodArray<z.ZodObject<{\n            id: z.ZodString;\n            from: z.ZodString;\n            to: z.ZodString;\n            event: z.ZodOptional<z.ZodString>;\n            condition: z.ZodOptional<z.ZodString>;\n        }, \"strip\", z.ZodTypeAny, {\n            id?: string;\n            from?: string;\n            event?: string;\n            condition?: string;\n            to?: string;\n        }, {\n            id?: string;\n            from?: string;\n            event?: string;\n            condition?: string;\n            to?: string;\n        }>, \"many\">;\n        initialState: z.ZodString;\n        finalStates: z.ZodArray<z.ZodString, \"many\">;\n    }, \"strip\", z.ZodTypeAny, {\n        states?: {\n            type?: \"error\" | \"initial\" | \"intermediate\" | \"final\";\n            timeout?: number;\n            name?: string;\n            id?: string;\n            actions?: string[];\n            properties?: Record<string, any>;\n        }[];\n        transitions?: {\n            id?: string;\n            from?: string;\n            event?: string;\n            condition?: string;\n            to?: string;\n        }[];\n        initialState?: string;\n        finalStates?: string[];\n    }, {\n        states?: {\n            type?: \"error\" | \"initial\" | \"intermediate\" | \"final\";\n            timeout?: number;\n            name?: string;\n            id?: string;\n            actions?: string[];\n            properties?: Record<string, any>;\n        }[];\n        transitions?: {\n            id?: string;\n            from?: string;\n            event?: string;\n            condition?: string;\n            to?: string;\n        }[];\n        initialState?: string;\n        finalStates?: string[];\n    }>]>;\n    actions: z.ZodArray<z.ZodObject<{\n        id: z.ZodString;\n        name: z.ZodString;\n        type: z.ZodEnum<[\"function\", \"http\", \"delay\"",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\workflows.d.ts",
        "start": 426,
        "end": 510,
        "startLoc": {
          "line": 426,
          "column": 2,
          "position": 4723
        },
        "endLoc": {
          "line": 510,
          "column": 8,
          "position": 5589
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\workflows.d.ts",
        "start": 187,
        "end": 418,
        "startLoc": {
          "line": 187,
          "column": 2,
          "position": 2195
        },
        "endLoc": {
          "line": 418,
          "column": 15,
          "position": 4224
        }
      }
    },
    {
      "format": "typescript",
      "lines": 45,
      "fragment": "z.ZodObject<{\n        id: z.ZodString;\n        name: z.ZodString;\n        type: z.ZodEnum<[\"function\", \"http\", \"delay\", \"condition\", \"notification\"]>;\n        config: z.ZodRecord<z.ZodString, z.ZodAny>;\n        order: z.ZodNumber;\n        timeout: z.ZodOptional<z.ZodNumber>;\n        retry: z.ZodOptional<z.ZodObject<{\n            maxAttempts: z.ZodNumber;\n            strategy: z.ZodEnum<[\"fixed\", \"exponential\", \"linear\"]>;\n            delay: z.ZodNumber;\n        }, \"strip\", z.ZodTypeAny, {\n            delay?: number;\n            strategy?: \"fixed\" | \"linear\" | \"exponential\";\n            maxAttempts?: number;\n        }, {\n            delay?: number;\n            strategy?: \"fixed\" | \"linear\" | \"exponential\";\n            maxAttempts?: number;\n        }>>;\n    }, \"strip\", z.ZodTypeAny, {\n        type?: \"function\" | \"delay\" | \"http\" | \"notification\" | \"condition\";\n        timeout?: number;\n        name?: string;\n        order?: number;\n        config?: Record<string, any>;\n        id?: string;\n        retry?: {\n            delay?: number;\n            strategy?: \"fixed\" | \"linear\" | \"exponential\";\n            maxAttempts?: number;\n        };\n    }, {\n        type?: \"function\" | \"delay\" | \"http\" | \"notification\" | \"condition\";\n        timeout?: number;\n        name?: string;\n        order?: number;\n        config?: Record<string, any>;\n        id?: string;\n        retry?: {\n            delay?: number;\n            strategy?: \"fixed\" | \"linear\" | \"exponential\";\n            maxAttempts?: number;\n        };\n    }>,",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\workflows.d.ts",
        "start": 507,
        "end": 551,
        "startLoc": {
          "line": 507,
          "column": 2,
          "position": 5550
        },
        "endLoc": {
          "line": 551,
          "column": 2,
          "position": 6032
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\workflows.d.ts",
        "start": 268,
        "end": 312,
        "startLoc": {
          "line": 268,
          "column": 2,
          "position": 3018
        },
        "endLoc": {
          "line": 312,
          "column": 2,
          "position": 3497
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": ": z.ZodObject<{\n        author: z.ZodOptional<z.ZodString>;\n        category: z.ZodOptional<z.ZodString>;\n        tags: z.ZodOptional<z.ZodArray<z.ZodString, \"many\">>;\n        priority: z.ZodOptional<z.ZodNumber>;\n        timeout: z.ZodOptional<z.ZodNumber>;\n        description: z.ZodOptional<z.ZodString>;\n    }, \"strip\", z.ZodTypeAny, {\n        timeout?: number;\n        tags?: string[];\n        description?: string;\n        category?: string;\n        priority?: number;\n        author?: string;\n    }, {\n        timeout?: number;\n        tags?: string[];\n        description?: string;\n        category?: string;\n        priority?: number;\n        author?: string;\n    }>;\n    createdAt: z.ZodDate",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\workflows.d.ts",
        "start": 552,
        "end": 574,
        "startLoc": {
          "line": 552,
          "column": 9,
          "position": 6040
        },
        "endLoc": {
          "line": 574,
          "column": 8,
          "position": 6270
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\workflows.d.ts",
        "start": 313,
        "end": 456,
        "startLoc": {
          "line": 313,
          "column": 23,
          "position": 3506
        },
        "endLoc": {
          "line": 456,
          "column": 12,
          "position": 4643
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "| \"draft\";\n    version?: number;\n    name?: string;\n    metadata?: {\n        timeout?: number;\n        tags?: string[];\n        description?: string;\n        category?: string;\n        priority?: number;\n        author?: string;\n    };\n    id?: string;\n    createdAt?: Date;\n    updatedAt?: Date;\n    actions?: {\n        type?: \"function\" | \"delay\" | \"http\" | \"notification\" | \"condition\";\n        timeout",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\workflows.d.ts",
        "start": 578,
        "end": 594,
        "startLoc": {
          "line": 578,
          "column": 2,
          "position": 6322
        },
        "endLoc": {
          "line": 594,
          "column": 8,
          "position": 6460
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\workflows.service.d.ts",
        "start": 460,
        "end": 476,
        "startLoc": {
          "line": 460,
          "column": 2,
          "position": 4701
        },
        "endLoc": {
          "line": 476,
          "column": 5,
          "position": 4839
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "{\n        type?: \"function\" | \"delay\" | \"http\" | \"notification\" | \"condition\";\n        timeout?: number;\n        name?: string;\n        order?: number;\n        config?: Record<string, any>;\n        id?: string;\n        retry?: {\n            delay?: number;\n            strategy?: \"fixed\" | \"linear\" | \"exponential\";\n            maxAttempts?: number;\n        };\n    }[",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\workflows.d.ts",
        "start": 592,
        "end": 604,
        "startLoc": {
          "line": 592,
          "column": 2,
          "position": 6433
        },
        "endLoc": {
          "line": 604,
          "column": 2,
          "position": 6550
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\workflows.d.ts",
        "start": 288,
        "end": 300,
        "startLoc": {
          "line": 288,
          "column": 2,
          "position": 3262
        },
        "endLoc": {
          "line": 300,
          "column": 2,
          "position": 3378
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": "{\n        elements?: {\n            type?: \"task\" | \"startEvent\" | \"endEvent\" | \"gateway\" | \"subprocess\";\n            name?: string;\n            id?: string;\n            actions?: string[];\n            conditions?: Record<string, string>;\n            x?: number;\n            y?: number;\n            properties?: Record<string, any>;\n        }[];\n        flows?: {\n            id?: string;\n            source?: string;\n            condition?: string;\n            target?: string;\n        }[];\n        startElement?: string;\n        endElements?: string[];\n    } |",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\workflows.d.ts",
        "start": 605,
        "end": 624,
        "startLoc": {
          "line": 605,
          "column": 2,
          "position": 6559
        },
        "endLoc": {
          "line": 624,
          "column": 2,
          "position": 6734
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\workflows.d.ts",
        "start": 105,
        "end": 124,
        "startLoc": {
          "line": 105,
          "column": 2,
          "position": 1345
        },
        "endLoc": {
          "line": 124,
          "column": 2,
          "position": 1518
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ";\n        }[];\n        flows?: {\n            id?: string;\n            source?: string;\n            condition?: string;\n            target?: string;\n        }[];\n        startElement?: string;\n        endElements?: string[];\n    } | {\n        states?: {\n            type?: \"error\"",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\workflows.d.ts",
        "start": 614,
        "end": 626,
        "startLoc": {
          "line": 614,
          "column": 2,
          "position": 6660
        },
        "endLoc": {
          "line": 626,
          "column": 8,
          "position": 6750
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\workflows.service.d.ts",
        "start": 488,
        "end": 500,
        "startLoc": {
          "line": 488,
          "column": 7,
          "position": 4960
        },
        "endLoc": {
          "line": 500,
          "column": 10,
          "position": 5050
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "{\n        states?: {\n            type?: \"error\" | \"initial\" | \"intermediate\" | \"final\";\n            timeout?: number;\n            name?: string;\n            id?: string;\n            actions?: string[];\n            properties?: Record<string, any>;\n        }[];\n        transitions?: {\n            id?: string;\n            from?: string;\n            event?: string;\n            condition?: string;\n            to?: string;\n        }[];\n        initialState?: string;\n        finalStates?: string[];\n    };\n}, {\n    type?: \"bpmn\" | \"state_machine\";\n    status?: \"active\" | \"inactive\" | \"archived\"",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\workflows.d.ts",
        "start": 624,
        "end": 645,
        "startLoc": {
          "line": 624,
          "column": 2,
          "position": 6736
        },
        "endLoc": {
          "line": 645,
          "column": 11,
          "position": 6924
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\workflows.d.ts",
        "start": 231,
        "end": 517,
        "startLoc": {
          "line": 231,
          "column": 2,
          "position": 2694
        },
        "endLoc": {
          "line": 517,
          "column": 8,
          "position": 5198
        }
      }
    },
    {
      "format": "typescript",
      "lines": 70,
      "fragment": ", {\n    type?: \"bpmn\" | \"state_machine\";\n    status?: \"active\" | \"inactive\" | \"archived\" | \"draft\";\n    version?: number;\n    name?: string;\n    metadata?: {\n        timeout?: number;\n        tags?: string[];\n        description?: string;\n        category?: string;\n        priority?: number;\n        author?: string;\n    };\n    id?: string;\n    createdAt?: Date;\n    updatedAt?: Date;\n    actions?: {\n        type?: \"function\" | \"delay\" | \"http\" | \"notification\" | \"condition\";\n        timeout?: number;\n        name?: string;\n        order?: number;\n        config?: Record<string, any>;\n        id?: string;\n        retry?: {\n            delay?: number;\n            strategy?: \"fixed\" | \"linear\" | \"exponential\";\n            maxAttempts?: number;\n        };\n    }[];\n    definition?: {\n        elements?: {\n            type?: \"task\" | \"startEvent\" | \"endEvent\" | \"gateway\" | \"subprocess\";\n            name?: string;\n            id?: string;\n            actions?: string[];\n            conditions?: Record<string, string>;\n            x?: number;\n            y?: number;\n            properties?: Record<string, any>;\n        }[];\n        flows?: {\n            id?: string;\n            source?: string;\n            condition?: string;\n            target?: string;\n        }[];\n        startElement?: string;\n        endElements?: string[];\n    } | {\n        states?: {\n            type?: \"error\" | \"initial\" | \"intermediate\" | \"final\";\n            timeout?: number;\n            name?: string;\n            id?: string;\n            actions?: string[];\n            properties?: Record<string, any>;\n        }[];\n        transitions?: {\n            id?: string;\n            from?: string;\n            event?: string;\n            condition?: string;\n            to?: string;\n        }[];\n        initialState?: string;\n        finalStates?: string[];\n    };\n}>;\nexport declare const WorkflowInstanceSchema: z.ZodObject<{\n    id: z.ZodString",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\workflows.d.ts",
        "start": 643,
        "end": 712,
        "startLoc": {
          "line": 643,
          "column": 2,
          "position": 6895
        },
        "endLoc": {
          "line": 712,
          "column": 10,
          "position": 7523
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\workflows.d.ts",
        "start": 576,
        "end": 574,
        "startLoc": {
          "line": 576,
          "column": 11,
          "position": 6291
        },
        "endLoc": {
          "line": 574,
          "column": 12,
          "position": 5688
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": ", {\n    status?: \"completed\" | \"failed\" | \"cancelled\" | \"running\" | \"paused\";\n    context?: Record<string, any>;\n    history?: {\n        message?: string;\n        timestamp?: Date;\n        data?: Record<string, any>;\n        action?: string;\n    }[];\n    metadata?: Record<string, any>;\n    id?: string;\n    createdAt?: Date;\n    updatedAt?: Date;\n    completedAt?: Date;\n    workflowId?: string;\n    currentElement?: string;\n    currentState?: string;\n    startedAt?: Date;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\workflows.d.ts",
        "start": 757,
        "end": 775,
        "startLoc": {
          "line": 757,
          "column": 2,
          "position": 8018
        },
        "endLoc": {
          "line": 775,
          "column": 2,
          "position": 8190
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\workflows.d.ts",
        "start": 739,
        "end": 757,
        "startLoc": {
          "line": 739,
          "column": 11,
          "position": 7846
        },
        "endLoc": {
          "line": 757,
          "column": 2,
          "position": 8018
        }
      }
    },
    {
      "format": "typescript",
      "lines": 45,
      "fragment": "export interface IWorkflowEngine {\n    createWorkflow(workflow: Omit<Workflow, 'id' | 'createdAt' | 'updatedAt'>): Promise<Workflow>;\n    getWorkflow(id: string): Promise<Workflow | null>;\n    updateWorkflow(id: string, updates: Partial<Workflow>): Promise<Workflow>;\n    deleteWorkflow(id: string): Promise<void>;\n    listWorkflows(filters?: WorkflowFilters): Promise<Workflow[]>;\n    startWorkflow(workflowId: string, context?: Record<string, any>, metadata?: Record<string, any>): Promise<WorkflowInstance>;\n    getInstance(instanceId: string): Promise<WorkflowInstance | null>;\n    listInstances(filters?: InstanceFilters): Promise<WorkflowInstance[]>;\n    pauseInstance(instanceId: string): Promise<void>;\n    resumeInstance(instanceId: string): Promise<void>;\n    cancelInstance(instanceId: string): Promise<void>;\n    executeAction(instanceId: string, actionId: string): Promise<void>;\n    getStats(): Promise<WorkflowStats>;\n}\nexport interface WorkflowFilters {\n    type?: WorkflowType;\n    status?: WorkflowStatus;\n    category?: string;\n    tags?: string[];\n}\nexport interface InstanceFilters {\n    workflowId?: string;\n    status?: InstanceStatus;\n    userId?: string;\n    orgId?: string;\n    fromDate?: Date;\n    toDate?: Date;\n}\nexport interface WorkflowStats {\n    totalWorkflows: number;\n    totalInstances: number;\n    workflowsByType: Record<WorkflowType, number>;\n    instancesByStatus: Record<InstanceStatus, number>;\n    averageExecutionTime: number;\n    successRate: number;\n    recentActivity: Array<{\n        workflowId: string;\n        workflowName: string;\n        instanceId: string;\n        action: string;\n        timestamp: Date;\n    }>;\n}\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\workflows.d.ts",
        "start": 776,
        "end": 820,
        "startLoc": {
          "line": 776,
          "column": 1,
          "position": 8193
        },
        "endLoc": {
          "line": 820,
          "column": 7,
          "position": 8690
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\workflows.ts",
        "start": 153,
        "end": 204,
        "startLoc": {
          "line": 153,
          "column": 1,
          "position": 1511
        },
        "endLoc": {
          "line": 204,
          "column": 80,
          "position": 2018
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "createWorkflow(workflow: Omit<Workflow, 'id' | 'createdAt' | 'updatedAt'>): Promise<Workflow>;\n    getWorkflow(id: string): Promise<Workflow | null>;\n    updateWorkflow(id: string, updates: Partial<Workflow>): Promise<Workflow>;\n    deleteWorkflow(id: string): Promise<void>;\n    listWorkflows(filters?: WorkflowFilters): Promise<Workflow[]>;\n    startWorkflow(workflowId: string, context?: Record<string, any>, metadata?: Record<string, any>): Promise<WorkflowInstance>;\n    getInstance(instanceId: string): Promise<WorkflowInstance | null>;\n    listInstances(filters?: InstanceFilters): Promise<WorkflowInstance[]>;\n    pauseInstance(instanceId: string): Promise<void>;\n    resumeInstance(instanceId: string): Promise<void>;\n    cancelInstance(instanceId: string): Promise<void>;\n    executeAction(instanceId: string, actionId: string): Promise<void>;\n    private",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\workflows.d.ts",
        "start": 830,
        "end": 842,
        "startLoc": {
          "line": 830,
          "column": 5,
          "position": 8817
        },
        "endLoc": {
          "line": 842,
          "column": 8,
          "position": 9078
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\workflows.ts",
        "start": 154,
        "end": 169,
        "startLoc": {
          "line": 154,
          "column": 3,
          "position": 1520
        },
        "endLoc": {
          "line": 169,
          "column": 9,
          "position": 1787
        }
      }
    },
    {
      "format": "typescript",
      "lines": 40,
      "fragment": "export interface EmailProcessingRequest {\n    messageId: string;\n    organizationId: string;\n    priority?: 'low' | 'normal' | 'high' | 'urgent';\n    metadata?: Record<string, any>;\n}\nexport interface EmailProcessingResponse {\n    success: boolean;\n    messageId: string;\n    result?: {\n        processed: boolean;\n        action: string;\n        confidence: number;\n        metadata: {\n            category: string;\n            sentiment: string;\n            urgency: string;\n            language: string;\n            entities: string[];\n        };\n        processingTime: number;\n    };\n    error?: string;\n    serviceId: string;\n    responseTime: number;\n}\nexport interface CronJobRequest {\n    jobId: string;\n    action: 'enable' | 'disable' | 'status';\n    organizationId: string;\n}\nexport interface CronJobResponse {\n    success: boolean;\n    jobId: string;\n    result?: any;\n    error?: string;\n    serviceId: string;\n    responseTime: number;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\workers-integration.service.d.ts",
        "start": 1,
        "end": 40,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 40,
          "column": 8,
          "position": 285
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\workers-integration.service.ts",
        "start": 51,
        "end": 94,
        "startLoc": {
          "line": 51,
          "column": 1,
          "position": 372
        },
        "endLoc": {
          "line": 94,
          "column": 6,
          "position": 661
        }
      }
    },
    {
      "format": "typescript",
      "lines": 26,
      "fragment": "export interface WarmupSchedule {\n    id: string;\n    organizationId: string;\n    serviceName: string;\n    scheduleCron: string;\n    enabled: boolean;\n    quietHoursOnly: boolean;\n    warmupConfig: WarmupConfig;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface WarmupConfig {\n    services: WarmupService[];\n    cacheWarming: CacheWarmingConfig;\n    connectionPooling: ConnectionPoolingConfig;\n    resourcePreloading: ResourcePreloadingConfig;\n    performanceTargets: PerformanceTargets;\n}\nexport interface WarmupService {\n    name: string;\n    type: 'ai-model' | 'search-engine' | 'database' | 'cache' | 'api';\n    priority: 'high' | 'medium' | 'low';\n    warmupStrategy: WarmupStrategy;\n    dependencies: string[];\n    timeout: number;\n    retryCount",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\warmup-types.d.ts",
        "start": 1,
        "end": 26,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 26,
          "column": 11,
          "position": 197
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\warmup-types.ts",
        "start": 11,
        "end": 37,
        "startLoc": {
          "line": 11,
          "column": 1,
          "position": 10
        },
        "endLoc": {
          "line": 37,
          "column": 11,
          "position": 208
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "services: ServiceWarmupStatus[];\n    metrics: WarmupMetrics;\n    errors: WarmupError[];\n}\nexport interface ServiceWarmupStatus {\n    serviceName: string;\n    status: 'pending' | 'running' | 'completed' | 'failed';\n    startTime: Date;\n    endTime?: Date;\n    duration?: number;\n    progress: number;\n    metrics",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\warmup-types.d.ts",
        "start": 105,
        "end": 116,
        "startLoc": {
          "line": 105,
          "column": 5,
          "position": 816
        },
        "endLoc": {
          "line": 116,
          "column": 8,
          "position": 907
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\warmup-types.ts",
        "start": 128,
        "end": 139,
        "startLoc": {
          "line": 128,
          "column": 3,
          "position": 879
        },
        "endLoc": {
          "line": 139,
          "column": 14,
          "position": 970
        }
      }
    },
    {
      "format": "typescript",
      "lines": 29,
      "fragment": "metrics: ServiceMetrics;\n    errors: string[];\n}\nexport interface WarmupMetrics {\n    totalServices: number;\n    completedServices: number;\n    failedServices: number;\n    averageLatency: number;\n    totalDuration: number;\n    memoryUsage: number;\n    cpuUsage: number;\n    cacheHitRate: number;\n}\nexport interface ServiceMetrics {\n    latency: number;\n    throughput: number;\n    memoryUsage: number;\n    cpuUsage: number;\n    cacheHitRate: number;\n    errorRate: number;\n}\nexport interface WarmupError {\n    serviceName: string;\n    error: string;\n    timestamp: Date;\n    retryCount: number;\n    severity: 'low' | 'medium' | 'high' | 'critical';\n}\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\warmup-types.d.ts",
        "start": 116,
        "end": 144,
        "startLoc": {
          "line": 116,
          "column": 5,
          "position": 907
        },
        "endLoc": {
          "line": 144,
          "column": 7,
          "position": 1099
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\warmup-types.ts",
        "start": 140,
        "end": 172,
        "startLoc": {
          "line": 140,
          "column": 3,
          "position": 973
        },
        "endLoc": {
          "line": 172,
          "column": 80,
          "position": 1169
        }
      }
    },
    {
      "format": "typescript",
      "lines": 40,
      "fragment": "export interface SearchRequest {\n    query: string;\n    filters?: SearchFilter[];\n    limit?: number;\n    offset?: number;\n    sortBy?: string;\n    sortOrder?: 'asc' | 'desc';\n    includeHighlights?: boolean;\n    includeExplanations?: boolean;\n    semanticSearch?: boolean;\n    organizationId: string;\n}\nexport interface SearchFilter {\n    field: string;\n    operator: 'equals' | 'contains' | 'greater_than' | 'less_than' | 'in' | 'between';\n    value: any;\n    type: 'text' | 'number' | 'date' | 'boolean';\n}\nexport interface SearchResult {\n    id: string;\n    title: string;\n    content: string;\n    score: number;\n    highlights?: SearchHighlight[];\n    explanation?: string;\n    metadata: Record<string, any>;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface SearchHighlight {\n    field: string;\n    text: string;\n    score: number;\n    position: number;\n}\nexport interface SearchResponse {\n    results: SearchResult[];\n    total: number;\n    took: number;\n    suggestions",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\warmup-types.d.ts",
        "start": 144,
        "end": 183,
        "startLoc": {
          "line": 144,
          "column": 1,
          "position": 1099
        },
        "endLoc": {
          "line": 183,
          "column": 12,
          "position": 1416
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\warmup-types.ts",
        "start": 176,
        "end": 218,
        "startLoc": {
          "line": 176,
          "column": 1,
          "position": 1176
        },
        "endLoc": {
          "line": 218,
          "column": 16,
          "position": 1496
        }
      }
    },
    {
      "format": "typescript",
      "lines": 42,
      "fragment": "suggestions?: string[];\n    clusters?: SearchCluster[];\n    analytics: SearchAnalytics;\n}\nexport interface SearchCluster {\n    id: string;\n    name: string;\n    documents: string[];\n    centroid: number[];\n    size: number;\n    coherence: number;\n}\nexport interface SearchAnalytics {\n    query: string;\n    responseTime: number;\n    resultCount: number;\n    cacheHit: boolean;\n    semanticSearch: boolean;\n    filters: SearchFilter[];\n    userAgent?: string;\n    timestamp: Date;\n}\nexport interface EmbeddingRequest {\n    text: string;\n    model?: string;\n    organizationId: string;\n}\nexport interface EmbeddingResponse {\n    embedding: number[];\n    model: string;\n    dimensions: number;\n    tokens: number;\n    cost: number;\n    processingTime: number;\n}\nexport interface SearchOptimization {\n    id: string;\n    originalQuery: string;\n    optimizedQuery: string;\n    improvements: QueryImprovement[];\n    performanceGain: number;\n    createdAt",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\warmup-types.d.ts",
        "start": 183,
        "end": 224,
        "startLoc": {
          "line": 183,
          "column": 5,
          "position": 1416
        },
        "endLoc": {
          "line": 224,
          "column": 10,
          "position": 1701
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\warmup-types.ts",
        "start": 219,
        "end": 264,
        "startLoc": {
          "line": 219,
          "column": 3,
          "position": 1499
        },
        "endLoc": {
          "line": 264,
          "column": 14,
          "position": 1788
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "lastCleanup: Date;\n}\nexport interface CacheWarmingRequest {\n    cacheName: string;\n    dataSource: DataSource;\n    priority: 'high' | 'medium' | 'low';\n    batchSize?: number;\n    maxConcurrency?: number;\n    organizationId: string;\n}\nexport interface CacheWarmingStatus {\n    id: string;\n    cacheName: string;\n    status: 'pending' | 'running' | 'completed' | 'failed';\n    progress: number;\n    entriesProcessed",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\warmup-types.d.ts",
        "start": 267,
        "end": 282,
        "startLoc": {
          "line": 267,
          "column": 5,
          "position": 2006
        },
        "endLoc": {
          "line": 282,
          "column": 17,
          "position": 2125
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\warmup-types.ts",
        "start": 316,
        "end": 332,
        "startLoc": {
          "line": 316,
          "column": 3,
          "position": 2121
        },
        "endLoc": {
          "line": 332,
          "column": 14,
          "position": 2241
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": "entriesProcessed: number;\n    totalEntries: number;\n    startTime: Date;\n    endTime?: Date;\n    errors: string[];\n}\nexport interface CacheInvalidationRequest {\n    cacheName: string;\n    pattern?: string;\n    keys?: string[];\n    reason: string;\n    organizationId: string;\n}\nexport interface CacheCompressionRequest {\n    cacheName: string;\n    algorithm: 'gzip' | 'brotli' | 'lz4' | 'zstd';\n    level: number;\n    organizationId: string;\n}\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\warmup-types.d.ts",
        "start": 282,
        "end": 301,
        "startLoc": {
          "line": 282,
          "column": 5,
          "position": 2125
        },
        "endLoc": {
          "line": 301,
          "column": 7,
          "position": 2263
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\warmup-types.ts",
        "start": 333,
        "end": 355,
        "startLoc": {
          "line": 333,
          "column": 3,
          "position": 2244
        },
        "endLoc": {
          "line": 355,
          "column": 80,
          "position": 2385
        }
      }
    },
    {
      "format": "typescript",
      "lines": 43,
      "fragment": "export interface PerformanceMetrics {\n    id: string;\n    organizationId: string;\n    serviceName: string;\n    metricName: string;\n    metricValue: number;\n    unit: string;\n    timestamp: Date;\n    tags: Record<string, string>;\n}\nexport interface PerformanceAlert {\n    id: string;\n    organizationId: string;\n    serviceName: string;\n    metricName: string;\n    threshold: number;\n    currentValue: number;\n    severity: 'low' | 'medium' | 'high' | 'critical';\n    message: string;\n    timestamp: Date;\n    acknowledged: boolean;\n    resolved: boolean;\n}\nexport interface OptimizationRequest {\n    serviceName: string;\n    optimizationType: 'latency' | 'throughput' | 'memory' | 'cpu' | 'cache';\n    targetValue: number;\n    constraints: OptimizationConstraint[];\n    organizationId: string;\n}\nexport interface OptimizationConstraint {\n    type: 'max_memory' | 'max_cpu' | 'max_latency' | 'min_throughput';\n    value: number;\n    unit: string;\n}\nexport interface OptimizationResult {\n    id: string;\n    serviceName: string;\n    optimizationType: string;\n    beforeMetrics: PerformanceMetrics[];\n    afterMetrics: PerformanceMetrics[];\n    improvement: number;\n    recommendations",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\warmup-types.d.ts",
        "start": 301,
        "end": 343,
        "startLoc": {
          "line": 301,
          "column": 1,
          "position": 2263
        },
        "endLoc": {
          "line": 343,
          "column": 16,
          "position": 2595
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\warmup-types.ts",
        "start": 359,
        "end": 404,
        "startLoc": {
          "line": 359,
          "column": 1,
          "position": 2392
        },
        "endLoc": {
          "line": 404,
          "column": 14,
          "position": 2727
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "recommendations: OptimizationRecommendation[];\n    applied: boolean;\n    createdAt: Date;\n}\nexport interface OptimizationRecommendation {\n    type: 'configuration' | 'scaling' | 'caching' | 'indexing' | 'query_optimization';\n    description: string;\n    impact: 'low' | 'medium' | 'high';\n    effort: 'low' | 'medium' | 'high';\n    estimatedImprovement: number;\n    implementation",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\warmup-types.d.ts",
        "start": 343,
        "end": 353,
        "startLoc": {
          "line": 343,
          "column": 5,
          "position": 2595
        },
        "endLoc": {
          "line": 353,
          "column": 15,
          "position": 2695
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\warmup-types.ts",
        "start": 405,
        "end": 415,
        "startLoc": {
          "line": 405,
          "column": 3,
          "position": 2730
        },
        "endLoc": {
          "line": 415,
          "column": 14,
          "position": 2830
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": "export interface CreateWarmupScheduleRequest {\n    organizationId: string;\n    serviceName: string;\n    scheduleCron: string;\n    quietHoursOnly?: boolean;\n    warmupConfig: WarmupConfig;\n}\nexport interface UpdateWarmupScheduleRequest {\n    scheduleCron?: string;\n    enabled?: boolean;\n    quietHoursOnly?: boolean;\n    warmupConfig?: WarmupConfig;\n}\nexport interface TriggerWarmupRequest {\n    scheduleId?: string;\n    services?: string[];\n    priority?: 'high' | 'medium' | 'low';\n    organizationId: string;\n}\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\warmup-types.d.ts",
        "start": 381,
        "end": 400,
        "startLoc": {
          "line": 381,
          "column": 1,
          "position": 2898
        },
        "endLoc": {
          "line": 400,
          "column": 7,
          "position": 3037
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\warmup-types.ts",
        "start": 453,
        "end": 475,
        "startLoc": {
          "line": 453,
          "column": 1,
          "position": 3058
        },
        "endLoc": {
          "line": 475,
          "column": 33,
          "position": 3200
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "export interface CacheResponse {\n    success: boolean;\n    data?: CacheConfig | CacheMetrics | CacheWarmingStatus | CacheEntry;\n    message?: string;\n    error?: string;\n}\nexport interface PerformanceResponse {\n    success: boolean;\n    data?: PerformanceMetrics | OptimizationResult | PerformanceTrend | PerformanceAlert;\n    message?: string;\n    error?: string;\n}\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\warmup-types.d.ts",
        "start": 422,
        "end": 434,
        "startLoc": {
          "line": 422,
          "column": 1,
          "position": 3206
        },
        "endLoc": {
          "line": 434,
          "column": 7,
          "position": 3312
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\warmup-types.ts",
        "start": 511,
        "end": 525,
        "startLoc": {
          "line": 511,
          "column": 1,
          "position": 3389
        },
        "endLoc": {
          "line": 525,
          "column": 80,
          "position": 3497
        }
      }
    },
    {
      "format": "typescript",
      "lines": 33,
      "fragment": "export interface WarmupStats {\n    totalSchedules: number;\n    activeSchedules: number;\n    totalWarmups: number;\n    successRate: number;\n    averageWarmupTime: number;\n    cacheHitRate: number;\n    resourceUtilization: number;\n}\nexport interface SearchStats {\n    totalQueries: number;\n    averageResponseTime: number;\n    cacheHitRate: number;\n    semanticSearchUsage: number;\n    topQueries: string[];\n    searchAccuracy: number;\n}\nexport interface CacheStats {\n    totalCaches: number;\n    totalSize: number;\n    averageHitRate: number;\n    compressionRatio: number;\n    evictionRate: number;\n    warmingFrequency: number;\n}\nexport interface PerformanceStats {\n    averageLatency: number;\n    averageThroughput: number;\n    resourceEfficiency: number;\n    uptime: number;\n    optimizationCount: number;\n    alertCount: number;\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\warmup-types.d.ts",
        "start": 434,
        "end": 466,
        "startLoc": {
          "line": 434,
          "column": 1,
          "position": 3312
        },
        "endLoc": {
          "line": 466,
          "column": 2,
          "position": 3527
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\warmup-types.ts",
        "start": 529,
        "end": 564,
        "startLoc": {
          "line": 529,
          "column": 1,
          "position": 3504
        },
        "endLoc": {
          "line": 564,
          "column": 2,
          "position": 3722
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": ", { service, duration });\n            metrics.warmupServiceDuration.observe({ service, status: 'success' }, duration);\n        }\n        catch (error) {\n            const duration = Date.now() - startTime;\n            this.results.set(service, {\n                service,\n                status: 'error',\n                duration,\n                error: error instanceof Error ? error.message : String(error)\n            });\n            structuredLogger.error('Cache warmup failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\warmup-system.service.js",
        "start": 139,
        "end": 150,
        "startLoc": {
          "line": 139,
          "column": 25,
          "position": 1281
        },
        "endLoc": {
          "line": 150,
          "column": 22,
          "position": 1408
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\warmup-system.service.js",
        "start": 107,
        "end": 118,
        "startLoc": {
          "line": 107,
          "column": 28,
          "position": 953
        },
        "endLoc": {
          "line": 118,
          "column": 25,
          "position": 1080
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": ", { service, duration });\n            metrics.warmupServiceDuration.observe({ service, status: 'success' }, duration);\n        }\n        catch (error) {\n            const duration = Date.now() - startTime;\n            this.results.set(service, {\n                service,\n                status: 'error',\n                duration,\n                error: error instanceof Error ? error.message : String(error)\n            });\n            structuredLogger.error('AI Router warmup failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\warmup-system.service.js",
        "start": 171,
        "end": 182,
        "startLoc": {
          "line": 171,
          "column": 29,
          "position": 1614
        },
        "endLoc": {
          "line": 182,
          "column": 26,
          "position": 1741
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\warmup-system.service.js",
        "start": 107,
        "end": 118,
        "startLoc": {
          "line": 107,
          "column": 28,
          "position": 953
        },
        "endLoc": {
          "line": 118,
          "column": 25,
          "position": 1080
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": ", { service, duration });\n            metrics.warmupServiceDuration.observe({ service, status: 'success' }, duration);\n        }\n        catch (error) {\n            const duration = Date.now() - startTime;\n            this.results.set(service, {\n                service,\n                status: 'error',\n                duration,\n                error: error instanceof Error ? error.message : String(error)\n            });\n            structuredLogger.error('Analytics warmup failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\warmup-system.service.js",
        "start": 203,
        "end": 214,
        "startLoc": {
          "line": 203,
          "column": 29,
          "position": 1942
        },
        "endLoc": {
          "line": 214,
          "column": 26,
          "position": 2069
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\warmup-system.service.js",
        "start": 107,
        "end": 118,
        "startLoc": {
          "line": 107,
          "column": 28,
          "position": 953
        },
        "endLoc": {
          "line": 118,
          "column": 25,
          "position": 1080
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": ", { service, duration });\n            metrics.warmupServiceDuration.observe({ service, status: 'success' }, duration);\n        }\n        catch (error) {\n            const duration = Date.now() - startTime;\n            this.results.set(service, {\n                service,\n                status: 'error',\n                duration,\n                error: error instanceof Error ? error.message : String(error)\n            });\n            structuredLogger.error('Security warmup failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\warmup-system.service.js",
        "start": 235,
        "end": 246,
        "startLoc": {
          "line": 235,
          "column": 28,
          "position": 2270
        },
        "endLoc": {
          "line": 246,
          "column": 25,
          "position": 2397
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\warmup-system.service.js",
        "start": 107,
        "end": 118,
        "startLoc": {
          "line": 107,
          "column": 28,
          "position": 953
        },
        "endLoc": {
          "line": 118,
          "column": 25,
          "position": 1080
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": ", { service, duration });\n            metrics.warmupServiceDuration.observe({ service, status: 'success' }, duration);\n        }\n        catch (error) {\n            const duration = Date.now() - startTime;\n            this.results.set(service, {\n                service,\n                status: 'error',\n                duration,\n                error: error instanceof Error ? error.message : String(error)\n            });\n            structuredLogger.error('FinOps warmup failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\warmup-system.service.js",
        "start": 267,
        "end": 278,
        "startLoc": {
          "line": 267,
          "column": 26,
          "position": 2598
        },
        "endLoc": {
          "line": 278,
          "column": 23,
          "position": 2725
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\warmup-system.service.js",
        "start": 107,
        "end": 118,
        "startLoc": {
          "line": 107,
          "column": 28,
          "position": 953
        },
        "endLoc": {
          "line": 118,
          "column": 25,
          "position": 1080
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": ", { service, duration });\n            metrics.warmupServiceDuration.observe({ service, status: 'success' }, duration);\n        }\n        catch (error) {\n            const duration = Date.now() - startTime;\n            this.results.set(service, {\n                service,\n                status: 'error',\n                duration,\n                error: error instanceof Error ? error.message : String(error)\n            });\n            structuredLogger.error('Health Monitor warmup failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\warmup-system.service.js",
        "start": 299,
        "end": 310,
        "startLoc": {
          "line": 299,
          "column": 34,
          "position": 2926
        },
        "endLoc": {
          "line": 310,
          "column": 31,
          "position": 3053
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\warmup-system.service.js",
        "start": 107,
        "end": 118,
        "startLoc": {
          "line": 107,
          "column": 28,
          "position": 953
        },
        "endLoc": {
          "line": 118,
          "column": 25,
          "position": 1080
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": ", { service, duration });\n            metrics.warmupServiceDuration.observe({ service, status: 'success' }, duration);\n        }\n        catch (error) {\n            const duration = Date.now() - startTime;\n            this.results.set(service, {\n                service,\n                status: 'error',\n                duration,\n                error: error instanceof Error ? error.message : String(error)\n            });\n            structuredLogger.error('Endpoints warmup failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\warmup-system.service.js",
        "start": 331,
        "end": 342,
        "startLoc": {
          "line": 331,
          "column": 29,
          "position": 3260
        },
        "endLoc": {
          "line": 342,
          "column": 26,
          "position": 3387
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\warmup-system.service.js",
        "start": 107,
        "end": 118,
        "startLoc": {
          "line": 107,
          "column": 28,
          "position": 953
        },
        "endLoc": {
          "line": 118,
          "column": 25,
          "position": 1080
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "export interface WarmupConfig {\n    enabled: boolean;\n    timeout: number;\n    retries: number;\n    services: string[];\n    endpoints: string[];\n    cacheWarmup: boolean;\n    dbWarmup: boolean;\n    aiWarmup: boolean;\n}\nexport interface WarmupResult {\n    service: string;\n    status: 'success' | 'error' | 'timeout';\n    duration: number;\n    error?: string;\n    metrics?: Record<string, any>;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\warmup-system.service.d.ts",
        "start": 1,
        "end": 18,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 18,
          "column": 8,
          "position": 133
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\warmup-system.service.ts",
        "start": 11,
        "end": 30,
        "startLoc": {
          "line": 11,
          "column": 1,
          "position": 30
        },
        "endLoc": {
          "line": 30,
          "column": 6,
          "position": 165
        }
      }
    },
    {
      "format": "typescript",
      "lines": 28,
      "fragment": "export interface ValidationConfig {\n    strict: boolean;\n    sanitize: boolean;\n    transform: boolean;\n    customValidators: Record<string, (value: any) => boolean>;\n    errorMessages: Record<string, string>;\n}\nexport interface ValidationResult<T = any> {\n    success: boolean;\n    data?: T;\n    errors: ValidationError[];\n    warnings: ValidationWarning[];\n    sanitized: boolean;\n    transformed: boolean;\n}\nexport interface ValidationError {\n    field: string;\n    code: string;\n    message: string;\n    value: any;\n    path: string[];\n}\nexport interface ValidationWarning {\n    field: string;\n    message: string;\n    suggestion: string;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\validation-manager.service.d.ts",
        "start": 1,
        "end": 28,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 28,
          "column": 8,
          "position": 210
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\validation-manager.service.ts",
        "start": 12,
        "end": 43,
        "startLoc": {
          "line": 12,
          "column": 1,
          "position": 43
        },
        "endLoc": {
          "line": 43,
          "column": 6,
          "position": 257
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "interface TraceSpan {\n    id: string;\n    traceId: string;\n    parentId?: string;\n    name: string;\n    startTime: number;\n    endTime?: number;\n    duration?: number;\n    tags: Record<string, string | number | boolean>;\n    logs: Array<{\n        timestamp: number;\n        message: string;\n        data?: any;\n    }>;\n    children: TraceSpan[];\n}\ninterface TraceContext {\n    traceId: string;\n    spanId: string;\n    parentId?: string;\n}\ndeclare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\tracing.d.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 8,
          "position": 155
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\tracing.ts",
        "start": 1,
        "end": 24,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 24,
          "column": 6,
          "position": 157
        }
      }
    },
    {
      "format": "typescript",
      "lines": 32,
      "fragment": "export interface TestConfig {\n    timeout: number;\n    retries: number;\n    parallel: boolean;\n    verbose: boolean;\n    coverage: boolean;\n}\nexport interface TestResult {\n    name: string;\n    status: 'passed' | 'failed' | 'skipped';\n    duration: number;\n    error?: string;\n    coverage?: number;\n    assertions: number;\n    passedAssertions: number;\n}\nexport interface TestSuite {\n    name: string;\n    tests: Test[];\n    beforeAll?: () => Promise<void>;\n    afterAll?: () => Promise<void>;\n    beforeEach?: () => Promise<void>;\n    afterEach?: () => Promise<void>;\n}\nexport interface Test {\n    name: string;\n    fn: () => Promise<void>;\n    timeout?: number;\n    skip?: boolean;\n    only?: boolean;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\testing-framework.d.ts",
        "start": 1,
        "end": 32,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 32,
          "column": 8,
          "position": 262
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\testing-framework.ts",
        "start": 4,
        "end": 39,
        "startLoc": {
          "line": 4,
          "column": 1,
          "position": 27
        },
        "endLoc": {
          "line": 39,
          "column": 6,
          "position": 293
        }
      }
    },
    {
      "format": "typescript",
      "lines": 35,
      "fragment": "interface Supplier {\n    id: string;\n    organizationId: string;\n    name: string;\n    code: string;\n    type: 'manufacturer' | 'distributor' | 'service_provider' | 'consultant' | 'other';\n    category: string;\n    status: 'active' | 'inactive' | 'suspended' | 'pending_approval';\n    contactInfo: {\n        email: string;\n        phone: string;\n        address: string;\n        city: string;\n        country: string;\n        website?: string;\n    };\n    businessInfo: {\n        taxId: string;\n        registrationNumber: string;\n        legalName: string;\n        foundedYear?: number;\n        employeeCount?: number;\n        annualRevenue?: number;\n        currency: string;\n    };\n    certifications: string[];\n    paymentTerms: {\n        standardDays: number;\n        earlyPaymentDiscount?: number;\n        latePaymentPenalty?: number;\n        preferredMethod: 'bank_transfer' | 'check' | 'credit_card' | 'cash';\n    };\n    performanceMetrics: {\n        onTimeDelivery: number;\n        qualityScore",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\supplier-scorecard.service.d.ts",
        "start": 1,
        "end": 35,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 35,
          "column": 13,
          "position": 273
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\supplier-scorecard.service.ts",
        "start": 6,
        "end": 39,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 19
        },
        "endLoc": {
          "line": 39,
          "column": 14,
          "position": 291
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "};\n    riskAssessment: {\n        financialRisk: 'low' | 'medium' | 'high';\n        operationalRisk: 'low' | 'medium' | 'high';\n        complianceRisk: 'low' | 'medium' | 'high';\n        overallRisk: 'low' | 'medium' | 'high';\n        riskFactors: string[];\n    };\n    scorecard: {\n        overallScore: number;\n        grade",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\supplier-scorecard.service.d.ts",
        "start": 44,
        "end": 54,
        "startLoc": {
          "line": 44,
          "column": 5,
          "position": 336
        },
        "endLoc": {
          "line": 54,
          "column": 6,
          "position": 432
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\supplier-scorecard.service.ts",
        "start": 50,
        "end": 59,
        "startLoc": {
          "line": 50,
          "column": 3,
          "position": 378
        },
        "endLoc": {
          "line": 59,
          "column": 9,
          "position": 473
        }
      }
    },
    {
      "format": "typescript",
      "lines": 36,
      "fragment": "grade: 'A+' | 'A' | 'A-' | 'B+' | 'B' | 'B-' | 'C+' | 'C' | 'C-' | 'D' | 'F';\n        lastEvaluated: string;\n        nextEvaluation: string;\n        evaluationHistory: EvaluationRecord[];\n    };\n    createdAt: string;\n    updatedAt: string;\n}\ninterface EvaluationRecord {\n    id: string;\n    supplierId: string;\n    organizationId: string;\n    evaluationDate: string;\n    evaluatedBy: string;\n    evaluatedByName: string;\n    period: {\n        startDate: string;\n        endDate: string;\n    };\n    scores: {\n        delivery: number;\n        quality: number;\n        cost: number;\n        communication: number;\n        innovation: number;\n        sustainability: number;\n        overall: number;\n    };\n    metrics: {\n        ordersCount: number;\n        totalValue: number;\n        onTimeDeliveries: number;\n        qualityIssues: number;\n        costSavings: number;\n        responseTime: number;\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\supplier-scorecard.service.d.ts",
        "start": 54,
        "end": 89,
        "startLoc": {
          "line": 54,
          "column": 9,
          "position": 432
        },
        "endLoc": {
          "line": 89,
          "column": 2,
          "position": 701
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\supplier-scorecard.service.ts",
        "start": 60,
        "end": 95,
        "startLoc": {
          "line": 60,
          "column": 5,
          "position": 476
        },
        "endLoc": {
          "line": 95,
          "column": 9,
          "position": 745
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": "};\n    comments: string;\n    recommendations: string[];\n    status: 'draft' | 'approved' | 'rejected';\n    createdAt: string;\n    updatedAt: string;\n}\ninterface SupplierPerformance {\n    supplierId: string;\n    organizationId: string;\n    period: {\n        startDate: string;\n        endDate: string;\n    };\n    metrics: {\n        totalOrders: number;\n        totalValue: number;\n        averageOrderValue: number;\n        onTimeDeliveryRate: number;\n        qualityDefectRate: number;\n        averageResponseTime: number;\n        costSavings: number;\n        innovationContributions: number;\n        otifRate",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\supplier-scorecard.service.d.ts",
        "start": 89,
        "end": 112,
        "startLoc": {
          "line": 89,
          "column": 5,
          "position": 701
        },
        "endLoc": {
          "line": 112,
          "column": 9,
          "position": 858
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\supplier-scorecard.service.ts",
        "start": 96,
        "end": 120,
        "startLoc": {
          "line": 96,
          "column": 3,
          "position": 748
        },
        "endLoc": {
          "line": 120,
          "column": 51,
          "position": 906
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "};\n    trends: {\n        deliveryTrend: 'improving' | 'stable' | 'declining';\n        qualityTrend: 'improving' | 'stable' | 'declining';\n        costTrend: 'improving' | 'stable' | 'declining';\n        overallTrend: 'improving' | 'stable' | 'declining';\n    };\n    alerts: {\n        type: 'performance_decline' | 'quality_issue' | 'delivery_delay' | 'cost_increase' | 'communication_issue' | 'otif_decline' | 'lead_time_increase' | 'ppv_variance' | 'service_level_decline';\n        severity: 'low' | 'medium' | 'high' | 'critical';\n        message: string;\n        createdAt: string;\n        threshold",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\supplier-scorecard.service.d.ts",
        "start": 116,
        "end": 128,
        "startLoc": {
          "line": 116,
          "column": 5,
          "position": 886
        },
        "endLoc": {
          "line": 128,
          "column": 10,
          "position": 1038
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\supplier-scorecard.service.ts",
        "start": 125,
        "end": 137,
        "startLoc": {
          "line": 125,
          "column": 3,
          "position": 945
        },
        "endLoc": {
          "line": 137,
          "column": 50,
          "position": 1097
        }
      }
    },
    {
      "format": "typescript",
      "lines": 56,
      "fragment": "threshold?: number;\n        currentValue?: number;\n        targetValue?: number;\n    }[];\n    lastUpdated: string;\n}\ninterface SupplierComparison {\n    id: string;\n    organizationId: string;\n    name: string;\n    category: string;\n    suppliers: {\n        supplierId: string;\n        supplierName: string;\n        scores: {\n            overall: number;\n            delivery: number;\n            quality: number;\n            cost: number;\n            communication: number;\n            innovation: number;\n            sustainability: number;\n        };\n        metrics: {\n            totalOrders: number;\n            totalValue: number;\n            onTimeDeliveryRate: number;\n            qualityDefectRate: number;\n            averageResponseTime: number;\n        };\n        rank: number;\n    }[];\n    createdAt: string;\n    updatedAt: string;\n}\ninterface SupplierReport {\n    id: string;\n    organizationId: string;\n    reportType: 'performance_summary' | 'scorecard_analysis' | 'risk_assessment' | 'comparative_analysis' | 'trend_analysis';\n    period: {\n        startDate: string;\n        endDate: string;\n    };\n    summary: {\n        totalSuppliers: number;\n        evaluatedSuppliers: number;\n        averageScore: number;\n        topPerformers: number;\n        underPerformers: number;\n        riskSuppliers: number;\n    };\n    data: any;\n    generatedBy: string;\n    createdAt: string;\n}\ndeclare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\supplier-scorecard.service.d.ts",
        "start": 128,
        "end": 183,
        "startLoc": {
          "line": 128,
          "column": 9,
          "position": 1038
        },
        "endLoc": {
          "line": 183,
          "column": 8,
          "position": 1405
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\supplier-scorecard.service.ts",
        "start": 138,
        "end": 196,
        "startLoc": {
          "line": 138,
          "column": 5,
          "position": 1100
        },
        "endLoc": {
          "line": 196,
          "column": 6,
          "position": 1470
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "generateVendorScorecardAlerts(organizationId: string): Promise<{\n        supplierId: string;\n        supplierName: string;\n        alerts: {\n            type: 'otif_decline' | 'lead_time_increase' | 'ppv_variance' | 'service_level_decline';\n            severity: 'low' | 'medium' | 'high' | 'critical';\n            message: string;\n            threshold: number;\n            currentValue: number;\n            targetValue: number;\n            createdAt: string;\n        }[];\n    }[]>;",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\supplier-scorecard.service.d.ts",
        "start": 246,
        "end": 258,
        "startLoc": {
          "line": 246,
          "column": 5,
          "position": 2075
        },
        "endLoc": {
          "line": 258,
          "column": 2,
          "position": 2192
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\supplier-scorecard.service.ts",
        "start": 891,
        "end": 903,
        "startLoc": {
          "line": 891,
          "column": 2,
          "position": 8653
        },
        "endLoc": {
          "line": 903,
          "column": 2,
          "position": 8771
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "export interface LogContext {\n    userId?: string;\n    requestId?: string;\n    sessionId?: string;\n    organizationId?: string;\n    operation?: string;\n    duration?: number;\n    [key: string]: unknown;\n}\nexport interface LogEntry {\n    timestamp: string;\n    level: 'debug' | 'info' | 'warn' | 'error' | 'fatal';\n    message: string;\n    context?: LogContext;\n    error?: {\n        name: string;\n        message: string;\n        stack?: string;\n    };\n    metadata?: Record<string, unknown>;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\structured-logger.d.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 8,
          "position": 174
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\structured-logger.ts",
        "start": 4,
        "end": 27,
        "startLoc": {
          "line": 4,
          "column": 1,
          "position": 16
        },
        "endLoc": {
          "line": 27,
          "column": 6,
          "position": 192
        }
      }
    },
    {
      "format": "typescript",
      "lines": 35,
      "fragment": "currency: string;\n    status: 'pending' | 'succeeded' | 'failed' | 'canceled' | 'requires_action';\n    customerId: string;\n    customerEmail: string;\n    description: string;\n    metadata: Record<string, string>;\n    receiptUrl?: string;\n    receiptNumber: string;\n    createdAt: string;\n    updatedAt: string;\n    reconciledAt?: string;\n    reconciliationStatus: 'pending' | 'reconciled' | 'discrepancy' | 'manual_review';\n    bankTransactionId?: string;\n    bankReference?: string;\n    discrepancyReason?: string;\n    discrepancyAmount?: number;\n}\ninterface StripeWebhookEvent {\n    id: string;\n    type: string;\n    data: {\n        object: any;\n    };\n    created: number;\n    livemode: boolean;\n}\ninterface ReconciliationRule {\n    id: string;\n    organizationId: string;\n    name: string;\n    description: string;\n    conditions: {\n        amountRange?: {\n            min: number;\n            max: number;",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\stripe-receipts.service.d.ts",
        "start": 7,
        "end": 41,
        "startLoc": {
          "line": 7,
          "column": 5,
          "position": 42
        },
        "endLoc": {
          "line": 41,
          "column": 2,
          "position": 307
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\stripe-receipts.service.ts",
        "start": 12,
        "end": 46,
        "startLoc": {
          "line": 12,
          "column": 3,
          "position": 63
        },
        "endLoc": {
          "line": 46,
          "column": 2,
          "position": 329
        }
      }
    },
    {
      "format": "typescript",
      "lines": 44,
      "fragment": "};\n        currency?: string;\n        customerEmail?: string;\n        descriptionPattern?: string;\n        metadata?: Record<string, string>;\n    };\n    actions: {\n        autoReconcile: boolean;\n        alertOnDiscrepancy: boolean;\n        requireManualReview: boolean;\n    };\n    isActive: boolean;\n    createdAt: string;\n    updatedAt: string;\n}\ninterface ReconciliationReport {\n    id: string;\n    organizationId: string;\n    period: {\n        startDate: string;\n        endDate: string;\n    };\n    summary: {\n        totalReceipts: number;\n        totalAmount: number;\n        reconciledReceipts: number;\n        reconciledAmount: number;\n        pendingReceipts: number;\n        pendingAmount: number;\n        discrepancyReceipts: number;\n        discrepancyAmount: number;\n        reconciliationRate: number;\n    };\n    receipts: StripeReceipt[];\n    discrepancies: {\n        receiptId: string;\n        reason: string;\n        amount: number;\n        suggestedAction: string;\n    }[];\n    createdAt: string;\n    generatedBy: string;\n}\ndeclare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\stripe-receipts.service.d.ts",
        "start": 42,
        "end": 85,
        "startLoc": {
          "line": 42,
          "column": 9,
          "position": 310
        },
        "endLoc": {
          "line": 85,
          "column": 8,
          "position": 591
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\stripe-receipts.service.ts",
        "start": 46,
        "end": 91,
        "startLoc": {
          "line": 46,
          "column": 2,
          "position": 329
        },
        "endLoc": {
          "line": 91,
          "column": 6,
          "position": 612
        }
      }
    },
    {
      "format": "typescript",
      "lines": 41,
      "fragment": "LoadBalancingStrategy } from './service-discovery.js';\nexport interface ServiceMeshConfig {\n    timeout: number;\n    retries: number;\n    circuitBreakerThreshold: number;\n    circuitBreakerTimeout: number;\n    loadBalancingStrategy: LoadBalancingStrategy;\n    enableTracing: boolean;\n    enableMetrics: boolean;\n}\nexport interface ServiceRequest {\n    serviceName: string;\n    path: string;\n    method: string;\n    headers: Record<string, string>;\n    body?: any;\n    timeout?: number;\n    retries?: number;\n}\nexport interface ServiceResponse {\n    status: number;\n    headers: Record<string, string>;\n    body: any;\n    duration: number;\n}\nexport interface CircuitBreaker {\n    serviceName: string;\n    failureCount: number;\n    lastFailureTime: Date;\n    state: 'closed' | 'open' | 'half-open';\n    threshold: number;\n    timeout: number;\n}\nexport interface ServiceMeshStats {\n    totalRequests: number;\n    successfulRequests: number;\n    failedRequests: number;\n    averageResponseTime: number;\n    circuitBreakers: CircuitBreaker[];\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\service-mesh.d.ts",
        "start": 1,
        "end": 41,
        "startLoc": {
          "line": 1,
          "column": 2,
          "position": 4
        },
        "endLoc": {
          "line": 41,
          "column": 8,
          "position": 293
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\service-mesh.ts",
        "start": 2,
        "end": 48,
        "startLoc": {
          "line": 2,
          "column": 2,
          "position": 23
        },
        "endLoc": {
          "line": 48,
          "column": 6,
          "position": 318
        }
      }
    },
    {
      "format": "typescript",
      "lines": 61,
      "fragment": "export interface ServiceInstance {\n    id: string;\n    name: string;\n    version: string;\n    host: string;\n    port: number;\n    url: string;\n    health: 'healthy' | 'unhealthy' | 'degraded';\n    status: 'online' | 'offline' | 'maintenance';\n    metadata: ServiceMetadata;\n    lastHeartbeat: Date;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface ServiceMetadata {\n    environment: string;\n    region: string;\n    zone: string;\n    tags: string[];\n    capabilities: string[];\n    load: number;\n    memory: number;\n    cpu: number;\n    endpoints: ServiceEndpoint[];\n}\nexport interface ServiceEndpoint {\n    path: string;\n    method: string;\n    description: string;\n    version: string;\n    deprecated: boolean;\n}\nexport interface ServiceRegistry {\n    register(service: Omit<ServiceInstance, 'id' | 'lastHeartbeat' | 'createdAt' | 'updatedAt'>): string;\n    deregister(serviceId: string): boolean;\n    getService(serviceId: string): ServiceInstance | undefined;\n    getServicesByName(name: string): ServiceInstance[];\n    getAllServices(): ServiceInstance[];\n    updateHealth(serviceId: string, health: ServiceInstance['health']): boolean;\n    updateStatus(serviceId: string, status: ServiceInstance['status']): boolean;\n    heartbeat(serviceId: string): boolean;\n    cleanup(): void;\n}\nexport interface ServiceDiscovery {\n    discover(serviceName: string, filters?: ServiceFilters): ServiceInstance[];\n    discoverAll(filters?: ServiceFilters): ServiceInstance[];\n    getHealthyInstances(serviceName: string): ServiceInstance[];\n    getLoadBalancedInstance(serviceName: string, strategy?: LoadBalancingStrategy): ServiceInstance | null;\n}\nexport interface ServiceFilters {\n    version?: string;\n    environment?: string;\n    region?: string;\n    zone?: string;\n    tags?: string[];\n    capabilities?: string[];\n    health?: ServiceInstance['health'];\n    status?: ServiceInstance['status'];\n}\nexport type LoadBalancingStrategy = 'round-robin' | 'least-connections' | 'weighted' | 'ip-hash' | 'random';\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\service-discovery.d.ts",
        "start": 1,
        "end": 61,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 61,
          "column": 8,
          "position": 597
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\service-discovery.ts",
        "start": 3,
        "end": 70,
        "startLoc": {
          "line": 3,
          "column": 1,
          "position": 14
        },
        "endLoc": {
          "line": 70,
          "column": 6,
          "position": 618
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": ", {\n    status?: \"pending\" | \"matched\" | \"reconciled\" | \"disputed\";\n    date?: string;\n    id?: string;\n    createdAt?: string;\n    updatedAt?: string;\n    description?: string;\n    amount?: number;\n    currency?: string;\n    category?: string;\n    valueDate?: string;\n    reference?: string;\n    transactionId?: string;\n    accountId?: string;\n    counterparty?: {\n        name?: string;\n        iban?: string;\n        bic?: string;\n    };\n    matchingScore?: number;\n    matchedTransactionId?: string;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\sepa.service.d.ts",
        "start": 53,
        "end": 74,
        "startLoc": {
          "line": 53,
          "column": 2,
          "position": 543
        },
        "endLoc": {
          "line": 74,
          "column": 2,
          "position": 715
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\sepa.service.d.ts",
        "start": 32,
        "end": 53,
        "startLoc": {
          "line": 32,
          "column": 11,
          "position": 371
        },
        "endLoc": {
          "line": 53,
          "column": 2,
          "position": 543
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": ", {\n    name?: string;\n    id?: string;\n    createdAt?: string;\n    updatedAt?: string;\n    description?: string;\n    priority?: number;\n    actions?: {\n        type?: \"match\" | \"flag\" | \"transform\";\n        parameters?: Record<string, any>;\n    }[];\n    enabled?: boolean;\n    conditions?: {\n        value?: any;\n        field?: string;\n        operator?: \"range\" | \"equals\" | \"contains\" | \"regex\";\n        weight?: number;\n    }[];\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\sepa.service.d.ts",
        "start": 127,
        "end": 145,
        "startLoc": {
          "line": 127,
          "column": 2,
          "position": 1324
        },
        "endLoc": {
          "line": 145,
          "column": 2,
          "position": 1485
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\sepa.service.d.ts",
        "start": 109,
        "end": 127,
        "startLoc": {
          "line": 109,
          "column": 11,
          "position": 1163
        },
        "endLoc": {
          "line": 127,
          "column": 2,
          "position": 1324
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", {\n    status?: \"pending\" | \"matched\" | \"reconciled\" | \"disputed\";\n    limit?: number;\n    category?: string;\n    reference?: string;\n    accountId?: string;\n    dateFrom?: string;\n    dateTo?: string;\n    offset?: number;\n    amountMin?: number;\n    amountMax?: number;\n    counterpartyName?: string;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\sepa.service.d.ts",
        "start": 170,
        "end": 182,
        "startLoc": {
          "line": 170,
          "column": 2,
          "position": 1784
        },
        "endLoc": {
          "line": 182,
          "column": 2,
          "position": 1889
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\sepa.service.d.ts",
        "start": 158,
        "end": 170,
        "startLoc": {
          "line": 158,
          "column": 11,
          "position": 1679
        },
        "endLoc": {
          "line": 170,
          "column": 2,
          "position": 1784
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ";\nexport interface SEPASummary {\n    total: number;\n    totalValue: number;\n    byStatus: Record<string, number>;\n    byCategory: Record<string, number>;\n    byAccount: Record<string, number>;\n    pendingCount: number;\n    matchedCount: number;\n    reconciledCount: number;\n    disputedCount: number;\n    averageAmount: number;\n    topCounterparties: Array<{\n        name: string;\n        count: number;\n        totalAmount: number;",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\sepa.service.d.ts",
        "start": 182,
        "end": 197,
        "startLoc": {
          "line": 182,
          "column": 2,
          "position": 1890
        },
        "endLoc": {
          "line": 197,
          "column": 2,
          "position": 2015
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\sepa.service.ts",
        "start": 64,
        "end": 77,
        "startLoc": {
          "line": 64,
          "column": 2,
          "position": 924
        },
        "endLoc": {
          "line": 77,
          "column": 2,
          "position": 1048
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": "}>;\n}\nexport interface SEPAAnalytics {\n    summary: SEPASummary;\n    trends: {\n        matchingRate: number;\n        reconciliationRate: number;\n        averageProcessingTime: number;\n        errorRate: number;\n    };\n    performance: {\n        totalTransactions: number;\n        matchedTransactions: number;\n        reconciledTransactions: number;\n        disputedTransactions: number;\n        matchingAccuracy: number;\n        processingEfficiency: number;\n    };\n    recommendations: string[];\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\sepa.service.d.ts",
        "start": 202,
        "end": 222,
        "startLoc": {
          "line": 202,
          "column": 5,
          "position": 2045
        },
        "endLoc": {
          "line": 222,
          "column": 8,
          "position": 2169
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\sepa.service.ts",
        "start": 78,
        "end": 100,
        "startLoc": {
          "line": 78,
          "column": 2,
          "position": 1071
        },
        "endLoc": {
          "line": 100,
          "column": 6,
          "position": 1197
        }
      }
    },
    {
      "format": "typescript",
      "lines": 62,
      "fragment": "export interface SEPATransaction {\n    id: string;\n    accountId: string;\n    transactionId: string;\n    amount: number;\n    currency: string;\n    date: Date;\n    valueDate: Date;\n    description: string;\n    reference: string;\n    counterparty: {\n        name: string;\n        iban: string;\n        bic: string;\n    };\n    category: string;\n    status: 'pending' | 'matched' | 'reconciled' | 'disputed';\n    matchingScore?: number;\n    matchedTransactionId?: string;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface MatchingRule {\n    id: string;\n    name: string;\n    description: string;\n    priority: number;\n    conditions: MatchingCondition[];\n    actions: MatchingAction[];\n    enabled: boolean;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface MatchingCondition {\n    field: string;\n    operator: 'equals' | 'contains' | 'regex' | 'range';\n    value: unknown;\n    weight: number;\n}\nexport interface MatchingAction {\n    type: 'match' | 'flag' | 'transform';\n    parameters: Record<string, unknown>;\n}\nexport interface ReconciliationResult {\n    id: string;\n    transactionId: string;\n    matchedTransactionId: string;\n    score: number;\n    status: 'auto' | 'manual' | 'disputed';\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface SEPAUploadResult {\n    fileId: string;\n    fileName: string;\n    transactionsCount: number;\n    processedCount: number;\n    errorsCount: number;\n    status: 'success' | 'partial' | 'failed';\n    errors: string[];\n    createdAt: Date;\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\sepa-types.d.ts",
        "start": 1,
        "end": 62,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 62,
          "column": 2,
          "position": 466
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\sepa-types.ts",
        "start": 2,
        "end": 68,
        "startLoc": {
          "line": 2,
          "column": 1,
          "position": 2
        },
        "endLoc": {
          "line": 68,
          "column": 2,
          "position": 473
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": "}\n        const report = {\n            id: `report_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`,\n            organizationId,\n            reportType: reportType,\n            period: { startDate, endDate },\n            summary,\n            data,\n            generatedBy,\n            createdAt: new Date().toISOString()\n        };\n        structuredLogger.info('SEPA robust report generated'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\sepa-robust.service.js",
        "start": 511,
        "end": 522,
        "startLoc": {
          "line": 511,
          "column": 9,
          "position": 5232
        },
        "endLoc": {
          "line": 522,
          "column": 31,
          "position": 5339
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\supplier-scorecard.service.js",
        "start": 502,
        "end": 513,
        "startLoc": {
          "line": 502,
          "column": 9,
          "position": 5237
        },
        "endLoc": {
          "line": 513,
          "column": 28,
          "position": 5344
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": "interface SEPARobustTransaction {\n    id: string;\n    organizationId: string;\n    accountId: string;\n    transactionId: string;\n    amount: number;\n    currency: string;\n    date: string;\n    valueDate: string;\n    description: string;\n    reference: string;\n    counterparty: {\n        name: string;\n        iban: string;\n        bic: string;\n    };\n    category: string;\n    status: 'pending' | 'matched' | 'reconciled' | 'disputed' | 'exception';\n    matchingScore: number;\n    matchedTransactionId?: string;\n    camtVersion",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\sepa-robust.service.d.ts",
        "start": 1,
        "end": 21,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 21,
          "column": 12,
          "position": 153
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\sepa-robust.service.ts",
        "start": 6,
        "end": 26,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 19
        },
        "endLoc": {
          "line": 26,
          "column": 43,
          "position": 172
        }
      }
    },
    {
      "format": "typescript",
      "lines": 71,
      "fragment": "camtVersion: '053' | '054';\n    exceptionType?: 'duplicate' | 'invalid_amount' | 'missing_reference' | 'invalid_iban' | 'date_mismatch' | 'currency_mismatch';\n    exceptionDetails?: string;\n    validationErrors: string[];\n    processingFlags: string[];\n    createdAt: string;\n    updatedAt: string;\n}\ninterface SEPARobustRule {\n    id: string;\n    organizationId: string;\n    name: string;\n    description: string;\n    priority: number;\n    conditions: {\n        field: string;\n        operator: 'equals' | 'contains' | 'regex' | 'range' | 'exists' | 'not_exists';\n        value: any;\n        weight: number;\n    }[];\n    actions: {\n        type: 'auto_match' | 'flag_exception' | 'transform_data' | 'send_alert' | 'require_manual_review';\n        parameters: Record<string, any>;\n    }[];\n    enabled: boolean;\n    createdAt: string;\n    updatedAt: string;\n}\ninterface SEPARobustException {\n    id: string;\n    organizationId: string;\n    transactionId: string;\n    exceptionType: string;\n    severity: 'low' | 'medium' | 'high' | 'critical';\n    description: string;\n    details: Record<string, any>;\n    status: 'open' | 'in_review' | 'resolved' | 'ignored';\n    assignedTo?: string;\n    resolution?: string;\n    createdAt: string;\n    updatedAt: string;\n}\ninterface SEPARobustValidation {\n    transactionId: string;\n    isValid: boolean;\n    errors: string[];\n    warnings: string[];\n    suggestions: string[];\n    confidence: number;\n}\ninterface SEPARobustReport {\n    id: string;\n    organizationId: string;\n    reportType: 'processing_summary' | 'exception_analysis' | 'rule_performance' | 'validation_report';\n    period: {\n        startDate: string;\n        endDate: string;\n    };\n    summary: {\n        totalTransactions: number;\n        processedTransactions: number;\n        exceptionTransactions: number;\n        matchedTransactions: number;\n        averageProcessingTime: number;\n        successRate: number;\n    };\n    data: any;\n    generatedBy: string;\n    createdAt: string;\n}\ndeclare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\sepa-robust.service.d.ts",
        "start": 21,
        "end": 91,
        "startLoc": {
          "line": 21,
          "column": 5,
          "position": 153
        },
        "endLoc": {
          "line": 91,
          "column": 8,
          "position": 723
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\sepa-robust.service.ts",
        "start": 27,
        "end": 102,
        "startLoc": {
          "line": 27,
          "column": 3,
          "position": 175
        },
        "endLoc": {
          "line": 102,
          "column": 6,
          "position": 750
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": ",\n                transactionsCount: transactions.length,\n                processedCount: transactions.length - errors.length,\n                errorsCount: errors.length,\n                status: errors.length === 0 ? 'success' : errors.length < transactions.length ? 'partial' : 'failed',\n                errors,\n                createdAt: new Date()\n            };\n        }\n        catch (error) {\n            return {\n                fileId: `mt940_error_",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\sepa-parser.service.js",
        "start": 81,
        "end": 92,
        "startLoc": {
          "line": 81,
          "column": 17,
          "position": 760
        },
        "endLoc": {
          "line": 92,
          "column": 14,
          "position": 871
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\sepa-parser.service.js",
        "start": 25,
        "end": 36,
        "startLoc": {
          "line": 25,
          "column": 16,
          "position": 251
        },
        "endLoc": {
          "line": 36,
          "column": 13,
          "position": 362
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "interface SemanticDocument {\n    id: string;\n    organizationId: string;\n    type: 'contact' | 'company' | 'deal' | 'invoice' | 'product' | 'interaction' | 'note' | 'task';\n    title: string;\n    content: string;\n    metadata: {\n        entityId: string;\n        entityType: string;\n        tags: string[];\n        categories: string[];\n        priority: 'low' | 'medium' | 'high' | 'critical';\n        status: string;\n        createdBy: string;\n        lastModifiedBy: string;\n        language: string;\n        confidence: number;\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\semantic-search-crm.service.d.ts",
        "start": 1,
        "end": 18,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 18,
          "column": 2,
          "position": 162
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\semantic-search-crm.service.ts",
        "start": 6,
        "end": 22,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 19
        },
        "endLoc": {
          "line": 22,
          "column": 35,
          "position": 180
        }
      }
    },
    {
      "format": "typescript",
      "lines": 43,
      "fragment": "model: string;\n        version: string;\n        dimensions: number;\n        generatedAt: string;\n    };\n    searchableFields: {\n        name?: string;\n        email?: string;\n        phone?: string;\n        company?: string;\n        description?: string;\n        notes?: string;\n        tags?: string[];\n    };\n    createdAt: string;\n    updatedAt: string;\n    indexedAt: string;\n}\ninterface SearchQuery {\n    id: string;\n    organizationId: string;\n    query: string;\n    type: 'semantic' | 'hybrid' | 'keyword' | 'fuzzy';\n    filters: {\n        documentTypes?: string[];\n        tags?: string[];\n        categories?: string[];\n        priority?: string[];\n        status?: string[];\n        dateRange?: {\n            start: string;\n            end: string;\n        };\n        createdBy?: string[];\n        language?: string;\n    };\n    options: {\n        limit: number;\n        offset: number;\n        includeMetadata: boolean;\n        includeEmbeddings: boolean;\n        similarityThreshold: number;\n        boostFields",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\semantic-search-crm.service.d.ts",
        "start": 21,
        "end": 63,
        "startLoc": {
          "line": 21,
          "column": 9,
          "position": 181
        },
        "endLoc": {
          "line": 63,
          "column": 12,
          "position": 494
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\semantic-search-crm.service.ts",
        "start": 26,
        "end": 68,
        "startLoc": {
          "line": 26,
          "column": 5,
          "position": 204
        },
        "endLoc": {
          "line": 68,
          "column": 7,
          "position": 517
        }
      }
    },
    {
      "format": "typescript",
      "lines": 29,
      "fragment": "boostFields: Record<string, number>;\n        highlightMatches: boolean;\n    };\n    results: {\n        documents: SemanticDocument[];\n        total: number;\n        executionTime: number;\n        queryVector?: number[];\n        suggestions?: string[];\n        facets?: Record<string, any>;\n    };\n    createdAt: string;\n}\ninterface SearchIndex {\n    id: string;\n    organizationId: string;\n    name: string;\n    description: string;\n    status: 'building' | 'ready' | 'updating' | 'error';\n    configuration: {\n        model: string;\n        dimensions: number;\n        similarityMetric: 'cosine' | 'euclidean' | 'dot_product';\n        chunkSize: number;\n        overlapSize: number;\n        language: string;\n        autoUpdate: boolean;\n        updateInterval: number;\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\semantic-search-crm.service.d.ts",
        "start": 63,
        "end": 91,
        "startLoc": {
          "line": 63,
          "column": 9,
          "position": 494
        },
        "endLoc": {
          "line": 91,
          "column": 2,
          "position": 717
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\semantic-search-crm.service.ts",
        "start": 69,
        "end": 97,
        "startLoc": {
          "line": 69,
          "column": 5,
          "position": 520
        },
        "endLoc": {
          "line": 97,
          "column": 11,
          "position": 743
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "};\n    createdAt: string;\n    updatedAt: string;\n}\ninterface SearchAnalytics {\n    id: string;\n    organizationId: string;\n    queryId: string;\n    userId: string;\n    sessionId: string;\n    query: string;\n    results: {\n        totalFound: number;\n        clickedDocuments: string[];\n        timeSpent: number;\n        satisfaction",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\semantic-search-crm.service.d.ts",
        "start": 99,
        "end": 114,
        "startLoc": {
          "line": 99,
          "column": 5,
          "position": 769
        },
        "endLoc": {
          "line": 114,
          "column": 13,
          "position": 866
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\semantic-search-crm.service.ts",
        "start": 106,
        "end": 121,
        "startLoc": {
          "line": 106,
          "column": 3,
          "position": 802
        },
        "endLoc": {
          "line": 121,
          "column": 12,
          "position": 899
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": "cacheHit: boolean;\n        modelUsed: string;\n    };\n    timestamp: string;\n}\ninterface SearchSuggestion {\n    id: string;\n    organizationId: string;\n    query: string;\n    suggestions: {\n        text: string;\n        type: 'autocomplete' | 'related' | 'popular' | 'semantic';\n        score: number;\n        metadata?: Record<string, any>;\n    }[];\n    context: {\n        userId?: string;\n        sessionId?: string;\n        previousQueries?: string[];\n        userPreferences?: Record<string, any>;\n    };\n    createdAt: string;\n}\ndeclare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\semantic-search-crm.service.d.ts",
        "start": 120,
        "end": 143,
        "startLoc": {
          "line": 120,
          "column": 9,
          "position": 905
        },
        "endLoc": {
          "line": 143,
          "column": 8,
          "position": 1076
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\semantic-search-crm.service.ts",
        "start": 128,
        "end": 153,
        "startLoc": {
          "line": 128,
          "column": 5,
          "position": 947
        },
        "endLoc": {
          "line": 153,
          "column": 6,
          "position": 1120
        }
      }
    },
    {
      "format": "typescript",
      "lines": 30,
      "fragment": "export interface SecurityEvent {\n    id: string;\n    type: 'AUTH_FAILURE' | 'RATE_LIMIT' | 'SUSPICIOUS_ACTIVITY' | 'DATA_BREACH' | 'UNAUTHORIZED_ACCESS';\n    severity: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL';\n    userId?: string;\n    organizationId?: string;\n    ipAddress: string;\n    userAgent: string;\n    details: any;\n    timestamp: Date;\n}\nexport interface SecurityConfig {\n    maxLoginAttempts: number;\n    lockoutDuration: number;\n    suspiciousActivityThreshold: number;\n    dataEncryptionKey: string;\n    auditLogRetention: number;\n}\nexport interface AuditLog {\n    id: string;\n    userId?: string;\n    organizationId?: string;\n    action: string;\n    resource: string;\n    ipAddress: string;\n    userAgent: string;\n    details: any;\n    timestamp: Date;\n}\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\security.service.d.ts",
        "start": 1,
        "end": 30,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 30,
          "column": 7,
          "position": 223
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\security.service.ts",
        "start": 13,
        "end": 45,
        "startLoc": {
          "line": 13,
          "column": 1,
          "position": 50
        },
        "endLoc": {
          "line": 45,
          "column": 76,
          "position": 276
        }
      }
    },
    {
      "format": "typescript",
      "lines": 60,
      "fragment": "interface User {\n    id: string;\n    email: string;\n    username: string;\n    passwordHash: string;\n    salt: string;\n    roles: string[];\n    permissions: string[];\n    mfaEnabled: boolean;\n    mfaSecret?: string;\n    createdAt: Date;\n    updatedAt: Date;\n}\ninterface Role {\n    id: string;\n    name: string;\n    description?: string;\n    permissions: string[];\n    orgId: string;\n    createdAt: Date;\n}\ninterface Permission {\n    id: string;\n    name: string;\n    description?: string;\n    resource: string;\n    action: string;\n    orgId: string;\n    createdAt: Date;\n}\ninterface AuditLog {\n    id: string;\n    userId: string;\n    action: string;\n    resource: string;\n    details: any;\n    ipAddress?: string;\n    userAgent?: string;\n    success: boolean;\n    timestamp: Date;\n}\ninterface SecurityEvent {\n    id: string;\n    type: 'login_failed' | 'permission_denied' | 'suspicious_activity' | 'mfa_failed';\n    severity: 'low' | 'medium' | 'high' | 'critical';\n    userId?: string;\n    ipAddress?: string;\n    details: any;\n    timestamp: Date;\n    resolved: boolean;\n}\ninterface ThreatIntelligence {\n    ipAddress: string;\n    reputation: 'good' | 'suspicious' | 'malicious';\n    country: string;\n    threatTypes: string[];\n    lastSeen: Date;\n    confidence: number;\n}\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\security.d.ts",
        "start": 1,
        "end": 60,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 60,
          "column": 7,
          "position": 424
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\security.ts",
        "start": 9,
        "end": 74,
        "startLoc": {
          "line": 9,
          "column": 1,
          "position": 39
        },
        "endLoc": {
          "line": 74,
          "column": 80,
          "position": 469
        }
      }
    },
    {
      "format": "typescript",
      "lines": 82,
      "fragment": "export interface SecurityEvent {\n    id: string;\n    type: 'authentication' | 'authorization' | 'data_access' | 'system_change' | 'threat' | 'compliance' | 'audit';\n    severity: 'low' | 'medium' | 'high' | 'critical';\n    timestamp: Date;\n    userId?: string;\n    organizationId: string;\n    source: string;\n    details: Record<string, any>;\n    riskScore: number;\n    status: 'detected' | 'investigating' | 'resolved' | 'false_positive' | 'escalated';\n    category: string;\n    subcategory?: string;\n    tags: string[];\n    metadata: Record<string, any>;\n    ipAddress?: string;\n    userAgent?: string;\n    sessionId?: string;\n    resource?: string;\n    action?: string;\n    result?: 'success' | 'failure' | 'denied' | 'error';\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface ThreatDetection {\n    id: string;\n    threatType: 'malware' | 'phishing' | 'ddos' | 'insider_threat' | 'data_breach' | 'unauthorized_access' | 'suspicious_activity';\n    severity: 'low' | 'medium' | 'high' | 'critical';\n    confidence: number;\n    timestamp: Date;\n    source: string;\n    target: string;\n    organizationId: string;\n    description: string;\n    indicators: ThreatIndicator[];\n    analysis: ThreatAnalysis;\n    response: ThreatResponse;\n    status: 'detected' | 'analyzing' | 'contained' | 'resolved' | 'false_positive';\n    riskScore: number;\n    impact: 'low' | 'medium' | 'high' | 'critical';\n    likelihood: 'low' | 'medium' | 'high' | 'critical';\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface ThreatIndicator {\n    type: 'ip_address' | 'domain' | 'url' | 'file_hash' | 'email' | 'user_agent' | 'behavior';\n    value: string;\n    confidence: number;\n    source: string;\n    firstSeen: Date;\n    lastSeen: Date;\n    tags: string[];\n}\nexport interface ThreatAnalysis {\n    summary: string;\n    technicalDetails: string;\n    attackVector: string;\n    affectedSystems: string[];\n    dataAtRisk: string[];\n    potentialImpact: string;\n    recommendations: string[];\n    references: string[];\n}\nexport interface ThreatResponse {\n    actions: ThreatResponseAction[];\n    status: 'pending' | 'in_progress' | 'completed' | 'failed';\n    assignedTo?: string;\n    priority: 'low' | 'medium' | 'high' | 'critical';\n    estimatedResolution?: Date;\n    actualResolution?: Date;\n}\nexport interface ThreatResponseAction {\n    id: string;\n    type: 'block' | 'isolate' | 'investigate' | 'notify' | 'escalate' | 'contain' | 'remediate';\n    description: string;\n    status: 'pending' | 'in_progress' | 'completed' | 'failed';\n    assignedTo?: string;\n    dueDate?: Date;\n    completedAt?: Date;\n    result?: string;\n}\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\security-types.d.ts",
        "start": 1,
        "end": 82,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 82,
          "column": 7,
          "position": 810
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\security-types.ts",
        "start": 12,
        "end": 99,
        "startLoc": {
          "line": 12,
          "column": 1,
          "position": 10
        },
        "endLoc": {
          "line": 99,
          "column": 80,
          "position": 826
        }
      }
    },
    {
      "format": "typescript",
      "lines": 86,
      "fragment": "export interface ComplianceRequirement {\n    id: string;\n    standard: 'GDPR' | 'SOX' | 'HIPAA' | 'PCI-DSS' | 'ISO27001' | 'SOC2' | 'NIST' | 'CIS';\n    requirement: string;\n    description: string;\n    category: string;\n    subcategory?: string;\n    priority: 'low' | 'medium' | 'high' | 'critical';\n    status: 'compliant' | 'non_compliant' | 'partially_compliant' | 'not_assessed' | 'in_progress';\n    evidence: ComplianceEvidence[];\n    controls: ComplianceControl[];\n    lastAssessed: Date;\n    nextAssessment: Date;\n    assessor?: string;\n    organizationId: string;\n    tags: string[];\n    metadata: Record<string, any>;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface ComplianceEvidence {\n    id: string;\n    type: 'document' | 'screenshot' | 'log' | 'test_result' | 'policy' | 'procedure';\n    title: string;\n    description: string;\n    fileUrl?: string;\n    content?: string;\n    collectedBy: string;\n    collectedAt: Date;\n    verifiedBy?: string;\n    verifiedAt?: Date;\n    status: 'pending' | 'verified' | 'rejected';\n}\nexport interface ComplianceControl {\n    id: string;\n    name: string;\n    description: string;\n    type: 'preventive' | 'detective' | 'corrective' | 'compensating';\n    implementation: 'automated' | 'manual' | 'hybrid';\n    status: 'implemented' | 'partially_implemented' | 'not_implemented' | 'not_applicable';\n    effectiveness: 'high' | 'medium' | 'low' | 'unknown';\n    owner: string;\n    lastTested?: Date;\n    nextTest?: Date;\n    testResults?: ComplianceTestResult[];\n}\nexport interface ComplianceTestResult {\n    id: string;\n    testType: 'automated' | 'manual' | 'interview' | 'observation';\n    result: 'pass' | 'fail' | 'partial' | 'not_applicable';\n    details: string;\n    tester: string;\n    testDate: Date;\n    evidence: string[];\n}\nexport interface ComplianceAssessment {\n    id: string;\n    standard: string;\n    organizationId: string;\n    assessor: string;\n    startDate: Date;\n    endDate?: Date;\n    status: 'planned' | 'in_progress' | 'completed' | 'cancelled';\n    scope: string[];\n    findings: ComplianceFinding[];\n    overallScore: number;\n    complianceRate: number;\n    recommendations: string[];\n    reportUrl?: string;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface ComplianceFinding {\n    id: string;\n    requirementId: string;\n    severity: 'low' | 'medium' | 'high' | 'critical';\n    status: 'open' | 'in_progress' | 'resolved' | 'accepted_risk';\n    description: string;\n    impact: string;\n    recommendation: string;\n    assignedTo?: string;\n    dueDate?: Date;\n    resolvedAt?: Date;\n    evidence: string[];\n}\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\security-types.d.ts",
        "start": 82,
        "end": 167,
        "startLoc": {
          "line": 82,
          "column": 1,
          "position": 810
        },
        "endLoc": {
          "line": 167,
          "column": 7,
          "position": 1607
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\security-types.ts",
        "start": 103,
        "end": 194,
        "startLoc": {
          "line": 103,
          "column": 1,
          "position": 833
        },
        "endLoc": {
          "line": 194,
          "column": 80,
          "position": 1636
        }
      }
    },
    {
      "format": "typescript",
      "lines": 97,
      "fragment": "export interface AuditLog {\n    id: string;\n    eventType: string;\n    timestamp: Date;\n    userId?: string;\n    organizationId: string;\n    resource: string;\n    action: string;\n    result: 'success' | 'failure' | 'denied' | 'error';\n    details: Record<string, any>;\n    ipAddress?: string;\n    userAgent?: string;\n    sessionId?: string;\n    requestId?: string;\n    duration?: number;\n    metadata: Record<string, any>;\n    tags: string[];\n    severity: 'low' | 'medium' | 'high' | 'critical';\n    category: string;\n    subcategory?: string;\n    createdAt: Date;\n}\nexport interface AuditReport {\n    id: string;\n    name: string;\n    description: string;\n    type: 'compliance' | 'security' | 'operational' | 'financial' | 'custom';\n    scope: string[];\n    period: {\n        start: Date;\n        end: Date;\n    };\n    organizationId: string;\n    auditor: string;\n    status: 'draft' | 'in_progress' | 'completed' | 'approved' | 'rejected';\n    findings: AuditFinding[];\n    recommendations: AuditRecommendation[];\n    overallScore: number;\n    riskLevel: 'low' | 'medium' | 'high' | 'critical';\n    reportUrl?: string;\n    createdAt: Date;\n    updatedAt: Date;\n    completedAt?: Date;\n    approvedBy?: string;\n    approvedAt?: Date;\n}\nexport interface AuditFinding {\n    id: string;\n    severity: 'low' | 'medium' | 'high' | 'critical';\n    category: string;\n    title: string;\n    description: string;\n    impact: string;\n    recommendation: string;\n    evidence: string[];\n    status: 'open' | 'in_progress' | 'resolved' | 'accepted_risk';\n    assignedTo?: string;\n    dueDate?: Date;\n    resolvedAt?: Date;\n    resolution?: string;\n}\nexport interface AuditRecommendation {\n    id: string;\n    priority: 'low' | 'medium' | 'high' | 'critical';\n    category: string;\n    title: string;\n    description: string;\n    implementation: string;\n    estimatedEffort: string;\n    estimatedCost?: number;\n    status: 'pending' | 'in_progress' | 'completed' | 'rejected';\n    assignedTo?: string;\n    dueDate?: Date;\n    completedAt?: Date;\n}\nexport interface AuditTrail {\n    id: string;\n    entityType: string;\n    entityId: string;\n    action: 'create' | 'read' | 'update' | 'delete' | 'export' | 'import';\n    userId?: string;\n    organizationId: string;\n    timestamp: Date;\n    changes: AuditChange[];\n    ipAddress?: string;\n    userAgent?: string;\n    sessionId?: string;\n    reason?: string;\n    metadata: Record<string, any>;\n}\nexport interface AuditChange {\n    field: string;\n    oldValue: any;\n    newValue: any;\n    type: 'added' | 'modified' | 'removed';\n}\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\security-types.d.ts",
        "start": 167,
        "end": 263,
        "startLoc": {
          "line": 167,
          "column": 1,
          "position": 1607
        },
        "endLoc": {
          "line": 263,
          "column": 7,
          "position": 2449
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\security-types.ts",
        "start": 198,
        "end": 300,
        "startLoc": {
          "line": 198,
          "column": 1,
          "position": 1643
        },
        "endLoc": {
          "line": 300,
          "column": 80,
          "position": 2491
        }
      }
    },
    {
      "format": "typescript",
      "lines": 69,
      "fragment": "export interface AccessControl {\n    id: string;\n    userId: string;\n    organizationId: string;\n    resource: string;\n    permissions: Permission[];\n    roles: Role[];\n    conditions: AccessCondition[];\n    status: 'active' | 'inactive' | 'suspended' | 'expired';\n    grantedBy: string;\n    grantedAt: Date;\n    expiresAt?: Date;\n    lastUsed?: Date;\n    metadata: Record<string, any>;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface Permission {\n    id: string;\n    name: string;\n    description: string;\n    resource: string;\n    actions: string[];\n    conditions?: AccessCondition[];\n    metadata: Record<string, any>;\n}\nexport interface Role {\n    id: string;\n    name: string;\n    description: string;\n    permissions: string[];\n    organizationId: string;\n    isSystem: boolean;\n    metadata: Record<string, any>;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface AccessCondition {\n    type: 'time' | 'location' | 'device' | 'ip' | 'mfa' | 'risk';\n    operator: 'equals' | 'not_equals' | 'contains' | 'greater_than' | 'less_than' | 'between';\n    value: any;\n    metadata?: Record<string, any>;\n}\nexport interface SecurityPolicy {\n    id: string;\n    name: string;\n    description: string;\n    type: 'access' | 'data' | 'network' | 'application' | 'incident';\n    rules: SecurityPolicyRule[];\n    organizationId: string;\n    status: 'active' | 'inactive' | 'draft';\n    priority: number;\n    effectiveDate: Date;\n    expirationDate?: Date;\n    createdBy: string;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface SecurityPolicyRule {\n    id: string;\n    name: string;\n    description: string;\n    condition: string;\n    action: 'allow' | 'deny' | 'log' | 'alert' | 'quarantine';\n    priority: number;\n    enabled: boolean;\n    metadata: Record<string, any>;\n}\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\security-types.d.ts",
        "start": 263,
        "end": 331,
        "startLoc": {
          "line": 263,
          "column": 1,
          "position": 2449
        },
        "endLoc": {
          "line": 331,
          "column": 7,
          "position": 3042
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\security-types.ts",
        "start": 304,
        "end": 378,
        "startLoc": {
          "line": 304,
          "column": 1,
          "position": 2498
        },
        "endLoc": {
          "line": 378,
          "column": 80,
          "position": 3097
        }
      }
    },
    {
      "format": "typescript",
      "lines": 64,
      "fragment": "export interface SecurityIncident {\n    id: string;\n    title: string;\n    description: string;\n    severity: 'low' | 'medium' | 'high' | 'critical';\n    status: 'new' | 'assigned' | 'in_progress' | 'resolved' | 'closed';\n    category: 'malware' | 'phishing' | 'ddos' | 'data_breach' | 'insider_threat' | 'system_compromise' | 'other';\n    subcategory?: string;\n    organizationId: string;\n    reportedBy: string;\n    assignedTo?: string;\n    reportedAt: Date;\n    detectedAt?: Date;\n    resolvedAt?: Date;\n    closedAt?: Date;\n    affectedSystems: string[];\n    affectedUsers: string[];\n    dataAtRisk: string[];\n    impact: string;\n    rootCause?: string;\n    resolution?: string;\n    lessonsLearned?: string;\n    actions: IncidentAction[];\n    timeline: IncidentTimelineEvent[];\n    evidence: IncidentEvidence[];\n    tags: string[];\n    metadata: Record<string, any>;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface IncidentAction {\n    id: string;\n    type: 'contain' | 'investigate' | 'remediate' | 'communicate' | 'escalate' | 'document';\n    description: string;\n    status: 'pending' | 'in_progress' | 'completed' | 'cancelled';\n    assignedTo?: string;\n    dueDate?: Date;\n    completedAt?: Date;\n    result?: string;\n    evidence: string[];\n}\nexport interface IncidentTimelineEvent {\n    id: string;\n    timestamp: Date;\n    event: string;\n    description: string;\n    actor: string;\n    type: 'detection' | 'response' | 'investigation' | 'resolution' | 'communication';\n    metadata: Record<string, any>;\n}\nexport interface IncidentEvidence {\n    id: string;\n    type: 'log' | 'screenshot' | 'file' | 'network_capture' | 'memory_dump' | 'other';\n    title: string;\n    description: string;\n    fileUrl?: string;\n    content?: string;\n    collectedBy: string;\n    collectedAt: Date;\n    verifiedBy?: string;\n    verifiedAt?: Date;\n    chainOfCustody: string[];\n}\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\security-types.d.ts",
        "start": 331,
        "end": 394,
        "startLoc": {
          "line": 331,
          "column": 1,
          "position": 3042
        },
        "endLoc": {
          "line": 394,
          "column": 7,
          "position": 3633
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\security-types.ts",
        "start": 382,
        "end": 449,
        "startLoc": {
          "line": 382,
          "column": 1,
          "position": 3104
        },
        "endLoc": {
          "line": 449,
          "column": 80,
          "position": 3699
        }
      }
    },
    {
      "format": "typescript",
      "lines": 52,
      "fragment": "export interface Vulnerability {\n    id: string;\n    cveId?: string;\n    title: string;\n    description: string;\n    severity: 'low' | 'medium' | 'high' | 'critical';\n    cvssScore?: number;\n    cvssVector?: string;\n    affectedSystems: string[];\n    organizationId: string;\n    discoveredAt: Date;\n    reportedBy: string;\n    status: 'new' | 'confirmed' | 'in_progress' | 'resolved' | 'accepted_risk';\n    assignedTo?: string;\n    dueDate?: Date;\n    resolvedAt?: Date;\n    resolution?: string;\n    references: string[];\n    tags: string[];\n    metadata: Record<string, any>;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface VulnerabilityScan {\n    id: string;\n    name: string;\n    description: string;\n    targetSystems: string[];\n    scanType: 'network' | 'web' | 'database' | 'application' | 'comprehensive';\n    status: 'scheduled' | 'running' | 'completed' | 'failed' | 'cancelled';\n    organizationId: string;\n    initiatedBy: string;\n    scheduledAt: Date;\n    startedAt?: Date;\n    completedAt?: Date;\n    vulnerabilities: string[];\n    summary: VulnerabilityScanSummary;\n    reportUrl?: string;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface VulnerabilityScanSummary {\n    totalVulnerabilities: number;\n    criticalCount: number;\n    highCount: number;\n    mediumCount: number;\n    lowCount: number;\n    systemsScanned: number;\n    systemsWithVulnerabilities: number;\n    riskScore: number;\n}\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\security-types.d.ts",
        "start": 394,
        "end": 445,
        "startLoc": {
          "line": 394,
          "column": 1,
          "position": 3633
        },
        "endLoc": {
          "line": 445,
          "column": 7,
          "position": 4064
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\security-types.ts",
        "start": 453,
        "end": 507,
        "startLoc": {
          "line": 453,
          "column": 1,
          "position": 3706
        },
        "endLoc": {
          "line": 507,
          "column": 80,
          "position": 4140
        }
      }
    },
    {
      "format": "typescript",
      "lines": 67,
      "fragment": "export interface CreateSecurityEventRequest {\n    type: SecurityEvent['type'];\n    severity: SecurityEvent['severity'];\n    source: string;\n    details: Record<string, any>;\n    category: string;\n    subcategory?: string;\n    tags: string[];\n    metadata: Record<string, any>;\n    ipAddress?: string;\n    userAgent?: string;\n    sessionId?: string;\n    resource?: string;\n    action?: string;\n    result?: SecurityEvent['result'];\n}\nexport interface CreateComplianceRequirementRequest {\n    standard: ComplianceRequirement['standard'];\n    requirement: string;\n    description: string;\n    category: string;\n    subcategory?: string;\n    priority: ComplianceRequirement['priority'];\n    tags: string[];\n    metadata: Record<string, any>;\n}\nexport interface CreateAuditLogRequest {\n    eventType: string;\n    resource: string;\n    action: string;\n    result: AuditLog['result'];\n    details: Record<string, any>;\n    category: string;\n    subcategory?: string;\n    tags: string[];\n    metadata: Record<string, any>;\n    ipAddress?: string;\n    userAgent?: string;\n    sessionId?: string;\n    requestId?: string;\n    duration?: number;\n}\nexport interface CreateSecurityIncidentRequest {\n    title: string;\n    description: string;\n    severity: SecurityIncident['severity'];\n    category: SecurityIncident['category'];\n    subcategory?: string;\n    affectedSystems: string[];\n    affectedUsers: string[];\n    dataAtRisk: string[];\n    impact: string;\n    tags: string[];\n    metadata: Record<string, any>;\n}\nexport interface SecurityResponse<T = any> {\n    success: boolean;\n    data: T;\n    message?: string;\n    error?: string;\n    metadata?: {\n        timestamp: Date;\n        executionTime: number;\n        riskLevel: 'low' | 'medium' | 'high' | 'critical';\n    };\n}\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\security-types.d.ts",
        "start": 445,
        "end": 511,
        "startLoc": {
          "line": 445,
          "column": 1,
          "position": 4064
        },
        "endLoc": {
          "line": 511,
          "column": 7,
          "position": 4613
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\security-types.ts",
        "start": 511,
        "end": 582,
        "startLoc": {
          "line": 511,
          "column": 1,
          "position": 4147
        },
        "endLoc": {
          "line": 582,
          "column": 80,
          "position": 4701
        }
      }
    },
    {
      "format": "typescript",
      "lines": 45,
      "fragment": "export interface SecurityConfig {\n    threatDetection: boolean;\n    realTimeMonitoring: boolean;\n    autoIncidentResponse: boolean;\n    vulnerabilityScanning: boolean;\n    accessControl: boolean;\n    auditLogging: boolean;\n    encryption: boolean;\n    mfa: boolean;\n    sessionManagement: boolean;\n    rateLimiting: boolean;\n}\nexport interface ComplianceConfig {\n    gdpr: boolean;\n    sox: boolean;\n    hipaa: boolean;\n    pciDss: boolean;\n    iso27001: boolean;\n    soc2: boolean;\n    nist: boolean;\n    cis: boolean;\n    autoAssessment: boolean;\n    reporting: boolean;\n}\nexport interface AuditConfig {\n    comprehensiveLogging: boolean;\n    realTimeAuditing: boolean;\n    auditReporting: boolean;\n    forensicAnalysis: boolean;\n    dataRetention: number;\n    logRetention: number;\n    encryption: boolean;\n    integrity: boolean;\n}\nexport interface ThreatDetectionConfig {\n    aiDetection: boolean;\n    behavioralAnalysis: boolean;\n    anomalyDetection: boolean;\n    threatIntelligence: boolean;\n    incidentResponse: boolean;\n    threatHunting: boolean;\n    realTimeAnalysis: boolean;\n    machineLearning: boolean;\n}\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\security-types.d.ts",
        "start": 511,
        "end": 555,
        "startLoc": {
          "line": 511,
          "column": 1,
          "position": 4613
        },
        "endLoc": {
          "line": 555,
          "column": 7,
          "position": 4905
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\security-types.ts",
        "start": 586,
        "end": 634,
        "startLoc": {
          "line": 586,
          "column": 1,
          "position": 4708
        },
        "endLoc": {
          "line": 634,
          "column": 80,
          "position": 5004
        }
      }
    },
    {
      "format": "typescript",
      "lines": 68,
      "fragment": "issuer: string;\n        audience: string;\n    };\n    rateLimiting: {\n        windowMs: number;\n        maxRequests: number;\n        skipSuccessfulRequests: boolean;\n        skipFailedRequests: boolean;\n        keyGenerator: (req: any) => string;\n    };\n    csrf: {\n        enabled: boolean;\n        secret: string;\n        tokenLength: number;\n        cookieName: string;\n        headerName: string;\n    };\n    sanitization: {\n        enabled: boolean;\n        allowedTags: string[];\n        allowedAttributes: Record<string, string[]>;\n        maxLength: number;\n    };\n    encryption: {\n        algorithm: string;\n        keyLength: number;\n        ivLength: number;\n    };\n    session: {\n        secret: string;\n        maxAge: number;\n        secure: boolean;\n        httpOnly: boolean;\n        sameSite: 'strict' | 'lax' | 'none';\n    };\n}\ninterface SecurityEvent {\n    id: string;\n    type: 'authentication' | 'authorization' | 'rate_limit' | 'csrf' | 'xss' | 'injection' | 'brute_force' | 'suspicious_activity';\n    severity: 'low' | 'medium' | 'high' | 'critical';\n    source: {\n        ip: string;\n        userAgent: string;\n        userId?: string;\n        organizationId?: string;\n    };\n    details: {\n        endpoint?: string;\n        method?: string;\n        payload?: any;\n        reason: string;\n        metadata?: Record<string, any>;\n    };\n    timestamp: string;\n    blocked: boolean;\n    action: 'logged' | 'blocked' | 'rate_limited' | 'redirected';\n}\ninterface SecurityStats {\n    total: number;\n    byType: Record<string, number>;\n    bySeverity: Record<string, number>;\n    bySource: Record<string, number>;\n    last24Hours: number;\n    lastHour: number;\n    blocked: number;\n    rateLimited: number;\n}\ndeclare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\security-manager.service.d.ts",
        "start": 7,
        "end": 74,
        "startLoc": {
          "line": 7,
          "column": 9,
          "position": 41
        },
        "endLoc": {
          "line": 74,
          "column": 8,
          "position": 570
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\security-manager.service.ts",
        "start": 13,
        "end": 83,
        "startLoc": {
          "line": 13,
          "column": 5,
          "position": 73
        },
        "endLoc": {
          "line": 83,
          "column": 10,
          "position": 605
        }
      }
    },
    {
      "format": "javascript",
      "lines": 49,
      "fragment": ");\n                }\n            }\n        }\n        catch (error) {\n            structuredLogger.error('Login attempt recording error', error, { email, ipAddress });\n        }\n    }\n    async isIPBlocked(ipAddress) {\n        try {\n            const redis = getRedisService();\n            const blocked = await redis.get(`blocked_ip:${ipAddress}`);\n            return blocked !== null;\n        }\n        catch (error) {\n            structuredLogger.error('IP block check error', error, { ipAddress });\n            return false;\n        }\n    }\n    async blockIP(ipAddress, reason) {\n        try {\n            const redis = getRedisService();\n            await redis.setex(`blocked_ip:${ipAddress}`, this.config.lockoutDuration, reason);\n            this.blockedIPs.add(ipAddress);\n            structuredLogger.warn('IP blocked', { ipAddress, reason });\n        }\n        catch (error) {\n            structuredLogger.error('IP block error', error, { ipAddress, reason });\n        }\n    }\n    async unblockIP(ipAddress) {\n        try {\n            const redis = getRedisService();\n            await redis.del(`blocked_ip:${ipAddress}`);\n            this.blockedIPs.delete(ipAddress);\n            structuredLogger.info('IP unblocked', { ipAddress });\n        }\n        catch (error) {\n            structuredLogger.error('IP unblock error', error, { ipAddress });\n        }\n    }\n    async detectSuspiciousActivity(userId, organizationId, action, ipAddress, userAgent, details) {\n        try {\n            const key = `suspicious_activity:${userId}:${ipAddress}`;\n            const redis = getRedisService();\n            const count = await redis.incr(key);\n            await redis.expire(key, 3600);\n            if (count >= this.config.suspiciousActivityThreshold) {\n                await this.createSecurityEvent",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\security-consolidated.service.js",
        "start": 256,
        "end": 304,
        "startLoc": {
          "line": 256,
          "column": 9,
          "position": 2369
        },
        "endLoc": {
          "line": 304,
          "column": 20,
          "position": 2863
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\security.service.js",
        "start": 52,
        "end": 100,
        "startLoc": {
          "line": 52,
          "column": 2,
          "position": 453
        },
        "endLoc": {
          "line": 100,
          "column": 20,
          "position": 947
        }
      }
    },
    {
      "format": "javascript",
      "lines": 47,
      "fragment": ");\n                return true;\n            }\n            return false;\n        }\n        catch (error) {\n            structuredLogger.error('Suspicious activity detection error', error, { userId, action });\n            return false;\n        }\n    }\n    encryptData(data) {\n        try {\n            const algorithm = 'aes-256-gcm';\n            const key = crypto.scryptSync(this.config.dataEncryptionKey, 'salt', 32);\n            const iv = crypto.randomBytes(16);\n            const cipher = crypto.createCipher(algorithm, key);\n            cipher.setAAD(Buffer.from('econeura', 'utf8'));\n            let encrypted = cipher.update(data, 'utf8', 'hex');\n            encrypted += cipher.final('hex');\n            const authTag = cipher.getAuthTag();\n            return `${iv.toString('hex')}:${authTag.toString('hex')}:${encrypted}`;\n        }\n        catch (error) {\n            structuredLogger.error('Data encryption error', error);\n            throw new Error('Failed to encrypt data');\n        }\n    }\n    decryptData(encryptedData) {\n        try {\n            const algorithm = 'aes-256-gcm';\n            const key = crypto.scryptSync(this.config.dataEncryptionKey, 'salt', 32);\n            const [ivHex, authTagHex, encrypted] = encryptedData.split(':');\n            const iv = Buffer.from(ivHex, 'hex');\n            const authTag = Buffer.from(authTagHex, 'hex');\n            const decipher = crypto.createDecipher(algorithm, key);\n            decipher.setAAD(Buffer.from('econeura', 'utf8'));\n            decipher.setAuthTag(authTag);\n            let decrypted = decipher.update(encrypted, 'hex', 'utf8');\n            decrypted += decipher.final('utf8');\n            return decrypted;\n        }\n        catch (error) {\n            structuredLogger.error('Data decryption error', error);\n            throw new Error('Failed to decrypt data');\n        }\n    }\n    async createComplianceRequirement",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\security-consolidated.service.js",
        "start": 317,
        "end": 363,
        "startLoc": {
          "line": 317,
          "column": 7,
          "position": 2975
        },
        "endLoc": {
          "line": 363,
          "column": 28,
          "position": 3489
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\security.service.js",
        "start": 108,
        "end": 154,
        "startLoc": {
          "line": 108,
          "column": 2,
          "position": 1000
        },
        "endLoc": {
          "line": 154,
          "column": 15,
          "position": 1514
        }
      }
    },
    {
      "format": "javascript",
      "lines": 30,
      "fragment": "}\n    async recordAuditLog(auditLog) {\n        try {\n            const log = {\n                id: crypto.randomUUID(),\n                timestamp: new Date(),\n                ...auditLog\n            };\n            const redis = getRedisService();\n            await redis.lpush('audit_logs', JSON.stringify(log));\n            await redis.ltrim('audit_logs', 0, 10000);\n            structuredLogger.info('Audit log recorded', log);\n        }\n        catch (error) {\n            structuredLogger.error('Audit log recording error', error, auditLog);\n        }\n    }\n    async recordSecurityEvent(event) {\n        try {\n            const securityEvent = {\n                id: crypto.randomUUID(),\n                timestamp: new Date(),\n                ...event\n            };\n            const redis = getRedisService();\n            await redis.lpush('security_events', JSON.stringify(securityEvent));\n            await redis.ltrim('security_events', 0, 5000);\n            const logLevel = this.getLogLevel(securityEvent.severity);\n            structuredLogger[logLevel]('Security event recorded', securityEvent);\n            if (securityEvent.severity === 'critical'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\security-consolidated.service.js",
        "start": 520,
        "end": 549,
        "startLoc": {
          "line": 520,
          "column": 5,
          "position": 4963
        },
        "endLoc": {
          "line": 549,
          "column": 11,
          "position": 5254
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\security.service.js",
        "start": 153,
        "end": 182,
        "startLoc": {
          "line": 153,
          "column": 5,
          "position": 1509
        },
        "endLoc": {
          "line": 182,
          "column": 11,
          "position": 1800
        }
      }
    },
    {
      "format": "javascript",
      "lines": 59,
      "fragment": ") {\n                await this.sendSecurityAlert(securityEvent);\n            }\n        }\n        catch (error) {\n            structuredLogger.error('Security event recording error', error, event);\n        }\n    }\n    validateInput(data, schema) {\n        const errors = [];\n        try {\n            for (const [field, rules] of Object.entries(schema)) {\n                const value = data[field];\n                if (rules.required && (value === undefined || value === null || value === '')) {\n                    errors.push(`${field} is required`);\n                    continue;\n                }\n                if (value !== undefined && value !== null) {\n                    if (rules.type && typeof value !== rules.type) {\n                        errors.push(`${field} must be of type ${rules.type}`);\n                    }\n                    if (rules.minLength && value.length < rules.minLength) {\n                        errors.push(`${field} must be at least ${rules.minLength} characters long`);\n                    }\n                    if (rules.maxLength && value.length > rules.maxLength) {\n                        errors.push(`${field} cannot exceed ${rules.maxLength} characters`);\n                    }\n                    if (rules.pattern && !rules.pattern.test(value)) {\n                        errors.push(`${field} format is invalid`);\n                    }\n                    if (rules.min !== undefined && value < rules.min) {\n                        errors.push(`${field} must be at least ${rules.min}`);\n                    }\n                    if (rules.max !== undefined && value > rules.max) {\n                        errors.push(`${field} cannot exceed ${rules.max}`);\n                    }\n                }\n            }\n            return {\n                isValid: errors.length === 0,\n                errors\n            };\n        }\n        catch (error) {\n            structuredLogger.error('Input validation error', error, { data, schema });\n            return {\n                isValid: false,\n                errors: ['Validation error occurred']\n            };\n        }\n    }\n    sanitizeInput(input) {\n        return input\n            .trim()\n            .replace(/[<>]/g, '')\n            .replace(/javascript:/gi, '')\n            .replace(/on\\w+=/gi, '');\n    }\n    generateId",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\security-consolidated.service.js",
        "start": 549,
        "end": 607,
        "startLoc": {
          "line": 549,
          "column": 11,
          "position": 5255
        },
        "endLoc": {
          "line": 607,
          "column": 11,
          "position": 5866
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\security.service.js",
        "start": 182,
        "end": 240,
        "startLoc": {
          "line": 182,
          "column": 11,
          "position": 1801
        },
        "endLoc": {
          "line": 240,
          "column": 12,
          "position": 2412
        }
      }
    },
    {
      "format": "javascript",
      "lines": 59,
      "fragment": ";\n        }\n    }\n    startSecurityMonitoring() {\n        setInterval(() => {\n            this.cleanupExpiredBlocks();\n        }, 3600000);\n        setInterval(() => {\n            this.cleanupOldLogs();\n        }, 86400000);\n    }\n    async cleanupExpiredBlocks() {\n        try {\n            const redis = getRedisService();\n            const keys = await redis.keys('blocked_ip:*');\n            for (const key of keys) {\n                const ttl = await redis.ttl(key);\n                if (ttl === -1) {\n                    await redis.del(key);\n                }\n            }\n        }\n        catch (error) {\n            structuredLogger.error('Cleanup expired blocks error', error);\n        }\n    }\n    async cleanupOldLogs() {\n        try {\n            const redis = getRedisService();\n            const cutoffDate = new Date();\n            cutoffDate.setDate(cutoffDate.getDate() - this.config.auditLogRetention);\n            const auditLogs = await redis.lrange('audit_logs', 0, -1);\n            const filteredAuditLogs = auditLogs.filter(log => {\n                const logData = JSON.parse(log);\n                return new Date(logData.timestamp) > cutoffDate;\n            });\n            if (filteredAuditLogs.length !== auditLogs.length) {\n                await redis.del('audit_logs');\n                if (filteredAuditLogs.length > 0) {\n                    await redis.lpush('audit_logs', ...filteredAuditLogs);\n                }\n            }\n            const securityEvents = await redis.lrange('security_events', 0, -1);\n            const filteredSecurityEvents = securityEvents.filter(event => {\n                const eventData = JSON.parse(event);\n                return new Date(eventData.timestamp) > cutoffDate;\n            });\n            if (filteredSecurityEvents.length !== securityEvents.length) {\n                await redis.del('security_events');\n                if (filteredSecurityEvents.length > 0) {\n                    await redis.lpush('security_events', ...filteredSecurityEvents);\n                }\n            }\n        }\n        catch (error) {\n            structuredLogger.error('Cleanup old logs error', error);\n        }\n    }\n    async",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\security-consolidated.service.js",
        "start": 718,
        "end": 776,
        "startLoc": {
          "line": 718,
          "column": 7,
          "position": 7003
        },
        "endLoc": {
          "line": 776,
          "column": 6,
          "position": 7585
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\security.service.js",
        "start": 254,
        "end": 312,
        "startLoc": {
          "line": 254,
          "column": 2,
          "position": 2539
        },
        "endLoc": {
          "line": 312,
          "column": 13,
          "position": 3121
        }
      }
    },
    {
      "format": "typescript",
      "lines": 53,
      "fragment": "export interface SecurityEvent {\n    id: string;\n    type: 'authentication' | 'authorization' | 'data_access' | 'data_modification' | 'security_violation' | 'compliance_breach';\n    severity: 'low' | 'medium' | 'high' | 'critical';\n    userId?: string;\n    sessionId?: string;\n    ipAddress: string;\n    userAgent: string;\n    resource: string;\n    action: string;\n    result: 'success' | 'failure' | 'blocked';\n    details: Record<string, any>;\n    timestamp: Date;\n    riskScore: number;\n}\nexport interface ComplianceRule {\n    id: string;\n    name: string;\n    framework: 'GDPR' | 'SOX' | 'PCI-DSS' | 'HIPAA' | 'ISO27001';\n    description: string;\n    severity: 'low' | 'medium' | 'high' | 'critical';\n    enabled: boolean;\n    conditions: ComplianceCondition[];\n    actions: ComplianceAction[];\n    lastChecked: Date;\n    status: 'compliant' | 'non_compliant' | 'warning';\n}\nexport interface ComplianceCondition {\n    field: string;\n    operator: 'equals' | 'not_equals' | 'contains' | 'greater_than' | 'less_than';\n    value: any;\n    weight: number;\n}\nexport interface ComplianceAction {\n    type: 'alert' | 'block' | 'log' | 'notify' | 'auto_remediate';\n    parameters: Record<string, any>;\n}\nexport interface ThreatDetectionRule {\n    id: string;\n    name: string;\n    description: string;\n    enabled: boolean;\n    conditions: ThreatCondition[];\n    actions: ThreatAction[];\n    riskScore: number;\n    lastTriggered?: Date;\n}\nexport interface ThreatCondition {\n    field: string;\n    operator: 'equals' | 'not_equals' | 'contains' | 'regex' | 'frequency';\n    value: any;\n    timeWindow?: number;\n    threshold",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\security-compliance-enhanced.service.d.ts",
        "start": 1,
        "end": 53,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 53,
          "column": 10,
          "position": 494
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\security-compliance-enhanced.service.ts",
        "start": 19,
        "end": 75,
        "startLoc": {
          "line": 19,
          "column": 1,
          "position": 39
        },
        "endLoc": {
          "line": 75,
          "column": 11,
          "position": 537
        }
      }
    },
    {
      "format": "typescript",
      "lines": 30,
      "fragment": "threshold?: number;\n}\nexport interface ThreatAction {\n    type: 'block' | 'alert' | 'quarantine' | 'escalate' | 'log';\n    parameters: Record<string, any>;\n}\nexport interface SecurityPolicy {\n    id: string;\n    name: string;\n    description: string;\n    enabled: boolean;\n    rules: SecurityPolicyRule[];\n    lastUpdated: Date;\n    version: number;\n}\nexport interface SecurityPolicyRule {\n    id: string;\n    name: string;\n    condition: string;\n    action: 'allow' | 'deny' | 'require_mfa' | 'log' | 'alert';\n    priority: number;\n    enabled: boolean;\n}\nexport interface EncryptionConfig {\n    algorithm: string;\n    keySize: number;\n    mode: string;\n    padding: string;\n    keyRotationInterval: number;\n    lastKeyRotation",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\security-compliance-enhanced.service.d.ts",
        "start": 53,
        "end": 82,
        "startLoc": {
          "line": 53,
          "column": 5,
          "position": 494
        },
        "endLoc": {
          "line": 82,
          "column": 16,
          "position": 722
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\security-compliance-enhanced.service.ts",
        "start": 76,
        "end": 108,
        "startLoc": {
          "line": 76,
          "column": 3,
          "position": 540
        },
        "endLoc": {
          "line": 108,
          "column": 8,
          "position": 771
        }
      }
    },
    {
      "format": "typescript",
      "lines": 26,
      "fragment": "export interface RLSContext {\n    organizationId: string;\n    userId?: string;\n    role?: string;\n    permissions?: string[];\n    tenantId?: string;\n    requestId?: string;\n}\nexport interface RLSRule {\n    id: string;\n    name: string;\n    table: string;\n    condition: string;\n    organizationId: string;\n    isActive: boolean;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface RLSFilter {\n    organizationId: string;\n    userId?: string;\n    role?: string;\n    permissions?: string[];\n    tenantId?: string;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\rls.d.ts",
        "start": 1,
        "end": 26,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 26,
          "column": 8,
          "position": 178
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\rls.ts",
        "start": 3,
        "end": 31,
        "startLoc": {
          "line": 3,
          "column": 1,
          "position": 14
        },
        "endLoc": {
          "line": 31,
          "column": 6,
          "position": 195
        }
      }
    },
    {
      "format": "typescript",
      "lines": 305,
      "fragment": "export interface RLSPolicy {\n    id: string;\n    name: string;\n    description: string;\n    tableName: string;\n    schemaName: string;\n    policyType: 'select' | 'insert' | 'update' | 'delete' | 'all';\n    condition: string;\n    roles: string[];\n    users: string[];\n    organizations: string[];\n    dataCategories: string[];\n    version: string;\n    status: 'draft' | 'validated' | 'deployed' | 'failed' | 'rollback';\n    createdAt: Date;\n    updatedAt: Date;\n    deployedAt?: Date;\n    deployedBy?: string;\n    rollbackAt?: Date;\n    rollbackBy?: string;\n    metadata: Record<string, unknown>;\n    auditTrail: PolicyAuditEntry[];\n}\nexport interface PolicyAuditEntry {\n    id: string;\n    policyId: string;\n    action: 'created' | 'updated' | 'validated' | 'deployed' | 'rollback' | 'failed';\n    actor: string;\n    timestamp: Date;\n    details: Record<string, unknown>;\n    ipAddress: string;\n    userAgent: string;\n    signature: string;\n}\nexport interface CICDConfig {\n    id: string;\n    name: string;\n    description: string;\n    provider: 'github' | 'gitlab' | 'jenkins' | 'azure-devops';\n    repository: string;\n    branch: string;\n    pipeline: string;\n    triggers: string[];\n    validations: ValidationConfig[];\n    deployments: DeploymentConfig[];\n    notifications: NotificationConfig[];\n    status: 'active' | 'inactive' | 'error';\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface ValidationConfig {\n    id: string;\n    name: string;\n    type: 'syntax' | 'semantic' | 'performance' | 'security' | 'compliance';\n    enabled: boolean;\n    parameters: Record<string, unknown>;\n    timeout: number;\n    retries: number;\n}\nexport interface DeploymentConfig {\n    id: string;\n    name: string;\n    strategy: 'blue-green' | 'canary' | 'rolling' | 'feature-flag';\n    environment: string;\n    enabled: boolean;\n    parameters: Record<string, unknown>;\n    rollbackThreshold: number;\n    monitoringPeriod: number;\n}\nexport interface NotificationConfig {\n    id: string;\n    name: string;\n    type: 'email' | 'slack' | 'teams' | 'webhook';\n    enabled: boolean;\n    recipients: string[];\n    events: string[];\n    parameters: Record<string, unknown>;\n}\nexport interface PolicyTemplate {\n    id: string;\n    name: string;\n    description: string;\n    category: 'user' | 'role' | 'organization' | 'data' | 'custom';\n    template: string;\n    variables: PolicyVariable[];\n    examples: PolicyExample[];\n    documentation: string;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface PolicyVariable {\n    id: string;\n    name: string;\n    type: 'string' | 'number' | 'boolean' | 'array' | 'object';\n    required: boolean;\n    defaultValue?: unknown;\n    description: string;\n    validation?: string;\n}\nexport interface PolicyExample {\n    id: string;\n    name: string;\n    description: string;\n    input: Record<string, unknown>;\n    output: string;\n    explanation: string;\n}\nexport interface DatabaseSchema {\n    id: string;\n    name: string;\n    tables: DatabaseTable[];\n    relationships: DatabaseRelationship[];\n    metadata: Record<string, unknown>;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface DatabaseTable {\n    id: string;\n    name: string;\n    schema: string;\n    columns: DatabaseColumn[];\n    indexes: DatabaseIndex[];\n    constraints: DatabaseConstraint[];\n    metadata: Record<string, unknown>;\n}\nexport interface DatabaseColumn {\n    id: string;\n    name: string;\n    type: string;\n    nullable: boolean;\n    defaultValue?: unknown;\n    isPrimaryKey: boolean;\n    isForeignKey: boolean;\n    references?: string;\n    metadata: Record<string, unknown>;\n}\nexport interface DatabaseIndex {\n    id: string;\n    name: string;\n    columns: string[];\n    unique: boolean;\n    type: 'btree' | 'hash' | 'gin' | 'gist';\n    metadata: Record<string, unknown>;\n}\nexport interface DatabaseConstraint {\n    id: string;\n    name: string;\n    type: 'primary_key' | 'foreign_key' | 'unique' | 'check';\n    columns: string[];\n    definition: string;\n    metadata: Record<string, unknown>;\n}\nexport interface DatabaseRelationship {\n    id: string;\n    name: string;\n    type: 'one_to_one' | 'one_to_many' | 'many_to_many';\n    sourceTable: string;\n    targetTable: string;\n    sourceColumns: string[];\n    targetColumns: string[];\n    metadata: Record<string, unknown>;\n}\nexport interface PolicyGenerationRequest {\n    id: string;\n    schemaId: string;\n    tableName: string;\n    policyType: 'select' | 'insert' | 'update' | 'delete' | 'all';\n    templateId?: string;\n    variables: Record<string, unknown>;\n    rules: PolicyRule[];\n    options: PolicyGenerationOptions;\n    requestedBy: string;\n    status: 'pending' | 'processing' | 'completed' | 'failed';\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface PolicyRule {\n    id: string;\n    type: 'user' | 'role' | 'organization' | 'data' | 'custom';\n    condition: string;\n    priority: number;\n    enabled: boolean;\n    metadata: Record<string, unknown>;\n}\nexport interface PolicyGenerationOptions {\n    optimize: boolean;\n    validate: boolean;\n    test: boolean;\n    deploy: boolean;\n    environment: string;\n    metadata: Record<string, unknown>;\n}\nexport interface PolicyValidationResult {\n    id: string;\n    policyId: string;\n    validationType: 'syntax' | 'semantic' | 'performance' | 'security' | 'compliance';\n    status: 'passed' | 'failed' | 'warning';\n    score: number;\n    issues: ValidationIssue[];\n    recommendations: string[];\n    executedAt: Date;\n    executedBy: string;\n}\nexport interface ValidationIssue {\n    id: string;\n    type: 'error' | 'warning' | 'info';\n    severity: 'low' | 'medium' | 'high' | 'critical';\n    message: string;\n    line?: number;\n    column?: number;\n    suggestion?: string;\n    metadata: Record<string, unknown>;\n}\nexport interface PolicyDeployment {\n    id: string;\n    policyId: string;\n    environment: string;\n    strategy: 'blue-green' | 'canary' | 'rolling' | 'feature-flag';\n    status: 'pending' | 'deploying' | 'deployed' | 'failed' | 'rollback';\n    deployedAt?: Date;\n    deployedBy: string;\n    rollbackAt?: Date;\n    rollbackBy?: string;\n    rollbackReason?: string;\n    metadata: Record<string, unknown>;\n    auditTrail: DeploymentAuditEntry[];\n}\nexport interface DeploymentAuditEntry {\n    id: string;\n    deploymentId: string;\n    action: 'started' | 'completed' | 'failed' | 'rollback_started' | 'rollback_completed';\n    actor: string;\n    timestamp: Date;\n    details: Record<string, unknown>;\n    ipAddress: string;\n    userAgent: string;\n}\nexport interface RLSStats {\n    totalPolicies: number;\n    activePolicies: number;\n    draftPolicies: number;\n    deployedPolicies: number;\n    failedPolicies: number;\n    totalDeployments: number;\n    successfulDeployments: number;\n    failedDeployments: number;\n    rollbacks: number;\n    averageDeploymentTime: number;\n    averageValidationTime: number;\n    averageGenerationTime: number;\n}\nexport interface PolicyMetrics {\n    policyId: string;\n    name: string;\n    tableName: string;\n    executions: number;\n    averageExecutionTime: number;\n    cacheHitRate: number;\n    errorRate: number;\n    lastExecuted: Date;\n    performanceScore: number;\n    securityScore: number;\n    complianceScore: number;\n}\nexport interface CICDIntegration {\n    id: string;\n    name: string;\n    provider: 'github' | 'gitlab' | 'jenkins' | 'azure-devops';\n    repository: string;\n    branch: string;\n    pipeline: string;\n    webhookUrl: string;\n    secret: string;\n    events: string[];\n    status: 'active' | 'inactive' | 'error';\n    lastSync: Date;\n    metadata: Record<string, unknown>;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface PolicyTest {\n    id: string;\n    policyId: string;\n    name: string;\n    description: string;\n    testType: 'unit' | 'integration' | 'performance' | 'security';\n    testData: Record<string, unknown>;\n    expectedResult: unknown;\n    actualResult?: unknown;\n    status: 'pending' | 'running' | 'passed' | 'failed';\n    executedAt?: Date;\n    executedBy: string;\n    metadata: Record<string, unknown>;\n}\nexport interface PolicyDocumentation {\n    id: string;\n    policyId: string;\n    title: string;\n    content: string;\n    format: 'markdown' | 'html' | 'pdf';\n    version: string;\n    generatedAt: Date;\n    generatedBy: string;\n    metadata: Record<string, unknown>;\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\rls-types.d.ts",
        "start": 1,
        "end": 305,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 305,
          "column": 2,
          "position": 2589
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\rls-types.ts",
        "start": 2,
        "end": 332,
        "startLoc": {
          "line": 2,
          "column": 1,
          "position": 2
        },
        "endLoc": {
          "line": 332,
          "column": 2,
          "position": 2617
        }
      }
    },
    {
      "format": "javascript",
      "lines": 30,
      "fragment": ",\n                variables: [\n                    {\n                        id: 'policy_name',\n                        name: 'policy_name',\n                        type: 'string',\n                        required: true,\n                        description: 'Name of the policy'\n                    },\n                    {\n                        id: 'schema_name',\n                        name: 'schema_name',\n                        type: 'string',\n                        required: true,\n                        description: 'Database schema name'\n                    },\n                    {\n                        id: 'table_name',\n                        name: 'table_name',\n                        type: 'string',\n                        required: true,\n                        description: 'Database table name'\n                    },\n                    {\n                        id: 'policy_type',\n                        name: 'policy_type',\n                        type: 'string',\n                        required: true,\n                        defaultValue: 'SELECT',\n                        description: 'Type of policy'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\rls-policy-generator.service.js",
        "start": 91,
        "end": 120,
        "startLoc": {
          "line": 91,
          "column": 34,
          "position": 522
        },
        "endLoc": {
          "line": 120,
          "column": 17,
          "position": 695
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\rls-policy-generator.service.js",
        "start": 21,
        "end": 50,
        "startLoc": {
          "line": 21,
          "column": 38,
          "position": 135
        },
        "endLoc": {
          "line": 50,
          "column": 55,
          "position": 308
        }
      }
    },
    {
      "format": "javascript",
      "lines": 39,
      "fragment": ",\n                variables: [\n                    {\n                        id: 'policy_name',\n                        name: 'policy_name',\n                        type: 'string',\n                        required: true,\n                        description: 'Name of the policy'\n                    },\n                    {\n                        id: 'schema_name',\n                        name: 'schema_name',\n                        type: 'string',\n                        required: true,\n                        description: 'Database schema name'\n                    },\n                    {\n                        id: 'table_name',\n                        name: 'table_name',\n                        type: 'string',\n                        required: true,\n                        description: 'Database table name'\n                    },\n                    {\n                        id: 'policy_type',\n                        name: 'policy_type',\n                        type: 'string',\n                        required: true,\n                        defaultValue: 'SELECT',\n                        description: 'Type of policy'\n                    },\n                    {\n                        id: 'roles',\n                        name: 'roles',\n                        type: 'array',\n                        required: true,\n                        description: 'Roles that can access this policy'\n                    }\n                ]",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\rls-policy-generator.service.js",
        "start": 169,
        "end": 207,
        "startLoc": {
          "line": 169,
          "column": 59,
          "position": 957
        },
        "endLoc": {
          "line": 207,
          "column": 2,
          "position": 1177
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\rls-policy-generator.service.js",
        "start": 21,
        "end": 128,
        "startLoc": {
          "line": 21,
          "column": 38,
          "position": 135
        },
        "endLoc": {
          "line": 128,
          "column": 2,
          "position": 740
        }
      }
    },
    {
      "format": "javascript",
      "lines": 42,
      "fragment": ",\n                variables: [\n                    {\n                        id: 'policy_name',\n                        name: 'policy_name',\n                        type: 'string',\n                        required: true,\n                        description: 'Name of the policy'\n                    },\n                    {\n                        id: 'schema_name',\n                        name: 'schema_name',\n                        type: 'string',\n                        required: true,\n                        description: 'Database schema name'\n                    },\n                    {\n                        id: 'table_name',\n                        name: 'table_name',\n                        type: 'string',\n                        required: true,\n                        description: 'Database table name'\n                    },\n                    {\n                        id: 'policy_type',\n                        name: 'policy_type',\n                        type: 'string',\n                        required: true,\n                        defaultValue: 'SELECT',\n                        description: 'Type of policy'\n                    },\n                    {\n                        id: 'roles',\n                        name: 'roles',\n                        type: 'array',\n                        required: true,\n                        description: 'Roles that can access this policy'\n                    }\n                ],\n                examples: [\n                    {\n                        id: 'sensitivity_policy_example'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\rls-policy-generator.service.js",
        "start": 239,
        "end": 280,
        "startLoc": {
          "line": 239,
          "column": 67,
          "position": 1344
        },
        "endLoc": {
          "line": 280,
          "column": 29,
          "position": 1580
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\rls-policy-generator.service.js",
        "start": 21,
        "end": 210,
        "startLoc": {
          "line": 21,
          "column": 38,
          "position": 135
        },
        "endLoc": {
          "line": 210,
          "column": 21,
          "position": 1193
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "getDeploymentStats(): {\n        totalDeployments: number;\n        pendingDeployments: number;\n        deployingDeployments: number;\n        deployedDeployments: number;\n        failedDeployments: number;\n        rollbackDeployments: number;\n        averageDeploymentTime: number;\n        deploymentsByStrategy: Record<string, number>;\n        deploymentsByEnvironment: Record<string, number>;\n    };",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\rls-policy-deployer.service.d.ts",
        "start": 25,
        "end": 35,
        "startLoc": {
          "line": 25,
          "column": 5,
          "position": 317
        },
        "endLoc": {
          "line": 35,
          "column": 2,
          "position": 401
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\rls-policy-deployer.service.ts",
        "start": 427,
        "end": 437,
        "startLoc": {
          "line": 427,
          "column": 3,
          "position": 3580
        },
        "endLoc": {
          "line": 437,
          "column": 2,
          "position": 3665
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": ");\n        if (filters.tableName) {\n            policies = policies.filter(p => p.tableName === filters.tableName);\n        }\n        if (filters.operation) {\n            policies = policies.filter(p => p.configuration.operation === filters.operation || p.configuration.operation === 'ALL');\n        }\n        if (filters.isActive !== undefined) {\n            policies = policies.filter(p => p.configuration.isActive === filters.isActive);\n        }\n        if (filters.limit",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\rls-generativa.service.js",
        "start": 302,
        "end": 312,
        "startLoc": {
          "line": 302,
          "column": 15,
          "position": 2370
        },
        "endLoc": {
          "line": 312,
          "column": 6,
          "position": 2516
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\rls-tenant-policies.service.js",
        "start": 231,
        "end": 241,
        "startLoc": {
          "line": 231,
          "column": 9,
          "position": 1706
        },
        "endLoc": {
          "line": 241,
          "column": 23,
          "position": 1852
        }
      }
    },
    {
      "format": "javascript",
      "lines": 16,
      "fragment": "if (rule.conditions.context.role && rule.conditions.context.role !== context.role) {\n            return false;\n        }\n        if (rule.conditions.context.permissions) {\n            const hasRequiredPermissions = rule.conditions.context.permissions.every(perm => context.permissions.includes(perm));\n            if (!hasRequiredPermissions) {\n                return false;\n            }\n        }\n        if (rule.conditions.data.operation && rule.conditions.data.operation !== operation.type) {\n            return false;\n        }\n        if (rule.conditions.data.tableName && rule.conditions.data.tableName !== operation.tableName) {\n            return false;\n        }\n        return",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\rls-generativa.service.js",
        "start": 429,
        "end": 444,
        "startLoc": {
          "line": 429,
          "column": 9,
          "position": 3682
        },
        "endLoc": {
          "line": 444,
          "column": 7,
          "position": 3871
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\rls-tenant-policies.service.js",
        "start": 406,
        "end": 421,
        "startLoc": {
          "line": 406,
          "column": 9,
          "position": 3489
        },
        "endLoc": {
          "line": 421,
          "column": 3,
          "position": 3678
        }
      }
    },
    {
      "format": "javascript",
      "lines": 37,
      "fragment": "}\n        if (policy.accessRules.timeRestrictions) {\n            const now = new Date();\n            const currentHour = now.getHours();\n            const currentMinute = now.getMinutes();\n            const currentDay = now.getDay();\n            if (policy.accessRules.timeRestrictions.startTime) {\n                const [startHour, startMinute] = policy.accessRules.timeRestrictions.startTime.split(':').map(Number);\n                if (currentHour < startHour || (currentHour === startHour && currentMinute < startMinute)) {\n                    return false;\n                }\n            }\n            if (policy.accessRules.timeRestrictions.endTime) {\n                const [endHour, endMinute] = policy.accessRules.timeRestrictions.endTime.split(':').map(Number);\n                if (currentHour > endHour || (currentHour === endHour && currentMinute > endMinute)) {\n                    return false;\n                }\n            }\n            if (policy.accessRules.timeRestrictions.daysOfWeek &&\n                !policy.accessRules.timeRestrictions.daysOfWeek.includes(currentDay)) {\n                return false;\n            }\n        }\n        if (policy.accessRules.ipRestrictions) {\n            const userIP = context.ipAddress;\n            if (policy.accessRules.ipRestrictions.blockedIPs &&\n                policy.accessRules.ipRestrictions.blockedIPs.includes(userIP)) {\n                return false;\n            }\n            if (policy.accessRules.ipRestrictions.allowedIPs &&\n                !policy.accessRules.ipRestrictions.allowedIPs.includes(userIP)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    async logRLSAccess",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\rls-generativa.service.js",
        "start": 449,
        "end": 485,
        "startLoc": {
          "line": 449,
          "column": 9,
          "position": 3929
        },
        "endLoc": {
          "line": 485,
          "column": 13,
          "position": 4343
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\rls-tenant-policies.service.js",
        "start": 438,
        "end": 474,
        "startLoc": {
          "line": 438,
          "column": 9,
          "position": 3867
        },
        "endLoc": {
          "line": 474,
          "column": 16,
          "position": 4281
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ";\n        timeRestrictions?: {\n            startTime?: string;\n            endTime?: string;\n            daysOfWeek?: number[];\n            timezone?: string;\n        };\n        ipRestrictions?: {\n            allowedIPs?: string[];\n            blockedIPs?: string[];\n            allowedRanges?: string[];\n        };\n    };\n    metadata: {\n        createdBy: string;\n        lastModifiedBy: string;\n        version: number;\n        tags?: string[];\n        documentation?: string;\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\rls-generativa.service.d.ts",
        "start": 32,
        "end": 51,
        "startLoc": {
          "line": 32,
          "column": 2,
          "position": 255
        },
        "endLoc": {
          "line": 51,
          "column": 2,
          "position": 393
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\rls-tenant-policies.service.d.ts",
        "start": 33,
        "end": 52,
        "startLoc": {
          "line": 33,
          "column": 2,
          "position": 272
        },
        "endLoc": {
          "line": 52,
          "column": 11,
          "position": 410
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "?: string;\n            role?: string;\n            permissions?: string[];\n            sessionAttributes?: Record<string, any>;\n        };\n        data: {\n            tableName?: string;\n            columnName?: string;\n            operation?: string;\n            value?: any;\n        }",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\rls-generativa.service.d.ts",
        "start": 69,
        "end": 79,
        "startLoc": {
          "line": 69,
          "column": 15,
          "position": 507
        },
        "endLoc": {
          "line": 79,
          "column": 2,
          "position": 588
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\rls-tenant-policies.service.d.ts",
        "start": 79,
        "end": 89,
        "startLoc": {
          "line": 79,
          "column": 9,
          "position": 595
        },
        "endLoc": {
          "line": 89,
          "column": 9,
          "position": 676
        }
      }
    },
    {
      "format": "typescript",
      "lines": 43,
      "fragment": "interface ReporteConfig {\n    id: string;\n    nombre: string;\n    descripcion: string;\n    tipo: 'financiero' | 'operacional' | 'comercial' | 'recursos_humanos' | 'inventario' | 'personalizado';\n    organizacionId: string;\n    configuracion: {\n        formato: 'pdf' | 'excel' | 'csv';\n        idioma: 'es' | 'en' | 'fr' | 'de';\n        moneda: 'EUR' | 'USD' | 'GBP';\n        timezone: string;\n        incluirGraficos: boolean;\n        incluirDetalles: boolean;\n        incluirComparativas: boolean;\n        incluirProyecciones: boolean;\n    };\n    plantilla: {\n        header: {\n            logo: string;\n            titulo: string;\n            subtitulo: string;\n            fechaGeneracion: boolean;\n            numeroPagina: boolean;\n        };\n        secciones: Array<{\n            id: string;\n            titulo: string;\n            tipo: 'tabla' | 'grafico' | 'texto' | 'metricas' | 'kpi';\n            datos: any;\n            orden: number;\n            visible: boolean;\n        }>;\n        footer: {\n            texto: string;\n            contacto: string;\n            legal: string;\n        };\n    };\n    programacion: {\n        activa: boolean;\n        frecuencia: 'mensual' | 'trimestral' | 'anual';\n        diaMes: number;\n        hora",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\reportes-mensuales.service.d.ts",
        "start": 1,
        "end": 43,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 43,
          "column": 5,
          "position": 348
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\reportes-mensuales.service.ts",
        "start": 6,
        "end": 47,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 19
        },
        "endLoc": {
          "line": 47,
          "column": 8,
          "position": 366
        }
      }
    },
    {
      "format": "typescript",
      "lines": 54,
      "fragment": "timezone: string;\n        proximaEjecucion: string;\n        ultimaEjecucion?: string;\n    };\n    distribucion: {\n        email: {\n            activo: boolean;\n            destinatarios: string[];\n            asunto: string;\n            mensaje: string;\n        };\n        almacenamiento: {\n            activo: boolean;\n            ruta: string;\n            retencionDias: number;\n        };\n        webhook: {\n            activo: boolean;\n            url: string;\n            formato: 'json' | 'xml';\n        };\n    };\n    estado: 'activo' | 'inactivo' | 'error' | 'procesando';\n    creadoEn: string;\n    actualizadoEn: string;\n}\ninterface DatosReporte {\n    periodo: {\n        inicio: string;\n        fin: string;\n        mes: string;\n        año: number;\n    };\n    organizacion: {\n        id: string;\n        nombre: string;\n        logo: string;\n        direccion: string;\n        contacto: string;\n    };\n    resumen: {\n        totalVentas: number;\n        totalGastos: number;\n        beneficio: number;\n        margen: number;\n        crecimiento: number;\n    };\n    metricas: {\n        ventas: {\n            total: number;\n            porCategoria: Array<{\n                categoria: string;\n                monto: number;\n                porcentaje: number;",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\reportes-mensuales.service.d.ts",
        "start": 44,
        "end": 97,
        "startLoc": {
          "line": 44,
          "column": 9,
          "position": 355
        },
        "endLoc": {
          "line": 97,
          "column": 2,
          "position": 711
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\reportes-mensuales.service.ts",
        "start": 49,
        "end": 100,
        "startLoc": {
          "line": 49,
          "column": 5,
          "position": 378
        },
        "endLoc": {
          "line": 100,
          "column": 2,
          "position": 733
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "}>;\n            tendencia: 'creciente' | 'decreciente' | 'estable';\n        };\n        clientes: {\n            total: number;\n            nuevos: number;\n            activos: number;\n            inactivos: number;\n            satisfaccion: number;\n        };\n        productos: {\n            total: number;\n            masVendidos: Array<{\n                producto: string;\n                cantidad: number;\n                ingresos: number;",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\reportes-mensuales.service.d.ts",
        "start": 102,
        "end": 117,
        "startLoc": {
          "line": 102,
          "column": 13,
          "position": 741
        },
        "endLoc": {
          "line": 117,
          "column": 2,
          "position": 849
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\reportes-mensuales.service.ts",
        "start": 101,
        "end": 113,
        "startLoc": {
          "line": 101,
          "column": 2,
          "position": 756
        },
        "endLoc": {
          "line": 113,
          "column": 2,
          "position": 862
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "}>;\n            stockBajo: number;\n            rotacion: number;\n        };\n        finanzas: {\n            ingresos: number;\n            gastos: number;\n            beneficio: number;\n            margen: number;\n            flujoCaja: number;\n        };\n        operaciones: {\n            pedidos: number;\n            entregas: number;\n            devoluciones: number;\n            tiempoPromedio: number;\n        };\n    };\n    graficos: {\n        ventasMensuales: Array<{\n            mes: string;\n            monto: number;",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\reportes-mensuales.service.d.ts",
        "start": 118,
        "end": 139,
        "startLoc": {
          "line": 118,
          "column": 13,
          "position": 852
        },
        "endLoc": {
          "line": 139,
          "column": 2,
          "position": 987
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\reportes-mensuales.service.ts",
        "start": 113,
        "end": 132,
        "startLoc": {
          "line": 113,
          "column": 2,
          "position": 862
        },
        "endLoc": {
          "line": 132,
          "column": 2,
          "position": 996
        }
      }
    },
    {
      "format": "typescript",
      "lines": 57,
      "fragment": "}>;\n    };\n    comparativas: {\n        mesAnterior: {\n            ventas: number;\n            clientes: number;\n            beneficio: number;\n            crecimiento: number;\n        };\n        añoAnterior: {\n            ventas: number;\n            clientes: number;\n            beneficio: number;\n            crecimiento: number;\n        };\n        objetivo: {\n            ventas: number;\n            clientes: number;\n            beneficio: number;\n            cumplimiento: number;\n        };\n    };\n    proyecciones: {\n        proximoMes: {\n            ventas: number;\n            clientes: number;\n            beneficio: number;\n            confianza: number;\n        };\n        proximoTrimestre: {\n            ventas: number;\n            clientes: number;\n            beneficio: number;\n            confianza: number;\n        };\n    };\n    alertas: Array<{\n        tipo: 'info' | 'warning' | 'error' | 'success';\n        mensaje: string;\n        accion: string;\n        prioridad: 'baja' | 'media' | 'alta';\n    }>;\n    recomendaciones: Array<{\n        categoria: string;\n        descripcion: string;\n        impacto: 'bajo' | 'medio' | 'alto';\n        esfuerzo: 'bajo' | 'medio' | 'alto';\n        prioridad: number;\n    }>;\n}\ninterface GeneracionReporte {\n    id: string;\n    reporteId: string;\n    organizacionId: string;\n    estado: 'iniciado' | 'procesando' | 'completado' | 'error' | 'cancelado';\n    progreso: number;\n    inicio",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\reportes-mensuales.service.d.ts",
        "start": 152,
        "end": 208,
        "startLoc": {
          "line": 152,
          "column": 9,
          "position": 1071
        },
        "endLoc": {
          "line": 208,
          "column": 7,
          "position": 1474
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\reportes-mensuales.service.ts",
        "start": 135,
        "end": 191,
        "startLoc": {
          "line": 135,
          "column": 2,
          "position": 1065
        },
        "endLoc": {
          "line": 191,
          "column": 9,
          "position": 1468
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "archivo?: {\n        nombre: string;\n        ruta: string;\n        tamaño: number;\n        formato: string;\n    };\n    errores?: Array<{\n        codigo: string;\n        mensaje: string;\n        timestamp: string;\n    }>;\n    estadisticas: {\n        datosProcesados: number;\n        graficosGenerados: number;\n        paginasGeneradas: number;\n        tiempoGeneracion: number;\n    };\n}\ndeclare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\reportes-mensuales.service.d.ts",
        "start": 211,
        "end": 229,
        "startLoc": {
          "line": 211,
          "column": 5,
          "position": 1497
        },
        "endLoc": {
          "line": 229,
          "column": 8,
          "position": 1610
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\reportes-mensuales.service.ts",
        "start": 195,
        "end": 214,
        "startLoc": {
          "line": 195,
          "column": 3,
          "position": 1496
        },
        "endLoc": {
          "line": 214,
          "column": 6,
          "position": 1610
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "performReconciliation(sepaTransactions: SEPATransaction[], existingTransactions: SEPATransaction[]): Promise<{\n        results: ReconciliationResult[];\n        summary: {\n            total: number;\n            autoReconciled: number;\n            manualReconciled: number;\n            pending: number;\n            disputed: number;\n            successRate: number;\n        };\n    }>;",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\reconciliation.service.d.ts",
        "start": 6,
        "end": 16,
        "startLoc": {
          "line": 6,
          "column": 5,
          "position": 45
        },
        "endLoc": {
          "line": 16,
          "column": 2,
          "position": 132
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\reconciliation.service.ts",
        "start": 13,
        "end": 26,
        "startLoc": {
          "line": 13,
          "column": 2,
          "position": 94
        },
        "endLoc": {
          "line": 26,
          "column": 2,
          "position": 187
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "} = data;\n        if (!this.rooms.has(roomId)) {\n            this.sendToConnection(connectionId, {\n                type: 'error',\n                message: 'Room not found',\n                roomId\n            });\n            return;\n        }\n        const room = this.rooms.get(roomId);\n        this",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\real-time-collaboration.js",
        "start": 333,
        "end": 343,
        "startLoc": {
          "line": 333,
          "column": 2,
          "position": 3307
        },
        "endLoc": {
          "line": 343,
          "column": 5,
          "position": 3388
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\real-time-collaboration.js",
        "start": 205,
        "end": 215,
        "startLoc": {
          "line": 205,
          "column": 2,
          "position": 2116
        },
        "endLoc": {
          "line": 215,
          "column": 3,
          "position": 2197
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": ", {\n    type?: \"chat\" | \"meeting\" | \"document\" | \"workspace\";\n    name?: string;\n    metadata?: Record<string, any>;\n    id?: string;\n    createdAt?: Date;\n    updatedAt?: Date;\n    description?: string;\n    settings?: {\n        maxParticipants?: number;\n        allowAnonymous?: boolean;\n        requireApproval?: boolean;\n        enableChat?: boolean;\n        enableScreenShare?: boolean;\n        enableRecording?: boolean;\n    };\n    participants?: string[];\n    ownerId?: string;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\real-time-collaboration.d.ts",
        "start": 53,
        "end": 71,
        "startLoc": {
          "line": 53,
          "column": 2,
          "position": 543
        },
        "endLoc": {
          "line": 71,
          "column": 2,
          "position": 699
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\real-time-collaboration.d.ts",
        "start": 35,
        "end": 53,
        "startLoc": {
          "line": 35,
          "column": 11,
          "position": 387
        },
        "endLoc": {
          "line": 53,
          "column": 2,
          "position": 543
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", {\n    userId?: string;\n    operation?: \"insert\" | \"update\" | \"delete\" | \"format\";\n    timestamp?: Date;\n    version?: number;\n    metadata?: Record<string, any>;\n    id?: string;\n    content?: string;\n    position?: number;\n    userName?: string;\n    roomId?: string;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\real-time-collaboration.d.ts",
        "start": 122,
        "end": 133,
        "startLoc": {
          "line": 122,
          "column": 2,
          "position": 1264
        },
        "endLoc": {
          "line": 133,
          "column": 2,
          "position": 1367
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\real-time-collaboration.d.ts",
        "start": 111,
        "end": 122,
        "startLoc": {
          "line": 111,
          "column": 11,
          "position": 1161
        },
        "endLoc": {
          "line": 122,
          "column": 2,
          "position": 1264
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ", {\n    totalUsers?: number;\n    totalMessages?: number;\n    activeUsers?: number;\n    averageSessionDuration?: number;\n    totalRooms?: number;\n    activeRooms?: number;\n    totalDocumentChanges?: number;\n    topCollaborators?: {\n        userId?: string;\n        changes?: number;\n        messages?: number;\n        sessions?: number;\n        userName?: string;\n    }[];\n    roomTypes?: Record<string, number>;\n    messageTypes?: Record<string, number>;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\real-time-collaboration.d.ts",
        "start": 230,
        "end": 247,
        "startLoc": {
          "line": 230,
          "column": 2,
          "position": 2324
        },
        "endLoc": {
          "line": 247,
          "column": 2,
          "position": 2466
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\real-time-collaboration.d.ts",
        "start": 213,
        "end": 230,
        "startLoc": {
          "line": 213,
          "column": 11,
          "position": 2182
        },
        "endLoc": {
          "line": 230,
          "column": 2,
          "position": 2324
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "interface Permission {\n    id: string;\n    name: string;\n    resource: string;\n    action: string;\n    description: string;\n    category: string;\n}\ninterface Role {\n    id: string;\n    name: string;\n    description: string;\n    organizationId: string;\n    isSystem: boolean;\n    permissions: Permission[];\n    createdAt: Date;\n    updatedAt: Date;\n}\ninterface RBACConfig",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\rbac.service.d.ts",
        "start": 1,
        "end": 19,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 19,
          "column": 11,
          "position": 118
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\rbac.service.ts",
        "start": 10,
        "end": 30,
        "startLoc": {
          "line": 10,
          "column": 1,
          "position": 81
        },
        "endLoc": {
          "line": 30,
          "column": 9,
          "position": 201
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "export interface Permission {\n    id: string;\n    name: string;\n    resource: string;\n    action: string;\n}\nexport interface Role {\n    id: string;\n    name: string;\n    description: string;\n    permissions: string[];\n}\nexport interface UserRole {\n    userId: string;\n    roleId: string;\n    orgId: string;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\rbac-simple.d.ts",
        "start": 1,
        "end": 18,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 18,
          "column": 8,
          "position": 111
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\rbac-simple.ts",
        "start": 3,
        "end": 23,
        "startLoc": {
          "line": 3,
          "column": 1,
          "position": 14
        },
        "endLoc": {
          "line": 23,
          "column": 6,
          "position": 128
        }
      }
    },
    {
      "format": "javascript",
      "lines": 18,
      "fragment": ";\n    }\n    getUserPermissionsFromRoles(userRoles) {\n        const permissions = [];\n        for (const userRole of userRoles) {\n            const role = this.roles.get(userRole.roleId);\n            if (role) {\n                for (const permissionId of role.permissions) {\n                    const permission = this.permissions.get(permissionId);\n                    if (permission) {\n                        permissions.push(permission);\n                    }\n                }\n            }\n        }\n        return permissions;\n    }\n    evaluateConditions",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\rbac-granular.js",
        "start": 150,
        "end": 167,
        "startLoc": {
          "line": 150,
          "column": 2,
          "position": 1563
        },
        "endLoc": {
          "line": 167,
          "column": 19,
          "position": 1704
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\rbac-simple.js",
        "start": 61,
        "end": 78,
        "startLoc": {
          "line": 61,
          "column": 2,
          "position": 809
        },
        "endLoc": {
          "line": 78,
          "column": 22,
          "position": 950
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": "this.createRole(role);\n        });\n    }\n    getStats() {\n        return {\n            totalPermissions: this.permissions.size,\n            totalRoles: this.roles.size,\n            totalUserRoles: Array.from(this.userRoles.values()).flat().length,\n            lastUpdated: new Date().toISOString()\n        };\n    }\n}\nexport const granularRBAC",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\rbac-granular.js",
        "start": 240,
        "end": 252,
        "startLoc": {
          "line": 240,
          "column": 2,
          "position": 2504
        },
        "endLoc": {
          "line": 252,
          "column": 13,
          "position": 2605
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\rbac-simple.js",
        "start": 114,
        "end": 126,
        "startLoc": {
          "line": 114,
          "column": 13,
          "position": 1300
        },
        "endLoc": {
          "line": 126,
          "column": 11,
          "position": 1401
        }
      }
    },
    {
      "format": "typescript",
      "lines": 32,
      "fragment": "export interface Permission {\n    id: string;\n    name: string;\n    resource: string;\n    action: string;\n    conditions?: Record<string, any>;\n}\nexport interface Role {\n    id: string;\n    name: string;\n    description: string;\n    permissions: string[];\n    isSystem: boolean;\n    createdAt: string;\n    updatedAt: string;\n}\nexport interface UserRole {\n    userId: string;\n    roleId: string;\n    orgId: string;\n    assignedBy: string;\n    assignedAt: string;\n    expiresAt?: string;\n}\nexport interface RBACContext {\n    userId: string;\n    orgId: string;\n    roles: string[];\n    permissions: string[];\n    metadata?: Record<string, any>;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\rbac-granular.d.ts",
        "start": 1,
        "end": 32,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 32,
          "column": 8,
          "position": 224
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\rbac-granular.ts",
        "start": 3,
        "end": 38,
        "startLoc": {
          "line": 3,
          "column": 1,
          "position": 14
        },
        "endLoc": {
          "line": 38,
          "column": 6,
          "position": 242
        }
      }
    },
    {
      "format": "javascript",
      "lines": 16,
      "fragment": ");\n    }\n    async createPermission(permission) {\n        const id = `perm_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n        const newPermission = { ...permission, id };\n        this.permissions.set(id, newPermission);\n        return id;\n    }\n    async createRole(role) {\n        const id = `role_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n        const newRole = { ...role, id };\n        this.roles.set(id, newRole);\n        return id;\n    }\n    async assignRole(userId, roleId, orgId) {\n        structuredLogger",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\rbac-basic.js",
        "start": 38,
        "end": 53,
        "startLoc": {
          "line": 38,
          "column": 7,
          "position": 454
        },
        "endLoc": {
          "line": 53,
          "column": 17,
          "position": 657
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\rbac-simple.js",
        "start": 36,
        "end": 51,
        "startLoc": {
          "line": 36,
          "column": 10,
          "position": 468
        },
        "endLoc": {
          "line": 51,
          "column": 6,
          "position": 671
        }
      }
    },
    {
      "format": "javascript",
      "lines": 36,
      "fragment": ";\n    }\n    initializeDefaultData() {\n        const defaultPermissions = [\n            { name: 'analytics:read', resource: 'analytics', action: 'read' },\n            { name: 'analytics:write', resource: 'analytics', action: 'write' },\n            { name: 'security:read', resource: 'security', action: 'read' },\n            { name: 'security:write', resource: 'security', action: 'write' },\n            { name: 'finops:read', resource: 'finops', action: 'read' },\n            { name: 'finops:write', resource: 'finops', action: 'write' },\n            { name: 'admin:all', resource: '*', action: '*' }\n        ];\n        defaultPermissions.forEach(permission => {\n            this.createPermission(permission);\n        });\n        const defaultRoles = [\n            {\n                name: 'admin',\n                description: 'System administrator',\n                permissions: ['admin:all']\n            },\n            {\n                name: 'analyst',\n                description: 'Data analyst',\n                permissions: ['analytics:read']\n            },\n            {\n                name: 'security_officer',\n                description: 'Security officer',\n                permissions: ['security:read', 'security:write']\n            },\n            {\n                name: 'finance_manager',\n                description: 'Finance manager',\n                permissions: ['finops:read', 'finops:write']\n            },",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\rbac-basic.js",
        "start": 59,
        "end": 94,
        "startLoc": {
          "line": 59,
          "column": 2,
          "position": 734
        },
        "endLoc": {
          "line": 94,
          "column": 2,
          "position": 1073
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\rbac-simple.js",
        "start": 76,
        "end": 112,
        "startLoc": {
          "line": 76,
          "column": 12,
          "position": 944
        },
        "endLoc": {
          "line": 112,
          "column": 2,
          "position": 1285
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ";\n    constructor();\n    hasPermission(userId: string, orgId: string, resource: string, action: string): Promise<boolean>;\n    hasRole(userId: string, orgId: string, roleName: string): Promise<boolean>;\n    getUserPermissions(userId: string, orgId: string): Promise<Permission[]>;\n    getUserRoles(userId: string, orgId: string): Promise<Role[]>;\n    createPermission(permission: Omit<Permission, 'id'>): Promise<string>;\n    createRole(role: Omit<Role, 'id'>): Promise<string>;\n    assignRole(userId: string, roleId: string, orgId: string): Promise<void>;\n    getAllPermissions(): Promise<Permission[]>;\n    getAllRoles(): Promise<Role[]>;\n    private initializeDefaultData",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\rbac-basic.d.ts",
        "start": 15,
        "end": 26,
        "startLoc": {
          "line": 15,
          "column": 6,
          "position": 98
        },
        "endLoc": {
          "line": 26,
          "column": 22,
          "position": 319
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\rbac-simple.d.ts",
        "start": 21,
        "end": 32,
        "startLoc": {
          "line": 21,
          "column": 10,
          "position": 135
        },
        "endLoc": {
          "line": 32,
          "column": 28,
          "position": 356
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": "export interface RateLimitConfig {\n    windowMs: number;\n    maxRequests: number;\n    strategy: 'token-bucket' | 'sliding-window' | 'fixed-window';\n    burstSize?: number;\n    refillRate?: number;\n}\nexport interface OrganizationRateLimit {\n    organizationId: string;\n    config: RateLimitConfig;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface RateLimitState {\n    tokens: number;\n    lastRefill: number;\n    requestCount: number;\n    windowStart: number;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\rate-limiting.d.ts",
        "start": 1,
        "end": 20,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 20,
          "column": 8,
          "position": 133
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\rate-limiting.ts",
        "start": 4,
        "end": 26,
        "startLoc": {
          "line": 4,
          "column": 1,
          "position": 27
        },
        "endLoc": {
          "line": 26,
          "column": 6,
          "position": 163
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": "export interface QuietHoursConfig {\n    id: string;\n    organizationId: string;\n    serviceName?: string;\n    timezone: string;\n    schedule: QuietHoursSchedule;\n    exceptions?: QuietHoursException[];\n    costOptimization: boolean;\n    enabled: boolean;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface QuietHoursSchedule {\n    monday: TimeRange[];\n    tuesday: TimeRange[];\n    wednesday: TimeRange[];\n    thursday: TimeRange[];\n    friday: TimeRange[];\n    saturday: TimeRange[];\n    sunday: TimeRange[];\n}\nexport interface TimeRange {\n    start: string;\n    end",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\quiet-hours-types.d.ts",
        "start": 1,
        "end": 24,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 24,
          "column": 4,
          "position": 173
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\quiet-hours-types.ts",
        "start": 11,
        "end": 35,
        "startLoc": {
          "line": 11,
          "column": 1,
          "position": 10
        },
        "endLoc": {
          "line": 35,
          "column": 16,
          "position": 184
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "activeExceptions: QuietHoursException[];\n    costSavings: number;\n}\nexport interface QuietHoursOverride {\n    id: string;\n    organizationId: string;\n    serviceName?: string;\n    startTime: Date;\n    endTime: Date;\n    reason: string;\n    requestedBy: string;\n    approvedBy?: string;\n    status: 'pending' | 'approved' | 'rejected' | 'active' | 'expired';\n    createdAt: Date;\n}\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\quiet-hours-types.d.ts",
        "start": 40,
        "end": 55,
        "startLoc": {
          "line": 40,
          "column": 5,
          "position": 306
        },
        "endLoc": {
          "line": 55,
          "column": 7,
          "position": 421
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\quiet-hours-types.ts",
        "start": 54,
        "end": 71,
        "startLoc": {
          "line": 54,
          "column": 3,
          "position": 328
        },
        "endLoc": {
          "line": 71,
          "column": 80,
          "position": 445
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "export interface OnCallSchedule {\n    id: string;\n    organizationId: string;\n    teamName: string;\n    rotationType: 'daily' | 'weekly' | 'monthly' | 'custom';\n    schedule: OnCallRotation;\n    escalationRules: EscalationRule[];\n    enabled: boolean;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface OnCallRotation {\n    participants: OnCallParticipant[];\n    rotationPattern: RotationPattern;\n    handoffTime: string;\n    handoffTimezone",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\quiet-hours-types.d.ts",
        "start": 55,
        "end": 70,
        "startLoc": {
          "line": 55,
          "column": 1,
          "position": 421
        },
        "endLoc": {
          "line": 70,
          "column": 16,
          "position": 540
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\quiet-hours-types.ts",
        "start": 75,
        "end": 90,
        "startLoc": {
          "line": 75,
          "column": 1,
          "position": 452
        },
        "endLoc": {
          "line": 90,
          "column": 16,
          "position": 571
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "handoffTimezone: string;\n    overlapMinutes: number;\n}\nexport interface OnCallParticipant {\n    userId: string;\n    name: string;\n    email: string;\n    phone?: string;\n    role: 'primary' | 'secondary' | 'escalation';\n    skills: string[];\n    availability: AvailabilityWindow[];\n}\nexport interface AvailabilityWindow {\n    dayOfWeek: number;\n    startTime",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\quiet-hours-types.d.ts",
        "start": 70,
        "end": 84,
        "startLoc": {
          "line": 70,
          "column": 5,
          "position": 540
        },
        "endLoc": {
          "line": 84,
          "column": 10,
          "position": 643
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\quiet-hours-types.ts",
        "start": 91,
        "end": 106,
        "startLoc": {
          "line": 91,
          "column": 3,
          "position": 574
        },
        "endLoc": {
          "line": 106,
          "column": 25,
          "position": 678
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "userId: string;\n    role: 'primary' | 'secondary' | 'escalation';\n}\nexport interface OnCallShift {\n    id: string;\n    scheduleId: string;\n    userId: string;\n    startTime: Date;\n    endTime: Date;\n    status: 'scheduled' | 'active' | 'completed' | 'missed';\n    handoffNotes?: string;\n    incidentsHandled: number;\n    responseTime: number;\n    createdAt",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\quiet-hours-types.d.ts",
        "start": 96,
        "end": 109,
        "startLoc": {
          "line": 96,
          "column": 5,
          "position": 730
        },
        "endLoc": {
          "line": 109,
          "column": 10,
          "position": 838
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\quiet-hours-types.ts",
        "start": 121,
        "end": 134,
        "startLoc": {
          "line": 121,
          "column": 3,
          "position": 778
        },
        "endLoc": {
          "line": 134,
          "column": 22,
          "position": 886
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "createdAt: Date;\n}\nexport interface OnCallOverride {\n    id: string;\n    scheduleId: string;\n    originalUserId: string;\n    overrideUserId: string;\n    startTime: Date;\n    endTime: Date;\n    reason: string;\n    requestedBy: string;\n    approvedBy?: string;\n    status: 'pending' | 'approved' | 'rejected' | 'active' | 'expired';\n    createdAt: Date;\n}\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\quiet-hours-types.d.ts",
        "start": 109,
        "end": 124,
        "startLoc": {
          "line": 109,
          "column": 5,
          "position": 838
        },
        "endLoc": {
          "line": 124,
          "column": 7,
          "position": 950
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\quiet-hours-types.ts",
        "start": 135,
        "end": 152,
        "startLoc": {
          "line": 135,
          "column": 3,
          "position": 889
        },
        "endLoc": {
          "line": 152,
          "column": 80,
          "position": 1003
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": "export interface EscalationRule {\n    id: string;\n    organizationId: string;\n    ruleName: string;\n    conditions: EscalationCondition[];\n    actions: EscalationAction[];\n    timeouts: EscalationTimeout[];\n    enabled: boolean;\n    priority: number;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface EscalationCondition {\n    type: 'severity' | 'service' | 'time' | 'count' | 'custom';\n    operator: 'equals' | 'greater_than' | 'less_than' | 'contains' | 'matches';\n    value: any;\n    field?: string;\n}\nexport interface EscalationAction {\n    type: 'notify' | 'escalate' | 'page' | 'call' | 'webhook' | 'custom';\n    target: string;\n    message?: string;\n    delay?: number;\n    retryCount",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\quiet-hours-types.d.ts",
        "start": 124,
        "end": 147,
        "startLoc": {
          "line": 124,
          "column": 1,
          "position": 950
        },
        "endLoc": {
          "line": 147,
          "column": 11,
          "position": 1166
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\quiet-hours-types.ts",
        "start": 156,
        "end": 180,
        "startLoc": {
          "line": 156,
          "column": 1,
          "position": 1010
        },
        "endLoc": {
          "line": 180,
          "column": 11,
          "position": 1227
        }
      }
    },
    {
      "format": "typescript",
      "lines": 31,
      "fragment": "}\nexport interface EscalationTimeout {\n    level: number;\n    timeoutMinutes: number;\n    action: EscalationAction;\n}\nexport interface EscalationEvent {\n    id: string;\n    ruleId: string;\n    organizationId: string;\n    alertId: string;\n    severity: 'low' | 'medium' | 'high' | 'critical';\n    status: 'pending' | 'escalating' | 'resolved' | 'timeout';\n    currentLevel: number;\n    startTime: Date;\n    lastEscalation: Date;\n    nextEscalation?: Date;\n    resolvedAt?: Date;\n    participants: EscalationParticipant[];\n    history: EscalationHistoryEntry[];\n}\nexport interface EscalationParticipant {\n    userId: string;\n    name: string;\n    email: string;\n    phone?: string;\n    level: number;\n    notifiedAt?: Date;\n    respondedAt?: Date;\n    responseTime?: number;\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\quiet-hours-types.d.ts",
        "start": 149,
        "end": 179,
        "startLoc": {
          "line": 149,
          "column": 1,
          "position": 1181
        },
        "endLoc": {
          "line": 179,
          "column": 2,
          "position": 1413
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\quiet-hours-types.ts",
        "start": 183,
        "end": 215,
        "startLoc": {
          "line": 183,
          "column": 1,
          "position": 1247
        },
        "endLoc": {
          "line": 215,
          "column": 11,
          "position": 1482
        }
      }
    },
    {
      "format": "typescript",
      "lines": 29,
      "fragment": "export interface NotificationPreferences {\n    id: string;\n    userId: string;\n    organizationId: string;\n    channels: NotificationChannel[];\n    quietHours: QuietHoursNotificationSettings;\n    escalation: EscalationNotificationSettings;\n    digest: DigestSettings;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface NotificationChannel {\n    type: 'email' | 'sms' | 'push' | 'slack' | 'teams' | 'webhook';\n    enabled: boolean;\n    address: string;\n    priority: 'low' | 'medium' | 'high' | 'critical';\n    filters?: NotificationFilter[];\n}\nexport interface NotificationFilter {\n    type: 'service' | 'severity' | 'keyword' | 'custom';\n    operator: 'equals' | 'contains' | 'matches' | 'excludes';\n    value: any;\n}\nexport interface QuietHoursNotificationSettings {\n    enabled: boolean;\n    allowCritical: boolean;\n    allowEscalation: boolean;\n    maxFrequency: number;\n    channels",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\quiet-hours-types.d.ts",
        "start": 188,
        "end": 216,
        "startLoc": {
          "line": 188,
          "column": 1,
          "position": 1477
        },
        "endLoc": {
          "line": 216,
          "column": 9,
          "position": 1724
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\quiet-hours-types.ts",
        "start": 231,
        "end": 261,
        "startLoc": {
          "line": 231,
          "column": 1,
          "position": 1557
        },
        "endLoc": {
          "line": 261,
          "column": 26,
          "position": 1806
        }
      }
    },
    {
      "format": "typescript",
      "lines": 31,
      "fragment": "timezone: string;\n    channels: string[];\n    includeResolved: boolean;\n    maxItems: number;\n}\nexport interface Notification {\n    id: string;\n    userId: string;\n    organizationId: string;\n    type: 'alert' | 'escalation' | 'digest' | 'system' | 'maintenance';\n    severity: 'low' | 'medium' | 'high' | 'critical';\n    title: string;\n    message: string;\n    channels: NotificationChannel[];\n    metadata?: Record<string, any>;\n    sentAt?: Date;\n    deliveredAt?: Date;\n    readAt?: Date;\n    status: 'pending' | 'sent' | 'delivered' | 'failed' | 'read';\n    retryCount: number;\n    maxRetries: number;\n    createdAt: Date;\n}\nexport interface NotificationAnalytics {\n    totalSent: number;\n    totalDelivered: number;\n    totalRead: number;\n    deliveryRate: number;\n    readRate: number;\n    averageDeliveryTime: number;\n    averageReadTime",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\quiet-hours-types.d.ts",
        "start": 228,
        "end": 258,
        "startLoc": {
          "line": 228,
          "column": 5,
          "position": 1812
        },
        "endLoc": {
          "line": 258,
          "column": 16,
          "position": 2072
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\quiet-hours-types.ts",
        "start": 276,
        "end": 307,
        "startLoc": {
          "line": 276,
          "column": 3,
          "position": 1903
        },
        "endLoc": {
          "line": 307,
          "column": 11,
          "position": 2164
        }
      }
    },
    {
      "format": "typescript",
      "lines": 27,
      "fragment": "channelStats: ChannelStats[];\n    timeStats: TimeStats[];\n    errorStats: ErrorStats[];\n}\nexport interface ChannelStats {\n    channel: string;\n    sent: number;\n    delivered: number;\n    failed: number;\n    deliveryRate: number;\n    averageDeliveryTime: number;\n}\nexport interface TimeStats {\n    hour: number;\n    sent: number;\n    delivered: number;\n    read: number;\n    deliveryRate: number;\n    readRate: number;\n}\nexport interface ErrorStats {\n    error: string;\n    count: number;\n    percentage: number;\n    lastOccurred: Date;\n}\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\quiet-hours-types.d.ts",
        "start": 259,
        "end": 285,
        "startLoc": {
          "line": 259,
          "column": 5,
          "position": 2079
        },
        "endLoc": {
          "line": 285,
          "column": 7,
          "position": 2249
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\quiet-hours-types.ts",
        "start": 309,
        "end": 339,
        "startLoc": {
          "line": 309,
          "column": 3,
          "position": 2176
        },
        "endLoc": {
          "line": 339,
          "column": 80,
          "position": 2350
        }
      }
    },
    {
      "format": "typescript",
      "lines": 68,
      "fragment": "export interface CreateQuietHoursRequest {\n    organizationId: string;\n    serviceName?: string;\n    timezone: string;\n    schedule: QuietHoursSchedule;\n    exceptions?: QuietHoursException[];\n    costOptimization?: boolean;\n}\nexport interface UpdateQuietHoursRequest {\n    timezone?: string;\n    schedule?: QuietHoursSchedule;\n    exceptions?: QuietHoursException[];\n    costOptimization?: boolean;\n    enabled?: boolean;\n}\nexport interface CreateOnCallScheduleRequest {\n    organizationId: string;\n    teamName: string;\n    rotationType: 'daily' | 'weekly' | 'monthly' | 'custom';\n    schedule: OnCallRotation;\n    escalationRules?: EscalationRule[];\n}\nexport interface UpdateOnCallScheduleRequest {\n    teamName?: string;\n    rotationType?: 'daily' | 'weekly' | 'monthly' | 'custom';\n    schedule?: OnCallRotation;\n    escalationRules?: EscalationRule[];\n    enabled?: boolean;\n}\nexport interface CreateEscalationRuleRequest {\n    organizationId: string;\n    ruleName: string;\n    conditions: EscalationCondition[];\n    actions: EscalationAction[];\n    timeouts: EscalationTimeout[];\n    priority?: number;\n}\nexport interface UpdateEscalationRuleRequest {\n    ruleName?: string;\n    conditions?: EscalationCondition[];\n    actions?: EscalationAction[];\n    timeouts?: EscalationTimeout[];\n    enabled?: boolean;\n    priority?: number;\n}\nexport interface TriggerEscalationRequest {\n    alertId: string;\n    severity: 'low' | 'medium' | 'high' | 'critical';\n    service?: string;\n    message?: string;\n    metadata?: Record<string, any>;\n}\nexport interface UpdateNotificationPreferencesRequest {\n    channels?: NotificationChannel[];\n    quietHours?: QuietHoursNotificationSettings;\n    escalation?: EscalationNotificationSettings;\n    digest?: DigestSettings;\n}\nexport interface SendNotificationRequest {\n    userId: string;\n    type: 'alert' | 'escalation' | 'digest' | 'system' | 'maintenance';\n    severity: 'low' | 'medium' | 'high' | 'critical';\n    title: string;\n    message: string;\n    channels?: string[];\n    metadata?: Record<string, any>;\n}\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\quiet-hours-types.d.ts",
        "start": 285,
        "end": 352,
        "startLoc": {
          "line": 285,
          "column": 1,
          "position": 2249
        },
        "endLoc": {
          "line": 352,
          "column": 7,
          "position": 2812
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\quiet-hours-types.ts",
        "start": 343,
        "end": 419,
        "startLoc": {
          "line": 343,
          "column": 1,
          "position": 2357
        },
        "endLoc": {
          "line": 419,
          "column": 80,
          "position": 2929
        }
      }
    },
    {
      "format": "typescript",
      "lines": 56,
      "fragment": "export interface QuietHoursResponse {\n    success: boolean;\n    data?: QuietHoursConfig | QuietHoursConfig[];\n    message?: string;\n    error?: string;\n}\nexport interface OnCallResponse {\n    success: boolean;\n    data?: OnCallSchedule | OnCallSchedule[] | OnCallShift | OnCallShift[];\n    message?: string;\n    error?: string;\n}\nexport interface EscalationResponse {\n    success: boolean;\n    data?: EscalationRule | EscalationRule[] | EscalationEvent | EscalationEvent[];\n    message?: string;\n    error?: string;\n}\nexport interface NotificationResponse {\n    success: boolean;\n    data?: Notification | Notification[] | NotificationAnalytics;\n    message?: string;\n    error?: string;\n}\nexport interface QuietHoursStats {\n    totalConfigurations: number;\n    activeConfigurations: number;\n    totalExceptions: number;\n    averageCostSavings: number;\n    uptimeDuringQuietHours: number;\n    alertReduction: number;\n}\nexport interface OnCallStats {\n    totalSchedules: number;\n    activeSchedules: number;\n    totalShifts: number;\n    averageResponseTime: number;\n    escalationRate: number;\n    coveragePercentage: number;\n}\nexport interface EscalationStats {\n    totalRules: number;\n    activeRules: number;\n    totalEvents: number;\n    averageEscalationTime: number;\n    resolutionRate: number;\n    timeoutRate: number;\n}\nexport interface NotificationStats {\n    totalNotifications: number;\n    deliveryRate: number;\n    readRate: number;\n    averageDeliveryTime: number;\n    channelEffectiveness: Record<string, number>;\n    userSatisfaction: number;\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\quiet-hours-types.d.ts",
        "start": 352,
        "end": 407,
        "startLoc": {
          "line": 352,
          "column": 1,
          "position": 2812
        },
        "endLoc": {
          "line": 407,
          "column": 2,
          "position": 3236
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\quiet-hours-types.ts",
        "start": 423,
        "end": 485,
        "startLoc": {
          "line": 423,
          "column": 1,
          "position": 2936
        },
        "endLoc": {
          "line": 485,
          "column": 2,
          "position": 3367
        }
      }
    },
    {
      "format": "javascript",
      "lines": 27,
      "fragment": "();\n    }\n    async getQuietHoursConfigs(organizationId) {\n        const configs = Array.from(this.quietHoursConfigs.values())\n            .filter(config => config.organizationId === organizationId);\n        return configs;\n    }\n    async getQuietHoursConfig(id) {\n        return this.quietHoursConfigs.get(id) || null;\n    }\n    async createQuietHoursConfig(request) {\n        const id = this.generateId();\n        const now = new Date();\n        const config = {\n            id,\n            organizationId: request.organizationId,\n            serviceName: request.serviceName,\n            timezone: request.timezone,\n            schedule: request.schedule,\n            exceptions: request.exceptions || [],\n            costOptimization: request.costOptimization ?? true,\n            enabled: true,\n            createdAt: now,\n            updatedAt: now\n        };\n        this.quietHoursConfigs.set(id, config);\n        structuredLogger",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\quiet-hours-oncall-consolidated.service.js",
        "start": 16,
        "end": 42,
        "startLoc": {
          "line": 16,
          "column": 16,
          "position": 172
        },
        "endLoc": {
          "line": 42,
          "column": 17,
          "position": 420
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\quiet-hours.service.js",
        "start": 6,
        "end": 32,
        "startLoc": {
          "line": 6,
          "column": 25,
          "position": 55
        },
        "endLoc": {
          "line": 32,
          "column": 7,
          "position": 303
        }
      }
    },
    {
      "format": "javascript",
      "lines": 19,
      "fragment": ");\n        return config;\n    }\n    async updateQuietHoursConfig(id, request) {\n        const config = this.quietHoursConfigs.get(id);\n        if (!config) {\n            return null;\n        }\n        const updatedConfig = {\n            ...config,\n            timezone: request.timezone ?? config.timezone,\n            schedule: request.schedule ?? config.schedule,\n            exceptions: request.exceptions ?? config.exceptions,\n            costOptimization: request.costOptimization ?? config.costOptimization,\n            enabled: request.enabled ?? config.enabled,\n            updatedAt: new Date()\n        };\n        this.quietHoursConfigs.set(id, updatedConfig);\n        structuredLogger",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\quiet-hours-oncall-consolidated.service.js",
        "start": 47,
        "end": 65,
        "startLoc": {
          "line": 47,
          "column": 2,
          "position": 462
        },
        "endLoc": {
          "line": 65,
          "column": 17,
          "position": 646
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\quiet-hours.service.js",
        "start": 31,
        "end": 49,
        "startLoc": {
          "line": 31,
          "column": 7,
          "position": 299
        },
        "endLoc": {
          "line": 49,
          "column": 7,
          "position": 483
        }
      }
    },
    {
      "format": "javascript",
      "lines": 37,
      "fragment": ";\n    }\n    async getQuietHoursStatus(organizationId, serviceName) {\n        const configs = await this.getQuietHoursConfigs(organizationId);\n        const relevantConfig = serviceName\n            ? configs.find(c => c.serviceName === serviceName) || configs.find(c => !c.serviceName)\n            : configs.find(c => !c.serviceName);\n        if (!relevantConfig || !relevantConfig.enabled) {\n            return {\n                isQuietHours: false,\n                currentLevel: 'normal',\n                nextChange: new Date(Date.now() + 24 * 60 * 60 * 1000),\n                timeUntilNextChange: 24 * 60 * 60 * 1000,\n                activeExceptions: [],\n                costSavings: 0\n            };\n        }\n        const now = new Date();\n        const timezone = relevantConfig.timezone;\n        const currentTime = this.getCurrentTimeInTimezone(now, timezone);\n        const dayOfWeek = currentTime.getDay();\n        const dayName = this.getDayName(dayOfWeek);\n        const activeExceptions = this.getActiveExceptions(relevantConfig.exceptions || [], now);\n        if (activeExceptions.length > 0) {\n            const exception = activeExceptions[0];\n            const exceptionSchedule = exception.schedule;\n            const currentLevel = this.getCurrentLevel(exceptionSchedule, currentTime, dayName);\n            return {\n                isQuietHours: currentLevel === 'quiet',\n                currentLevel,\n                nextChange: this.getNextChangeTime(exceptionSchedule, currentTime, dayName),\n                timeUntilNextChange: this.getTimeUntilNextChange(exceptionSchedule, currentTime, dayName),\n                activeExceptions,\n                costSavings: this.calculateCostSavings(currentLevel)\n            };\n        }\n        const activeOverride = this.getActiveQuietHoursOverride",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\quiet-hours-oncall-consolidated.service.js",
        "start": 80,
        "end": 116,
        "startLoc": {
          "line": 80,
          "column": 8,
          "position": 765
        },
        "endLoc": {
          "line": 116,
          "column": 28,
          "position": 1217
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\quiet-hours.service.js",
        "start": 52,
        "end": 88,
        "startLoc": {
          "line": 52,
          "column": 2,
          "position": 512
        },
        "endLoc": {
          "line": 88,
          "column": 18,
          "position": 964
        }
      }
    },
    {
      "format": "javascript",
      "lines": 36,
      "fragment": "(organizationId, serviceName, now);\n        if (activeOverride) {\n            return {\n                isQuietHours: false,\n                currentLevel: 'normal',\n                nextChange: activeOverride.endTime,\n                timeUntilNextChange: activeOverride.endTime.getTime() - now.getTime(),\n                activeExceptions: [],\n                costSavings: 0\n            };\n        }\n        const currentLevel = this.getCurrentLevel(relevantConfig.schedule, currentTime, dayName);\n        return {\n            isQuietHours: currentLevel === 'quiet',\n            currentLevel,\n            nextChange: this.getNextChangeTime(relevantConfig.schedule, currentTime, dayName),\n            timeUntilNextChange: this.getTimeUntilNextChange(relevantConfig.schedule, currentTime, dayName),\n            activeExceptions: [],\n            costSavings: this.calculateCostSavings(currentLevel)\n        };\n    }\n    async createQuietHoursOverride(organizationId, serviceName, startTime, endTime, reason, requestedBy) {\n        const id = this.generateId();\n        const now = new Date();\n        const override = {\n            id,\n            organizationId,\n            serviceName,\n            startTime,\n            endTime,\n            reason,\n            requestedBy,\n            status: 'pending',\n            createdAt: now\n        };\n        this.quietHoursOverrides",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\quiet-hours-oncall-consolidated.service.js",
        "start": 116,
        "end": 151,
        "startLoc": {
          "line": 116,
          "column": 28,
          "position": 1218
        },
        "endLoc": {
          "line": 151,
          "column": 20,
          "position": 1527
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\quiet-hours.service.js",
        "start": 88,
        "end": 123,
        "startLoc": {
          "line": 88,
          "column": 18,
          "position": 965
        },
        "endLoc": {
          "line": 123,
          "column": 10,
          "position": 1274
        }
      }
    },
    {
      "format": "javascript",
      "lines": 19,
      "fragment": ";\n    }\n    async getQuietHoursStats(organizationId) {\n        const configs = await this.getQuietHoursConfigs(organizationId);\n        const activeConfigs = configs.filter(c => c.enabled);\n        const totalExceptions = configs.reduce((sum, config) => sum + (config.exceptions?.length || 0), 0);\n        const averageCostSavings = configs.length > 0\n            ? configs.reduce((sum, config) => sum + (config.costOptimization ? 35 : 0), 0) / configs.length\n            : 0;\n        return {\n            totalConfigurations: configs.length,\n            activeConfigurations: activeConfigs.length,\n            totalExceptions,\n            averageCostSavings,\n            uptimeDuringQuietHours: 99.9,\n            alertReduction: 60\n        };\n    }\n    async",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\quiet-hours-oncall-consolidated.service.js",
        "start": 482,
        "end": 500,
        "startLoc": {
          "line": 482,
          "column": 13,
          "position": 4488
        },
        "endLoc": {
          "line": 500,
          "column": 6,
          "position": 4700
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\quiet-hours.service.js",
        "start": 138,
        "end": 156,
        "startLoc": {
          "line": 138,
          "column": 16,
          "position": 1400
        },
        "endLoc": {
          "line": 156,
          "column": 25,
          "position": 1612
        }
      }
    },
    {
      "format": "javascript",
      "lines": 20,
      "fragment": "= {\n            id: 'default-quiet-hours',\n            organizationId: 'org_1',\n            timezone: 'UTC',\n            schedule: {\n                monday: [{ start: '22:00', end: '06:00', type: 'quiet' }],\n                tuesday: [{ start: '22:00', end: '06:00', type: 'quiet' }],\n                wednesday: [{ start: '22:00', end: '06:00', type: 'quiet' }],\n                thursday: [{ start: '22:00', end: '06:00', type: 'quiet' }],\n                friday: [{ start: '22:00', end: '06:00', type: 'quiet' }],\n                saturday: [{ start: '00:00', end: '23:59', type: 'quiet' }],\n                sunday: [{ start: '00:00', end: '23:59', type: 'quiet' }]\n            },\n            exceptions: [],\n            costOptimization: true,\n            enabled: true,\n            createdAt: new Date(),\n            updatedAt: new Date()\n        };\n        this.quietHoursConfigs.set(defaultQuietHoursConfig",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\quiet-hours-oncall-consolidated.service.js",
        "start": 547,
        "end": 566,
        "startLoc": {
          "line": 547,
          "column": 2,
          "position": 5284
        },
        "endLoc": {
          "line": 566,
          "column": 24,
          "position": 5568
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\quiet-hours.service.js",
        "start": 157,
        "end": 176,
        "startLoc": {
          "line": 157,
          "column": 2,
          "position": 1623
        },
        "endLoc": {
          "line": 176,
          "column": 14,
          "position": 1907
        }
      }
    },
    {
      "format": "javascript",
      "lines": 39,
      "fragment": "${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    }\n    getCurrentTimeInTimezone(date, timezone) {\n        return new Date(date.toLocaleString('en-US', { timeZone: timezone }));\n    }\n    getDayName(dayOfWeek) {\n        const days = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];\n        return days[dayOfWeek];\n    }\n    getCurrentLevel(schedule, currentTime, dayName) {\n        const daySchedule = schedule[dayName];\n        const currentTimeStr = `${currentTime.getHours().toString().padStart(2, '0')}:${currentTime.getMinutes().toString().padStart(2, '0')}`;\n        for (const timeRange of daySchedule) {\n            if (this.isTimeInRange(currentTimeStr, timeRange.start, timeRange.end)) {\n                return timeRange.type;\n            }\n        }\n        return 'normal';\n    }\n    isTimeInRange(currentTime, startTime, endTime) {\n        const current = this.timeToMinutes(currentTime);\n        const start = this.timeToMinutes(startTime);\n        const end = this.timeToMinutes(endTime);\n        if (start <= end) {\n            return current >= start && current <= end;\n        }\n        else {\n            return current >= start || current <= end;\n        }\n    }\n    timeToMinutes(time) {\n        const [hours, minutes] = time.split(':').map(Number);\n        return hours * 60 + minutes;\n    }\n    getActiveExceptions(exceptions, now) {\n        const today = now.toISOString().split('T')[0];\n        return exceptions.filter(exception => exception.date === today);\n    }\n    getActiveQuietHoursOverride",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\quiet-hours-oncall-consolidated.service.js",
        "start": 657,
        "end": 695,
        "startLoc": {
          "line": 657,
          "column": 6,
          "position": 6532
        },
        "endLoc": {
          "line": 695,
          "column": 28,
          "position": 7025
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\quiet-hours.service.js",
        "start": 179,
        "end": 217,
        "startLoc": {
          "line": 179,
          "column": 5,
          "position": 1930
        },
        "endLoc": {
          "line": 217,
          "column": 18,
          "position": 2423
        }
      }
    },
    {
      "format": "javascript",
      "lines": 24,
      "fragment": "&&\n            override.status === 'active' &&\n            now >= override.startTime &&\n            now <= override.endTime);\n        return overrides.length > 0 ? overrides[0] : null;\n    }\n    getNextChangeTime(schedule, currentTime, dayName) {\n        const nextChange = new Date(currentTime);\n        nextChange.setHours(nextChange.getHours() + 1);\n        return nextChange;\n    }\n    getTimeUntilNextChange(schedule, currentTime, dayName) {\n        const nextChange = this.getNextChangeTime(schedule, currentTime, dayName);\n        return nextChange.getTime() - currentTime.getTime();\n    }\n    calculateCostSavings(level) {\n        switch (level) {\n            case 'quiet': return 35;\n            case 'reduced': return 15;\n            case 'normal': return 0;\n            default: return 0;\n        }\n    }\n    async",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\quiet-hours-oncall-consolidated.service.js",
        "start": 706,
        "end": 729,
        "startLoc": {
          "line": 706,
          "column": 2,
          "position": 7193
        },
        "endLoc": {
          "line": 729,
          "column": 6,
          "position": 7431
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\quiet-hours.service.js",
        "start": 220,
        "end": 243,
        "startLoc": {
          "line": 220,
          "column": 2,
          "position": 2483
        },
        "endLoc": {
          "line": 243,
          "column": 2,
          "position": 2720
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ";\n    constructor();\n    getQuietHoursConfigs(organizationId: string): Promise<QuietHoursConfig[]>;\n    getQuietHoursConfig(id: string): Promise<QuietHoursConfig | null>;\n    createQuietHoursConfig(request: CreateQuietHoursRequest): Promise<QuietHoursConfig>;\n    updateQuietHoursConfig(id: string, request: UpdateQuietHoursRequest): Promise<QuietHoursConfig | null>;\n    deleteQuietHoursConfig(id: string): Promise<boolean>;\n    getQuietHoursStatus(organizationId: string, serviceName?: string): Promise<QuietHoursStatus>;\n    createQuietHoursOverride(organizationId: string, serviceName: string | undefined, startTime: Date, endTime: Date, reason: string, requestedBy: string): Promise<QuietHoursOverride>;\n    updateQuietHoursOverride(id: string, status: 'approved' | 'rejected', approvedBy: string): Promise<QuietHoursOverride | null>;\n    getOnCallSchedules",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\quiet-hours-oncall-consolidated.service.d.ts",
        "start": 13,
        "end": 23,
        "startLoc": {
          "line": 13,
          "column": 14,
          "position": 150
        },
        "endLoc": {
          "line": 23,
          "column": 19,
          "position": 364
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\quiet-hours.service.d.ts",
        "start": 5,
        "end": 15,
        "startLoc": {
          "line": 5,
          "column": 11,
          "position": 54
        },
        "endLoc": {
          "line": 15,
          "column": 19,
          "position": 268
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": ", {\n    strategy?: \"blue-green\" | \"canary\" | \"rolling\" | \"recreate\";\n    environment?: \"development\" | \"production\" | \"staging\";\n    region?: string;\n    resourceGroup?: string;\n    appServiceName?: string;\n    containerRegistry?: string;\n    imageTag?: string;\n    replicas?: number;\n    healthCheckPath?: string;\n    rollbackEnabled?: boolean;\n    monitoringEnabled?: boolean;\n    autoScaling?: {\n        enabled?: boolean;\n        minReplicas?: number;\n        maxReplicas?: number;\n        targetCPU?: number;\n    };\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\project-completion-deployment.service.d.ts",
        "start": 48,
        "end": 66,
        "startLoc": {
          "line": 48,
          "column": 2,
          "position": 450
        },
        "endLoc": {
          "line": 66,
          "column": 2,
          "position": 606
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\project-completion-deployment.service.d.ts",
        "start": 30,
        "end": 48,
        "startLoc": {
          "line": 30,
          "column": 11,
          "position": 294
        },
        "endLoc": {
          "line": 48,
          "column": 2,
          "position": 450
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", {\n    type?: \"HTTP\" | \"TCP\" | \"GRPC\" | \"CUSTOM\";\n    endpoint?: string;\n    timeout?: number;\n    name?: string;\n    id?: string;\n    enabled?: boolean;\n    retries?: number;\n    interval?: number;\n    expectedResponse?: string;\n    expectedStatus?: number;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\project-completion-deployment.service.d.ts",
        "start": 89,
        "end": 100,
        "startLoc": {
          "line": 89,
          "column": 2,
          "position": 842
        },
        "endLoc": {
          "line": 100,
          "column": 2,
          "position": 939
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\project-completion-deployment.service.d.ts",
        "start": 78,
        "end": 89,
        "startLoc": {
          "line": 78,
          "column": 11,
          "position": 745
        },
        "endLoc": {
          "line": 89,
          "column": 2,
          "position": 842
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "z.ZodObject<{\n        component: z.ZodString;\n        status: z.ZodEnum<[\"PASSED\", \"FAILED\", \"WARNING\", \"SKIPPED\"]>;\n        message: z.ZodString;\n        details: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;\n        timestamp: z.ZodDate;\n        duration: z.ZodNumber;\n    }, \"strip\", z.ZodTypeAny, {\n        message?: string;\n        status?: \"PASSED\" | \"FAILED\" | \"WARNING\" | \"SKIPPED\";\n        duration?: number;\n        timestamp?: Date;\n        details?: Record<string, any>;\n        component?: string;\n    }, {\n        message?: string;\n        status?: \"PASSED\" | \"FAILED\" | \"WARNING\" | \"SKIPPED\";\n        duration?: number;\n        timestamp?: Date;\n        details?: Record<string, any>;\n        component?: string;\n    }>,",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\project-completion-deployment.service.d.ts",
        "start": 133,
        "end": 154,
        "startLoc": {
          "line": 133,
          "column": 2,
          "position": 1333
        },
        "endLoc": {
          "line": 154,
          "column": 2,
          "position": 1576
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\project-completion-deployment.service.d.ts",
        "start": 101,
        "end": 122,
        "startLoc": {
          "line": 101,
          "column": 2,
          "position": 949
        },
        "endLoc": {
          "line": 122,
          "column": 2,
          "position": 1189
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ", {\n    status?: \"FAILED\" | \"RUNNING\" | \"PENDING\" | \"SUCCESS\" | \"ROLLED_BACK\";\n    duration?: number;\n    strategy?: string;\n    metrics?: Record<string, any>;\n    url?: string;\n    environment?: string;\n    id?: string;\n    logs?: string[];\n    startTime?: Date;\n    endTime?: Date;\n    healthChecks?: {\n        message?: string;\n        status?: \"PASSED\" | \"FAILED\" | \"WARNING\" | \"SKIPPED\";\n        duration?: number;\n        timestamp?: Date;\n        details?: Record<string, any>;\n        component?: string;\n    }[];\n    rollbackReason?: string;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\project-completion-deployment.service.d.ts",
        "start": 177,
        "end": 197,
        "startLoc": {
          "line": 177,
          "column": 2,
          "position": 1824
        },
        "endLoc": {
          "line": 197,
          "column": 2,
          "position": 2020
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\project-completion-deployment.service.d.ts",
        "start": 157,
        "end": 177,
        "startLoc": {
          "line": 157,
          "column": 11,
          "position": 1628
        },
        "endLoc": {
          "line": 177,
          "column": 2,
          "position": 1824
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "}>;\n}\nexport interface ProcessInfo {\n    pid: number;\n    uptime: number;\n    memoryUsage: NodeJS.MemoryUsage;\n    cpuUsage: NodeJS.CpuUsage;\n    version: string;\n    platform: string;\n    arch: string;\n    nodeVersion: string;\n    environment: string;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\process-manager.d.ts",
        "start": 9,
        "end": 22,
        "startLoc": {
          "line": 9,
          "column": 5,
          "position": 69
        },
        "endLoc": {
          "line": 22,
          "column": 8,
          "position": 154
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\process-manager.ts",
        "start": 15,
        "end": 30,
        "startLoc": {
          "line": 15,
          "column": 3,
          "position": 130
        },
        "endLoc": {
          "line": 30,
          "column": 6,
          "position": 217
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ";\n    }\n    recordSlowQuery(query, executionTime) {\n        this.slowQueries.push({\n            query: query.substring(0, 200),\n            time: executionTime,\n            timestamp: Date.now()\n        });\n        if (this.slowQueries.length > 100) {\n            this.slowQueries = this.slowQueries.slice(-100);\n        }\n        structuredLogger.warn('Slow query detected', {\n            query: query.substring(0, 200),\n            executionTime,\n            threshold: this.config.queryOptimization",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\performance-optimizer.service.js",
        "start": 239,
        "end": 253,
        "startLoc": {
          "line": 239,
          "column": 23,
          "position": 2201
        },
        "endLoc": {
          "line": 253,
          "column": 18,
          "position": 2338
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\db\\optimization\\database-optimizer.service.js",
        "start": 536,
        "end": 550,
        "startLoc": {
          "line": 536,
          "column": 3,
          "position": 4285
        },
        "endLoc": {
          "line": 550,
          "column": 19,
          "position": 4422
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ", { cleanedCount });\n        }\n    }\n    analyzeSlowQueries() {\n        if (this.slowQueries.length === 0)\n            return;\n        const recentSlowQueries = this.slowQueries.filter(q => (Date.now() - q.timestamp) < 3600000);\n        if (recentSlowQueries.length > 10) {\n            structuredLogger.warn('High number of slow queries detected', {\n                count: recentSlowQueries.length,\n                threshold: 10\n            });\n        }\n    }\n    optimizeMemoryUsage",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\performance-optimizer.service.js",
        "start": 303,
        "end": 317,
        "startLoc": {
          "line": 303,
          "column": 26,
          "position": 2811
        },
        "endLoc": {
          "line": 317,
          "column": 20,
          "position": 2942
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\db\\optimization\\database-optimizer.service.js",
        "start": 588,
        "end": 602,
        "startLoc": {
          "line": 588,
          "column": 32,
          "position": 4766
        },
        "endLoc": {
          "line": 602,
          "column": 13,
          "position": 4897
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": "batchSize: number;\n    };\n    responseOptimization: {\n        enabled: boolean;\n        minifyJson: boolean;\n        removeNulls: boolean;\n        paginationLimit: number;\n    };\n}\nexport interface PerformanceMetrics {\n    responseTime: number;\n    compressionRatio: number;\n    cacheHitRate: number;\n    queryOptimizations: number;\n    slowQueries: number;\n    memoryUsage: number;\n    cpuUsage: number;\n}\nexport interface QueryOptimization {\n    originalQuery: string;\n    optimizedQuery: string;\n    executionTime: number;\n    optimizationType: string;\n    improvement: number;\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\performance-optimizer.service.d.ts",
        "start": 29,
        "end": 53,
        "startLoc": {
          "line": 29,
          "column": 9,
          "position": 198
        },
        "endLoc": {
          "line": 53,
          "column": 2,
          "position": 350
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\performance-optimizer.service.ts",
        "start": 41,
        "end": 66,
        "startLoc": {
          "line": 41,
          "column": 5,
          "position": 238
        },
        "endLoc": {
          "line": 66,
          "column": 14,
          "position": 392
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "export interface PerformanceMetrics {\n    responseTime: number;\n    memoryUsage: number;\n    cpuUsage: number;\n    cacheHitRate: number;\n    dbQueryTime: number;\n    apiLatency: number;\n}\nexport interface OptimizationConfig {\n    enableQueryOptimization: boolean;\n    enableCaching: boolean;\n    enableCompression: boolean;\n    enableLazyLoading: boolean;\n    enableBundleOptimization: boolean;\n    cacheTTL: number;\n    maxCacheSize: number;\n    compressionThreshold: number;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\performance-optimizer.d.ts",
        "start": 1,
        "end": 19,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 19,
          "column": 8,
          "position": 120
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\performance-optimizer.ts",
        "start": 4,
        "end": 24,
        "startLoc": {
          "line": 4,
          "column": 1,
          "position": 27
        },
        "endLoc": {
          "line": 24,
          "column": 6,
          "position": 149
        }
      }
    },
    {
      "format": "typescript",
      "lines": 27,
      "fragment": "export interface PerformanceMetrics {\n    responseTime: number;\n    memoryUsage: number;\n    cpuUsage: number;\n    cacheHitRate: number;\n    connectionPoolUsage: number;\n    queryExecutionTime: number;\n    compressionRatio: number;\n    throughput: number;\n}\nexport interface CacheConfig {\n    defaultTTL: number;\n    maxSize: number;\n    compressionEnabled: boolean;\n    lazyLoading: boolean;\n    preloadPatterns: string[];\n    evictionPolicy: 'LRU' | 'LFU' | 'TTL';\n}\nexport interface OptimizationRule {\n    id: string;\n    name: string;\n    condition: (metrics: PerformanceMetrics) => boolean;\n    action: () => Promise<void>;\n    priority: number;\n    enabled: boolean;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\performance-optimizer-v3.service.d.ts",
        "start": 1,
        "end": 27,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 27,
          "column": 8,
          "position": 199
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\performance-optimizer-v3.service.ts",
        "start": 17,
        "end": 46,
        "startLoc": {
          "line": 17,
          "column": 1,
          "position": 30
        },
        "endLoc": {
          "line": 46,
          "column": 6,
          "position": 232
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": "{\n            memoryUsage: {\n                rss: Math.round(memUsage.rss / 1024 / 1024),\n                heapTotal: Math.round(memUsage.heapTotal / 1024 / 1024),\n                heapUsed: Math.round(memUsage.heapUsed / 1024 / 1024),\n                external: Math.round(memUsage.external / 1024 / 1024),\n                arrayBuffers: Math.round(memUsage.arrayBuffers / 1024 / 1024)\n            },\n            cpuUsage: {\n                user: cpuUsage.user / 1000000,\n                system: cpuUsage.system / 1000000\n            },\n            eventLoop: {\n                lag: this",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\performance-optimizer-v2.service.js",
        "start": 92,
        "end": 105,
        "startLoc": {
          "line": 92,
          "column": 2,
          "position": 738
        },
        "endLoc": {
          "line": 105,
          "column": 5,
          "position": 904
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\performance-optimizer-v2.service.js",
        "start": 34,
        "end": 47,
        "startLoc": {
          "line": 34,
          "column": 2,
          "position": 265
        },
        "endLoc": {
          "line": 47,
          "column": 2,
          "position": 431
        }
      }
    },
    {
      "format": "typescript",
      "lines": 61,
      "fragment": "connectionLimit: number;\n    enableLazyLoading: boolean;\n    enableServicePooling: boolean;\n    enableMemoryOptimization: boolean;\n    enableQueryOptimization: boolean;\n    enableResponseCompression: boolean;\n    enableCacheOptimization: boolean;\n}\nexport interface PerformanceMetrics {\n    memoryUsage: {\n        rss: number;\n        heapTotal: number;\n        heapUsed: number;\n        external: number;\n        arrayBuffers: number;\n    };\n    cpuUsage: {\n        user: number;\n        system: number;\n    };\n    eventLoop: {\n        lag: number;\n        utilization: number;\n    };\n    gc: {\n        major: number;\n        minor: number;\n        duration: number;\n    };\n    connections: {\n        active: number;\n        idle: number;\n        total: number;\n    };\n    cache: {\n        hitRate: number;\n        size: number;\n        evictions: number;\n    };\n    queries: {\n        total: number;\n        slow: number;\n        averageTime: number;\n    };\n    responses: {\n        total: number;\n        compressed: number;\n        averageSize: number;\n    };\n}\nexport interface OptimizationResult {\n    type: 'memory' | 'cpu' | 'latency' | 'cache' | 'query' | 'connection';\n    action: string;\n    impact: 'low' | 'medium' | 'high';\n    duration: number;\n    before: any;\n    after: any;\n    success: boolean;\n    error?: string;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\performance-optimizer-v2.service.d.ts",
        "start": 10,
        "end": 70,
        "startLoc": {
          "line": 10,
          "column": 5,
          "position": 65
        },
        "endLoc": {
          "line": 70,
          "column": 8,
          "position": 470
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\performance-optimizer-v2.service.ts",
        "start": 24,
        "end": 87,
        "startLoc": {
          "line": 24,
          "column": 3,
          "position": 109
        },
        "endLoc": {
          "line": 87,
          "column": 6,
          "position": 517
        }
      }
    },
    {
      "format": "javascript",
      "lines": 17,
      "fragment": ".get(id) || null;\n    }\n    async createOnCallSchedule(request) {\n        const id = this.generateId();\n        const now = new Date();\n        const schedule = {\n            id,\n            organizationId: request.organizationId,\n            teamName: request.teamName,\n            rotationType: request.rotationType,\n            schedule: request.schedule,\n            escalationRules: request.escalationRules || [],\n            enabled: true,\n            createdAt: now,\n            updatedAt: now\n        };\n        this.schedules",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\oncall.service.js",
        "start": 15,
        "end": 31,
        "startLoc": {
          "line": 15,
          "column": 10,
          "position": 147
        },
        "endLoc": {
          "line": 31,
          "column": 10,
          "position": 289
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\quiet-hours-oncall-consolidated.service.js",
        "start": 188,
        "end": 204,
        "startLoc": {
          "line": 188,
          "column": 16,
          "position": 1811
        },
        "endLoc": {
          "line": 204,
          "column": 16,
          "position": 1953
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ".get(id);\n        if (!schedule) {\n            return null;\n        }\n        const updatedSchedule = {\n            ...schedule,\n            teamName: request.teamName ?? schedule.teamName,\n            rotationType: request.rotationType ?? schedule.rotationType,\n            schedule: request.schedule ?? schedule.schedule,\n            escalationRules: request.escalationRules ?? schedule.escalationRules,\n            enabled: request.enabled ?? schedule.enabled,\n            updatedAt: new Date()\n        };\n        this.schedules",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\oncall.service.js",
        "start": 36,
        "end": 49,
        "startLoc": {
          "line": 36,
          "column": 10,
          "position": 343
        },
        "endLoc": {
          "line": 49,
          "column": 10,
          "position": 480
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\quiet-hours-oncall-consolidated.service.js",
        "start": 215,
        "end": 228,
        "startLoc": {
          "line": 215,
          "column": 16,
          "position": 2053
        },
        "endLoc": {
          "line": 228,
          "column": 16,
          "position": 2190
        }
      }
    },
    {
      "format": "javascript",
      "lines": 22,
      "fragment": ".values())\n            .filter(shift => shift.scheduleId === scheduleId)\n            .sort((a, b) => b.startTime.getTime() - a.startTime.getTime())\n            .slice(0, limit);\n        return history;\n    }\n    async createOnCallOverride(scheduleId, originalUserId, overrideUserId, startTime, endTime, reason, requestedBy) {\n        const id = this.generateId();\n        const now = new Date();\n        const override = {\n            id,\n            scheduleId,\n            originalUserId,\n            overrideUserId,\n            startTime,\n            endTime,\n            reason,\n            requestedBy,\n            status: 'pending',\n            createdAt: now\n        };\n        this.overrides",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\oncall.service.js",
        "start": 78,
        "end": 99,
        "startLoc": {
          "line": 78,
          "column": 7,
          "position": 833
        },
        "endLoc": {
          "line": 99,
          "column": 10,
          "position": 1025
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\quiet-hours-oncall-consolidated.service.js",
        "start": 270,
        "end": 291,
        "startLoc": {
          "line": 270,
          "column": 13,
          "position": 2642
        },
        "endLoc": {
          "line": 291,
          "column": 16,
          "position": 2834
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": "(id, status, approvedBy) {\n        const override = this.overrides.get(id);\n        if (!override) {\n            return null;\n        }\n        const updatedOverride = {\n            ...override,\n            status,\n            approvedBy,\n            updatedAt: new Date()\n        };\n        this.overrides.set(id, updatedOverride);\n        return updatedOverride;\n    }\n    async getOnCallStats",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\oncall.service.js",
        "start": 102,
        "end": 116,
        "startLoc": {
          "line": 102,
          "column": 21,
          "position": 1049
        },
        "endLoc": {
          "line": 116,
          "column": 15,
          "position": 1159
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\quiet-hours.service.js",
        "start": 126,
        "end": 140,
        "startLoc": {
          "line": 126,
          "column": 25,
          "position": 1298
        },
        "endLoc": {
          "line": 140,
          "column": 19,
          "position": 1408
        }
      }
    },
    {
      "format": "javascript",
      "lines": 20,
      "fragment": ".values())\n            .filter(shift => schedules.some(s => s.id === shift.scheduleId));\n        const completedShifts = allShifts.filter(shift => shift.status === 'completed');\n        const averageResponseTime = completedShifts.length > 0\n            ? completedShifts.reduce((sum, shift) => sum + shift.responseTime, 0) / completedShifts.length\n            : 0;\n        const escalationRate = completedShifts.length > 0\n            ? (completedShifts.filter(shift => shift.incidentsHandled > 0).length / completedShifts.length) * 100\n            : 0;\n        const coveragePercentage = this.calculateCoveragePercentage(schedules);\n        return {\n            totalSchedules: schedules.length,\n            activeSchedules: activeSchedules.length,\n            totalShifts: allShifts.length,\n            averageResponseTime,\n            escalationRate,\n            coveragePercentage\n        };\n    }\n    async generateShifts",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\oncall.service.js",
        "start": 119,
        "end": 138,
        "startLoc": {
          "line": 119,
          "column": 7,
          "position": 1218
        },
        "endLoc": {
          "line": 138,
          "column": 15,
          "position": 1456
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\quiet-hours-oncall-consolidated.service.js",
        "start": 503,
        "end": 522,
        "startLoc": {
          "line": 503,
          "column": 13,
          "position": 4761
        },
        "endLoc": {
          "line": 522,
          "column": 25,
          "position": 4999
        }
      }
    },
    {
      "format": "javascript",
      "lines": 27,
      "fragment": "}\n    async generateShifts(schedule) {\n        const now = new Date();\n        const rotation = schedule.schedule.rotationPattern;\n        const participants = schedule.schedule.participants;\n        if (participants.length === 0) {\n            return;\n        }\n        const currentDate = new Date(rotation.startDate);\n        let participantIndex = 0;\n        for (let i = 0; i < 90; i++) {\n            const participant = participants[participantIndex];\n            const startTime = new Date(currentDate);\n            const endTime = new Date(currentDate);\n            endTime.setDate(endTime.getDate() + rotation.duration);\n            const shift = {\n                id: this.generateId(),\n                scheduleId: schedule.id,\n                userId: participant.userId,\n                startTime,\n                endTime,\n                status: startTime <= now && endTime >= now ? 'active' : 'scheduled',\n                incidentsHandled: 0,\n                responseTime: 0,\n                createdAt: now\n            };\n            this.shifts",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\oncall.service.js",
        "start": 137,
        "end": 163,
        "startLoc": {
          "line": 137,
          "column": 5,
          "position": 1451
        },
        "endLoc": {
          "line": 163,
          "column": 7,
          "position": 1742
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\quiet-hours-oncall-consolidated.service.js",
        "start": 728,
        "end": 754,
        "startLoc": {
          "line": 728,
          "column": 5,
          "position": 7428
        },
        "endLoc": {
          "line": 754,
          "column": 13,
          "position": 7719
        }
      }
    },
    {
      "format": "javascript",
      "lines": 18,
      "fragment": "const defaultParticipants = [\n            {\n                userId: 'user_1',\n                name: 'John Doe',\n                email: 'john.doe@example.com',\n                phone: '+1234567890',\n                role: 'primary',\n                skills: ['incident-response', 'system-administration'],\n                availability: [\n                    { dayOfWeek: 0, startTime: '00:00', endTime: '23:59', timezone: 'UTC' },\n                    { dayOfWeek: 1, startTime: '00:00', endTime: '23:59', timezone: 'UTC' },\n                    { dayOfWeek: 2, startTime: '00:00', endTime: '23:59', timezone: 'UTC' },\n                    { dayOfWeek: 3, startTime: '00:00', endTime: '23:59', timezone: 'UTC' },\n                    { dayOfWeek: 4, startTime: '00:00', endTime: '23:59', timezone: 'UTC' },\n                    { dayOfWeek: 5, startTime: '00:00', endTime: '23:59', timezone: 'UTC' },\n                    { dayOfWeek: 6, startTime: '00:00', endTime: '23:59', timezone: 'UTC' }\n                ]\n            },",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\oncall.service.js",
        "start": 185,
        "end": 202,
        "startLoc": {
          "line": 185,
          "column": 9,
          "position": 1969
        },
        "endLoc": {
          "line": 202,
          "column": 2,
          "position": 2240
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\quiet-hours-oncall-consolidated.service.js",
        "start": 567,
        "end": 585,
        "startLoc": {
          "line": 567,
          "column": 9,
          "position": 5578
        },
        "endLoc": {
          "line": 585,
          "column": 2,
          "position": 5851
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": "],\n                availability: [\n                    { dayOfWeek: 0, startTime: '00:00', endTime: '23:59', timezone: 'UTC' },\n                    { dayOfWeek: 1, startTime: '00:00', endTime: '23:59', timezone: 'UTC' },\n                    { dayOfWeek: 2, startTime: '00:00', endTime: '23:59', timezone: 'UTC' },\n                    { dayOfWeek: 3, startTime: '00:00', endTime: '23:59', timezone: 'UTC' },\n                    { dayOfWeek: 4, startTime: '00:00', endTime: '23:59', timezone: 'UTC' },\n                    { dayOfWeek: 5, startTime: '00:00', endTime: '23:59', timezone: 'UTC' },\n                    { dayOfWeek: 6, startTime: '00:00', endTime: '23:59', timezone: 'UTC' }\n                ]\n            }\n        ];\n        defaultParticipants.forEach(participant => {\n            this.participants",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\oncall.service.js",
        "start": 209,
        "end": 222,
        "startLoc": {
          "line": 209,
          "column": 26,
          "position": 2289
        },
        "endLoc": {
          "line": 222,
          "column": 13,
          "position": 2524
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\quiet-hours-oncall-consolidated.service.js",
        "start": 574,
        "end": 587,
        "startLoc": {
          "line": 574,
          "column": 24,
          "position": 5633
        },
        "endLoc": {
          "line": 587,
          "column": 19,
          "position": 5868
        }
      }
    },
    {
      "format": "javascript",
      "lines": 22,
      "fragment": "= {\n            id: 'default-oncall-schedule',\n            organizationId: 'org_1',\n            teamName: 'Platform Team',\n            rotationType: 'weekly',\n            schedule: {\n                participants: defaultParticipants,\n                rotationPattern: {\n                    type: 'sequential',\n                    duration: 7,\n                    startDate: new Date()\n                },\n                handoffTime: '09:00',\n                handoffTimezone: 'UTC',\n                overlapMinutes: 30\n            },\n            escalationRules: [],\n            enabled: true,\n            createdAt: new Date(),\n            updatedAt: new Date()\n        };\n        this.schedules",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\oncall.service.js",
        "start": 224,
        "end": 245,
        "startLoc": {
          "line": 224,
          "column": 2,
          "position": 2547
        },
        "endLoc": {
          "line": 245,
          "column": 10,
          "position": 2693
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\quiet-hours-oncall-consolidated.service.js",
        "start": 589,
        "end": 610,
        "startLoc": {
          "line": 589,
          "column": 2,
          "position": 5891
        },
        "endLoc": {
          "line": 610,
          "column": 16,
          "position": 6037
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ";\n    getOnCallSchedules(organizationId: string): Promise<OnCallSchedule[]>;\n    getOnCallSchedule(id: string): Promise<OnCallSchedule | null>;\n    createOnCallSchedule(request: CreateOnCallScheduleRequest): Promise<OnCallSchedule>;\n    updateOnCallSchedule(id: string, request: UpdateOnCallScheduleRequest): Promise<OnCallSchedule | null>;\n    deleteOnCallSchedule(id: string): Promise<boolean>;\n    getCurrentOnCall(scheduleId: string): Promise<OnCallParticipant | null>;\n    getOnCallHistory(scheduleId: string, limit?: number): Promise<OnCallShift[]>;\n    createOnCallOverride(scheduleId: string, originalUserId: string, overrideUserId: string, startTime: Date, endTime: Date, reason: string, requestedBy: string): Promise<OnCallOverride>;\n    updateOnCallOverride(id: string, status: 'approved' | 'rejected', approvedBy: string): Promise<OnCallOverride | null>;\n    getOnCallStats",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\oncall.service.d.ts",
        "start": 7,
        "end": 17,
        "startLoc": {
          "line": 7,
          "column": 2,
          "position": 69
        },
        "endLoc": {
          "line": 17,
          "column": 15,
          "position": 301
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\quiet-hours-oncall-consolidated.service.d.ts",
        "start": 22,
        "end": 32,
        "startLoc": {
          "line": 22,
          "column": 2,
          "position": 361
        },
        "endLoc": {
          "line": 32,
          "column": 21,
          "position": 593
        }
      }
    },
    {
      "format": "typescript",
      "lines": 27,
      "fragment": "createTemplate(template: Omit<NotificationTemplate, 'id' | 'createdAt' | 'updatedAt'>): Promise<NotificationTemplate>;\n    getTemplate(id: string): Promise<NotificationTemplate | null>;\n    listTemplates(orgId: string): Promise<NotificationTemplate[]>;\n    updateTemplate(id: string, updates: Partial<NotificationTemplate>): Promise<NotificationTemplate>;\n    deleteTemplate(id: string): Promise<void>;\n    createNotification(notification: Omit<Notification, 'id' | 'createdAt' | 'updatedAt'>): Promise<Notification>;\n    getNotification(id: string): Promise<Notification | null>;\n    listNotifications(userId: string, orgId: string, filters?: {\n        status?: string;\n        type?: string;\n        priority?: string;\n        limit?: number;\n        offset?: number;\n    }): Promise<Notification[]>;\n    updateNotification(id: string, updates: Partial<Notification>): Promise<Notification>;\n    deleteNotification(id: string): Promise<void>;\n    markAsRead(id: string): Promise<Notification>;\n    markAllAsRead(userId: string, orgId: string): Promise<void>;\n    getPreferences(userId: string, orgId: string): Promise<NotificationPreferences>;\n    updatePreferences(userId: string, orgId: string, updates: Partial<NotificationPreferences>): Promise<NotificationPreferences>;\n    sendNotification(notification: Omit<Notification, 'id' | 'createdAt' | 'updatedAt'>): Promise<Notification>;\n    sendBulkNotifications(notifications: Omit<Notification, 'id' | 'createdAt' | 'updatedAt'>[]): Promise<Notification[]>;\n    scheduleNotification(notification: Omit<Notification, 'id' | 'createdAt' | 'updatedAt'>, scheduledAt: Date): Promise<Notification>;\n    getStatistics(orgId: string): Promise<NotificationStats>;\n    getUnreadCount(userId: string, orgId: string): Promise<number>;\n    validateTemplate(template: NotificationTemplate): Promise<boolean>;\n    private",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\notifications.d.ts",
        "start": 95,
        "end": 121,
        "startLoc": {
          "line": 95,
          "column": 5,
          "position": 1141
        },
        "endLoc": {
          "line": 121,
          "column": 8,
          "position": 1660
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\notifications.d.ts",
        "start": 63,
        "end": 89,
        "startLoc": {
          "line": 63,
          "column": 5,
          "position": 582
        },
        "endLoc": {
          "line": 89,
          "column": 2,
          "position": 1100
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "export interface MetricData {\n    name: string;\n    value: number;\n    timestamp: number;\n    labels?: Record<string, string>;\n    type: 'counter' | 'gauge' | 'histogram' | 'summary';\n}\nexport interface AlertRule {\n    id: string;\n    name: string;\n    description: string;\n    metric: string;\n    condition: 'gt' | 'lt' | 'eq' | 'gte' | 'lte';\n    threshold: number;\n    duration: number;\n    severity",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\monitoring.service.d.ts",
        "start": 1,
        "end": 16,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 16,
          "column": 9,
          "position": 138
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\monitoring.service.ts",
        "start": 7,
        "end": 22,
        "startLoc": {
          "line": 7,
          "column": 1,
          "position": 32
        },
        "endLoc": {
          "line": 22,
          "column": 12,
          "position": 170
        }
      }
    },
    {
      "format": "typescript",
      "lines": 27,
      "fragment": "severity: 'low' | 'medium' | 'high' | 'critical';\n    enabled: boolean;\n    actions: AlertAction[];\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface AlertAction {\n    type: 'email' | 'webhook' | 'slack' | 'sms';\n    config: Record<string, any>;\n}\nexport interface Alert {\n    id: string;\n    ruleId: string;\n    status: 'firing' | 'resolved';\n    severity: 'low' | 'medium' | 'high' | 'critical';\n    message: string;\n    value: number;\n    threshold: number;\n    startedAt: Date;\n    resolvedAt?: Date;\n    acknowledgedAt?: Date;\n    acknowledgedBy?: string;\n}\nexport interface SystemHealth {\n    status: 'healthy' | 'degraded' | 'unhealthy';\n    score: number;\n    checks",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\monitoring.service.d.ts",
        "start": 16,
        "end": 42,
        "startLoc": {
          "line": 16,
          "column": 5,
          "position": 138
        },
        "endLoc": {
          "line": 42,
          "column": 7,
          "position": 367
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\monitoring.service.ts",
        "start": 23,
        "end": 51,
        "startLoc": {
          "line": 23,
          "column": 3,
          "position": 173
        },
        "endLoc": {
          "line": 51,
          "column": 9,
          "position": 404
        }
      }
    },
    {
      "format": "typescript",
      "lines": 34,
      "fragment": "checks: HealthCheck[];\n    timestamp: Date;\n}\nexport interface HealthCheck {\n    name: string;\n    status: 'pass' | 'fail' | 'warn';\n    message: string;\n    duration: number;\n    details?: Record<string, any>;\n}\nexport interface PerformanceMetrics {\n    responseTime: {\n        p50: number;\n        p95: number;\n        p99: number;\n        average: number;\n    };\n    throughput: {\n        requestsPerSecond: number;\n        requestsPerMinute: number;\n        requestsPerHour: number;\n    };\n    errorRate: {\n        percentage: number;\n        count: number;\n        total: number;\n    };\n    resourceUsage: {\n        cpu: number;\n        memory: number;\n        disk: number;\n    };\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\monitoring.service.d.ts",
        "start": 42,
        "end": 75,
        "startLoc": {
          "line": 42,
          "column": 5,
          "position": 367
        },
        "endLoc": {
          "line": 75,
          "column": 8,
          "position": 587
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\monitoring.service.ts",
        "start": 52,
        "end": 88,
        "startLoc": {
          "line": 52,
          "column": 3,
          "position": 407
        },
        "endLoc": {
          "line": 88,
          "column": 6,
          "position": 630
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ") {\n            if (!rule.enabled)\n                continue;\n            try {\n                const shouldTrigger = await this.evaluateRule(rule);\n                if (shouldTrigger) {\n                    await this.triggerAlert(rule);\n                }\n                else {\n                    await this.resolveAlert(ruleId);\n                }\n            }\n            catch (error) {\n                structuredLogger",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\monitoring-alerts.service.js",
        "start": 234,
        "end": 247,
        "startLoc": {
          "line": 234,
          "column": 2,
          "position": 1918
        },
        "endLoc": {
          "line": 247,
          "column": 17,
          "position": 2013
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\infrastructure\\observability\\alerting.service.js",
        "start": 220,
        "end": 233,
        "startLoc": {
          "line": 220,
          "column": 11,
          "position": 1867
        },
        "endLoc": {
          "line": 233,
          "column": 5,
          "position": 1962
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ") {\n        switch (condition.operator) {\n            case 'gt':\n                return value > condition.threshold;\n            case 'lt':\n                return value < condition.threshold;\n            case 'eq':\n                return value === condition.threshold;\n            case 'gte':\n                return value >= condition.threshold;\n            case 'lte':\n                return value <= condition.threshold;\n            case",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\monitoring-alerts.service.js",
        "start": 285,
        "end": 297,
        "startLoc": {
          "line": 285,
          "column": 10,
          "position": 2444
        },
        "endLoc": {
          "line": 297,
          "column": 5,
          "position": 2550
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\ai-performance-optimization.service.js",
        "start": 442,
        "end": 449,
        "startLoc": {
          "line": 442,
          "column": 6,
          "position": 3802
        },
        "endLoc": {
          "line": 449,
          "column": 8,
          "position": 3903
        }
      }
    },
    {
      "format": "typescript",
      "lines": 38,
      "fragment": "channels: NotificationChannel[];\n    recipients: string[];\n    message: string;\n}\nexport interface Alert {\n    id: string;\n    ruleId: string;\n    title: string;\n    message: string;\n    severity: AlertSeverity;\n    status: AlertStatus;\n    triggeredAt: Date;\n    acknowledgedAt?: Date;\n    resolvedAt?: Date;\n    acknowledgedBy?: string;\n    resolvedBy?: string;\n    metadata: Record<string, any>;\n    organizationId: string;\n}\nexport interface NotificationConfig {\n    channels: NotificationChannel[];\n    recipients: Record<NotificationChannel, string[]>;\n    templates: Record<AlertSeverity, string>;\n    rateLimit: {\n        maxPerHour: number;\n        maxPerDay: number;\n    };\n}\nexport interface MonitoringStats {\n    totalAlerts: number;\n    activeAlerts: number;\n    alertsBySeverity: Record<AlertSeverity, number>;\n    alertsByStatus: Record<AlertStatus, number>;\n    averageResolutionTime: number;\n    escalationRate: number;\n    falsePositiveRate: number;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\monitoring-alerts.service.d.ts",
        "start": 47,
        "end": 84,
        "startLoc": {
          "line": 47,
          "column": 5,
          "position": 356
        },
        "endLoc": {
          "line": 84,
          "column": 8,
          "position": 637
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\monitoring-alerts.service.ts",
        "start": 63,
        "end": 104,
        "startLoc": {
          "line": 63,
          "column": 3,
          "position": 394
        },
        "endLoc": {
          "line": 104,
          "column": 6,
          "position": 679
        }
      }
    },
    {
      "format": "javascript",
      "lines": 37,
      "fragment": "import { register, Counter, Histogram, collectDefaultMetrics } from 'prom-client';\nexport class MetricsService {\n    healthCheckCounter;\n    healthCheckDuration;\n    metricsInitialized = false;\n    constructor() {\n        this.initializeMetrics();\n    }\n    initializeMetrics() {\n        if (this.metricsInitialized)\n            return;\n        collectDefaultMetrics({ register });\n        this.healthCheckCounter = new Counter({\n            name: 'health_check_total',\n            help: 'Total number of health checks',\n            labelNames: ['type', 'status'],\n            registers: [register]\n        });\n        this.healthCheckDuration = new Histogram({\n            name: 'health_check_duration_seconds',\n            help: 'Health check duration in seconds',\n            labelNames: ['type', 'status'],\n            buckets: [0.1, 0.5, 1, 2, 5],\n            registers: [register]\n        });\n        this.metricsInitialized = true;\n    }\n    incrementHealthCheck(type, status = 'success') {\n        this.healthCheckCounter.labels(type, status).inc();\n    }\n    recordHealthCheckDuration(type, durationMs, status = 'success') {\n        this.healthCheckDuration.labels(type, status).observe(durationMs / 1000);\n    }\n    async getMetrics() {\n        return register.metrics();\n    }\n    async getPrometheusMetrics",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\metrics.js",
        "start": 1,
        "end": 37,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 37,
          "column": 21,
          "position": 338
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\metrics.new.js",
        "start": 1,
        "end": 37,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 37,
          "column": 22,
          "position": 338
        }
      }
    },
    {
      "format": "javascript",
      "lines": 16,
      "fragment": "{\n            total: this.config.maxMemoryMB,\n            used: Math.round(memUsage.rss / 1024 / 1024),\n            free: this.config.maxMemoryMB - Math.round(memUsage.rss / 1024 / 1024),\n            heap: {\n                total: Math.round(memUsage.heapTotal / 1024 / 1024),\n                used: Math.round(memUsage.heapUsed / 1024 / 1024),\n                free: Math.round((memUsage.heapTotal - memUsage.heapUsed) / 1024 / 1024),\n                external: Math.round(memUsage.external / 1024 / 1024),\n                arrayBuffers: Math.round(memUsage.arrayBuffers / 1024 / 1024)\n            },\n            rss: Math.round(memUsage.rss / 1024 / 1024),\n            external: Math.round(memUsage.external / 1024 / 1024),\n            arrayBuffers: Math.round(memUsage.arrayBuffers / 1024 / 1024),\n            gc: {\n                major: this",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\memory-manager.service.js",
        "start": 116,
        "end": 131,
        "startLoc": {
          "line": 116,
          "column": 2,
          "position": 1124
        },
        "endLoc": {
          "line": 131,
          "column": 5,
          "position": 1392
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\memory-manager.service.js",
        "start": 36,
        "end": 51,
        "startLoc": {
          "line": 36,
          "column": 2,
          "position": 295
        },
        "endLoc": {
          "line": 51,
          "column": 2,
          "position": 563
        }
      }
    },
    {
      "format": "typescript",
      "lines": 57,
      "fragment": "}\nexport interface MemoryMetrics {\n    total: number;\n    used: number;\n    free: number;\n    heap: {\n        total: number;\n        used: number;\n        free: number;\n        external: number;\n        arrayBuffers: number;\n    };\n    rss: number;\n    external: number;\n    arrayBuffers: number;\n    gc: {\n        major: number;\n        minor: number;\n        duration: number;\n        lastGC: number;\n    };\n    cache: {\n        size: number;\n        entries: number;\n        hitRate: number;\n        evictions: number;\n    };\n    leaks: {\n        detected: number;\n        suspected: number;\n        resolved: number;\n    };\n    compression: {\n        compressed: number;\n        savings: number;\n        ratio: number;\n    };\n}\nexport interface MemoryLeak {\n    id: string;\n    type: 'object' | 'array' | 'function' | 'closure' | 'timer' | 'event';\n    size: number;\n    location: string;\n    firstDetected: number;\n    lastSeen: number;\n    count: number;\n    stackTrace?: string;\n}\nexport interface GCAction {\n    type: 'minor' | 'major' | 'incremental' | 'full';\n    duration: number;\n    freed: number;\n    before: number;\n    after: number;\n    timestamp: number;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\memory-manager.service.d.ts",
        "start": 14,
        "end": 70,
        "startLoc": {
          "line": 14,
          "column": 1,
          "position": 92
        },
        "endLoc": {
          "line": 70,
          "column": 8,
          "position": 482
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\memory-manager.service.ts",
        "start": 29,
        "end": 89,
        "startLoc": {
          "line": 29,
          "column": 1,
          "position": 136
        },
        "endLoc": {
          "line": 89,
          "column": 6,
          "position": 530
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "export interface MakeQuota {\n    orgId: string;\n    plan: string;\n    monthlyLimit: number;\n    currentUsage: number;\n    resetDate: Date;\n}\nexport interface IdempotencyRecord {\n    key: string;\n    orgId: string;\n    response: any;\n    createdAt: Date;\n    expiresAt: Date;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\make-quotas.service.d.ts",
        "start": 1,
        "end": 15,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 15,
          "column": 8,
          "position": 92
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\make-quotas.service.ts",
        "start": 4,
        "end": 20,
        "startLoc": {
          "line": 4,
          "column": 1,
          "position": 30
        },
        "endLoc": {
          "line": 20,
          "column": 6,
          "position": 124
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "requestId?: string;\n    correlationId?: string;\n    traceId?: string;\n    spanId?: string;\n    parentSpanId?: string;\n    endpoint?: string;\n    method?: string;\n    path?: string;\n    query?: Record<string, unknown>;\n    queryJson?: string;\n    duration",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\logger.d.ts",
        "start": 8,
        "end": 18,
        "startLoc": {
          "line": 8,
          "column": 5,
          "position": 59
        },
        "endLoc": {
          "line": 18,
          "column": 9,
          "position": 145
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\logger.ts",
        "start": 13,
        "end": 24,
        "startLoc": {
          "line": 13,
          "column": 3,
          "position": 70
        },
        "endLoc": {
          "line": 24,
          "column": 27,
          "position": 157
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "isRetry?: boolean;\n    isCached?: boolean;\n    isDegraded?: boolean;\n    isRateLimited?: boolean;\n    service?: string;\n    status?: string;\n    metricName?: string;\n    metricValue?: number;\n    metricLabels?: Record<string, string>;\n    operation?: string;\n    ruleId?: string;\n    ruleName?: string;\n    updates?: any;\n    alertId?: string;\n    acknowledgedBy?: string;\n    alertCount?: number;\n    alerts?: any[];\n    key",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\logger.d.ts",
        "start": 38,
        "end": 55,
        "startLoc": {
          "line": 38,
          "column": 5,
          "position": 305
        },
        "endLoc": {
          "line": 55,
          "column": 4,
          "position": 449
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\logger.ts",
        "start": 53,
        "end": 70,
        "startLoc": {
          "line": 53,
          "column": 3,
          "position": 336
        },
        "endLoc": {
          "line": 70,
          "column": 16,
          "position": 480
        }
      }
    },
    {
      "format": "typescript",
      "lines": 41,
      "fragment": "stats?: any;\n    age?: number;\n    accessCount?: number;\n    cacheSize?: number;\n    totalItems?: number;\n    score?: number;\n    flagId?: string;\n    variablesCount?: number;\n    valueType?: string;\n    valueLength?: number;\n    aggregateId?: string;\n    eventId?: string;\n    eventType?: string;\n    readModelId?: string;\n    commandType?: string;\n    commandId?: string;\n    queryType?: string;\n    queryId?: string;\n    fromTimestamp?: string;\n    eventCount?: number;\n    amount?: number;\n    percentage?: number;\n    notificationId?: string;\n    cutoffDate?: string;\n    config?: any;\n    serviceId?: string;\n    routeId?: string;\n    serviceName?: string;\n    flags?: any;\n    flagIds?: string[];\n    remaining?: number;\n    apiKey?: string;\n    role?: string;\n    table?: string;\n    resource?: string;\n    expected?: string;\n    limit?: number;\n    strategy?: string;\n    filters?: any;\n    model?: string;\n    mfaType",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\logger.d.ts",
        "start": 72,
        "end": 112,
        "startLoc": {
          "line": 72,
          "column": 5,
          "position": 591
        },
        "endLoc": {
          "line": 112,
          "column": 8,
          "position": 913
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\logger.ts",
        "start": 93,
        "end": 133,
        "startLoc": {
          "line": 93,
          "column": 3,
          "position": 640
        },
        "endLoc": {
          "line": 133,
          "column": 26,
          "position": 962
        }
      }
    },
    {
      "format": "typescript",
      "lines": 36,
      "fragment": "mfaType?: string;\n    mfaEnabled?: boolean;\n    system?: string;\n    action?: string;\n    permissionId?: string;\n    roleId?: string;\n    tokenId?: string;\n    auditLogId?: string;\n    securityEventId?: string;\n    threatId?: string;\n    ipAddress?: string;\n    reputation?: string;\n    threatTypes?: string[];\n    confidence?: number;\n    country?: string;\n    lastSeen?: string;\n    scopes?: string[];\n    roleName?: string;\n    auditId?: string;\n    bruteForceAttempts?: number;\n    accountLocked?: boolean;\n    threatReputation?: string;\n    threatCountry?: string;\n    threatConfidence?: number;\n    backupCodes?: string[];\n    qrCode?: string;\n    phoneNumber?: string;\n    verificationCode?: string;\n    passwordHash?: string;\n    salt?: string;\n    jwtPayload?: any;\n    failedLoginCount?: number;\n    lockoutDuration?: number;\n    securityEventCount?: number;\n    timeWindow?: string;\n    dashboardsCount",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\logger.d.ts",
        "start": 112,
        "end": 147,
        "startLoc": {
          "line": 112,
          "column": 5,
          "position": 913
        },
        "endLoc": {
          "line": 147,
          "column": 16,
          "position": 1199
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\logger.ts",
        "start": 134,
        "end": 169,
        "startLoc": {
          "line": 134,
          "column": 3,
          "position": 965
        },
        "endLoc": {
          "line": 169,
          "column": 20,
          "position": 1251
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": "category?: string;\n    cpuUsage?: number;\n    memoryUsage?: number;\n    diskUsage?: number;\n    processCount?: number;\n    responseTime?: number;\n    uptime?: number;\n    transactionId?: string;\n    spanName?: string;\n    spanType?: string;\n    activeConnections?: number;\n    queryCount?: number;\n    slowQueries?: number;\n    cacheHitRate?: number;\n    anomalyMetric?: string;\n    anomalyValue?: number;\n    expectedRange?: [number, number];\n    severity?: string;\n    threshold?: number;\n    dashboardName?: string;\n    orgId?: string;\n    monitoringInterval?: number;\n    metricsCollected?: any;\n    components?: string[];\n    email",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\logger.d.ts",
        "start": 190,
        "end": 214,
        "startLoc": {
          "line": 190,
          "column": 5,
          "position": 1543
        },
        "endLoc": {
          "line": 214,
          "column": 6,
          "position": 1742
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\logger.ts",
        "start": 225,
        "end": 249,
        "startLoc": {
          "line": 225,
          "column": 3,
          "position": 1634
        },
        "endLoc": {
          "line": 249,
          "column": 37,
          "position": 1833
        }
      }
    },
    {
      "format": "typescript",
      "lines": 29,
      "fragment": "email?: string;\n    code?: string;\n    reportsCount?: number;\n    timeRange?: string;\n    dimensionsCount?: number;\n    widgetsCount?: number;\n    count?: number;\n    enabled?: boolean;\n    toVersion?: number;\n    url?: string;\n    notificationsCount?: number;\n    features?: string[];\n    remoteAddress?: string;\n    messageType?: string;\n    ownerId?: string;\n    usersCount?: number;\n    filteredQuery?: string;\n    sanitizedData?: any;\n    successful?: number;\n    permissions?: string[];\n    permissionAction?: string;\n    auditAction?: string;\n    totalUsers?: number;\n    maxRetries?: number;\n    clientIp?: string;\n    body?: any;\n    routeName?: string;\n    success?: boolean;\n    onboardingWorkflowId",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\logger.d.ts",
        "start": 214,
        "end": 242,
        "startLoc": {
          "line": 214,
          "column": 5,
          "position": 1742
        },
        "endLoc": {
          "line": 242,
          "column": 21,
          "position": 1970
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\logger.ts",
        "start": 250,
        "end": 278,
        "startLoc": {
          "line": 250,
          "column": 3,
          "position": 1836
        },
        "endLoc": {
          "line": 278,
          "column": 42,
          "position": 2064
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": "onboardingWorkflowId?: string;\n    totalRecords?: number;\n    connectionsCount?: number;\n    username?: string;\n    totalRoles?: number;\n    serviceInstance?: string;\n    loadBalancerStrategy?: string;\n    headersCount?: number;\n    totalPermissions?: number;\n    resetTime?: string;\n    totalAuditLogs?: number;\n    serviceInstanceId?: string;\n    totalSecurityEvents?: number;\n}\ninterface LogEntry {\n    timestamp: string;\n    level: 'error' | 'warn' | 'info' | 'debug';\n    message: string;\n    context?: LogContext;\n    traceId?: string;\n    spanId?: string;\n}\ndeclare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\logger.d.ts",
        "start": 242,
        "end": 264,
        "startLoc": {
          "line": 242,
          "column": 5,
          "position": 1970
        },
        "endLoc": {
          "line": 264,
          "column": 8,
          "position": 2140
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\logger.ts",
        "start": 279,
        "end": 303,
        "startLoc": {
          "line": 279,
          "column": 3,
          "position": 2067
        },
        "endLoc": {
          "line": 303,
          "column": 6,
          "position": 2239
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": ", {\n    name?: string;\n    metadata?: Record<string, any>;\n    id?: string;\n    location?: string;\n    tags?: string[];\n    createdAt?: Date;\n    updatedAt?: Date;\n    description?: string;\n    category?: \"electronics\" | \"clothing\" | \"food\" | \"books\" | \"tools\" | \"furniture\" | \"other\";\n    sku?: string;\n    unit?: string;\n    cost?: number;\n    supplier?: string;\n    price?: number;\n    minStock?: number;\n    maxStock?: number;\n    currentStock?: number;\n    reorderPoint?: number;\n    reorderQuantity?: number;\n    expiryDate?: Date;\n    barcode?: string;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\inventory.d.ts",
        "start": 54,
        "end": 76,
        "startLoc": {
          "line": 54,
          "column": 2,
          "position": 710
        },
        "endLoc": {
          "line": 76,
          "column": 2,
          "position": 915
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\inventory.d.ts",
        "start": 32,
        "end": 54,
        "startLoc": {
          "line": 32,
          "column": 11,
          "position": 505
        },
        "endLoc": {
          "line": 54,
          "column": 2,
          "position": 710
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ", {\n    type?: \"purchase\" | \"sale\" | \"return\" | \"adjustment\" | \"transfer\" | \"damage\" | \"expiry\";\n    userId?: string;\n    metadata?: Record<string, any>;\n    id?: string;\n    location?: string;\n    orgId?: string;\n    customer?: string;\n    createdAt?: Date;\n    notes?: string;\n    reference?: string;\n    quantity?: number;\n    supplier?: string;\n    productId?: string;\n    unitCost?: number;\n    totalCost?: number;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\inventory.d.ts",
        "start": 109,
        "end": 125,
        "startLoc": {
          "line": 109,
          "column": 2,
          "position": 1299
        },
        "endLoc": {
          "line": 125,
          "column": 2,
          "position": 1454
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\inventory.d.ts",
        "start": 93,
        "end": 109,
        "startLoc": {
          "line": 93,
          "column": 11,
          "position": 1144
        },
        "endLoc": {
          "line": 109,
          "column": 2,
          "position": 1299
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ", {\n    message?: string;\n    type?: \"overstock\" | \"low_stock\" | \"out_of_stock\" | \"expiry_warning\" | \"expiry_critical\";\n    status?: \"acknowledged\" | \"active\" | \"resolved\" | \"dismissed\";\n    metadata?: Record<string, any>;\n    id?: string;\n    severity?: \"critical\" | \"low\" | \"medium\" | \"high\";\n    orgId?: string;\n    createdAt?: Date;\n    updatedAt?: Date;\n    threshold?: number;\n    acknowledgedBy?: string;\n    productId?: string;\n    currentValue?: number;\n    acknowledgedAt?: Date;\n    resolvedAt?: Date;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\inventory.d.ts",
        "start": 158,
        "end": 174,
        "startLoc": {
          "line": 158,
          "column": 2,
          "position": 1861
        },
        "endLoc": {
          "line": 174,
          "column": 2,
          "position": 2032
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\inventory.d.ts",
        "start": 142,
        "end": 158,
        "startLoc": {
          "line": 142,
          "column": 11,
          "position": 1690
        },
        "endLoc": {
          "line": 158,
          "column": 2,
          "position": 1861
        }
      }
    },
    {
      "format": "typescript",
      "lines": 27,
      "fragment": ", {\n    totalValue?: number;\n    averageCost?: number;\n    totalProducts?: number;\n    lowStockItems?: number;\n    outOfStockItems?: number;\n    overstockItems?: number;\n    expiringItems?: number;\n    turnoverRate?: number;\n    topProducts?: {\n        value?: number;\n        quantity?: number;\n        productId?: string;\n        productName?: string;\n    }[];\n    categoryBreakdown?: Record<string, {\n        value?: number;\n        count?: number;\n    }>;\n    recentTransactions?: {\n        type?: \"purchase\" | \"sale\" | \"return\" | \"adjustment\" | \"transfer\" | \"damage\" | \"expiry\";\n        date?: Date;\n        id?: string;\n        quantity?: number;\n        productName?: string;\n    }[];\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\inventory.d.ts",
        "start": 255,
        "end": 281,
        "startLoc": {
          "line": 255,
          "column": 2,
          "position": 2831
        },
        "endLoc": {
          "line": 281,
          "column": 2,
          "position": 3055
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\inventory.d.ts",
        "start": 229,
        "end": 255,
        "startLoc": {
          "line": 229,
          "column": 11,
          "position": 2607
        },
        "endLoc": {
          "line": 255,
          "column": 2,
          "position": 2831
        }
      }
    },
    {
      "format": "typescript",
      "lines": 33,
      "fragment": "checkStockLevels(): Promise<void>;\n    calculateTurnoverRate(productId: string, days?: number): Promise<number>;\n    getLowStockProducts(): Promise<Product[]>;\n    getExpiringProducts(days?: number): Promise<Product[]>;\n}\nexport interface ProductFilters {\n    category?: ProductCategory;\n    supplier?: string;\n    location?: string;\n    lowStock?: boolean;\n    outOfStock?: boolean;\n    overstock?: boolean;\n    expiring?: boolean;\n    tags?: string[];\n}\nexport interface TransactionFilters {\n    productId?: string;\n    type?: TransactionType;\n    fromDate?: Date;\n    toDate?: Date;\n    userId?: string;\n    orgId?: string;\n}\nexport interface AlertFilters {\n    productId?: string;\n    type?: AlertType;\n    status?: AlertStatus;\n    severity?: string;\n    fromDate?: Date;\n    toDate?: Date;\n    orgId?: string;\n}\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\inventory.d.ts",
        "start": 302,
        "end": 334,
        "startLoc": {
          "line": 302,
          "column": 5,
          "position": 3466
        },
        "endLoc": {
          "line": 334,
          "column": 7,
          "position": 3735
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\inventory.ts",
        "start": 156,
        "end": 192,
        "startLoc": {
          "line": 156,
          "column": 3,
          "position": 1726
        },
        "endLoc": {
          "line": 192,
          "column": 80,
          "position": 1999
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": "createProduct(product: Omit<Product, 'id' | 'createdAt' | 'updatedAt'>): Promise<Product>;\n    getProduct(id: string): Promise<Product | null>;\n    updateProduct(id: string, updates: Partial<Product>): Promise<Product>;\n    deleteProduct(id: string): Promise<void>;\n    listProducts(filters?: ProductFilters): Promise<Product[]>;\n    addTransaction(transaction: Omit<KardexTransaction, 'id' | 'createdAt'>): Promise<KardexTransaction>;\n    getTransaction(id: string): Promise<KardexTransaction | null>;\n    listTransactions(filters?: TransactionFilters): Promise<KardexTransaction[]>;\n    getProductKardex(productId: string): Promise<KardexTransaction[]>;\n    createAlert(alert: Omit<StockAlert, 'id' | 'createdAt' | 'updatedAt'>): Promise<StockAlert>;\n    getAlert(id: string): Promise<StockAlert | null>;\n    updateAlert(id: string, updates: Partial<StockAlert>): Promise<StockAlert>;\n    deleteAlert(id: string): Promise<void>;\n    listAlerts(filters?: AlertFilters): Promise<StockAlert[]>;\n    acknowledgeAlert(id: string, userId: string): Promise<void>;\n    resolveAlert(id: string): Promise<void>;\n    getInventoryReport(): Promise<InventoryReport>;\n    getProductReport(productId: string): Promise<any>;\n    getKardexReport(productId: string, fromDate?: Date, toDate?: Date): Promise<any>;\n    checkStockLevels(): Promise<void>;\n    calculateTurnoverRate(productId: string, days?: number): Promise<number>;\n    getLowStockProducts(): Promise<Product[]>;\n    getExpiringProducts(days?: number): Promise<Product[]>;\n    private",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\inventory.d.ts",
        "start": 343,
        "end": 366,
        "startLoc": {
          "line": 343,
          "column": 5,
          "position": 3844
        },
        "endLoc": {
          "line": 366,
          "column": 8,
          "position": 4311
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\inventory.ts",
        "start": 129,
        "end": 160,
        "startLoc": {
          "line": 129,
          "column": 3,
          "position": 1307
        },
        "endLoc": {
          "line": 160,
          "column": 2,
          "position": 1793
        }
      }
    },
    {
      "format": "javascript",
      "lines": 18,
      "fragment": "};\n                break;\n            }\n            default: {\n                break;\n            }\n        }\n        const report = {\n            id: `report_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`,\n            organizationId,\n            reportType: reportType,\n            period: { startDate, endDate },\n            summary,\n            data,\n            generatedBy,\n            createdAt: new Date().toISOString()\n        };\n        structuredLogger.info('Inventory report generated'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\inventory-kardex.service.js",
        "start": 611,
        "end": 628,
        "startLoc": {
          "line": 611,
          "column": 2,
          "position": 6443
        },
        "endLoc": {
          "line": 628,
          "column": 29,
          "position": 6574
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\supplier-scorecard.service.js",
        "start": 496,
        "end": 513,
        "startLoc": {
          "line": 496,
          "column": 2,
          "position": 5213
        },
        "endLoc": {
          "line": 513,
          "column": 28,
          "position": 5344
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": "cost: number;\n    price: number;\n    currency: string;\n    reorderPoint: number;\n    reorderQuantity: number;\n    maxStock: number;\n    minStock: number;\n    isActive: boolean;\n    supplierId?: string;\n    location: string;\n    barcode?: string;\n    tags: string[];\n    createdAt: string;\n    updatedAt: string;\n}\ninterface KardexEntry {\n    id: string;\n    organizationId: string;\n    productId: string;\n    transactionType: 'in' | 'out' | 'adjustment' | 'transfer' | 'return' | 'waste' | 'cycle_count';\n    quantity: number;\n    unitCost: number;\n    totalCost: number;\n    reference: string;\n    referenceType",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\inventory-kardex.service.d.ts",
        "start": 9,
        "end": 33,
        "startLoc": {
          "line": 9,
          "column": 5,
          "position": 56
        },
        "endLoc": {
          "line": 33,
          "column": 14,
          "position": 246
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\inventory-kardex.service.ts",
        "start": 14,
        "end": 38,
        "startLoc": {
          "line": 14,
          "column": 3,
          "position": 77
        },
        "endLoc": {
          "line": 38,
          "column": 37,
          "position": 267
        }
      }
    },
    {
      "format": "typescript",
      "lines": 76,
      "fragment": "referenceType: 'purchase' | 'sale' | 'adjustment' | 'transfer' | 'return' | 'cycle_count' | 'waste';\n    location: string;\n    notes?: string;\n    userId: string;\n    userName: string;\n    createdAt: string;\n    updatedAt: string;\n}\ninterface StockLevel {\n    productId: string;\n    organizationId: string;\n    currentStock: number;\n    reservedStock: number;\n    availableStock: number;\n    totalValue: number;\n    averageCost: number;\n    lastMovement: string;\n    lastMovementType: string;\n    location: string;\n    updatedAt: string;\n}\ninterface Alert {\n    id: string;\n    organizationId: string;\n    productId: string;\n    alertType: 'low_stock' | 'overstock' | 'reorder_point' | 'negative_stock' | 'slow_moving' | 'expired' | 'cycle_count_due';\n    severity: 'low' | 'medium' | 'high' | 'critical';\n    title: string;\n    message: string;\n    currentValue: number;\n    thresholdValue: number;\n    isActive: boolean;\n    isAcknowledged: boolean;\n    acknowledgedBy?: string;\n    acknowledgedAt?: string;\n    createdAt: string;\n    updatedAt: string;\n}\ninterface CycleCount {\n    id: string;\n    organizationId: string;\n    productId: string;\n    scheduledDate: string;\n    actualDate?: string;\n    expectedQuantity: number;\n    actualQuantity?: number;\n    variance?: number;\n    variancePercentage?: number;\n    status: 'scheduled' | 'in_progress' | 'completed' | 'cancelled';\n    assignedTo: string;\n    assignedBy: string;\n    notes?: string;\n    createdAt: string;\n    updatedAt: string;\n}\ninterface InventoryReport {\n    id: string;\n    organizationId: string;\n    reportType: 'stock_levels' | 'movements' | 'valuation' | 'abc_analysis' | 'cycle_count_summary';\n    period: {\n        startDate: string;\n        endDate: string;\n    };\n    summary: {\n        totalProducts: number;\n        totalValue: number;\n        totalMovements: number;\n        activeAlerts: number;\n        lowStockItems: number;\n        overstockItems: number;\n    };\n    data: any;\n    generatedBy: string;\n    createdAt: string;\n}\ndeclare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\inventory-kardex.service.d.ts",
        "start": 33,
        "end": 108,
        "startLoc": {
          "line": 33,
          "column": 5,
          "position": 246
        },
        "endLoc": {
          "line": 108,
          "column": 8,
          "position": 829
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\inventory-kardex.service.ts",
        "start": 39,
        "end": 119,
        "startLoc": {
          "line": 39,
          "column": 3,
          "position": 270
        },
        "endLoc": {
          "line": 119,
          "column": 6,
          "position": 858
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", {\n    type?: \"email\" | \"call\" | \"meeting\" | \"note\" | \"task\";\n    status?: \"pending\" | \"completed\" | \"cancelled\";\n    metadata?: Record<string, any>;\n    subject?: string;\n    content?: string;\n    company_id?: string;\n    contact_id?: string;\n    deal_id?: string;\n    due_date?: string;\n    priority?: \"low\" | \"medium\" | \"high\" | \"urgent\";\n    assigned_to?: string;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\interactions.service.d.ts",
        "start": 29,
        "end": 41,
        "startLoc": {
          "line": 29,
          "column": 2,
          "position": 449
        },
        "endLoc": {
          "line": 41,
          "column": 2,
          "position": 584
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\interactions.service.d.ts",
        "start": 17,
        "end": 29,
        "startLoc": {
          "line": 17,
          "column": 11,
          "position": 314
        },
        "endLoc": {
          "line": 29,
          "column": 2,
          "position": 449
        }
      }
    },
    {
      "format": "typescript",
      "lines": 27,
      "fragment": ";\n}, \"strip\", z.ZodTypeAny, {\n    type?: \"email\" | \"call\" | \"meeting\" | \"note\" | \"task\";\n    status?: \"pending\" | \"completed\" | \"cancelled\";\n    metadata?: Record<string, any>;\n    subject?: string;\n    content?: string;\n    company_id?: string;\n    contact_id?: string;\n    deal_id?: string;\n    due_date?: string;\n    priority?: \"low\" | \"medium\" | \"high\" | \"urgent\";\n    assigned_to?: string;\n}, {\n    type?: \"email\" | \"call\" | \"meeting\" | \"note\" | \"task\";\n    status?: \"pending\" | \"completed\" | \"cancelled\";\n    metadata?: Record<string, any>;\n    subject?: string;\n    content?: string;\n    company_id?: string;\n    contact_id?: string;\n    deal_id?: string;\n    due_date?: string;\n    priority?: \"low\" | \"medium\" | \"high\" | \"urgent\";\n    assigned_to?: string;\n}>;\nexport declare const InteractionFiltersSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\interactions.service.d.ts",
        "start": 53,
        "end": 79,
        "startLoc": {
          "line": 53,
          "column": 4,
          "position": 838
        },
        "endLoc": {
          "line": 79,
          "column": 25,
          "position": 1128
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\interactions.service.d.ts",
        "start": 16,
        "end": 42,
        "startLoc": {
          "line": 16,
          "column": 3,
          "position": 303
        },
        "endLoc": {
          "line": 42,
          "column": 24,
          "position": 593
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", {\n    type?: \"email\" | \"call\" | \"meeting\" | \"note\" | \"task\";\n    status?: \"pending\" | \"completed\" | \"cancelled\";\n    limit?: number;\n    company_id?: string;\n    contact_id?: string;\n    deal_id?: string;\n    priority?: \"low\" | \"medium\" | \"high\" | \"urgent\";\n    offset?: number;\n    assigned_to?: string;\n    created_by?: string;\n    date_from?: string;\n    date_to?: string;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\interactions.service.d.ts",
        "start": 105,
        "end": 118,
        "startLoc": {
          "line": 105,
          "column": 2,
          "position": 1490
        },
        "endLoc": {
          "line": 118,
          "column": 2,
          "position": 1627
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\interactions.service.d.ts",
        "start": 92,
        "end": 105,
        "startLoc": {
          "line": 92,
          "column": 11,
          "position": 1353
        },
        "endLoc": {
          "line": 105,
          "column": 2,
          "position": 1490
        }
      }
    },
    {
      "format": "typescript",
      "lines": 32,
      "fragment": ";\nexport interface Interaction {\n    id: string;\n    org_id: string;\n    type: 'email' | 'call' | 'meeting' | 'note' | 'task';\n    subject?: string;\n    content: string;\n    status: 'pending' | 'completed' | 'cancelled';\n    priority: 'low' | 'medium' | 'high' | 'urgent';\n    due_date?: string;\n    completed_at?: string;\n    assigned_to?: string;\n    created_by: string;\n    created_at: string;\n    updated_at: string;\n    company_id?: string;\n    contact_id?: string;\n    deal_id?: string;\n    metadata?: Record<string, any>;\n}\nexport interface InteractionSummary {\n    total: number;\n    by_type: Record<string, number>;\n    by_status: Record<string, number>;\n    by_priority: Record<string, number>;\n    pending_count: number;\n    overdue_count: number;\n    completed_today: number;\n    avg_completion_time: number;\n    top_assignees: Array<{\n        user_id: string;\n        count: number;",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\interactions.service.d.ts",
        "start": 118,
        "end": 149,
        "startLoc": {
          "line": 118,
          "column": 2,
          "position": 1628
        },
        "endLoc": {
          "line": 149,
          "column": 2,
          "position": 1911
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\interactions.service.ts",
        "start": 41,
        "end": 72,
        "startLoc": {
          "line": 41,
          "column": 2,
          "position": 557
        },
        "endLoc": {
          "line": 72,
          "column": 2,
          "position": 841
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "}>;\n}\nexport interface InteractionAnalytics {\n    summary: InteractionSummary;\n    trends: {\n        completion_rate: number;\n        avg_response_time: number;\n        satisfaction_score: number;\n        productivity_metrics: {\n            interactions_per_day: number;\n            completion_rate_by_type: Record<string, number>;\n            peak_hours: Array<{\n                hour: number;\n                count: number;",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\interactions.service.d.ts",
        "start": 154,
        "end": 167,
        "startLoc": {
          "line": 154,
          "column": 5,
          "position": 1941
        },
        "endLoc": {
          "line": 167,
          "column": 2,
          "position": 2035
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\interactions.service.ts",
        "start": 73,
        "end": 85,
        "startLoc": {
          "line": 73,
          "column": 2,
          "position": 864
        },
        "endLoc": {
          "line": 85,
          "column": 2,
          "position": 958
        }
      }
    },
    {
      "format": "javascript",
      "lines": 18,
      "fragment": "};\n                break;\n            }\n            default: {\n                break;\n            }\n        }\n        const report = {\n            id: `report_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`,\n            organizationId,\n            reportType: reportType,\n            period: { startDate, endDate },\n            summary,\n            data,\n            generatedBy,\n            createdAt: new Date().toISOString()\n        };\n        structuredLogger.info('Interaction report generated'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\interactions-sas-av.service.js",
        "start": 631,
        "end": 648,
        "startLoc": {
          "line": 631,
          "column": 2,
          "position": 6522
        },
        "endLoc": {
          "line": 648,
          "column": 31,
          "position": 6653
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\supplier-scorecard.service.js",
        "start": 496,
        "end": 513,
        "startLoc": {
          "line": 496,
          "column": 2,
          "position": 5213
        },
        "endLoc": {
          "line": 513,
          "column": 28,
          "position": 5344
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": "emotions: {\n            joy: number;\n            anger: number;\n            fear: number;\n            sadness: number;\n            surprise: number;\n            disgust: number;\n        };\n        topics: {\n            topic: string;\n            sentiment: 'positive' | 'neutral' | 'negative';\n            confidence: number;\n        }[];\n        keywords: {\n            word: string;\n            sentiment: 'positive' | 'neutral' | 'negative';\n            frequency: number;\n        }[];\n        sentimentTrend: {\n            timestamp: string;\n            sentiment: 'positive' | 'neutral' | 'negative';\n            confidence: number;\n        }[];\n    };\n    voiceAnalysis",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\interactions-sas-av.service.d.ts",
        "start": 34,
        "end": 58,
        "startLoc": {
          "line": 34,
          "column": 9,
          "position": 325
        },
        "endLoc": {
          "line": 58,
          "column": 14,
          "position": 504
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\interactions-sas-av.service.ts",
        "start": 47,
        "end": 72,
        "startLoc": {
          "line": 47,
          "column": 5,
          "position": 372
        },
        "endLoc": {
          "line": 72,
          "column": 23,
          "position": 553
        }
      }
    },
    {
      "format": "typescript",
      "lines": 71,
      "fragment": "metadata: {\n        source: string;\n        campaignId?: string;\n        leadId?: string;\n        dealId?: string;\n        ticketId?: string;\n        customFields?: Record<string, any>;\n    };\n    createdAt: string;\n    updatedAt: string;\n}\ninterface SentimentInsight {\n    id: string;\n    organizationId: string;\n    interactionId: string;\n    type: 'trend' | 'alert' | 'pattern' | 'recommendation';\n    severity: 'low' | 'medium' | 'high' | 'critical';\n    title: string;\n    description: string;\n    data: {\n        metric: string;\n        value: number;\n        threshold?: number;\n        trend?: 'increasing' | 'decreasing' | 'stable';\n        period?: string;\n    };\n    recommendations?: string[];\n    isActive: boolean;\n    createdAt: string;\n    updatedAt: string;\n}\ninterface VoiceInsight {\n    id: string;\n    organizationId: string;\n    interactionId: string;\n    type: 'quality_issue' | 'emotion_detection' | 'speech_pattern' | 'language_insight';\n    severity: 'low' | 'medium' | 'high' | 'critical';\n    title: string;\n    description: string;\n    data: {\n        metric: string;\n        value: number;\n        threshold?: number;\n        details?: Record<string, any>;\n    };\n    recommendations?: string[];\n    isActive: boolean;\n    createdAt: string;\n    updatedAt: string;\n}\ninterface InteractionReport {\n    id: string;\n    organizationId: string;\n    reportType: 'sentiment_summary' | 'voice_analysis' | 'interaction_trends' | 'agent_performance' | 'customer_satisfaction';\n    period: {\n        startDate: string;\n        endDate: string;\n    };\n    summary: {\n        totalInteractions: number;\n        averageSentiment: number;\n        positiveInteractions: number;\n        negativeInteractions: number;\n        averageDuration: number;\n        resolutionRate: number;\n    };\n    data: any;\n    generatedBy: string;\n    createdAt: string;\n}\ndeclare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\interactions-sas-av.service.d.ts",
        "start": 99,
        "end": 169,
        "startLoc": {
          "line": 99,
          "column": 5,
          "position": 785
        },
        "endLoc": {
          "line": 169,
          "column": 8,
          "position": 1331
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\interactions-sas-av.service.ts",
        "start": 118,
        "end": 193,
        "startLoc": {
          "line": 118,
          "column": 3,
          "position": 883
        },
        "endLoc": {
          "line": 193,
          "column": 6,
          "position": 1435
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ": {\n        type?: string;\n        channel?: string;\n        status?: string;\n        priority?: string;\n        sentiment?: string;\n        startDate?: string;\n        endDate?: string;\n        agentId?: string;\n        customerId?: string;\n        limit?: number;\n    })",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\interactions-sas-av.service.d.ts",
        "start": 178,
        "end": 189,
        "startLoc": {
          "line": 178,
          "column": 2,
          "position": 1439
        },
        "endLoc": {
          "line": 189,
          "column": 2,
          "position": 1525
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\interactions-sas-av.service.ts",
        "start": 567,
        "end": 578,
        "startLoc": {
          "line": 567,
          "column": 8,
          "position": 4827
        },
        "endLoc": {
          "line": 578,
          "column": 2,
          "position": 4914
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ",\n                    period: 'monthly',\n                    trend: 'increasing',\n                    changePercentage: Math.random() * 20 - 10,\n                    confidence: 0.8 + Math.random() * 0.2,\n                    forecast: [],\n                    seasonality: {\n                        hasSeasonality: false,\n                        period: 0,\n                        strength: 0,\n                        pattern: []\n                    },\n                    anomalies: [],\n                    organizationId: 'sample'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\intelligent-reporting.service.js",
        "start": 394,
        "end": 407,
        "startLoc": {
          "line": 394,
          "column": 3,
          "position": 4007
        },
        "endLoc": {
          "line": 407,
          "column": 9,
          "position": 4119
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\intelligent-reporting.service.js",
        "start": 129,
        "end": 142,
        "startLoc": {
          "line": 129,
          "column": 9,
          "position": 1336
        },
        "endLoc": {
          "line": 142,
          "column": 7,
          "position": 1448
        }
      }
    },
    {
      "format": "typescript",
      "lines": 84,
      "fragment": ";\nexport interface HITLTask {\n    id: string;\n    organizationId: string;\n    type: 'email' | 'document' | 'approval' | 'review' | 'translation';\n    status: 'pending' | 'in_progress' | 'approved' | 'rejected' | 'completed' | 'cancelled';\n    priority: 'low' | 'normal' | 'high' | 'urgent';\n    title: string;\n    description: string;\n    content: string;\n    originalContent?: string;\n    metadata: Record<string, any>;\n    assignedTo?: string;\n    assignedBy: string;\n    createdAt: string;\n    updatedAt: string;\n    dueDate?: string;\n    completedAt?: string;\n    slaHours: number;\n    tags: string[];\n    comments: HITLComment[];\n    attachments: HITLAttachment[];\n    workflow: HITLWorkflowStep[];\n    currentStep: number;\n}\nexport interface HITLComment {\n    id: string;\n    taskId: string;\n    userId: string;\n    userName: string;\n    content: string;\n    type: 'comment' | 'approval' | 'rejection' | 'suggestion' | 'question';\n    createdAt: string;\n    isResolved: boolean;\n    parentCommentId?: string;\n}\nexport interface HITLAttachment {\n    id: string;\n    taskId: string;\n    fileName: string;\n    fileSize: number;\n    mimeType: string;\n    url: string;\n    uploadedBy: string;\n    uploadedAt: string;\n    isProcessed: boolean;\n}\nexport interface HITLWorkflowStep {\n    id: string;\n    name: string;\n    type: 'approval' | 'review' | 'edit' | 'translation' | 'quality_check';\n    assignedTo?: string;\n    assignedBy: string;\n    status: 'pending' | 'in_progress' | 'completed' | 'skipped';\n    dueDate?: string;\n    completedAt?: string;\n    comments: string;\n    order: number;\n}\nexport interface HITLStats {\n    totalTasks: number;\n    pendingTasks: number;\n    inProgressTasks: number;\n    completedTasks: number;\n    overdueTasks: number;\n    averageCompletionTime: number;\n    slaCompliance: number;\n    tasksByType: Record<string, number>;\n    tasksByPriority: Record<string, number>;\n    tasksByAssignee: Record<string, number>;\n}\nexport interface HITLBatch {\n    id: string;\n    organizationId: string;\n    name: string;\n    description: string;\n    taskIds: string[];\n    status: 'pending' | 'in_progress' | 'completed' | 'cancelled';\n    createdAt: string;\n    completedAt?: string;\n    createdBy: string;\n    slaHours: number;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\hitl-v2.service.d.ts",
        "start": 1,
        "end": 84,
        "startLoc": {
          "line": 1,
          "column": 9,
          "position": 11
        },
        "endLoc": {
          "line": 84,
          "column": 8,
          "position": 712
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\hitl-v2.service.ts",
        "start": 3,
        "end": 93,
        "startLoc": {
          "line": 3,
          "column": 22,
          "position": 37
        },
        "endLoc": {
          "line": 93,
          "column": 6,
          "position": 745
        }
      }
    },
    {
      "format": "typescript",
      "lines": 34,
      "fragment": "export interface HealthCheck {\n    name: string;\n    status: 'healthy' | 'unhealthy' | 'degraded';\n    message?: string;\n    details?: Record<string, unknown>;\n    responseTime?: number;\n    lastChecked: Date;\n}\nexport interface ServiceHealth {\n    name: string;\n    status: 'up' | 'down' | 'degraded';\n    checks: HealthCheck[];\n    overallStatus: 'healthy' | 'unhealthy' | 'degraded';\n    lastChecked: Date;\n    uptime: number;\n    version?: string;\n}\nexport interface SystemHealth {\n    status: 'healthy' | 'unhealthy' | 'degraded';\n    services: ServiceHealth[];\n    timestamp: Date;\n    uptime: number;\n    version: string;\n    environment: string;\n    metrics: {\n        totalRequests: number;\n        errorRate: number;\n        averageResponseTime: number;\n        activeConnections: number;\n        memoryUsage: number;\n        cpuUsage: number;\n    };\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\health-monitor.d.ts",
        "start": 1,
        "end": 34,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 34,
          "column": 8,
          "position": 263
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\health-monitor.ts",
        "start": 5,
        "end": 41,
        "startLoc": {
          "line": 5,
          "column": 1,
          "position": 29
        },
        "endLoc": {
          "line": 41,
          "column": 6,
          "position": 295
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "getDetailedHealth(): Promise<{\n        system: SystemHealth;\n        services: ServiceHealth[];\n        checks: HealthCheck[];\n        metrics: {\n            cache: Record<string, any>;\n            performance: {\n                responseTime: {\n                    min: number;\n                    max: number;\n                    avg: number;\n                    p95: number;\n                    p99: number;\n                };\n                throughput: number;\n                errorRate: number;\n            };\n        };\n    }>;",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\health-monitor.d.ts",
        "start": 64,
        "end": 82,
        "startLoc": {
          "line": 64,
          "column": 5,
          "position": 562
        },
        "endLoc": {
          "line": 82,
          "column": 2,
          "position": 691
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\health-monitor.ts",
        "start": 422,
        "end": 440,
        "startLoc": {
          "line": 422,
          "column": 2,
          "position": 3693
        },
        "endLoc": {
          "line": 440,
          "column": 2,
          "position": 3823
        }
      }
    },
    {
      "format": "typescript",
      "lines": 28,
      "fragment": ";\nexport interface HealthCheckConfig {\n    name: string;\n    type: 'liveness' | 'readiness' | 'startup';\n    timeout: number;\n    interval: number;\n    retries: number;\n    critical: boolean;\n    dependencies?: string[];\n}\nexport interface HealthCheckResult {\n    name: string;\n    status: 'healthy' | 'unhealthy' | 'degraded';\n    message: string;\n    timestamp: string;\n    duration: number;\n    metadata?: Record<string, any>;\n    dependencies?: HealthCheckResult[];\n}\nexport interface SystemHealth {\n    overall: 'healthy' | 'unhealthy' | 'degraded';\n    checks: HealthCheckResult[];\n    timestamp: string;\n    uptime: number;\n    version: string;\n    environment: string;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\health-check.service.d.ts",
        "start": 1,
        "end": 28,
        "startLoc": {
          "line": 1,
          "column": 9,
          "position": 11
        },
        "endLoc": {
          "line": 28,
          "column": 8,
          "position": 224
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\health-check.service.ts",
        "start": 2,
        "end": 33,
        "startLoc": {
          "line": 2,
          "column": 40,
          "position": 24
        },
        "endLoc": {
          "line": 33,
          "column": 6,
          "position": 241
        }
      }
    },
    {
      "format": "typescript",
      "lines": 124,
      "fragment": ";\nexport interface GraphUser {\n    id: string;\n    displayName: string;\n    mail: string;\n    userPrincipalName: string;\n    jobTitle?: string;\n    department?: string;\n    officeLocation?: string;\n    businessPhones?: string[];\n    mobilePhone?: string;\n}\nexport interface GraphMessage {\n    id: string;\n    subject: string;\n    body: {\n        content: string;\n        contentType: 'text' | 'html';\n    };\n    from: {\n        emailAddress: {\n            name: string;\n            address: string;\n        };\n    };\n    toRecipients: Array<{\n        emailAddress: {\n            name: string;\n            address: string;\n        };\n    }>;\n    receivedDateTime: string;\n    isRead: boolean;\n    hasAttachments: boolean;\n}\nexport interface GraphCalendarEvent {\n    id: string;\n    subject: string;\n    start: {\n        dateTime: string;\n        timeZone: string;\n    };\n    end: {\n        dateTime: string;\n        timeZone: string;\n    };\n    location?: {\n        displayName: string;\n    };\n    attendees: Array<{\n        emailAddress: {\n            name: string;\n            address: string;\n        };\n        type: 'required' | 'optional' | 'resource';\n    }>;\n    isOnlineMeeting: boolean;\n    onlineMeetingProvider?: 'teamsForBusiness' | 'skypeForBusiness' | 'teamsForConsumer';\n}\nexport interface GraphDriveItem {\n    id: string;\n    name: string;\n    size: number;\n    lastModifiedDateTime: string;\n    webUrl: string;\n    downloadUrl?: string;\n    file?: {\n        mimeType: string;\n        hashes?: {\n            sha1Hash?: string;\n            sha256Hash?: string;\n        };\n    };\n    folder?: {\n        childCount: number;\n    };\n}\nexport interface GraphTeam {\n    id: string;\n    displayName: string;\n    description?: string;\n    createdDateTime: string;\n    webUrl: string;\n    members: Array<{\n        id: string;\n        displayName: string;\n        roles: string[];\n    }>;\n}\nexport interface GraphChannel {\n    id: string;\n    displayName: string;\n    description?: string;\n    membershipType: 'standard' | 'private' | 'shared';\n    webUrl: string;\n    messages: Array<{\n        id: string;\n        body: {\n            content: string;\n            contentType: 'text' | 'html';\n        };\n        from: {\n            user: {\n                displayName: string;\n                id: string;\n            };\n        };\n        createdDateTime: string;\n    }>;\n}\nexport interface GraphOutboxMessage {\n    id: string;\n    subject: string;\n    body: string;\n    toRecipients: string[];\n    ccRecipients?: string[];\n    bccRecipients?: string[];\n    importance: 'low' | 'normal' | 'high';\n    isDraft: boolean;\n    scheduledDateTime?: string;\n    createdAt: string;\n    status: 'pending' | 'sent' | 'failed' | 'cancelled';\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\graph-wrappers.service.d.ts",
        "start": 1,
        "end": 124,
        "startLoc": {
          "line": 1,
          "column": 9,
          "position": 11
        },
        "endLoc": {
          "line": 124,
          "column": 8,
          "position": 861
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\graph-wrappers.service.ts",
        "start": 3,
        "end": 134,
        "startLoc": {
          "line": 3,
          "column": 22,
          "position": 37
        },
        "endLoc": {
          "line": 134,
          "column": 6,
          "position": 895
        }
      }
    },
    {
      "format": "typescript",
      "lines": 35,
      "fragment": "interface GraphTokenRotationConfig {\n    enabled: boolean;\n    rotationIntervalMs: number;\n    failureRate: number;\n    latencyMs: {\n        min: number;\n        max: number;\n    };\n    errorTypes: string[];\n    simulationMode: boolean;\n}\ninterface GraphToken {\n    accessToken: string;\n    refreshToken: string;\n    expiresAt: string;\n    tokenType: string;\n    scope: string;\n    issuedAt: string;\n}\ninterface GraphChaosEvent {\n    id: string;\n    type: 'token_rotation' | 'token_expiry' | 'api_failure' | 'latency_injection';\n    severity: 'low' | 'medium' | 'high' | 'critical';\n    description: string;\n    timestamp: string;\n    metadata: {\n        endpoint?: string;\n        method?: string;\n        statusCode?: number;\n        latency?: number;\n        tokenId?: string;\n        errorMessage?: string;\n    };\n}\ndeclare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\graph-chaos-light.service.d.ts",
        "start": 1,
        "end": 35,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 35,
          "column": 8,
          "position": 244
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\graph-chaos-light.service.ts",
        "start": 3,
        "end": 40,
        "startLoc": {
          "line": 3,
          "column": 1,
          "position": 14
        },
        "endLoc": {
          "line": 40,
          "column": 6,
          "position": 261
        }
      }
    },
    {
      "format": "typescript",
      "lines": 101,
      "fragment": "export interface GDPRRequest {\n    id: string;\n    userId: string;\n    type: 'export' | 'erase' | 'rectification' | 'portability';\n    status: 'pending' | 'processing' | 'completed' | 'failed' | 'cancelled';\n    requestedAt: Date;\n    processedAt?: Date;\n    completedAt?: Date;\n    requestedBy: string;\n    processedBy?: string;\n    reason?: string;\n    legalBasis: string;\n    dataCategories: string[];\n    scope: 'user' | 'organization';\n    priority: 'low' | 'medium' | 'high' | 'urgent';\n    metadata: Record<string, unknown>;\n    auditTrail: AuditEntry[];\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface AuditEntry {\n    id: string;\n    requestId: string;\n    action: 'created' | 'updated' | 'processed' | 'completed' | 'failed';\n    actor: string;\n    timestamp: Date;\n    details: Record<string, unknown>;\n    ipAddress: string;\n    userAgent: string;\n    signature: string;\n}\nexport interface LegalHold {\n    id: string;\n    name: string;\n    description: string;\n    type: 'litigation' | 'regulatory' | 'investigation' | 'custom';\n    userId?: string;\n    organizationId?: string;\n    dataCategories: string[];\n    startDate: Date;\n    endDate?: Date;\n    status: 'active' | 'expired' | 'cancelled';\n    createdBy: string;\n    approvedBy?: string;\n    legalBasis: string;\n    metadata: Record<string, unknown>;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface DataExport {\n    id: string;\n    requestId: string;\n    userId: string;\n    format: 'zip' | 'json' | 'csv' | 'pdf';\n    status: 'generating' | 'ready' | 'downloaded' | 'expired';\n    filePath?: string;\n    downloadUrl?: string;\n    expiresAt: Date;\n    dataCategories: string[];\n    recordCount: number;\n    fileSize: number;\n    checksum: string;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface DataErase {\n    id: string;\n    requestId: string;\n    userId: string;\n    type: 'soft' | 'hard' | 'anonymize' | 'pseudonymize';\n    status: 'pending' | 'processing' | 'completed' | 'failed';\n    dataCategories: string[];\n    recordCount: number;\n    erasedCount: number;\n    backupPath?: string;\n    verificationHash: string;\n    completedAt?: Date;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface GDPRStats {\n    totalRequests: number;\n    pendingRequests: number;\n    completedRequests: number;\n    failedRequests: number;\n    averageProcessingTime: number;\n    exportRequests: number;\n    eraseRequests: number;\n    rectificationRequests: number;\n    portabilityRequests: number;\n    activeLegalHolds: number;\n    expiredLegalHolds: number;\n    dataRetentionCompliance: number;\n}\nexport interface DataCategory {\n    id: string;\n    name: string;\n    description: string;\n    sensitivity: 'low' | 'medium' | 'high' | 'critical';\n    retentionPeriod: number;\n    legalBasis",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\gdpr-types.d.ts",
        "start": 1,
        "end": 101,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 101,
          "column": 11,
          "position": 858
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\gdpr-types.ts",
        "start": 2,
        "end": 107,
        "startLoc": {
          "line": 2,
          "column": 1,
          "position": 2
        },
        "endLoc": {
          "line": 107,
          "column": 8,
          "position": 865
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "legalBasis: string[];\n    canExport: boolean;\n    canErase: boolean;\n    requiresConsent: boolean;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface ConsentRecord {\n    id: string;\n    userId: string;\n    dataCategory: string;\n    purpose: string;\n    consentGiven: boolean;\n    consentDate: Date;\n    withdrawalDate?: Date;\n    legalBasis: string;\n    evidence: string;\n    ipAddress",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\gdpr-types.d.ts",
        "start": 101,
        "end": 118,
        "startLoc": {
          "line": 101,
          "column": 5,
          "position": 858
        },
        "endLoc": {
          "line": 118,
          "column": 10,
          "position": 976
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\gdpr-types.ts",
        "start": 108,
        "end": 125,
        "startLoc": {
          "line": 108,
          "column": 3,
          "position": 868
        },
        "endLoc": {
          "line": 125,
          "column": 27,
          "position": 986
        }
      }
    },
    {
      "format": "typescript",
      "lines": 58,
      "fragment": "ipAddress: string;\n    userAgent: string;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface DataProcessingActivity {\n    id: string;\n    name: string;\n    description: string;\n    purpose: string;\n    legalBasis: string;\n    dataCategories: string[];\n    dataSubjects: string[];\n    recipients: string[];\n    thirdCountryTransfers: string[];\n    retentionPeriod: number;\n    securityMeasures: string[];\n    dpoContact?: string;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface BreachRecord {\n    id: string;\n    type: 'confidentiality' | 'integrity' | 'availability';\n    severity: 'low' | 'medium' | 'high' | 'critical';\n    description: string;\n    affectedDataCategories: string[];\n    affectedDataSubjects: number;\n    discoveredAt: Date;\n    reportedAt?: Date;\n    containedAt?: Date;\n    resolvedAt?: Date;\n    dpaNotified: boolean;\n    dpaNotificationDate?: Date;\n    dataSubjectsNotified: boolean;\n    dataSubjectsNotificationDate?: Date;\n    measures: string[];\n    status: 'investigating' | 'contained' | 'resolved' | 'closed';\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface GDPRComplianceReport {\n    id: string;\n    period: {\n        start: Date;\n        end: Date;\n    };\n    organizationId: string;\n    stats: GDPRStats;\n    dataProcessingActivities: DataProcessingActivity[];\n    breaches: BreachRecord[];\n    legalHolds: LegalHold[];\n    consentRecords: ConsentRecord[];\n    recommendations: string[];\n    complianceScore: number;\n    generatedAt: Date;\n    generatedBy: string;\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\gdpr-types.d.ts",
        "start": 118,
        "end": 175,
        "startLoc": {
          "line": 118,
          "column": 5,
          "position": 976
        },
        "endLoc": {
          "line": 175,
          "column": 2,
          "position": 1420
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\gdpr-types.ts",
        "start": 126,
        "end": 186,
        "startLoc": {
          "line": 126,
          "column": 3,
          "position": 989
        },
        "endLoc": {
          "line": 186,
          "column": 2,
          "position": 1436
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "dataExport.id);\n            if (exportRecord) {\n                exportRecord.status = 'ready';\n                exportRecord.filePath = filePath;\n                exportRecord.downloadUrl = `/api/gdpr/exports/${dataExport.id}/download`;\n                exportRecord.recordCount = this.countRecords(exportData);\n                exportRecord.fileSize = this.calculateFileSize(exportData);\n                exportRecord.checksum = this.generateChecksum(exportData);\n                exportRecord.updatedAt = new Date();\n            }\n            await",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\gdpr-consolidated.service.js",
        "start": 145,
        "end": 155,
        "startLoc": {
          "line": 145,
          "column": 2,
          "position": 1428
        },
        "endLoc": {
          "line": 155,
          "column": 6,
          "position": 1542
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\gdpr-export.service.js",
        "start": 131,
        "end": 141,
        "startLoc": {
          "line": 131,
          "column": 2,
          "position": 1180
        },
        "endLoc": {
          "line": 141,
          "column": 7,
          "position": 1294
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": ", error);\n            });\n        }\n        catch (error) {\n            await this.updateGDPRRequestStatus(gdprRequest.id, 'failed', 'system', {\n                error: error instanceof Error ? error.message : String(error)\n            });\n            throw error;\n        }\n    }\n    async processErase",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\gdpr-consolidated.service.js",
        "start": 211,
        "end": 221,
        "startLoc": {
          "line": 211,
          "column": 23,
          "position": 2126
        },
        "endLoc": {
          "line": 221,
          "column": 13,
          "position": 2212
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\gdpr-consolidated.service.js",
        "start": 130,
        "end": 140,
        "startLoc": {
          "line": 130,
          "column": 27,
          "position": 1240
        },
        "endLoc": {
          "line": 140,
          "column": 15,
          "position": 1326
        }
      }
    },
    {
      "format": "javascript",
      "lines": 19,
      "fragment": "dataErase.id);\n            if (!eraseRecord)\n                return;\n            eraseRecord.status = 'processing';\n            eraseRecord.updatedAt = new Date();\n            await new Promise(resolve => setTimeout(resolve, 3000 + Math.random() * 5000));\n            const recordCount = await this.countRecordsToErase(dataErase.userId, dataErase.dataCategories);\n            eraseRecord.recordCount = recordCount;\n            if (dataErase.type === 'hard') {\n                const backupPath = await this.createBackup(dataErase);\n                eraseRecord.backupPath = backupPath;\n            }\n            const erasedCount = await this.performErase(dataErase);\n            eraseRecord.erasedCount = erasedCount;\n            eraseRecord.verificationHash = this.generateVerificationHash(dataErase, erasedCount);\n            eraseRecord.status = 'completed';\n            eraseRecord.completedAt = new Date();\n            eraseRecord.updatedAt = new Date();\n            await",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\gdpr-consolidated.service.js",
        "start": 223,
        "end": 241,
        "startLoc": {
          "line": 223,
          "column": 2,
          "position": 2237
        },
        "endLoc": {
          "line": 241,
          "column": 6,
          "position": 2475
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\gdpr-erase.service.js",
        "start": 78,
        "end": 96,
        "startLoc": {
          "line": 78,
          "column": 2,
          "position": 704
        },
        "endLoc": {
          "line": 96,
          "column": 7,
          "position": 942
        }
      }
    },
    {
      "format": "javascript",
      "lines": 68,
      "fragment": "= [\n            {\n                id: 'personal_info',\n                name: 'Personal Information',\n                description: 'Basic personal data like name, email, phone',\n                sensitivity: 'medium',\n                retentionPeriod: 2555,\n                legalBasis: ['consent', 'contract', 'legal_obligation'],\n                canExport: true,\n                canErase: true,\n                requiresConsent: true,\n                createdAt: new Date(),\n                updatedAt: new Date()\n            },\n            {\n                id: 'financial_data',\n                name: 'Financial Data',\n                description: 'Bank accounts, transactions, payment information',\n                sensitivity: 'high',\n                retentionPeriod: 3650,\n                legalBasis: ['legal_obligation', 'contract'],\n                canExport: true,\n                canErase: false,\n                requiresConsent: false,\n                createdAt: new Date(),\n                updatedAt: new Date()\n            },\n            {\n                id: 'sepa_transactions',\n                name: 'SEPA Transactions',\n                description: 'Bank statements and transaction data',\n                sensitivity: 'high',\n                retentionPeriod: 3650,\n                legalBasis: ['legal_obligation'],\n                canExport: true,\n                canErase: false,\n                requiresConsent: false,\n                createdAt: new Date(),\n                updatedAt: new Date()\n            },\n            {\n                id: 'crm_data',\n                name: 'CRM Data',\n                description: 'Customer relationship management data',\n                sensitivity: 'medium',\n                retentionPeriod: 1095,\n                legalBasis: ['consent', 'legitimate_interest'],\n                canExport: true,\n                canErase: true,\n                requiresConsent: true,\n                createdAt: new Date(),\n                updatedAt: new Date()\n            },\n            {\n                id: 'audit_logs',\n                name: 'Audit Logs',\n                description: 'System access and operation logs',\n                sensitivity: 'medium',\n                retentionPeriod: 2555,\n                legalBasis: ['legal_obligation', 'legitimate_interest'],\n                canExport: true,\n                canErase: false,\n                requiresConsent: false,\n                createdAt: new Date(),\n                updatedAt: new Date()\n            }\n        ];\n        categories",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\gdpr-consolidated.service.js",
        "start": 498,
        "end": 565,
        "startLoc": {
          "line": 498,
          "column": 2,
          "position": 5122
        },
        "endLoc": {
          "line": 565,
          "column": 11,
          "position": 5610
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\gdpr-export.service.js",
        "start": 9,
        "end": 76,
        "startLoc": {
          "line": 9,
          "column": 2,
          "position": 69
        },
        "endLoc": {
          "line": 76,
          "column": 2,
          "position": 557
        }
      }
    },
    {
      "format": "javascript",
      "lines": 18,
      "fragment": "= [\n            {\n                id: 'hold_1',\n                name: 'Financial Records Retention',\n                description: 'Legal requirement to retain financial records for 10 years',\n                type: 'regulatory',\n                dataCategories: ['financial_data', 'sepa_transactions'],\n                startDate: new Date('2020-01-01'),\n                endDate: new Date('2030-01-01'),\n                status: 'active',\n                createdBy: 'system',\n                legalBasis: 'EU Banking Regulation',\n                metadata: {},\n                createdAt: new Date(),\n                updatedAt: new Date()\n            }\n        ];\n        holds",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\gdpr-consolidated.service.js",
        "start": 570,
        "end": 587,
        "startLoc": {
          "line": 570,
          "column": 2,
          "position": 5656
        },
        "endLoc": {
          "line": 587,
          "column": 6,
          "position": 5785
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\gdpr-erase.service.js",
        "start": 9,
        "end": 26,
        "startLoc": {
          "line": 9,
          "column": 2,
          "position": 69
        },
        "endLoc": {
          "line": 26,
          "column": 2,
          "position": 198
        }
      }
    },
    {
      "format": "javascript",
      "lines": 121,
      "fragment": "categoryId);\n            if (!category)\n                continue;\n            switch (categoryId) {\n                case 'personal_info':\n                    userData.personal_info = await this.getPersonalInfo(userId);\n                    break;\n                case 'financial_data':\n                    userData.financial_data = await this.getFinancialData(userId);\n                    break;\n                case 'sepa_transactions':\n                    userData.sepa_transactions = await this.getSEPATransactions(userId);\n                    break;\n                case 'crm_data':\n                    userData.crm_data = await this.getCRMData(userId);\n                    break;\n                case 'audit_logs':\n                    userData.audit_logs = await this.getAuditLogs(userId);\n                    break;\n            }\n        }\n        return userData;\n    }\n    async getPersonalInfo(userId) {\n        return {\n            id: userId,\n            name: 'John Doe',\n            email: 'john.doe@example.com',\n            phone: '+1234567890',\n            address: {\n                street: '123 Main St',\n                city: 'Anytown',\n                country: 'US'\n            },\n            createdAt: new Date().toISOString(),\n            updatedAt: new Date().toISOString()\n        };\n    }\n    async getFinancialData(userId) {\n        return {\n            accounts: [\n                {\n                    id: 'acc_1',\n                    type: 'checking',\n                    balance: 1500.00,\n                    currency: 'USD',\n                    iban: 'ES1234567890123456789012'\n                }\n            ],\n            transactions: [\n                {\n                    id: 'txn_1',\n                    amount: -50.00,\n                    description: 'Purchase',\n                    date: new Date().toISOString()\n                }\n            ]\n        };\n    }\n    async getSEPATransactions(userId) {\n        return {\n            transactions: [\n                {\n                    id: 'sepa_1',\n                    amount: 100.00,\n                    reference: 'REF001',\n                    date: new Date().toISOString(),\n                    counterparty: {\n                        name: 'Test Company',\n                        iban: 'ES9876543210987654321098'\n                    }\n                }\n            ]\n        };\n    }\n    async getCRMData(userId) {\n        return {\n            companies: [\n                {\n                    id: 'comp_1',\n                    name: 'Test Company',\n                    status: 'active',\n                    createdAt: new Date().toISOString()\n                }\n            ],\n            contacts: [\n                {\n                    id: 'contact_1',\n                    name: 'Jane Smith',\n                    email: 'jane@testcompany.com',\n                    createdAt: new Date().toISOString()\n                }\n            ],\n            deals: [\n                {\n                    id: 'deal_1',\n                    title: 'Test Deal',\n                    value: 10000,\n                    stage: 'proposal',\n                    createdAt: new Date().toISOString()\n                }\n            ]\n        };\n    }\n    async getAuditLogs(userId) {\n        return {\n            logs: [\n                {\n                    id: 'log_1',\n                    action: 'login',\n                    timestamp: new Date().toISOString(),\n                    ipAddress: '192.168.1.1',\n                    userAgent: 'Mozilla/5.0...'\n                }\n            ]\n        };\n    }\n    async generateFile(dataExport, data) {\n        const fileName = `gdpr_export_${dataExport.id}.${dataExport.format}`;\n        const filePath = `/tmp/exports/${fileName}`;\n        structuredLogger",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\gdpr-consolidated.service.js",
        "start": 657,
        "end": 777,
        "startLoc": {
          "line": 657,
          "column": 2,
          "position": 6538
        },
        "endLoc": {
          "line": 777,
          "column": 17,
          "position": 7350
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\gdpr-export.service.js",
        "start": 163,
        "end": 283,
        "startLoc": {
          "line": 163,
          "column": 2,
          "position": 1519
        },
        "endLoc": {
          "line": 283,
          "column": 7,
          "position": 2331
        }
      }
    },
    {
      "format": "javascript",
      "lines": 27,
      "fragment": "});\n        return filePath;\n    }\n    countRecords(data) {\n        let count = 0;\n        for (const [key, value] of Object.entries(data)) {\n            if (Array.isArray(value)) {\n                count += value.length;\n            }\n            else if (typeof value === 'object' && value !== null) {\n                count += this.countRecords(value);\n            }\n            else {\n                count += 1;\n            }\n        }\n        return count;\n    }\n    calculateFileSize(data) {\n        const jsonString = JSON.stringify(data);\n        return Buffer.byteLength(jsonString, 'utf8');\n    }\n    generateChecksum(data) {\n        const jsonString = JSON.stringify(data);\n        return Buffer.from(jsonString).toString('base64').substring(0, 32);\n    }\n    checkLegalHolds",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\gdpr-consolidated.service.js",
        "start": 777,
        "end": 803,
        "startLoc": {
          "line": 777,
          "column": 2,
          "position": 7375
        },
        "endLoc": {
          "line": 803,
          "column": 16,
          "position": 7618
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\gdpr-export.service.js",
        "start": 283,
        "end": 309,
        "startLoc": {
          "line": 283,
          "column": 2,
          "position": 2350
        },
        "endLoc": {
          "line": 309,
          "column": 23,
          "position": 2593
        }
      }
    },
    {
      "format": "typescript",
      "lines": 47,
      "fragment": "export interface ServiceEndpoint {\n    id: string;\n    name: string;\n    url: string;\n    health: string;\n    weight: number;\n    maxConnections: number;\n    currentConnections: number;\n    responseTime: number;\n    errorRate: number;\n    lastHealthCheck: Date;\n    isActive: boolean;\n}\nexport interface RouteRule {\n    id: string;\n    name: string;\n    path: string;\n    method: string;\n    serviceId: string;\n    priority: number;\n    conditions: RouteCondition[];\n    isActive: boolean;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface RouteCondition {\n    type: 'header' | 'query' | 'body' | 'ip' | 'user-agent';\n    field: string;\n    operator: 'equals' | 'contains' | 'starts_with' | 'ends_with' | 'regex';\n    value: string;\n}\nexport interface LoadBalancerConfig {\n    strategy: 'round-robin' | 'least-connections' | 'weighted' | 'ip-hash' | 'response-time';\n    healthCheckInterval: number;\n    healthCheckTimeout: number;\n    maxRetries: number;\n    circuitBreakerThreshold: number;\n}\nexport interface GatewayStats {\n    totalRequests: number;\n    activeConnections: number;\n    averageResponseTime: number;\n    errorRate: number;\n    servicesCount: number;\n    routesCount: number;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\gateway.d.ts",
        "start": 1,
        "end": 47,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 47,
          "column": 8,
          "position": 354
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\gateway.ts",
        "start": 3,
        "end": 54,
        "startLoc": {
          "line": 3,
          "column": 1,
          "position": 14
        },
        "endLoc": {
          "line": 54,
          "column": 6,
          "position": 373
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "riskLevel: 'low' | 'medium' | 'high';\n        notes?: string;\n    };\n    createdAt: string;\n    updatedAt: string;\n}\ninterface VATTransaction {\n    id: string;\n    organizationId: string;\n    regionId: string;\n    transactionType: 'sale' | 'purchase' | 'import' | 'export' | 'reverse_charge';\n    transaction",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\fiscalidad-regional.service.d.ts",
        "start": 39,
        "end": 50,
        "startLoc": {
          "line": 39,
          "column": 9,
          "position": 258
        },
        "endLoc": {
          "line": 50,
          "column": 12,
          "position": 351
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\fiscalidad-regional.service.ts",
        "start": 52,
        "end": 66,
        "startLoc": {
          "line": 52,
          "column": 5,
          "position": 327
        },
        "endLoc": {
          "line": 66,
          "column": 33,
          "position": 425
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "submission: {\n        submittedAt?: string;\n        submittedBy?: string;\n        referenceNumber?: string;\n        paymentReference?: string;\n        paymentDate?: string;\n        paymentAmount?: number;\n        rejectionReason?: string;\n    };\n    createdAt: string;\n    updatedAt: string;\n}\ninterface WithholdingTax {\n    id: string;\n    organizationId: string;\n    regionId: string;\n    transactionId: string;\n    payee",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\fiscalidad-regional.service.d.ts",
        "start": 106,
        "end": 123,
        "startLoc": {
          "line": 106,
          "column": 5,
          "position": 760
        },
        "endLoc": {
          "line": 123,
          "column": 6,
          "position": 876
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\fiscalidad-regional.service.ts",
        "start": 139,
        "end": 159,
        "startLoc": {
          "line": 139,
          "column": 3,
          "position": 891
        },
        "endLoc": {
          "line": 159,
          "column": 28,
          "position": 1012
        }
      }
    },
    {
      "format": "typescript",
      "lines": 93,
      "fragment": "export interface TaxRegion {\n    id: string;\n    country: string;\n    region: string;\n    taxCode: string;\n    taxRate: number;\n    taxType: 'VAT' | 'Sales' | 'Corporate' | 'Income' | 'Property' | 'Excise';\n    effectiveDate: string;\n    expirationDate?: string;\n    description: string;\n    organizationId: string;\n    metadata?: Record<string, any>;\n}\nexport interface TaxCalculation {\n    id: string;\n    transactionId: string;\n    customerId: string;\n    customerRegion: string;\n    supplierRegion: string;\n    amount: number;\n    currency: string;\n    taxRate: number;\n    taxAmount: number;\n    totalAmount: number;\n    taxType: string;\n    calculationMethod: 'standard' | 'reverse_charge' | 'exemption' | 'reduced';\n    applicableRules: string[];\n    complianceStatus: 'compliant' | 'non_compliant' | 'pending_review';\n    calculatedAt: string;\n    validatedAt?: string;\n    metadata?: Record<string, any>;\n}\nexport interface TaxRule {\n    id: string;\n    ruleName: string;\n    ruleType: 'threshold' | 'exemption' | 'rate' | 'reverse_charge' | 'compliance';\n    fromRegion: string;\n    toRegion: string;\n    conditions: {\n        minAmount?: number;\n        maxAmount?: number;\n        customerType?: string;\n        productType?: string;\n        serviceType?: string;\n    };\n    action: {\n        type: 'apply_rate' | 'exempt' | 'reverse_charge' | 'require_documentation';\n        value?: number;\n        documentation?: string[];\n    };\n    effectiveDate: string;\n    expirationDate?: string;\n    priority: number;\n    organizationId: string;\n}\nexport interface TaxCompliance {\n    id: string;\n    organizationId: string;\n    region: string;\n    complianceType: 'VAT_registration' | 'tax_filing' | 'reporting' | 'audit';\n    status: 'compliant' | 'non_compliant' | 'pending' | 'exempt';\n    dueDate: string;\n    submittedDate?: string;\n    documents: string[];\n    penalties: number;\n    notes: string[];\n    lastUpdated: string;\n}\nexport interface FiscalidadConfig {\n    enabled: boolean;\n    defaultRegion: string;\n    autoCalculation: boolean;\n    complianceMonitoring: boolean;\n    reportingEnabled: boolean;\n    auditTrail: boolean;\n    regions: {\n        [regionCode: string]: {\n            enabled: boolean;\n            taxRates: Record<string, number>;\n            rules: string[];\n            compliance: boolean;\n        };\n    };\n    thresholds: {\n        vatRegistration: number;\n        reverseCharge: number;\n        exemption: number;\n    };\n    reporting: {\n        frequency: 'monthly' | 'quarterly' | 'annually';\n        format: 'xml' | 'json' | 'csv';\n        deadline: number;\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\fiscalidad-regional-ue.service.d.ts",
        "start": 1,
        "end": 93,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 93,
          "column": 2,
          "position": 763
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\fiscalidad-regional-ue.service.ts",
        "start": 9,
        "end": 104,
        "startLoc": {
          "line": 9,
          "column": 1,
          "position": 17
        },
        "endLoc": {
          "line": 104,
          "column": 30,
          "position": 783
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": "export interface CostEntry {\n    id: string;\n    timestamp: Date;\n    service: string;\n    operation: string;\n    resource: string;\n    amount: number;\n    currency: string;\n    organizationId: string;\n    userId?: string;\n    requestId?: string;\n    metadata?: Record<string, any>;\n}\nexport interface Budget {\n    id: string;\n    organizationId: string;\n    name: string;\n    amount: number;\n    currency: string;\n    period: 'daily' | 'weekly' | 'monthly' | 'yearly';\n    startDate: Date;\n    endDate?: Date;\n    categories: string[];\n    alertThreshold: number;\n    criticalThreshold",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\finops.d.ts",
        "start": 1,
        "end": 25,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 25,
          "column": 18,
          "position": 190
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\finops.ts",
        "start": 3,
        "end": 27,
        "startLoc": {
          "line": 3,
          "column": 1,
          "position": 14
        },
        "endLoc": {
          "line": 27,
          "column": 14,
          "position": 204
        }
      }
    },
    {
      "format": "typescript",
      "lines": 40,
      "fragment": "isActive: boolean;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface BudgetAlert {\n    id: string;\n    budgetId: string;\n    organizationId: string;\n    type: 'threshold' | 'critical' | 'exceeded';\n    currentAmount: number;\n    budgetAmount: number;\n    percentage: number;\n    timestamp: Date;\n    message: string;\n    acknowledged: boolean;\n    acknowledgedBy?: string;\n    acknowledgedAt?: Date;\n}\nexport interface BudgetNotification {\n    id: string;\n    alertId: string;\n    type: 'email' | 'slack' | 'webhook' | 'sms';\n    recipient: string;\n    message: string;\n    status: 'pending' | 'sent' | 'failed';\n    timestamp: Date;\n    retryCount: number;\n    maxRetries: number;\n}\nexport interface CostMetrics {\n    totalCost: number;\n    costByService: Record<string, number>;\n    costByOperation: Record<string, number>;\n    costByOrganization: Record<string, number>;\n    costByPeriod: Record<string, number>;\n    averageCost: number;\n    costTrend: 'increasing' | 'decreasing' | 'stable';\n    topExpenses: CostEntry[];\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\finops.d.ts",
        "start": 26,
        "end": 65,
        "startLoc": {
          "line": 26,
          "column": 5,
          "position": 197
        },
        "endLoc": {
          "line": 65,
          "column": 8,
          "position": 518
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\finops.ts",
        "start": 29,
        "end": 72,
        "startLoc": {
          "line": 29,
          "column": 3,
          "position": 216
        },
        "endLoc": {
          "line": 72,
          "column": 6,
          "position": 541
        }
      }
    },
    {
      "format": "typescript",
      "lines": 31,
      "fragment": "export interface Cost {\n    id: string;\n    service: string;\n    resource: string;\n    organizationId: string;\n    userId?: string;\n    amount: number;\n    currency: string;\n    category: 'infrastructure' | 'software' | 'services' | 'licenses' | 'data' | 'compute' | 'storage' | 'network';\n    subcategory: string;\n    timestamp: Date;\n    period: 'hourly' | 'daily' | 'monthly' | 'yearly';\n    metadata: Record<string, unknown>;\n    tags: string[];\n    region?: string;\n    environment?: 'development' | 'staging' | 'production';\n    projectId?: string;\n    departmentId?: string;\n}\nexport interface Budget {\n    id: string;\n    name: string;\n    description: string;\n    organizationId: string;\n    amount: number;\n    currency: string;\n    period: 'monthly' | 'quarterly' | 'yearly' | 'custom';\n    startDate: Date;\n    endDate: Date;\n    threshold: number;\n    status",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\finops-types.d.ts",
        "start": 1,
        "end": 31,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 31,
          "column": 7,
          "position": 281
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\finops-types.ts",
        "start": 2,
        "end": 32,
        "startLoc": {
          "line": 2,
          "column": 1,
          "position": 2
        },
        "endLoc": {
          "line": 32,
          "column": 35,
          "position": 283
        }
      }
    },
    {
      "format": "typescript",
      "lines": 52,
      "fragment": "status: 'active' | 'paused' | 'exceeded' | 'completed' | 'cancelled';\n    categories: string[];\n    tags: string[];\n    alerts: BudgetAlert[];\n    notifications: BudgetNotification[];\n    createdAt: Date;\n    updatedAt: Date;\n    createdBy: string;\n    lastModifiedBy: string;\n    metadata: Record<string, unknown>;\n}\nexport interface BudgetAlert {\n    id: string;\n    budgetId: string;\n    type: 'threshold' | 'exceeded' | 'predicted_exceeded' | 'anomaly';\n    severity: 'low' | 'medium' | 'high' | 'critical';\n    message: string;\n    currentAmount: number;\n    budgetAmount: number;\n    percentage: number;\n    triggeredAt: Date;\n    acknowledged: boolean;\n    acknowledgedBy?: string;\n    acknowledgedAt?: Date;\n    resolved: boolean;\n    resolvedAt?: Date;\n    metadata: Record<string, unknown>;\n}\nexport interface BudgetNotification {\n    id: string;\n    budgetId: string;\n    type: 'email' | 'sms' | 'slack' | 'webhook';\n    recipients: string[];\n    template: string;\n    enabled: boolean;\n    conditions: NotificationCondition[];\n    lastSent?: Date;\n    metadata: Record<string, unknown>;\n}\nexport interface NotificationCondition {\n    type: 'threshold' | 'exceeded' | 'daily' | 'weekly' | 'monthly';\n    value?: number;\n    operator?: 'greater_than' | 'less_than' | 'equals';\n}\nexport interface OptimizationRecommendation {\n    id: string;\n    type: 'right_sizing' | 'auto_scaling' | 'storage_optimization' | 'query_optimization' | 'reserved_instances' | 'spot_instances' | 'lifecycle_policy';\n    title: string;\n    description: string;\n    potentialSavings: number;\n    confidence: number;\n    effort",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\finops-types.d.ts",
        "start": 31,
        "end": 82,
        "startLoc": {
          "line": 31,
          "column": 5,
          "position": 281
        },
        "endLoc": {
          "line": 82,
          "column": 7,
          "position": 758
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\finops-types.ts",
        "start": 33,
        "end": 87,
        "startLoc": {
          "line": 33,
          "column": 3,
          "position": 286
        },
        "endLoc": {
          "line": 87,
          "column": 9,
          "position": 766
        }
      }
    },
    {
      "format": "typescript",
      "lines": 97,
      "fragment": "effort: 'low' | 'medium' | 'high';\n    impact: 'low' | 'medium' | 'high';\n    resources: string[];\n    implementation: string;\n    estimatedSavings: {\n        monthly: number;\n        yearly: number;\n        percentage: number;\n    };\n    status: 'pending' | 'approved' | 'implemented' | 'rejected' | 'in_progress';\n    priority: 'low' | 'medium' | 'high' | 'urgent';\n    createdAt: Date;\n    implementedAt?: Date;\n    implementedBy?: string;\n    rejectedAt?: Date;\n    rejectedBy?: string;\n    rejectionReason?: string;\n    metadata: Record<string, unknown>;\n    tags: string[];\n}\nexport interface FinOpsReport {\n    id: string;\n    name: string;\n    type: 'executive' | 'technical' | 'compliance' | 'optimization' | 'trends' | 'custom';\n    period: {\n        start: Date;\n        end: Date;\n    };\n    organizationId: string;\n    data: {\n        totalCosts: number;\n        costsByService: Record<string, number>;\n        costsByCategory: Record<string, number>;\n        costsByResource: Record<string, number>;\n        costsByOrganization: Record<string, number>;\n        trends: CostTrend[];\n        recommendations: OptimizationRecommendation[];\n        budgetStatus: BudgetStatus[];\n        anomalies: CostAnomaly[];\n        forecasts: CostForecast[];\n    };\n    generatedAt: Date;\n    generatedBy: string;\n    format: 'pdf' | 'excel' | 'json' | 'csv';\n    status: 'generating' | 'completed' | 'failed';\n    filePath?: string;\n    fileSize?: number;\n    metadata: Record<string, unknown>;\n}\nexport interface CostTrend {\n    date: Date;\n    amount: number;\n    service: string;\n    category: string;\n    organizationId: string;\n    trend: 'increasing' | 'decreasing' | 'stable';\n    changePercentage: number;\n    metadata: Record<string, unknown>;\n}\nexport interface BudgetStatus {\n    budgetId: string;\n    budgetName: string;\n    currentAmount: number;\n    budgetAmount: number;\n    percentage: number;\n    status: 'on_track' | 'at_risk' | 'exceeded';\n    daysRemaining: number;\n    projectedAmount: number;\n    variance: number;\n    variancePercentage: number;\n}\nexport interface CostAnomaly {\n    id: string;\n    type: 'spike' | 'drop' | 'unusual_pattern';\n    severity: 'low' | 'medium' | 'high' | 'critical';\n    description: string;\n    detectedAt: Date;\n    period: {\n        start: Date;\n        end: Date;\n    };\n    affectedServices: string[];\n    affectedResources: string[];\n    impact: {\n        costIncrease: number;\n        percentageIncrease: number;\n    };\n    rootCause?: string;\n    resolution?: string;\n    status: 'detected' | 'investigating' | 'resolved' | 'false_positive';\n    metadata: Record<string, unknown>;\n}\nexport interface CostForecast {\n    date: Date;\n    predictedAmount: number;\n    confidence: number;\n    model",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\finops-types.d.ts",
        "start": 82,
        "end": 178,
        "startLoc": {
          "line": 82,
          "column": 5,
          "position": 758
        },
        "endLoc": {
          "line": 178,
          "column": 6,
          "position": 1597
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\finops-types.ts",
        "start": 88,
        "end": 188,
        "startLoc": {
          "line": 88,
          "column": 3,
          "position": 769
        },
        "endLoc": {
          "line": 188,
          "column": 9,
          "position": 1612
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "model: 'linear' | 'exponential' | 'seasonal' | 'arima';\n    factors: string[];\n    metadata: Record<string, unknown>;\n}\nexport interface CostAllocation {\n    id: string;\n    costId: string;\n    organizationId: string;\n    departmentId?: string;\n    projectId?: string;\n    userId?: string;\n    percentage: number;\n    amount",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\finops-types.d.ts",
        "start": 178,
        "end": 190,
        "startLoc": {
          "line": 178,
          "column": 5,
          "position": 1597
        },
        "endLoc": {
          "line": 190,
          "column": 7,
          "position": 1700
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\finops-types.ts",
        "start": 189,
        "end": 201,
        "startLoc": {
          "line": 189,
          "column": 3,
          "position": 1615
        },
        "endLoc": {
          "line": 201,
          "column": 9,
          "position": 1718
        }
      }
    },
    {
      "format": "typescript",
      "lines": 34,
      "fragment": "amount: number;\n    method: 'equal' | 'usage_based' | 'custom' | 'tag_based';\n    tags: string[];\n    createdAt: Date;\n    createdBy: string;\n    metadata: Record<string, unknown>;\n}\nexport interface CostCenter {\n    id: string;\n    name: string;\n    description: string;\n    organizationId: string;\n    parentId?: string;\n    type: 'department' | 'project' | 'team' | 'product';\n    budget?: number;\n    currency: string;\n    managerId: string;\n    members: string[];\n    tags: string[];\n    status: 'active' | 'inactive' | 'archived';\n    createdAt: Date;\n    updatedAt: Date;\n    metadata: Record<string, unknown>;\n}\nexport interface ResourceUtilization {\n    id: string;\n    resourceId: string;\n    resourceType: string;\n    service: string;\n    organizationId: string;\n    timestamp: Date;\n    metrics: {\n        cpu: number;\n        memory",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\finops-types.d.ts",
        "start": 190,
        "end": 223,
        "startLoc": {
          "line": 190,
          "column": 5,
          "position": 1700
        },
        "endLoc": {
          "line": 223,
          "column": 7,
          "position": 1974
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\finops-types.ts",
        "start": 202,
        "end": 236,
        "startLoc": {
          "line": 202,
          "column": 3,
          "position": 1721
        },
        "endLoc": {
          "line": 236,
          "column": 9,
          "position": 1996
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "recommendations: string[];\n    metadata: Record<string, unknown>;\n}\nexport interface CostOptimization {\n    id: string;\n    type: 'automatic' | 'manual' | 'scheduled';\n    status: 'pending' | 'running' | 'completed' | 'failed' | 'cancelled';\n    targetResources: string[];\n    optimizationType: 'right_sizing' | 'auto_scaling' | 'storage_tiering' | 'instance_scheduling';\n    parameters: Record<string, unknown>;\n    expectedSavings: number;\n    actualSavings?: number;\n    startedAt: Date;\n    completedAt?: Date;\n    duration?: number;\n    logs",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\finops-types.d.ts",
        "start": 231,
        "end": 246,
        "startLoc": {
          "line": 231,
          "column": 5,
          "position": 2027
        },
        "endLoc": {
          "line": 246,
          "column": 5,
          "position": 2183
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\finops-types.ts",
        "start": 245,
        "end": 260,
        "startLoc": {
          "line": 245,
          "column": 3,
          "position": 2060
        },
        "endLoc": {
          "line": 260,
          "column": 16,
          "position": 2216
        }
      }
    },
    {
      "format": "typescript",
      "lines": 92,
      "fragment": "logs: OptimizationLog[];\n    metadata: Record<string, unknown>;\n}\nexport interface OptimizationLog {\n    timestamp: Date;\n    level: 'info' | 'warn' | 'error';\n    message: string;\n    details?: Record<string, unknown>;\n}\nexport interface FinOpsMetrics {\n    totalCosts: number;\n    costsByPeriod: {\n        current: number;\n        previous: number;\n        change: number;\n        changePercentage: number;\n    };\n    costsByService: Record<string, {\n        amount: number;\n        percentage: number;\n        trend: 'up' | 'down' | 'stable';\n    }>;\n    costsByCategory: Record<string, {\n        amount: number;\n        percentage: number;\n        trend: 'up' | 'down' | 'stable';\n    }>;\n    budgetAdherence: {\n        totalBudgets: number;\n        onTrack: number;\n        atRisk: number;\n        exceeded: number;\n        averageAdherence: number;\n    };\n    optimization: {\n        totalRecommendations: number;\n        implemented: number;\n        pending: number;\n        totalSavings: number;\n        potentialSavings: number;\n    };\n    anomalies: {\n        total: number;\n        critical: number;\n        high: number;\n        medium: number;\n        low: number;\n    };\n    efficiency: {\n        averageResourceUtilization: number;\n        averageCostEfficiency: number;\n        wastePercentage: number;\n    };\n}\nexport interface FinOpsAlert {\n    id: string;\n    type: 'budget_exceeded' | 'cost_anomaly' | 'optimization_opportunity' | 'resource_waste' | 'forecast_risk';\n    severity: 'low' | 'medium' | 'high' | 'critical';\n    title: string;\n    message: string;\n    organizationId: string;\n    affectedResources: string[];\n    affectedServices: string[];\n    triggeredAt: Date;\n    acknowledged: boolean;\n    acknowledgedBy?: string;\n    acknowledgedAt?: Date;\n    resolved: boolean;\n    resolvedAt?: Date;\n    resolvedBy?: string;\n    metadata: Record<string, unknown>;\n    actions: AlertAction[];\n}\nexport interface AlertAction {\n    id: string;\n    type: 'notification' | 'automation' | 'escalation' | 'approval';\n    status: 'pending' | 'completed' | 'failed' | 'cancelled';\n    parameters: Record<string, unknown>;\n    executedAt?: Date;\n    result?: Record<string, unknown>;\n}\nexport interface FinOpsDashboard {\n    id: string;\n    name: string;\n    description: string;\n    organizationId: string;\n    userId: string;\n    widgets: DashboardWidget[];\n    layout: DashboardLayout;\n    filters: DashboardFilter[];\n    refreshInterval: number;\n    isPublic",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\finops-types.d.ts",
        "start": 246,
        "end": 337,
        "startLoc": {
          "line": 246,
          "column": 5,
          "position": 2183
        },
        "endLoc": {
          "line": 337,
          "column": 9,
          "position": 2909
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\finops-types.ts",
        "start": 261,
        "end": 356,
        "startLoc": {
          "line": 261,
          "column": 3,
          "position": 2219
        },
        "endLoc": {
          "line": 356,
          "column": 11,
          "position": 2949
        }
      }
    },
    {
      "format": "typescript",
      "lines": 79,
      "fragment": "isPublic: boolean;\n    sharedWith: string[];\n    createdAt: Date;\n    updatedAt: Date;\n    metadata: Record<string, unknown>;\n}\nexport interface DashboardWidget {\n    id: string;\n    type: 'cost_chart' | 'budget_status' | 'optimization_recommendations' | 'cost_trends' | 'resource_utilization' | 'alerts' | 'kpi' | 'table';\n    title: string;\n    position: {\n        x: number;\n        y: number;\n        width: number;\n        height: number;\n    };\n    configuration: Record<string, unknown>;\n    dataSource: string;\n    refreshInterval: number;\n    metadata: Record<string, unknown>;\n}\nexport interface DashboardLayout {\n    columns: number;\n    rows: number;\n    gap: number;\n    padding: number;\n}\nexport interface DashboardFilter {\n    field: string;\n    operator: 'equals' | 'not_equals' | 'contains' | 'not_contains' | 'greater_than' | 'less_than' | 'between' | 'in' | 'not_in';\n    value: unknown;\n    label: string;\n}\nexport interface FinOpsSettings {\n    organizationId: string;\n    currency: string;\n    timezone: string;\n    dateFormat: string;\n    numberFormat: string;\n    defaultBudgetPeriod: 'monthly' | 'quarterly' | 'yearly';\n    defaultAlertThreshold: number;\n    costAllocationMethod: 'equal' | 'usage_based' | 'tag_based';\n    optimizationEnabled: boolean;\n    autoApprovalLimit: number;\n    notificationPreferences: {\n        email: boolean;\n        sms: boolean;\n        slack: boolean;\n        webhook: boolean;\n    };\n    reportingPreferences: {\n        defaultFormat: 'pdf' | 'excel' | 'json' | 'csv';\n        includeCharts: boolean;\n        includeRecommendations: boolean;\n        includeForecasts: boolean;\n    };\n    metadata: Record<string, unknown>;\n}\nexport interface FinOpsUser {\n    id: string;\n    organizationId: string;\n    role: 'admin' | 'manager' | 'viewer' | 'analyst';\n    permissions: {\n        viewCosts: boolean;\n        manageBudgets: boolean;\n        approveOptimizations: boolean;\n        generateReports: boolean;\n        manageSettings: boolean;\n        viewAlerts: boolean;\n    };\n    preferences: {\n        dashboard: string;\n        notifications: boolean;\n        reports: string[];\n    };\n    lastLogin: Date;\n    createdAt: Date;\n    metadata: Record<string, unknown>;\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\finops-types.d.ts",
        "start": 337,
        "end": 415,
        "startLoc": {
          "line": 337,
          "column": 5,
          "position": 2909
        },
        "endLoc": {
          "line": 415,
          "column": 2,
          "position": 3548
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\finops-types.ts",
        "start": 357,
        "end": 440,
        "startLoc": {
          "line": 357,
          "column": 3,
          "position": 2952
        },
        "endLoc": {
          "line": 440,
          "column": 2,
          "position": 3596
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ".set(id, costEntry);\n        this.costHistory.push(costEntry);\n        this.evaluateBudgets(costData.organizationId);\n        logger.info('Cost tracked', {\n            costId: id,\n            service: costData.service,\n            operation: costData.operation,\n            amount: costData.amount,\n            organizationId: costData.organizationId,\n        });\n        return id;\n    }\n    getCosts",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\finops-consolidated.service.js",
        "start": 78,
        "end": 90,
        "startLoc": {
          "line": 78,
          "column": 12,
          "position": 719
        },
        "endLoc": {
          "line": 90,
          "column": 9,
          "position": 819
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\finops.js",
        "start": 22,
        "end": 34,
        "startLoc": {
          "line": 22,
          "column": 6,
          "position": 202
        },
        "endLoc": {
          "line": 34,
          "column": 13,
          "position": 302
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ", currentAmount, percentage);\n            }\n        }\n    }\n    calculateCurrentBudgetSpend(budget) {\n        const now = new Date();\n        const startDate = this.getBudgetStartDate(budget, now);\n        const endDate = this.getBudgetEndDate(budget, now);\n        return this.costHistory\n            .filter(cost => cost.organizationId === budget.organizationId &&\n            cost.timestamp >= startDate &&\n            cost.timestamp <= endDate &&\n            (",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\finops-consolidated.service.js",
        "start": 193,
        "end": 205,
        "startLoc": {
          "line": 193,
          "column": 12,
          "position": 1975
        },
        "endLoc": {
          "line": 205,
          "column": 2,
          "position": 2101
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\finops.js",
        "start": 89,
        "end": 101,
        "startLoc": {
          "line": 89,
          "column": 11,
          "position": 935
        },
        "endLoc": {
          "line": 101,
          "column": 7,
          "position": 1061
        }
      }
    },
    {
      "format": "javascript",
      "lines": 17,
      "fragment": "}\n    hasActiveAlert(budgetId, type) {\n        return Array.from(this.budgetAlerts.values()).some(alert => alert.budgetId === budgetId && alert.type === type && !alert.acknowledged);\n    }\n    acknowledgeAlert(alertId, acknowledgedBy) {\n        const alert = this.budgetAlerts.get(alertId);\n        if (!alert)\n            return false;\n        alert.acknowledged = true;\n        alert.acknowledgedBy = acknowledgedBy;\n        alert.acknowledgedAt = new Date();\n        logger.info('Budget alert acknowledged', { alertId, acknowledgedBy });\n        return true;\n    }\n    getActiveAlerts(organizationId) {\n        const alerts = Array.from(this.budgetAlerts.values()).filter(alert => !alert.acknowledged);\n        return organizationId ? alerts.filter(alert => {",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\finops-consolidated.service.js",
        "start": 291,
        "end": 307,
        "startLoc": {
          "line": 291,
          "column": 5,
          "position": 3000
        },
        "endLoc": {
          "line": 307,
          "column": 2,
          "position": 3225
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\finops.js",
        "start": 167,
        "end": 183,
        "startLoc": {
          "line": 167,
          "column": 5,
          "position": 1862
        },
        "endLoc": {
          "line": 183,
          "column": 6,
          "position": 2087
        }
      }
    },
    {
      "format": "javascript",
      "lines": 34,
      "fragment": ") : alerts;\n    }\n    getCostMetrics(organizationId, period) {\n        let filteredCosts = this.costHistory;\n        if (organizationId) {\n            filteredCosts = filteredCosts.filter(cost => cost.organizationId === organizationId);\n        }\n        if (period) {\n            const cutoffDate = this.getPeriodCutoffDate(period);\n            filteredCosts = filteredCosts.filter(cost => cost.timestamp >= cutoffDate);\n        }\n        const totalCost = filteredCosts.reduce((sum, cost) => sum + cost.amount, 0);\n        const costByService = this.groupCostsBy(filteredCosts, 'service');\n        const costByOperation = this.groupCostsBy(filteredCosts, 'operation');\n        const costByOrganization = this.groupCostsBy(filteredCosts, 'organizationId');\n        const costByPeriod = this.groupCostsByPeriod(filteredCosts);\n        const averageCost = filteredCosts.length > 0 ? totalCost / filteredCosts.length : 0;\n        const costTrend = this.calculateCostTrend(filteredCosts);\n        const topExpenses = this.getTopExpenses(filteredCosts, 10);\n        return {\n            totalCost,\n            costByService,\n            costByOperation,\n            costByOrganization,\n            costByPeriod,\n            averageCost,\n            costTrend,\n            topExpenses,\n        };\n    }\n    groupCostsBy(costs, field) {\n        const grouped = {};\n        for (const cost of costs) {\n            const key = String(cost[field] ||",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\finops-consolidated.service.js",
        "start": 310,
        "end": 343,
        "startLoc": {
          "line": 310,
          "column": 2,
          "position": 3261
        },
        "endLoc": {
          "line": 343,
          "column": 3,
          "position": 3639
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\finops.js",
        "start": 183,
        "end": 216,
        "startLoc": {
          "line": 183,
          "column": 15,
          "position": 2094
        },
        "endLoc": {
          "line": 216,
          "column": 2,
          "position": 2471
        }
      }
    },
    {
      "format": "javascript",
      "lines": 40,
      "fragment": ");\n            grouped[key] = (grouped[key] || 0) + cost.amount;\n        }\n        return grouped;\n    }\n    groupCostsByPeriod(costs) {\n        const grouped = {};\n        for (const cost of costs) {\n            const date = cost.timestamp.toISOString().split('T')[0];\n            grouped[date] = (grouped[date] || 0) + cost.amount;\n        }\n        return grouped;\n    }\n    getPeriodCutoffDate(period) {\n        const now = new Date();\n        switch (period) {\n            case '1h':\n                return new Date(now.getTime() - 60 * 60 * 1000);\n            case '24h':\n                return new Date(now.getTime() - 24 * 60 * 60 * 1000);\n            case '7d':\n                return new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\n            case '30d':\n                return new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000);\n            case '90d':\n                return new Date(now.getTime() - 90 * 24 * 60 * 60 * 1000);\n            default:\n                return new Date(0);\n        }\n    }\n    calculateCostTrend(costs) {\n        if (costs.length < 2)\n            return 'stable';\n        const dailyCosts = this.groupCostsByPeriod(costs);\n        const sortedDays = Object.keys(dailyCosts).sort();\n        if (sortedDays.length < 2)\n            return 'stable';\n        const recentCosts = sortedDays.slice(-7).map(day => dailyCosts[day]);\n        const olderCosts = sortedDays.slice(-14, -7).map(day => dailyCosts[day]);\n        if",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\finops-consolidated.service.js",
        "start": 343,
        "end": 382,
        "startLoc": {
          "line": 343,
          "column": 10,
          "position": 3642
        },
        "endLoc": {
          "line": 382,
          "column": 3,
          "position": 4165
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\finops.js",
        "start": 216,
        "end": 255,
        "startLoc": {
          "line": 216,
          "column": 2,
          "position": 2471
        },
        "endLoc": {
          "line": 255,
          "column": 6,
          "position": 2994
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ", 0) / olderCosts.length;\n        const change = ((recentAvg - olderAvg) / olderAvg) * 100;\n        if (change > 10)\n            return 'increasing';\n        if (change < -10)\n            return 'decreasing';\n        return 'stable';\n    }\n    getTopExpenses(costs, limit) {\n        return costs\n            .sort((a, b) => b.amount - a.amount)\n            .slice(0, limit);\n    }\n    async",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\finops-consolidated.service.js",
        "start": 385,
        "end": 398,
        "startLoc": {
          "line": 385,
          "column": 2,
          "position": 4269
        },
        "endLoc": {
          "line": 398,
          "column": 6,
          "position": 4406
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\finops.js",
        "start": 256,
        "end": 269,
        "startLoc": {
          "line": 256,
          "column": 5,
          "position": 3055
        },
        "endLoc": {
          "line": 269,
          "column": 22,
          "position": 3192
        }
      }
    },
    {
      "format": "javascript",
      "lines": 22,
      "fragment": ");\n    }\n    generateFinOpsHeaders(organizationId, operation) {\n        const budgets = this.getBudgetsByOrganization(organizationId);\n        const relevantBudgets = budgets.filter(budget => budget.categories.includes(operation) || budget.categories.includes('all'));\n        const headers = {\n            'X-FinOps-Organization': organizationId,\n            'X-FinOps-Operation': operation,\n            'X-FinOps-Timestamp': new Date().toISOString(),\n        };\n        if (relevantBudgets.length > 0) {\n            const budgetInfo = relevantBudgets.map(budget => ({\n                id: budget.id,\n                name: budget.name,\n                remaining: Math.max(0, budget.amount - this.calculateCurrentBudgetSpend(budget)),\n                percentage: (this.calculateCurrentBudgetSpend(budget) / budget.amount) * 100,\n            }));\n            headers['X-FinOps-Budgets'] = JSON.stringify(budgetInfo);\n        }\n        return headers;\n    }\n    getCurrentBudgetSpend",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\finops-consolidated.service.js",
        "start": 646,
        "end": 667,
        "startLoc": {
          "line": 646,
          "column": 17,
          "position": 7128
        },
        "endLoc": {
          "line": 667,
          "column": 22,
          "position": 7375
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\finops.js",
        "start": 267,
        "end": 288,
        "startLoc": {
          "line": 267,
          "column": 6,
          "position": 3185
        },
        "endLoc": {
          "line": 288,
          "column": 25,
          "position": 3432
        }
      }
    },
    {
      "format": "javascript",
      "lines": 16,
      "fragment": ";\n    }\n    getCurrentBudgetSpend(budgetId) {\n        const budget = this.budgets.get(budgetId);\n        if (!budget)\n            return 0;\n        return this.calculateCurrentBudgetSpend(budget);\n    }\n    getBudgetUsagePercentage(budgetId) {\n        const budget = this.budgets.get(budgetId);\n        if (!budget)\n            return 0;\n        const currentSpend = this.calculateCurrentBudgetSpend(budget);\n        return (currentSpend / budget.amount) * 100;\n    }\n    validateBudget",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\finops-consolidated.service.js",
        "start": 665,
        "end": 680,
        "startLoc": {
          "line": 665,
          "column": 8,
          "position": 7369
        },
        "endLoc": {
          "line": 680,
          "column": 15,
          "position": 7503
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\finops.js",
        "start": 337,
        "end": 352,
        "startLoc": {
          "line": 337,
          "column": 2,
          "position": 3802
        },
        "endLoc": {
          "line": 352,
          "column": 20,
          "position": 3936
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ";\nexport interface CostEntry {\n    id: string;\n    timestamp: Date;\n    service: string;\n    operation: string;\n    resource: string;\n    amount: number;\n    currency: string;\n    organizationId: string;\n    userId?: string;\n    requestId?: string;\n    metadata?: Record<string, any>;\n}\nexport interface CostMetrics",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\finops-consolidated.service.d.ts",
        "start": 1,
        "end": 15,
        "startLoc": {
          "line": 1,
          "column": 20,
          "position": 29
        },
        "endLoc": {
          "line": 15,
          "column": 12,
          "position": 131
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\finops.ts",
        "start": 1,
        "end": 17,
        "startLoc": {
          "line": 1,
          "column": 14,
          "position": 11
        },
        "endLoc": {
          "line": 17,
          "column": 7,
          "position": 115
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ";\n}\nexport interface CostMetrics {\n    totalCost: number;\n    costByService: Record<string, number>;\n    costByOperation: Record<string, number>;\n    costByOrganization: Record<string, number>;\n    costByPeriod: Record<string, number>;\n    averageCost: number;\n    costTrend: 'increasing' | 'decreasing' | 'stable';\n    topExpenses: CostEntry[];\n}\nexport declare class FinOpsConsolidatedService",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\finops-consolidated.service.d.ts",
        "start": 13,
        "end": 25,
        "startLoc": {
          "line": 13,
          "column": 2,
          "position": 123
        },
        "endLoc": {
          "line": 25,
          "column": 26,
          "position": 233
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\finops.ts",
        "start": 58,
        "end": 65,
        "startLoc": {
          "line": 58,
          "column": 7,
          "position": 433
        },
        "endLoc": {
          "line": 65,
          "column": 13,
          "position": 522
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ";\n    updateBudget(budgetId: string, updates: Partial<Budget>): boolean;\n    deleteBudget(budgetId: string): boolean;\n    getBudget(budgetId: string): Budget | undefined;\n    getBudgetsByOrganization(organizationId: string): Budget[];\n    private evaluateBudgets;\n    private calculateCurrentBudgetSpend;\n    private getBudgetStartDate;\n    private getBudgetEndDate;\n    private createBudgetAlert;\n    private determineAlertSeverity",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\finops-consolidated.service.d.ts",
        "start": 58,
        "end": 68,
        "startLoc": {
          "line": 58,
          "column": 2,
          "position": 536
        },
        "endLoc": {
          "line": 68,
          "column": 23,
          "position": 638
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\finops.d.ts",
        "start": 73,
        "end": 83,
        "startLoc": {
          "line": 73,
          "column": 7,
          "position": 610
        },
        "endLoc": {
          "line": 83,
          "column": 15,
          "position": 712
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ";\n    private hasActiveAlert;\n    acknowledgeAlert(alertId: string, acknowledgedBy: string): boolean;\n    getActiveAlerts(organizationId?: string): BudgetAlert[];\n    getCostMetrics(organizationId?: string, period?: string): CostMetrics;\n    private groupCostsBy;\n    private groupCostsByPeriod;\n    private getPeriodCutoffDate;\n    private calculateCostTrend;\n    private getTopExpenses;\n    private",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\finops-consolidated.service.d.ts",
        "start": 68,
        "end": 78,
        "startLoc": {
          "line": 68,
          "column": 23,
          "position": 639
        },
        "endLoc": {
          "line": 78,
          "column": 8,
          "position": 734
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\finops.d.ts",
        "start": 82,
        "end": 92,
        "startLoc": {
          "line": 82,
          "column": 18,
          "position": 707
        },
        "endLoc": {
          "line": 92,
          "column": 22,
          "position": 802
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "export interface MetricThreshold {\n    value: number;\n    color: string;\n    label: string;\n    operator: 'greater_than' | 'less_than' | 'equal' | 'between';\n}\nexport interface ExecutiveMetric {\n    id: string;\n    title: string;\n    value: number;\n    unit: string;\n    trend: 'increasing' | 'decreasing' | 'stable';\n    position: {\n        x: number;\n        y: number;\n        width: number;\n        height: number;",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\executive-dashboard.service.d.ts",
        "start": 1,
        "end": 17,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 17,
          "column": 2,
          "position": 133
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\executive-dashboard.service.ts",
        "start": 4,
        "end": 17,
        "startLoc": {
          "line": 4,
          "column": 1,
          "position": 16
        },
        "endLoc": {
          "line": 17,
          "column": 2,
          "position": 147
        }
      }
    },
    {
      "format": "typescript",
      "lines": 85,
      "fragment": "export interface Event {\n    id: string;\n    type: string;\n    aggregateId: string;\n    aggregateType: string;\n    version: number;\n    timestamp: Date;\n    data: Record<string, any>;\n    metadata: EventMetadata;\n}\nexport interface EventMetadata {\n    userId?: string;\n    organizationId?: string;\n    correlationId?: string;\n    causationId?: string;\n    source: string;\n    version: string;\n}\nexport interface EventStore {\n    saveEvents(aggregateId: string, events: Event[], expectedVersion: number): Promise<void>;\n    getEvents(aggregateId: string, fromVersion?: number): Promise<Event[]>;\n    getAllEvents(fromTimestamp?: Date): Promise<Event[]>;\n    getEventsByType(eventType: string, fromTimestamp?: Date): Promise<Event[]>;\n}\nexport interface EventBus {\n    publish(event: Event): Promise<void>;\n    subscribe(eventType: string, handler: EventHandler): void;\n    unsubscribe(eventType: string, handler: EventHandler): void;\n}\nexport interface EventHandler {\n    (event: Event): Promise<void>;\n}\nexport interface Aggregate {\n    id: string;\n    version: number;\n    apply(event: Event): void;\n    getUncommittedEvents(): Event[];\n    markEventsAsCommitted(): void;\n}\nexport interface Command {\n    id: string;\n    type: string;\n    aggregateId: string;\n    data: Record<string, any>;\n    metadata: CommandMetadata;\n}\nexport interface CommandMetadata {\n    userId?: string;\n    organizationId?: string;\n    correlationId?: string;\n    causationId?: string;\n    timestamp: Date;\n}\nexport interface CommandHandler {\n    (command: Command): Promise<Event[]>;\n}\nexport interface Query {\n    id: string;\n    type: string;\n    data: Record<string, any>;\n    metadata: QueryMetadata;\n}\nexport interface QueryMetadata {\n    userId?: string;\n    organizationId?: string;\n    correlationId?: string;\n    timestamp: Date;\n}\nexport interface QueryHandler<T = any> {\n    (query: Query): Promise<T>;\n}\nexport interface ReadModel {\n    id: string;\n    type: string;\n    data: Record<string, any>;\n    version: number;\n    lastUpdated: Date;\n}\nexport interface ReadModelStore {\n    save(readModel: ReadModel): Promise<void>;\n    get(id: string, type: string): Promise<ReadModel | null>;\n    query(type: string, filters: Record<string, any>): Promise<ReadModel[]>;\n    delete(id: string, type: string): Promise<void>;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\events.d.ts",
        "start": 1,
        "end": 85,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 85,
          "column": 8,
          "position": 784
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\events.ts",
        "start": 3,
        "end": 101,
        "startLoc": {
          "line": 3,
          "column": 1,
          "position": 14
        },
        "endLoc": {
          "line": 101,
          "column": 6,
          "position": 812
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ";\n    }\n    async createEscalationRule(request) {\n        const id = this.generateId();\n        const now = new Date();\n        const rule = {\n            id,\n            organizationId: request.organizationId,\n            ruleName: request.ruleName,\n            conditions: request.conditions,\n            actions: request.actions,\n            timeouts: request.timeouts,\n            enabled: true,\n            priority: request.priority ?",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\escalation.service.js",
        "start": 14,
        "end": 27,
        "startLoc": {
          "line": 14,
          "column": 5,
          "position": 166
        },
        "endLoc": {
          "line": 27,
          "column": 2,
          "position": 282
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\quiet-hours-oncall-consolidated.service.js",
        "start": 321,
        "end": 334,
        "startLoc": {
          "line": 321,
          "column": 16,
          "position": 3044
        },
        "endLoc": {
          "line": 334,
          "column": 3,
          "position": 3160
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": ".get(id);\n        if (!rule) {\n            return null;\n        }\n        const updatedRule = {\n            ...rule,\n            ruleName: request.ruleName ?? rule.ruleName,\n            conditions: request.conditions ?? rule.conditions,\n            actions: request.actions ?? rule.actions,\n            timeouts: request.timeouts ?? rule.timeouts,\n            enabled: request.enabled ?? rule.enabled,\n            priority: request.priority ?? rule.priority,\n            updatedAt: new Date()\n        };\n        this.rules",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\escalation.service.js",
        "start": 35,
        "end": 49,
        "startLoc": {
          "line": 35,
          "column": 6,
          "position": 351
        },
        "endLoc": {
          "line": 49,
          "column": 6,
          "position": 504
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\quiet-hours-oncall-consolidated.service.js",
        "start": 348,
        "end": 362,
        "startLoc": {
          "line": 348,
          "column": 16,
          "position": 3274
        },
        "endLoc": {
          "line": 362,
          "column": 16,
          "position": 3427
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ";\n        }\n    }\n    calculateNextEscalation(timeouts, currentLevel) {\n        const nextTimeout = timeouts.find(t => t.level === currentLevel + 1);\n        if (nextTimeout) {\n            const nextEscalation = new Date();\n            nextEscalation.setMinutes(nextEscalation.getMinutes() + nextTimeout.timeoutMinutes);\n            return nextEscalation;\n        }\n        return new Date(Date.now() + 24 * 60 * 60 * 1000);\n    }\n    calculateResponseTime",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\escalation.service.js",
        "start": 254,
        "end": 266,
        "startLoc": {
          "line": 254,
          "column": 6,
          "position": 2587
        },
        "endLoc": {
          "line": 266,
          "column": 22,
          "position": 2721
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\quiet-hours-oncall-consolidated.service.js",
        "start": 786,
        "end": 798,
        "startLoc": {
          "line": 786,
          "column": 5,
          "position": 8098
        },
        "endLoc": {
          "line": 798,
          "column": 6,
          "position": 8232
        }
      }
    },
    {
      "format": "typescript",
      "lines": 26,
      "fragment": "}\ninterface ErrorContext {\n    userId?: string;\n    organizationId?: string;\n    requestId?: string;\n    sessionId?: string;\n    endpoint?: string;\n    method?: string;\n    userAgent?: string;\n    ip?: string;\n    timestamp: string;\n    service?: string;\n    operation?: string;\n    metadata?: Record<string, any>;\n}\ninterface ErrorDetails {\n    code: ErrorCode;\n    message: string;\n    severity: ErrorSeverity;\n    category: ErrorCategory;\n    context: ErrorContext;\n    stack?: string;\n    cause?: Error;\n    retryable: boolean;\n    retryAfter?: number;\n    suggestions",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\error-manager.service.d.ts",
        "start": 54,
        "end": 79,
        "startLoc": {
          "line": 54,
          "column": 1,
          "position": 415
        },
        "endLoc": {
          "line": 79,
          "column": 12,
          "position": 599
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\error-manager.service.ts",
        "start": 76,
        "end": 102,
        "startLoc": {
          "line": 76,
          "column": 1,
          "position": 468
        },
        "endLoc": {
          "line": 102,
          "column": 11,
          "position": 653
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "backoffMultiplier: number;\n    retryableErrors: ErrorCode[];\n}\ninterface ErrorStats {\n    total: number;\n    byCode: Record<ErrorCode, number>;\n    bySeverity: Record<ErrorSeverity, number>;\n    byCategory: Record<ErrorCategory, number>;\n    byService: Record<string, number>;\n    last24Hours: number;\n    lastHour: number;\n    retrySuccessRate: number;\n}\ndeclare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\error-manager.service.d.ts",
        "start": 86,
        "end": 99,
        "startLoc": {
          "line": 86,
          "column": 5,
          "position": 646
        },
        "endLoc": {
          "line": 99,
          "column": 8,
          "position": 751
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\error-manager.service.ts",
        "start": 111,
        "end": 126,
        "startLoc": {
          "line": 111,
          "column": 3,
          "position": 708
        },
        "endLoc": {
          "line": 126,
          "column": 6,
          "position": 815
        }
      }
    },
    {
      "format": "typescript",
      "lines": 38,
      "fragment": "}\nexport interface ErrorContext {\n    requestId?: string;\n    userId?: string;\n    organizationId?: string;\n    endpoint?: string;\n    method?: string;\n    userAgent?: string;\n    ip?: string;\n    timestamp?: string;\n    metadata?: Record<string, any>;\n}\nexport interface ErrorDetails {\n    code: string;\n    message: string;\n    category: ErrorCategory;\n    severity: ErrorSeverity;\n    context: ErrorContext;\n    stack?: string;\n    cause?: Error;\n    retryable: boolean;\n    retryAfter?: number;\n    suggestions?: string[];\n}\nexport interface ErrorResponse {\n    success: false;\n    error: {\n        code: string;\n        message: string;\n        category: ErrorCategory;\n        severity: ErrorSeverity;\n        requestId: string;\n        timestamp: string;\n        suggestions?: string[];\n    };\n    metadata?: Record<string, any>;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\error-handler.service.d.ts",
        "start": 18,
        "end": 55,
        "startLoc": {
          "line": 18,
          "column": 1,
          "position": 132
        },
        "endLoc": {
          "line": 55,
          "column": 8,
          "position": 403
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\error-handler.service.ts",
        "start": 29,
        "end": 70,
        "startLoc": {
          "line": 29,
          "column": 1,
          "position": 159
        },
        "endLoc": {
          "line": 70,
          "column": 6,
          "position": 434
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": "config = {\n            enabled: true,\n            maxRetries: 5,\n            retryIntervals: [1, 6, 24, 72, 168],\n            dlqRetentionDays: 30,\n            kpiCalculationInterval: 60,\n            autoEscalation: true,\n            escalationThresholds: {\n                collectionRate: 0.8,\n                responseTime: 24,\n                failureRate: 0.1\n            },\n            notificationEnabled: true,",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\dunning-solid.service.js",
        "start": 12,
        "end": 24,
        "startLoc": {
          "line": 12,
          "column": 2,
          "position": 109
        },
        "endLoc": {
          "line": 24,
          "column": 2,
          "position": 206
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\dunning-solid.js",
        "start": 397,
        "end": 410,
        "startLoc": {
          "line": 397,
          "column": 2,
          "position": 4527
        },
        "endLoc": {
          "line": 410,
          "column": 2,
          "position": 4626
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "export interface DunningSegment {\n    id: string;\n    name: string;\n    description: string;\n    criteria: {\n        overdueDays: {\n            min: number;\n            max: number;\n        };\n        amountRange: {\n            min: number;\n            max: number;\n        };\n        customerType: 'individual' | 'business' | 'both';\n        riskLevel: 'low' | 'medium' | 'high';\n        industry?: string[];\n        region?: string[];\n    };\n    strategy: {\n        maxRetries: number;\n        retryInterval: number;\n        escalationSteps",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\dunning-solid.service.d.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 16,
          "position": 158
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\dunning-solid.service.ts",
        "start": 10,
        "end": 30,
        "startLoc": {
          "line": 10,
          "column": 1,
          "position": 17
        },
        "endLoc": {
          "line": 30,
          "column": 12,
          "position": 174
        }
      }
    },
    {
      "format": "typescript",
      "lines": 48,
      "fragment": "};\n    isActive: boolean;\n    createdAt: string;\n    updatedAt: string;\n}\nexport interface DunningKPI {\n    id: string;\n    segmentId: string;\n    metric: string;\n    value: number;\n    target: number;\n    unit: string;\n    period: 'daily' | 'weekly' | 'monthly' | 'quarterly';\n    timestamp: string;\n    status: 'on_target' | 'below_target' | 'above_target' | 'critical';\n    trend: 'improving' | 'stable' | 'declining';\n    metadata: Record<string, any>;\n}\nexport interface DLQMessage {\n    id: string;\n    originalMessageId: string;\n    queueName: string;\n    messageType: 'dunning_step' | 'escalation' | 'notification' | 'retry';\n    payload: Record<string, any>;\n    failureReason: string;\n    retryCount: number;\n    maxRetries: number;\n    firstFailureAt: string;\n    lastFailureAt: string;\n    nextRetryAt: string;\n    status: 'pending' | 'processing' | 'retried' | 'dead' | 'resolved';\n    priority: 'low' | 'medium' | 'high' | 'critical';\n    organizationId: string;\n    metadata: Record<string, any>;\n}\nexport interface DunningRetry {\n    id: string;\n    messageId: string;\n    attemptNumber: number;\n    status: 'pending' | 'processing' | 'success' | 'failed';\n    scheduledAt: string;\n    startedAt?: string;\n    completedAt?: string;\n    errorMessage?: string;\n    retryStrategy: 'immediate' | 'exponential_backoff' | 'linear' | 'custom';\n    backoffMultiplier: number;\n    maxBackoffTime: number;\n    metadata",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\dunning-solid.service.d.ts",
        "start": 31,
        "end": 78,
        "startLoc": {
          "line": 31,
          "column": 5,
          "position": 245
        },
        "endLoc": {
          "line": 78,
          "column": 9,
          "position": 676
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\dunning-solid.service.ts",
        "start": 40,
        "end": 89,
        "startLoc": {
          "line": 40,
          "column": 3,
          "position": 272
        },
        "endLoc": {
          "line": 89,
          "column": 14,
          "position": 705
        }
      }
    },
    {
      "format": "typescript",
      "lines": 36,
      "fragment": "metadata: Record<string, any>;\n}\nexport interface DunningStats {\n    totalInvoices: number;\n    overdueInvoices: number;\n    collectedAmount: number;\n    pendingAmount: number;\n    collectionRate: number;\n    averageCollectionTime: number;\n    segmentStats: Record<string, {\n        invoices: number;\n        collected: number;\n        pending: number;\n        rate: number;\n        avgTime: number;\n    }>;\n    dlqStats: {\n        totalMessages: number;\n        pendingRetries: number;\n        deadMessages: number;\n        retrySuccessRate: number;\n        avgRetryTime: number;\n    };\n    kpiStats: {\n        onTarget: number;\n        belowTarget: number;\n        aboveTarget: number;\n        critical: number;\n    };\n    lastUpdated: string;\n}\nexport interface DunningConfig {\n    enabled: boolean;\n    maxRetries: number;\n    retryIntervals: number[];\n    dlqRetentionDays",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\dunning-solid.service.d.ts",
        "start": 78,
        "end": 113,
        "startLoc": {
          "line": 78,
          "column": 5,
          "position": 676
        },
        "endLoc": {
          "line": 113,
          "column": 17,
          "position": 915
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\dunning-solid.service.ts",
        "start": 90,
        "end": 126,
        "startLoc": {
          "line": 90,
          "column": 3,
          "position": 708
        },
        "endLoc": {
          "line": 126,
          "column": 12,
          "position": 948
        }
      }
    },
    {
      "format": "typescript",
      "lines": 52,
      "fragment": "export interface Invoice {\n    id: string;\n    invoiceNumber: string;\n    customerId: string;\n    customerName: string;\n    amount: number;\n    currency: string;\n    dueDate: string;\n    status: 'pending' | 'overdue' | 'paid' | 'cancelled';\n    organizationId: string;\n    createdAt: string;\n    updatedAt: string;\n    metadata?: Record<string, any>;\n}\nexport interface DunningStep {\n    id: string;\n    invoiceId: string;\n    stepNumber: number;\n    stepType: 'email' | 'call' | 'letter' | 'legal';\n    status: 'pending' | 'sent' | 'delivered' | 'failed' | 'cancelled';\n    scheduledDate: string;\n    sentDate?: string;\n    deliveryDate?: string;\n    content: string;\n    recipient: string;\n    channel: string;\n    priority: 'low' | 'medium' | 'high' | 'urgent';\n    escalationLevel: number;\n    createdAt: string;\n    updatedAt: string;\n}\nexport interface DunningCampaign {\n    id: string;\n    invoiceId: string;\n    customerId: string;\n    status: 'active' | 'completed' | 'cancelled' | 'paused';\n    currentStep: number;\n    totalSteps: number;\n    startDate: string;\n    endDate?: string;\n    steps: DunningStep[];\n    paymentReceived?: boolean;\n    paymentDate?: string;\n    notes: string[];\n    createdAt: string;\n    updatedAt: string;\n}\nexport interface DunningConfig {\n    enabled: boolean;\n    maxSteps: number;\n    stepIntervals: number[];\n    escalationThresholds",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\dunning-3-toques.service.d.ts",
        "start": 1,
        "end": 52,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 52,
          "column": 21,
          "position": 429
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\dunning-3-toques.service.ts",
        "start": 9,
        "end": 62,
        "startLoc": {
          "line": 9,
          "column": 1,
          "position": 17
        },
        "endLoc": {
          "line": 62,
          "column": 20,
          "position": 448
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "maxOverdueDays: number;\n    notificationEnabled: boolean;\n}\nexport interface DunningStats {\n    totalInvoices: number;\n    overdueInvoices: number;\n    activeCampaigns: number;\n    completedCampaigns: number;\n    successfulCollections: number;\n    collectionRate: number;\n    averageDaysToPayment: number;\n    stepEffectiveness: Record<string, number>;\n    lastRun: string;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\dunning-3-toques.service.d.ts",
        "start": 78,
        "end": 92,
        "startLoc": {
          "line": 78,
          "column": 5,
          "position": 587
        },
        "endLoc": {
          "line": 92,
          "column": 8,
          "position": 683
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\dunning-3-toques.service.ts",
        "start": 77,
        "end": 93,
        "startLoc": {
          "line": 77,
          "column": 3,
          "position": 595
        },
        "endLoc": {
          "line": 93,
          "column": 6,
          "position": 693
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": "}\nexport interface CacheItem<T = any> {\n    key: string;\n    value: T;\n    ttl: number;\n    createdAt: Date;\n    expiresAt: Date;\n    accessCount: number;\n    lastAccessed: Date;\n    size: number;\n}\nexport interface CacheStats {\n    hits: number;\n    misses: number;\n    evictions: number;\n    size: number;\n    maxSize: number;\n    hitRate: number;\n    memoryUsage: number;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\distributed-cache.d.ts",
        "start": 7,
        "end": 27,
        "startLoc": {
          "line": 7,
          "column": 1,
          "position": 51
        },
        "endLoc": {
          "line": 27,
          "column": 8,
          "position": 187
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\distributed-cache.ts",
        "start": 10,
        "end": 33,
        "startLoc": {
          "line": 10,
          "column": 1,
          "position": 88
        },
        "endLoc": {
          "line": 33,
          "column": 6,
          "position": 227
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ");\n            const dealsByMonth = [];\n            for (let i = 11; i >= 0; i--) {\n                const date = new Date(currentYear, currentMonth - i, 1);\n                const monthKey = date.toISOString().substring(0, 7);\n                const monthDeals = deals.filter(deal => {\n                    const dealDate = new Date(deal.createdAt);\n                    return dealDate.getFullYear() === date.getFullYear() &&\n                        dealDate.getMonth() === date.getMonth();\n                });\n                dealsByMonth.push({\n                    month: monthKey,\n                    count: monthDeals.length,\n                    value: monthDeals.reduce((sum, deal) => sum + deal",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\deals.service.js",
        "start": 348,
        "end": 361,
        "startLoc": {
          "line": 348,
          "column": 2,
          "position": 3800
        },
        "endLoc": {
          "line": 361,
          "column": 5,
          "position": 4005
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\deals.js",
        "start": 397,
        "end": 410,
        "startLoc": {
          "line": 397,
          "column": 2,
          "position": 4023
        },
        "endLoc": {
          "line": 410,
          "column": 2,
          "position": 4228
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ") {\n                        updated++;\n                    }\n                    else {\n                        failed++;\n                        errors.push(`Deal ${update.id} not found or access denied`);\n                    }\n                }\n                catch (error) {\n                    failed++;\n                    errors.push(`Failed to update deal ${update.id}: ${error.message}`);\n                }\n            }\n            logger",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\deals.service.js",
        "start": 506,
        "end": 519,
        "startLoc": {
          "line": 506,
          "column": 7,
          "position": 5510
        },
        "endLoc": {
          "line": 519,
          "column": 7,
          "position": 5595
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\deals.js",
        "start": 482,
        "end": 495,
        "startLoc": {
          "line": 482,
          "column": 12,
          "position": 5069
        },
        "endLoc": {
          "line": 495,
          "column": 4,
          "position": 5154
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": "${update.id}: ${error.message}`);\n                }\n            }\n            logger.info('Bulk update completed', {\n                orgId,\n                userId,\n                updated,\n                failed,\n                total: updates.length\n            });\n            return { updated, failed, errors };\n        }\n        catch (error) {\n            logger.error('Failed to bulk update deals'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\deals.service.js",
        "start": 516,
        "end": 529,
        "startLoc": {
          "line": 516,
          "column": 24,
          "position": 5573
        },
        "endLoc": {
          "line": 529,
          "column": 30,
          "position": 5666
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\interactions.service.js",
        "start": 466,
        "end": 479,
        "startLoc": {
          "line": 466,
          "column": 31,
          "position": 5256
        },
        "endLoc": {
          "line": 479,
          "column": 37,
          "position": 5349
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "type Deal, type CreateDeal, type UpdateDeal, type DealFilter, type MoveDealStage, type DealAnalytics } from '@econeura/shared/src/schemas/crm';\nexport interface DealSummary {\n    total: number;\n    totalValue: number;\n    averageDealSize: number;\n    winRate: number;\n    averageSalesCycle: number;\n    dealsByStage: Record<string, number>;\n    dealsByStatus: Record<string, number>;\n    dealsByMonth: Array<{\n        month: string;\n        count: number;\n        value: number;",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\deals.service.d.ts",
        "start": 1,
        "end": 13,
        "startLoc": {
          "line": 1,
          "column": 2,
          "position": 4
        },
        "endLoc": {
          "line": 13,
          "column": 2,
          "position": 136
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\deals.service.ts",
        "start": 13,
        "end": 29,
        "startLoc": {
          "line": 13,
          "column": 3,
          "position": 64
        },
        "endLoc": {
          "line": 29,
          "column": 2,
          "position": 200
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": "}>;\n    pipelineHealth: {\n        healthy: boolean;\n        score: number;\n        issues: string[];\n    };\n}\nexport interface DealMetrics {\n    totalDeals: number;\n    openDeals: number;\n    closedWon: number;\n    closedLost: number;\n    totalValue: number;\n    averageDealSize: number;\n    winRate: number;\n    averageSalesCycle: number;\n    dealsByStage: Record<string, number>;\n    dealsByStatus: Record<string, number>;\n    dealsByPriority: Record<string, number>;\n    dealsByMonth: Array<{\n        month: string;\n        count: number;\n        value: number;",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\deals.service.d.ts",
        "start": 21,
        "end": 43,
        "startLoc": {
          "line": 21,
          "column": 5,
          "position": 187
        },
        "endLoc": {
          "line": 43,
          "column": 2,
          "position": 356
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\deals.service.ts",
        "start": 30,
        "end": 50,
        "startLoc": {
          "line": 30,
          "column": 2,
          "position": 241
        },
        "endLoc": {
          "line": 50,
          "column": 2,
          "position": 409
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ": Record<string, number>;\n    dealsByMonth: Array<{\n        month: string;\n        count: number;\n        value: number;\n    }>;\n    topPerformers: Array<{\n        userId: string;\n        name: string;\n        dealsCount: number;\n        totalValue: number;\n        winRate: number;\n    }>;\n    recentActivity",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\deals.service.d.ts",
        "start": 39,
        "end": 52,
        "startLoc": {
          "line": 39,
          "column": 16,
          "position": 318
        },
        "endLoc": {
          "line": 52,
          "column": 15,
          "position": 412
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\deals.service.d.ts",
        "start": 9,
        "end": 22,
        "startLoc": {
          "line": 9,
          "column": 14,
          "position": 98
        },
        "endLoc": {
          "line": 22,
          "column": 15,
          "position": 192
        }
      }
    },
    {
      "format": "javascript",
      "lines": 27,
      "fragment": "config = {\n            enabled: true,\n            modelVersion: 'v1.0',\n            confidenceThreshold: 0.7,\n            maxRecommendations: 5,\n            expirationHours: 24,\n            factors: {\n                dealValue: 0.15,\n                stage: 0.20,\n                timeInStage: 0.10,\n                ownerExperience: 0.12,\n                companySize: 0.08,\n                industry: 0.10,\n                seasonality: 0.05,\n                competitorActivity: 0.08,\n                lastActivity: 0.07,\n                marketConditions: 0.05\n            },\n            actions: {\n                call: { enabled: true, weight: 0.25 },\n                email: { enabled: true, weight: 0.20 },\n                meeting: { enabled: true, weight: 0.20 },\n                proposal: { enabled: true, weight: 0.15 },\n                follow_up: { enabled: true, weight: 0.10 },\n                negotiation: { enabled: true, weight: 0.05 },\n                close: { enabled: true, weight: 0.05 }\n            },",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\deals-nba.service.js",
        "start": 10,
        "end": 36,
        "startLoc": {
          "line": 10,
          "column": 2,
          "position": 85
        },
        "endLoc": {
          "line": 36,
          "column": 2,
          "position": 352
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\deals-nba.js",
        "start": 249,
        "end": 276,
        "startLoc": {
          "line": 249,
          "column": 2,
          "position": 2514
        },
        "endLoc": {
          "line": 276,
          "column": 2,
          "position": 2783
        }
      }
    },
    {
      "format": "typescript",
      "lines": 73,
      "fragment": "export interface Deal {\n    id: string;\n    title: string;\n    value: number;\n    currency: string;\n    stage: string;\n    probability: number;\n    closeDate: string;\n    ownerId: string;\n    organizationId: string;\n    companyId: string;\n    contactId: string;\n    source: string;\n    type: string;\n    createdAt: string;\n    updatedAt: string;\n    metadata?: Record<string, any>;\n}\nexport interface NBARecommendation {\n    id: string;\n    dealId: string;\n    action: string;\n    actionType: 'call' | 'email' | 'meeting' | 'proposal' | 'follow_up' | 'negotiation' | 'close';\n    priority: 'low' | 'medium' | 'high' | 'critical';\n    confidence: number;\n    expectedOutcome: string;\n    successProbability: number;\n    timeToExecute: number;\n    explanation: {\n        factors: FactorInfluence[];\n        reasoning: string;\n        alternatives: string[];\n        risks: string[];\n    };\n    context: {\n        dealStage: string;\n        timeInStage: number;\n        lastActivity: string;\n        competitorActivity: boolean;\n        marketConditions: string;\n    };\n    createdAt: string;\n    expiresAt: string;\n}\nexport interface FactorInfluence {\n    factor: string;\n    weight: number;\n    impact: 'positive' | 'negative' | 'neutral';\n    description: string;\n    evidence: string[];\n}\nexport interface NBAConfig {\n    enabled: boolean;\n    modelVersion: string;\n    confidenceThreshold: number;\n    maxRecommendations: number;\n    expirationHours: number;\n    factors: {\n        dealValue: number;\n        stage: number;\n        timeInStage: number;\n        ownerExperience: number;\n        companySize: number;\n        industry: number;\n        seasonality: number;\n        competitorActivity: number;\n        lastActivity: number;\n        marketConditions: number;\n    };\n    actions: {\n        call: {\n            enabled: boolean;\n            weight: number;",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\deals-nba.service.d.ts",
        "start": 1,
        "end": 73,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 73,
          "column": 2,
          "position": 543
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\deals-nba.service.ts",
        "start": 9,
        "end": 82,
        "startLoc": {
          "line": 9,
          "column": 1,
          "position": 17
        },
        "endLoc": {
          "line": 82,
          "column": 2,
          "position": 562
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "};\n    };\n}\nexport interface NBAStats {\n    totalDeals: number;\n    recommendationsGenerated: number;\n    recommendationsExecuted: number;\n    successRate: number;\n    averageConfidence: number;\n    topActions: Record<string, number>;\n    topFactors: Record<string, number>;\n    lastRun: string;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\deals-nba.service.d.ts",
        "start": 98,
        "end": 111,
        "startLoc": {
          "line": 98,
          "column": 9,
          "position": 690
        },
        "endLoc": {
          "line": 111,
          "column": 8,
          "position": 779
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\deals-nba.service.ts",
        "start": 88,
        "end": 103,
        "startLoc": {
          "line": 88,
          "column": 2,
          "position": 682
        },
        "endLoc": {
          "line": 103,
          "column": 6,
          "position": 773
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": "export interface PoolConfig {\n    min: number;\n    max: number;\n    acquireTimeoutMillis: number;\n    createTimeoutMillis: number;\n    destroyTimeoutMillis: number;\n    idleTimeoutMillis: number;\n    reapIntervalMillis: number;\n    createRetryIntervalMillis: number;\n    propagateCreateError: boolean;\n}\nexport interface QueryOptions {\n    timeout?: number;\n    retries?: number;\n    cache?: boolean;\n    cacheTtl?: number;\n    transaction?: boolean;\n    isolationLevel?: 'READ_UNCOMMITTED' | 'READ_COMMITTED' | 'REPEATABLE_READ' | 'SERIALIZABLE';\n}\nexport interface QueryResult<T = any> {\n    rows: T[];\n    rowCount: number;\n    fields: Array<{\n        name: string;\n        type: string;",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\database-pool.d.ts",
        "start": 1,
        "end": 25,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 25,
          "column": 2,
          "position": 194
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\database-pool.ts",
        "start": 5,
        "end": 29,
        "startLoc": {
          "line": 5,
          "column": 1,
          "position": 29
        },
        "endLoc": {
          "line": 29,
          "column": 2,
          "position": 224
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "healthCheck(): Promise<{\n        status: 'healthy' | 'unhealthy' | 'degraded';\n        connections: {\n            total: number;\n            active: number;\n            idle: number;\n            max: number;\n        };\n        performance: {\n            totalQueries: number;\n            failedQueries: number;\n            averageQueryTime: number;\n            errorRate: number;\n        };\n    }>;",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\database-pool.d.ts",
        "start": 64,
        "end": 78,
        "startLoc": {
          "line": 64,
          "column": 5,
          "position": 614
        },
        "endLoc": {
          "line": 78,
          "column": 2,
          "position": 717
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\database-pool.ts",
        "start": 377,
        "end": 391,
        "startLoc": {
          "line": 377,
          "column": 2,
          "position": 3321
        },
        "endLoc": {
          "line": 391,
          "column": 2,
          "position": 3425
        }
      }
    },
    {
      "format": "typescript",
      "lines": 29,
      "fragment": "export interface ValidationRule {\n    field: string;\n    type: 'string' | 'number' | 'boolean' | 'array' | 'object' | 'email' | 'url' | 'uuid' | 'date' | 'custom';\n    required?: boolean;\n    minLength?: number;\n    maxLength?: number;\n    min?: number;\n    max?: number;\n    pattern?: RegExp;\n    customValidator?: (value: any) => boolean | string;\n    message?: string;\n    transform?: (value: any) => any;\n}\nexport interface ValidationResult {\n    valid: boolean;\n    errors: ValidationError[];\n    data?: any;\n}\nexport interface ValidationError {\n    field: string;\n    message: string;\n    value?: any;\n    rule?: string;\n}\nexport interface ValidationSchema {\n    name: string;\n    rules: ValidationRule[];\n    strict?: boolean;\n    sanitize",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\data-validator.d.ts",
        "start": 1,
        "end": 29,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 29,
          "column": 9,
          "position": 261
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\data-validator.ts",
        "start": 4,
        "end": 34,
        "startLoc": {
          "line": 4,
          "column": 1,
          "position": 27
        },
        "endLoc": {
          "line": 34,
          "column": 34,
          "position": 290
        }
      }
    },
    {
      "format": "javascript",
      "lines": 31,
      "fragment": ";\nconst CreateDashboardSchema = z.object({\n    name: z.string().min(1).max(100),\n    description: z.string().max(500).optional(),\n    layout: z.object({\n        columns: z.number().min(1).max(12).default(4),\n        rows: z.number().min(1).max(20).default(10),\n        responsive: z.boolean().default(true),\n        theme: z.enum(['light', 'dark', 'auto']).default('auto')\n    }),\n    filters: z.array(z.object({\n        field: z.string(),\n        label: z.string(),\n        type: z.enum(['select', 'multiselect', 'date', 'daterange', 'number', 'text']),\n        options: z.array(z.string()).optional(),\n        defaultValue: z.any().optional(),\n        isRequired: z.boolean().default(false),\n        validation: z.object({\n            min: z.number().optional(),\n            max: z.number().optional(),\n            pattern: z.string().optional()\n        }).optional()\n    })).default([]),\n    permissions: z.object({\n        isPublic: z.boolean().default(false),\n        allowedUsers: z.array(z.string()).default([]),\n        allowedRoles: z.array(z.string()).default([])\n    }),\n    tags: z.array(z.string()).default([])\n});\nconst CreateWidgetSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\data-analytics-dashboard.service.js",
        "start": 2,
        "end": 32,
        "startLoc": {
          "line": 2,
          "column": 25,
          "position": 24
        },
        "endLoc": {
          "line": 32,
          "column": 19,
          "position": 477
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\data-analytics-dashboard.js",
        "start": 8,
        "end": 38,
        "startLoc": {
          "line": 8,
          "column": 11,
          "position": 105
        },
        "endLoc": {
          "line": 38,
          "column": 14,
          "position": 561
        }
      }
    },
    {
      "format": "javascript",
      "lines": 29,
      "fragment": ";\nconst CreateWidgetSchema = z.object({\n    type: z.enum(['chart', 'metric', 'table', 'gauge', 'map', 'heatmap', 'trend']),\n    title: z.string().min(1).max(100),\n    description: z.string().max(500).optional(),\n    dataSource: z.string(),\n    configuration: z.object({\n        chartType: z.enum(['line', 'bar', 'pie', 'area', 'scatter', 'doughnut']).optional(),\n        metrics: z.array(z.string()),\n        dimensions: z.array(z.string()).optional(),\n        filters: z.record(z.any()).optional(),\n        timeRange: z.string().optional(),\n        refreshInterval: z.number().optional(),\n        colors: z.array(z.string()).optional(),\n        showLegend: z.boolean().optional(),\n        showDataLabels: z.boolean().optional(),\n        yAxisLabel: z.string().optional(),\n        xAxisLabel: z.string().optional()\n    }),\n    position: z.object({\n        x: z.number().min(0),\n        y: z.number().min(0),\n        width: z.number().min(1).max(12),\n        height: z.number().min(1).max(20)\n    }),\n    isVisible: z.boolean().default(true),\n    isEditable: z.boolean().default(true)\n});\nconst CreateAlertSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\data-analytics-dashboard.service.js",
        "start": 31,
        "end": 59,
        "startLoc": {
          "line": 31,
          "column": 2,
          "position": 473
        },
        "endLoc": {
          "line": 59,
          "column": 18,
          "position": 909
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\data-analytics-dashboard.js",
        "start": 170,
        "end": 198,
        "startLoc": {
          "line": 170,
          "column": 3,
          "position": 1748
        },
        "endLoc": {
          "line": 198,
          "column": 11,
          "position": 2187
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ";\nconst CreateAlertSchema = z.object({\n    name: z.string().min(1).max(100),\n    description: z.string().max(500).optional(),\n    metric: z.string(),\n    condition: z.object({\n        operator: z.enum(['greater_than', 'less_than', 'equals', 'not_equals', 'contains']),\n        value: z.union([z.number(), z.string()]),\n        threshold: z.number()\n    }),\n    severity: z.enum(['low', 'medium', 'high', 'critical']),\n    recipients: z.array(z.string())\n});\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\data-analytics-dashboard.service.js",
        "start": 58,
        "end": 71,
        "startLoc": {
          "line": 58,
          "column": 2,
          "position": 905
        },
        "endLoc": {
          "line": 71,
          "column": 7,
          "position": 1089
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\data-analytics-dashboard.js",
        "start": 426,
        "end": 439,
        "startLoc": {
          "line": 426,
          "column": 11,
          "position": 4294
        },
        "endLoc": {
          "line": 439,
          "column": 6,
          "position": 4481
        }
      }
    },
    {
      "format": "typescript",
      "lines": 83,
      "fragment": "export interface DashboardWidget {\n    id: string;\n    type: 'chart' | 'metric' | 'table' | 'gauge' | 'map' | 'heatmap' | 'trend';\n    title: string;\n    description?: string;\n    dataSource: string;\n    configuration: {\n        chartType?: 'line' | 'bar' | 'pie' | 'area' | 'scatter' | 'doughnut';\n        metrics: string[];\n        dimensions?: string[];\n        filters?: Record<string, any>;\n        timeRange?: string;\n        refreshInterval?: number;\n        colors?: string[];\n        showLegend?: boolean;\n        showDataLabels?: boolean;\n        yAxisLabel?: string;\n        xAxisLabel?: string;\n    };\n    position: {\n        x: number;\n        y: number;\n        width: number;\n        height: number;\n    };\n    isVisible: boolean;\n    isEditable: boolean;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface Dashboard {\n    id: string;\n    name: string;\n    description: string;\n    widgets: DashboardWidget[];\n    layout: {\n        columns: number;\n        rows: number;\n        responsive: boolean;\n        theme: 'light' | 'dark' | 'auto';\n    };\n    filters: DashboardFilter[];\n    permissions: {\n        isPublic: boolean;\n        allowedUsers: string[];\n        allowedRoles: string[];\n    };\n    organizationId: string;\n    tags: string[];\n    isActive: boolean;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface DashboardFilter {\n    id: string;\n    field: string;\n    label: string;\n    type: 'select' | 'multiselect' | 'date' | 'daterange' | 'number' | 'text';\n    options?: string[];\n    defaultValue?: any;\n    isRequired: boolean;\n    validation?: {\n        min?: number;\n        max?: number;\n        pattern?: string;\n    };\n}\nexport interface AnalyticsData {\n    metrics: {\n        totalUsers: number;\n        activeUsers: number;\n        totalSessions: number;\n        averageSessionDuration: number;\n        bounceRate: number;\n        conversionRate: number;\n        revenue: number;\n        costPerAcquisition: number;\n        returnOnInvestment: number;\n    };\n    trends: {\n        users: Array<{\n            date: string;\n            value: number;",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\data-analytics-dashboard.service.d.ts",
        "start": 2,
        "end": 84,
        "startLoc": {
          "line": 2,
          "column": 1,
          "position": 13
        },
        "endLoc": {
          "line": 84,
          "column": 2,
          "position": 670
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\data-analytics-dashboard.service.ts",
        "start": 24,
        "end": 107,
        "startLoc": {
          "line": 24,
          "column": 1,
          "position": 50
        },
        "endLoc": {
          "line": 107,
          "column": 2,
          "position": 709
        }
      }
    },
    {
      "format": "typescript",
      "lines": 32,
      "fragment": "}>;\n    };\n    topPages: Array<{\n        page: string;\n        views: number;\n        uniqueViews: number;\n        bounceRate: number;\n        avgTimeOnPage: number;\n    }>;\n    trafficSources: Array<{\n        source: string;\n        visits: number;\n        percentage: number;\n        conversionRate: number;\n    }>;\n    deviceBreakdown: Array<{\n        device: string;\n        percentage: number;\n        sessions: number;\n    }>;\n    geographicData: Array<{\n        country: string;\n        region: string;\n        visits: number;\n        percentage: number;\n    }>;\n    realTimeData: {\n        activeUsers: number;\n        currentSessions: number;\n        topPages: Array<{\n            page: string;\n            activeUsers: number;",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\data-analytics-dashboard.service.d.ts",
        "start": 97,
        "end": 128,
        "startLoc": {
          "line": 97,
          "column": 9,
          "position": 754
        },
        "endLoc": {
          "line": 128,
          "column": 2,
          "position": 966
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\data-analytics-dashboard.service.ts",
        "start": 110,
        "end": 139,
        "startLoc": {
          "line": 110,
          "column": 2,
          "position": 778
        },
        "endLoc": {
          "line": 139,
          "column": 2,
          "position": 989
        }
      }
    },
    {
      "format": "typescript",
      "lines": 44,
      "fragment": "}>;\n    };\n}\nexport interface Report {\n    id: string;\n    name: string;\n    description: string;\n    type: 'analytics' | 'performance' | 'business' | 'custom';\n    data: AnalyticsData;\n    filters: Record<string, any>;\n    timeRange: {\n        start: Date;\n        end: Date;\n    };\n    organizationId: string;\n    isScheduled: boolean;\n    schedule?: {\n        frequency: 'daily' | 'weekly' | 'monthly';\n        time: string;\n        recipients: string[];\n    };\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface Alert {\n    id: string;\n    name: string;\n    description: string;\n    metric: string;\n    condition: {\n        operator: 'greater_than' | 'less_than' | 'equals' | 'not_equals' | 'contains';\n        value: number | string;\n        threshold: number;\n    };\n    isActive: boolean;\n    severity: 'low' | 'medium' | 'high' | 'critical';\n    recipients: string[];\n    organizationId: string;\n    lastTriggered?: Date;\n    triggerCount: number;\n    createdAt: Date;\n    updatedAt: Date;\n}\ndeclare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\data-analytics-dashboard.service.d.ts",
        "start": 133,
        "end": 176,
        "startLoc": {
          "line": 133,
          "column": 9,
          "position": 996
        },
        "endLoc": {
          "line": 176,
          "column": 8,
          "position": 1330
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\data-analytics-dashboard.service.ts",
        "start": 140,
        "end": 186,
        "startLoc": {
          "line": 140,
          "column": 2,
          "position": 1012
        },
        "endLoc": {
          "line": 186,
          "column": 80,
          "position": 1349
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", {\n        options?: string[];\n        validation?: {\n            pattern?: string;\n            max?: number;\n            min?: number;\n        };\n        type?: \"number\" | \"select\" | \"date\" | \"text\" | \"multiselect\" | \"daterange\";\n        field?: string;\n        label?: string;\n        defaultValue?: any;\n        isRequired?: boolean;\n    }>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\data-analytics-dashboard.service.d.ts",
        "start": 227,
        "end": 239,
        "startLoc": {
          "line": 227,
          "column": 2,
          "position": 1911
        },
        "endLoc": {
          "line": 239,
          "column": 2,
          "position": 2022
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\data-analytics-dashboard.service.d.ts",
        "start": 215,
        "end": 227,
        "startLoc": {
          "line": 215,
          "column": 11,
          "position": 1800
        },
        "endLoc": {
          "line": 227,
          "column": 2,
          "position": 1911
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "{\n        options?: string[];\n        validation?: {\n            pattern?: string;\n            max?: number;\n            min?: number;\n        };\n        type?: \"number\" | \"select\" | \"date\" | \"text\" | \"multiselect\" | \"daterange\";\n        field?: string;\n        label?: string;\n        defaultValue?: any;\n        isRequired?: boolean;\n    }[",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\data-analytics-dashboard.service.d.ts",
        "start": 256,
        "end": 268,
        "startLoc": {
          "line": 256,
          "column": 2,
          "position": 2223
        },
        "endLoc": {
          "line": 268,
          "column": 2,
          "position": 2332
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\data-analytics-dashboard.service.d.ts",
        "start": 215,
        "end": 227,
        "startLoc": {
          "line": 215,
          "column": 2,
          "position": 1802
        },
        "endLoc": {
          "line": 227,
          "column": 2,
          "position": 1911
        }
      }
    },
    {
      "format": "typescript",
      "lines": 29,
      "fragment": ", {\n    name?: string;\n    filters?: {\n        options?: string[];\n        validation?: {\n            pattern?: string;\n            max?: number;\n            min?: number;\n        };\n        type?: \"number\" | \"select\" | \"date\" | \"text\" | \"multiselect\" | \"daterange\";\n        field?: string;\n        label?: string;\n        defaultValue?: any;\n        isRequired?: boolean;\n    }[];\n    tags?: string[];\n    description?: string;\n    permissions?: {\n        isPublic?: boolean;\n        allowedUsers?: string[];\n        allowedRoles?: string[];\n    };\n    layout?: {\n        columns?: number;\n        rows?: number;\n        responsive?: boolean;\n        theme?: \"auto\" | \"light\" | \"dark\";\n    };\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\data-analytics-dashboard.service.d.ts",
        "start": 282,
        "end": 310,
        "startLoc": {
          "line": 282,
          "column": 2,
          "position": 2445
        },
        "endLoc": {
          "line": 310,
          "column": 2,
          "position": 2684
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\data-analytics-dashboard.service.d.ts",
        "start": 254,
        "end": 282,
        "startLoc": {
          "line": 254,
          "column": 11,
          "position": 2206
        },
        "endLoc": {
          "line": 282,
          "column": 2,
          "position": 2445
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", {\n        metrics?: string[];\n        filters?: Record<string, any>;\n        timeRange?: string;\n        refreshInterval?: number;\n        dimensions?: string[];\n        chartType?: \"area\" | \"line\" | \"bar\" | \"pie\" | \"scatter\" | \"doughnut\";\n        colors?: string[];\n        showLegend?: boolean;\n        showDataLabels?: boolean;\n        yAxisLabel?: string;\n        xAxisLabel?: string;\n    }>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\data-analytics-dashboard.service.d.ts",
        "start": 340,
        "end": 352,
        "startLoc": {
          "line": 340,
          "column": 2,
          "position": 3109
        },
        "endLoc": {
          "line": 352,
          "column": 2,
          "position": 3235
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\data-analytics-dashboard.service.d.ts",
        "start": 328,
        "end": 340,
        "startLoc": {
          "line": 328,
          "column": 11,
          "position": 2983
        },
        "endLoc": {
          "line": 340,
          "column": 2,
          "position": 3109
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "{\n        metrics?: string[];\n        filters?: Record<string, any>;\n        timeRange?: string;\n        refreshInterval?: number;\n        dimensions?: string[];\n        chartType?: \"area\" | \"line\" | \"bar\" | \"pie\" | \"scatter\" | \"doughnut\";\n        colors?: string[];\n        showLegend?: boolean;\n        showDataLabels?: boolean;\n        yAxisLabel?: string;\n        xAxisLabel?: string;\n    };",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\data-analytics-dashboard.service.d.ts",
        "start": 383,
        "end": 395,
        "startLoc": {
          "line": 383,
          "column": 2,
          "position": 3526
        },
        "endLoc": {
          "line": 395,
          "column": 2,
          "position": 3650
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\data-analytics-dashboard.service.d.ts",
        "start": 328,
        "end": 340,
        "startLoc": {
          "line": 328,
          "column": 2,
          "position": 2985
        },
        "endLoc": {
          "line": 340,
          "column": 2,
          "position": 3109
        }
      }
    },
    {
      "format": "typescript",
      "lines": 27,
      "fragment": ", {\n    type?: \"map\" | \"table\" | \"metric\" | \"trend\" | \"gauge\" | \"chart\" | \"heatmap\";\n    title?: string;\n    description?: string;\n    position?: {\n        width?: number;\n        height?: number;\n        x?: number;\n        y?: number;\n    };\n    dataSource?: string;\n    isVisible?: boolean;\n    configuration?: {\n        metrics?: string[];\n        filters?: Record<string, any>;\n        timeRange?: string;\n        refreshInterval?: number;\n        dimensions?: string[];\n        chartType?: \"area\" | \"line\" | \"bar\" | \"pie\" | \"scatter\" | \"doughnut\";\n        colors?: string[];\n        showLegend?: boolean;\n        showDataLabels?: boolean;\n        yAxisLabel?: string;\n        xAxisLabel?: string;\n    };\n    isEditable?: boolean;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\data-analytics-dashboard.service.d.ts",
        "start": 397,
        "end": 423,
        "startLoc": {
          "line": 397,
          "column": 2,
          "position": 3661
        },
        "endLoc": {
          "line": 423,
          "column": 2,
          "position": 3912
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\data-analytics-dashboard.service.d.ts",
        "start": 371,
        "end": 397,
        "startLoc": {
          "line": 371,
          "column": 11,
          "position": 3410
        },
        "endLoc": {
          "line": 397,
          "column": 2,
          "position": 3661
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", {\n    metric?: string;\n    name?: string;\n    severity?: \"critical\" | \"low\" | \"medium\" | \"high\";\n    description?: string;\n    recipients?: string[];\n    condition?: {\n        value?: string | number;\n        threshold?: number;\n        operator?: \"greater_than\" | \"less_than\" | \"equals\" | \"not_equals\" | \"contains\";\n    };\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\data-analytics-dashboard.service.d.ts",
        "start": 454,
        "end": 465,
        "startLoc": {
          "line": 454,
          "column": 2,
          "position": 4302
        },
        "endLoc": {
          "line": 465,
          "column": 2,
          "position": 4416
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\data-analytics-dashboard.service.d.ts",
        "start": 443,
        "end": 454,
        "startLoc": {
          "line": 443,
          "column": 11,
          "position": 4188
        },
        "endLoc": {
          "line": 454,
          "column": 2,
          "position": 4302
        }
      }
    },
    {
      "format": "javascript",
      "lines": 17,
      "fragment": "= z.object({\n    'csp-report': z.object({\n        'document-uri': z.string(),\n        'referrer': z.string().optional(),\n        'violated-directive': z.string(),\n        'effective-directive': z.string().optional(),\n        'original-policy': z.string(),\n        'disposition': z.enum(['enforce', 'report']),\n        'blocked-uri': z.string().optional(),\n        'line-number': z.number().optional(),\n        'column-number': z.number().optional(),\n        'source-file': z.string().optional(),\n        'status-code': z.number().optional(),\n        'script-sample': z.string().optional(),\n    })\n});\nconst SRIViolationSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\csp-sri-banking.service.js",
        "start": 3,
        "end": 19,
        "startLoc": {
          "line": 3,
          "column": 2,
          "position": 30
        },
        "endLoc": {
          "line": 19,
          "column": 19,
          "position": 228
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\csp-sri-banking.js",
        "start": 6,
        "end": 22,
        "startLoc": {
          "line": 6,
          "column": 2,
          "position": 67
        },
        "endLoc": {
          "line": 22,
          "column": 16,
          "position": 265
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": "= z.object({\n    'sri-report': z.object({\n        'document-uri': z.string(),\n        'referrer': z.string().optional(),\n        'blocked-uri': z.string(),\n        'violation-type': z.enum(['integrity-mismatch', 'missing-integrity', 'invalid-integrity']),\n        'expected-hash': z.string().optional(),\n        'actual-hash': z.string().optional(),\n        'algorithm': z.enum(['sha256', 'sha384', 'sha512']).optional(),\n    })\n});\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\csp-sri-banking.service.js",
        "start": 19,
        "end": 30,
        "startLoc": {
          "line": 19,
          "column": 2,
          "position": 230
        },
        "endLoc": {
          "line": 30,
          "column": 7,
          "position": 367
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\csp-sri-banking.js",
        "start": 22,
        "end": 33,
        "startLoc": {
          "line": 22,
          "column": 2,
          "position": 267
        },
        "endLoc": {
          "line": 33,
          "column": 6,
          "position": 404
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", {\n        referrer?: string;\n        'document-uri'?: string;\n        'violated-directive'?: string;\n        'effective-directive'?: string;\n        'original-policy'?: string;\n        disposition?: \"report\" | \"enforce\";\n        'blocked-uri'?: string;\n        'line-number'?: number;\n        'column-number'?: number;\n        'source-file'?: string;\n        'status-code'?: number;\n        'script-sample'?: string;\n    }>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\csp-sri-banking.service.d.ts",
        "start": 29,
        "end": 42,
        "startLoc": {
          "line": 29,
          "column": 2,
          "position": 308
        },
        "endLoc": {
          "line": 42,
          "column": 2,
          "position": 414
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\csp-sri-banking.service.d.ts",
        "start": 16,
        "end": 29,
        "startLoc": {
          "line": 16,
          "column": 11,
          "position": 202
        },
        "endLoc": {
          "line": 29,
          "column": 2,
          "position": 308
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "{\n        referrer?: string;\n        'document-uri'?: string;\n        'violated-directive'?: string;\n        'effective-directive'?: string;\n        'original-policy'?: string;\n        disposition?: \"report\" | \"enforce\";\n        'blocked-uri'?: string;\n        'line-number'?: number;\n        'column-number'?: number;\n        'source-file'?: string;\n        'status-code'?: number;\n        'script-sample'?: string;\n    };",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\csp-sri-banking.service.d.ts",
        "start": 44,
        "end": 57,
        "startLoc": {
          "line": 44,
          "column": 2,
          "position": 435
        },
        "endLoc": {
          "line": 57,
          "column": 2,
          "position": 539
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\csp-sri-banking.service.d.ts",
        "start": 16,
        "end": 29,
        "startLoc": {
          "line": 16,
          "column": 2,
          "position": 204
        },
        "endLoc": {
          "line": 29,
          "column": 2,
          "position": 308
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", {\n    'csp-report'?: {\n        referrer?: string;\n        'document-uri'?: string;\n        'violated-directive'?: string;\n        'effective-directive'?: string;\n        'original-policy'?: string;\n        disposition?: \"report\" | \"enforce\";\n        'blocked-uri'?: string;\n        'line-number'?: number;\n        'column-number'?: number;\n        'source-file'?: string;\n        'status-code'?: number;\n        'script-sample'?: string;\n    };\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\csp-sri-banking.service.d.ts",
        "start": 58,
        "end": 73,
        "startLoc": {
          "line": 58,
          "column": 2,
          "position": 542
        },
        "endLoc": {
          "line": 73,
          "column": 2,
          "position": 658
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\csp-sri-banking.service.d.ts",
        "start": 43,
        "end": 58,
        "startLoc": {
          "line": 43,
          "column": 11,
          "position": 426
        },
        "endLoc": {
          "line": 58,
          "column": 2,
          "position": 542
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ", {\n    'sri-report'?: {\n        algorithm?: \"sha256\" | \"sha512\" | \"sha384\";\n        referrer?: string;\n        'document-uri'?: string;\n        'blocked-uri'?: string;\n        'violation-type'?: \"integrity-mismatch\" | \"missing-integrity\" | \"invalid-integrity\";\n        'expected-hash'?: string;\n        'actual-hash'?: string;\n    };\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\csp-sri-banking.service.d.ts",
        "start": 110,
        "end": 120,
        "startLoc": {
          "line": 110,
          "column": 2,
          "position": 1054
        },
        "endLoc": {
          "line": 120,
          "column": 2,
          "position": 1142
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\csp-sri-banking.service.d.ts",
        "start": 100,
        "end": 110,
        "startLoc": {
          "line": 100,
          "column": 11,
          "position": 966
        },
        "endLoc": {
          "line": 110,
          "column": 2,
          "position": 1054
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": ";\nexport type CSPViolation = z.infer<typeof CSPViolationSchema>;\nexport type SRIViolation = z.infer<typeof SRIViolationSchema>;\nexport interface BankingCSPConfig {\n    enabled: boolean;\n    reportUri: string;\n    enforceMode: boolean;\n    strictMode: boolean;\n    bankingMode: boolean;\n    allowedDomains: string[];\n    allowedScripts: string[];\n    allowedStyles: string[];\n    allowedImages: string[];\n    allowedFonts: string[];\n    allowedConnections: string[];\n    customDirectives: Record<string, string[]>;\n    reportOnly: boolean;\n    maxReportAge: number;\n    alertThreshold",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\csp-sri-banking.service.d.ts",
        "start": 120,
        "end": 138,
        "startLoc": {
          "line": 120,
          "column": 2,
          "position": 1143
        },
        "endLoc": {
          "line": 138,
          "column": 15,
          "position": 1308
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\csp-sri-banking.service.ts",
        "start": 32,
        "end": 51,
        "startLoc": {
          "line": 32,
          "column": 2,
          "position": 369
        },
        "endLoc": {
          "line": 51,
          "column": 8,
          "position": 535
        }
      }
    },
    {
      "format": "typescript",
      "lines": 33,
      "fragment": "}\nexport interface CSPReport {\n    id: string;\n    timestamp: Date;\n    type: 'csp' | 'sri';\n    violation: CSPViolation | SRIViolation;\n    severity: 'low' | 'medium' | 'high' | 'critical';\n    source: string;\n    userAgent: string;\n    ipAddress: string;\n    organizationId?: string;\n    userId?: string;\n    resolved: boolean;\n    resolution?: string;\n    tags: string[];\n}\nexport interface CSPStats {\n    totalReports: number;\n    reportsByType: Record<string, number>;\n    reportsBySeverity: Record<string, number>;\n    reportsBySource: Record<string, number>;\n    topViolations: Array<{\n        directive: string;\n        count: number;\n        percentage: number;\n    }>;\n    recentTrends: Array<{\n        date: string;\n        count: number;\n    }>;\n    unresolvedCount: number;\n    averageResolutionTime: number;\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\csp-sri-banking.service.d.ts",
        "start": 139,
        "end": 171,
        "startLoc": {
          "line": 139,
          "column": 1,
          "position": 1314
        },
        "endLoc": {
          "line": 171,
          "column": 2,
          "position": 1571
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\csp-sri-banking.service.ts",
        "start": 53,
        "end": 86,
        "startLoc": {
          "line": 53,
          "column": 1,
          "position": 546
        },
        "endLoc": {
          "line": 86,
          "column": 9,
          "position": 805
        }
      }
    },
    {
      "format": "javascript",
      "lines": 24,
      "fragment": "}\n    async updateCostTrends(cost) {\n        const existingTrend = this.costTrends.find(trend => trend.date.toDateString() === cost.timestamp.toDateString() &&\n            trend.service === cost.service &&\n            trend.organizationId === cost.organizationId);\n        if (existingTrend) {\n            existingTrend.amount += cost.amount;\n        }\n        else {\n            const trend = {\n                date: new Date(cost.timestamp.getFullYear(), cost.timestamp.getMonth(), cost.timestamp.getDate()),\n                amount: cost.amount,\n                service: cost.service,\n                category: cost.category,\n                organizationId: cost.organizationId,\n                trend: 'stable',\n                changePercentage: 0,\n                metadata: {}\n            };\n            this.costTrends.push(trend);\n        }\n    }\n    async checkForAnomalies(cost) {\n        const historicalCosts = this.costs",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\cost-tracker.service.js",
        "start": 121,
        "end": 144,
        "startLoc": {
          "line": 121,
          "column": 5,
          "position": 1098
        },
        "endLoc": {
          "line": 144,
          "column": 6,
          "position": 1344
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\finops-consolidated.service.js",
        "start": 397,
        "end": 420,
        "startLoc": {
          "line": 397,
          "column": 5,
          "position": 4403
        },
        "endLoc": {
          "line": 420,
          "column": 12,
          "position": 4649
        }
      }
    },
    {
      "format": "javascript",
      "lines": 34,
      "fragment": ".filter(c => c.service === cost.service &&\n            c.organizationId === cost.organizationId &&\n            c.timestamp < cost.timestamp);\n        if (historicalCosts.length < 7)\n            return;\n        const averageCost = historicalCosts.reduce((sum, c) => sum + c.amount, 0) / historicalCosts.length;\n        const standardDeviation = Math.sqrt(historicalCosts.reduce((sum, c) => sum + Math.pow(c.amount - averageCost, 2), 0) / historicalCosts.length);\n        const threshold = averageCost + (2 * standardDeviation);\n        if (cost.amount > threshold) {\n            const anomaly = {\n                id: `anomaly_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n                type: 'spike',\n                severity: cost.amount > averageCost + (3 * standardDeviation) ? 'critical' : 'high',\n                description: `Cost spike detected for ${cost.service}: ${cost.amount} (avg: ${averageCost.toFixed(2)})`,\n                detectedAt: new Date(),\n                period: {\n                    start: cost.timestamp,\n                    end: cost.timestamp\n                },\n                affectedServices: [cost.service],\n                affectedResources: [cost.resource],\n                impact: {\n                    costIncrease: cost.amount - averageCost,\n                    percentageIncrease: ((cost.amount - averageCost) / averageCost) * 100\n                },\n                status: 'detected',\n                metadata: {\n                    averageCost,\n                    standardDeviation,\n                    threshold\n                }\n            };\n            this.costAnomalies.push(anomaly);\n            structuredLogger",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\cost-tracker.service.js",
        "start": 144,
        "end": 177,
        "startLoc": {
          "line": 144,
          "column": 6,
          "position": 1345
        },
        "endLoc": {
          "line": 177,
          "column": 17,
          "position": 1798
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\finops-consolidated.service.js",
        "start": 420,
        "end": 453,
        "startLoc": {
          "line": 420,
          "column": 12,
          "position": 4650
        },
        "endLoc": {
          "line": 453,
          "column": 7,
          "position": 5103
        }
      }
    },
    {
      "format": "javascript",
      "lines": 31,
      "fragment": ";\n        if (filters) {\n            if (filters.organizationId) {\n                filteredCosts = filteredCosts.filter(c => c.organizationId === filters.organizationId);\n            }\n            if (filters.service) {\n                filteredCosts = filteredCosts.filter(c => c.service === filters.service);\n            }\n            if (filters.category) {\n                filteredCosts = filteredCosts.filter(c => c.category === filters.category);\n            }\n            if (filters.startDate) {\n                filteredCosts = filteredCosts.filter(c => c.timestamp >= filters.startDate);\n            }\n            if (filters.endDate) {\n                filteredCosts = filteredCosts.filter(c => c.timestamp <= filters.endDate);\n            }\n            if (filters.userId) {\n                filteredCosts = filteredCosts.filter(c => c.userId === filters.userId);\n            }\n            if (filters.projectId) {\n                filteredCosts = filteredCosts.filter(c => c.projectId === filters.projectId);\n            }\n            if (filters.departmentId) {\n                filteredCosts = filteredCosts.filter(c => c.departmentId === filters.departmentId);\n            }\n        }\n        return filteredCosts.sort((a, b) => b.timestamp.getTime() - a.timestamp.getTime());\n    }\n    getCostById(costId) {\n        return this.costs.find",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\cost-tracker.service.js",
        "start": 188,
        "end": 218,
        "startLoc": {
          "line": 188,
          "column": 2,
          "position": 1885
        },
        "endLoc": {
          "line": 218,
          "column": 5,
          "position": 2265
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\finops-consolidated.service.js",
        "start": 91,
        "end": 121,
        "startLoc": {
          "line": 91,
          "column": 2,
          "position": 845
        },
        "endLoc": {
          "line": 121,
          "column": 4,
          "position": 1225
        }
      }
    },
    {
      "format": "javascript",
      "lines": 27,
      "fragment": "}\n    getCostAnomalies(organizationId) {\n        let filteredAnomalies = [...this.costAnomalies];\n        if (organizationId) {\n            const orgCosts = this.getCosts({ organizationId });\n            const orgServices = new Set(orgCosts.map(c => c.service));\n            filteredAnomalies = filteredAnomalies.filter(anomaly => anomaly.affectedServices.some(service => orgServices.has(service)));\n        }\n        return filteredAnomalies.sort((a, b) => b.detectedAt.getTime() - a.detectedAt.getTime());\n    }\n    async allocateCost(costId, allocations) {\n        try {\n            const cost = this.getCostById(costId);\n            if (!cost) {\n                throw new Error(`Cost ${costId} not found`);\n            }\n            const totalPercentage = allocations.reduce((sum, alloc) => sum + alloc.percentage, 0);\n            if (totalPercentage !== 100) {\n                throw new Error('Total allocation percentage must be 100%');\n            }\n            const costAllocations = [];\n            for (const allocation of allocations) {\n                const costAllocation = {\n                    id: `allocation_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n                    costId,\n                    organizationId: allocation.organizationId,\n                    departmentId: allocation.departmentId,",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\cost-tracker.service.js",
        "start": 267,
        "end": 293,
        "startLoc": {
          "line": 267,
          "column": 5,
          "position": 2832
        },
        "endLoc": {
          "line": 293,
          "column": 2,
          "position": 3198
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\finops-consolidated.service.js",
        "start": 460,
        "end": 486,
        "startLoc": {
          "line": 460,
          "column": 5,
          "position": 5151
        },
        "endLoc": {
          "line": 486,
          "column": 3,
          "position": 5518
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ",\n                    percentage: allocation.percentage,\n                    amount: (cost.amount * allocation.percentage) / 100,\n                    method: allocation.method,\n                    tags: cost.tags,\n                    createdAt: new Date(),\n                    createdBy: 'system',\n                    metadata: {}\n                };\n                costAllocations.push(costAllocation);\n                this.costAllocations.push(costAllocation);\n            }\n            structuredLogger",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\cost-tracker.service.js",
        "start": 295,
        "end": 307,
        "startLoc": {
          "line": 295,
          "column": 7,
          "position": 3216
        },
        "endLoc": {
          "line": 307,
          "column": 17,
          "position": 3319
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\finops-consolidated.service.js",
        "start": 488,
        "end": 500,
        "startLoc": {
          "line": 488,
          "column": 10,
          "position": 5547
        },
        "endLoc": {
          "line": 500,
          "column": 7,
          "position": 5650
        }
      }
    },
    {
      "format": "javascript",
      "lines": 21,
      "fragment": ",\n                costId\n            });\n            throw error;\n        }\n    }\n    getCostAllocations(costId) {\n        if (costId) {\n            return this.costAllocations.filter(a => a.costId === costId);\n        }\n        return [...this.costAllocations];\n    }\n    async recordResourceUtilization(utilization) {\n        try {\n            const resourceUtil = {\n                id: `util_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n                timestamp: new Date(),\n                ...utilization\n            };\n            this.resourceUtilizations.push(resourceUtil);\n            structuredLogger",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\cost-tracker.service.js",
        "start": 317,
        "end": 337,
        "startLoc": {
          "line": 317,
          "column": 18,
          "position": 3397
        },
        "endLoc": {
          "line": 337,
          "column": 17,
          "position": 3567
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\finops-consolidated.service.js",
        "start": 508,
        "end": 528,
        "startLoc": {
          "line": 508,
          "column": 8,
          "position": 5711
        },
        "endLoc": {
          "line": 528,
          "column": 7,
          "position": 5881
        }
      }
    },
    {
      "format": "javascript",
      "lines": 26,
      "fragment": "});\n            throw error;\n        }\n    }\n    getResourceUtilizations(filters) {\n        let filteredUtilizations = [...this.resourceUtilizations];\n        if (filters) {\n            if (filters.organizationId) {\n                filteredUtilizations = filteredUtilizations.filter(u => u.organizationId === filters.organizationId);\n            }\n            if (filters.service) {\n                filteredUtilizations = filteredUtilizations.filter(u => u.service === filters.service);\n            }\n            if (filters.resourceType) {\n                filteredUtilizations = filteredUtilizations.filter(u => u.resourceType === filters.resourceType);\n            }\n            if (filters.startDate) {\n                filteredUtilizations = filteredUtilizations.filter(u => u.timestamp >= filters.startDate);\n            }\n            if (filters.endDate) {\n                filteredUtilizations = filteredUtilizations.filter(u => u.timestamp <= filters.endDate);\n            }\n        }\n        return filteredUtilizations.sort((a, b) => b.timestamp.getTime() - a.timestamp.getTime());\n    }\n    getCostStats",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\cost-tracker.service.js",
        "start": 349,
        "end": 374,
        "startLoc": {
          "line": 349,
          "column": 13,
          "position": 3656
        },
        "endLoc": {
          "line": 374,
          "column": 13,
          "position": 3942
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\finops-consolidated.service.js",
        "start": 538,
        "end": 563,
        "startLoc": {
          "line": 538,
          "column": 13,
          "position": 5958
        },
        "endLoc": {
          "line": 563,
          "column": 6,
          "position": 6244
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ";\n    getCosts(filters?: {\n        organizationId?: string;\n        service?: string;\n        category?: string;\n        startDate?: Date;\n        endDate?: Date;\n        userId?: string;\n        projectId?: string;\n        departmentId?: string;\n    }): Cost[];\n    getCostById(costId: string): Cost | null;\n    getCostTrends",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\cost-tracker.service.d.ts",
        "start": 13,
        "end": 25,
        "startLoc": {
          "line": 13,
          "column": 18,
          "position": 119
        },
        "endLoc": {
          "line": 25,
          "column": 14,
          "position": 222
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\finops-consolidated.service.d.ts",
        "start": 46,
        "end": 58,
        "startLoc": {
          "line": 46,
          "column": 7,
          "position": 398
        },
        "endLoc": {
          "line": 58,
          "column": 13,
          "position": 501
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ";\n    getCostAnomalies(organizationId?: string): CostAnomaly[];\n    allocateCost(costId: string, allocations: Array<{\n        organizationId: string;\n        departmentId?: string;\n        projectId?: string;\n        userId?: string;\n        percentage: number;\n        method: 'equal' | 'usage_based' | 'custom' | 'tag_based';\n    }>): Promise<CostAllocation[]>;\n    getCostAllocations(costId?: string): CostAllocation[];\n    recordResourceUtilization(utilization: Omit<ResourceUtilization, 'id' | 'timestamp'>): Promise<ResourceUtilization>;\n    getResourceUtilizations(filters?: {\n        organizationId?: string;\n        service?: string;\n        resourceType?: string;\n        startDate?: Date;\n        endDate?: Date;\n    }): ResourceUtilization[];\n    getCostStats",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\cost-tracker.service.d.ts",
        "start": 36,
        "end": 55,
        "startLoc": {
          "line": 36,
          "column": 7,
          "position": 375
        },
        "endLoc": {
          "line": 55,
          "column": 13,
          "position": 582
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\finops-consolidated.service.d.ts",
        "start": 79,
        "end": 98,
        "startLoc": {
          "line": 79,
          "column": 18,
          "position": 743
        },
        "endLoc": {
          "line": 98,
          "column": 36,
          "position": 950
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "getOptimizationStats(): {\n        totalRecommendations: number;\n        pendingRecommendations: number;\n        approvedRecommendations: number;\n        implementedRecommendations: number;\n        rejectedRecommendations: number;\n        totalPotentialSavings: number;\n        totalActualSavings: number;\n        totalOptimizations: number;\n        completedOptimizations: number;\n        runningOptimizations: number;\n        averageSavings: number;\n    };",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\cost-optimizer.service.d.ts",
        "start": 31,
        "end": 43,
        "startLoc": {
          "line": 31,
          "column": 5,
          "position": 383
        },
        "endLoc": {
          "line": 43,
          "column": 2,
          "position": 469
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\cost-optimizer.service.ts",
        "start": 577,
        "end": 589,
        "startLoc": {
          "line": 577,
          "column": 3,
          "position": 5147
        },
        "endLoc": {
          "line": 589,
          "column": 2,
          "position": 5234
        }
      }
    },
    {
      "format": "typescript",
      "lines": 58,
      "fragment": "export interface Contact {\n    id: string;\n    firstName: string;\n    lastName: string;\n    email?: string;\n    phone?: string;\n    phoneE164?: string;\n    company?: string;\n    organizationId: string;\n    createdAt: string;\n    updatedAt: string;\n}\nexport interface DuplicateMatch {\n    contactId: string;\n    duplicateId: string;\n    confidence: number;\n    matchType: 'exact' | 'email' | 'phone' | 'similarity';\n    similarity: number;\n    reasons: string[];\n    createdAt: string;\n}\nexport interface MergeOperation {\n    id: string;\n    primaryContactId: string;\n    duplicateContactIds: string[];\n    status: 'pending' | 'approved' | 'completed' | 'reverted';\n    approvedBy?: string;\n    createdAt: string;\n}\nexport interface DedupeConfig {\n    enabled: boolean;\n    autoMerge: boolean;\n    confidenceThreshold: number;\n    similarityThreshold: number;\n    fuzzyMatching: boolean;\n    machineLearning: boolean;\n    batchSize: number;\n    maxProcessingTime: number;\n    notificationChannels: string[];\n}\nexport interface DedupeStats {\n    totalContacts: number;\n    duplicatesFound: number;\n    duplicatesResolved: number;\n    mergeOperations: number;\n    averageConfidence: number;\n    lastRun: string;\n    processingTime: number;\n    fuzzyMatches: number;\n    mlMatches: number;\n    accuracy: number;\n    performance: {\n        contactsPerSecond: number;\n        memoryUsage: number;\n        cpuUsage: number;\n    };\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\contacts-dedupe.service.d.ts",
        "start": 1,
        "end": 58,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 58,
          "column": 8,
          "position": 412
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\contacts-dedupe.service.ts",
        "start": 9,
        "end": 71,
        "startLoc": {
          "line": 9,
          "column": 1,
          "position": 17
        },
        "endLoc": {
          "line": 71,
          "column": 6,
          "position": 434
        }
      }
    },
    {
      "format": "typescript",
      "lines": 56,
      "fragment": "loadBalancingStrategy: 'round-robin' | 'least-connections' | 'weighted';\n}\nexport interface ConnectionMetrics {\n    total: number;\n    active: number;\n    idle: number;\n    waiting: number;\n    created: number;\n    destroyed: number;\n    failed: number;\n    avgAcquireTime: number;\n    avgResponseTime: number;\n    healthCheckPassed: number;\n    healthCheckFailed: number;\n    circuitBreakerOpen: number;\n    loadBalanced: number;\n}\nexport interface Connection {\n    id: string;\n    type: 'postgres' | 'redis' | 'http' | 'external';\n    host: string;\n    port: number;\n    database?: string;\n    status: 'idle' | 'active' | 'failed' | 'destroyed';\n    createdAt: number;\n    lastUsed: number;\n    responseTime: number;\n    errorCount: number;\n    healthStatus: 'healthy' | 'unhealthy' | 'unknown';\n    metadata?: Record<string, any>;\n}\nexport interface PoolStats {\n    name: string;\n    type: string;\n    config: PoolConfig;\n    metrics: ConnectionMetrics;\n    connections: Connection[];\n    healthStatus: 'healthy' | 'degraded' | 'critical';\n    lastHealthCheck: number;\n    circuitBreakerStatus: 'closed' | 'open' | 'half-open';\n}\nexport interface HealthCheckResult {\n    connectionId: string;\n    success: boolean;\n    responseTime: number;\n    error?: string;\n    timestamp: number;\n}\nexport interface LoadBalanceResult {\n    connectionId: string;\n    strategy: string;\n    weight: number;\n    connectionsCount: number;\n    timestamp: number;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\connection-pool.service.d.ts",
        "start": 13,
        "end": 68,
        "startLoc": {
          "line": 13,
          "column": 5,
          "position": 86
        },
        "endLoc": {
          "line": 68,
          "column": 8,
          "position": 514
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\connection-pool.service.ts",
        "start": 30,
        "end": 91,
        "startLoc": {
          "line": 30,
          "column": 3,
          "position": 128
        },
        "endLoc": {
          "line": 91,
          "column": 6,
          "position": 562
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ", {\n    name?: string;\n    environment?: \"development\" | \"production\" | \"staging\";\n    id?: string;\n    createdAt?: Date;\n    updatedAt?: Date;\n    description?: string;\n    enabled?: boolean;\n    conditions?: {\n        value?: string | number | boolean;\n        field?: string;\n        operator?: \"greater_than\" | \"less_than\" | \"equals\" | \"not_equals\" | \"contains\" | \"starts_with\" | \"ends_with\";\n    }[];\n    rolloutPercentage?: number;\n    targetUsers?: string[];\n    targetOrganizations?: string[];\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\configuration.service.d.ts",
        "start": 42,
        "end": 58,
        "startLoc": {
          "line": 42,
          "column": 2,
          "position": 579
        },
        "endLoc": {
          "line": 58,
          "column": 2,
          "position": 745
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\configuration.service.d.ts",
        "start": 26,
        "end": 42,
        "startLoc": {
          "line": 26,
          "column": 11,
          "position": 413
        },
        "endLoc": {
          "line": 42,
          "column": 2,
          "position": 579
        }
      }
    },
    {
      "format": "typescript",
      "lines": 62,
      "fragment": "export interface FeatureFlag {\n    id: string;\n    name: string;\n    description: string;\n    enabled: boolean;\n    environment: string;\n    rolloutPercentage: number;\n    targetUsers: string[];\n    targetOrganizations: string[];\n    conditions: FeatureFlagCondition[];\n    createdAt: Date;\n    updatedAt: Date;\n    expiresAt?: Date;\n}\nexport interface FeatureFlagCondition {\n    type: 'user_id' | 'organization_id' | 'user_role' | 'time_window' | 'custom';\n    operator: 'equals' | 'contains' | 'greater_than' | 'less_than' | 'in' | 'not_in';\n    value: any;\n    field?: string;\n}\nexport interface EnvironmentConfig {\n    name: string;\n    description: string;\n    variables: Record<string, any>;\n    secrets: Record<string, string>;\n    featureFlags: string[];\n    overrides: Record<string, any>;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface ConfigurationManager {\n    getFeatureFlag(flagId: string): FeatureFlag | undefined;\n    isFeatureEnabled(flagId: string, context?: FeatureFlagContext): boolean;\n    getAllFeatureFlags(): FeatureFlag[];\n    getFeatureFlagsByEnvironment(environment: string): FeatureFlag[];\n    createFeatureFlag(flag: Omit<FeatureFlag, 'id' | 'createdAt' | 'updatedAt'>): string;\n    updateFeatureFlag(flagId: string, updates: Partial<FeatureFlag>): boolean;\n    deleteFeatureFlag(flagId: string): boolean;\n    getEnvironmentConfig(environment: string): EnvironmentConfig | undefined;\n    setEnvironmentConfig(environment: string, config: Partial<EnvironmentConfig>): boolean;\n    getConfigValue(key: string, environment?: string, defaultValue?: any): any;\n    setConfigValue(key: string, value: any, environment?: string): boolean;\n    getSecret(key: string, environment?: string): string | undefined;\n    setSecret(key: string, value: string, environment?: string): boolean;\n    validateConfiguration(): boolean;\n    reloadConfiguration(): void;\n}\nexport interface FeatureFlagContext {\n    userId?: string;\n    organizationId?: string;\n    userRole?: string;\n    userEmail?: string;\n    customAttributes?: Record<string, any>;\n}\nexport interface ConfigurationStats {\n    totalFeatureFlags: number;\n    enabledFeatureFlags: number;\n    environments: string[];\n    totalConfigValues: number;\n    totalSecrets: number;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\configuration.d.ts",
        "start": 1,
        "end": 62,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 62,
          "column": 8,
          "position": 662
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\configuration.ts",
        "start": 3,
        "end": 70,
        "startLoc": {
          "line": 3,
          "column": 1,
          "position": 14
        },
        "endLoc": {
          "line": 70,
          "column": 6,
          "position": 682
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "getFeatureFlag(flagId: string): FeatureFlag | undefined;\n    isFeatureEnabled(flagId: string, context?: FeatureFlagContext): boolean;\n    getAllFeatureFlags(): FeatureFlag[];\n    getFeatureFlagsByEnvironment(environment: string): FeatureFlag[];\n    createFeatureFlag(flag: Omit<FeatureFlag, 'id' | 'createdAt' | 'updatedAt'>): string;\n    updateFeatureFlag(flagId: string, updates: Partial<FeatureFlag>): boolean;\n    deleteFeatureFlag(flagId: string): boolean;\n    getEnvironmentConfig(environment: string): EnvironmentConfig | undefined;\n    setEnvironmentConfig(environment: string, config: Partial<EnvironmentConfig>): boolean;\n    getConfigValue(key: string, environment?: string, defaultValue?: any): any;\n    setConfigValue(key: string, value: any, environment?: string): boolean;\n    getSecret(key: string, environment?: string): string | undefined;\n    setSecret(key: string, value: string, environment?: string): boolean;\n    validateConfiguration(): boolean;\n    reloadConfiguration(): void;\n    getStats",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\configuration.d.ts",
        "start": 68,
        "end": 83,
        "startLoc": {
          "line": 68,
          "column": 5,
          "position": 705
        },
        "endLoc": {
          "line": 83,
          "column": 9,
          "position": 990
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\configuration.ts",
        "start": 37,
        "end": 52,
        "startLoc": {
          "line": 37,
          "column": 3,
          "position": 288
        },
        "endLoc": {
          "line": 52,
          "column": 2,
          "position": 572
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "getAuditLogs(organizationId: string, filters?: {\n        eventType?: string;\n        userId?: string;\n        resource?: string;\n        action?: string;\n        result?: string;\n        severity?: string;\n        category?: string;\n        dateFrom?: Date;\n        dateTo?: Date;\n    }): Promise<AuditLog[]>;",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\comprehensive-audit.service.d.ts",
        "start": 10,
        "end": 20,
        "startLoc": {
          "line": 10,
          "column": 5,
          "position": 123
        },
        "endLoc": {
          "line": 20,
          "column": 2,
          "position": 220
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\comprehensive-audit.service.ts",
        "start": 82,
        "end": 92,
        "startLoc": {
          "line": 82,
          "column": 2,
          "position": 577
        },
        "endLoc": {
          "line": 92,
          "column": 2,
          "position": 675
        }
      }
    },
    {
      "format": "javascript",
      "lines": 22,
      "fragment": "}\n    async createComplianceRequirement(request, organizationId) {\n        const requirement = {\n            id: this.generateId(),\n            standard: request.standard,\n            requirement: request.requirement,\n            description: request.description,\n            category: request.category,\n            subcategory: request.subcategory,\n            priority: request.priority,\n            status: 'not_assessed',\n            evidence: [],\n            controls: [],\n            lastAssessed: new Date(),\n            nextAssessment: this.calculateNextAssessment(request.standard),\n            organizationId,\n            tags: request.tags,\n            metadata: request.metadata,\n            createdAt: new Date(),\n            updatedAt: new Date()\n        };\n        this.requirements",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\compliance-management.service.js",
        "start": 20,
        "end": 41,
        "startLoc": {
          "line": 20,
          "column": 5,
          "position": 149
        },
        "endLoc": {
          "line": 41,
          "column": 13,
          "position": 336
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\security-consolidated.service.js",
        "start": 362,
        "end": 383,
        "startLoc": {
          "line": 362,
          "column": 5,
          "position": 3484
        },
        "endLoc": {
          "line": 383,
          "column": 23,
          "position": 3671
        }
      }
    },
    {
      "format": "javascript",
      "lines": 19,
      "fragment": ".values())\n            .filter(r => r.organizationId === organizationId);\n        if (filters) {\n            if (filters.standard) {\n                requirements = requirements.filter(r => r.standard === filters.standard);\n            }\n            if (filters.status) {\n                requirements = requirements.filter(r => r.status === filters.status);\n            }\n            if (filters.category) {\n                requirements = requirements.filter(r => r.category === filters.category);\n            }\n            if (filters.priority) {\n                requirements = requirements.filter(r => r.priority === filters.priority);\n            }\n        }\n        return requirements.sort((a, b) => b.createdAt.getTime() - a.createdAt.getTime());\n    }\n    async updateComplianceRequirement",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\compliance-management.service.js",
        "start": 51,
        "end": 69,
        "startLoc": {
          "line": 51,
          "column": 13,
          "position": 442
        },
        "endLoc": {
          "line": 69,
          "column": 28,
          "position": 676
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\security-consolidated.service.js",
        "start": 399,
        "end": 417,
        "startLoc": {
          "line": 399,
          "column": 23,
          "position": 3820
        },
        "endLoc": {
          "line": 417,
          "column": 20,
          "position": 4054
        }
      }
    },
    {
      "format": "javascript",
      "lines": 26,
      "fragment": "}\n    calculateNextAssessment(standard) {\n        const now = new Date();\n        const nextAssessment = new Date(now);\n        switch (standard) {\n            case 'GDPR':\n                nextAssessment.setMonth(nextAssessment.getMonth() + 6);\n                break;\n            case 'SOX':\n                nextAssessment.setMonth(nextAssessment.getMonth() + 3);\n                break;\n            case 'HIPAA':\n                nextAssessment.setMonth(nextAssessment.getMonth() + 12);\n                break;\n            case 'PCI-DSS':\n                nextAssessment.setMonth(nextAssessment.getMonth() + 3);\n                break;\n            case 'ISO27001':\n                nextAssessment.setMonth(nextAssessment.getMonth() + 12);\n                break;\n            default:\n                nextAssessment.setMonth(nextAssessment.getMonth() + 6);\n        }\n        return nextAssessment;\n    }\n    async addComplianceEvidence",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\compliance-management.service.js",
        "start": 83,
        "end": 108,
        "startLoc": {
          "line": 83,
          "column": 5,
          "position": 797
        },
        "endLoc": {
          "line": 108,
          "column": 22,
          "position": 1016
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\security-consolidated.service.js",
        "start": 664,
        "end": 689,
        "startLoc": {
          "line": 664,
          "column": 5,
          "position": 6492
        },
        "endLoc": {
          "line": 689,
          "column": 22,
          "position": 6711
        }
      }
    },
    {
      "format": "javascript",
      "lines": 24,
      "fragment": ";\n    }\n    async performAutoAssessment(requirement) {\n        let status = 'not_assessed';\n        if (requirement.evidence.length > 0 && requirement.controls.length > 0) {\n            const implementedControls = requirement.controls.filter(c => c.status === 'implemented').length;\n            const totalControls = requirement.controls.length;\n            if (implementedControls === totalControls) {\n                status = 'compliant';\n            }\n            else if (implementedControls > totalControls * 0.5) {\n                status = 'partially_compliant';\n            }\n            else {\n                status = 'non_compliant';\n            }\n        }\n        const updatedRequirement = {\n            ...requirement,\n            status,\n            lastAssessed: new Date(),\n            updatedAt: new Date()\n        };\n        this.requirements",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\compliance-management.service.js",
        "start": 444,
        "end": 467,
        "startLoc": {
          "line": 444,
          "column": 2,
          "position": 4537
        },
        "endLoc": {
          "line": 467,
          "column": 13,
          "position": 4753
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\security-consolidated.service.js",
        "start": 687,
        "end": 710,
        "startLoc": {
          "line": 687,
          "column": 15,
          "position": 6703
        },
        "endLoc": {
          "line": 710,
          "column": 23,
          "position": 6919
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": "getComplianceStatus(organizationId: string, standard?: string): Promise<{\n        standard: string;\n        overallScore: number;\n        complianceRate: number;\n        requirements: {\n            total: number;\n            compliant: number;\n            partiallyCompliant: number;\n            nonCompliant: number;\n            notAssessed: number;\n        };\n        findings: {\n            critical: number;\n            high: number;\n            medium: number;\n            low: number;\n        };\n        lastAssessment?: Date;\n        nextAssessment?: Date;\n    }>;",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\compliance-management.service.d.ts",
        "start": 37,
        "end": 56,
        "startLoc": {
          "line": 37,
          "column": 5,
          "position": 549
        },
        "endLoc": {
          "line": 56,
          "column": 2,
          "position": 692
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\compliance-management.service.ts",
        "start": 462,
        "end": 481,
        "startLoc": {
          "line": 462,
          "column": 2,
          "position": 4116
        },
        "endLoc": {
          "line": 481,
          "column": 2,
          "position": 4260
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": "export interface CompanyTaxonomy {\n    id: string;\n    name: string;\n    description: string;\n    metadata: {\n        industry?: string;\n        tags: string[];\n        keywords: string[];\n    };\n    isActive: boolean;\n    createdAt: string;\n}\nexport interface CompanyView {\n    id: string;\n    name: string;\n    description: string;\n    organizationId: string;\n    filters: any[];\n    sorting: any;\n    columns: any[];\n    isDefault: boolean;\n    createdAt: string;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\companies-taxonomy.service.d.ts",
        "start": 1,
        "end": 24,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 24,
          "column": 8,
          "position": 160
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\companies-taxonomy.service.ts",
        "start": 7,
        "end": 32,
        "startLoc": {
          "line": 7,
          "column": 1,
          "position": 17
        },
        "endLoc": {
          "line": 32,
          "column": 6,
          "position": 179
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ";\nexport interface CircuitBreakerConfig {\n    failureThreshold: number;\n    recoveryTimeout: number;\n    monitoringPeriod: number;\n    halfOpenMaxCalls: number;\n}\nexport interface CircuitBreakerState {\n    state: 'CLOSED' | 'OPEN' | 'HALF_OPEN';\n    failureCount: number;\n    lastFailureTime: number;\n    nextAttemptTime: number;\n    successCount: number;\n    totalCalls: number;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\circuit-breaker.service.d.ts",
        "start": 1,
        "end": 16,
        "startLoc": {
          "line": 1,
          "column": 9,
          "position": 11
        },
        "endLoc": {
          "line": 16,
          "column": 8,
          "position": 113
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\circuit-breaker.service.ts",
        "start": 2,
        "end": 20,
        "startLoc": {
          "line": 2,
          "column": 40,
          "position": 24
        },
        "endLoc": {
          "line": 20,
          "column": 6,
          "position": 129
        }
      }
    },
    {
      "format": "javascript",
      "lines": 26,
      "fragment": "),\n    context: z.record(z.any()).optional(),\n    metadata: z.record(z.any()).optional(),\n    userId: z.string().optional(),\n    organizationId: z.string().optional(),\n    requestId: z.string().optional(),\n    sessionId: z.string().optional(),\n    correlationId: z.string().optional(),\n    tags: z.array(z.string()).optional(),\n    source: z.string().optional(),\n    hostname: z.string().optional(),\n    pid: z.number().optional(),\n    version: z.string().optional()\n});\nconst LogQuerySchema = z.object({\n    level: z.enum(['DEBUG', 'INFO', 'WARN', 'ERROR', 'FATAL']).optional(),\n    service: z.string().optional(),\n    environment: z.string().optional(),\n    userId: z.string().optional(),\n    organizationId: z.string().optional(),\n    requestId: z.string().optional(),\n    sessionId: z.string().optional(),\n    correlationId: z.string().optional(),\n    tags: z.array(z.string()).optional(),\n    source: z.string().optional(),\n    startTime: z.coerce",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\centralized-logging.service.js",
        "start": 28,
        "end": 53,
        "startLoc": {
          "line": 28,
          "column": 2,
          "position": 385
        },
        "endLoc": {
          "line": 53,
          "column": 7,
          "position": 774
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\centralized-logging.js",
        "start": 27,
        "end": 52,
        "startLoc": {
          "line": 27,
          "column": 2,
          "position": 272
        },
        "endLoc": {
          "line": 52,
          "column": 7,
          "position": 661
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "().optional(),\n    message: z.string().optional(),\n    limit: z.number().min(1).max(10000).optional(),\n    offset: z.number().min(0).optional(),\n    sort: z.enum(['timestamp', 'level', 'service']).optional(),\n    order: z.enum(['asc', 'desc']).optional()\n});\nconst LogAggregationSchema = z.object({\n    groupBy: z.array(z.enum(['level', 'service', 'environment', 'userId', 'organizationId', 'source', 'tags'])),\n    timeRange: z.object({\n        start: z.coerce",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\centralized-logging.service.js",
        "start": 54,
        "end": 64,
        "startLoc": {
          "line": 54,
          "column": 5,
          "position": 794
        },
        "endLoc": {
          "line": 64,
          "column": 7,
          "position": 975
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\centralized-logging.js",
        "start": 53,
        "end": 63,
        "startLoc": {
          "line": 53,
          "column": 7,
          "position": 677
        },
        "endLoc": {
          "line": 63,
          "column": 7,
          "position": 858
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ",\n                    properties: {\n                        service: logEntry.service,\n                        environment: logEntry.environment,\n                        userId: logEntry.userId,\n                        organizationId: logEntry.organizationId,\n                        requestId: logEntry.requestId,\n                        correlationId: logEntry.correlationId,\n                        ...logEntry.context,\n                        ...logEntry.metadata\n                    }\n                });\n            }\n        }",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\centralized-logging.service.js",
        "start": 442,
        "end": 455,
        "startLoc": {
          "line": 442,
          "column": 6,
          "position": 5212
        },
        "endLoc": {
          "line": 455,
          "column": 2,
          "position": 5299
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\centralized-logging.service.js",
        "start": 426,
        "end": 439,
        "startLoc": {
          "line": 426,
          "column": 2,
          "position": 5098
        },
        "endLoc": {
          "line": 439,
          "column": 5,
          "position": 5185
        }
      }
    },
    {
      "format": "javascript",
      "lines": 19,
      "fragment": "{\n                '@timestamp': logEntry.timestamp.toISOString(),\n                level: logEntry.level,\n                message: logEntry.message,\n                service: logEntry.service,\n                environment: logEntry.environment,\n                context: logEntry.context,\n                metadata: logEntry.metadata,\n                userId: logEntry.userId,\n                organizationId: logEntry.organizationId,\n                requestId: logEntry.requestId,\n                sessionId: logEntry.sessionId,\n                correlationId: logEntry.correlationId,\n                tags: logEntry.tags,\n                source: logEntry.source,\n                hostname: logEntry.hostname,\n                pid: logEntry.pid,\n                version: logEntry.version\n            })",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\centralized-logging.service.js",
        "start": 494,
        "end": 512,
        "startLoc": {
          "line": 494,
          "column": 2,
          "position": 5695
        },
        "endLoc": {
          "line": 512,
          "column": 2,
          "position": 5855
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\centralized-logging.service.js",
        "start": 464,
        "end": 483,
        "startLoc": {
          "line": 464,
          "column": 2,
          "position": 5393
        },
        "endLoc": {
          "line": 483,
          "column": 2,
          "position": 5555
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ".reduce((acc, log) => {\n            const existing = acc.find(item => item.message === log.message);\n            if (existing) {\n                existing.count++;\n            }\n            else {\n                acc.push({ message: log.message, count: 1 });\n            }\n            return acc;\n        }, [])\n            .sort((a, b) => b.count - a.count)\n            .slice(0, 10);\n        const serviceBreakdown",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\centralized-logging.service.js",
        "start": 605,
        "end": 617,
        "startLoc": {
          "line": 605,
          "column": 13,
          "position": 7115
        },
        "endLoc": {
          "line": 617,
          "column": 17,
          "position": 7259
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\centralized-logging.service.js",
        "start": 561,
        "end": 573,
        "startLoc": {
          "line": 561,
          "column": 10,
          "position": 6499
        },
        "endLoc": {
          "line": 573,
          "column": 10,
          "position": 6643
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ", {\n    message?: string;\n    userId?: string;\n    requestId?: string;\n    sessionId?: string;\n    organizationId?: string;\n    level?: \"DEBUG\" | \"INFO\" | \"WARN\" | \"ERROR\" | \"FATAL\";\n    service?: string;\n    context?: Record<string, any>;\n    timestamp?: Date;\n    version?: string;\n    metadata?: Record<string, any>;\n    environment?: string;\n    id?: string;\n    source?: string;\n    correlationId?: string;\n    tags?: string[];\n    hostname?: string;\n    pid?: number;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\centralized-logging.service.d.ts",
        "start": 40,
        "end": 59,
        "startLoc": {
          "line": 40,
          "column": 2,
          "position": 478
        },
        "endLoc": {
          "line": 59,
          "column": 2,
          "position": 657
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\centralized-logging.service.d.ts",
        "start": 21,
        "end": 40,
        "startLoc": {
          "line": 21,
          "column": 11,
          "position": 299
        },
        "endLoc": {
          "line": 40,
          "column": 2,
          "position": 478
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": ", {\n    message?: string;\n    sort?: \"level\" | \"service\" | \"timestamp\";\n    userId?: string;\n    requestId?: string;\n    sessionId?: string;\n    organizationId?: string;\n    level?: \"DEBUG\" | \"INFO\" | \"WARN\" | \"ERROR\" | \"FATAL\";\n    service?: string;\n    limit?: number;\n    order?: \"asc\" | \"desc\";\n    environment?: string;\n    source?: string;\n    correlationId?: string;\n    tags?: string[];\n    startTime?: Date;\n    endTime?: Date;\n    offset?: number;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\centralized-logging.service.d.ts",
        "start": 96,
        "end": 114,
        "startLoc": {
          "line": 96,
          "column": 2,
          "position": 1131
        },
        "endLoc": {
          "line": 114,
          "column": 2,
          "position": 1302
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\centralized-logging.service.d.ts",
        "start": 78,
        "end": 96,
        "startLoc": {
          "line": 78,
          "column": 11,
          "position": 960
        },
        "endLoc": {
          "line": 96,
          "column": 2,
          "position": 1131
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ": z.ZodObject<{\n        start: z.ZodDate;\n        end: z.ZodDate;\n    }, \"strip\", z.ZodTypeAny, {\n        end?: Date;\n        start?: Date;\n    }, {\n        end?: Date;\n        start?: Date;\n    }>;\n    interval",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\centralized-logging.service.d.ts",
        "start": 117,
        "end": 127,
        "startLoc": {
          "line": 117,
          "column": 10,
          "position": 1360
        },
        "endLoc": {
          "line": 127,
          "column": 9,
          "position": 1444
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\services\\ai-performance-optimization.service.d.ts",
        "start": 144,
        "end": 154,
        "startLoc": {
          "line": 144,
          "column": 7,
          "position": 1681
        },
        "endLoc": {
          "line": 154,
          "column": 8,
          "position": 1765
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", {\n    level?: \"DEBUG\" | \"INFO\" | \"WARN\" | \"ERROR\" | \"FATAL\";\n    service?: string;\n    name?: string;\n    environment?: string;\n    id?: string;\n    pattern?: string;\n    description?: string;\n    actions?: {\n        type?: \"EMAIL\" | \"SLACK\" | \"WEBHOOK\" | \"SMS\";\n        config?: Record<string, any>;\n    }[];\n    threshold?: number;\n    enabled?: boolean;\n    window?: number;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\centralized-logging.service.d.ts",
        "start": 182,
        "end": 197,
        "startLoc": {
          "line": 182,
          "column": 2,
          "position": 2175
        },
        "endLoc": {
          "line": 197,
          "column": 2,
          "position": 2323
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\centralized-logging.service.d.ts",
        "start": 167,
        "end": 182,
        "startLoc": {
          "line": 167,
          "column": 11,
          "position": 2027
        },
        "endLoc": {
          "line": 182,
          "column": 2,
          "position": 2175
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", {\n    level?: \"DEBUG\" | \"INFO\" | \"WARN\" | \"ERROR\" | \"FATAL\";\n    service?: string;\n    name?: string;\n    environment?: string;\n    id?: string;\n    description?: string;\n    enabled?: boolean;\n    retentionDays?: number;\n    compressionEnabled?: boolean;\n    archiveEnabled?: boolean;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\centralized-logging.service.d.ts",
        "start": 220,
        "end": 231,
        "startLoc": {
          "line": 220,
          "column": 2,
          "position": 2580
        },
        "endLoc": {
          "line": 231,
          "column": 2,
          "position": 2681
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\centralized-logging.service.d.ts",
        "start": 209,
        "end": 220,
        "startLoc": {
          "line": 209,
          "column": 11,
          "position": 2479
        },
        "endLoc": {
          "line": 220,
          "column": 2,
          "position": 2580
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "export type LogEntry = z.infer<typeof LogEntrySchema>;\nexport type LogQuery = z.infer<typeof LogQuerySchema>;\nexport type LogAggregation = z.infer<typeof LogAggregationSchema>;\nexport type LogAlertRule = z.infer<typeof LogAlertRuleSchema>;\nexport type LogRetentionPolicy = z.infer<typeof LogRetentionPolicySchema>;\nexport interface CentralizedLoggingConfig {\n    elasticsearchEnabled: boolean;\n    applicationInsightsEnabled: boolean;\n    fileLoggingEnabled: boolean;\n    consoleLoggingEnabled: boolean;\n    logLevel: string;\n    maxLogSize: number;\n    maxLogFiles",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\centralized-logging.service.d.ts",
        "start": 232,
        "end": 244,
        "startLoc": {
          "line": 232,
          "column": 1,
          "position": 2684
        },
        "endLoc": {
          "line": 244,
          "column": 12,
          "position": 2825
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\centralized-logging.service.ts",
        "start": 113,
        "end": 125,
        "startLoc": {
          "line": 113,
          "column": 1,
          "position": 1490
        },
        "endLoc": {
          "line": 125,
          "column": 9,
          "position": 1631
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "}\nexport interface LogStatistics {\n    totalLogs: number;\n    logsByLevel: Record<string, number>;\n    logsByService: Record<string, number>;\n    logsByEnvironment: Record<string, number>;\n    averageLogSize: number;\n    errorRate: number;\n    topErrors: Array<{\n        message: string;\n        count: number;",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\centralized-logging.service.d.ts",
        "start": 252,
        "end": 262,
        "startLoc": {
          "line": 252,
          "column": 1,
          "position": 2880
        },
        "endLoc": {
          "line": 262,
          "column": 2,
          "position": 2970
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\centralized-logging.service.ts",
        "start": 134,
        "end": 143,
        "startLoc": {
          "line": 134,
          "column": 1,
          "position": 1691
        },
        "endLoc": {
          "line": 143,
          "column": 2,
          "position": 1781
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "}\nexport interface CacheMetrics {\n    hits: number;\n    misses: number;\n    sets: number;\n    deletes: number;\n    size: number;\n    hitRate: number;\n    memoryUsage: number;\n}\nexport interface CacheEntry<T = any> {\n    value: T;\n    expiresAt: number;\n    createdAt: number;\n    accessCount: number;\n    lastAccessed: number;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\cache.service.d.ts",
        "start": 6,
        "end": 23,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 36
        },
        "endLoc": {
          "line": 23,
          "column": 8,
          "position": 151
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\cache.service.ts",
        "start": 12,
        "end": 32,
        "startLoc": {
          "line": 12,
          "column": 1,
          "position": 76
        },
        "endLoc": {
          "line": 32,
          "column": 6,
          "position": 194
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "export interface CacheStats {\n    hits: number;\n    misses: number;\n    hitRate: number;\n    size: number;\n    ttl: number;\n}\nexport interface WarmupResult {\n    service: string;\n    success: boolean;\n    duration: number;\n    itemsWarmed: number;\n    error?: string;\n}\nexport interface CacheItem {\n    value: any;\n    expires: number;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\cache-warmup.service.d.ts",
        "start": 1,
        "end": 19,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 19,
          "column": 8,
          "position": 117
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\cache-warmup.service.ts",
        "start": 3,
        "end": 24,
        "startLoc": {
          "line": 3,
          "column": 1,
          "position": 14
        },
        "endLoc": {
          "line": 24,
          "column": 6,
          "position": 134
        }
      }
    },
    {
      "format": "typescript",
      "lines": 27,
      "fragment": "maxSize: number;\n    compression: boolean;\n    encryption: boolean;\n    namespace: string;\n}\nexport interface CacheEntry<T = any> {\n    key: string;\n    value: T;\n    timestamp: number;\n    ttl: number;\n    accessCount: number;\n    lastAccessed: number;\n    compressed: boolean;\n    encrypted: boolean;\n    metadata?: Record<string, any>;\n}\nexport interface CacheStats {\n    hits: number;\n    misses: number;\n    hitRate: number;\n    totalSize: number;\n    entryCount: number;\n    evictions: number;\n    compressionRatio: number;\n    averageAccessTime: number;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\cache-manager.service.d.ts",
        "start": 17,
        "end": 43,
        "startLoc": {
          "line": 17,
          "column": 5,
          "position": 116
        },
        "endLoc": {
          "line": 43,
          "column": 8,
          "position": 300
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\cache-manager.service.ts",
        "start": 29,
        "end": 58,
        "startLoc": {
          "line": 29,
          "column": 3,
          "position": 146
        },
        "endLoc": {
          "line": 58,
          "column": 6,
          "position": 333
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ";\n    }\n    async createBudget(budgetData) {\n        try {\n            const budget = {\n                id: `budget_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n                createdAt: new Date(),\n                updatedAt: new Date(),\n                alerts: [],\n                notifications: [],\n                ...budgetData\n            };\n            this.validateBudget(budget);\n            this.budgets.push",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\budget-manager.service.js",
        "start": 88,
        "end": 101,
        "startLoc": {
          "line": 88,
          "column": 2,
          "position": 957
        },
        "endLoc": {
          "line": 101,
          "column": 5,
          "position": 1082
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\finops-consolidated.service.js",
        "start": 121,
        "end": 134,
        "startLoc": {
          "line": 121,
          "column": 5,
          "position": 1233
        },
        "endLoc": {
          "line": 134,
          "column": 4,
          "position": 1358
        }
      }
    },
    {
      "format": "javascript",
      "lines": 16,
      "fragment": "}\n    validateBudget(budget) {\n        if (budget.amount <= 0) {\n            throw new Error('Budget amount must be greater than 0');\n        }\n        if (budget.threshold < 0 || budget.threshold > 100) {\n            throw new Error('Budget threshold must be between 0 and 100');\n        }\n        if (budget.startDate >= budget.endDate) {\n            throw new Error('Start date must be before end date');\n        }\n        if (!budget.organizationId) {\n            throw new Error('Organization ID is required');\n        }\n    }\n    getBudget",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\budget-manager.service.js",
        "start": 118,
        "end": 133,
        "startLoc": {
          "line": 118,
          "column": 5,
          "position": 1201
        },
        "endLoc": {
          "line": 133,
          "column": 10,
          "position": 1340
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\finops-consolidated.service.js",
        "start": 679,
        "end": 694,
        "startLoc": {
          "line": 679,
          "column": 5,
          "position": 7500
        },
        "endLoc": {
          "line": 694,
          "column": 22,
          "position": 7639
        }
      }
    },
    {
      "format": "javascript",
      "lines": 17,
      "fragment": ";\n    }\n    determineAlertSeverity(type, percentage) {\n        switch (type) {\n            case 'threshold':\n                return percentage >= 95 ? 'high' : percentage >= 85 ? 'medium' : 'low';\n            case 'exceeded':\n                return 'critical';\n            case 'predicted_exceeded':\n                return 'high';\n            case 'anomaly':\n                return 'medium';\n            default:\n                return 'low';\n        }\n    }\n    generateAlertMessage",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\budget-manager.service.js",
        "start": 280,
        "end": 296,
        "startLoc": {
          "line": 280,
          "column": 6,
          "position": 2964
        },
        "endLoc": {
          "line": 296,
          "column": 21,
          "position": 3078
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\finops-consolidated.service.js",
        "start": 276,
        "end": 292,
        "startLoc": {
          "line": 276,
          "column": 2,
          "position": 2889
        },
        "endLoc": {
          "line": 292,
          "column": 15,
          "position": 3003
        }
      }
    },
    {
      "format": "typescript",
      "lines": 35,
      "fragment": "interface DeploymentEnvironment {\n    id: string;\n    name: 'blue' | 'green';\n    status: 'active' | 'inactive' | 'deploying' | 'failed' | 'rolling_back';\n    version: string;\n    buildId: string;\n    deployedAt: string;\n    healthCheckUrl: string;\n    metrics: {\n        responseTime: number;\n        errorRate: number;\n        throughput: number;\n        cpuUsage: number;\n        memoryUsage: number;\n        diskUsage: number;\n    };\n    configuration: {\n        replicas: number;\n        resources: {\n            cpu: string;\n            memory: string;\n            storage: string;\n        };\n        environmentVariables: Record<string, string>;\n        secrets: string[];\n    };\n}\ninterface DeploymentGate {\n    id: string;\n    name: string;\n    description: string;\n    type: 'health_check' | 'performance_test' | 'security_scan' | 'smoke_test' | 'integration_test' | 'load_test' | 'custom';\n    status: 'pending' | 'running' | 'passed' | 'failed' | 'skipped';\n    priority: number;\n    timeout",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\blue-green-deployment.service.d.ts",
        "start": 1,
        "end": 35,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 35,
          "column": 8,
          "position": 288
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\blue-green-deployment.service.ts",
        "start": 6,
        "end": 40,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 19
        },
        "endLoc": {
          "line": 40,
          "column": 29,
          "position": 307
        }
      }
    },
    {
      "format": "typescript",
      "lines": 35,
      "fragment": "retryCount: number;\n    maxRetries: number;\n    configuration: {\n        endpoint?: string;\n        expectedResponse?: any;\n        threshold?: number;\n        script?: string;\n        parameters?: Record<string, any>;\n    };\n    results: {\n        startTime: string;\n        endTime?: string;\n        duration?: number;\n        success: boolean;\n        message?: string;\n        metrics?: Record<string, any>;\n        logs?: string[];\n    };\n    createdAt: string;\n    updatedAt: string;\n}\ninterface DeploymentPipeline {\n    id: string;\n    name: string;\n    description: string;\n    status: 'idle' | 'running' | 'completed' | 'failed' | 'cancelled';\n    currentStage: string;\n    stages: {\n        name: string;\n        status: 'pending' | 'running' | 'completed' | 'failed' | 'skipped';\n        startTime?: string;\n        endTime?: string;\n        duration?: number;\n        gates: string[];\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\blue-green-deployment.service.d.ts",
        "start": 36,
        "end": 70,
        "startLoc": {
          "line": 36,
          "column": 5,
          "position": 295
        },
        "endLoc": {
          "line": 70,
          "column": 2,
          "position": 579
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\blue-green-deployment.service.ts",
        "start": 42,
        "end": 76,
        "startLoc": {
          "line": 42,
          "column": 3,
          "position": 319
        },
        "endLoc": {
          "line": 76,
          "column": 12,
          "position": 603
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "}[];\n    sourceEnvironment: 'blue' | 'green';\n    targetEnvironment: 'blue' | 'green';\n    version: string;\n    buildId: string;\n    triggeredBy: {\n        userId: string;\n        trigger: 'manual' | 'webhook' | 'schedule' | 'api';\n        commitHash?: string;\n        branch?: string;\n    };\n    configuration: {\n        autoRollback: boolean;\n        rollbackThreshold: number;\n        canaryPercentage",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\blue-green-deployment.service.d.ts",
        "start": 70,
        "end": 84,
        "startLoc": {
          "line": 70,
          "column": 5,
          "position": 579
        },
        "endLoc": {
          "line": 84,
          "column": 17,
          "position": 693
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\blue-green-deployment.service.ts",
        "start": 77,
        "end": 90,
        "startLoc": {
          "line": 77,
          "column": 3,
          "position": 606
        },
        "endLoc": {
          "line": 90,
          "column": 41,
          "position": 719
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "notificationChannels: string[];\n    };\n    metrics: {\n        totalDuration: number;\n        gatesPassed: number;\n        gatesFailed: number;\n        gatesSkipped: number;\n        rollbackTriggered: boolean;\n        rollbackReason?: string;\n    };\n    createdAt: string;\n    updatedAt: string;\n    completedAt?: string;\n}\ninterface DeploymentRollback",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\blue-green-deployment.service.d.ts",
        "start": 86,
        "end": 100,
        "startLoc": {
          "line": 86,
          "column": 9,
          "position": 707
        },
        "endLoc": {
          "line": 100,
          "column": 19,
          "position": 798
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\blue-green-deployment.service.ts",
        "start": 93,
        "end": 108,
        "startLoc": {
          "line": 93,
          "column": 5,
          "position": 740
        },
        "endLoc": {
          "line": 108,
          "column": 21,
          "position": 832
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ";\n}\ninterface DeploymentRollback {\n    id: string;\n    deploymentId: string;\n    reason: 'manual' | 'automatic' | 'gate_failure' | 'performance_degradation' | 'error_rate_threshold';\n    triggeredBy: string;\n    fromEnvironment: 'blue' | 'green';\n    toEnvironment: 'blue' | 'green';\n    fromVersion: string;\n    toVersion: string;\n    status: 'pending' | 'running' | 'completed' | 'failed';\n    startTime: string;\n    endTime?: string;\n    duration?: number;\n    success: boolean;\n    message?: string;\n    logs: string[];\n}\ndeclare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\blue-green-deployment.service.d.ts",
        "start": 98,
        "end": 117,
        "startLoc": {
          "line": 98,
          "column": 7,
          "position": 792
        },
        "endLoc": {
          "line": 117,
          "column": 8,
          "position": 950
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\blue-green-deployment.service.ts",
        "start": 155,
        "end": 176,
        "startLoc": {
          "line": 155,
          "column": 2,
          "position": 1175
        },
        "endLoc": {
          "line": 176,
          "column": 6,
          "position": 1335
        }
      }
    },
    {
      "format": "javascript",
      "lines": 35,
      "fragment": "name: z.string().min(1).max(100),\n    description: z.string().max(500).optional(),\n    type: z.enum(['database', 'files', 'configuration', 'full', 'incremental']),\n    source: z.object({\n        type: z.enum(['database', 'filesystem', 'api', 'config']),\n        path: z.string().optional(),\n        connectionString: z.string().optional(),\n        tables: z.array(z.string()).optional(),\n        includeData: z.boolean().default(true),\n        includeSchema: z.boolean().default(true)\n    }),\n    destination: z.object({\n        type: z.enum(['local', 'azure_blob', 's3', 'ftp', 'sftp']),\n        path: z.string(),\n        credentials: z.record(z.string(), z.string()).optional(),\n        compression: z.boolean().default(true),\n        encryption: z.boolean().default(true)\n    }),\n    schedule: z.object({\n        enabled: z.boolean().default(false),\n        cron: z.string().optional(),\n        timezone: z.string().default('UTC'),\n        retention: z.object({\n            days: z.number().min(1).max(365).default(30),\n            maxBackups: z.number().min(1).max(1000).default(100)\n        })\n    }),\n    filters: z.object({\n        include: z.array(z.string()).default([]),\n        exclude: z.array(z.string()).default([]),\n        maxFileSize: z.number().optional(),\n        fileTypes: z.array(z.string()).optional()\n    }).optional(),\n    isActive: z.boolean().default(true),\n    createdAt",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\backup-recovery.service.js",
        "start": 8,
        "end": 42,
        "startLoc": {
          "line": 8,
          "column": 5,
          "position": 91
        },
        "endLoc": {
          "line": 42,
          "column": 10,
          "position": 627
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\backup-recovery.js",
        "start": 7,
        "end": 41,
        "startLoc": {
          "line": 7,
          "column": 5,
          "position": 76
        },
        "endLoc": {
          "line": 41,
          "column": 10,
          "position": 612
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ": z.string(),\n    target: z.object({\n        type: z.enum(['database', 'filesystem', 'api']),\n        path: z.string().optional(),\n        connectionString: z.string().optional(),\n        tables: z.array(z.string()).optional()\n    }),\n    options: z.object({\n        overwrite: z.boolean().default(false),\n        verify: z.boolean().default(true),\n        restoreSchema: z.boolean().default(true),\n        restoreData: z.boolean().default(true)\n    }),\n    status",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\backup-recovery.service.js",
        "start": 64,
        "end": 77,
        "startLoc": {
          "line": 64,
          "column": 9,
          "position": 964
        },
        "endLoc": {
          "line": 77,
          "column": 7,
          "position": 1136
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\backup-recovery.js",
        "start": 86,
        "end": 99,
        "startLoc": {
          "line": 86,
          "column": 12,
          "position": 1291
        },
        "endLoc": {
          "line": 99,
          "column": 7,
          "position": 1463
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": ";\n        let data = mockData;\n        if (config.destination.compression) {\n            data = this.compressData(data);\n        }\n        if (config.destination.encryption) {\n            data = this.encryptData(data);\n        }\n        await fs.writeFile(backupPath, data);\n        return {\n            size: Buffer.byteLength(data),\n            filesCount,",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\backup-recovery.service.js",
        "start": 464,
        "end": 475,
        "startLoc": {
          "line": 464,
          "column": 8,
          "position": 4658
        },
        "endLoc": {
          "line": 475,
          "column": 2,
          "position": 4761
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\backup-recovery.service.js",
        "start": 426,
        "end": 437,
        "startLoc": {
          "line": 426,
          "column": 51,
          "position": 4297
        },
        "endLoc": {
          "line": 437,
          "column": 2,
          "position": 4400
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ";\n        if (config.destination.compression) {\n            data = this.compressData(data);\n        }\n        if (config.destination.encryption) {\n            data = this.encryptData(data);\n        }\n        await fs.writeFile(backupPath, data);\n        return {\n            size: Buffer.byteLength(data),\n            filesCount: 1,\n            metadata: {\n                backupPath,\n                environment",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\backup-recovery.service.js",
        "start": 504,
        "end": 517,
        "startLoc": {
          "line": 504,
          "column": 2,
          "position": 5042
        },
        "endLoc": {
          "line": 517,
          "column": 12,
          "position": 5151
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\backup-recovery.service.js",
        "start": 427,
        "end": 440,
        "startLoc": {
          "line": 427,
          "column": 9,
          "position": 4307
        },
        "endLoc": {
          "line": 440,
          "column": 7,
          "position": 4416
        }
      }
    },
    {
      "format": "typescript",
      "lines": 41,
      "fragment": ", {\n    type?: \"database\" | \"full\" | \"incremental\" | \"files\" | \"configuration\";\n    name?: string;\n    filters?: {\n        maxFileSize?: number;\n        include?: string[];\n        exclude?: string[];\n        fileTypes?: string[];\n    };\n    id?: string;\n    source?: {\n        path?: string;\n        type?: \"database\" | \"config\" | \"api\" | \"filesystem\";\n        tables?: string[];\n        connectionString?: string;\n        includeData?: boolean;\n        includeSchema?: boolean;\n    };\n    createdAt?: Date;\n    updatedAt?: Date;\n    description?: string;\n    isActive?: boolean;\n    createdBy?: string;\n    updatedBy?: string;\n    schedule?: {\n        enabled?: boolean;\n        timezone?: string;\n        cron?: string;\n        retention?: {\n            days?: number;\n            maxBackups?: number;\n        };\n    };\n    destination?: {\n        path?: string;\n        type?: \"local\" | \"s3\" | \"ftp\" | \"sftp\" | \"azure_blob\";\n        credentials?: Record<string, string>;\n        encryption?: boolean;\n        compression?: boolean;\n    };\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\backup-recovery.service.d.ts",
        "start": 140,
        "end": 180,
        "startLoc": {
          "line": 140,
          "column": 2,
          "position": 1490
        },
        "endLoc": {
          "line": 180,
          "column": 2,
          "position": 1840
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\backup-recovery.service.d.ts",
        "start": 100,
        "end": 140,
        "startLoc": {
          "line": 100,
          "column": 11,
          "position": 1140
        },
        "endLoc": {
          "line": 140,
          "column": 2,
          "position": 1490
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ", {\n    error?: string;\n    type?: \"manual\" | \"scheduled\" | \"recovery\";\n    status?: \"pending\" | \"completed\" | \"failed\" | \"cancelled\" | \"running\";\n    duration?: number;\n    metadata?: Record<string, any>;\n    id?: string;\n    size?: number;\n    createdAt?: Date;\n    createdBy?: string;\n    configId?: string;\n    startTime?: Date;\n    endTime?: Date;\n    filesCount?: number;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\backup-recovery.service.d.ts",
        "start": 209,
        "end": 223,
        "startLoc": {
          "line": 209,
          "column": 2,
          "position": 2210
        },
        "endLoc": {
          "line": 223,
          "column": 2,
          "position": 2349
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\backup-recovery.service.d.ts",
        "start": 195,
        "end": 209,
        "startLoc": {
          "line": 195,
          "column": 11,
          "position": 2071
        },
        "endLoc": {
          "line": 209,
          "column": 2,
          "position": 2210
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": ", {\n    error?: string;\n    options?: {\n        verify?: boolean;\n        overwrite?: boolean;\n        restoreSchema?: boolean;\n        restoreData?: boolean;\n    };\n    status?: \"pending\" | \"completed\" | \"failed\" | \"cancelled\" | \"running\";\n    duration?: number;\n    metadata?: Record<string, any>;\n    id?: string;\n    createdAt?: Date;\n    createdBy?: string;\n    target?: {\n        path?: string;\n        type?: \"database\" | \"api\" | \"filesystem\";\n        tables?: string[];\n        connectionString?: string;\n    };\n    startTime?: Date;\n    endTime?: Date;\n    backupId?: string;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\backup-recovery.service.d.ts",
        "start": 290,
        "end": 313,
        "startLoc": {
          "line": 290,
          "column": 2,
          "position": 3078
        },
        "endLoc": {
          "line": 313,
          "column": 2,
          "position": 3281
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\backup-recovery.service.d.ts",
        "start": 267,
        "end": 290,
        "startLoc": {
          "line": 267,
          "column": 11,
          "position": 2875
        },
        "endLoc": {
          "line": 290,
          "column": 2,
          "position": 3078
        }
      }
    },
    {
      "format": "typescript",
      "lines": 26,
      "fragment": "export interface BackupStats {\n    totalBackups: number;\n    totalSize: number;\n    successfulBackups: number;\n    failedBackups: number;\n    lastBackupTime: Date | null;\n    averageDuration: number;\n    backupsByType: Record<string, number>;\n    storageUsed: number;\n}\nexport interface RecoveryStats {\n    totalRecoveries: number;\n    successfulRecoveries: number;\n    failedRecoveries: number;\n    lastRecoveryTime: Date | null;\n    averageRecoveryTime: number;\n    recoveriesByType: Record<string, number>;\n}\nexport interface BackupValidation {\n    isValid: boolean;\n    errors: string[];\n    warnings: string[];\n    estimatedSize: number;\n    estimatedDuration: number;\n}\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\backup-recovery.service.d.ts",
        "start": 317,
        "end": 342,
        "startLoc": {
          "line": 317,
          "column": 1,
          "position": 3338
        },
        "endLoc": {
          "line": 342,
          "column": 7,
          "position": 3525
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\backup-recovery.service.ts",
        "start": 97,
        "end": 125,
        "startLoc": {
          "line": 97,
          "column": 1,
          "position": 1352
        },
        "endLoc": {
          "line": 125,
          "column": 37,
          "position": 1542
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "export interface BackupConfig {\n    id: string;\n    name: string;\n    description: string;\n    enabled: boolean;\n    schedule: BackupSchedule;\n    retention: RetentionPolicy;\n    compression: CompressionConfig;\n    encryption: EncryptionConfig;\n    storage: StorageConfig[];\n    verification: VerificationConfig;\n    notifications: NotificationConfig;\n}\nexport interface BackupSchedule {\n    type: 'interval' | 'cron' | 'event';\n    value: string;\n    timezone",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\backup-recovery-automated.service.d.ts",
        "start": 1,
        "end": 17,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 17,
          "column": 9,
          "position": 120
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\backup-recovery-automated.service.ts",
        "start": 21,
        "end": 37,
        "startLoc": {
          "line": 21,
          "column": 1,
          "position": 57
        },
        "endLoc": {
          "line": 37,
          "column": 55,
          "position": 177
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "}\nexport interface NotificationConfig {\n    enabled: boolean;\n    channels: string[];\n    onSuccess: boolean;\n    onFailure: boolean;\n    onWarning: boolean;\n}\nexport interface BackupJob {\n    id: string;\n    configId: string;\n    type: 'full' | 'incremental' | 'differential';\n    status: 'pending' | 'running' | 'completed' | 'failed' | 'cancelled';\n    startTime: Date;\n    endTime?: Date;\n    duration?: number;\n    size",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\backup-recovery-automated.service.d.ts",
        "start": 55,
        "end": 71,
        "startLoc": {
          "line": 55,
          "column": 1,
          "position": 416
        },
        "endLoc": {
          "line": 71,
          "column": 5,
          "position": 549
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\backup-recovery-automated.service.ts",
        "start": 81,
        "end": 98,
        "startLoc": {
          "line": 81,
          "column": 1,
          "position": 499
        },
        "endLoc": {
          "line": 98,
          "column": 16,
          "position": 633
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "checksum?: string;\n    storageLocations: string[];\n    error?: string;\n    metadata: Record<string, any>;\n}\nexport interface RecoveryJob {\n    id: string;\n    backupId: string;\n    target: string;\n    status: 'pending' | 'running' | 'completed' | 'failed' | 'cancelled';\n    startTime: Date;\n    endTime?: Date;\n    duration?: number;\n    error",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\backup-recovery-automated.service.d.ts",
        "start": 73,
        "end": 86,
        "startLoc": {
          "line": 73,
          "column": 5,
          "position": 564
        },
        "endLoc": {
          "line": 86,
          "column": 6,
          "position": 679
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\backup-recovery-automated.service.ts",
        "start": 101,
        "end": 114,
        "startLoc": {
          "line": 101,
          "column": 3,
          "position": 655
        },
        "endLoc": {
          "line": 114,
          "column": 16,
          "position": 770
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": "z.ZodObject<{\n        id: z.ZodString;\n        testName: z.ZodString;\n        status: z.ZodEnum<[\"PASSED\", \"FAILED\", \"SKIPPED\", \"RUNNING\"]>;\n        message: z.ZodString;\n        duration: z.ZodNumber;\n        timestamp: z.ZodDate;\n        details: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;\n    }, \"strip\", z.ZodTypeAny, {\n        message?: string;\n        status?: \"PASSED\" | \"FAILED\" | \"RUNNING\" | \"SKIPPED\";\n        duration?: number;\n        timestamp?: Date;\n        details?: Record<string, any>;\n        id?: string;\n        testName?: string;\n    }, {\n        message?: string;\n        status?: \"PASSED\" | \"FAILED\" | \"RUNNING\" | \"SKIPPED\";\n        duration?: number;\n        timestamp?: Date;\n        details?: Record<string, any>;\n        id?: string;\n        testName?: string;\n    }>,",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\automated-testing.service.d.ts",
        "start": 31,
        "end": 55,
        "startLoc": {
          "line": 31,
          "column": 2,
          "position": 335
        },
        "endLoc": {
          "line": 55,
          "column": 2,
          "position": 603
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\automated-testing.service.d.ts",
        "start": 2,
        "end": 26,
        "startLoc": {
          "line": 2,
          "column": 2,
          "position": 20
        },
        "endLoc": {
          "line": 26,
          "column": 2,
          "position": 285
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ", {\n    status?: \"PASSED\" | \"FAILED\" | \"RUNNING\" | \"PARTIAL\";\n    duration?: number;\n    name?: string;\n    id?: string;\n    description?: string;\n    tests?: {\n        message?: string;\n        status?: \"PASSED\" | \"FAILED\" | \"RUNNING\" | \"SKIPPED\";\n        duration?: number;\n        timestamp?: Date;\n        details?: Record<string, any>;\n        id?: string;\n        testName?: string;\n    }[];\n    startTime?: Date;\n    endTime?: Date;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\automated-testing.service.d.ts",
        "start": 77,
        "end": 94,
        "startLoc": {
          "line": 77,
          "column": 2,
          "position": 838
        },
        "endLoc": {
          "line": 94,
          "column": 2,
          "position": 998
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\automated-testing.service.d.ts",
        "start": 60,
        "end": 77,
        "startLoc": {
          "line": 60,
          "column": 11,
          "position": 678
        },
        "endLoc": {
          "line": 77,
          "column": 2,
          "position": 838
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ", {\n    status?: \"FAILED\" | \"IN_PROGRESS\" | \"COMPLETED\" | \"PENDING\";\n    metadata?: Record<string, any>;\n    id?: string;\n    secretName?: string;\n    currentVersion?: string;\n    newVersion?: string;\n    rotationDate?: Date;\n    lastRotation?: Date;\n    nextRotation?: Date;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\automated-testing.service.d.ts",
        "start": 115,
        "end": 125,
        "startLoc": {
          "line": 115,
          "column": 2,
          "position": 1237
        },
        "endLoc": {
          "line": 125,
          "column": 2,
          "position": 1332
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\automated-testing.service.d.ts",
        "start": 105,
        "end": 115,
        "startLoc": {
          "line": 105,
          "column": 11,
          "position": 1142
        },
        "endLoc": {
          "line": 115,
          "column": 2,
          "position": 1237
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ", {\n    status?: \"PASSED\" | \"FAILED\" | \"WARNING\" | \"NOT_APPLICABLE\";\n    name?: string;\n    lastChecked?: Date;\n    id?: string;\n    severity?: \"LOW\" | \"MEDIUM\" | \"HIGH\" | \"CRITICAL\";\n    description?: string;\n    category?: \"SECRETS\" | \"AUTHENTICATION\" | \"AUTHORIZATION\" | \"ENCRYPTION\" | \"NETWORK\" | \"LOGGING\";\n    remediation?: string;\n    nextCheck?: Date;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\automated-testing.service.d.ts",
        "start": 146,
        "end": 156,
        "startLoc": {
          "line": 146,
          "column": 2,
          "position": 1612
        },
        "endLoc": {
          "line": 156,
          "column": 2,
          "position": 1733
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\automated-testing.service.d.ts",
        "start": 136,
        "end": 146,
        "startLoc": {
          "line": 136,
          "column": 11,
          "position": 1491
        },
        "endLoc": {
          "line": 146,
          "column": 2,
          "position": 1612
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "maxConcurrentTests: number;\n    timeoutMs: number;\n    retryAttempts: number;\n    notificationChannels: string[];\n}\nexport interface TestExecution {\n    id: string;\n    suiteId: string;\n    status: 'RUNNING' | 'COMPLETED' | 'FAILED';\n    startTime: Date;\n    endTime?: Date;\n    results: TestResult[];\n    logs: string[];\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\automated-testing.service.d.ts",
        "start": 165,
        "end": 179,
        "startLoc": {
          "line": 165,
          "column": 5,
          "position": 1840
        },
        "endLoc": {
          "line": 179,
          "column": 8,
          "position": 1945
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\automated-testing.service.ts",
        "start": 71,
        "end": 87,
        "startLoc": {
          "line": 71,
          "column": 3,
          "position": 821
        },
        "endLoc": {
          "line": 87,
          "column": 6,
          "position": 928
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ",\n            recommendations\n        };\n    }\n    getPeriodMs(period) {\n        switch (period) {\n            case 'daily': return 24 * 60 * 60 * 1000;\n            case 'weekly': return 7 * 24 * 60 * 60 * 1000;\n            case 'monthly': return 30 * 24 * 60 * 60 * 1000;\n            default: return 24 * 60 * 60 * 1000;\n        }\n    }\n    generateDocumentationRecommendations",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\automated-documentation.service.js",
        "start": 808,
        "end": 820,
        "startLoc": {
          "line": 808,
          "column": 12,
          "position": 7685
        },
        "endLoc": {
          "line": 820,
          "column": 37,
          "position": 7819
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\project-completion-deployment.service.js",
        "start": 680,
        "end": 692,
        "startLoc": {
          "line": 680,
          "column": 13,
          "position": 6817
        },
        "endLoc": {
          "line": 692,
          "column": 34,
          "position": 6951
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", {\n    type?: \"API\" | \"ARCHITECTURE\" | \"USER_GUIDE\" | \"RUNBOOK\" | \"CHANGELOG\" | \"README\";\n    status?: \"DRAFT\" | \"REVIEW\" | \"PUBLISHED\" | \"ARCHIVED\";\n    version?: string;\n    metadata?: Record<string, any>;\n    title?: string;\n    id?: string;\n    tags?: string[];\n    createdAt?: Date;\n    updatedAt?: Date;\n    content?: string;\n    author?: string;\n    reviewers?: string[];\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\automated-documentation.service.d.ts",
        "start": 28,
        "end": 41,
        "startLoc": {
          "line": 28,
          "column": 2,
          "position": 350
        },
        "endLoc": {
          "line": 41,
          "column": 2,
          "position": 493
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\automated-documentation.service.d.ts",
        "start": 15,
        "end": 28,
        "startLoc": {
          "line": 15,
          "column": 11,
          "position": 207
        },
        "endLoc": {
          "line": 28,
          "column": 2,
          "position": 350
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": ", {\n    method?: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\" | \"PATCH\";\n    endpoint?: string;\n    id?: string;\n    description?: string;\n    parameters?: {\n        type?: string;\n        name?: string;\n        description?: string;\n        required?: boolean;\n        example?: any;\n    }[];\n    responses?: {\n        status?: number;\n        description?: string;\n        schema?: any;\n    }[];\n    examples?: {\n        description?: string;\n        request?: any;\n        response?: any;\n    }[];\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\automated-documentation.service.d.ts",
        "start": 114,
        "end": 136,
        "startLoc": {
          "line": 114,
          "column": 2,
          "position": 1169
        },
        "endLoc": {
          "line": 136,
          "column": 2,
          "position": 1349
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\automated-documentation.service.d.ts",
        "start": 92,
        "end": 114,
        "startLoc": {
          "line": 92,
          "column": 11,
          "position": 989
        },
        "endLoc": {
          "line": 114,
          "column": 2,
          "position": 1169
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", {\n    id?: string;\n    component?: string;\n    description?: string;\n    dependencies?: string[];\n    interfaces?: {\n        type?: string;\n        name?: string;\n        description?: string;\n    }[];\n    diagrams?: {\n        type?: \"FLOWCHART\" | \"SEQUENCE\" | \"COMPONENT\" | \"DEPLOYMENT\";\n        content?: string;\n        format?: \"Mermaid\" | \"PlantUML\" | \"SVG\";\n    }[];\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\automated-documentation.service.d.ts",
        "start": 183,
        "end": 198,
        "startLoc": {
          "line": 183,
          "column": 2,
          "position": 1856
        },
        "endLoc": {
          "line": 198,
          "column": 2,
          "position": 1989
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\automated-documentation.service.d.ts",
        "start": 168,
        "end": 183,
        "startLoc": {
          "line": 168,
          "column": 11,
          "position": 1723
        },
        "endLoc": {
          "line": 183,
          "column": 2,
          "position": 1856
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", {\n    title?: string;\n    id?: string;\n    description?: string;\n    procedures?: {\n        title?: string;\n        description?: string;\n        step?: number;\n        commands?: string[];\n        expectedResult?: string;\n        troubleshooting?: string;\n    }[];\n    prerequisites?: string[];\n    estimatedTime?: string;\n    difficulty?: \"BEGINNER\" | \"INTERMEDIATE\" | \"ADVANCED\" | \"EXPERT\";\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\automated-documentation.service.d.ts",
        "start": 243,
        "end": 258,
        "startLoc": {
          "line": 243,
          "column": 2,
          "position": 2439
        },
        "endLoc": {
          "line": 258,
          "column": 2,
          "position": 2569
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\automated-documentation.service.d.ts",
        "start": 228,
        "end": 243,
        "startLoc": {
          "line": 228,
          "column": 11,
          "position": 2309
        },
        "endLoc": {
          "line": 243,
          "column": 2,
          "position": 2439
        }
      }
    },
    {
      "format": "typescript",
      "lines": 36,
      "fragment": "interface LoginResponse {\n    success: boolean;\n    user: {\n        id: string;\n        email: string;\n        role: string;\n        organizationId: string;\n        permissions: string[];\n    };\n    tokens: {\n        accessToken: string;\n        refreshToken: string;\n        expiresIn: number;\n    };\n    session: {\n        id: string;\n        expiresAt: Date;\n    };\n}\ninterface TokenPayload {\n    userId: string;\n    organizationId: string;\n    role: string;\n    permissions: string[];\n    sessionId: string;\n    type: 'access' | 'refresh';\n    iat: number;\n    exp: number;\n}\ninterface ApiKeyResponse {\n    keyId: string;\n    key: string;\n    expiresAt: Date;\n    permissions: string[];\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\auth.service.d.ts",
        "start": 20,
        "end": 55,
        "startLoc": {
          "line": 20,
          "column": 1,
          "position": 124
        },
        "endLoc": {
          "line": 55,
          "column": 8,
          "position": 351
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\auth.service.ts",
        "start": 58,
        "end": 96,
        "startLoc": {
          "line": 58,
          "column": 2,
          "position": 507
        },
        "endLoc": {
          "line": 96,
          "column": 6,
          "position": 737
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "config = {\n            enabled: true,\n            retentionDays: 90,\n            undoWindowHours: 24,\n            maxUndoOperations: 1000,\n            autoExpire: true,\n            trackFields: ['name', 'email', 'phone', 'status', 'value', 'stage', 'priority', 'description'],\n            sensitiveFields: ['password', 'token', 'secret', 'key'],\n            excludeActions: ['view', 'list', 'search'],\n            includeMetadata: true,\n            compressionEnabled: true,",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\audit-trail-crm-undo.service.js",
        "start": 9,
        "end": 19,
        "startLoc": {
          "line": 9,
          "column": 2,
          "position": 77
        },
        "endLoc": {
          "line": 19,
          "column": 2,
          "position": 193
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\audit-trail-crm-undo.js",
        "start": 248,
        "end": 259,
        "startLoc": {
          "line": 248,
          "column": 2,
          "position": 2929
        },
        "endLoc": {
          "line": 259,
          "column": 2,
          "position": 3047
        }
      }
    },
    {
      "format": "typescript",
      "lines": 31,
      "fragment": "export interface AuditTrailEntry {\n    id: string;\n    organizationId: string;\n    userId: string;\n    userEmail: string;\n    action: string;\n    resource: 'company' | 'contact' | 'deal' | 'activity' | 'note' | 'task';\n    resourceId: string;\n    resourceName: string;\n    changes: {\n        before: Record<string, any>;\n        after: Record<string, any>;\n        diff: Record<string, {\n            field: string;\n            oldValue: any;\n            newValue: any;\n            changeType: 'added' | 'modified' | 'removed';\n        }>;\n    };\n    metadata: {\n        ipAddress?: string;\n        userAgent?: string;\n        sessionId?: string;\n        correlationId?: string;\n        source: 'web' | 'api' | 'import' | 'sync' | 'system';\n        reason?: string;\n    };\n    timestamp: string;\n    isReversible: boolean;\n    expiresAt: string;\n    status",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\audit-trail-crm-undo.service.d.ts",
        "start": 1,
        "end": 31,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 31,
          "column": 7,
          "position": 267
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\audit-trail-crm-undo.service.ts",
        "start": 10,
        "end": 39,
        "startLoc": {
          "line": 10,
          "column": 1,
          "position": 17
        },
        "endLoc": {
          "line": 39,
          "column": 34,
          "position": 283
        }
      }
    },
    {
      "format": "typescript",
      "lines": 45,
      "fragment": "status: 'active' | 'reverted' | 'expired';\n    revertedAt?: string;\n    revertedBy?: string;\n    revertReason?: string;\n}\nexport interface UndoOperation {\n    id: string;\n    auditTrailId: string;\n    organizationId: string;\n    userId: string;\n    resource: string;\n    resourceId: string;\n    operation: 'undo' | 'revert';\n    changes: Record<string, any>;\n    reason: string;\n    timestamp: string;\n    status: 'pending' | 'completed' | 'failed';\n    errorMessage?: string;\n    metadata: Record<string, any>;\n}\nexport interface AuditTrailStats {\n    totalEntries: number;\n    entriesByResource: Record<string, number>;\n    entriesByAction: Record<string, number>;\n    entriesByUser: Record<string, number>;\n    reversibleEntries: number;\n    revertedEntries: number;\n    expiredEntries: number;\n    last24Hours: number;\n    last7Days: number;\n    last30Days: number;\n}\nexport interface AuditTrailConfig {\n    enabled: boolean;\n    retentionDays: number;\n    undoWindowHours: number;\n    maxUndoOperations: number;\n    autoExpire: boolean;\n    trackFields: string[];\n    sensitiveFields: string[];\n    excludeActions: string[];\n    includeMetadata: boolean;\n    compressionEnabled: boolean;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\audit-trail-crm-undo.service.d.ts",
        "start": 31,
        "end": 75,
        "startLoc": {
          "line": 31,
          "column": 5,
          "position": 267
        },
        "endLoc": {
          "line": 75,
          "column": 8,
          "position": 619
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\audit-trail-crm-undo.service.ts",
        "start": 40,
        "end": 88,
        "startLoc": {
          "line": 40,
          "column": 3,
          "position": 286
        },
        "endLoc": {
          "line": 88,
          "column": 6,
          "position": 642
        }
      }
    },
    {
      "format": "typescript",
      "lines": 33,
      "fragment": "interface ApiVersion {\n    version: string;\n    status: 'current' | 'deprecated' | 'sunset' | 'retired';\n    releaseDate: Date;\n    sunsetDate?: Date;\n    retirementDate?: Date;\n    changelog: string[];\n    breakingChanges: string[];\n    newFeatures: string[];\n    bugFixes: string[];\n    migrationGuide?: string;\n    supportedClients: string[];\n}\ninterface VersionConfig {\n    defaultVersion: string;\n    supportedVersions: string[];\n    enableVersionHeader: boolean;\n    enableUrlVersioning: boolean;\n    enableQueryVersioning: boolean;\n    enableDeprecationWarnings: boolean;\n    enableSunsetWarnings: boolean;\n    warningPeriodDays: number;\n    enableVersionMetrics: boolean;\n}\ninterface VersionMetrics {\n    version: string;\n    requestCount: number;\n    errorCount: number;\n    averageResponseTime: number;\n    lastRequest: Date;\n    uniqueClients: Set<string>;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\api-versioning.service.d.ts",
        "start": 2,
        "end": 34,
        "startLoc": {
          "line": 2,
          "column": 1,
          "position": 19
        },
        "endLoc": {
          "line": 34,
          "column": 8,
          "position": 257
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\api-versioning.service.ts",
        "start": 11,
        "end": 46,
        "startLoc": {
          "line": 11,
          "column": 1,
          "position": 88
        },
        "endLoc": {
          "line": 46,
          "column": 6,
          "position": 329
        }
      }
    },
    {
      "format": "typescript",
      "lines": 34,
      "fragment": "interface GatewayConfig {\n    enableCaching: boolean;\n    cacheTTL: number;\n    enableMetrics: boolean;\n    enableCircuitBreaker: boolean;\n    circuitBreakerThreshold: number;\n    enableLoadBalancing: boolean;\n    maxRetries: number;\n    timeout: number;\n}\ninterface RouteConfig {\n    path: string;\n    method: string;\n    service: string;\n    version: string;\n    requiresAuth: boolean;\n    rateLimit?: number;\n    timeout?: number;\n    circuitBreaker?: boolean;\n}\ninterface ServiceHealth {\n    service: string;\n    status: 'healthy' | 'unhealthy' | 'degraded';\n    responseTime: number;\n    lastCheck: number;\n    errorRate: number;\n}\ninterface CircuitBreakerState {\n    failures: number;\n    lastFailure: number;\n    state: 'closed' | 'open' | 'half-open';\n    nextAttempt: number;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\api-gateway.service.d.ts",
        "start": 2,
        "end": 35,
        "startLoc": {
          "line": 2,
          "column": 1,
          "position": 19
        },
        "endLoc": {
          "line": 35,
          "column": 8,
          "position": 247
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\api-gateway.service.ts",
        "start": 11,
        "end": 48,
        "startLoc": {
          "line": 11,
          "column": 1,
          "position": 88
        },
        "endLoc": {
          "line": 48,
          "column": 6,
          "position": 320
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "export interface APIRoute {\n    id: string;\n    path: string;\n    method: 'GET' | 'POST' | 'PUT' | 'DELETE' | 'PATCH';\n    target: string;\n    version: string;\n    enabled: boolean;\n    rateLimit: RateLimitConfig;\n    cache: CacheConfig;\n    circuitBreaker: CircuitBreakerConfig;\n    transformation?: TransformationConfig;\n}\nexport interface RateLimitConfig {\n    requests: number;\n    window: number;\n    burst",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\api-gateway-enhanced.service.d.ts",
        "start": 1,
        "end": 16,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 16,
          "column": 6,
          "position": 120
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\api-gateway-enhanced.service.ts",
        "start": 18,
        "end": 33,
        "startLoc": {
          "line": 18,
          "column": 1,
          "position": 30
        },
        "endLoc": {
          "line": 33,
          "column": 11,
          "position": 150
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": "halfOpenMaxCalls: number;\n}\nexport interface TransformationConfig {\n    request: {\n        headers?: Record<string, string>;\n        body?: any;\n        query?: Record<string, string>;\n    };\n    response: {\n        headers?: Record<string, string>;\n        body?: any;\n    };\n}\nexport interface APIMetrics {\n    totalRequests: number;\n    successfulRequests: number;\n    failedRequests: number;\n    averageResponseTime: number;\n    p95ResponseTime: number;\n    p99ResponseTime: number;\n    errorRate: number;\n    throughput: number;\n    activeConnections",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\api-gateway-enhanced.service.d.ts",
        "start": 34,
        "end": 56,
        "startLoc": {
          "line": 34,
          "column": 5,
          "position": 242
        },
        "endLoc": {
          "line": 56,
          "column": 18,
          "position": 403
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\api-gateway-enhanced.service.ts",
        "start": 54,
        "end": 77,
        "startLoc": {
          "line": 54,
          "column": 3,
          "position": 283
        },
        "endLoc": {
          "line": 77,
          "column": 23,
          "position": 445
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "activeConnections: number;\n    cacheHitRate: number;\n}\nexport interface RateLimitInfo {\n    limit: number;\n    remaining: number;\n    resetTime: number;\n    retryAfter?: number;\n}\nexport interface CircuitBreakerState {\n    state: 'closed' | 'open' | 'half-open';\n    failureCount: number;\n    lastFailureTime?: Date;\n    nextAttemptTime?: Date;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\api-gateway-enhanced.service.d.ts",
        "start": 56,
        "end": 71,
        "startLoc": {
          "line": 56,
          "column": 5,
          "position": 403
        },
        "endLoc": {
          "line": 71,
          "column": 8,
          "position": 507
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\api-gateway-enhanced.service.ts",
        "start": 78,
        "end": 96,
        "startLoc": {
          "line": 78,
          "column": 3,
          "position": 448
        },
        "endLoc": {
          "line": 96,
          "column": 6,
          "position": 555
        }
      }
    },
    {
      "format": "javascript",
      "lines": 17,
      "fragment": ",\n            allowedExtensions: ['.txt', '.pdf', '.doc', '.docx', '.xls', '.xlsx', '.jpg', '.png', '.gif'],\n            blockedExtensions: ['.exe', '.bat', '.cmd', '.scr', '.pif', '.com', '.vbs', '.js'],\n            quarantineRetentionDays: 30,\n            modules: {\n                file: true,\n                email: true,\n                api: true,\n                database: true,\n                cache: true,\n                queue: true\n            },\n            threatDatabase: {\n                enabled: true,\n                updateInterval: 24,\n                sources: ['internal', 'external']\n            },",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\antivirus-global.service.js",
        "start": 17,
        "end": 33,
        "startLoc": {
          "line": 17,
          "column": 5,
          "position": 151
        },
        "endLoc": {
          "line": 33,
          "column": 2,
          "position": 307
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\antivirus-global.js",
        "start": 338,
        "end": 355,
        "startLoc": {
          "line": 338,
          "column": 10,
          "position": 3556
        },
        "endLoc": {
          "line": 355,
          "column": 2,
          "position": 3714
        }
      }
    },
    {
      "format": "typescript",
      "lines": 47,
      "fragment": "export interface ScanResult {\n    id: string;\n    moduleId: string;\n    moduleType: 'file' | 'email' | 'api' | 'database' | 'cache' | 'queue';\n    status: 'clean' | 'infected' | 'quarantined' | 'scanning' | 'error';\n    threats: Threat[];\n    scanTime: number;\n    timestamp: string;\n    metadata: {\n        fileSize?: number;\n        fileType?: string;\n        checksum?: string;\n        source?: string;\n        destination?: string;\n    };\n}\nexport interface Threat {\n    id: string;\n    type: 'virus' | 'malware' | 'trojan' | 'spyware' | 'adware' | 'ransomware' | 'phishing' | 'suspicious';\n    name: string;\n    severity: 'low' | 'medium' | 'high' | 'critical';\n    description: string;\n    signature: string;\n    confidence: number;\n    action: 'quarantine' | 'delete' | 'clean' | 'ignore';\n    metadata: Record<string, any>;\n}\nexport interface QuarantineItem {\n    id: string;\n    moduleId: string;\n    moduleType: string;\n    threatId: string;\n    originalPath: string;\n    quarantinePath: string;\n    quarantinedAt: string;\n    quarantinedBy: string;\n    reason: string;\n    status: 'quarantined' | 'restored' | 'deleted' | 'cleaned';\n    metadata: Record<string, any>;\n}\nexport interface ScanConfig {\n    enabled: boolean;\n    realTimeScanning: boolean;\n    quarantineEnabled: boolean;\n    autoClean: boolean;\n    scanInterval: number;\n    maxFileSize",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\antivirus-global.service.d.ts",
        "start": 1,
        "end": 47,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 47,
          "column": 12,
          "position": 427
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\antivirus-global.service.ts",
        "start": 9,
        "end": 57,
        "startLoc": {
          "line": 9,
          "column": 1,
          "position": 17
        },
        "endLoc": {
          "line": 57,
          "column": 14,
          "position": 446
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "allowedExtensions: string[];\n    blockedExtensions: string[];\n    quarantineRetentionDays: number;\n    modules: {\n        file: boolean;\n        email: boolean;\n        api: boolean;\n        database: boolean;\n        cache: boolean;\n        queue: boolean;\n    };\n    threatDatabase: {\n        enabled: boolean;\n        updateInterval: number;\n        sources",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\antivirus-global.service.d.ts",
        "start": 48,
        "end": 62,
        "startLoc": {
          "line": 48,
          "column": 5,
          "position": 434
        },
        "endLoc": {
          "line": 62,
          "column": 8,
          "position": 531
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\antivirus-global.service.ts",
        "start": 59,
        "end": 72,
        "startLoc": {
          "line": 59,
          "column": 3,
          "position": 458
        },
        "endLoc": {
          "line": 72,
          "column": 12,
          "position": 554
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": "sources: string[];\n    };\n}\nexport interface AVStats {\n    totalScans: number;\n    cleanScans: number;\n    infectedScans: number;\n    quarantinedItems: number;\n    threatsDetected: number;\n    lastScan: string;\n    scanSuccessRate: number;\n    averageScanTime: number;\n    topThreats: Record<string, number>;\n    moduleStats: Record<string, {\n        scans: number;\n        threats: number;\n        quarantined: number;\n    }>;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\antivirus-global.service.d.ts",
        "start": 62,
        "end": 81,
        "startLoc": {
          "line": 62,
          "column": 9,
          "position": 531
        },
        "endLoc": {
          "line": 81,
          "column": 8,
          "position": 663
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\antivirus-global.service.ts",
        "start": 73,
        "end": 94,
        "startLoc": {
          "line": 73,
          "column": 5,
          "position": 557
        },
        "endLoc": {
          "line": 94,
          "column": 6,
          "position": 691
        }
      }
    },
    {
      "format": "typescript",
      "lines": 79,
      "fragment": "export interface MetricData {\n    timestamp: Date;\n    value: number;\n    metadata?: Record<string, any>;\n}\nexport interface DimensionData {\n    dimension: string;\n    value: string | number;\n    count: number;\n    percentage: number;\n}\nexport interface AnalyticsResult {\n    metrics: Record<string, MetricData[]>;\n    dimensions: Record<string, DimensionData[]>;\n    summary: {\n        totalRecords: number;\n        timeRange: string;\n        lastUpdated: Date;\n    };\n}\nexport interface Dashboard {\n    id: string;\n    name: string;\n    description?: string;\n    userId: string;\n    orgId: string;\n    widgets: Widget[];\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface Widget {\n    id: string;\n    type: 'chart' | 'metric' | 'table' | 'heatmap' | 'funnel';\n    title: string;\n    query: AnalyticsQuery;\n    position: {\n        x: number;\n        y: number;\n        width: number;\n        height: number;\n    };\n    config?: Record<string, any>;\n}\nexport interface AnalyticsQuery {\n    metrics: string[];\n    dimensions?: string[];\n    filters?: Filter[];\n    timeRange: 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n    startDate?: string;\n    endDate?: string;\n    groupBy?: string[];\n    orderBy?: Array<{\n        field: string;\n        direction: 'asc' | 'desc';\n    }>;\n    limit?: number;\n}\nexport interface Filter {\n    field: string;\n    operator: 'equals' | 'not_equals' | 'contains' | 'greater_than' | 'less_than' | 'between';\n    value: string | number | Array<string | number>;\n}\nexport interface Report {\n    id: string;\n    name: string;\n    description?: string;\n    userId: string;\n    orgId: string;\n    query: AnalyticsQuery;\n    schedule?: {\n        frequency: 'daily' | 'weekly' | 'monthly';\n        time: string;\n        recipients: string[];\n    };\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface IAnalyticsSystem {\n    getMetrics",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\analytics.d.ts",
        "start": 1,
        "end": 79,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 79,
          "column": 11,
          "position": 642
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\analytics.ts",
        "start": 91,
        "end": 177,
        "startLoc": {
          "line": 91,
          "column": 1,
          "position": 852
        },
        "endLoc": {
          "line": 177,
          "column": 24,
          "position": 1502
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "getMetrics(query: AnalyticsQuery): Promise<AnalyticsResult>;\n    getRealTimeMetrics(metrics: string[]): Promise<Record<string, number>>;\n    createDashboard(dashboard: Omit<Dashboard, 'id' | 'createdAt' | 'updatedAt'>): Promise<Dashboard>;\n    getDashboard(id: string): Promise<Dashboard | null>;\n    listDashboards(userId: string, orgId: string): Promise<Dashboard[]>;\n    updateDashboard(id: string, updates: Partial<Dashboard>): Promise<Dashboard>;\n    deleteDashboard(id: string): Promise<void>;\n    createReport(report: Omit<Report, 'id' | 'createdAt' | 'updatedAt'>): Promise<Report>;\n    getReport(id: string): Promise<Report | null>;\n    listReports(userId: string, orgId: string): Promise<Report[]>;\n    updateReport(id: string, updates: Partial<Report>): Promise<Report>;\n    deleteReport(id: string): Promise<void>;\n    generateReport(id: string): Promise<AnalyticsResult>;\n    getSampleData(): Promise<Record<string, any>>;\n    getAvailableMetrics(): Promise<string[]>;\n    getAvailableDimensions(): Promise<string[]>;\n    private",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\analytics.d.ts",
        "start": 101,
        "end": 117,
        "startLoc": {
          "line": 101,
          "column": 5,
          "position": 1012
        },
        "endLoc": {
          "line": 117,
          "column": 8,
          "position": 1342
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\analytics.d.ts",
        "start": 79,
        "end": 95,
        "startLoc": {
          "line": 79,
          "column": 5,
          "position": 642
        },
        "endLoc": {
          "line": 95,
          "column": 2,
          "position": 971
        }
      }
    },
    {
      "format": "typescript",
      "lines": 61,
      "fragment": "export interface AnalyticsMetric {\n    id: string;\n    name: string;\n    type: 'performance' | 'business' | 'financial' | 'operational' | 'customer' | 'marketing';\n    value: number;\n    unit: string;\n    timestamp: Date;\n    organizationId: string;\n    userId?: string;\n    metadata: Record<string, any>;\n    tags: string[];\n    category: string;\n    subcategory?: string;\n    source: string;\n    confidence?: number;\n    status: 'active' | 'inactive' | 'deprecated';\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface TrendAnalysis {\n    id: string;\n    metricId: string;\n    period: 'hourly' | 'daily' | 'weekly' | 'monthly' | 'yearly';\n    trend: 'increasing' | 'decreasing' | 'stable' | 'volatile' | 'seasonal';\n    changePercentage: number;\n    confidence: number;\n    forecast: ForecastData[];\n    seasonality: SeasonalityData;\n    anomalies: AnomalyData[];\n    organizationId: string;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface ForecastData {\n    timestamp: Date;\n    predictedValue: number;\n    confidenceInterval: {\n        lower: number;\n        upper: number;\n    };\n    probability: number;\n}\nexport interface SeasonalityData {\n    hasSeasonality: boolean;\n    period: number;\n    strength: number;\n    pattern: number[];\n}\nexport interface AnomalyData {\n    id: string;\n    timestamp: Date;\n    value: number;\n    expectedValue: number;\n    deviation: number;\n    severity: 'low' | 'medium' | 'high' | 'critical';\n    type: 'spike' | 'drop' | 'pattern_change' | 'outlier';\n    description: string;\n    impact: string;\n    recommendations: string[];\n}\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\analytics-types.d.ts",
        "start": 1,
        "end": 61,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 61,
          "column": 7,
          "position": 499
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\analytics-types.ts",
        "start": 12,
        "end": 77,
        "startLoc": {
          "line": 12,
          "column": 1,
          "position": 10
        },
        "endLoc": {
          "line": 77,
          "column": 80,
          "position": 514
        }
      }
    },
    {
      "format": "typescript",
      "lines": 88,
      "fragment": "export interface BusinessIntelligence {\n    id: string;\n    kpiId: string;\n    currentValue: number;\n    targetValue: number;\n    previousValue: number;\n    variance: number;\n    variancePercentage: number;\n    status: 'on-track' | 'at-risk' | 'off-track' | 'exceeding';\n    insights: string[];\n    recommendations: string[];\n    riskFactors: RiskFactor[];\n    opportunities: Opportunity[];\n    organizationId: string;\n    period: 'daily' | 'weekly' | 'monthly' | 'quarterly' | 'yearly';\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface KPI {\n    id: string;\n    name: string;\n    description: string;\n    type: 'financial' | 'operational' | 'customer' | 'marketing' | 'strategic';\n    category: string;\n    unit: string;\n    targetValue: number;\n    currentValue: number;\n    formula: string;\n    dataSource: string;\n    frequency: 'real-time' | 'hourly' | 'daily' | 'weekly' | 'monthly';\n    owner: string;\n    stakeholders: string[];\n    organizationId: string;\n    isActive: boolean;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface RiskFactor {\n    id: string;\n    name: string;\n    description: string;\n    severity: 'low' | 'medium' | 'high' | 'critical';\n    probability: number;\n    impact: number;\n    riskScore: number;\n    mitigation: string[];\n    owner: string;\n    status: 'identified' | 'monitoring' | 'mitigating' | 'resolved';\n}\nexport interface Opportunity {\n    id: string;\n    name: string;\n    description: string;\n    potentialValue: number;\n    probability: number;\n    effort: 'low' | 'medium' | 'high';\n    timeframe: string;\n    owner: string;\n    status: 'identified' | 'evaluating' | 'pursuing' | 'implemented';\n}\nexport interface CompetitiveAnalysis {\n    id: string;\n    competitor: string;\n    metric: string;\n    ourValue: number;\n    competitorValue: number;\n    marketAverage: number;\n    position: 'leading' | 'competitive' | 'lagging';\n    gap: number;\n    recommendations: string[];\n    organizationId: string;\n    analysisDate: Date;\n}\nexport interface ROIAnalysis {\n    id: string;\n    initiative: string;\n    investment: number;\n    returns: number;\n    roi: number;\n    paybackPeriod: number;\n    npv: number;\n    irr: number;\n    risk: 'low' | 'medium' | 'high';\n    organizationId: string;\n    period: string;\n    createdAt: Date;\n}\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\analytics-types.d.ts",
        "start": 61,
        "end": 148,
        "startLoc": {
          "line": 61,
          "column": 1,
          "position": 499
        },
        "endLoc": {
          "line": 148,
          "column": 7,
          "position": 1218
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\analytics-types.ts",
        "start": 81,
        "end": 174,
        "startLoc": {
          "line": 81,
          "column": 1,
          "position": 521
        },
        "endLoc": {
          "line": 174,
          "column": 80,
          "position": 1246
        }
      }
    },
    {
      "format": "typescript",
      "lines": 61,
      "fragment": "export interface Report {\n    id: string;\n    name: string;\n    description: string;\n    type: 'dashboard' | 'analytics' | 'executive' | 'operational' | 'custom';\n    template: string;\n    data: ReportData[];\n    filters: ReportFilter[];\n    schedule?: ReportSchedule;\n    recipients: string[];\n    format: 'pdf' | 'excel' | 'csv' | 'json' | 'html';\n    organizationId: string;\n    createdBy: string;\n    isPublic: boolean;\n    isActive: boolean;\n    createdAt: Date;\n    updatedAt: Date;\n    lastGenerated?: Date;\n}\nexport interface ReportData {\n    metricId: string;\n    metricName: string;\n    value: number;\n    unit: string;\n    trend: TrendAnalysis;\n    visualization: VisualizationConfig;\n}\nexport interface ReportFilter {\n    field: string;\n    operator: 'equals' | 'not_equals' | 'greater_than' | 'less_than' | 'contains' | 'between';\n    value: any;\n    values?: any[];\n}\nexport interface ReportSchedule {\n    frequency: 'daily' | 'weekly' | 'monthly' | 'quarterly' | 'yearly';\n    dayOfWeek?: number;\n    dayOfMonth?: number;\n    time: string;\n    timezone: string;\n    isActive: boolean;\n}\nexport interface VisualizationConfig {\n    type: 'line' | 'bar' | 'pie' | 'scatter' | 'area' | 'table' | 'gauge' | 'heatmap';\n    title: string;\n    xAxis?: string;\n    yAxis?: string;\n    colors?: string[];\n    options?: Record<string, any>;\n}\nexport interface ReportGeneration {\n    id: string;\n    reportId: string;\n    status: 'pending' | 'generating' | 'completed' | 'failed';\n    progress: number;\n    fileUrl?: string;\n    errorMessage?: string;\n    generatedAt?: Date;\n    generatedBy: string;\n    parameters: Record<string, any>;\n}\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\analytics-types.d.ts",
        "start": 148,
        "end": 208,
        "startLoc": {
          "line": 148,
          "column": 1,
          "position": 1218
        },
        "endLoc": {
          "line": 208,
          "column": 7,
          "position": 1756
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\analytics-types.ts",
        "start": 178,
        "end": 244,
        "startLoc": {
          "line": 178,
          "column": 1,
          "position": 1253
        },
        "endLoc": {
          "line": 244,
          "column": 80,
          "position": 1797
        }
      }
    },
    {
      "format": "typescript",
      "lines": 77,
      "fragment": "export interface Dashboard {\n    id: string;\n    name: string;\n    description: string;\n    type: 'executive' | 'operational' | 'analytical' | 'custom';\n    layout: DashboardLayout;\n    widgets: DashboardWidget[];\n    filters: DashboardFilter[];\n    organizationId: string;\n    createdBy: string;\n    isPublic: boolean;\n    isActive: boolean;\n    refreshInterval: number;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface DashboardLayout {\n    columns: number;\n    rows: number;\n    gridSize: number;\n    responsive: boolean;\n}\nexport interface DashboardWidget {\n    id: string;\n    type: 'metric' | 'chart' | 'table' | 'gauge' | 'alert' | 'kpi' | 'trend';\n    title: string;\n    position: {\n        x: number;\n        y: number;\n        width: number;\n        height: number;\n    };\n    config: WidgetConfig;\n    data: any;\n    refreshInterval: number;\n    isVisible: boolean;\n}\nexport interface WidgetConfig {\n    metricId?: string;\n    chartType?: string;\n    colors?: string[];\n    thresholds?: Threshold[];\n    options?: Record<string, any>;\n}\nexport interface Threshold {\n    value: number;\n    color: string;\n    label: string;\n    operator: 'greater_than' | 'less_than' | 'equals';\n}\nexport interface DashboardFilter {\n    id: string;\n    name: string;\n    type: 'date' | 'select' | 'multiselect' | 'range' | 'text';\n    field: string;\n    options?: any[];\n    defaultValue?: any;\n    isRequired: boolean;\n}\nexport interface DashboardAlert {\n    id: string;\n    dashboardId: string;\n    widgetId: string;\n    condition: AlertCondition;\n    message: string;\n    severity: 'info' | 'warning' | 'error' | 'critical';\n    isActive: boolean;\n    lastTriggered?: Date;\n    recipients: string[];\n}\nexport interface AlertCondition {\n    metric: string;\n    operator: 'greater_than' | 'less_than' | 'equals' | 'not_equals' | 'change_by';\n    value: number;\n    timeWindow: number;\n}\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\analytics-types.d.ts",
        "start": 208,
        "end": 284,
        "startLoc": {
          "line": 208,
          "column": 1,
          "position": 1756
        },
        "endLoc": {
          "line": 284,
          "column": 7,
          "position": 2366
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\analytics-types.ts",
        "start": 248,
        "end": 332,
        "startLoc": {
          "line": 248,
          "column": 1,
          "position": 1804
        },
        "endLoc": {
          "line": 332,
          "column": 80,
          "position": 2422
        }
      }
    },
    {
      "format": "typescript",
      "lines": 53,
      "fragment": "export interface AnalyticsQuery {\n    metrics: string[];\n    filters: ReportFilter[];\n    timeRange: {\n        start: Date;\n        end: Date;\n    };\n    aggregation: 'sum' | 'avg' | 'min' | 'max' | 'count' | 'median';\n    groupBy?: string[];\n    orderBy?: {\n        field: string;\n        direction: 'asc' | 'desc';\n    };\n    limit?: number;\n}\nexport interface AnalyticsResult {\n    data: AnalyticsDataPoint[];\n    metadata: {\n        totalRecords: number;\n        executionTime: number;\n        cacheHit: boolean;\n        query: AnalyticsQuery;\n    };\n    aggregations: Record<string, number>;\n    trends: TrendAnalysis[];\n    anomalies: AnomalyData[];\n}\nexport interface AnalyticsDataPoint {\n    timestamp: Date;\n    metrics: Record<string, number>;\n    dimensions: Record<string, string>;\n    metadata: Record<string, any>;\n}\nexport interface StatisticalAnalysis {\n    mean: number;\n    median: number;\n    mode: number;\n    standardDeviation: number;\n    variance: number;\n    skewness: number;\n    kurtosis: number;\n    min: number;\n    max: number;\n    range: number;\n    quartiles: {\n        q1: number;\n        q2: number;\n        q3: number;\n    };\n    outliers: number[];\n    correlation: Record<string, number>;\n}\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\analytics-types.d.ts",
        "start": 284,
        "end": 336,
        "startLoc": {
          "line": 284,
          "column": 1,
          "position": 2366
        },
        "endLoc": {
          "line": 336,
          "column": 7,
          "position": 2769
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\analytics-types.ts",
        "start": 336,
        "end": 392,
        "startLoc": {
          "line": 336,
          "column": 1,
          "position": 2429
        },
        "endLoc": {
          "line": 392,
          "column": 80,
          "position": 2836
        }
      }
    },
    {
      "format": "typescript",
      "lines": 66,
      "fragment": "export interface CreateMetricRequest {\n    name: string;\n    type: AnalyticsMetric['type'];\n    unit: string;\n    category: string;\n    subcategory?: string;\n    source: string;\n    tags: string[];\n    metadata: Record<string, any>;\n}\nexport interface UpdateMetricRequest {\n    name?: string;\n    unit?: string;\n    category?: string;\n    subcategory?: string;\n    tags?: string[];\n    metadata?: Record<string, any>;\n    status?: AnalyticsMetric['status'];\n}\nexport interface CreateKPIRequest {\n    name: string;\n    description: string;\n    type: KPI['type'];\n    category: string;\n    unit: string;\n    targetValue: number;\n    formula: string;\n    dataSource: string;\n    frequency: KPI['frequency'];\n    owner: string;\n    stakeholders: string[];\n}\nexport interface CreateReportRequest {\n    name: string;\n    description: string;\n    type: Report['type'];\n    template: string;\n    data: Omit<ReportData, 'trend'>[];\n    filters: ReportFilter[];\n    schedule?: ReportSchedule;\n    recipients: string[];\n    format: Report['format'];\n    isPublic: boolean;\n}\nexport interface CreateDashboardRequest {\n    name: string;\n    description: string;\n    type: Dashboard['type'];\n    layout: DashboardLayout;\n    widgets: Omit<DashboardWidget, 'data'>[];\n    filters: DashboardFilter[];\n    isPublic: boolean;\n    refreshInterval: number;\n}\nexport interface AnalyticsResponse<T = any> {\n    success: boolean;\n    data: T;\n    message?: string;\n    error?: string;\n    metadata?: {\n        timestamp: Date;\n        executionTime: number;\n        cacheHit: boolean;\n    };\n}\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\analytics-types.d.ts",
        "start": 336,
        "end": 401,
        "startLoc": {
          "line": 336,
          "column": 1,
          "position": 2769
        },
        "endLoc": {
          "line": 401,
          "column": 7,
          "position": 3276
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\analytics-types.ts",
        "start": 396,
        "end": 467,
        "startLoc": {
          "line": 396,
          "column": 1,
          "position": 2843
        },
        "endLoc": {
          "line": 467,
          "column": 80,
          "position": 3356
        }
      }
    },
    {
      "format": "typescript",
      "lines": 32,
      "fragment": "export interface AnalyticsConfig {\n    realTimeProcessing: boolean;\n    anomalyDetection: boolean;\n    forecasting: boolean;\n    seasonalityAnalysis: boolean;\n    correlationAnalysis: boolean;\n    cacheEnabled: boolean;\n    cacheTTL: number;\n    maxDataPoints: number;\n    batchSize: number;\n}\nexport interface BIConfig {\n    kpiTracking: boolean;\n    competitiveAnalysis: boolean;\n    roiAnalysis: boolean;\n    riskAssessment: boolean;\n    opportunityAnalysis: boolean;\n    benchmarking: boolean;\n    alerting: boolean;\n    reporting: boolean;\n}\nexport interface DashboardConfig {\n    realTimeUpdates: boolean;\n    autoRefresh: boolean;\n    refreshInterval: number;\n    maxWidgets: number;\n    customWidgets: boolean;\n    mobileResponsive: boolean;\n    exportEnabled: boolean;\n    sharingEnabled: boolean;\n}\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\analytics-types.d.ts",
        "start": 401,
        "end": 432,
        "startLoc": {
          "line": 401,
          "column": 1,
          "position": 3276
        },
        "endLoc": {
          "line": 432,
          "column": 7,
          "position": 3481
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\analytics-types.ts",
        "start": 471,
        "end": 505,
        "startLoc": {
          "line": 471,
          "column": 1,
          "position": 3363
        },
        "endLoc": {
          "line": 505,
          "column": 80,
          "position": 3571
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ", {\n    error?: string;\n    userId?: string;\n    sessionId?: string;\n    duration?: number;\n    timestamp?: string;\n    responseTime?: number;\n    metadata?: Record<string, any>;\n    source?: string;\n    action?: string;\n    eventType?: \"user_action\" | \"system_event\" | \"api_request\" | \"user_login\" | \"user_logout\" | \"page_view\" | \"button_click\" | \"company_created\" | \"company_updated\" | \"contact_created\" | \"contact_updated\" | \"deal_created\" | \"deal_updated\" | \"deal_stage_changed\" | \"agent_started\" | \"agent_completed\" | \"agent_failed\" | \"agent_cancelled\" | \"error_occurred\" | \"performance_metric\";\n    orgId?: string;\n    correlationId?: string;\n    entityId?: string;\n    entity?: string;\n    stackTrace?: string;\n    errorCode?: string;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\analytics-schemas.d.ts",
        "start": 37,
        "end": 54,
        "startLoc": {
          "line": 37,
          "column": 2,
          "position": 608
        },
        "endLoc": {
          "line": 54,
          "column": 2,
          "position": 823
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\analytics-schemas.d.ts",
        "start": 20,
        "end": 37,
        "startLoc": {
          "line": 20,
          "column": 11,
          "position": 393
        },
        "endLoc": {
          "line": 37,
          "column": 2,
          "position": 608
        }
      }
    },
    {
      "format": "typescript",
      "lines": 52,
      "fragment": "z.ZodObject<{\n        eventType: z.ZodEnum<[\"user_login\", \"user_logout\", \"user_action\", \"page_view\", \"button_click\", \"company_created\", \"company_updated\", \"contact_created\", \"contact_updated\", \"deal_created\", \"deal_updated\", \"deal_stage_changed\", \"agent_started\", \"agent_completed\", \"agent_failed\", \"agent_cancelled\", \"api_request\", \"error_occurred\", \"performance_metric\", \"system_event\"]>;\n        timestamp: z.ZodString;\n        orgId: z.ZodString;\n        userId: z.ZodOptional<z.ZodString>;\n        sessionId: z.ZodOptional<z.ZodString>;\n        correlationId: z.ZodOptional<z.ZodString>;\n        source: z.ZodDefault<z.ZodString>;\n        action: z.ZodOptional<z.ZodString>;\n        entity: z.ZodOptional<z.ZodString>;\n        entityId: z.ZodOptional<z.ZodString>;\n        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;\n        duration: z.ZodOptional<z.ZodNumber>;\n        responseTime: z.ZodOptional<z.ZodNumber>;\n        error: z.ZodOptional<z.ZodString>;\n        errorCode: z.ZodOptional<z.ZodString>;\n        stackTrace: z.ZodOptional<z.ZodString>;\n    }, \"strip\", z.ZodTypeAny, {\n        error?: string;\n        userId?: string;\n        sessionId?: string;\n        duration?: number;\n        timestamp?: string;\n        responseTime?: number;\n        metadata?: Record<string, any>;\n        source?: string;\n        action?: string;\n        eventType?: \"user_action\" | \"system_event\" | \"api_request\" | \"user_login\" | \"user_logout\" | \"page_view\" | \"button_click\" | \"company_created\" | \"company_updated\" | \"contact_created\" | \"contact_updated\" | \"deal_created\" | \"deal_updated\" | \"deal_stage_changed\" | \"agent_started\" | \"agent_completed\" | \"agent_failed\" | \"agent_cancelled\" | \"error_occurred\" | \"performance_metric\";\n        orgId?: string;\n        correlationId?: string;\n        entityId?: string;\n        entity?: string;\n        stackTrace?: string;\n        errorCode?: string;\n    }, {\n        error?: string;\n        userId?: string;\n        sessionId?: string;\n        duration?: number;\n        timestamp?: string;\n        responseTime?: number;\n        metadata?: Record<string, any>;\n        source?: string;\n        action?: string;\n        eventType?: \"user_action\" | \"system_event\" | \"api_request\" | \"user_login\" | \"user_logout\" | \"page_view\" | \"button_click\" | \"company_created\" | \"company_updated\" | \"contact_created\" | \"contact_updated\" | \"deal_created\" | \"deal_updated\" | \"deal_stage_changed\" | \"agent_started\" | \"agent_completed\" | \"agent_failed\" | \"agent_cancelled\" | \"error_occurred\" | \"performance_metric\";\n        orgId?: string;\n        correlationId?: string;\n        entityId?: string;\n        entity?: string;\n        stackTrace?: string;\n        errorCode?: string;\n    }>,",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\analytics-schemas.d.ts",
        "start": 58,
        "end": 109,
        "startLoc": {
          "line": 58,
          "column": 2,
          "position": 867
        },
        "endLoc": {
          "line": 109,
          "column": 2,
          "position": 1596
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\analytics-schemas.d.ts",
        "start": 3,
        "end": 54,
        "startLoc": {
          "line": 3,
          "column": 2,
          "position": 98
        },
        "endLoc": {
          "line": 54,
          "column": 2,
          "position": 824
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "{\n        error?: string;\n        userId?: string;\n        sessionId?: string;\n        duration?: number;\n        timestamp?: string;\n        responseTime?: number;\n        metadata?: Record<string, any>;\n        source?: string;\n        action?: string;\n        eventType?: \"user_action\" | \"system_event\" | \"api_request\" | \"user_login\" | \"user_logout\" | \"page_view\" | \"button_click\" | \"company_created\" | \"company_updated\" | \"contact_created\" | \"contact_updated\" | \"deal_created\" | \"deal_updated\" | \"deal_stage_changed\" | \"agent_started\" | \"agent_completed\" | \"agent_failed\" | \"agent_cancelled\" | \"error_occurred\" | \"performance_metric\";\n        orgId?: string;\n        correlationId?: string;\n        entityId?: string;\n        entity?: string;\n        stackTrace?: string;\n        errorCode?: string;\n    }[",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\analytics-schemas.d.ts",
        "start": 112,
        "end": 129,
        "startLoc": {
          "line": 112,
          "column": 2,
          "position": 1628
        },
        "endLoc": {
          "line": 129,
          "column": 2,
          "position": 1842
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\analytics-schemas.d.ts",
        "start": 20,
        "end": 37,
        "startLoc": {
          "line": 20,
          "column": 2,
          "position": 395
        },
        "endLoc": {
          "line": 37,
          "column": 2,
          "position": 608
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": ", {\n    timestamp?: string;\n    events?: {\n        error?: string;\n        userId?: string;\n        sessionId?: string;\n        duration?: number;\n        timestamp?: string;\n        responseTime?: number;\n        metadata?: Record<string, any>;\n        source?: string;\n        action?: string;\n        eventType?: \"user_action\" | \"system_event\" | \"api_request\" | \"user_login\" | \"user_logout\" | \"page_view\" | \"button_click\" | \"company_created\" | \"company_updated\" | \"contact_created\" | \"contact_updated\" | \"deal_created\" | \"deal_updated\" | \"deal_stage_changed\" | \"agent_started\" | \"agent_completed\" | \"agent_failed\" | \"agent_cancelled\" | \"error_occurred\" | \"performance_metric\";\n        orgId?: string;\n        correlationId?: string;\n        entityId?: string;\n        entity?: string;\n        stackTrace?: string;\n        errorCode?: string;\n    }[];\n    batchId?: string;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\analytics-schemas.d.ts",
        "start": 131,
        "end": 152,
        "startLoc": {
          "line": 131,
          "column": 2,
          "position": 1855
        },
        "endLoc": {
          "line": 152,
          "column": 2,
          "position": 2099
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\analytics-schemas.d.ts",
        "start": 110,
        "end": 131,
        "startLoc": {
          "line": 110,
          "column": 11,
          "position": 1611
        },
        "endLoc": {
          "line": 131,
          "column": 2,
          "position": 1855
        }
      }
    },
    {
      "format": "typescript",
      "lines": 53,
      "fragment": ": z.ZodArray<z.ZodObject<{\n        eventType: z.ZodEnum<[\"user_login\", \"user_logout\", \"user_action\", \"page_view\", \"button_click\", \"company_created\", \"company_updated\", \"contact_created\", \"contact_updated\", \"deal_created\", \"deal_updated\", \"deal_stage_changed\", \"agent_started\", \"agent_completed\", \"agent_failed\", \"agent_cancelled\", \"api_request\", \"error_occurred\", \"performance_metric\", \"system_event\"]>;\n        timestamp: z.ZodString;\n        orgId: z.ZodString;\n        userId: z.ZodOptional<z.ZodString>;\n        sessionId: z.ZodOptional<z.ZodString>;\n        correlationId: z.ZodOptional<z.ZodString>;\n        source: z.ZodDefault<z.ZodString>;\n        action: z.ZodOptional<z.ZodString>;\n        entity: z.ZodOptional<z.ZodString>;\n        entityId: z.ZodOptional<z.ZodString>;\n        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;\n        duration: z.ZodOptional<z.ZodNumber>;\n        responseTime: z.ZodOptional<z.ZodNumber>;\n        error: z.ZodOptional<z.ZodString>;\n        errorCode: z.ZodOptional<z.ZodString>;\n        stackTrace: z.ZodOptional<z.ZodString>;\n    }, \"strip\", z.ZodTypeAny, {\n        error?: string;\n        userId?: string;\n        sessionId?: string;\n        duration?: number;\n        timestamp?: string;\n        responseTime?: number;\n        metadata?: Record<string, any>;\n        source?: string;\n        action?: string;\n        eventType?: \"user_action\" | \"system_event\" | \"api_request\" | \"user_login\" | \"user_logout\" | \"page_view\" | \"button_click\" | \"company_created\" | \"company_updated\" | \"contact_created\" | \"contact_updated\" | \"deal_created\" | \"deal_updated\" | \"deal_stage_changed\" | \"agent_started\" | \"agent_completed\" | \"agent_failed\" | \"agent_cancelled\" | \"error_occurred\" | \"performance_metric\";\n        orgId?: string;\n        correlationId?: string;\n        entityId?: string;\n        entity?: string;\n        stackTrace?: string;\n        errorCode?: string;\n    }, {\n        error?: string;\n        userId?: string;\n        sessionId?: string;\n        duration?: number;\n        timestamp?: string;\n        responseTime?: number;\n        metadata?: Record<string, any>;\n        source?: string;\n        action?: string;\n        eventType?: \"user_action\" | \"system_event\" | \"api_request\" | \"user_login\" | \"user_logout\" | \"page_view\" | \"button_click\" | \"company_created\" | \"company_updated\" | \"contact_created\" | \"contact_updated\" | \"deal_created\" | \"deal_updated\" | \"deal_stage_changed\" | \"agent_started\" | \"agent_completed\" | \"agent_failed\" | \"agent_cancelled\" | \"error_occurred\" | \"performance_metric\";\n        orgId?: string;\n        correlationId?: string;\n        entityId?: string;\n        entity?: string;\n        stackTrace?: string;\n        errorCode?: string;\n    }>, \"many\">;\n    pagination",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\analytics-schemas.d.ts",
        "start": 183,
        "end": 235,
        "startLoc": {
          "line": 183,
          "column": 5,
          "position": 2629
        },
        "endLoc": {
          "line": 235,
          "column": 11,
          "position": 3371
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\analytics-schemas.d.ts",
        "start": 58,
        "end": 110,
        "startLoc": {
          "line": 58,
          "column": 7,
          "position": 861
        },
        "endLoc": {
          "line": 110,
          "column": 2,
          "position": 1602
        }
      }
    },
    {
      "format": "typescript",
      "lines": 29,
      "fragment": ": z.ZodObject<{\n        orgId: z.ZodString;\n        eventTypes: z.ZodOptional<z.ZodArray<z.ZodEnum<[\"user_login\", \"user_logout\", \"user_action\", \"page_view\", \"button_click\", \"company_created\", \"company_updated\", \"contact_created\", \"contact_updated\", \"deal_created\", \"deal_updated\", \"deal_stage_changed\", \"agent_started\", \"agent_completed\", \"agent_failed\", \"agent_cancelled\", \"api_request\", \"error_occurred\", \"performance_metric\", \"system_event\"]>, \"many\">>;\n        startDate: z.ZodOptional<z.ZodString>;\n        endDate: z.ZodOptional<z.ZodString>;\n        userId: z.ZodOptional<z.ZodString>;\n        source: z.ZodOptional<z.ZodString>;\n        limit: z.ZodDefault<z.ZodNumber>;\n        offset: z.ZodDefault<z.ZodNumber>;\n    }, \"strip\", z.ZodTypeAny, {\n        userId?: string;\n        limit?: number;\n        source?: string;\n        orgId?: string;\n        startDate?: string;\n        endDate?: string;\n        eventTypes?: (\"user_action\" | \"system_event\" | \"api_request\" | \"user_login\" | \"user_logout\" | \"page_view\" | \"button_click\" | \"company_created\" | \"company_updated\" | \"contact_created\" | \"contact_updated\" | \"deal_created\" | \"deal_updated\" | \"deal_stage_changed\" | \"agent_started\" | \"agent_completed\" | \"agent_failed\" | \"agent_cancelled\" | \"error_occurred\" | \"performance_metric\")[];\n        offset?: number;\n    }, {\n        userId?: string;\n        limit?: number;\n        source?: string;\n        orgId?: string;\n        startDate?: string;\n        endDate?: string;\n        eventTypes?: (\"user_action\" | \"system_event\" | \"api_request\" | \"user_login\" | \"user_logout\" | \"page_view\" | \"button_click\" | \"company_created\" | \"company_updated\" | \"contact_created\" | \"contact_updated\" | \"deal_created\" | \"deal_updated\" | \"deal_stage_changed\" | \"agent_started\" | \"agent_completed\" | \"agent_failed\" | \"agent_cancelled\" | \"error_occurred\" | \"performance_metric\")[];\n        offset?: number;\n    }>;\n    executionTime",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\analytics-schemas.d.ts",
        "start": 251,
        "end": 279,
        "startLoc": {
          "line": 251,
          "column": 6,
          "position": 3507
        },
        "endLoc": {
          "line": 279,
          "column": 14,
          "position": 4005
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\analytics-schemas.d.ts",
        "start": 153,
        "end": 181,
        "startLoc": {
          "line": 153,
          "column": 21,
          "position": 2109
        },
        "endLoc": {
          "line": 181,
          "column": 7,
          "position": 2603
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "?: {\n        error?: string;\n        userId?: string;\n        sessionId?: string;\n        duration?: number;\n        timestamp?: string;\n        responseTime?: number;\n        metadata?: Record<string, any>;\n        source?: string;\n        action?: string;\n        eventType?: \"user_action\" | \"system_event\" | \"api_request\" | \"user_login\" | \"user_logout\" | \"page_view\" | \"button_click\" | \"company_created\" | \"company_updated\" | \"contact_created\" | \"contact_updated\" | \"deal_created\" | \"deal_updated\" | \"deal_stage_changed\" | \"agent_started\" | \"agent_completed\" | \"agent_failed\" | \"agent_cancelled\" | \"error_occurred\" | \"performance_metric\";\n        orgId?: string;\n        correlationId?: string;\n        entityId?: string;\n        entity?: string;\n        stackTrace?: string;\n        errorCode?: string;\n    }[];\n    pagination",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\analytics-schemas.d.ts",
        "start": 292,
        "end": 310,
        "startLoc": {
          "line": 292,
          "column": 5,
          "position": 4191
        },
        "endLoc": {
          "line": 310,
          "column": 11,
          "position": 4413
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\analytics-schemas.d.ts",
        "start": 112,
        "end": 130,
        "startLoc": {
          "line": 112,
          "column": 7,
          "position": 1625
        },
        "endLoc": {
          "line": 130,
          "column": 8,
          "position": 1847
        }
      }
    },
    {
      "format": "typescript",
      "lines": 38,
      "fragment": ", {\n    query?: {\n        userId?: string;\n        limit?: number;\n        source?: string;\n        orgId?: string;\n        startDate?: string;\n        endDate?: string;\n        eventTypes?: (\"user_action\" | \"system_event\" | \"api_request\" | \"user_login\" | \"user_logout\" | \"page_view\" | \"button_click\" | \"company_created\" | \"company_updated\" | \"contact_created\" | \"contact_updated\" | \"deal_created\" | \"deal_updated\" | \"deal_stage_changed\" | \"agent_started\" | \"agent_completed\" | \"agent_failed\" | \"agent_cancelled\" | \"error_occurred\" | \"performance_metric\")[];\n        offset?: number;\n    };\n    success?: boolean;\n    data?: {\n        error?: string;\n        userId?: string;\n        sessionId?: string;\n        duration?: number;\n        timestamp?: string;\n        responseTime?: number;\n        metadata?: Record<string, any>;\n        source?: string;\n        action?: string;\n        eventType?: \"user_action\" | \"system_event\" | \"api_request\" | \"user_login\" | \"user_logout\" | \"page_view\" | \"button_click\" | \"company_created\" | \"company_updated\" | \"contact_created\" | \"contact_updated\" | \"deal_created\" | \"deal_updated\" | \"deal_stage_changed\" | \"agent_started\" | \"agent_completed\" | \"agent_failed\" | \"agent_cancelled\" | \"error_occurred\" | \"performance_metric\";\n        orgId?: string;\n        correlationId?: string;\n        entityId?: string;\n        entity?: string;\n        stackTrace?: string;\n        errorCode?: string;\n    }[];\n    pagination?: {\n        limit?: number;\n        hasMore?: boolean;\n        total?: number;\n        offset?: number;\n    };\n    executionTime?: number;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\analytics-schemas.d.ts",
        "start": 317,
        "end": 354,
        "startLoc": {
          "line": 317,
          "column": 2,
          "position": 4464
        },
        "endLoc": {
          "line": 354,
          "column": 2,
          "position": 4906
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\analytics-schemas.d.ts",
        "start": 280,
        "end": 317,
        "startLoc": {
          "line": 280,
          "column": 11,
          "position": 4022
        },
        "endLoc": {
          "line": 317,
          "column": 2,
          "position": 4464
        }
      }
    },
    {
      "format": "javascript",
      "lines": 17,
      "fragment": "= {\n            enabled: true,\n            latencyThreshold: 1000,\n            memoryThreshold: 512,\n            cpuThreshold: 80,\n            responseTimeThreshold: 500,\n            errorRateThreshold: 5,\n            gcThreshold: 100,\n            cacheSizeLimit: 256,\n            connectionLimit: 100,\n            enableLazyLoading: true,\n            enableServicePooling: true,\n            enableMemoryOptimization: true,\n            enableQueryOptimization: true,\n            enableResponseCompression: true,\n            enableCacheOptimization: true,\n            ...performanceConfig",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\analytics-consolidated.service.js",
        "start": 27,
        "end": 43,
        "startLoc": {
          "line": 27,
          "column": 2,
          "position": 225
        },
        "endLoc": {
          "line": 43,
          "column": 18,
          "position": 336
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\performance-optimizer-v2.service.js",
        "start": 10,
        "end": 26,
        "startLoc": {
          "line": 10,
          "column": 2,
          "position": 85
        },
        "endLoc": {
          "line": 26,
          "column": 7,
          "position": 196
        }
      }
    },
    {
      "format": "javascript",
      "lines": 31,
      "fragment": "() {\n        const memUsage = process.memoryUsage();\n        const cpuUsage = process.cpuUsage();\n        return {\n            memoryUsage: {\n                rss: Math.round(memUsage.rss / 1024 / 1024),\n                heapTotal: Math.round(memUsage.heapTotal / 1024 / 1024),\n                heapUsed: Math.round(memUsage.heapUsed / 1024 / 1024),\n                external: Math.round(memUsage.external / 1024 / 1024),\n                arrayBuffers: Math.round(memUsage.arrayBuffers / 1024 / 1024)\n            },\n            cpuUsage: {\n                user: cpuUsage.user / 1000000,\n                system: cpuUsage.system / 1000000\n            },\n            eventLoop: {\n                lag: 0,\n                utilization: 0\n            },\n            gc: {\n                major: 0,\n                minor: 0,\n                duration: 0\n            },\n            connections: {\n                active: 0,\n                idle: 0,\n                total: 0\n            },\n            cache: {\n                hitRate: 0.95",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\analytics-consolidated.service.js",
        "start": 152,
        "end": 182,
        "startLoc": {
          "line": 152,
          "column": 29,
          "position": 1349
        },
        "endLoc": {
          "line": 182,
          "column": 5,
          "position": 1634
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\performance-optimizer-v2.service.js",
        "start": 31,
        "end": 61,
        "startLoc": {
          "line": 31,
          "column": 18,
          "position": 229
        },
        "endLoc": {
          "line": 61,
          "column": 2,
          "position": 514
        }
      }
    },
    {
      "format": "javascript",
      "lines": 53,
      "fragment": "= {\n            memoryUsage: {\n                rss: Math.round(memUsage.rss / 1024 / 1024),\n                heapTotal: Math.round(memUsage.heapTotal / 1024 / 1024),\n                heapUsed: Math.round(memUsage.heapUsed / 1024 / 1024),\n                external: Math.round(memUsage.external / 1024 / 1024),\n                arrayBuffers: Math.round(memUsage.arrayBuffers / 1024 / 1024)\n            },\n            cpuUsage: {\n                user: cpuUsage.user / 1000000,\n                system: cpuUsage.system / 1000000\n            },\n            eventLoop: {\n                lag: this.getEventLoopLag(),\n                utilization: this.getEventLoopUtilization()\n            },\n            gc: this.getGCMetrics(),\n            connections: this.getConnectionMetrics(),\n            cache: this.getCacheMetrics(),\n            queries: this.getQueryMetrics(),\n            responses: this.getResponseMetrics()\n        };\n        this.updatePrometheusMetrics();\n    }\n    async checkAndOptimize() {\n        if (this.isOptimizing)\n            return;\n        const needsOptimization = this.analyzePerformance();\n        if (needsOptimization.length === 0)\n            return;\n        this.isOptimizing = true;\n        structuredLogger.info('Performance optimization triggered', {\n            issues: needsOptimization,\n            requestId: ''\n        });\n        try {\n            for (const issue of needsOptimization) {\n                await this.optimize(issue);\n            }\n        }\n        catch (error) {\n            structuredLogger.error('Performance optimization failed', {\n                error: error instanceof Error ? error.message : String(error),\n                requestId: ''\n            });\n        }\n        finally {\n            this.isOptimizing = false;\n        }\n    }\n    analyzePerformance() {\n        const issues = [];\n        if (this.performanceMetrics",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\analytics-consolidated.service.js",
        "start": 213,
        "end": 265,
        "startLoc": {
          "line": 213,
          "column": 2,
          "position": 1856
        },
        "endLoc": {
          "line": 265,
          "column": 19,
          "position": 2344
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\performance-optimizer-v2.service.js",
        "start": 92,
        "end": 144,
        "startLoc": {
          "line": 92,
          "column": 2,
          "position": 736
        },
        "endLoc": {
          "line": 144,
          "column": 8,
          "position": 1224
        }
      }
    },
    {
      "format": "javascript",
      "lines": 50,
      "fragment": ".connectionLimit) {\n            issues.push('connection');\n        }\n        return issues;\n    }\n    async optimize(issue) {\n        const startTime = Date.now();\n        let result;\n        try {\n            switch (issue) {\n                case 'memory':\n                    result = await this.optimizeMemory();\n                    break;\n                case 'cpu':\n                    result = await this.optimizeCPU();\n                    break;\n                case 'latency':\n                    result = await this.optimizeLatency();\n                    break;\n                case 'cache':\n                    result = await this.optimizeCache();\n                    break;\n                case 'query':\n                    result = await this.optimizeQueries();\n                    break;\n                case 'connection':\n                    result = await this.optimizeConnections();\n                    break;\n                default:\n                    throw new Error(`Unknown optimization type: ${issue}`);\n            }\n            result.duration = Date.now() - startTime;\n            this.optimizations.push(result);\n            structuredLogger.info('Performance optimization completed', {\n                type: result.type,\n                action: result.action,\n                impact: result.impact,\n                duration: result.duration,\n                success: result.success,\n                requestId: ''\n            });\n            return result;\n        }\n        catch (error) {\n            result = {\n                type: issue,\n                action: 'failed',\n                impact: 'high',\n                duration: Date.now() - startTime,\n                before: this.performanceMetrics",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\analytics-consolidated.service.js",
        "start": 280,
        "end": 329,
        "startLoc": {
          "line": 280,
          "column": 18,
          "position": 2532
        },
        "endLoc": {
          "line": 329,
          "column": 19,
          "position": 2931
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\performance-optimizer-v2.service.js",
        "start": 159,
        "end": 208,
        "startLoc": {
          "line": 159,
          "column": 7,
          "position": 1412
        },
        "endLoc": {
          "line": 208,
          "column": 8,
          "position": 1811
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ".memoryUsage };\n        return {\n            type: 'memory',\n            action: 'gc_and_cache_cleanup',\n            impact: 'medium',\n            duration: 0,\n            before,\n            after,\n            success: after.rss < before.rss\n        };\n    }\n    async optimizeCPU() {\n        const before = { ...this.performanceMetrics",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\analytics-consolidated.service.js",
        "start": 485,
        "end": 497,
        "startLoc": {
          "line": 485,
          "column": 19,
          "position": 4674
        },
        "endLoc": {
          "line": 497,
          "column": 19,
          "position": 4763
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\performance-optimizer-v2.service.js",
        "start": 226,
        "end": 238,
        "startLoc": {
          "line": 226,
          "column": 8,
          "position": 1977
        },
        "endLoc": {
          "line": 238,
          "column": 8,
          "position": 2066
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ".cache };\n        return {\n            type: 'cache',\n            action: 'cache_strategy_optimization',\n            impact: 'medium',\n            duration: 0,\n            before,\n            after,\n            success: after.hitRate > before.hitRate\n        };\n    }\n    async optimizeQueries() {\n        const before = { ...this.performanceMetrics",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\analytics-consolidated.service.js",
        "start": 539,
        "end": 551,
        "startLoc": {
          "line": 539,
          "column": 19,
          "position": 5123
        },
        "endLoc": {
          "line": 551,
          "column": 19,
          "position": 5212
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\performance-optimizer-v2.service.js",
        "start": 280,
        "end": 292,
        "startLoc": {
          "line": 280,
          "column": 8,
          "position": 2426
        },
        "endLoc": {
          "line": 292,
          "column": 8,
          "position": 2515
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ".queries };\n        return {\n            type: 'query',\n            action: 'slow_query_optimization',\n            impact: 'high',\n            duration: 0,\n            before,\n            after,\n            success: after.slow < before.slow\n        };\n    }\n    async optimizeConnections() {\n        const before = { ...this.performanceMetrics",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\analytics-consolidated.service.js",
        "start": 556,
        "end": 568,
        "startLoc": {
          "line": 556,
          "column": 19,
          "position": 5266
        },
        "endLoc": {
          "line": 568,
          "column": 19,
          "position": 5355
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\performance-optimizer-v2.service.js",
        "start": 297,
        "end": 309,
        "startLoc": {
          "line": 297,
          "column": 8,
          "position": 2569
        },
        "endLoc": {
          "line": 309,
          "column": 8,
          "position": 2658
        }
      }
    },
    {
      "format": "javascript",
      "lines": 37,
      "fragment": ".connections };\n        return {\n            type: 'connection',\n            action: 'connection_pool_optimization',\n            impact: 'medium',\n            duration: 0,\n            before,\n            after,\n            success: after.active < before.active\n        };\n    }\n    async clearOldCacheEntries() {\n        await new Promise(resolve => setTimeout(resolve, 10));\n    }\n    async enableLazyLoading() {\n        await new Promise(resolve => setTimeout(resolve, 20));\n    }\n    async optimizeServicePools() {\n        await new Promise(resolve => setTimeout(resolve, 15));\n    }\n    async optimizeEventLoop() {\n        await new Promise(resolve => setTimeout(resolve, 5));\n    }\n    async enableResponseCompression() {\n        await new Promise(resolve => setTimeout(resolve, 10));\n    }\n    async optimizeCacheStrategy() {\n        await new Promise(resolve => setTimeout(resolve, 25));\n    }\n    async optimizeSlowQueries() {\n        await new Promise(resolve => setTimeout(resolve, 30));\n    }\n    async optimizeConnectionPool() {\n        await new Promise(resolve => setTimeout(resolve, 20));\n    }\n    getEventLoopLag() {\n        return",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\analytics-consolidated.service.js",
        "start": 571,
        "end": 607,
        "startLoc": {
          "line": 571,
          "column": 19,
          "position": 5393
        },
        "endLoc": {
          "line": 607,
          "column": 7,
          "position": 5733
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\performance-optimizer-v2.service.js",
        "start": 312,
        "end": 348,
        "startLoc": {
          "line": 312,
          "column": 8,
          "position": 2696
        },
        "endLoc": {
          "line": 348,
          "column": 6,
          "position": 3036
        }
      }
    },
    {
      "format": "javascript",
      "lines": 22,
      "fragment": "return 0;\n    }\n    getEventLoopUtilization() {\n        return 0;\n    }\n    getGCMetrics() {\n        return { major: 0, minor: 0, duration: 0 };\n    }\n    getConnectionMetrics() {\n        return { active: 0, idle: 0, total: 0 };\n    }\n    getCacheMetrics() {\n        return { hitRate: 0.95, size: 0, evictions: 0 };\n    }\n    getQueryMetrics() {\n        return { total: 0, slow: 0, averageTime: 0 };\n    }\n    getResponseMetrics() {\n        return { total: 0, compressed: 0, averageSize: 0 };\n    }\n    updatePrometheusMetrics() {\n        metrics.memoryUsage.labels('rss').set(this.performanceMetrics",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\analytics-consolidated.service.js",
        "start": 607,
        "end": 628,
        "startLoc": {
          "line": 607,
          "column": 9,
          "position": 5733
        },
        "endLoc": {
          "line": 628,
          "column": 19,
          "position": 5953
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\performance-optimizer-v2.service.js",
        "start": 353,
        "end": 394,
        "startLoc": {
          "line": 353,
          "column": 9,
          "position": 3104
        },
        "endLoc": {
          "line": 394,
          "column": 8,
          "position": 3344
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": "};\n    }\n    async forceOptimization(type) {\n        const issues = type ? [type] : this.analyzePerformance();\n        const results = [];\n        for (const issue of issues) {\n            const result = await this.optimize(issue);\n            results.push(result);\n        }\n        return results;\n    }\n    updateConfig(analyticsConfig",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\analytics-consolidated.service.js",
        "start": 659,
        "end": 670,
        "startLoc": {
          "line": 659,
          "column": 9,
          "position": 6286
        },
        "endLoc": {
          "line": 670,
          "column": 16,
          "position": 6393
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\performance-optimizer-v2.service.js",
        "start": 410,
        "end": 421,
        "startLoc": {
          "line": 410,
          "column": 9,
          "position": 3563
        },
        "endLoc": {
          "line": 421,
          "column": 10,
          "position": 3670
        }
      }
    },
    {
      "format": "typescript",
      "lines": 70,
      "fragment": "export interface PerformanceConfig {\n    enabled: boolean;\n    latencyThreshold: number;\n    memoryThreshold: number;\n    cpuThreshold: number;\n    responseTimeThreshold: number;\n    errorRateThreshold: number;\n    gcThreshold: number;\n    cacheSizeLimit: number;\n    connectionLimit: number;\n    enableLazyLoading: boolean;\n    enableServicePooling: boolean;\n    enableMemoryOptimization: boolean;\n    enableQueryOptimization: boolean;\n    enableResponseCompression: boolean;\n    enableCacheOptimization: boolean;\n}\nexport interface PerformanceMetrics {\n    memoryUsage: {\n        rss: number;\n        heapTotal: number;\n        heapUsed: number;\n        external: number;\n        arrayBuffers: number;\n    };\n    cpuUsage: {\n        user: number;\n        system: number;\n    };\n    eventLoop: {\n        lag: number;\n        utilization: number;\n    };\n    gc: {\n        major: number;\n        minor: number;\n        duration: number;\n    };\n    connections: {\n        active: number;\n        idle: number;\n        total: number;\n    };\n    cache: {\n        hitRate: number;\n        size: number;\n        evictions: number;\n    };\n    queries: {\n        total: number;\n        slow: number;\n        averageTime: number;\n    };\n    responses: {\n        total: number;\n        compressed: number;\n        averageSize: number;\n    };\n}\nexport interface OptimizationResult {\n    type: 'memory' | 'cpu' | 'latency' | 'cache' | 'query' | 'connection';\n    action: string;\n    impact: 'low' | 'medium' | 'high';\n    duration: number;\n    before: any;\n    after: any;\n    success: boolean;\n    error?: string;\n}\nexport interface",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\analytics-consolidated.service.d.ts",
        "start": 2,
        "end": 71,
        "startLoc": {
          "line": 2,
          "column": 1,
          "position": 25
        },
        "endLoc": {
          "line": 71,
          "column": 10,
          "position": 495
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\performance-optimizer-v2.service.d.ts",
        "start": 1,
        "end": 87,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 87,
          "column": 6,
          "position": 517
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": ";\n    private optimizeMemory;\n    private optimizeCPU;\n    private optimizeLatency;\n    private optimizeCache;\n    private optimizeQueries;\n    private optimizeConnections;\n    private clearOldCacheEntries;\n    private enableLazyLoading;\n    private optimizeServicePools;\n    private optimizeEventLoop;\n    private enableResponseCompression;\n    private optimizeCacheStrategy;\n    private optimizeSlowQueries;\n    private optimizeConnectionPool;\n    private getEventLoopLag;\n    private getEventLoopUtilization;\n    private getGCMetrics;\n    private getConnectionMetrics;\n    private getCacheMetrics;\n    private getQueryMetrics;\n    private getResponseMetrics;\n    private updatePrometheusMetrics;\n    private",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\analytics-consolidated.service.d.ts",
        "start": 150,
        "end": 173,
        "startLoc": {
          "line": 150,
          "column": 20,
          "position": 1250
        },
        "endLoc": {
          "line": 173,
          "column": 8,
          "position": 1385
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\performance-optimizer-v2.service.d.ts",
        "start": 82,
        "end": 105,
        "startLoc": {
          "line": 82,
          "column": 9,
          "position": 556
        },
        "endLoc": {
          "line": 105,
          "column": 10,
          "position": 691
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "}\ninterface Alert {\n    id: string;\n    ruleId: string;\n    name: string;\n    description: string;\n    severity: 'low' | 'medium' | 'high' | 'critical';\n    status: 'active' | 'resolved' | 'acknowledged';\n    metric: string;\n    value: number;\n    threshold: number;\n    timestamp: string;\n    resolvedAt?: string;\n    acknowledgedAt?: string;\n    acknowledgedBy?: string;\n    labels?: Record<string, string>;\n    context?: Record<string, any>;\n}\ndeclare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\alerts.d.ts",
        "start": 14,
        "end": 32,
        "startLoc": {
          "line": 14,
          "column": 1,
          "position": 138
        },
        "endLoc": {
          "line": 32,
          "column": 8,
          "position": 290
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\alerts.ts",
        "start": 14,
        "end": 34,
        "startLoc": {
          "line": 14,
          "column": 1,
          "position": 142
        },
        "endLoc": {
          "line": 34,
          "column": 10,
          "position": 296
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": "};\n        const response = await fetch(config.url, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                ...config.headers\n            },\n            body: JSON.stringify(payload)\n        });\n        if (!response.ok) {\n            throw new Error(`Webhook request failed with status ${response.status}`);\n        }\n    }\n    async sendEmailAlert",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\alerting-system.js",
        "start": 223,
        "end": 236,
        "startLoc": {
          "line": 223,
          "column": 9,
          "position": 1999
        },
        "endLoc": {
          "line": 236,
          "column": 15,
          "position": 2104
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\alerting-system.js",
        "start": 198,
        "end": 211,
        "startLoc": {
          "line": 198,
          "column": 9,
          "position": 1787
        },
        "endLoc": {
          "line": 211,
          "column": 22,
          "position": 1892
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": "}]\n        };\n        const response = await fetch(config.webhookUrl, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(payload)\n        });\n        if (!response.ok) {\n            throw new Error(`Slack request failed with status ${response.status}`);\n        }\n    }\n    getSeverityColor",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\alerting-system.js",
        "start": 310,
        "end": 323,
        "startLoc": {
          "line": 310,
          "column": 17,
          "position": 2726
        },
        "endLoc": {
          "line": 323,
          "column": 17,
          "position": 2826
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\alerting-system.js",
        "start": 274,
        "end": 287,
        "startLoc": {
          "line": 274,
          "column": 17,
          "position": 2428
        },
        "endLoc": {
          "line": 287,
          "column": 6,
          "position": 2528
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "export interface Alert {\n    id: string;\n    name: string;\n    severity: 'low' | 'medium' | 'high' | 'critical';\n    message: string;\n    details?: Record<string, any>;\n    timestamp: Date;\n    resolved: boolean;\n    resolvedAt?: Date;\n    tags?: string[];\n}\nexport interface AlertRule {\n    id: string;\n    name: string;\n    condition: () => Promise<boolean>;\n    severity: 'low' | 'medium' | 'high' | 'critical';\n    message: string;\n    cooldown?: number;\n    enabled",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\alerting-system.d.ts",
        "start": 1,
        "end": 19,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 19,
          "column": 8,
          "position": 168
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\alerting-system.ts",
        "start": 4,
        "end": 22,
        "startLoc": {
          "line": 4,
          "column": 1,
          "position": 27
        },
        "endLoc": {
          "line": 22,
          "column": 11,
          "position": 195
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "export interface AIRequest {\n    prompt: string;\n    type: 'chat' | 'image' | 'tts';\n    options?: Record<string, any>;\n}\nexport interface AIResponse {\n    content: string;\n    usage?: {\n        tokens: number;\n        cost: number;\n    };\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\ai-router.d.ts",
        "start": 1,
        "end": 13,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 13,
          "column": 8,
          "position": 90
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\ai-router.ts",
        "start": 1,
        "end": 15,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 15,
          "column": 6,
          "position": 92
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "timestamp: Date;\n    organizationId: string;\n    createdBy: string;\n    metadata?: Record<string, any>;\n    tags: string[];\n}\nexport interface CreatePredictionRequest {\n    modelId: string;\n    type: Prediction['type'];\n    input: Record<string, any>;\n    metadata?: Record<string, any>;\n}\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\ai-ml-types.d.ts",
        "start": 10,
        "end": 22,
        "startLoc": {
          "line": 10,
          "column": 5,
          "position": 104
        },
        "endLoc": {
          "line": 22,
          "column": 7,
          "position": 203
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\ai-ml-types.ts",
        "start": 22,
        "end": 36,
        "startLoc": {
          "line": 22,
          "column": 3,
          "position": 119
        },
        "endLoc": {
          "line": 36,
          "column": 80,
          "position": 220
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "}\nexport interface Forecast {\n    id: string;\n    modelId: string;\n    series: string;\n    horizon: number;\n    frequency: 'hourly' | 'daily' | 'weekly' | 'monthly' | 'yearly';\n    predictions: ForecastPoint[];\n    confidenceInterval: {\n        lower: number[];\n        upper: number[];\n    };\n    accuracy: number;\n    mape",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\ai-ml-types.d.ts",
        "start": 26,
        "end": 39,
        "startLoc": {
          "line": 26,
          "column": 1,
          "position": 232
        },
        "endLoc": {
          "line": 39,
          "column": 5,
          "position": 338
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\ai-ml-types.ts",
        "start": 44,
        "end": 57,
        "startLoc": {
          "line": 44,
          "column": 1,
          "position": 258
        },
        "endLoc": {
          "line": 57,
          "column": 7,
          "position": 364
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "timestamp: Date;\n    organizationId: string;\n    metadata?: Record<string, any>;\n}\nexport interface CreateForecastRequest {\n    modelId: string;\n    series: string;\n    horizon: number;\n    frequency: Forecast['frequency'];\n    input: {\n        baseValue?: number;\n        trend?: number;\n        seasonality?: number;\n        confidenceLevel?: number;\n    };\n    metadata?: Record<string, any>;\n}\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\ai-ml-types.d.ts",
        "start": 42,
        "end": 59,
        "startLoc": {
          "line": 42,
          "column": 5,
          "position": 359
        },
        "endLoc": {
          "line": 59,
          "column": 7,
          "position": 485
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\ai-ml-types.ts",
        "start": 61,
        "end": 80,
        "startLoc": {
          "line": 61,
          "column": 3,
          "position": 394
        },
        "endLoc": {
          "line": 80,
          "column": 80,
          "position": 522
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "reason: string;\n    metadata: Record<string, any>;\n}\nexport interface Recommendation {\n    id: string;\n    modelId: string;\n    userId?: string;\n    itemId?: string;\n    context: Record<string, any>;\n    recommendations: RecommendationItem[];\n    confidence: number;\n    algorithm",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\ai-ml-types.d.ts",
        "start": 76,
        "end": 87,
        "startLoc": {
          "line": 76,
          "column": 5,
          "position": 628
        },
        "endLoc": {
          "line": 87,
          "column": 10,
          "position": 717
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\ai-ml-types.ts",
        "start": 106,
        "end": 117,
        "startLoc": {
          "line": 106,
          "column": 3,
          "position": 684
        },
        "endLoc": {
          "line": 117,
          "column": 7,
          "position": 773
        }
      }
    },
    {
      "format": "typescript",
      "lines": 48,
      "fragment": "version: string;\n    enabled: boolean;\n    maxRetries: number;\n    timeoutMs: number;\n}\nexport interface AgentPolicy {\n    requiresApproval: boolean;\n    maxCostEUR: number;\n    allowedProviders: ('mistral' | 'azure-openai')[];\n    sensitivityLevel: 'low' | 'medium' | 'high';\n    rateLimitPerHour: number;\n}\nexport interface AgentRun {\n    id: string;\n    agentId: string;\n    organizationId: string;\n    userId: string;\n    status: 'pending' | 'running' | 'completed' | 'failed' | 'cancelled';\n    inputs: Record<string, any>;\n    outputs?: Record<string, any>;\n    error?: string;\n    startedAt: Date;\n    completedAt?: Date;\n    durationMs?: number;\n    costEUR: number;\n    provider: 'mistral' | 'azure-openai' | null;\n    retryCount: number;\n    idempotencyKey?: string;\n    correlationId: string;\n    metadata: Record<string, any>;\n}\nexport interface AgentTask {\n    id: string;\n    runId: string;\n    agentId: string;\n    organizationId: string;\n    step: number;\n    name: string;\n    status: 'pending' | 'running' | 'completed' | 'failed';\n    inputs: Record<string, any>;\n    outputs?: Record<string, any>;\n    error?: string;\n    startedAt: Date;\n    completedAt?: Date;\n    durationMs?: number;\n    costEUR: number;\n}\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\ai-ml-types.d.ts",
        "start": 101,
        "end": 148,
        "startLoc": {
          "line": 101,
          "column": 5,
          "position": 843
        },
        "endLoc": {
          "line": 148,
          "column": 7,
          "position": 1245
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\ai-ml-types.ts",
        "start": 137,
        "end": 188,
        "startLoc": {
          "line": 137,
          "column": 3,
          "position": 912
        },
        "endLoc": {
          "line": 188,
          "column": 80,
          "position": 1318
        }
      }
    },
    {
      "format": "typescript",
      "lines": 30,
      "fragment": "export interface RunAgentRequest {\n    agentId: string;\n    inputs: Record<string, any>;\n    idempotencyKey?: string;\n    maxCostEUR?: number;\n    providerHint?: 'mistral' | 'azure-openai';\n    priority?: 'low' | 'normal' | 'high';\n    metadata?: Record<string, any>;\n}\nexport interface RunAgentResponse {\n    runId: string;\n    status: AgentRun['status'];\n    estimatedDurationMs: number;\n    estimatedCostEUR: number;\n    queuePosition?: number;\n}\nexport interface GetAgentRunResponse {\n    run: AgentRun;\n    tasks: AgentTask[];\n    logs: AgentLog[];\n}\nexport interface AgentLog {\n    id: string;\n    runId: string;\n    level: 'debug' | 'info' | 'warn' | 'error';\n    message: string;\n    timestamp: Date;\n    metadata?: Record<string, any>;\n}\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\ai-ml-types.d.ts",
        "start": 148,
        "end": 177,
        "startLoc": {
          "line": 148,
          "column": 1,
          "position": 1245
        },
        "endLoc": {
          "line": 177,
          "column": 7,
          "position": 1488
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\ai-ml-types.ts",
        "start": 192,
        "end": 225,
        "startLoc": {
          "line": 192,
          "column": 1,
          "position": 1325
        },
        "endLoc": {
          "line": 225,
          "column": 80,
          "position": 1572
        }
      }
    },
    {
      "format": "typescript",
      "lines": 78,
      "fragment": "export interface CockpitOverview {\n    agents: {\n        total: number;\n        running: number;\n        completed: number;\n        failed: number;\n        queued: number;\n    };\n    costs: {\n        totalEUR: number;\n        todayEUR: number;\n        averagePerRun: number;\n        budgetUsedPct: number;\n    };\n    performance: {\n        avgDurationMs: number;\n        successRate: number;\n        p95DurationMs: number;\n        throughputPerHour: number;\n    };\n    providers: {\n        mistralUsage: number;\n        azureOpenAIUsage: number;\n        fallbackRate: number;\n    };\n    alerts: CockpitAlert[];\n    timestamp: Date;\n}\nexport interface CockpitAlert {\n    id: string;\n    type: 'budget' | 'performance' | 'error' | 'capacity';\n    severity: 'info' | 'warning' | 'error' | 'critical';\n    message: string;\n    timestamp: Date;\n    acknowledged: boolean;\n}\nexport interface AgentMetrics {\n    agentId: string;\n    name: string;\n    category: string;\n    runs: {\n        total: number;\n        completed: number;\n        failed: number;\n        avgDurationMs: number;\n        successRate: number;\n    };\n    costs: {\n        totalEUR: number;\n        avgCostPerRun: number;\n        costTrend: 'up' | 'down' | 'stable';\n    };\n    performance: {\n        p50DurationMs: number;\n        p95DurationMs: number;\n        p99DurationMs: number;\n        throughputPerHour: number;\n    };\n    lastRun?: Date;\n    enabled: boolean;\n}\nexport interface CostMetrics {\n    organizationId: string;\n    period: 'hour' | 'day' | 'week' | 'month';\n    totalCostEUR: number;\n    budgetEUR: number;\n    budgetUsedPct: number;\n    costByProvider: Record<string, number>;\n    costByAgent: Record<string, number>;\n    costByCategory: Record<string, number>;\n    trend: Array<{\n        timestamp: Date;\n        cost: number;\n    }>;\n    projectedMonthlyEUR: number;\n    alerts: CockpitAlert[];\n}\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\ai-ml-types.d.ts",
        "start": 177,
        "end": 254,
        "startLoc": {
          "line": 177,
          "column": 1,
          "position": 1488
        },
        "endLoc": {
          "line": 254,
          "column": 7,
          "position": 2049
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\ai-ml-types.ts",
        "start": 229,
        "end": 310,
        "startLoc": {
          "line": 229,
          "column": 1,
          "position": 1579
        },
        "endLoc": {
          "line": 310,
          "column": 80,
          "position": 2144
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", {\n    metadata?: Record<string, unknown>;\n    input?: {\n        trend?: number;\n        seasonality?: number;\n        baseValue?: number;\n        confidenceLevel?: number;\n    };\n    modelId?: string;\n    frequency?: \"monthly\" | \"daily\" | \"weekly\" | \"yearly\" | \"hourly\";\n    series?: string;\n    horizon?: number;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\ai-ml-types.d.ts",
        "start": 314,
        "end": 326,
        "startLoc": {
          "line": 314,
          "column": 2,
          "position": 2725
        },
        "endLoc": {
          "line": 326,
          "column": 2,
          "position": 2835
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\ai-ml-types.d.ts",
        "start": 302,
        "end": 314,
        "startLoc": {
          "line": 302,
          "column": 11,
          "position": 2615
        },
        "endLoc": {
          "line": 314,
          "column": 2,
          "position": 2725
        }
      }
    },
    {
      "format": "typescript",
      "lines": 80,
      "fragment": "interface ChatMessage {\n    id: string;\n    conversationId: string;\n    role: 'user' | 'assistant' | 'system';\n    content: string;\n    timestamp: string;\n    metadata?: {\n        provider?: string;\n        model?: string;\n        latency?: number;\n        costEur?: number;\n        tokensIn?: number;\n        tokensOut?: number;\n        confidence?: number;\n        sentiment?: 'positive' | 'negative' | 'neutral';\n        intent?: string;\n        entities?: Array<{\n            type: string;\n            value: string;\n            confidence: number;\n        }>;\n    };\n}\ninterface Conversation {\n    id: string;\n    organizationId: string;\n    userId: string;\n    title: string;\n    description?: string;\n    status: 'active' | 'archived' | 'deleted';\n    tags: string[];\n    context: {\n        domain?: string;\n        intent?: string;\n        entities?: Record<string, any>;\n        preferences?: Record<string, any>;\n        sessionData?: Record<string, any>;\n    };\n    summary?: string;\n    messageCount: number;\n    lastMessageAt: string;\n    createdAt: string;\n    updatedAt: string;\n}\ninterface ChatSession {\n    id: string;\n    conversationId: string;\n    userId: string;\n    organizationId: string;\n    context: {\n        currentTopic?: string;\n        userPreferences?: Record<string, any>;\n        conversationHistory?: ChatMessage[];\n        activeEntities?: Record<string, any>;\n        sessionVariables?: Record<string, any>;\n    };\n    isActive: boolean;\n    lastActivityAt: string;\n    createdAt: string;\n}\ninterface AIAnalysis {\n    sentiment: 'positive' | 'negative' | 'neutral';\n    intent: string;\n    entities: Array<{\n        type: string;\n        value: string;\n        confidence: number;\n    }>;\n    topics: string[];\n    confidence: number;\n    suggestions: string[];\n}\ninterface ChatResponse {\n    message: ChatMessage;\n    analysis: AIAnalysis;\n    suggestions: string[];\n    relatedTopics: string[];\n    contextUpdate: Record<string, any>;\n}\ndeclare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\ai-chat-advanced.service.d.ts",
        "start": 1,
        "end": 80,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 80,
          "column": 8,
          "position": 618
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\ai-chat-advanced.service.ts",
        "start": 8,
        "end": 92,
        "startLoc": {
          "line": 8,
          "column": 1,
          "position": 23
        },
        "endLoc": {
          "line": 92,
          "column": 6,
          "position": 646
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", {\n    organizationId?: string;\n    currency?: \"EUR\" | \"USD\" | \"GBP\";\n    criticalThreshold?: number;\n    timezone?: string;\n    monthlyLimit?: number;\n    dailyLimit?: number;\n    warningThreshold?: number;\n    readOnlyThreshold?: number;\n    alertChannels?: (\"email\" | \"slack\" | \"webhook\" | \"in_app\")[];\n    autoReadOnly?: boolean;\n    gracePeriod?: number;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\ai-budget-ux.service.d.ts",
        "start": 26,
        "end": 38,
        "startLoc": {
          "line": 26,
          "column": 2,
          "position": 312
        },
        "endLoc": {
          "line": 38,
          "column": 2,
          "position": 429
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\ai-budget-ux.service.d.ts",
        "start": 14,
        "end": 26,
        "startLoc": {
          "line": 14,
          "column": 11,
          "position": 195
        },
        "endLoc": {
          "line": 26,
          "column": 2,
          "position": 312
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", {\n    organizationId?: string;\n    currentUsage?: number;\n    dailyUsage?: number;\n    monthlyUsage?: number;\n    lastResetDate?: string;\n    projectedMonthlyUsage?: number;\n    averageDailyUsage?: number;\n    peakUsage?: number;\n    usageByModel?: Record<string, number>;\n    usageByUser?: Record<string, number>;\n    usageByFeature?: Record<string, number>;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\ai-budget-ux.service.d.ts",
        "start": 63,
        "end": 75,
        "startLoc": {
          "line": 63,
          "column": 2,
          "position": 694
        },
        "endLoc": {
          "line": 75,
          "column": 2,
          "position": 805
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\ai-budget-ux.service.d.ts",
        "start": 51,
        "end": 63,
        "startLoc": {
          "line": 51,
          "column": 11,
          "position": 583
        },
        "endLoc": {
          "line": 63,
          "column": 2,
          "position": 694
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", {\n    message?: string;\n    type?: \"warning\" | \"critical\" | \"limit_reached\" | \"read_only_activated\";\n    organizationId?: string;\n    timestamp?: string;\n    metadata?: Record<string, any>;\n    id?: string;\n    severity?: \"critical\" | \"low\" | \"medium\" | \"high\";\n    acknowledged?: boolean;\n    threshold?: number;\n    percentage?: number;\n    acknowledgedBy?: string;\n    acknowledgedAt?: string;\n    channels?: string[];\n    currentUsage?: number;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\ai-budget-ux.service.d.ts",
        "start": 106,
        "end": 121,
        "startLoc": {
          "line": 106,
          "column": 2,
          "position": 1170
        },
        "endLoc": {
          "line": 121,
          "column": 2,
          "position": 1319
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\ai-budget-ux.service.d.ts",
        "start": 91,
        "end": 106,
        "startLoc": {
          "line": 91,
          "column": 11,
          "position": 1021
        },
        "endLoc": {
          "line": 106,
          "column": 2,
          "position": 1170
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": ";\nexport type BudgetConfig = z.infer<typeof BudgetConfigSchema>;\nexport type BudgetUsage = z.infer<typeof BudgetUsageSchema>;\nexport type BudgetAlert = z.infer<typeof BudgetAlertSchema>;\nexport interface BudgetProgress {\n    organizationId: string;\n    currentUsage: number;\n    limit: number;\n    percentage: number;\n    status: 'safe' | 'warning' | 'critical' | 'limit_reached' | 'read_only';\n    daysRemaining: number;\n    projectedOverage: number;\n    canMakeRequests: boolean;\n    readOnlyMode: boolean;\n    gracePeriodActive: boolean;\n    gracePeriodEndsAt?: string;\n}\nexport interface BudgetInsights {\n    organizationId: string;\n    trends: {\n        dailyGrowth: number;\n        weeklyGrowth",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\ai-budget-ux.service.d.ts",
        "start": 121,
        "end": 142,
        "startLoc": {
          "line": 121,
          "column": 2,
          "position": 1320
        },
        "endLoc": {
          "line": 142,
          "column": 13,
          "position": 1509
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\ai-budget-ux.service.ts",
        "start": 48,
        "end": 71,
        "startLoc": {
          "line": 48,
          "column": 2,
          "position": 712
        },
        "endLoc": {
          "line": 71,
          "column": 14,
          "position": 903
        }
      }
    },
    {
      "format": "typescript",
      "lines": 27,
      "fragment": "};\n    recommendations: Array<{\n        type: 'optimization' | 'limit_increase' | 'usage_reduction' | 'feature_restriction';\n        priority: 'low' | 'medium' | 'high' | 'critical';\n        title: string;\n        description: string;\n        impact: string;\n        action: string;\n    }>;\n    topUsers: Array<{\n        userId: string;\n        usage: number;\n        percentage: number;\n    }>;\n    topModels: Array<{\n        model: string;\n        usage: number;\n        percentage: number;\n        costPerToken: number;\n    }>;\n    topFeatures: Array<{\n        feature: string;\n        usage: number;\n        percentage: number;\n    }>;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\ai-budget-ux.service.d.ts",
        "start": 149,
        "end": 175,
        "startLoc": {
          "line": 149,
          "column": 5,
          "position": 1554
        },
        "endLoc": {
          "line": 175,
          "column": 8,
          "position": 1749
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\ai-budget-ux.service.ts",
        "start": 79,
        "end": 106,
        "startLoc": {
          "line": 79,
          "column": 3,
          "position": 957
        },
        "endLoc": {
          "line": 106,
          "column": 6,
          "position": 1153
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", {\n    version?: string;\n    name?: string;\n    id?: string;\n    tags?: string[];\n    description?: string;\n    category?: \"ventas\" | \"finanzas\" | \"marketing\" | \"operaciones\" | \"soporte_qa\" | \"ejecutivo\";\n    priority?: \"critical\" | \"low\" | \"medium\" | \"high\";\n    enabled?: boolean;\n    retryCount?: number;\n    dependencies?: string[];\n    timeoutMs?: number;\n    costHint?: \"low\" | \"medium\" | \"high\";\n    inputs?: Record<string, string>;\n    outputs?: Record<string, string>;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\ai-agents-registry.service.d.ts",
        "start": 32,
        "end": 47,
        "startLoc": {
          "line": 32,
          "column": 2,
          "position": 449
        },
        "endLoc": {
          "line": 47,
          "column": 2,
          "position": 622
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\ai-agents-registry.service.d.ts",
        "start": 17,
        "end": 32,
        "startLoc": {
          "line": 17,
          "column": 11,
          "position": 276
        },
        "endLoc": {
          "line": 32,
          "column": 2,
          "position": 449
        }
      }
    },
    {
      "format": "typescript",
      "lines": 26,
      "fragment": ": z.ZodObject<{\n        orgId: z.ZodString;\n        userId: z.ZodString;\n        correlationId: z.ZodString;\n        idempotencyKey: z.ZodOptional<z.ZodString>;\n        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;\n        budget: z.ZodOptional<z.ZodNumber>;\n        priority: z.ZodOptional<z.ZodEnum<[\"low\", \"medium\", \"high\", \"critical\"]>>;\n    }, \"strip\", z.ZodTypeAny, {\n        userId?: string;\n        metadata?: Record<string, any>;\n        orgId?: string;\n        correlationId?: string;\n        idempotencyKey?: string;\n        priority?: \"critical\" | \"low\" | \"medium\" | \"high\";\n        budget?: number;\n    }, {\n        userId?: string;\n        metadata?: Record<string, any>;\n        orgId?: string;\n        correlationId?: string;\n        idempotencyKey?: string;\n        priority?: \"critical\" | \"low\" | \"medium\" | \"high\";\n        budget?: number;\n    }>;\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\ai-agents-registry.service.d.ts",
        "start": 78,
        "end": 103,
        "startLoc": {
          "line": 78,
          "column": 8,
          "position": 996
        },
        "endLoc": {
          "line": 103,
          "column": 2,
          "position": 1282
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\ai-agents-registry.service.d.ts",
        "start": 49,
        "end": 74,
        "startLoc": {
          "line": 49,
          "column": 28,
          "position": 650
        },
        "endLoc": {
          "line": 74,
          "column": 7,
          "position": 933
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", {\n    context?: {\n        userId?: string;\n        metadata?: Record<string, any>;\n        orgId?: string;\n        correlationId?: string;\n        idempotencyKey?: string;\n        priority?: \"critical\" | \"low\" | \"medium\" | \"high\";\n        budget?: number;\n    };\n    agentId?: string;\n    inputs?: Record<string, any>;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\ai-agents-registry.service.d.ts",
        "start": 115,
        "end": 127,
        "startLoc": {
          "line": 115,
          "column": 2,
          "position": 1403
        },
        "endLoc": {
          "line": 127,
          "column": 2,
          "position": 1515
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\ai-agents-registry.service.d.ts",
        "start": 103,
        "end": 115,
        "startLoc": {
          "line": 103,
          "column": 11,
          "position": 1291
        },
        "endLoc": {
          "line": 115,
          "column": 2,
          "position": 1403
        }
      }
    },
    {
      "format": "typescript",
      "lines": 27,
      "fragment": ";\n    context: z.ZodObject<{\n        orgId: z.ZodString;\n        userId: z.ZodString;\n        correlationId: z.ZodString;\n        idempotencyKey: z.ZodOptional<z.ZodString>;\n        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;\n        budget: z.ZodOptional<z.ZodNumber>;\n        priority: z.ZodOptional<z.ZodEnum<[\"low\", \"medium\", \"high\", \"critical\"]>>;\n    }, \"strip\", z.ZodTypeAny, {\n        userId?: string;\n        metadata?: Record<string, any>;\n        orgId?: string;\n        correlationId?: string;\n        idempotencyKey?: string;\n        priority?: \"critical\" | \"low\" | \"medium\" | \"high\";\n        budget?: number;\n    }, {\n        userId?: string;\n        metadata?: Record<string, any>;\n        orgId?: string;\n        correlationId?: string;\n        idempotencyKey?: string;\n        priority?: \"critical\" | \"low\" | \"medium\" | \"high\";\n        budget?: number;\n    }>;\n    startedAt",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\ai-agents-registry.service.d.ts",
        "start": 134,
        "end": 160,
        "startLoc": {
          "line": 134,
          "column": 3,
          "position": 1635
        },
        "endLoc": {
          "line": 160,
          "column": 10,
          "position": 1926
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\ai-agents-registry.service.d.ts",
        "start": 77,
        "end": 74,
        "startLoc": {
          "line": 77,
          "column": 2,
          "position": 992
        },
        "endLoc": {
          "line": 74,
          "column": 7,
          "position": 933
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": ", {\n    error?: string;\n    status?: \"pending\" | \"completed\" | \"failed\" | \"cancelled\" | \"running\";\n    context?: {\n        userId?: string;\n        metadata?: Record<string, any>;\n        orgId?: string;\n        correlationId?: string;\n        idempotencyKey?: string;\n        priority?: \"critical\" | \"low\" | \"medium\" | \"high\";\n        budget?: number;\n    };\n    version?: string;\n    id?: string;\n    completedAt?: string;\n    costEur?: number;\n    startedAt?: string;\n    retryCount?: number;\n    agentId?: string;\n    inputs?: Record<string, any>;\n    outputs?: Record<string, any>;\n    executionTimeMs?: number;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\ai-agents-registry.service.d.ts",
        "start": 189,
        "end": 211,
        "startLoc": {
          "line": 189,
          "column": 2,
          "position": 2236
        },
        "endLoc": {
          "line": 211,
          "column": 2,
          "position": 2450
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\ai-agents-registry.service.d.ts",
        "start": 167,
        "end": 189,
        "startLoc": {
          "line": 167,
          "column": 11,
          "position": 2022
        },
        "endLoc": {
          "line": 189,
          "column": 2,
          "position": 2236
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ", {\n    status?: \"healthy\" | \"unhealthy\" | \"degraded\";\n    updatedAt?: string;\n    errorRate?: number;\n    successRate?: number;\n    agentId?: string;\n    lastExecution?: string;\n    avgExecutionTime?: number;\n    avgCost?: number;\n    lastError?: string;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\ai-agents-registry.service.d.ts",
        "start": 233,
        "end": 243,
        "startLoc": {
          "line": 233,
          "column": 2,
          "position": 2682
        },
        "endLoc": {
          "line": 243,
          "column": 2,
          "position": 2767
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\ai-agents-registry.service.d.ts",
        "start": 223,
        "end": 233,
        "startLoc": {
          "line": 223,
          "column": 11,
          "position": 2597
        },
        "endLoc": {
          "line": 233,
          "column": 2,
          "position": 2682
        }
      }
    },
    {
      "format": "javascript",
      "lines": 19,
      "fragment": "{\n                id: dbTask.id,\n                agentId: dbTask.agentId,\n                inputs: JSON.parse(dbTask.inputs),\n                context: JSON.parse(dbTask.context),\n                status: dbTask.status,\n                priority: dbTask.priority,\n                retryCount: dbTask.retryCount,\n                maxRetries: dbTask.maxRetries,\n                timeoutMs: dbTask.timeoutMs,\n                dependencies: dbTask.dependencies ? JSON.parse(dbTask.dependencies) : undefined,\n                outputs: dbTask.outputs ? JSON.parse(dbTask.outputs) : undefined,\n                error: dbTask.error || undefined,\n                costEur: dbTask.costEur || undefined,\n                executionTimeMs: dbTask.executionTimeMs || undefined,\n                createdAt: dbTask.createdAt,\n                updatedAt: dbTask.updatedAt\n            };\n        }",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\agent-runtime.service.js",
        "start": 478,
        "end": 496,
        "startLoc": {
          "line": 478,
          "column": 2,
          "position": 5024
        },
        "endLoc": {
          "line": 496,
          "column": 2,
          "position": 5226
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\agent-runtime.service.js",
        "start": 390,
        "end": 408,
        "startLoc": {
          "line": 390,
          "column": 2,
          "position": 4165
        },
        "endLoc": {
          "line": 408,
          "column": 5,
          "position": 4367
        }
      }
    },
    {
      "format": "typescript",
      "lines": 28,
      "fragment": "agentId: z.ZodString;\n    inputs: z.ZodRecord<z.ZodString, z.ZodAny>;\n    context: z.ZodObject<{\n        orgId: z.ZodString;\n        userId: z.ZodString;\n        correlationId: z.ZodString;\n        idempotencyKey: z.ZodOptional<z.ZodString>;\n        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;\n        budget: z.ZodOptional<z.ZodNumber>;\n        priority: z.ZodOptional<z.ZodEnum<[\"low\", \"medium\", \"high\", \"critical\"]>>;\n    }, \"strip\", z.ZodTypeAny, {\n        userId?: string;\n        metadata?: Record<string, any>;\n        orgId?: string;\n        correlationId?: string;\n        idempotencyKey?: string;\n        priority?: \"critical\" | \"low\" | \"medium\" | \"high\";\n        budget?: number;\n    }, {\n        userId?: string;\n        metadata?: Record<string, any>;\n        orgId?: string;\n        correlationId?: string;\n        idempotencyKey?: string;\n        priority?: \"critical\" | \"low\" | \"medium\" | \"high\";\n        budget?: number;\n    }>;\n    status",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\agent-runtime.service.d.ts",
        "start": 38,
        "end": 65,
        "startLoc": {
          "line": 38,
          "column": 5,
          "position": 389
        },
        "endLoc": {
          "line": 65,
          "column": 7,
          "position": 705
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\ai-agents-registry.service.d.ts",
        "start": 76,
        "end": 74,
        "startLoc": {
          "line": 76,
          "column": 5,
          "position": 967
        },
        "endLoc": {
          "line": 74,
          "column": 7,
          "position": 933
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ";\n    context?: {\n        userId?: string;\n        metadata?: Record<string, any>;\n        orgId?: string;\n        correlationId?: string;\n        idempotencyKey?: string;\n        priority?: \"critical\" | \"low\" | \"medium\" | \"high\";\n        budget?: number;\n    };\n    id",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\agent-runtime.service.d.ts",
        "start": 83,
        "end": 93,
        "startLoc": {
          "line": 83,
          "column": 7,
          "position": 996
        },
        "endLoc": {
          "line": 93,
          "column": 3,
          "position": 1084
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\ai-agents-registry.service.d.ts",
        "start": 169,
        "end": 113,
        "startLoc": {
          "line": 169,
          "column": 10,
          "position": 2056
        },
        "endLoc": {
          "line": 113,
          "column": 8,
          "position": 1381
        }
      }
    },
    {
      "format": "typescript",
      "lines": 29,
      "fragment": ", {\n    error?: string;\n    status?: \"pending\" | \"completed\" | \"failed\" | \"cancelled\" | \"running\";\n    maxRetries?: number;\n    context?: {\n        userId?: string;\n        metadata?: Record<string, any>;\n        orgId?: string;\n        correlationId?: string;\n        idempotencyKey?: string;\n        priority?: \"critical\" | \"low\" | \"medium\" | \"high\";\n        budget?: number;\n    };\n    id?: string;\n    createdAt?: string;\n    updatedAt?: string;\n    scheduledAt?: string;\n    completedAt?: string;\n    priority?: \"critical\" | \"low\" | \"medium\" | \"high\";\n    costEur?: number;\n    startedAt?: string;\n    retryCount?: number;\n    dependencies?: string[];\n    agentId?: string;\n    timeoutMs?: number;\n    inputs?: Record<string, any>;\n    outputs?: Record<string, any>;\n    executionTimeMs?: number;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\agent-runtime.service.d.ts",
        "start": 108,
        "end": 136,
        "startLoc": {
          "line": 108,
          "column": 2,
          "position": 1230
        },
        "endLoc": {
          "line": 136,
          "column": 2,
          "position": 1506
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\agent-runtime.service.d.ts",
        "start": 80,
        "end": 108,
        "startLoc": {
          "line": 80,
          "column": 11,
          "position": 954
        },
        "endLoc": {
          "line": 108,
          "column": 2,
          "position": 1230
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", {\n    totalExecutions?: number;\n    averageCost?: number;\n    averageExecutionTime?: number;\n    totalCost?: number;\n    successfulExecutions?: number;\n    failedExecutions?: number;\n    cancelledExecutions?: number;\n    activeExecutions?: number;\n    queuedTasks?: number;\n    systemHealth?: \"healthy\" | \"unhealthy\" | \"degraded\";\n    lastUpdated?: string;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\agent-runtime.service.d.ts",
        "start": 162,
        "end": 174,
        "startLoc": {
          "line": 162,
          "column": 2,
          "position": 1762
        },
        "endLoc": {
          "line": 174,
          "column": 2,
          "position": 1863
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\agent-runtime.service.d.ts",
        "start": 150,
        "end": 162,
        "startLoc": {
          "line": 150,
          "column": 11,
          "position": 1661
        },
        "endLoc": {
          "line": 162,
          "column": 2,
          "position": 1762
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "export interface AgentRuntimeEvents {\n    'task:created': (task: AgentTask) => void;\n    'task:started': (task: AgentTask) => void;\n    'task:completed': (task: AgentTask) => void;\n    'task:failed': (task: AgentTask, error: Error) => void;\n    'task:retry': (task: AgentTask, retryCount: number) => void;\n    'task:cancelled': (task: AgentTask) => void;\n    'runtime:health-check': (metrics: AgentRuntimeMetrics) => void;\n    'runtime:error': (error: Error) => void;\n}\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\agent-runtime.service.d.ts",
        "start": 176,
        "end": 186,
        "startLoc": {
          "line": 176,
          "column": 1,
          "position": 1884
        },
        "endLoc": {
          "line": 186,
          "column": 7,
          "position": 2034
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\agent-runtime.service.ts",
        "start": 77,
        "end": 99,
        "startLoc": {
          "line": 77,
          "column": 1,
          "position": 951
        },
        "endLoc": {
          "line": 99,
          "column": 4,
          "position": 1102
        }
      }
    },
    {
      "format": "javascript",
      "lines": 31,
      "fragment": "}\n    async checkPermission(userId, resource, action) {\n        try {\n            const user = this.users.get(userId);\n            if (!user) {\n                return false;\n            }\n            const hasDirectPermission = user.permissions.some(permId => {\n                const permission = this.permissions.get(permId);\n                return permission && permission.resource === resource && permission.action === action;\n            });\n            if (hasDirectPermission) {\n                return true;\n            }\n            for (const roleId of user.roles) {\n                const role = this.roles.get(roleId);\n                if (role) {\n                    const hasRolePermission = role.permissions.some(permId => {\n                        const permission = this.permissions.get(permId);\n                        return permission && permission.resource === resource && permission.action === action;\n                    });\n                    if (hasRolePermission) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        catch (error) {\n            logger.error('Permission check failed', {\n                system",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-security.js",
        "start": 458,
        "end": 488,
        "startLoc": {
          "line": 458,
          "column": 5,
          "position": 4460
        },
        "endLoc": {
          "line": 488,
          "column": 7,
          "position": 4767
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\security.js",
        "start": 242,
        "end": 272,
        "startLoc": {
          "line": 242,
          "column": 5,
          "position": 2092
        },
        "endLoc": {
          "line": 272,
          "column": 6,
          "position": 2399
        }
      }
    },
    {
      "format": "javascript",
      "lines": 18,
      "fragment": ",\n            });\n            return false;\n        }\n    }\n    async logAuditEvent(event) {\n        try {\n            const auditLog = {\n                id: `audit_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n                ...event,\n                timestamp: new Date(),\n            };\n            this.auditLogs.push(auditLog);\n            if (this.auditLogs.length > 10000) {\n                this.auditLogs = this.auditLogs.slice(-10000);\n            }\n            logger.info('Audit log created', {\n                system",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-security.js",
        "start": 494,
        "end": 511,
        "startLoc": {
          "line": 494,
          "column": 8,
          "position": 4809
        },
        "endLoc": {
          "line": 511,
          "column": 7,
          "position": 4968
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\security.js",
        "start": 275,
        "end": 292,
        "startLoc": {
          "line": 275,
          "column": 7,
          "position": 2417
        },
        "endLoc": {
          "line": 292,
          "column": 8,
          "position": 2576
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": "}\n    async logSecurityEvent(event) {\n        try {\n            const securityEvent = {\n                id: `security_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n                ...event,\n                timestamp: new Date(),\n                resolved: false,\n            };\n            this.securityEvents.push(securityEvent);\n            if (this.securityEvents.length > 1000) {\n                this.securityEvents = this.securityEvents.slice(-1000);\n            }\n            await",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-security.js",
        "start": 529,
        "end": 542,
        "startLoc": {
          "line": 529,
          "column": 5,
          "position": 5099
        },
        "endLoc": {
          "line": 542,
          "column": 6,
          "position": 5238
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\security.js",
        "start": 307,
        "end": 320,
        "startLoc": {
          "line": 307,
          "column": 5,
          "position": 2696
        },
        "endLoc": {
          "line": 320,
          "column": 7,
          "position": 2835
        }
      }
    },
    {
      "format": "javascript",
      "lines": 16,
      "fragment": ";\n            }\n            const reputation = Math.random() > 0.9 ? 'malicious' : Math.random() > 0.7 ? 'suspicious' : 'good';\n            const country = ['US', 'CA', 'GB', 'DE', 'FR', 'JP', 'AU'][Math.floor(Math.random() * 7)];\n            const threatTypes = reputation === 'malicious' ? ['botnet', 'spam'] : [];\n            const confidence = reputation === 'malicious' ? 0.9 : reputation === 'suspicious' ? 0.6 : 0.95;\n            const threatIntel = {\n                ipAddress,\n                reputation,\n                country,\n                threatTypes,\n                lastSeen: new Date(),\n                confidence,\n            };\n            this.threatIntelligence.set(ipAddress, threatIntel);\n            this",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-security.js",
        "start": 574,
        "end": 589,
        "startLoc": {
          "line": 574,
          "column": 2,
          "position": 5517
        },
        "endLoc": {
          "line": 589,
          "column": 5,
          "position": 5731
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\security.js",
        "start": 341,
        "end": 356,
        "startLoc": {
          "line": 341,
          "column": 7,
          "position": 3034
        },
        "endLoc": {
          "line": 356,
          "column": 7,
          "position": 3248
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": ");\n    }\n    generateTOTPSecret() {\n        return crypto.randomBytes(20).toString('hex');\n    }\n    generateTOTPQRCode(email, secret) {\n        const issuer = 'ECONEURA-IA';\n        const otpauth = `otpauth://totp/${issuer}:${email}?secret=${secret}&issuer=${issuer}`;\n        return `https://api.qrserver.com/v1/create-qr-code/?size=200x200&data=${encodeURIComponent(otpauth)}`;\n    }\n    generateVerificationCode",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-security.js",
        "start": 614,
        "end": 624,
        "startLoc": {
          "line": 614,
          "column": 2,
          "position": 5977
        },
        "endLoc": {
          "line": 624,
          "column": 25,
          "position": 6073
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\security.js",
        "start": 433,
        "end": 443,
        "startLoc": {
          "line": 433,
          "column": 6,
          "position": 3879
        },
        "endLoc": {
          "line": 443,
          "column": 15,
          "position": 3975
        }
      }
    },
    {
      "format": "javascript",
      "lines": 17,
      "fragment": ";\n    }\n    verifyTOTPCode(secret, code) {\n        return code.length === 6 && /^\\d{6}$/.test(code);\n    }\n    generateJWT(user) {\n        const payload = {\n            userId: user.id,\n            email: user.email,\n            roles: user.roles,\n            permissions: user.permissions,\n            iat: Math.floor(Date.now() / 1000),\n            exp: Math.floor(Date.now() / 1000) + (24 * 60 * 60),\n        };\n        return jwt.sign(payload, process.env.JWT_SECRET || 'your-secret-key');\n    }\n    async",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-security.js",
        "start": 625,
        "end": 641,
        "startLoc": {
          "line": 625,
          "column": 2,
          "position": 6104
        },
        "endLoc": {
          "line": 641,
          "column": 6,
          "position": 6281
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\security.js",
        "start": 441,
        "end": 457,
        "startLoc": {
          "line": 441,
          "column": 2,
          "position": 3969
        },
        "endLoc": {
          "line": 457,
          "column": 22,
          "position": 4146
        }
      }
    },
    {
      "format": "javascript",
      "lines": 19,
      "fragment": ");\nconst MFASetupSchema = z.object({\n    userId: z.string().uuid(),\n    method: z.enum(['totp', 'sms', 'email']),\n    phoneNumber: z.string().optional(),\n    email: z.string().email().optional()\n});\nconst MFACodeSchema = z.object({\n    userId: z.string().uuid(),\n    code: z.string().length(6),\n    method: z.enum(['totp', 'sms', 'email', 'backup'])\n});\nconst RBACPermissionSchema = z.object({\n    userId: z.string().uuid(),\n    resource: z.string().min(1),\n    action: z.string().min(1),\n    context: z.record(z.any()).optional()\n});\nconst CSRFTokenSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-security-framework.service.js",
        "start": 17,
        "end": 35,
        "startLoc": {
          "line": 17,
          "column": 2,
          "position": 276
        },
        "endLoc": {
          "line": 35,
          "column": 16,
          "position": 516
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\advanced-security-framework.js",
        "start": 5,
        "end": 23,
        "startLoc": {
          "line": 5,
          "column": 2,
          "position": 60
        },
        "endLoc": {
          "line": 23,
          "column": 21,
          "position": 300
        }
      }
    },
    {
      "format": "javascript",
      "lines": 17,
      "fragment": "()\n});\nconst CSRFTokenSchema = z.object({\n    sessionId: z.string().min(1),\n    token: z.string().min(32)\n});\nconst SanitizeInputSchema = z.object({\n    input: z.string().min(1),\n    type: z.enum(['html', 'sql', 'xss', 'general']).optional()\n});\nconst ThreatDetectionSchema = z.object({\n    ipAddress: z.string().ip(),\n    userAgent: z.string().min(1),\n    request: z.record(z.any()),\n    riskFactors: z.array(z.string())\n});\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-security-framework.service.js",
        "start": 33,
        "end": 49,
        "startLoc": {
          "line": 33,
          "column": 9,
          "position": 507
        },
        "endLoc": {
          "line": 49,
          "column": 7,
          "position": 697
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\advanced-security-framework.js",
        "start": 26,
        "end": 42,
        "startLoc": {
          "line": 26,
          "column": 5,
          "position": 352
        },
        "endLoc": {
          "line": 42,
          "column": 6,
          "position": 542
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ",\n                tokenLength: 32,\n                cookieName: 'csrf-token'\n            },\n            rateLimit: {\n                enabled: true,\n                windowMs: 15 * 60 * 1000,\n                maxRequests: 100,\n                skipSuccessfulRequests: false\n            },\n            inputSanitization: {\n                enabled: true,\n                maxLength: 10000,\n                allowedTags: ['b', 'i', 'em', 'strong']",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-security-framework.service.js",
        "start": 79,
        "end": 92,
        "startLoc": {
          "line": 79,
          "column": 22,
          "position": 951
        },
        "endLoc": {
          "line": 92,
          "column": 2,
          "position": 1050
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\security\\security-manager.service.js",
        "start": 40,
        "end": 53,
        "startLoc": {
          "line": 40,
          "column": 23,
          "position": 324
        },
        "endLoc": {
          "line": 53,
          "column": 2,
          "position": 423
        }
      }
    },
    {
      "format": "typescript",
      "lines": 27,
      "fragment": ";\n    };\n    csrf: {\n        enabled: boolean;\n        secret: string;\n        tokenLength: number;\n        cookieName: string;\n    };\n    rateLimit: {\n        enabled: boolean;\n        windowMs: number;\n        maxRequests: number;\n        skipSuccessfulRequests: boolean;\n    };\n    inputSanitization: {\n        enabled: boolean;\n        maxLength: number;\n        allowedTags: string[];\n        blockedPatterns: string[];\n    };\n    threatDetection: {\n        enabled: boolean;\n        suspiciousPatterns: string[];\n        maxFailedAttempts: number;\n        lockoutDuration: number;\n    };\n    compliance",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-security-framework.service.d.ts",
        "start": 14,
        "end": 40,
        "startLoc": {
          "line": 14,
          "column": 2,
          "position": 100
        },
        "endLoc": {
          "line": 40,
          "column": 11,
          "position": 265
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\security\\security-manager.service.ts",
        "start": 25,
        "end": 51,
        "startLoc": {
          "line": 25,
          "column": 7,
          "position": 126
        },
        "endLoc": {
          "line": 51,
          "column": 2,
          "position": 290
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ";\n    severity: 'low' | 'medium' | 'high' | 'critical';\n    userId?: string;\n    sessionId?: string;\n    ipAddress: string;\n    userAgent: string;\n    resource: string;\n    action: string;\n    result: 'success' | 'failure' | 'blocked';\n    details: Record<string, any>;\n    timestamp: Date;\n    riskScore: number;\n    complianceFlags",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-security-framework.service.d.ts",
        "start": 55,
        "end": 67,
        "startLoc": {
          "line": 55,
          "column": 18,
          "position": 386
        },
        "endLoc": {
          "line": 67,
          "column": 16,
          "position": 494
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\security-compliance-enhanced.service.ts",
        "start": 21,
        "end": 33,
        "startLoc": {
          "line": 21,
          "column": 20,
          "position": 79
        },
        "endLoc": {
          "line": 33,
          "column": 2,
          "position": 186
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", {\n    query?: string;\n    userId?: string;\n    page?: number;\n    limit?: number;\n    filters?: Record<string, any>;\n    orgId?: string;\n    sortBy?: string;\n    sortOrder?: \"asc\" | \"desc\";\n    sources?: string[];\n    includeFederated?: boolean;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-search.d.ts",
        "start": 24,
        "end": 35,
        "startLoc": {
          "line": 24,
          "column": 2,
          "position": 290
        },
        "endLoc": {
          "line": 35,
          "column": 2,
          "position": 387
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\advanced-search.d.ts",
        "start": 13,
        "end": 24,
        "startLoc": {
          "line": 13,
          "column": 11,
          "position": 193
        },
        "endLoc": {
          "line": 24,
          "column": 2,
          "position": 290
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", {\n    type?: \"user\" | \"product\" | \"document\" | \"federated\";\n    timestamp?: Date;\n    metadata?: Record<string, any>;\n    url?: string;\n    title?: string;\n    id?: string;\n    source?: string;\n    score?: number;\n    content?: string;\n    highlights?: string[];\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-search.d.ts",
        "start": 58,
        "end": 69,
        "startLoc": {
          "line": 58,
          "column": 2,
          "position": 652
        },
        "endLoc": {
          "line": 69,
          "column": 2,
          "position": 757
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\advanced-search.d.ts",
        "start": 47,
        "end": 58,
        "startLoc": {
          "line": 47,
          "column": 11,
          "position": 547
        },
        "endLoc": {
          "line": 58,
          "column": 2,
          "position": 652
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": "export interface PerformanceMetric {\n    id: string;\n    name: string;\n    type: 'counter' | 'gauge' | 'histogram' | 'summary';\n    value: number;\n    labels: Record<string, string>;\n    timestamp: Date;\n    metadata?: Record<string, any>;\n}\nexport interface PerformanceAlert {\n    id: string;\n    name: string;\n    description: string;\n    severity: 'low' | 'medium' | 'high' | 'critical';\n    condition: {\n        metric: string;\n        operator: 'gt' | 'lt' | 'eq' | 'gte' | 'lte';\n        threshold: number;\n        timeWindow: number;\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-performance-monitoring.service.d.ts",
        "start": 1,
        "end": 20,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 20,
          "column": 2,
          "position": 183
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\advanced-performance-monitoring.service.ts",
        "start": 10,
        "end": 29,
        "startLoc": {
          "line": 10,
          "column": 1,
          "position": 198
        },
        "endLoc": {
          "line": 29,
          "column": 11,
          "position": 381
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": "};\n    enabled: boolean;\n    actions: {\n        type: 'email' | 'webhook' | 'slack' | 'pagerduty';\n        config: Record<string, any>;\n    }[];\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface PerformanceDashboard {\n    id: string;\n    name: string;\n    description: string;\n    widgets: {\n        id: string;\n        type: 'chart' | 'gauge' | 'table' | 'alert';\n        title: string;\n        config: Record<string, any>;\n        position: {\n            x: number;\n            y: number;\n            width: number;\n            height: number;",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-performance-monitoring.service.d.ts",
        "start": 20,
        "end": 42,
        "startLoc": {
          "line": 20,
          "column": 5,
          "position": 183
        },
        "endLoc": {
          "line": 42,
          "column": 2,
          "position": 366
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\advanced-performance-monitoring.service.ts",
        "start": 30,
        "end": 49,
        "startLoc": {
          "line": 30,
          "column": 3,
          "position": 384
        },
        "endLoc": {
          "line": 49,
          "column": 2,
          "position": 565
        }
      }
    },
    {
      "format": "typescript",
      "lines": 56,
      "fragment": "};\n    }[];\n    isPublic: boolean;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface PerformanceReport {\n    id: string;\n    name: string;\n    type: 'daily' | 'weekly' | 'monthly' | 'custom';\n    metrics: string[];\n    filters: Record<string, any>;\n    schedule?: {\n        enabled: boolean;\n        cron: string;\n        timezone: string;\n    };\n    recipients: string[];\n    format: 'pdf' | 'html' | 'json' | 'csv';\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport interface PerformanceBaseline {\n    id: string;\n    metric: string;\n    baseline: {\n        mean: number;\n        stdDev: number;\n        percentiles: {\n            p50: number;\n            p90: number;\n            p95: number;\n            p99: number;\n        };\n    };\n    seasonality?: {\n        type: 'daily' | 'weekly' | 'monthly';\n        pattern: number[];\n    };\n    calculatedAt: Date;\n    validUntil: Date;\n}\nexport interface PerformanceAnomaly {\n    id: string;\n    metric: string;\n    type: 'spike' | 'drop' | 'trend' | 'seasonal';\n    severity: 'low' | 'medium' | 'high' | 'critical';\n    value: number;\n    expectedValue: number;\n    deviation: number;\n    confidence: number;\n    detectedAt: Date;\n    resolvedAt?: Date;\n    description: string;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-performance-monitoring.service.d.ts",
        "start": 43,
        "end": 98,
        "startLoc": {
          "line": 43,
          "column": 9,
          "position": 369
        },
        "endLoc": {
          "line": 98,
          "column": 8,
          "position": 789
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\advanced-performance-monitoring.service.ts",
        "start": 49,
        "end": 108,
        "startLoc": {
          "line": 49,
          "column": 2,
          "position": 565
        },
        "endLoc": {
          "line": 108,
          "column": 6,
          "position": 989
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "getStatistics(): Promise<{\n        totalMetrics: number;\n        totalAlerts: number;\n        totalDashboards: number;\n        totalReports: number;\n        totalBaselines: number;\n        totalAnomalies: number;\n        activeAlerts: number;\n        unresolvedAnomalies: number;\n        metricsByType: Record<string, number>;\n        alertsBySeverity: Record<string, number>;\n        anomaliesByType: Record<string, number>;\n    }>;",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-performance-monitoring.service.d.ts",
        "start": 152,
        "end": 164,
        "startLoc": {
          "line": 152,
          "column": 5,
          "position": 1365
        },
        "endLoc": {
          "line": 164,
          "column": 2,
          "position": 1472
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\advanced-performance-monitoring.service.ts",
        "start": 691,
        "end": 703,
        "startLoc": {
          "line": 691,
          "column": 2,
          "position": 6663
        },
        "endLoc": {
          "line": 703,
          "column": 2,
          "position": 6771
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ", {\n                error: error.message\n            });\n        }\n    }\n    async getCPUUsage() {\n        const startUsage = process.cpuUsage();\n        await new Promise(resolve => setTimeout(resolve, 100));\n        const endUsage = process.cpuUsage(startUsage);\n        const totalUsage = (endUsage.user + endUsage.system) / 1000000;\n        return Math.min(totalUsage * 100, 100);\n    }\n    async getMemoryUsage",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-monitoring-alerts.service.js",
        "start": 295,
        "end": 307,
        "startLoc": {
          "line": 295,
          "column": 28,
          "position": 2290
        },
        "endLoc": {
          "line": 307,
          "column": 15,
          "position": 2420
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\performance-optimizer-v3.service.js",
        "start": 138,
        "end": 150,
        "startLoc": {
          "line": 138,
          "column": 40,
          "position": 1119
        },
        "endLoc": {
          "line": 150,
          "column": 23,
          "position": 1249
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": "export interface MonitoringMetric {\n    id: string;\n    name: string;\n    value: number;\n    unit: string;\n    timestamp: Date;\n    tags: Record<string, string>;\n    source: string;\n}\nexport interface AlertRule {\n    id: string;\n    name: string;\n    description: string;\n    metric: string;\n    condition: 'greater_than' | 'less_than' | 'equals' | 'not_equals';\n    threshold: number;\n    severity: 'low' | 'medium' | 'high' | 'critical';\n    enabled: boolean;\n    cooldown: number;\n    notificationChannels",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-monitoring-alerts.service.d.ts",
        "start": 1,
        "end": 20,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 20,
          "column": 21,
          "position": 161
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\advanced-monitoring-alerts.service.ts",
        "start": 17,
        "end": 36,
        "startLoc": {
          "line": 17,
          "column": 1,
          "position": 30
        },
        "endLoc": {
          "line": 36,
          "column": 11,
          "position": 191
        }
      }
    },
    {
      "format": "typescript",
      "lines": 38,
      "fragment": "notificationChannels: string[];\n    escalationPolicy?: string;\n}\nexport interface Alert {\n    id: string;\n    ruleId: string;\n    metric: string;\n    value: number;\n    threshold: number;\n    severity: 'low' | 'medium' | 'high' | 'critical';\n    status: 'active' | 'resolved' | 'acknowledged';\n    triggeredAt: Date;\n    resolvedAt?: Date;\n    acknowledgedAt?: Date;\n    acknowledgedBy?: string;\n    message: string;\n    tags: Record<string, string>;\n}\nexport interface HealthCheck {\n    id: string;\n    name: string;\n    endpoint: string;\n    method: 'GET' | 'POST' | 'PUT' | 'DELETE';\n    expectedStatus: number;\n    timeout: number;\n    interval: number;\n    enabled: boolean;\n    lastCheck?: Date;\n    lastStatus?: 'healthy' | 'unhealthy' | 'unknown';\n    lastResponseTime?: number;\n    consecutiveFailures: number;\n    maxFailures: number;\n}\nexport interface SLAMetric {\n    id: string;\n    name: string;\n    target: number;\n    current",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-monitoring-alerts.service.d.ts",
        "start": 20,
        "end": 57,
        "startLoc": {
          "line": 20,
          "column": 5,
          "position": 161
        },
        "endLoc": {
          "line": 57,
          "column": 8,
          "position": 463
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\advanced-monitoring-alerts.service.ts",
        "start": 37,
        "end": 76,
        "startLoc": {
          "line": 37,
          "column": 3,
          "position": 194
        },
        "endLoc": {
          "line": 76,
          "column": 14,
          "position": 498
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "period: 'hourly' | 'daily' | 'weekly' | 'monthly';\n    status: 'meeting' | 'warning' | 'breach';\n    lastUpdated: Date;\n}\nexport interface NotificationChannel {\n    id: string;\n    name: string;\n    type: 'email' | 'slack' | 'webhook' | 'sms' | 'pagerduty';\n    config: Record<string, any>;\n    enabled: boolean;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-monitoring-alerts.service.d.ts",
        "start": 58,
        "end": 69,
        "startLoc": {
          "line": 58,
          "column": 5,
          "position": 470
        },
        "endLoc": {
          "line": 69,
          "column": 8,
          "position": 581
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\advanced-monitoring-alerts.service.ts",
        "start": 78,
        "end": 91,
        "startLoc": {
          "line": 78,
          "column": 3,
          "position": 510
        },
        "endLoc": {
          "line": 91,
          "column": 6,
          "position": 623
        }
      }
    },
    {
      "format": "javascript",
      "lines": 16,
      "fragment": "${newRule.id}`);\n        return newRule;\n    }\n    async getAlertRule(ruleId) {\n        return this.alertRules.get(ruleId) || null;\n    }\n    async listAlertRules() {\n        return Array.from(this.alertRules.values());\n    }\n    async updateAlertRule(ruleId, updates) {\n        const rule = this.alertRules.get(ruleId);\n        if (!rule)\n            return null;\n        const updatedRule = { ...rule, ...updates };\n        this.alertRules.set(ruleId, updatedRule);\n        logger.info(`Alert rule updated: ",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-metrics-alerts.service.js",
        "start": 274,
        "end": 289,
        "startLoc": {
          "line": 274,
          "column": 22,
          "position": 3376
        },
        "endLoc": {
          "line": 289,
          "column": 22,
          "position": 3535
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\centralized-logging.service.js",
        "start": 275,
        "end": 290,
        "startLoc": {
          "line": 275,
          "column": 26,
          "position": 3533
        },
        "endLoc": {
          "line": 290,
          "column": 26,
          "position": 3692
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "operator) {\n            case 'gt': return value > threshold;\n            case 'lt': return value < threshold;\n            case 'gte': return value >= threshold;\n            case 'lte': return value <= threshold;\n            case 'eq': return value === threshold;\n            case 'ne': return value !== threshold;\n            default: return false;\n        }\n    }\n    async",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-metrics-alerts.service.js",
        "start": 377,
        "end": 387,
        "startLoc": {
          "line": 377,
          "column": 2,
          "position": 4519
        },
        "endLoc": {
          "line": 387,
          "column": 6,
          "position": 4630
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\alerts.js",
        "start": 165,
        "end": 175,
        "startLoc": {
          "line": 165,
          "column": 2,
          "position": 1410
        },
        "endLoc": {
          "line": 175,
          "column": 16,
          "position": 1521
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ";\n    actions: z.ZodArray<z.ZodObject<{\n        type: z.ZodEnum<[\"EMAIL\", \"SLACK\", \"WEBHOOK\", \"SMS\"]>;\n        config: z.ZodRecord<z.ZodString, z.ZodAny>;\n    }, \"strip\", z.ZodTypeAny, {\n        type?: \"EMAIL\" | \"SLACK\" | \"WEBHOOK\" | \"SMS\";\n        config?: Record<string, any>;\n    }, {\n        type?: \"EMAIL\" | \"SLACK\" | \"WEBHOOK\" | \"SMS\";\n        config?: Record<string, any>;\n    }>, \"many\">;\n}, \"strip\", z.ZodTypeAny, {\n    metric",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-metrics-alerts.service.d.ts",
        "start": 54,
        "end": 66,
        "startLoc": {
          "line": 54,
          "column": 3,
          "position": 679
        },
        "endLoc": {
          "line": 66,
          "column": 7,
          "position": 848
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\centralized-logging.service.d.ts",
        "start": 156,
        "end": 168,
        "startLoc": {
          "line": 156,
          "column": 11,
          "position": 1863
        },
        "endLoc": {
          "line": 168,
          "column": 6,
          "position": 2032
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ", {\n    metric?: string;\n    name?: string;\n    id?: string;\n    severity?: \"LOW\" | \"MEDIUM\" | \"HIGH\" | \"CRITICAL\";\n    labels?: Record<string, string>;\n    description?: string;\n    actions?: {\n        type?: \"EMAIL\" | \"SLACK\" | \"WEBHOOK\" | \"SMS\";\n        config?: Record<string, any>;\n    }[];\n    enabled?: boolean;\n    condition?: {\n        threshold?: number;\n        operator?: \"gt\" | \"lt\" | \"gte\" | \"lte\" | \"eq\" | \"ne\";\n        window?: number;\n        aggregation?: \"count\" | \"max\" | \"avg\" | \"sum\" | \"min\";\n    };\n    cooldown?: number;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-metrics-alerts.service.d.ts",
        "start": 84,
        "end": 103,
        "startLoc": {
          "line": 84,
          "column": 2,
          "position": 1056
        },
        "endLoc": {
          "line": 103,
          "column": 2,
          "position": 1269
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\advanced-metrics-alerts.service.d.ts",
        "start": 65,
        "end": 84,
        "startLoc": {
          "line": 65,
          "column": 11,
          "position": 843
        },
        "endLoc": {
          "line": 84,
          "column": 2,
          "position": 1056
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ", {\n    value?: number;\n    status?: \"ACTIVE\" | \"RESOLVED\" | \"ACKNOWLEDGED\" | \"SUPPRESSED\";\n    metric?: string;\n    context?: Record<string, any>;\n    timestamp?: Date;\n    name?: string;\n    id?: string;\n    severity?: \"LOW\" | \"MEDIUM\" | \"HIGH\" | \"CRITICAL\";\n    labels?: Record<string, string>;\n    description?: string;\n    threshold?: number;\n    acknowledgedBy?: string;\n    ruleId?: string;\n    acknowledgedAt?: Date;\n    resolvedAt?: Date;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-metrics-alerts.service.d.ts",
        "start": 136,
        "end": 152,
        "startLoc": {
          "line": 136,
          "column": 2,
          "position": 1661
        },
        "endLoc": {
          "line": 152,
          "column": 2,
          "position": 1822
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\advanced-metrics-alerts.service.d.ts",
        "start": 120,
        "end": 136,
        "startLoc": {
          "line": 120,
          "column": 11,
          "position": 1500
        },
        "endLoc": {
          "line": 136,
          "column": 2,
          "position": 1661
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ", {\n    metric?: string;\n    name?: string;\n    id?: string;\n    labels?: Record<string, string>;\n    description?: string;\n    alertThreshold?: number;\n    enabled?: boolean;\n    window?: number;\n    target?: number;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-metrics-alerts.service.d.ts",
        "start": 173,
        "end": 183,
        "startLoc": {
          "line": 173,
          "column": 2,
          "position": 2030
        },
        "endLoc": {
          "line": 183,
          "column": 2,
          "position": 2113
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\advanced-metrics-alerts.service.d.ts",
        "start": 163,
        "end": 173,
        "startLoc": {
          "line": 163,
          "column": 11,
          "position": 1947
        },
        "endLoc": {
          "line": 173,
          "column": 2,
          "position": 2030
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", {\n    metric?: string;\n    prediction?: {\n        confidence?: number;\n        nextValue?: number;\n        nextTimestamp?: Date;\n    };\n    period?: \"24h\" | \"1h\" | \"7d\" | \"30d\" | \"6h\";\n    id?: string;\n    trend?: \"INCREASING\" | \"DECREASING\" | \"STABLE\" | \"VOLATILE\";\n    confidence?: number;\n    changePercent?: number;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-metrics-alerts.service.d.ts",
        "start": 216,
        "end": 228,
        "startLoc": {
          "line": 216,
          "column": 2,
          "position": 2453
        },
        "endLoc": {
          "line": 228,
          "column": 2,
          "position": 2569
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\advanced-metrics-alerts.service.d.ts",
        "start": 204,
        "end": 216,
        "startLoc": {
          "line": 204,
          "column": 11,
          "position": 2337
        },
        "endLoc": {
          "line": 216,
          "column": 2,
          "position": 2453
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "maxAlertsPerRule: number;\n    retentionDays: number;\n    notificationChannels: string[];\n    slaMonitoring: boolean;\n    trendAnalysis: boolean;\n}\nexport interface MetricCollection {\n    id: string;\n    name: string;\n    metrics: Metric[];\n    startTime: Date;\n    endTime: Date;\n    duration: number;\n    status: 'RUNNING' | 'COMPLETED' | 'FAILED';\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-metrics-alerts.service.d.ts",
        "start": 238,
        "end": 253,
        "startLoc": {
          "line": 238,
          "column": 5,
          "position": 2692
        },
        "endLoc": {
          "line": 253,
          "column": 8,
          "position": 2801
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\advanced-metrics-alerts.service.ts",
        "start": 112,
        "end": 129,
        "startLoc": {
          "line": 112,
          "column": 3,
          "position": 1424
        },
        "endLoc": {
          "line": 129,
          "column": 6,
          "position": 1535
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "getMetricsStatistics(): Promise<{\n        totalMetrics: number;\n        metricsByType: Record<string, number>;\n        totalAlerts: number;\n        activeAlerts: number;\n        totalRules: number;\n        enabledRules: number;\n        totalSLAs: number;\n        averageCompliance: number;\n        lastCollection: Date | null;\n    }>;",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-metrics-alerts.service.d.ts",
        "start": 310,
        "end": 320,
        "startLoc": {
          "line": 310,
          "column": 5,
          "position": 3396
        },
        "endLoc": {
          "line": 320,
          "column": 2,
          "position": 3481
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\advanced-metrics-alerts.service.ts",
        "start": 626,
        "end": 636,
        "startLoc": {
          "line": 626,
          "column": 2,
          "position": 6764
        },
        "endLoc": {
          "line": 636,
          "column": 2,
          "position": 6850
        }
      }
    },
    {
      "format": "javascript",
      "lines": 23,
      "fragment": ", {\n            patternId: newPattern.id,\n            organizationId: newPattern.organizationId,\n            name: newPattern.name,\n            actionType: newPattern.action.type\n        });\n        return newPattern;\n    }\n    async getPatterns(organizationId, filters = {}) {\n        let patterns = Array.from(this.patterns.values())\n            .filter(p => p.organizationId === organizationId);\n        if (filters.enabled !== undefined) {\n            patterns = patterns.filter(p => p.enabled === filters.enabled);\n        }\n        if (filters.actionType) {\n            patterns = patterns.filter(p => p.action.type === filters.actionType);\n        }\n        if (filters.limit) {\n            patterns = patterns.slice(0, filters.limit);\n        }\n        return patterns.sort((a, b) => a.name.localeCompare(b.name));\n    }\n    async createPerformanceMetric",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-error-management.service.js",
        "start": 303,
        "end": 325,
        "startLoc": {
          "line": 303,
          "column": 24,
          "position": 2657
        },
        "endLoc": {
          "line": 325,
          "column": 24,
          "position": 2919
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\dlg-grooming.service.js",
        "start": 276,
        "end": 298,
        "startLoc": {
          "line": 276,
          "column": 22,
          "position": 2510
        },
        "endLoc": {
          "line": 298,
          "column": 15,
          "position": 2772
        }
      }
    },
    {
      "format": "javascript",
      "lines": 21,
      "fragment": "name: z.string().min(1).max(100),\n    description: z.string().max(500).optional(),\n    category: z.enum(['system', 'feature', 'integration', 'security', 'performance', 'monitoring']),\n    type: z.enum(['string', 'number', 'boolean', 'object', 'array', 'json']),\n    value: z.any(),\n    defaultValue: z.any(),\n    environment: z.enum(['development', 'staging', 'production', 'all']),\n    isSecret: z.boolean().default(false),\n    isRequired: z.boolean().default(false),\n    validation: z.object({\n        min: z.number().optional(),\n        max: z.number().optional(),\n        pattern: z.string().optional(),\n        enum: z.array(z.any()).optional(),\n        custom: z.string().optional()\n    }).optional(),\n    dependencies: z.array(z.string()).default([]),\n    tags: z.array(z.string()).default([]),\n    version: z.string().default('1.0.0'),\n    isActive: z.boolean().default(true),\n    createdAt",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-configuration-management.service.js",
        "start": 5,
        "end": 25,
        "startLoc": {
          "line": 5,
          "column": 5,
          "position": 60
        },
        "endLoc": {
          "line": 25,
          "column": 10,
          "position": 410
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\advanced-configuration-management.js",
        "start": 7,
        "end": 27,
        "startLoc": {
          "line": 7,
          "column": 5,
          "position": 76
        },
        "endLoc": {
          "line": 27,
          "column": 10,
          "position": 426
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": "= z.object({\n    id: z.string().uuid().optional(),\n    name: z.string().min(1).max(100),\n    description: z.string().max(500).optional(),\n    category: z.enum(['system', 'feature', 'integration', 'security', 'performance', 'monitoring']),\n    template: z.record(z.string(), z.any()),\n    variables: z.array(z.object({\n        name: z.string(),\n        type: z.enum(['string', 'number', 'boolean', 'object', 'array']),\n        required: z.boolean().default(false),\n        defaultValue: z.any().optional(),\n        description: z.string().optional()\n    })).default([]),\n    isActive: z.boolean().default(true),",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-configuration-management.service.js",
        "start": 30,
        "end": 43,
        "startLoc": {
          "line": 30,
          "column": 2,
          "position": 478
        },
        "endLoc": {
          "line": 43,
          "column": 2,
          "position": 720
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\configuration.service.js",
        "start": 2,
        "end": 67,
        "startLoc": {
          "line": 2,
          "column": 2,
          "position": 19
        },
        "endLoc": {
          "line": 67,
          "column": 2,
          "position": 1097
        }
      }
    },
    {
      "format": "javascript",
      "lines": 16,
      "fragment": "name: z.string().min(1).max(100),\n    description: z.string().max(500).optional(),\n    environment: z.enum(['development', 'staging', 'production']),\n    configs: z.array(z.string()),\n    deploymentStrategy: z.enum(['immediate', 'gradual', 'canary', 'blue_green']),\n    rolloutPercentage: z.number().min(0).max(100).default(100),\n    schedule: z.object({\n        enabled: z.boolean().default(false),\n        cron: z.string().optional(),\n        timezone: z.string().default('UTC')\n    }).optional(),\n    rollbackConfig: z.object({\n        enabled: z.boolean().default(true),\n        autoRollback: z.boolean().default(false),\n        rollbackConditions: z.array(z.string()).default([])\n    }).optional(),",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-configuration-management.service.js",
        "start": 49,
        "end": 64,
        "startLoc": {
          "line": 49,
          "column": 5,
          "position": 789
        },
        "endLoc": {
          "line": 64,
          "column": 2,
          "position": 1049
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\routes\\advanced-configuration-management.js",
        "start": 69,
        "end": 85,
        "startLoc": {
          "line": 69,
          "column": 5,
          "position": 1114
        },
        "endLoc": {
          "line": 85,
          "column": 2,
          "position": 1375
        }
      }
    },
    {
      "format": "typescript",
      "lines": 27,
      "fragment": ", {\n    value?: any;\n    validation?: {\n        custom?: string;\n        pattern?: string;\n        max?: number;\n        enum?: any[];\n        min?: number;\n    };\n    type?: \"string\" | \"number\" | \"boolean\" | \"object\" | \"json\" | \"array\";\n    version?: string;\n    name?: string;\n    environment?: \"development\" | \"production\" | \"staging\" | \"all\";\n    id?: string;\n    tags?: string[];\n    createdAt?: Date;\n    updatedAt?: Date;\n    description?: string;\n    category?: \"security\" | \"system\" | \"performance\" | \"monitoring\" | \"feature\" | \"integration\";\n    isActive?: boolean;\n    createdBy?: string;\n    updatedBy?: string;\n    defaultValue?: any;\n    dependencies?: string[];\n    isSecret?: boolean;\n    isRequired?: boolean;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-configuration-management.service.d.ts",
        "start": 66,
        "end": 92,
        "startLoc": {
          "line": 66,
          "column": 2,
          "position": 785
        },
        "endLoc": {
          "line": 92,
          "column": 2,
          "position": 1043
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\advanced-configuration-management.service.d.ts",
        "start": 40,
        "end": 66,
        "startLoc": {
          "line": 40,
          "column": 11,
          "position": 527
        },
        "endLoc": {
          "line": 66,
          "column": 2,
          "position": 785
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ", {\n    name?: string;\n    id?: string;\n    createdAt?: Date;\n    updatedAt?: Date;\n    description?: string;\n    category?: \"security\" | \"system\" | \"performance\" | \"monitoring\" | \"feature\" | \"integration\";\n    isActive?: boolean;\n    template?: Record<string, any>;\n    variables?: {\n        type?: \"string\" | \"number\" | \"boolean\" | \"object\" | \"array\";\n        name?: string;\n        description?: string;\n        defaultValue?: any;\n        required?: boolean;\n    }[];\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-configuration-management.service.d.ts",
        "start": 137,
        "end": 153,
        "startLoc": {
          "line": 137,
          "column": 2,
          "position": 1597
        },
        "endLoc": {
          "line": 153,
          "column": 2,
          "position": 1761
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\advanced-configuration-management.service.d.ts",
        "start": 121,
        "end": 137,
        "startLoc": {
          "line": 121,
          "column": 11,
          "position": 1433
        },
        "endLoc": {
          "line": 137,
          "column": 2,
          "position": 1597
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": ", {\n    status?: \"pending\" | \"completed\" | \"failed\" | \"in_progress\" | \"rolled_back\";\n    name?: string;\n    environment?: \"development\" | \"production\" | \"staging\";\n    id?: string;\n    createdAt?: Date;\n    updatedAt?: Date;\n    description?: string;\n    rolloutPercentage?: number;\n    configs?: string[];\n    deploymentStrategy?: \"canary\" | \"immediate\" | \"gradual\" | \"blue_green\";\n    schedule?: {\n        enabled?: boolean;\n        timezone?: string;\n        cron?: string;\n    };\n    rollbackConfig?: {\n        enabled?: boolean;\n        autoRollback?: boolean;\n        rollbackConditions?: string[];\n    };\n    deployedAt?: Date;\n    deployedBy?: string;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-configuration-management.service.d.ts",
        "start": 216,
        "end": 239,
        "startLoc": {
          "line": 216,
          "column": 2,
          "position": 2465
        },
        "endLoc": {
          "line": 239,
          "column": 2,
          "position": 2676
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\advanced-configuration-management.service.d.ts",
        "start": 193,
        "end": 216,
        "startLoc": {
          "line": 193,
          "column": 11,
          "position": 2254
        },
        "endLoc": {
          "line": 216,
          "column": 2,
          "position": 2465
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", {\n    userId?: string;\n    timestamp?: Date;\n    reason?: string;\n    metadata?: Record<string, any>;\n    environment?: \"development\" | \"production\" | \"staging\";\n    id?: string;\n    action?: \"create\" | \"update\" | \"delete\" | \"deploy\" | \"rollback\";\n    oldValue?: any;\n    newValue?: any;\n    configId?: string;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-configuration-management.service.d.ts",
        "start": 262,
        "end": 273,
        "startLoc": {
          "line": 262,
          "column": 2,
          "position": 2970
        },
        "endLoc": {
          "line": 273,
          "column": 2,
          "position": 3085
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\advanced-configuration-management.service.d.ts",
        "start": 251,
        "end": 262,
        "startLoc": {
          "line": 251,
          "column": 11,
          "position": 2855
        },
        "endLoc": {
          "line": 262,
          "column": 2,
          "position": 2970
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": "export interface ConfigValidationResult {\n    isValid: boolean;\n    errors: string[];\n    warnings: string[];\n}\nexport interface ConfigDependency {\n    configId: string;\n    dependencyType: 'required' | 'optional' | 'conflict';\n    condition: string;\n}\nexport interface ConfigMetrics {\n    totalConfigs: number;\n    configsByCategory: Record<string, number>;\n    configsByEnvironment: Record<string, number>;\n    activeConfigs: number;\n    inactiveConfigs: number;\n    secretConfigs: number;\n    recentChanges: number;\n    deploymentSuccessRate: number;\n}\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-configuration-management.service.d.ts",
        "start": 278,
        "end": 298,
        "startLoc": {
          "line": 278,
          "column": 1,
          "position": 3160
        },
        "endLoc": {
          "line": 298,
          "column": 7,
          "position": 3312
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\advanced-configuration-management.service.ts",
        "start": 96,
        "end": 119,
        "startLoc": {
          "line": 96,
          "column": 1,
          "position": 1418
        },
        "endLoc": {
          "line": 119,
          "column": 49,
          "position": 1573
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "}\nexport interface CacheStats {\n    hits: number;\n    misses: number;\n    sets: number;\n    deletes: number;\n    evictions: number;\n    hitRate: number;\n    size: number;\n    maxSize: number;\n    memoryUsage: number;\n}\nexport interface CacheItem {\n    value: any;\n    timestamp: number;\n    accessCount: number;\n    lastAccessed: number;\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-cache.d.ts",
        "start": 7,
        "end": 25,
        "startLoc": {
          "line": 7,
          "column": 1,
          "position": 56
        },
        "endLoc": {
          "line": 25,
          "column": 8,
          "position": 171
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\advanced-cache.ts",
        "start": 10,
        "end": 31,
        "startLoc": {
          "line": 10,
          "column": 1,
          "position": 82
        },
        "endLoc": {
          "line": 31,
          "column": 6,
          "position": 200
        }
      }
    },
    {
      "format": "typescript",
      "lines": 33,
      "fragment": "export interface AuditEvent {\n    id: string;\n    timestamp: string;\n    userId: string;\n    organizationId: string;\n    action: string;\n    resource: string;\n    resourceId?: string;\n    details: Record<string, any>;\n    ipAddress?: string;\n    userAgent?: string;\n    severity: 'low' | 'medium' | 'high' | 'critical';\n    compliance: {\n        gdpr: boolean;\n        sox: boolean;\n        pci: boolean;\n        hipaa: boolean;\n        iso27001: boolean;\n    };\n    riskScore: number;\n    tags: string[];\n}\nexport interface ComplianceRule {\n    id: string;\n    name: string;\n    description: string;\n    framework: 'gdpr' | 'sox' | 'pci' | 'hipaa' | 'iso27001';\n    conditions: {\n        action?: string[];\n        resource?: string[];\n        severity?: string[];\n        timeWindow?: number;\n        threshold",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-audit-compliance.service.d.ts",
        "start": 1,
        "end": 33,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 33,
          "column": 10,
          "position": 266
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\advanced-audit-compliance.service.ts",
        "start": 7,
        "end": 39,
        "startLoc": {
          "line": 7,
          "column": 1,
          "position": 17
        },
        "endLoc": {
          "line": 39,
          "column": 11,
          "position": 283
        }
      }
    },
    {
      "format": "typescript",
      "lines": 48,
      "fragment": "threshold?: number;\n    };\n    actions: {\n        alert: boolean;\n        block: boolean;\n        notify: string[];\n        escalate: boolean;\n    };\n    isActive: boolean;\n    createdAt: string;\n    updatedAt: string;\n}\nexport interface ComplianceViolation {\n    id: string;\n    ruleId: string;\n    eventId: string;\n    timestamp: string;\n    severity: 'low' | 'medium' | 'high' | 'critical';\n    description: string;\n    details: Record<string, any>;\n    status: 'open' | 'investigating' | 'resolved' | 'false_positive';\n    assignedTo?: string;\n    resolution?: string;\n    resolvedAt?: string;\n}\nexport interface AuditReport {\n    id: string;\n    name: string;\n    description: string;\n    organizationId: string;\n    period: {\n        start: string;\n        end: string;\n    };\n    filters: {\n        actions?: string[];\n        resources?: string[];\n        severities?: string[];\n        frameworks?: string[];\n    };\n    metrics: {\n        totalEvents: number;\n        violations: number;\n        riskScore: number;\n        complianceScore: number;\n        topActions: Array<{\n            action: string;\n            count: number;",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-audit-compliance.service.d.ts",
        "start": 33,
        "end": 80,
        "startLoc": {
          "line": 33,
          "column": 9,
          "position": 266
        },
        "endLoc": {
          "line": 80,
          "column": 2,
          "position": 624
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\advanced-audit-compliance.service.ts",
        "start": 40,
        "end": 87,
        "startLoc": {
          "line": 40,
          "column": 5,
          "position": 286
        },
        "endLoc": {
          "line": 87,
          "column": 2,
          "position": 645
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "getAuditEvents(filters?: {\n        organizationId?: string;\n        userId?: string;\n        action?: string;\n        resource?: string;\n        severity?: string;\n        startDate?: string;\n        endDate?: string;\n        limit?: number;\n        offset?: number;\n    }): Promise<{\n        events: AuditEvent[];\n        total: number;",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-audit-compliance.service.d.ts",
        "start": 104,
        "end": 116,
        "startLoc": {
          "line": 104,
          "column": 5,
          "position": 801
        },
        "endLoc": {
          "line": 116,
          "column": 2,
          "position": 904
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\advanced-audit-compliance.service.ts",
        "start": 346,
        "end": 356,
        "startLoc": {
          "line": 346,
          "column": 2,
          "position": 2816
        },
        "endLoc": {
          "line": 356,
          "column": 2,
          "position": 2918
        }
      }
    },
    {
      "format": "javascript",
      "lines": 23,
      "fragment": ";\n    }\n    async createMetric(request, organizationId) {\n        const metric = {\n            id: this.generateId(),\n            name: request.name,\n            type: request.type,\n            value: 0,\n            unit: request.unit,\n            timestamp: new Date(),\n            organizationId,\n            metadata: request.metadata,\n            tags: request.tags,\n            category: request.category,\n            subcategory: request.subcategory,\n            source: request.source,\n            confidence: 1.0,\n            status: 'active',\n            createdAt: new Date(),\n            updatedAt: new Date()\n        };\n        this.metrics.set(metric.id, metric);\n        return",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-analytics.service.js",
        "start": 18,
        "end": 40,
        "startLoc": {
          "line": 18,
          "column": 2,
          "position": 139
        },
        "endLoc": {
          "line": 40,
          "column": 7,
          "position": 327
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\analytics-consolidated.service.js",
        "start": 46,
        "end": 68,
        "startLoc": {
          "line": 46,
          "column": 2,
          "position": 362
        },
        "endLoc": {
          "line": 68,
          "column": 17,
          "position": 550
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": ");\n        return metric;\n    }\n    async updateMetric(metricId, request) {\n        const metric = this.metrics.get(metricId);\n        if (!metric)\n            return null;\n        const updatedMetric = {\n            ...metric,\n            ...request,\n            updatedAt: new Date()\n        };\n        this.metrics.set(metricId, updatedMetric);\n        return",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-analytics.service.js",
        "start": 39,
        "end": 52,
        "startLoc": {
          "line": 39,
          "column": 7,
          "position": 323
        },
        "endLoc": {
          "line": 52,
          "column": 7,
          "position": 427
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\analytics-consolidated.service.js",
        "start": 74,
        "end": 87,
        "startLoc": {
          "line": 74,
          "column": 2,
          "position": 598
        },
        "endLoc": {
          "line": 87,
          "column": 17,
          "position": 702
        }
      }
    },
    {
      "format": "javascript",
      "lines": 27,
      "fragment": ");\n        return updatedMetric;\n    }\n    async getMetric(metricId) {\n        return this.metrics.get(metricId) || null;\n    }\n    async getMetrics(organizationId, filters) {\n        let metrics = Array.from(this.metrics.values())\n            .filter(m => m.organizationId === organizationId);\n        if (filters) {\n            if (filters.type) {\n                metrics = metrics.filter(m => m.type === filters.type);\n            }\n            if (filters.category) {\n                metrics = metrics.filter(m => m.category === filters.category);\n            }\n            if (filters.status) {\n                metrics = metrics.filter(m => m.status === filters.status);\n            }\n            if (filters.tags && filters.tags.length > 0) {\n                metrics = metrics.filter(m => filters.tags.some(tag => m.tags.includes(tag)));\n            }\n        }\n        return metrics;\n    }\n    async deleteMetric(metricId) {\n        return",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-analytics.service.js",
        "start": 51,
        "end": 77,
        "startLoc": {
          "line": 51,
          "column": 14,
          "position": 423
        },
        "endLoc": {
          "line": 77,
          "column": 7,
          "position": 726
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\analytics-consolidated.service.js",
        "start": 91,
        "end": 117,
        "startLoc": {
          "line": 91,
          "column": 2,
          "position": 735
        },
        "endLoc": {
          "line": 117,
          "column": 6,
          "position": 1038
        }
      }
    },
    {
      "format": "javascript",
      "lines": 18,
      "fragment": ";\n    }\n    async recordMetric(metricId, value, metadata) {\n        const metric = this.metrics.get(metricId);\n        if (!metric)\n            throw new Error(`Metric ${metricId} not found`);\n        const updatedMetric = {\n            ...metric,\n            value,\n            metadata: { ...metric.metadata, ...metadata },\n            timestamp: new Date(),\n            updatedAt: new Date()\n        };\n        this.metrics.set(metricId, updatedMetric);\n        if (this.config.realTimeProcessing) {\n            await this.processRealTimeData(updatedMetric);\n        }\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-analytics.service.js",
        "start": 77,
        "end": 94,
        "startLoc": {
          "line": 77,
          "column": 2,
          "position": 736
        },
        "endLoc": {
          "line": 94,
          "column": 2,
          "position": 900
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\analytics-consolidated.service.js",
        "start": 124,
        "end": 141,
        "startLoc": {
          "line": 124,
          "column": 8,
          "position": 1095
        },
        "endLoc": {
          "line": 141,
          "column": 5,
          "position": 1259
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "}\n    async processRealTimeData(metric) {\n        await this.updateTrendAnalysis(metric);\n        if (this.config.anomalyDetection) {\n            await this.detectAnomalies(metric);\n        }\n        if (this.config.forecasting) {\n            await this.updateForecasts(metric);\n        }\n    }\n    async",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-analytics.service.js",
        "start": 94,
        "end": 104,
        "startLoc": {
          "line": 94,
          "column": 5,
          "position": 900
        },
        "endLoc": {
          "line": 104,
          "column": 6,
          "position": 981
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\analytics-consolidated.service.js",
        "start": 142,
        "end": 152,
        "startLoc": {
          "line": 142,
          "column": 5,
          "position": 1267
        },
        "endLoc": {
          "line": 152,
          "column": 29,
          "position": 1348
        }
      }
    },
    {
      "format": "javascript",
      "lines": 39,
      "fragment": ";\n    }\n    async performStatisticalAnalysis(metricId, dataPoints) {\n        if (dataPoints.length === 0) {\n            throw new Error('No data points provided for analysis');\n        }\n        const sorted = [...dataPoints].sort((a, b) => a - b);\n        const n = dataPoints.length;\n        const mean = dataPoints.reduce((sum, val) => sum + val, 0) / n;\n        const median = this.calculateMedian(sorted);\n        const mode = this.calculateMode(dataPoints);\n        const variance = this.calculateVariance(dataPoints, mean);\n        const standardDeviation = Math.sqrt(variance);\n        const skewness = this.calculateSkewness(dataPoints, mean, standardDeviation);\n        const kurtosis = this.calculateKurtosis(dataPoints, mean, standardDeviation);\n        const quartiles = {\n            q1: this.calculatePercentile(sorted, 25),\n            q2: median,\n            q3: this.calculatePercentile(sorted, 75)\n        };\n        const iqr = quartiles.q3 - quartiles.q1;\n        const outliers = dataPoints.filter(val => val < quartiles.q1 - 1.5 * iqr || val > quartiles.q3 + 1.5 * iqr);\n        return {\n            mean,\n            median,\n            mode,\n            standardDeviation,\n            variance,\n            skewness,\n            kurtosis,\n            min: sorted[0],\n            max: sorted[n - 1],\n            range: sorted[n - 1] - sorted[0],\n            quartiles,\n            outliers,\n            correlation: {}\n        };\n    }\n    calculateMedian",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-analytics.service.js",
        "start": 289,
        "end": 327,
        "startLoc": {
          "line": 289,
          "column": 16,
          "position": 2891
        },
        "endLoc": {
          "line": 327,
          "column": 16,
          "position": 3340
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\analytics-consolidated.service.js",
        "start": 386,
        "end": 424,
        "startLoc": {
          "line": 386,
          "column": 8,
          "position": 3415
        },
        "endLoc": {
          "line": 424,
          "column": 11,
          "position": 3864
        }
      }
    },
    {
      "format": "javascript",
      "lines": 52,
      "fragment": ";\n    }\n    calculateMedian(sorted) {\n        const n = sorted.length;\n        if (n % 2 === 0) {\n            return (sorted[n / 2 - 1] + sorted[n / 2]) / 2;\n        }\n        return sorted[Math.floor(n / 2)];\n    }\n    calculateMode(data) {\n        const frequency = {};\n        data.forEach(val => {\n            frequency[val] = (frequency[val] || 0) + 1;\n        });\n        let maxFreq = 0;\n        let mode = data[0];\n        Object.entries(frequency).forEach(([val, freq]) => {\n            if (freq > maxFreq) {\n                maxFreq = freq;\n                mode = Number(val);\n            }\n        });\n        return mode;\n    }\n    calculateVariance(data, mean) {\n        const squaredDiffs = data.map(val => Math.pow(val - mean, 2));\n        return squaredDiffs.reduce((sum, val) => sum + val, 0) / data.length;\n    }\n    calculateSkewness(data, mean, stdDev) {\n        const n = data.length;\n        const skewness = data.reduce((sum, val) => {\n            return sum + Math.pow((val - mean) / stdDev, 3);\n        }, 0) / n;\n        return skewness;\n    }\n    calculateKurtosis(data, mean, stdDev) {\n        const n = data.length;\n        const kurtosis = data.reduce((sum, val) => {\n            return sum + Math.pow((val - mean) / stdDev, 4);\n        }, 0) / n;\n        return kurtosis - 3;\n    }\n    calculatePercentile(sorted, percentile) {\n        const index = (percentile / 100) * (sorted.length - 1);\n        const lower = Math.floor(index);\n        const upper = Math.ceil(index);\n        const weight = index - lower;\n        if (upper >= sorted.length)\n            return sorted[sorted.length - 1];\n        return sorted[lower] * (1 - weight) + sorted[upper] * weight;\n    }\n    async executeQuery",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-analytics.service.js",
        "start": 325,
        "end": 376,
        "startLoc": {
          "line": 325,
          "column": 2,
          "position": 3334
        },
        "endLoc": {
          "line": 376,
          "column": 13,
          "position": 4011
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\analytics-consolidated.service.js",
        "start": 425,
        "end": 476,
        "startLoc": {
          "line": 425,
          "column": 2,
          "position": 3903
        },
        "endLoc": {
          "line": 476,
          "column": 15,
          "position": 4580
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ">);\n    createMetric(request: CreateMetricRequest, organizationId: string): Promise<AnalyticsMetric>;\n    updateMetric(metricId: string, request: UpdateMetricRequest): Promise<AnalyticsMetric | null>;\n    getMetric(metricId: string): Promise<AnalyticsMetric | null>;\n    getMetrics(organizationId: string, filters?: {\n        type?: string;\n        category?: string;\n        status?: string;\n        tags?: string[];\n    }): Promise<AnalyticsMetric[]>;\n    deleteMetric(metricId: string): Promise<boolean>;\n    recordMetric(metricId: string, value: number, metadata?: Record<string, any>): Promise<void>;\n    private processRealTimeData;\n    analyzeTrends",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-analytics.service.d.ts",
        "start": 7,
        "end": 20,
        "startLoc": {
          "line": 7,
          "column": 16,
          "position": 81
        },
        "endLoc": {
          "line": 20,
          "column": 14,
          "position": 273
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\analytics-consolidated.service.d.ts",
        "start": 119,
        "end": 132,
        "startLoc": {
          "line": 119,
          "column": 18,
          "position": 846
        },
        "endLoc": {
          "line": 132,
          "column": 8,
          "position": 1038
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": ");\n    }\n    getTopActions(events) {\n        const actionCounts = events.reduce((acc, event) => {\n            acc[event.action] = (acc[event.action] || 0) + 1;\n            return acc;\n        }, {});\n        return Object.entries(actionCounts)\n            .map(([action, count]) => ({ action, count }))\n            .sort((a, b) => b.count - a.count)\n            .slice(0, 10);\n    }\n    getTopEntities",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-analytics.js",
        "start": 142,
        "end": 154,
        "startLoc": {
          "line": 142,
          "column": 3,
          "position": 1657
        },
        "endLoc": {
          "line": 154,
          "column": 15,
          "position": 1812
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\lib\\advanced-audit-compliance.service.js",
        "start": 375,
        "end": 387,
        "startLoc": {
          "line": 375,
          "column": 16,
          "position": 3810
        },
        "endLoc": {
          "line": 387,
          "column": 16,
          "position": 3965
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": "export interface AnalyticsEvent {\n    id: string;\n    eventType: string;\n    action: string;\n    entityType: string;\n    entityId: string;\n    userId: string;\n    orgId: string;\n    metadata: Record<string, any>;\n    timestamp: string;\n    sessionId?: string;\n    correlationId?: string;\n}\nexport interface AnalyticsMetric {\n    name: string;\n    value: number;\n    labels: Record<string, string>;\n    timestamp: string;\n}\nexport interface AnalyticsDashboard {\n    totalEvents: number;\n    uniqueUsers: number;\n    topActions: Array<{\n        action: string;\n        count: number;",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-analytics.d.ts",
        "start": 1,
        "end": 25,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 25,
          "column": 2,
          "position": 181
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\advanced-analytics.ts",
        "start": 4,
        "end": 28,
        "startLoc": {
          "line": 4,
          "column": 1,
          "position": 30
        },
        "endLoc": {
          "line": 28,
          "column": 2,
          "position": 212
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "}>;\n    };\n    customers: {\n        total: number;\n        new: number;\n        churn: number;\n        lifetimeValue: number;\n    };\n    operations: {\n        dealsClosed: number;\n        avgDealSize: number;\n        salesCycle: number;\n        winRate: number;\n    };\n    performance: {\n        responseTime: number;\n        uptime: number;\n        errorRate: number;\n        userSatisfaction: number;\n    };\n}\nexport declare",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\lib\\advanced-analytics.d.ts",
        "start": 54,
        "end": 75,
        "startLoc": {
          "line": 54,
          "column": 9,
          "position": 370
        },
        "endLoc": {
          "line": 75,
          "column": 8,
          "position": 496
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\lib\\advanced-analytics.ts",
        "start": 40,
        "end": 62,
        "startLoc": {
          "line": 40,
          "column": 2,
          "position": 377
        },
        "endLoc": {
          "line": 62,
          "column": 6,
          "position": 504
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "export { User } from './entities/user.entity.js';\nexport { Organization } from './entities/organization.entity.js';\nexport { Company } from './entities/company.entity.js';\nexport { Contact } from './entities/contact.entity.js';\nexport { Product } from './entities/product.entity.js';\nexport { Invoice } from './entities/invoice.entity.js';\nexport { InventoryKardex } from './entities/inventory-kardex.entity.js';\nexport { PredictiveAnalytics } from './entities/predictive-analytics.entity.js';\nexport { Architecture } from './entities/architecture.entity.js';\nexport { SearchResult, SearchResultBuilder } from './entities/search-result.entity.js';\nexport type { SearchQuery, SearchFilters, SearchSuggestion, SearchAnalytics, SearchResultType, SearchType } from './entities/search-result.entity.js';\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\index.d.ts",
        "start": 3,
        "end": 14,
        "startLoc": {
          "line": 3,
          "column": 1,
          "position": 31
        },
        "endLoc": {
          "line": 14,
          "column": 7,
          "position": 194
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\index.ts",
        "start": 10,
        "end": 22,
        "startLoc": {
          "line": 10,
          "column": 1,
          "position": 43
        },
        "endLoc": {
          "line": 22,
          "column": 17,
          "position": 207
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "export { UserRepository } from './repositories/user.repository.js';\nexport { OrganizationRepository } from './repositories/organization.repository.js';\nexport { CompanyRepository } from './repositories/company.repository.js';\nexport { ContactRepository } from './repositories/contact.repository.js';\nexport { ProductRepository } from './repositories/product.repository.js';\nexport { InvoiceRepository } from './repositories/invoice.repository.js';\nexport { InventoryKardexRepository } from './repositories/inventory-kardex.repository.js';\nexport { PredictiveAnalyticsRepository } from './repositories/predictive-analytics.repository.js';\nexport { ArchitectureRepository } from './repositories/architecture.repository.js';\nexport { SearchRepository } from './repositories/search.repository.js';\nexport type { SearchConfig } from './repositories/search.repository.js';\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\index.d.ts",
        "start": 18,
        "end": 29,
        "startLoc": {
          "line": 18,
          "column": 1,
          "position": 263
        },
        "endLoc": {
          "line": 29,
          "column": 7,
          "position": 408
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\index.ts",
        "start": 31,
        "end": 43,
        "startLoc": {
          "line": 31,
          "column": 1,
          "position": 284
        },
        "endLoc": {
          "line": 43,
          "column": 19,
          "position": 430
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": "export type { UserId, OrganizationId, Email as EmailVO, PasswordHash, UserRole, UserStatus } from './entities/user.entity.js';\nexport type { OrganizationSlug, SubscriptionTier, OrganizationStatus, OrganizationSettings } from './entities/organization.entity.js';\nexport type { CompanyId, CompanyType, CompanyStatus, CompanySize, CompanyIndustry, CompanySource, CompanySettings } from './entities/company.entity.js';\nexport type { ContactId, ContactType, ContactStatus, ContactSource, ContactPriority, ContactSettings } from './entities/contact.entity.js';\nexport type { ProductId, ProductType, ProductStatus, ProductCategory, ProductBrand, ProductSupplier, ProductSettings, ProductVariant } from './entities/product.entity.js';\nexport type { InvoiceId, InvoiceNumber, InvoiceType, InvoiceStatus, InvoicePaymentStatus, InvoicePaymentMethod, InvoiceItem, InvoiceSettings } from './entities/invoice.entity.js';\nexport type { InventoryKardexId, MovementType, MovementStatus, MovementReason, InventoryMovement, InventorySettings } from './entities/inventory-kardex.entity.js';\nexport type { PredictiveAnalyticsId, AnalyticsType, AnalyticsStatus, AnalyticsModel, AnalyticsAccuracy, PredictionData, AnalyticsSettings, AnalyticsMetrics } from './entities/predictive-analytics.entity.js';\nexport type { ArchitectureId, ArchitectureType, ArchitectureStatus, LayerType, ComponentType, ArchitectureComponent, ArchitectureLayer, ArchitectureSettings, ArchitectureMetrics } from './entities/architecture.entity.js';\nexport type { Currency } from './value-objects/money.vo.js';\nexport type { AddressProps } from './value-objects/address.vo.js';\nexport type { UserFilters, PaginatedResult, UserSearchOptions } from './repositories/user.repository.js';\nexport type { OrganizationFilters, OrganizationSearchOptions } from './repositories/organization.repository.js';\nexport type { CompanyFilters, CompanySearchOptions, CompanyStats } from './repositories/company.repository.js';\nexport type { ContactFilters, ContactSearchOptions, ContactStats } from './repositories/contact.repository.js';\nexport type { ProductStats, InventoryStats, PricingStats, CategoryStats, BrandStats, SupplierStats } from './repositories/product.repository.js';\nexport type { InvoiceFilters, InvoiceSearchOptions, InvoiceStats } from './repositories/invoice.repository.js';\nexport type { InventoryKardexFilters, InventoryKardexSearchOptions, InventoryKardexStats } from './repositories/inventory-kardex.repository.js';\nexport type { PredictiveAnalyticsFilters, PredictiveAnalyticsSearchOptions, PredictiveAnalyticsStats } from './repositories/predictive-analytics.repository.js';\nexport type { ArchitectureFilters, ArchitectureSearchOptions, ArchitectureStats } from './repositories/architecture.repository.js';\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\domain\\index.d.ts",
        "start": 30,
        "end": 50,
        "startLoc": {
          "line": 30,
          "column": 1,
          "position": 421
        },
        "endLoc": {
          "line": 50,
          "column": 7,
          "position": 944
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\domain\\index.ts",
        "start": 47,
        "end": 68,
        "startLoc": {
          "line": 47,
          "column": 1,
          "position": 448
        },
        "endLoc": {
          "line": 68,
          "column": 46,
          "position": 972
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", {\n    userId?: string;\n    text?: string;\n    id?: string;\n    createdAt?: Date;\n    updatedAt?: Date;\n    meta?: Record<string, any>;\n    expiresAt?: Date;\n    tenantId?: string;\n    agentId?: string;\n    namespace?: string;\n    vector?: number[];\n    ttlSec?: number;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\db\\memory.repo.d.ts",
        "start": 28,
        "end": 41,
        "startLoc": {
          "line": 28,
          "column": 2,
          "position": 305
        },
        "endLoc": {
          "line": 41,
          "column": 2,
          "position": 414
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\db\\memory.repo.d.ts",
        "start": 15,
        "end": 28,
        "startLoc": {
          "line": 15,
          "column": 11,
          "position": 196
        },
        "endLoc": {
          "line": 28,
          "column": 2,
          "position": 305
        }
      }
    },
    {
      "format": "javascript",
      "lines": 21,
      "fragment": ", error);\n            if (error instanceof Error && error.message.includes('Validation error')) {\n                res.status(400).json({\n                    type: 'https://econeura/errors/validation-error',\n                    title: 'Validation Error',\n                    status: 400,\n                    detail: error.message,\n                    instance: req.path,\n                });\n                return;\n            }\n            res.status(500).json({\n                type: 'https://econeura/errors/internal-error',\n                title: 'Internal Server Error',\n                status: 500,\n                detail: 'An unexpected error occurred',\n                instance: req.path,\n            });\n        }\n    }\n    async getMemoryStats",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\controllers\\memory.controller.js",
        "start": 38,
        "end": 58,
        "startLoc": {
          "line": 38,
          "column": 24,
          "position": 350
        },
        "endLoc": {
          "line": 58,
          "column": 15,
          "position": 506
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\controllers\\memory.controller.js",
        "start": 11,
        "end": 31,
        "startLoc": {
          "line": 11,
          "column": 22,
          "position": 118
        },
        "endLoc": {
          "line": 31,
          "column": 12,
          "position": 274
        }
      }
    },
    {
      "format": "typescript",
      "lines": 30,
      "fragment": ", {\n    NODE_ENV?: \"test\" | \"development\" | \"production\" | \"staging\";\n    PORT?: number;\n    DATABASE_URL?: string;\n    REDIS_URL?: string;\n    JWT_SECRET?: string;\n    HOST?: string;\n    PRISMA_LOG_LEVEL?: \"error\" | \"info\" | \"query\" | \"warn\";\n    REDIS_PASSWORD?: string;\n    JWT_EXPIRES_IN?: string;\n    BCRYPT_ROUNDS?: number;\n    EMAIL_SMTP_URL?: string;\n    EMAIL_FROM?: string;\n    OPENAI_API_KEY?: string;\n    AZURE_OPENAI_ENDPOINT?: string;\n    AZURE_OPENAI_API_KEY?: string;\n    LOG_LEVEL?: \"error\" | \"info\" | \"warn\" | \"debug\";\n    SENTRY_DSN?: string;\n    PROMETHEUS_ENABLED?: boolean;\n    METRICS_PORT?: number;\n    ENABLE_API_DOCS?: boolean;\n    ENABLE_RATE_LIMITING?: boolean;\n    ENABLE_CORS?: boolean;\n    REQUEST_TIMEOUT?: number;\n    MAX_REQUEST_SIZE?: string;\n    SKIP_AUTH?: boolean;\n    CHAOS_ENABLED?: boolean;\n    DEFAULT_ORG_ID?: string;\n    ENABLE_MULTI_TENANT?: boolean;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\config\\env.d.ts",
        "start": 60,
        "end": 89,
        "startLoc": {
          "line": 60,
          "column": 2,
          "position": 716
        },
        "endLoc": {
          "line": 89,
          "column": 2,
          "position": 981
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\config\\env.d.ts",
        "start": 31,
        "end": 60,
        "startLoc": {
          "line": 31,
          "column": 11,
          "position": 451
        },
        "endLoc": {
          "line": 60,
          "column": 2,
          "position": 716
        }
      }
    },
    {
      "format": "typescript",
      "lines": 30,
      "fragment": "{\n    NODE_ENV?: \"test\" | \"development\" | \"production\" | \"staging\";\n    PORT?: number;\n    DATABASE_URL?: string;\n    REDIS_URL?: string;\n    JWT_SECRET?: string;\n    HOST?: string;\n    PRISMA_LOG_LEVEL?: \"error\" | \"info\" | \"query\" | \"warn\";\n    REDIS_PASSWORD?: string;\n    JWT_EXPIRES_IN?: string;\n    BCRYPT_ROUNDS?: number;\n    EMAIL_SMTP_URL?: string;\n    EMAIL_FROM?: string;\n    OPENAI_API_KEY?: string;\n    AZURE_OPENAI_ENDPOINT?: string;\n    AZURE_OPENAI_API_KEY?: string;\n    LOG_LEVEL?: \"error\" | \"info\" | \"warn\" | \"debug\";\n    SENTRY_DSN?: string;\n    PROMETHEUS_ENABLED?: boolean;\n    METRICS_PORT?: number;\n    ENABLE_API_DOCS?: boolean;\n    ENABLE_RATE_LIMITING?: boolean;\n    ENABLE_CORS?: boolean;\n    REQUEST_TIMEOUT?: number;\n    MAX_REQUEST_SIZE?: string;\n    SKIP_AUTH?: boolean;\n    CHAOS_ENABLED?: boolean;\n    DEFAULT_ORG_ID?: string;\n    ENABLE_MULTI_TENANT?: boolean;\n};",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\config\\env.d.ts",
        "start": 91,
        "end": 120,
        "startLoc": {
          "line": 91,
          "column": 2,
          "position": 1011
        },
        "endLoc": {
          "line": 120,
          "column": 2,
          "position": 1274
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\config\\env.d.ts",
        "start": 31,
        "end": 60,
        "startLoc": {
          "line": 31,
          "column": 2,
          "position": 453
        },
        "endLoc": {
          "line": 60,
          "column": 2,
          "position": 716
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", {\n    type?: \"director\" | \"agent\";\n    agent_key?: string;\n    department?: string;\n    department_key?: string;\n    agent_name?: string;\n    hitl?: boolean;\n    SLA_minutes?: number;\n    make_scenario_id?: string;\n    approval_tool?: string;\n    budget_weight?: number;\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\config\\agents.master.d.ts",
        "start": 24,
        "end": 35,
        "startLoc": {
          "line": 24,
          "column": 2,
          "position": 259
        },
        "endLoc": {
          "line": 35,
          "column": 2,
          "position": 348
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\config\\agents.master.d.ts",
        "start": 13,
        "end": 24,
        "startLoc": {
          "line": 13,
          "column": 11,
          "position": 170
        },
        "endLoc": {
          "line": 24,
          "column": 2,
          "position": 259
        }
      }
    },
    {
      "format": "typescript",
      "lines": 34,
      "fragment": "z.ZodObject<{\n    department: z.ZodString;\n    department_key: z.ZodString;\n    type: z.ZodUnion<[z.ZodLiteral<\"agent\">, z.ZodLiteral<\"director\">]>;\n    agent_key: z.ZodString;\n    agent_name: z.ZodString;\n    hitl: z.ZodDefault<z.ZodBoolean>;\n    SLA_minutes: z.ZodDefault<z.ZodNumber>;\n    make_scenario_id: z.ZodOptional<z.ZodString>;\n    approval_tool: z.ZodOptional<z.ZodString>;\n    budget_weight: z.ZodDefault<z.ZodNumber>;\n}, \"strip\", z.ZodTypeAny, {\n    type?: \"director\" | \"agent\";\n    agent_key?: string;\n    department?: string;\n    department_key?: string;\n    agent_name?: string;\n    hitl?: boolean;\n    SLA_minutes?: number;\n    make_scenario_id?: string;\n    approval_tool?: string;\n    budget_weight?: number;\n}, {\n    type?: \"director\" | \"agent\";\n    agent_key?: string;\n    department?: string;\n    department_key?: string;\n    agent_name?: string;\n    hitl?: boolean;\n    SLA_minutes?: number;\n    make_scenario_id?: string;\n    approval_tool?: string;\n    budget_weight?: number;\n}>,",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\config\\agents.master.d.ts",
        "start": 36,
        "end": 69,
        "startLoc": {
          "line": 36,
          "column": 2,
          "position": 364
        },
        "endLoc": {
          "line": 69,
          "column": 2,
          "position": 691
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\config\\agents.master.d.ts",
        "start": 2,
        "end": 35,
        "startLoc": {
          "line": 2,
          "column": 2,
          "position": 22
        },
        "endLoc": {
          "line": 35,
          "column": 2,
          "position": 349
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "{\n    type?: \"director\" | \"agent\";\n    agent_key?: string;\n    department?: string;\n    department_key?: string;\n    agent_name?: string;\n    hitl?: boolean;\n    SLA_minutes?: number;\n    make_scenario_id?: string;\n    approval_tool?: string;\n    budget_weight?: number;\n}[",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\config\\agents.master.d.ts",
        "start": 70,
        "end": 81,
        "startLoc": {
          "line": 70,
          "column": 2,
          "position": 708
        },
        "endLoc": {
          "line": 81,
          "column": 2,
          "position": 795
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\config\\agents.master.d.ts",
        "start": 13,
        "end": 24,
        "startLoc": {
          "line": 13,
          "column": 2,
          "position": 172
        },
        "endLoc": {
          "line": 24,
          "column": 2,
          "position": 259
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ": {\n    type?: \"director\" | \"agent\";\n    agent_key?: string;\n    department?: string;\n    department_key?: string;\n    agent_name?: string;\n    hitl?: boolean;\n    SLA_minutes?: number;\n    make_scenario_id?: string;\n    approval_tool?: string;\n    budget_weight?: number;\n}[];\n//# sourceMappingURL=agents.master.d.ts.map",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\config\\agents.master.d.ts",
        "start": 82,
        "end": 94,
        "startLoc": {
          "line": 82,
          "column": 14,
          "position": 806
        },
        "endLoc": {
          "line": 94,
          "column": 44,
          "position": 899
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\config\\agents.master.d.ts",
        "start": 70,
        "end": 82,
        "startLoc": {
          "line": 70,
          "column": 2,
          "position": 706
        },
        "endLoc": {
          "line": 82,
          "column": 7,
          "position": 799
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": "export { CreateUserUseCase } from './use-cases/user/create-user.use-case.js';\nexport { UpdateUserUseCase } from './use-cases/user/update-user.use-case.js';\nexport { DeleteUserUseCase } from './use-cases/user/delete-user.use-case.js';\nexport { CreateCompanyUseCase } from './use-cases/company/create-company.use-case.js';\nexport { UpdateCompanyUseCase } from './use-cases/company/update-company.use-case.js';\nexport { CreateContactUseCase } from './use-cases/contact/create-contact.use-case.js';\nexport { UpdateContactUseCase } from './use-cases/contact/update-contact.use-case.js';\nexport { CreateProductUseCase } from './use-cases/product/create-product.use-case.js';\nexport { UpdateProductUseCase } from './use-cases/product/update-product.use-case.js';\nexport { CreateInvoiceUseCase } from './use-cases/invoice/create-invoice.use-case.js';\nexport { UpdateInvoiceUseCase } from './use-cases/invoice/update-invoice.use-case.js';\nexport { CreateInventoryKardexUseCase } from './use-cases/inventory-kardex/create-inventory-kardex.use-case.js';\nexport { UpdateInventoryKardexUseCase } from './use-cases/inventory-kardex/update-inventory-kardex.use-case.js';\nexport { RecordMovementUseCase } from './use-cases/inventory-kardex/record-movement.use-case.js';\nexport { CreatePredictiveAnalyticsUseCase } from './use-cases/predictive-analytics/create-predictive-analytics.use-case.js';\nexport { UpdatePredictiveAnalyticsUseCase } from './use-cases/predictive-analytics/update-predictive-analytics.use-case.js';\nexport { GeneratePredictionUseCase } from './use-cases/predictive-analytics/generate-prediction.use-case.js';\nexport { TrainModelUseCase } from './use-cases/predictive-analytics/train-model.use-case.js';\nexport { CreateArchitectureUseCase } from './use-cases/architecture/create-architecture.use-case.js';\nexport { AnalyzeArchitectureUseCase } from './use-cases/architecture/analyze-architecture.use-case.js';\nexport { IntelligentSearchUseCase } from './use-cases/search/intelligent-search.use-case.js';\nexport { GetSuggestionsUseCase } from './use-cases/search/get-suggestions.use-case.js';\nexport { IndexEntityUseCase } from './use-cases/search/index-entity.use-case.js';\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\index.d.ts",
        "start": 3,
        "end": 26,
        "startLoc": {
          "line": 3,
          "column": 1,
          "position": 34
        },
        "endLoc": {
          "line": 26,
          "column": 7,
          "position": 333
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\index.ts",
        "start": 10,
        "end": 34,
        "startLoc": {
          "line": 10,
          "column": 1,
          "position": 46
        },
        "endLoc": {
          "line": 34,
          "column": 24,
          "position": 346
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": "export type { CreateUserRequest, CreateUserResponse } from './use-cases/user/create-user.use-case.js';\nexport type { UpdateUserRequest, UpdateUserResponse } from './use-cases/user/update-user.use-case.js';\nexport type { DeleteUserRequest, DeleteUserResponse } from './use-cases/user/delete-user.use-case.js';\nexport type { CreateCompanyRequest, CreateCompanyResponse } from './use-cases/company/create-company.use-case.js';\nexport type { UpdateCompanyRequest, UpdateCompanyResponse } from './use-cases/company/update-company.use-case.js';\nexport type { CreateContactRequest, CreateContactResponse } from './use-cases/contact/create-contact.use-case.js';\nexport type { UpdateContactRequest, UpdateContactResponse } from './use-cases/contact/update-contact.use-case.js';\nexport type { CreateProductRequest, CreateProductResponse } from './use-cases/product/create-product.use-case.js';\nexport type { UpdateProductRequest, UpdateProductResponse } from './use-cases/product/update-product.use-case.js';\nexport type { CreateInvoiceRequest, CreateInvoiceResponse } from './use-cases/invoice/create-invoice.use-case.js';\nexport type { UpdateInvoiceRequest, UpdateInvoiceResponse } from './use-cases/invoice/update-invoice.use-case.js';\nexport type { CreateInventoryKardexRequest, CreateInventoryKardexResponse } from './use-cases/inventory-kardex/create-inventory-kardex.use-case.js';\nexport type { UpdateInventoryKardexRequest, UpdateInventoryKardexResponse } from './use-cases/inventory-kardex/update-inventory-kardex.use-case.js';\nexport type { RecordMovementRequest, RecordMovementResponse } from './use-cases/inventory-kardex/record-movement.use-case.js';\nexport type { CreatePredictiveAnalyticsRequest, CreatePredictiveAnalyticsResponse } from './use-cases/predictive-analytics/create-predictive-analytics.use-case.js';\nexport type { UpdatePredictiveAnalyticsRequest, UpdatePredictiveAnalyticsResponse } from './use-cases/predictive-analytics/update-predictive-analytics.use-case.js';\nexport type { GeneratePredictionRequest, GeneratePredictionResponse } from './use-cases/predictive-analytics/generate-prediction.use-case.js';\nexport type { TrainModelRequest, TrainModelResponse } from './use-cases/predictive-analytics/train-model.use-case.js';\nexport type { CreateArchitectureRequest, CreateArchitectureResponse } from './use-cases/architecture/create-architecture.use-case.js';\nexport type { AnalyzeArchitectureRequest, AnalyzeArchitectureResponse } from './use-cases/architecture/analyze-architecture.use-case.js';\nexport type { IntelligentSearchRequest, IntelligentSearchResponse } from './use-cases/search/intelligent-search.use-case.js';\nexport type { GetSuggestionsRequest, GetSuggestionsResponse } from './use-cases/search/get-suggestions.use-case.js';\nexport type { IndexEntityRequest, IndexEntityResponse } from './use-cases/search/index-entity.use-case.js';\nexport type { UserSearchOptions, UserListResponse, UserStatsResponse } from './services/user.application.service.js';\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\application\\index.d.ts",
        "start": 27,
        "end": 51,
        "startLoc": {
          "line": 27,
          "column": 1,
          "position": 346
        },
        "endLoc": {
          "line": 51,
          "column": 7,
          "position": 781
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\application\\index.ts",
        "start": 38,
        "end": 63,
        "startLoc": {
          "line": 38,
          "column": 1,
          "position": 364
        },
        "endLoc": {
          "line": 63,
          "column": 46,
          "position": 800
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ";\nimport { initFinOps, finalizeFinOps } from './middleware/finops.js';\nimport { telemetryMiddleware } from './middleware/telemetry.js';\n\nconst app = express();\napp.use(bodyParser.json());\n\n// CORS configuration with strict allowlist\nconst allow = (process.env.ALLOWED_ORIGINS || \"https://www.econeura.com\")\n  .split(\",\")\n  .map(s => s.trim());\n\napp.use(helmet({\n  contentSecurityPolicy: {\n    directives: {\n      defaultSrc: [\"'self'\"],\n      scriptSrc: [\"'self'\"],\n      styleSrc: [\"'self'\", \"'unsafe-inline'\"],\n      imgSrc: [\"'self'\", \"data:\", \"https:\"],\n      connectSrc: [\"'self'\"]",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api-agents-make\\src\\server.ts",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 21,
          "position": 52
        },
        "endLoc": {
          "line": 25,
          "column": 2,
          "position": 223
        }
      },
      "secondFile": {
        "name": "apps\\api-neura-comet\\src\\server.ts",
        "start": 5,
        "end": 24,
        "startLoc": {
          "line": 5,
          "column": 14,
          "position": 43
        },
        "endLoc": {
          "line": 24,
          "column": 2,
          "position": 214
        }
      }
    },
    {
      "format": "typescript",
      "lines": 33,
      "fragment": "],\n      frameSrc: [\"'none'\"],\n      objectSrc: [\"'none'\"],\n      baseUri: [\"'self'\"],\n      formAction: [\"'self'\"]\n    }\n  },\n  crossOriginEmbedderPolicy: false,\n  hsts: {\n    maxAge: 31536000,\n    includeSubDomains: true,\n    preload: true\n  }\n}));\napp.use(cors({\n  origin: (origin, callback) => {\n    // Allow requests with no origin (mobile apps, curl, etc.)\n    if (!origin) return callback(null, true);\n    \n    if (allow.includes(origin)) {\n      callback(null, true);\n    } else {\n      callback(new Error('Not allowed by CORS'));\n    }\n  },\n  credentials: true\n}));\n\n// Health check\napp.get(\"/health\", (_, res) => {\n  res.json({ \n    ok: true, \n    service: \"agents-make\"",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api-agents-make\\src\\server.ts",
        "start": 25,
        "end": 57,
        "startLoc": {
          "line": 25,
          "column": 9,
          "position": 223
        },
        "endLoc": {
          "line": 57,
          "column": 14,
          "position": 458
        }
      },
      "secondFile": {
        "name": "apps\\api-neura-comet\\src\\server.ts",
        "start": 24,
        "end": 57,
        "startLoc": {
          "line": 24,
          "column": 28,
          "position": 217
        },
        "endLoc": {
          "line": 57,
          "column": 14,
          "position": 453
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "();\n    const statusCode = result.status === 'ok' ? 200 : 503;\n    res.set('X-System-Mode', result.mode);\n    res.status(statusCode).json(result);\n  } catch (error) {\n    res.status(503).json({\n      status: \"error\",\n      mode: \"degraded\",\n      timestamp: new Date().toISOString(),\n      version: process.env.npm_package_version || '1.0.0',\n      error: (error as Error).message\n    });\n  }\n});\n\n// =============================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\index.final.ts",
        "start": 170,
        "end": 185,
        "startLoc": {
          "line": 170,
          "column": 18,
          "position": 1543
        },
        "endLoc": {
          "line": 185,
          "column": 81,
          "position": 1693
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\index.final.ts",
        "start": 153,
        "end": 168,
        "startLoc": {
          "line": 153,
          "column": 17,
          "position": 1356
        },
        "endLoc": {
          "line": 168,
          "column": 4,
          "position": 1506
        }
      }
    },
    {
      "format": "typescript",
      "lines": 40,
      "fragment": "();\n\n// Security middleware (PR-28)\napp.use(helmet({\n  contentSecurityPolicy: {\n    directives: {\n      defaultSrc: [\"'self'\"],\n      scriptSrc: [\"'self'\", \"'unsafe-inline'\"],\n      styleSrc: [\"'self'\", \"'unsafe-inline'\"],\n      imgSrc: [\"'self'\", \"data:\", \"https:\"],\n      connectSrc: [\"'self'\", \"https:\"],\n    },\n  },\n  hsts: {\n    maxAge: 31536000,\n    includeSubDomains: true,\n    preload: true\n  }\n}));\n\n// CORS configuration (PR-28)\napp.use(cors({\n  origin: ['http://localhost:3000', 'http://localhost:3001'],\n  credentials: true,\n  methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\n  allowedHeaders: ['Content-Type', 'Authorization', 'X-Org-ID', 'X-User-ID', 'X-Correlation-ID'],\n  exposedHeaders: ['X-System-Mode', 'X-Est-Cost-EUR', 'X-Budget-Pct', 'X-Latency-ms', 'X-Route']\n}));\n\n// Basic middleware\napp.use(express.json({ limit: '10mb' }));\napp.use(express.urlencoded({ extended: true }));\n\n// Apply observability middleware (PR-23)\napp.use(observabilityMiddleware);\n\n// Apply FinOps middleware (PR-29)\napp.use(finOpsMiddleware);\n\n// Apply rate limiting middleware (PR-29)",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\index.expanded.ts",
        "start": 33,
        "end": 72,
        "startLoc": {
          "line": 33,
          "column": 13,
          "position": 300
        },
        "endLoc": {
          "line": 72,
          "column": 42,
          "position": 592
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\index.final.ts",
        "start": 38,
        "end": 77,
        "startLoc": {
          "line": 38,
          "column": 18,
          "position": 330
        },
        "endLoc": {
          "line": 77,
          "column": 36,
          "position": 622
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "app.get(\"/health\", (req, res) => {\n  const ts = new Date().toISOString();\n  const version = process.env.npm_package_version || \"1.0.0\";\n  const currentMode = healthModeManager.getCurrentMode();\n  res.set('X-System-Mode', currentMode);\n  res.status(200).json({\n    status: \"ok\",\n    ts,\n    version,\n    mode: currentMode\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\index.expanded.ts",
        "start": 86,
        "end": 96,
        "startLoc": {
          "line": 86,
          "column": 1,
          "position": 674
        },
        "endLoc": {
          "line": 96,
          "column": 2,
          "position": 788
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\index.final.ts",
        "start": 137,
        "end": 146,
        "startLoc": {
          "line": 137,
          "column": 1,
          "position": 1185
        },
        "endLoc": {
          "line": 146,
          "column": 2,
          "position": 1297
        }
      }
    },
    {
      "format": "typescript",
      "lines": 35,
      "fragment": "app.get(\"/health/live\", async (req, res) => {\n  try {\n    const result = await healthModeManager.getLivenessProbe();\n    const statusCode = result.status === 'ok' ? 200 : 503;\n    res.set('X-System-Mode', result.mode);\n    res.status(statusCode).json(result);\n  } catch (error) {\n    res.status(503).json({\n      status: \"error\",\n      mode: \"degraded\",\n      timestamp: new Date().toISOString(),\n      version: process.env.npm_package_version || '1.0.0',\n      error: (error as Error).message\n    });\n  }\n});\n\napp.get(\"/health/ready\", async (req, res) => {\n  try {\n    const result = await healthModeManager.getReadinessProbe();\n    const statusCode = result.status === 'ok' ? 200 : 503;\n    res.set('X-System-Mode', result.mode);\n    res.status(statusCode).json(result);\n  } catch (error) {\n    res.status(503).json({\n      status: \"error\",\n      mode: \"degraded\",\n      timestamp: new Date().toISOString(),\n      version: process.env.npm_package_version || '1.0.0',\n      error: (error as Error).message\n    });\n  }\n});\n\n// System metrics endpoint",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\index.expanded.ts",
        "start": 100,
        "end": 134,
        "startLoc": {
          "line": 100,
          "column": 1,
          "position": 799
        },
        "endLoc": {
          "line": 134,
          "column": 27,
          "position": 1173
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\index.final.ts",
        "start": 151,
        "end": 168,
        "startLoc": {
          "line": 151,
          "column": 1,
          "position": 1319
        },
        "endLoc": {
          "line": 168,
          "column": 4,
          "position": 1506
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ", error as Error);\n      process.exit(1);\n    }\n  };\n\n  process.on('SIGTERM', () => shutdownHandler('SIGTERM'));\n  process.on('SIGINT', () => shutdownHandler('SIGINT'));\n  \n  // Handle uncaught exceptions\n  process.on('uncaughtException', (error) => {\n    apiLogger",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\src\\bootstrap.example.ts",
        "start": 122,
        "end": 132,
        "startLoc": {
          "line": 122,
          "column": 24,
          "position": 783
        },
        "endLoc": {
          "line": 132,
          "column": 10,
          "position": 872
        }
      },
      "secondFile": {
        "name": "apps\\workers\\src\\bootstrap.example.ts",
        "start": 143,
        "end": 153,
        "startLoc": {
          "line": 143,
          "column": 31,
          "position": 1087
        },
        "endLoc": {
          "line": 153,
          "column": 13,
          "position": 1176
        }
      }
    },
    {
      "format": "typescript",
      "lines": 34,
      "fragment": "{\n  openapi: '3.1.0',\n  info: {\n    title: 'ECONEURA API',\n    version: '1.0.0',\n    description: 'Production-ready ERP+CRM API with AI capabilities',\n    contact: {\n      name: 'ECONEURA Team',\n      email: 'api@econeura.dev',\n      url: 'https://econeura.dev'\n    },\n    license: {\n      name: 'Proprietary',\n      url: 'https://econeura.dev/license'\n    }\n  },\n  servers: [\n    {\n      url: process.env.API_URL || 'http://localhost:4000',\n      description: 'Development server',\n    },\n    {\n      url: 'https://api.econeura.dev',\n      description: 'Production server',\n    },\n  ],\n  tags: [\n    { name: 'Authentication', description: 'User authentication and session management' },\n    { name: 'CRM - Companies', description: 'Company management' },\n    { name: 'CRM - Contacts', description: 'Contact management' },  \n    { name: 'CRM - Deals', description: 'Deal pipeline management' },\n    { name: 'ERP - Products', description: 'Product catalog management' },\n    { name: 'ERP - Inventory', description: 'Inventory tracking and adjustments' },\n    { name: 'Finance - Invoices'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\scripts\\generate-openapi.ts",
        "start": 6,
        "end": 39,
        "startLoc": {
          "line": 6,
          "column": 2,
          "position": 46
        },
        "endLoc": {
          "line": 39,
          "column": 21,
          "position": 313
        }
      },
      "secondFile": {
        "name": "apps\\api\\scripts\\openapi.ts",
        "start": 595,
        "end": 628,
        "startLoc": {
          "line": 595,
          "column": 2,
          "position": 3708
        },
        "endLoc": {
          "line": 628,
          "column": 18,
          "position": 3974
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "name: { type: 'string', minLength: 2, maxLength: 120 },\n          industry: { type: 'string', maxLength: 80 },\n          website: { type: 'string', format: 'uri' },\n          employees: { type: 'integer', minimum: 0, default: 0 },\n          status: { type: 'string', enum: ['active', 'inactive', 'prospect'], default: 'prospect' },\n          taxId: { type: 'string', maxLength: 50 },\n          email: { type: 'string', format: 'email' },\n          phone: { type: 'string', maxLength: 50 },\n          address: { type: 'string', maxLength: 500 },\n          city: { type: 'string', maxLength: 100 },\n          country: { type: 'string', maxLength: 100 },\n          tags: { type: 'array', items: { type: 'string' }, default: [] },\n        }",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\scripts\\generate-openapi.ts",
        "start": 130,
        "end": 142,
        "startLoc": {
          "line": 130,
          "column": 11,
          "position": 1317
        },
        "endLoc": {
          "line": 142,
          "column": 2,
          "position": 1597
        }
      },
      "secondFile": {
        "name": "apps\\api\\scripts\\generate-openapi.ts",
        "start": 109,
        "end": 121,
        "startLoc": {
          "line": 109,
          "column": 11,
          "position": 921
        },
        "endLoc": {
          "line": 121,
          "column": 10,
          "position": 1201
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ",\n        tags: ['CRM - Companies'],\n        security: [{ bearerAuth: [] }],\n        parameters: [\n          {\n            name: 'id',\n            in: 'path',\n            required: true,\n            schema: { type: 'string', format: 'uuid' }\n          }\n        ],\n        responses: {\n          '204'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\scripts\\generate-openapi.ts",
        "start": 523,
        "end": 535,
        "startLoc": {
          "line": 523,
          "column": 17,
          "position": 4695
        },
        "endLoc": {
          "line": 535,
          "column": 6,
          "position": 4786
        }
      },
      "secondFile": {
        "name": "apps\\api\\scripts\\generate-openapi.ts",
        "start": 461,
        "end": 473,
        "startLoc": {
          "line": 461,
          "column": 20,
          "position": 4289
        },
        "endLoc": {
          "line": 473,
          "column": 6,
          "position": 4380
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "],\n        security: [{ bearerAuth: [] }],\n        parameters: [\n          {\n            name: 'id',\n            in: 'path',\n            required: true,\n            schema: { type: 'string', format: 'uuid' }\n          }\n        ],\n        responses: {\n          '204': {\n            description: 'Company deleted'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\scripts\\generate-openapi.ts",
        "start": 524,
        "end": 536,
        "startLoc": {
          "line": 524,
          "column": 18,
          "position": 4703
        },
        "endLoc": {
          "line": 536,
          "column": 18,
          "position": 4795
        }
      },
      "secondFile": {
        "name": "apps\\api\\scripts\\generate-openapi.ts",
        "start": 373,
        "end": 385,
        "startLoc": {
          "line": 373,
          "column": 17,
          "position": 3573
        },
        "endLoc": {
          "line": 385,
          "column": 18,
          "position": 3665
        }
      }
    },
    {
      "format": "javascript",
      "lines": 16,
      "fragment": "();\n        const statusCode = result.status === 'ok' ? 200 : 503;\n        res.set('X-System-Mode', result.mode);\n        res.status(statusCode).json(result);\n    }\n    catch (error) {\n        res.status(503).json({\n            status: \"error\",\n            mode: \"degraded\",\n            timestamp: new Date().toISOString(),\n            version: process.env.npm_package_version || '1.0.0',\n            error: error.message\n        });\n    }\n});\napp.get(\"/metrics\"",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\index.final.js",
        "start": 131,
        "end": 146,
        "startLoc": {
          "line": 131,
          "column": 18,
          "position": 1452
        },
        "endLoc": {
          "line": 146,
          "column": 11,
          "position": 1600
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\index.final.js",
        "start": 114,
        "end": 129,
        "startLoc": {
          "line": 114,
          "column": 17,
          "position": 1271
        },
        "endLoc": {
          "line": 129,
          "column": 16,
          "position": 1419
        }
      }
    },
    {
      "format": "javascript",
      "lines": 29,
      "fragment": "();\napp.use(helmet({\n    contentSecurityPolicy: {\n        directives: {\n            defaultSrc: [\"'self'\"],\n            scriptSrc: [\"'self'\", \"'unsafe-inline'\"],\n            styleSrc: [\"'self'\", \"'unsafe-inline'\"],\n            imgSrc: [\"'self'\", \"data:\", \"https:\"],\n            connectSrc: [\"'self'\", \"https:\"],\n        },\n    },\n    hsts: {\n        maxAge: 31536000,\n        includeSubDomains: true,\n        preload: true\n    }\n}));\napp.use(cors({\n    origin: ['http://localhost:3000', 'http://localhost:3001'],\n    credentials: true,\n    methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\n    allowedHeaders: ['Content-Type', 'Authorization', 'X-Org-ID', 'X-User-ID', 'X-Correlation-ID'],\n    exposedHeaders: ['X-System-Mode', 'X-Est-Cost-EUR', 'X-Budget-Pct', 'X-Latency-ms', 'X-Route']\n}));\napp.use(express.json({ limit: '10mb' }));\napp.use(express.urlencoded({ extended: true }));\napp.use(observabilityMiddleware);\napp.use(finOpsMiddleware);\napp",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\index.expanded.js",
        "start": 23,
        "end": 51,
        "startLoc": {
          "line": 23,
          "column": 13,
          "position": 285
        },
        "endLoc": {
          "line": 51,
          "column": 4,
          "position": 561
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\index.final.js",
        "start": 23,
        "end": 51,
        "startLoc": {
          "line": 23,
          "column": 18,
          "position": 285
        },
        "endLoc": {
          "line": 51,
          "column": 6,
          "position": 561
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": ");\napp.get(\"/health\", (req, res) => {\n    const ts = new Date().toISOString();\n    const version = process.env.npm_package_version || \"1.0.0\";\n    const currentMode = healthModeManager.getCurrentMode();\n    res.set('X-System-Mode', currentMode);\n    res.status(200).json({\n        status: \"ok\",\n        ts,\n        version,\n        mode: currentMode\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\index.expanded.js",
        "start": 57,
        "end": 68,
        "startLoc": {
          "line": 57,
          "column": 2,
          "position": 625
        },
        "endLoc": {
          "line": 68,
          "column": 2,
          "position": 742
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\index.final.js",
        "start": 98,
        "end": 108,
        "startLoc": {
          "line": 98,
          "column": 2,
          "position": 1098
        },
        "endLoc": {
          "line": 108,
          "column": 2,
          "position": 1213
        }
      }
    },
    {
      "format": "javascript",
      "lines": 39,
      "fragment": "});\n});\napp.get(\"/health/live\", async (req, res) => {\n    try {\n        const result = await healthModeManager.getLivenessProbe();\n        const statusCode = result.status === 'ok' ? 200 : 503;\n        res.set('X-System-Mode', result.mode);\n        res.status(statusCode).json(result);\n    }\n    catch (error) {\n        res.status(503).json({\n            status: \"error\",\n            mode: \"degraded\",\n            timestamp: new Date().toISOString(),\n            version: process.env.npm_package_version || '1.0.0',\n            error: error.message\n        });\n    }\n});\napp.get(\"/health/ready\", async (req, res) => {\n    try {\n        const result = await healthModeManager.getReadinessProbe();\n        const statusCode = result.status === 'ok' ? 200 : 503;\n        res.set('X-System-Mode', result.mode);\n        res.status(statusCode).json(result);\n    }\n    catch (error) {\n        res.status(503).json({\n            status: \"error\",\n            mode: \"degraded\",\n            timestamp: new Date().toISOString(),\n            version: process.env.npm_package_version || '1.0.0',\n            error: error.message\n        });\n    }\n});\napp.get(\"/metrics\", async (req, res) => {\n    try {\n        const metrics",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\dist\\index.expanded.js",
        "start": 68,
        "end": 106,
        "startLoc": {
          "line": 68,
          "column": 5,
          "position": 742
        },
        "endLoc": {
          "line": 106,
          "column": 8,
          "position": 1140
        }
      },
      "secondFile": {
        "name": "apps\\api\\dist\\index.final.js",
        "start": 110,
        "end": 148,
        "startLoc": {
          "line": 110,
          "column": 5,
          "position": 1226
        },
        "endLoc": {
          "line": 148,
          "column": 11,
          "position": 1624
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": "import express from \"express\";\nimport cors from \"cors\";\nimport helmet from \"helmet\";\nimport { structuredLogger } from './lib/structured-logger.js';\nimport { ErrorHandler } from './lib/error-handler.js';\n\n// Import health modes (PR-22)\nimport { healthModeManager } from './lib/health-modes.js';\nimport { healthMonitor } from './lib/health-monitor.js';\nimport { cacheManager } from './lib/advanced-cache.js';\n\n// Import FinOps services (PR-45)\nimport { finOpsSystem } from './lib/finops.js';\nimport { BudgetManagerService } from './lib/budget-manager.service.js';\nimport { CostTrackerService } from './lib/cost-tracker.service.js';\nimport { CostOptimizerService } from './lib/cost-optimizer.service.js';\n\n// Import SEPA services (PR-42)\nimport { SEPAParserService } from './lib/sepa-parser.service.js';\n\n// Quiet Hours services (PR-46) - Using simplified endpoints",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\backup\\index.working.backup.ts",
        "start": 1,
        "end": 21,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 21,
          "column": 61,
          "position": 167
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\index.final.ts",
        "start": 1,
        "end": 21,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 21,
          "column": 44,
          "position": 167
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "import { analyticsRouter } from './routes/analytics.js';\nimport { eventsRouter } from './routes/events.js';\nimport { cockpitRouter } from './routes/cockpit.js';\n\nconst app = express();\nconst PORT = process.env.PORT || 3001;\n\n// Initialize services\nconst errorHandler = new ErrorHandler();\nconst budgetManager = new BudgetManagerService();\nconst costTracker = new CostTrackerService();\nconst costOptimizer = new CostOptimizerService();\nconst sepaParser = new SEPAParserService();\n// Quiet Hours services (PR-46) - Simplified implementation",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\backup\\index.working.backup.ts",
        "start": 30,
        "end": 43,
        "startLoc": {
          "line": 30,
          "column": 1,
          "position": 204
        },
        "endLoc": {
          "line": 43,
          "column": 60,
          "position": 340
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\index.final.ts",
        "start": 26,
        "end": 40,
        "startLoc": {
          "line": 26,
          "column": 1,
          "position": 198
        },
        "endLoc": {
          "line": 40,
          "column": 31,
          "position": 335
        }
      }
    },
    {
      "format": "typescript",
      "lines": 38,
      "fragment": "// Security middleware (PR-28)\napp.use(helmet({\n  contentSecurityPolicy: {\n    directives: {\n      defaultSrc: [\"'self'\"],\n      scriptSrc: [\"'self'\", \"'unsafe-inline'\"],\n      styleSrc: [\"'self'\", \"'unsafe-inline'\"],\n      imgSrc: [\"'self'\", \"data:\", \"https:\"],\n      connectSrc: [\"'self'\", \"https:\"],\n    },\n  },\n  hsts: {\n    maxAge: 31536000,\n    includeSubDomains: true,\n    preload: true\n  }\n}));\n\n// CORS configuration (PR-28)\napp.use(cors({\n  origin: ['http://localhost:3000', 'http://localhost:3001'],\n  credentials: true,\n  methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\n  allowedHeaders: ['Content-Type', 'Authorization', 'X-Org-ID', 'X-User-ID', 'X-Correlation-ID'],\n  exposedHeaders: ['X-System-Mode', 'X-Est-Cost-EUR', 'X-Budget-Pct', 'X-Latency-ms', 'X-Route']\n}));\n\n// Basic middleware\napp.use(express.json({ limit: '10mb' }));\napp.use(express.urlencoded({ extended: true }));\n\n// Apply observability middleware (PR-23)\napp.use(observabilityMiddleware);\n\n// Apply FinOps middleware (PR-29)\napp.use(finOpsMiddleware);\n\n// Simple rate limiting (PR-29)",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\backup\\index.working.backup.ts",
        "start": 46,
        "end": 83,
        "startLoc": {
          "line": 46,
          "column": 1,
          "position": 345
        },
        "endLoc": {
          "line": 83,
          "column": 32,
          "position": 632
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\index.final.ts",
        "start": 40,
        "end": 77,
        "startLoc": {
          "line": 40,
          "column": 1,
          "position": 335
        },
        "endLoc": {
          "line": 77,
          "column": 36,
          "position": 622
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": "const rateLimitStore = new Map();\napp.use((req, res, next) => {\n  const ip = req.ip || req.connection.remoteAddress || 'unknown';\n  const now = Date.now();\n  const windowMs = 15 * 60 * 1000; // 15 minutes\n  const maxRequests = 100;\n  \n  if (!rateLimitStore.has(ip)) {\n    rateLimitStore.set(ip, { count: 1, resetTime: now + windowMs });\n    return next();\n  }\n  \n  const record = rateLimitStore.get(ip);\n  if (now > record.resetTime) {\n    record.count = 1;\n    record.resetTime = now + windowMs;\n    return next();\n  }\n  \n  if (record.count >= maxRequests) {\n    return res.status(429).json({\n      error: 'Too Many Requests',\n      message: 'Rate limit exceeded',\n      retryAfter: Math.ceil((record.resetTime - now) / 1000)\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\backup\\index.working.backup.ts",
        "start": 84,
        "end": 108,
        "startLoc": {
          "line": 84,
          "column": 1,
          "position": 634
        },
        "endLoc": {
          "line": 108,
          "column": 2,
          "position": 926
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\index.final.ts",
        "start": 78,
        "end": 101,
        "startLoc": {
          "line": 78,
          "column": 1,
          "position": 624
        },
        "endLoc": {
          "line": 101,
          "column": 2,
          "position": 914
        }
      }
    },
    {
      "format": "typescript",
      "lines": 52,
      "fragment": ");\n\n// Basic health check endpoint (< 200ms, no external dependencies)\napp.get(\"/health\", (req, res) => {\n  const ts = new Date().toISOString();\n  const version = process.env.npm_package_version || \"1.0.0\";\n  const currentMode = healthModeManager.getCurrentMode();\n  res.set('X-System-Mode', currentMode);\n  res.status(200).json({\n    status: \"ok\",\n    ts,\n    version,\n    mode: currentMode\n  });\n});\n\n// Enhanced Health check endpoints (PR-22)\napp.get(\"/health/live\", async (req, res) => {\n  try {\n    const result = await healthModeManager.getLivenessProbe();\n    const statusCode = result.status === 'ok' ? 200 : 503;\n    res.set('X-System-Mode', result.mode);\n    res.status(statusCode).json(result);\n  } catch (error) {\n    res.status(503).json({\n      status: \"error\",\n      mode: \"degraded\",\n      timestamp: new Date().toISOString(),\n      version: process.env.npm_package_version || '1.0.0',\n      error: (error as Error).message\n    });\n  }\n});\n\napp.get(\"/health/ready\", async (req, res) => {\n  try {\n    const result = await healthModeManager.getReadinessProbe();\n    const statusCode = result.status === 'ok' ? 200 : 503;\n    res.set('X-System-Mode', result.mode);\n    res.status(statusCode).json(result);\n  } catch (error) {\n    res.status(503).json({\n      status: \"error\",\n      mode: \"degraded\",\n      timestamp: new Date().toISOString(),\n      version: process.env.npm_package_version || '1.0.0',\n      error: (error as Error).message\n    });\n  }\n});\n\n// FinOps endpoints (PR-45)",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\backup\\index.working.backup.ts",
        "start": 126,
        "end": 177,
        "startLoc": {
          "line": 126,
          "column": 2,
          "position": 1069
        },
        "endLoc": {
          "line": 177,
          "column": 28,
          "position": 1574
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\index.expanded.ts",
        "start": 83,
        "end": 168,
        "startLoc": {
          "line": 83,
          "column": 2,
          "position": 668
        },
        "endLoc": {
          "line": 168,
          "column": 4,
          "position": 1506
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "app.get(\"/v1/finops/budgets\", async (req, res) => {\n  try {\n    const orgId = req.headers['x-org-id'] as string || 'demo-org';\n    const budgets = budgetManager.getBudgets(orgId);\n    \n    res.set({\n      'X-Est-Cost-EUR': '0.0020',\n      'X-Budget-Pct': '0.3',\n      'X-Latency-ms': '45',\n      'X-Route': 'local'\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\backup\\index.working.backup.ts",
        "start": 178,
        "end": 188,
        "startLoc": {
          "line": 178,
          "column": 1,
          "position": 1576
        },
        "endLoc": {
          "line": 188,
          "column": 2,
          "position": 1676
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\index.final.ts",
        "start": 269,
        "end": 278,
        "startLoc": {
          "line": 269,
          "column": 1,
          "position": 2361
        },
        "endLoc": {
          "line": 278,
          "column": 2,
          "position": 2459
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": "});\n  } catch (error) {\n    res.status(500).json({\n      success: false,\n      error: 'Failed to get budgets',\n      message: (error as Error).message\n    });\n  }\n});\n\napp.post(\"/v1/finops/budgets\", async (req, res) => {\n  try {\n    const budget = await budgetManager.createBudget(req.body);\n    \n    res.set({\n      'X-Est-Cost-EUR': '0.0050',\n      'X-Budget-Pct': '0.8',\n      'X-Latency-ms': '120',\n      'X-Route': 'local'\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\backup\\index.working.backup.ts",
        "start": 194,
        "end": 213,
        "startLoc": {
          "line": 194,
          "column": 5,
          "position": 1712
        },
        "endLoc": {
          "line": 213,
          "column": 2,
          "position": 1861
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\index.final.ts",
        "start": 291,
        "end": 309,
        "startLoc": {
          "line": 291,
          "column": 5,
          "position": 2580
        },
        "endLoc": {
          "line": 309,
          "column": 2,
          "position": 2727
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "});\n    \n    res.status(201).json({\n      success: true,\n      data: budget,\n      message: 'Budget created successfully'\n    });\n  } catch (error) {\n    res.status(500).json({\n      success: false,\n      error: 'Failed to create budget',\n      message: (error as Error).message\n    });\n  }\n});\n\napp.get(\"/v1/finops/costs\", async (req, res) => {\n  try {\n    const orgId = req.headers['x-org-id'] as string || 'demo-org';\n    const costs = costTracker.getCostsByService(orgId);\n    \n    res",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\backup\\index.working.backup.ts",
        "start": 213,
        "end": 234,
        "startLoc": {
          "line": 213,
          "column": 5,
          "position": 1861
        },
        "endLoc": {
          "line": 234,
          "column": 4,
          "position": 2034
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\index.final.ts",
        "start": 311,
        "end": 331,
        "startLoc": {
          "line": 311,
          "column": 5,
          "position": 2744
        },
        "endLoc": {
          "line": 331,
          "column": 6,
          "position": 2915
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "app.get(\"/v1/quiet-hours\", async (req, res) => {\n  const orgId = req.headers['x-org-id'] as string || 'demo-org';\n  const quietHoursConfig = {\n    orgId,\n    enabled: true,\n    timezone: 'Europe/Madrid',\n    weekdayHours: { start: '22:00', end: '08:00' },\n    weekendHours: { start: '20:00', end: '10:00' },\n    notifications: {\n      email: false,\n      sms: false,\n      teams: false\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\backup\\index.working.backup.ts",
        "start": 330,
        "end": 342,
        "startLoc": {
          "line": 330,
          "column": 1,
          "position": 2738
        },
        "endLoc": {
          "line": 342,
          "column": 2,
          "position": 2875
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\index.final.ts",
        "start": 515,
        "end": 526,
        "startLoc": {
          "line": 515,
          "column": 1,
          "position": 4508
        },
        "endLoc": {
          "line": 526,
          "column": 2,
          "position": 4643
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ",\n    lastUpdated: new Date().toISOString()\n  };\n  \n  res.json({\n    success: true,\n    data: quietHoursConfig\n  });\n});\n\napp.post(\"/v1/quiet-hours\", async (req, res) => {\n  const orgId = req.headers['x-org-id'] as string || 'demo-org';\n  const config = {\n    ...req.body,\n    orgId,\n    lastUpdated: new Date().toISOString()\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\backup\\index.working.backup.ts",
        "start": 342,
        "end": 358,
        "startLoc": {
          "line": 342,
          "column": 2,
          "position": 2876
        },
        "endLoc": {
          "line": 358,
          "column": 2,
          "position": 3006
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\index.final.ts",
        "start": 535,
        "end": 550,
        "startLoc": {
          "line": 535,
          "column": 2,
          "position": 4689
        },
        "endLoc": {
          "line": 550,
          "column": 2,
          "position": 4817
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "}\n`;\n    \n    res.set('Content-Type', 'text/plain');\n    res.send(metrics.trim());\n  } catch (error) {\n    res.status(500).json({\n      error: 'Failed to get metrics',\n      message: (error as Error).message\n    });\n  }\n});\n\n// Cache statistics endpoint",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\backup\\index.working.backup.ts",
        "start": 442,
        "end": 455,
        "startLoc": {
          "line": 442,
          "column": 2,
          "position": 3730
        },
        "endLoc": {
          "line": 455,
          "column": 29,
          "position": 3818
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\index.final.ts",
        "start": 222,
        "end": 235,
        "startLoc": {
          "line": 222,
          "column": 5,
          "position": 1898
        },
        "endLoc": {
          "line": 235,
          "column": 4,
          "position": 1986
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ",\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    res.status(500).json({\n      success: false,\n      error: 'Failed to get cache stats',\n      message: (error as Error).message\n    });\n  }\n});\n\n// API info endpoint with comprehensive feature list",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\backup\\index.working.backup.ts",
        "start": 461,
        "end": 473,
        "startLoc": {
          "line": 461,
          "column": 6,
          "position": 3876
        },
        "endLoc": {
          "line": 473,
          "column": 53,
          "position": 3961
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\index.final.ts",
        "start": 253,
        "end": 265,
        "startLoc": {
          "line": 253,
          "column": 2,
          "position": 2269
        },
        "endLoc": {
          "line": 265,
          "column": 81,
          "position": 2354
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ",\n      message: (error as Error).message\n    });\n  }\n});\n\n// API info endpoint with comprehensive feature list\napp.get(\"/\", (req, res) => {\n  res.json({\n    name: \"ECONEURA API\",\n    version: process.env.npm_package_version || \"1.0.0\",\n    status: \"running\",\n    timestamp: new Date().toISOString(),\n    features: [\n      \"PR-22: Health modes (live/ready/degraded)\",\n      \"PR-23: Observability coherente (logs + métricas + traces)\",\n      \"PR-24: Analytics events with Zod validation\", \n      \"PR-27: Validación básica en requests\"",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\backup\\index.working.backup.ts",
        "start": 467,
        "end": 484,
        "startLoc": {
          "line": 467,
          "column": 28,
          "position": 3932
        },
        "endLoc": {
          "line": 484,
          "column": 39,
          "position": 4052
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\index.expanded.ts",
        "start": 142,
        "end": 159,
        "startLoc": {
          "line": 142,
          "column": 24,
          "position": 1265
        },
        "endLoc": {
          "line": 159,
          "column": 44,
          "position": 1385
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "]\n  });\n});\n\n// Start server\nconst server = app.listen(PORT, () => {\n  structuredLogger.info(`ECONEURA API Server running on port ${PORT}`, {\n    port: PORT,\n    environment: process.env.NODE_ENV || 'development',\n    version: process.env.npm_package_version || '1.0.0',\n    features: [\n      'PR-22: Health modes (live/ready/degraded)',\n      'PR-23: Observability coherente (logs + métricas + traces)',\n      'PR-24: Analytics events with Zod validation', \n      'PR-27: Validación básica en requests'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\backup\\index.working.backup.ts",
        "start": 567,
        "end": 581,
        "startLoc": {
          "line": 567,
          "column": 5,
          "position": 4578
        },
        "endLoc": {
          "line": 581,
          "column": 39,
          "position": 4683
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\index.expanded.ts",
        "start": 230,
        "end": 244,
        "startLoc": {
          "line": 230,
          "column": 5,
          "position": 1777
        },
        "endLoc": {
          "line": 244,
          "column": 44,
          "position": 1882
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "process.on('SIGTERM', () => {\n  structuredLogger.info('SIGTERM received, shutting down gracefully');\n  server.close(() => {\n    structuredLogger.info('Process terminated');\n    process.exit(0);\n  });\n});\n\nprocess.on('SIGINT', () => {\n  structuredLogger.info('SIGINT received, shutting down gracefully');\n  server.close(() => {\n    structuredLogger.info('Process terminated');\n    process.exit(0);\n  });\n});\n\nexport default app;",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\backup\\index.working.backup.ts",
        "start": 606,
        "end": 622,
        "startLoc": {
          "line": 606,
          "column": 1,
          "position": 4782
        },
        "endLoc": {
          "line": 622,
          "column": 2,
          "position": 4913
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\index.expanded.ts",
        "start": 257,
        "end": 273,
        "startLoc": {
          "line": 257,
          "column": 1,
          "position": 1927
        },
        "endLoc": {
          "line": 273,
          "column": 2,
          "position": 2058
        }
      }
    },
    {
      "format": "typescript",
      "lines": 52,
      "fragment": "));\n\n// Basic health check endpoint (< 200ms, no external dependencies)\napp.get(\"/health\", (req, res) => {\n  const ts = new Date().toISOString();\n  const version = process.env.npm_package_version || \"1.0.0\";\n  const currentMode = healthModeManager.getCurrentMode();\n  res.set('X-System-Mode', currentMode);\n  res.status(200).json({\n    status: \"ok\",\n    ts,\n    version,\n    mode: currentMode\n  });\n});\n\n// Enhanced Health check endpoints (PR-22)\napp.get(\"/health/live\", async (req, res) => {\n  try {\n    const result = await healthModeManager.getLivenessProbe();\n    const statusCode = result.status === 'ok' ? 200 : 503;\n    res.set('X-System-Mode', result.mode);\n    res.status(statusCode).json(result);\n  } catch (error) {\n    res.status(503).json({\n      status: \"error\",\n      mode: \"degraded\",\n      timestamp: new Date().toISOString(),\n      version: process.env.npm_package_version || '1.0.0',\n      error: (error as Error).message\n    });\n  }\n});\n\napp.get(\"/health/ready\", async (req, res) => {\n  try {\n    const result = await healthModeManager.getReadinessProbe();\n    const statusCode = result.status === 'ok' ? 200 : 503;\n    res.set('X-System-Mode', result.mode);\n    res.status(statusCode).json(result);\n  } catch (error) {\n    res.status(503).json({\n      status: \"error\",\n      mode: \"degraded\",\n      timestamp: new Date().toISOString(),\n      version: process.env.npm_package_version || '1.0.0',\n      error: (error as Error).message\n    });\n  }\n});\n\n// Basic API info endpoint",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\backup\\index.restored.backup.ts",
        "start": 26,
        "end": 77,
        "startLoc": {
          "line": 26,
          "column": 2,
          "position": 233
        },
        "endLoc": {
          "line": 77,
          "column": 27,
          "position": 739
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\index.expanded.ts",
        "start": 83,
        "end": 168,
        "startLoc": {
          "line": 83,
          "column": 2,
          "position": 667
        },
        "endLoc": {
          "line": 168,
          "column": 4,
          "position": 1506
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ",\n    timestamp: new Date().toISOString()\n  });\n});\n\n// 404 handler\napp.use((req: express.Request, res: express.Response) => {\n  res.status(404).json({\n    error: 'Not found',\n    message: `Route ${req.method} ${req.path} not found`,\n    timestamp: new Date().toISOString()\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\backup\\index.restored.backup.ts",
        "start": 120,
        "end": 131,
        "startLoc": {
          "line": 120,
          "column": 31,
          "position": 1029
        },
        "endLoc": {
          "line": 131,
          "column": 2,
          "position": 1135
        }
      },
      "secondFile": {
        "name": "apps\\api\\backup\\index.working.backup.ts",
        "start": 550,
        "end": 224,
        "startLoc": {
          "line": 550,
          "column": 8,
          "position": 4422
        },
        "endLoc": {
          "line": 224,
          "column": 2,
          "position": 1732
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "});\n});\n\n// Start server\nconst server = app.listen(PORT, () => {\n  structuredLogger.info(`ECONEURA API Server running on port ${PORT}`, {\n    port: PORT,\n    environment: process.env.NODE_ENV || 'development',\n    version: process.env.npm_package_version || '1.0.0',\n    features: [\n      'PR-22: Health modes (live/ready/degraded)',\n      'PR-24: Analytics events with Zod validation'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\backup\\index.restored.backup.ts",
        "start": 131,
        "end": 142,
        "startLoc": {
          "line": 131,
          "column": 3,
          "position": 1135
        },
        "endLoc": {
          "line": 142,
          "column": 46,
          "position": 1228
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\index.expanded.ts",
        "start": 231,
        "end": 242,
        "startLoc": {
          "line": 231,
          "column": 3,
          "position": 1780
        },
        "endLoc": {
          "line": 242,
          "column": 60,
          "position": 1873
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "]\n  });\n});\n\n// Graceful shutdown\nprocess.on('SIGTERM', () => {\n  structuredLogger.info('SIGTERM received, shutting down gracefully');\n  server.close(() => {\n    structuredLogger.info('Process terminated');\n    process.exit(0);\n  });\n});\n\nprocess.on('SIGINT', () => {\n  structuredLogger.info('SIGINT received, shutting down gracefully');\n  server.close(() => {\n    structuredLogger.info('Process terminated');\n    process.exit(0);\n  });\n});\n\nexport default app;",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\backup\\index.restored.backup.ts",
        "start": 145,
        "end": 166,
        "startLoc": {
          "line": 145,
          "column": 5,
          "position": 1240
        },
        "endLoc": {
          "line": 166,
          "column": 2,
          "position": 1385
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\index.expanded.ts",
        "start": 252,
        "end": 273,
        "startLoc": {
          "line": 252,
          "column": 5,
          "position": 1913
        },
        "endLoc": {
          "line": 273,
          "column": 2,
          "position": 2058
        }
      }
    },
    {
      "format": "typescript",
      "lines": 72,
      "fragment": "import { healthModeManager } from './lib/health-modes.js';\n\n// Import routers for working PRs\nimport { analyticsRouter } from './routes/analytics.js';\nimport { eventsRouter } from './routes/events.js';\nimport { cockpitRouter } from './routes/cockpit.js';\n\nconst app = express();\nconst PORT = process.env.PORT || 3001;\n\n// Basic middleware\napp.use(express.json({ limit: '10mb' }));\napp.use(express.urlencoded({ extended: true }));\n\n// CORS configuration\napp.use(cors({\n  origin: ['http://localhost:3000', 'http://localhost:3001'],\n  credentials: true,\n  methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\n  allowedHeaders: ['Content-Type', 'Authorization', 'X-Org-ID', 'X-User-ID', 'X-Correlation-ID']\n}));\n\n// Basic health check endpoint (< 200ms, no external dependencies)\napp.get(\"/health\", (req, res) => {\n  const ts = new Date().toISOString();\n  const version = process.env.npm_package_version || \"1.0.0\";\n  const currentMode = healthModeManager.getCurrentMode();\n  res.set('X-System-Mode', currentMode);\n  res.status(200).json({\n    status: \"ok\",\n    ts,\n    version,\n    mode: currentMode\n  });\n});\n\n// Enhanced Health check endpoints (PR-22)\napp.get(\"/health/live\", async (req, res) => {\n  try {\n    const result = await healthModeManager.getLivenessProbe();\n    const statusCode = result.status === 'ok' ? 200 : 503;\n    res.set('X-System-Mode', result.mode);\n    res.status(statusCode).json(result);\n  } catch (error) {\n    res.status(503).json({\n      status: \"error\",\n      mode: \"degraded\",\n      timestamp: new Date().toISOString(),\n      version: process.env.npm_package_version || '1.0.0',\n      error: (error as Error).message\n    });\n  }\n});\n\napp.get(\"/health/ready\", async (req, res) => {\n  try {\n    const result = await healthModeManager.getReadinessProbe();\n    const statusCode = result.status === 'ok' ? 200 : 503;\n    res.set('X-System-Mode', result.mode);\n    res.status(statusCode).json(result);\n  } catch (error) {\n    res.status(503).json({\n      status: \"error\",\n      mode: \"degraded\",\n      timestamp: new Date().toISOString(),\n      version: process.env.npm_package_version || '1.0.0',\n      error: (error as Error).message\n    });\n  }\n});\n\n// Mount Analytics routes (PR-24)",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\backup\\index.minimal.ts",
        "start": 6,
        "end": 77,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 34
        },
        "endLoc": {
          "line": 77,
          "column": 34,
          "position": 739
        }
      },
      "secondFile": {
        "name": "apps\\api\\backup\\index.restored.backup.ts",
        "start": 6,
        "end": 168,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 34
        },
        "endLoc": {
          "line": 168,
          "column": 4,
          "position": 1506
        }
      }
    },
    {
      "format": "typescript",
      "lines": 42,
      "fragment": "});\n\n// Mount Analytics routes (PR-24)\napp.use('/v1/analytics', analyticsRouter);\n\n// Mount Events (SSE) routes\napp.use('/v1/events', eventsRouter);\n\n// Mount Cockpit routes\napp.use('/v1/cockpit', cockpitRouter);\n\n// Basic error handler\napp.use((error: Error, req: express.Request, res: express.Response, next: express.NextFunction) => {\n  structuredLogger.error('Unhandled error', error, {\n    path: req.path,\n    method: req.method,\n    headers: req.headers\n  });\n\n  res.status(500).json({\n    error: 'Internal server error',\n    message: 'An unexpected error occurred',\n    timestamp: new Date().toISOString()\n  });\n});\n\n// 404 handler\napp.use((req: express.Request, res: express.Response) => {\n  res.status(404).json({\n    error: 'Not found',\n    message: `Route ${req.method} ${req.path} not found`,\n    timestamp: new Date().toISOString()\n  });\n});\n\n// Start server\nconst server = app.listen(PORT, () => {\n  structuredLogger.info(`ECONEURA API Server running on port ${PORT}`, {\n    port: PORT,\n    environment: process.env.NODE_ENV || 'development',\n    version: process.env.npm_package_version || '1.0.0'\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\backup\\index.minimal.ts",
        "start": 75,
        "end": 116,
        "startLoc": {
          "line": 75,
          "column": 1,
          "position": 734
        },
        "endLoc": {
          "line": 116,
          "column": 2,
          "position": 1079
        }
      },
      "secondFile": {
        "name": "apps\\api\\backup\\index.restored.backup.ts",
        "start": 99,
        "end": 239,
        "startLoc": {
          "line": 99,
          "column": 1,
          "position": 872
        },
        "endLoc": {
          "line": 239,
          "column": 2,
          "position": 1860
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": "});\n});\n\n// Graceful shutdown\nprocess.on('SIGTERM', () => {\n  structuredLogger.info('SIGTERM received, shutting down gracefully');\n  server.close(() => {\n    structuredLogger.info('Process terminated');\n    process.exit(0);\n  });\n});\n\nprocess.on('SIGINT', () => {\n  structuredLogger.info('SIGINT received, shutting down gracefully');\n  server.close(() => {\n    structuredLogger.info('Process terminated');\n    process.exit(0);\n  });\n});\n\nexport default app;",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\backup\\index.minimal.ts",
        "start": 116,
        "end": 136,
        "startLoc": {
          "line": 116,
          "column": 3,
          "position": 1079
        },
        "endLoc": {
          "line": 136,
          "column": 2,
          "position": 1221
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\index.expanded.ts",
        "start": 253,
        "end": 273,
        "startLoc": {
          "line": 253,
          "column": 3,
          "position": 1916
        },
        "endLoc": {
          "line": 273,
          "column": 2,
          "position": 2058
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": "import express from \"express\";\nimport cors from \"cors\";\nimport helmet from \"helmet\";\nimport { structuredLogger } from './lib/structured-logger.js';\nimport { ErrorHandler } from './lib/error-handler.js';\n\n// Import health modes (PR-22)\nimport { healthModeManager } from './lib/health-modes.js';\nimport { healthMonitor } from './lib/health-monitor.js';\nimport { cacheManager } from './lib/advanced-cache.js';\n\n// Import FinOps services (PR-45)\nimport { finOpsSystem } from './lib/finops.js';\nimport { BudgetManagerService } from './lib/budget-manager.service.js';\nimport { CostTrackerService } from './lib/cost-tracker.service.js';\nimport { CostOptimizerService } from './lib/cost-optimizer.service.js';\n\n// Import SEPA services (PR-42)\nimport { SEPAParserService } from './lib/sepa-parser.service.js';\n\n// Import GDPR services (PR-43)",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\backup\\index.mega.ts",
        "start": 1,
        "end": 21,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 21,
          "column": 32,
          "position": 167
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\index.final.ts",
        "start": 1,
        "end": 21,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 21,
          "column": 44,
          "position": 167
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "// Import middlewares (PR-27, PR-28, PR-29)\nimport { observabilityMiddleware } from './middleware/observability.js';\nimport { finOpsMiddleware } from './middleware/finops.js';\n\n// Import routers for working PRs\nimport { analyticsRouter } from './routes/analytics.js';\nimport { eventsRouter } from './routes/events.js';\nimport { cockpitRouter } from './routes/cockpit.js';\n\nconst app = express();\nconst PORT = process.env.PORT || 3001;\n\n// Initialize services\nconst errorHandler = new ErrorHandler();\nconst budgetManager = new BudgetManagerService();\nconst costTracker = new CostTrackerService();\nconst costOptimizer = new CostOptimizerService();\nconst sepaParser = new SEPAParserService();\nconst",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\backup\\index.mega.ts",
        "start": 26,
        "end": 44,
        "startLoc": {
          "line": 26,
          "column": 1,
          "position": 209
        },
        "endLoc": {
          "line": 44,
          "column": 6,
          "position": 376
        }
      },
      "secondFile": {
        "name": "apps\\api\\backup\\index.working.backup.ts",
        "start": 25,
        "end": 40,
        "startLoc": {
          "line": 25,
          "column": 1,
          "position": 173
        },
        "endLoc": {
          "line": 40,
          "column": 31,
          "position": 335
        }
      }
    },
    {
      "format": "typescript",
      "lines": 138,
      "fragment": "();\n\n// Security middleware (PR-28)\napp.use(helmet({\n  contentSecurityPolicy: {\n    directives: {\n      defaultSrc: [\"'self'\"],\n      scriptSrc: [\"'self'\", \"'unsafe-inline'\"],\n      styleSrc: [\"'self'\", \"'unsafe-inline'\"],\n      imgSrc: [\"'self'\", \"data:\", \"https:\"],\n      connectSrc: [\"'self'\", \"https:\"],\n    },\n  },\n  hsts: {\n    maxAge: 31536000,\n    includeSubDomains: true,\n    preload: true\n  }\n}));\n\n// CORS configuration (PR-28)\napp.use(cors({\n  origin: ['http://localhost:3000', 'http://localhost:3001'],\n  credentials: true,\n  methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\n  allowedHeaders: ['Content-Type', 'Authorization', 'X-Org-ID', 'X-User-ID', 'X-Correlation-ID'],\n  exposedHeaders: ['X-System-Mode', 'X-Est-Cost-EUR', 'X-Budget-Pct', 'X-Latency-ms', 'X-Route']\n}));\n\n// Basic middleware\napp.use(express.json({ limit: '10mb' }));\napp.use(express.urlencoded({ extended: true }));\n\n// Apply observability middleware (PR-23)\napp.use(observabilityMiddleware);\n\n// Apply FinOps middleware (PR-29)\napp.use(finOpsMiddleware);\n\n// Simple rate limiting (PR-29)\nconst rateLimitStore = new Map();\napp.use((req, res, next) => {\n  const ip = req.ip || req.connection.remoteAddress || 'unknown';\n  const now = Date.now();\n  const windowMs = 15 * 60 * 1000; // 15 minutes\n  const maxRequests = 100;\n  \n  if (!rateLimitStore.has(ip)) {\n    rateLimitStore.set(ip, { count: 1, resetTime: now + windowMs });\n    return next();\n  }\n  \n  const record = rateLimitStore.get(ip);\n  if (now > record.resetTime) {\n    record.count = 1;\n    record.resetTime = now + windowMs;\n    return next();\n  }\n  \n  if (record.count >= maxRequests) {\n    return res.status(429).json({\n      error: 'Too Many Requests',\n      message: 'Rate limit exceeded',\n      retryAfter: Math.ceil((record.resetTime - now) / 1000)\n    });\n  }\n  \n  record.count++;\n  next();\n});\n\n// Basic validation middleware (PR-27)\napp.use((req, res, next) => {\n  if (req.headers['content-type'] && req.headers['content-type'].includes('application/json')) {\n    if (req.body && typeof req.body !== 'object') {\n      return res.status(400).json({\n        error: 'Invalid JSON',\n        message: 'Request body must be valid JSON'\n      });\n    }\n  }\n  next();\n});\n\n// Basic health check endpoint (< 200ms, no external dependencies)\napp.get(\"/health\", (req, res) => {\n  const ts = new Date().toISOString();\n  const version = process.env.npm_package_version || \"1.0.0\";\n  const currentMode = healthModeManager.getCurrentMode();\n  res.set('X-System-Mode', currentMode);\n  res.status(200).json({\n    status: \"ok\",\n    ts,\n    version,\n    mode: currentMode\n  });\n});\n\n// Enhanced Health check endpoints (PR-22)\napp.get(\"/health/live\", async (req, res) => {\n  try {\n    const result = await healthModeManager.getLivenessProbe();\n    const statusCode = result.status === 'ok' ? 200 : 503;\n    res.set('X-System-Mode', result.mode);\n    res.status(statusCode).json(result);\n  } catch (error) {\n    res.status(503).json({\n      status: \"error\",\n      mode: \"degraded\",\n      timestamp: new Date().toISOString(),\n      version: process.env.npm_package_version || '1.0.0',\n      error: (error as Error).message\n    });\n  }\n});\n\napp.get(\"/health/ready\", async (req, res) => {\n  try {\n    const result = await healthModeManager.getReadinessProbe();\n    const statusCode = result.status === 'ok' ? 200 : 503;\n    res.set('X-System-Mode', result.mode);\n    res.status(statusCode).json(result);\n  } catch (error) {\n    res.status(503).json({\n      status: \"error\",\n      mode: \"degraded\",\n      timestamp: new Date().toISOString(),\n      version: process.env.npm_package_version || '1.0.0',\n      error: (error as Error).message\n    });\n  }\n});\n\n// FinOps endpoints (PR-45)\napp.get(\"/v1/finops/budgets\", async (req, res) => {\n  try {\n    const orgId = req.headers['x-org-id'] as string || 'demo-org';\n    const budgets = await",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\backup\\index.mega.ts",
        "start": 46,
        "end": 183,
        "startLoc": {
          "line": 46,
          "column": 17,
          "position": 411
        },
        "endLoc": {
          "line": 183,
          "column": 6,
          "position": 1702
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\index.final.ts",
        "start": 38,
        "end": 181,
        "startLoc": {
          "line": 38,
          "column": 18,
          "position": 330
        },
        "endLoc": {
          "line": 181,
          "column": 14,
          "position": 1631
        }
      }
    },
    {
      "format": "typescript",
      "lines": 52,
      "fragment": "(orgId);\n    \n    res.set({\n      'X-Est-Cost-EUR': '0.0020',\n      'X-Budget-Pct': '0.3',\n      'X-Latency-ms': '45',\n      'X-Route': 'local'\n    });\n    \n    res.json({\n      success: true,\n      data: budgets,\n      count: budgets.length\n    });\n  } catch (error) {\n    res.status(500).json({\n      success: false,\n      error: 'Failed to get budgets',\n      message: (error as Error).message\n    });\n  }\n});\n\napp.post(\"/v1/finops/budgets\", async (req, res) => {\n  try {\n    const budget = await budgetManager.createBudget(req.body);\n    \n    res.set({\n      'X-Est-Cost-EUR': '0.0050',\n      'X-Budget-Pct': '0.8',\n      'X-Latency-ms': '120',\n      'X-Route': 'local'\n    });\n    \n    res.status(201).json({\n      success: true,\n      data: budget,\n      message: 'Budget created successfully'\n    });\n  } catch (error) {\n    res.status(500).json({\n      success: false,\n      error: 'Failed to create budget',\n      message: (error as Error).message\n    });\n  }\n});\n\napp.get(\"/v1/finops/costs\", async (req, res) => {\n  try {\n    const orgId = req.headers['x-org-id'] as string || 'demo-org';\n    const costs = await",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\backup\\index.mega.ts",
        "start": 183,
        "end": 234,
        "startLoc": {
          "line": 183,
          "column": 25,
          "position": 1707
        },
        "endLoc": {
          "line": 234,
          "column": 6,
          "position": 2096
        }
      },
      "secondFile": {
        "name": "apps\\api\\backup\\index.working.backup.ts",
        "start": 181,
        "end": 330,
        "startLoc": {
          "line": 181,
          "column": 11,
          "position": 1634
        },
        "endLoc": {
          "line": 330,
          "column": 12,
          "position": 2906
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": "(orgId);\n    \n    res.set({\n      'X-Est-Cost-EUR': '0.0030',\n      'X-Budget-Pct': '0.5',\n      'X-Latency-ms': '85',\n      'X-Route': 'local'\n    });\n    \n    res.json({\n      success: true,\n      data: costs\n    });\n  } catch (error) {\n    res.status(500).json({\n      success: false,\n      error: 'Failed to get costs',\n      message: (error as Error).message\n    });\n  }\n});\n\n// GDPR endpoints (PR-43)",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\backup\\index.mega.ts",
        "start": 234,
        "end": 256,
        "startLoc": {
          "line": 234,
          "column": 23,
          "position": 2101
        },
        "endLoc": {
          "line": 256,
          "column": 26,
          "position": 2238
        }
      },
      "secondFile": {
        "name": "apps\\api\\backup\\index.working.backup.ts",
        "start": 232,
        "end": 254,
        "startLoc": {
          "line": 232,
          "column": 18,
          "position": 2026
        },
        "endLoc": {
          "line": 254,
          "column": 47,
          "position": 2163
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "(xmlData);\n    \n    res.json({\n      success: true,\n      data: parsedData,\n      message: 'SEPA data parsed successfully'\n    });\n  } catch (error) {\n    res.status(500).json({\n      success: false,\n      error: 'Failed to parse SEPA data',\n      message: (error as Error).message\n    });\n  }\n});\n\n// System metrics endpoint",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\backup\\index.mega.ts",
        "start": 316,
        "end": 332,
        "startLoc": {
          "line": 316,
          "column": 9,
          "position": 2748
        },
        "endLoc": {
          "line": 332,
          "column": 27,
          "position": 2851
        }
      },
      "secondFile": {
        "name": "apps\\api\\backup\\index.working.backup.ts",
        "start": 313,
        "end": 329,
        "startLoc": {
          "line": 313,
          "column": 10,
          "position": 2633
        },
        "endLoc": {
          "line": 329,
          "column": 46,
          "position": 2736
        }
      }
    },
    {
      "format": "typescript",
      "lines": 76,
      "fragment": "});\n\n// System metrics endpoint\napp.get(\"/metrics\", async (req, res) => {\n  try {\n    const cacheStats = cacheManager.getAllStats();\n    const memoryUsage = process.memoryUsage();\n    \n    // Generate Prometheus-style metrics\n    const metrics = `\n# HELP econeura_cache_hits_total Total number of cache hits\n# TYPE econeura_cache_hits_total counter\neconeura_cache_hits_total{cache=\"all\"} ${Object.values(cacheStats).reduce((sum: number, stats: any) => sum + (stats?.hits || 0), 0)}\n\n# HELP econeura_cache_misses_total Total number of cache misses  \n# TYPE econeura_cache_misses_total counter\neconeura_cache_misses_total{cache=\"all\"} ${Object.values(cacheStats).reduce((sum: number, stats: any) => sum + (stats?.misses || 0), 0)}\n\n# HELP econeura_system_memory_heap_used_bytes Memory heap used in bytes\n# TYPE econeura_system_memory_heap_used_bytes gauge\neconeura_system_memory_heap_used_bytes ${memoryUsage.heapUsed}\n\n# HELP econeura_system_memory_heap_total_bytes Memory heap total in bytes\n# TYPE econeura_system_memory_heap_total_bytes gauge\neconeura_system_memory_heap_total_bytes ${memoryUsage.heapTotal}\n\n# HELP econeura_system_uptime_seconds System uptime in seconds\n# TYPE econeura_system_uptime_seconds counter\neconeura_system_uptime_seconds ${process.uptime()}\n`;\n    \n    res.set('Content-Type', 'text/plain');\n    res.send(metrics.trim());\n  } catch (error) {\n    res.status(500).json({\n      error: 'Failed to get metrics',\n      message: (error as Error).message\n    });\n  }\n});\n\n// Cache statistics endpoint\napp.get(\"/cache/stats\", (req, res) => {\n  try {\n    const stats = cacheManager.getAllStats();\n    res.json({\n      success: true,\n      data: stats,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    res.status(500).json({\n      success: false,\n      error: 'Failed to get cache stats',\n      message: (error as Error).message\n    });\n  }\n});\n\n// API info endpoint with comprehensive feature list\napp.get(\"/\", (req, res) => {\n  res.json({\n    name: \"ECONEURA API\",\n    version: process.env.npm_package_version || \"1.0.0\",\n    status: \"running\",\n    timestamp: new Date().toISOString(),\n    features: [\n      \"PR-22: Health modes (live/ready/degraded)\",\n      \"PR-23: Observability coherente (logs + métricas + traces)\",\n      \"PR-24: Analytics events with Zod validation\", \n      \"PR-27: Validación básica en requests\",\n      \"PR-28: Security headers completos + CORS + Helmet\",\n      \"PR-29: Rate limiting + Budget guard\",\n      \"PR-42: SEPA Ingest + Parsing\",\n      \"PR-43: GDPR Export/Erase + Audit\",\n      \"PR-45: FinOps Panel completo\"",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\backup\\index.mega.ts",
        "start": 330,
        "end": 405,
        "startLoc": {
          "line": 330,
          "column": 1,
          "position": 2846
        },
        "endLoc": {
          "line": 405,
          "column": 31,
          "position": 3357
        }
      },
      "secondFile": {
        "name": "apps\\api\\backup\\index.working.backup.ts",
        "start": 414,
        "end": 489,
        "startLoc": {
          "line": 414,
          "column": 1,
          "position": 3561
        },
        "endLoc": {
          "line": 489,
          "column": 42,
          "position": 4072
        }
      }
    },
    {
      "format": "typescript",
      "lines": 31,
      "fragment": ",\n      \"PR-45: FinOps Panel completo\",\n      \"SSE: Real-time events and notifications\",\n      \"Cockpit: Operational dashboard endpoints\",\n      \"Cache: Advanced caching with statistics\",\n      \"Metrics: Prometheus-compatible metrics endpoint\"\n    ],\n    endpoints: [\n      \"GET /health - Basic health check\",\n      \"GET /health/live - Liveness probe (PR-22)\", \n      \"GET /health/ready - Readiness probe (PR-22)\",\n      \"GET /metrics - Prometheus metrics (PR-23)\",\n      \"GET /cache/stats - Cache statistics\",\n      \"POST /v1/analytics/events - Track analytics events (PR-24)\",\n      \"GET /v1/analytics/events - Query analytics events (PR-24)\",\n      \"GET /v1/analytics/metrics - Get aggregated metrics (PR-24)\",\n      \"GET /v1/events - Server-Sent Events for real-time updates\",\n      \"POST /v1/events/broadcast - Broadcast events to organization\",\n      \"GET /v1/events/stats - SSE connection statistics\",\n      \"GET /v1/cockpit/overview - Operational overview dashboard\",\n      \"GET /v1/cockpit/agents - Agent execution details\",\n      \"GET /v1/cockpit/costs - Cost breakdown by org/playbook\",\n      \"GET /v1/cockpit/system - System metrics and health\",\n      \"GET /v1/finops/budgets - List budgets (PR-45)\",\n      \"POST /v1/finops/budgets - Create budget (PR-45)\",\n      \"GET /v1/finops/costs - Cost tracking (PR-45)\",\n      \"POST /v1/gdpr/export - Export user data (PR-43)\",\n      \"DELETE /v1/gdpr/erase/:userId - Erase user data (PR-43)\",\n      \"GET /v1/gdpr/audit - GDPR audit logs (PR-43)\",\n      \"POST /v1/sepa/parse - Parse SEPA XML data (PR-42)\"\n    ]",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\backup\\index.mega.ts",
        "start": 404,
        "end": 434,
        "startLoc": {
          "line": 404,
          "column": 35,
          "position": 3354
        },
        "endLoc": {
          "line": 434,
          "column": 2,
          "position": 3474
        }
      },
      "secondFile": {
        "name": "apps\\api\\backup\\index.working.backup.ts",
        "start": 489,
        "end": 518,
        "startLoc": {
          "line": 489,
          "column": 42,
          "position": 4073
        },
        "endLoc": {
          "line": 518,
          "column": 2,
          "position": 4191
        }
      }
    },
    {
      "format": "typescript",
      "lines": 64,
      "fragment": "]\n  });\n});\n\n// Mount Analytics routes (PR-24)\napp.use('/v1/analytics', analyticsRouter);\n\n// Mount Events (SSE) routes\napp.use('/v1/events', eventsRouter);\n\n// Mount Cockpit routes\napp.use('/v1/cockpit', cockpitRouter);\n\n// Basic error handling middleware\napp.use((error: Error, req: express.Request, res: express.Response, next: express.NextFunction) => {\n  const errorId = `err_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  \n  structuredLogger.error('Unhandled error', error, {\n    errorId,\n    path: req.path,\n    method: req.method,\n    headers: req.headers\n  });\n\n  res.status(500).json({\n    error: 'Internal server error',\n    message: 'An unexpected error occurred',\n    errorId,\n    timestamp: new Date().toISOString()\n  });\n});\n\n// 404 handler\napp.use((req: express.Request, res: express.Response) => {\n  res.status(404).json({\n    error: 'Not found',\n    message: `Route ${req.method} ${req.path} not found`,\n    timestamp: new Date().toISOString(),\n    availableEndpoints: [\n      'GET /health', 'GET /health/live', 'GET /health/ready', 'GET /metrics',\n      'GET /v1/analytics/*', 'GET /v1/events/*', 'GET /v1/cockpit/*',\n      'GET /v1/finops/*', 'POST /v1/finops/*',\n      'POST /v1/gdpr/*', 'DELETE /v1/gdpr/*', 'GET /v1/gdpr/*',\n      'POST /v1/sepa/*'\n    ]\n  });\n});\n\n// Start server\nconst server = app.listen(PORT, () => {\n  structuredLogger.info(`ECONEURA API Server running on port ${PORT}`, {\n    port: PORT,\n    environment: process.env.NODE_ENV || 'development',\n    version: process.env.npm_package_version || '1.0.0',\n    features: [\n      'PR-22: Health modes (live/ready/degraded)',\n      'PR-23: Observability coherente (logs + métricas + traces)',\n      'PR-24: Analytics events with Zod validation', \n      'PR-27: Validación básica en requests',\n      'PR-28: Security headers completos + CORS + Helmet',\n      'PR-29: Rate limiting + Budget guard',\n      'PR-42: SEPA Ingest + Parsing',\n      'PR-43: GDPR Export/Erase + Audit',\n      'PR-45: FinOps Panel completo'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\backup\\index.mega.ts",
        "start": 434,
        "end": 497,
        "startLoc": {
          "line": 434,
          "column": 5,
          "position": 3474
        },
        "endLoc": {
          "line": 497,
          "column": 31,
          "position": 3968
        }
      },
      "secondFile": {
        "name": "apps\\api\\backup\\index.working.backup.ts",
        "start": 523,
        "end": 586,
        "startLoc": {
          "line": 523,
          "column": 5,
          "position": 4209
        },
        "endLoc": {
          "line": 586,
          "column": 42,
          "position": 4703
        }
      }
    },
    {
      "format": "typescript",
      "lines": 37,
      "fragment": ",\n      'PR-45: FinOps Panel completo',\n      'SSE: Real-time events and notifications',\n      'Cockpit: Operational dashboard endpoints',\n      'Cache: Advanced caching with statistics',\n      'Metrics: Prometheus-compatible metrics endpoint'\n    ],\n    services: [\n      'FinOps System: Budget management, cost tracking, optimization',\n      'GDPR Services: Export, erase, audit compliance',\n      'SEPA Parser: XML parsing and transaction matching',\n      'Analytics: Event tracking and metrics',\n      'Cache Manager: Multi-layer caching system',\n      'Health Monitor: System health and degradation detection',\n      'SSE Manager: Real-time event streaming'\n    ]\n  });\n});\n\n// Graceful shutdown\nprocess.on('SIGTERM', () => {\n  structuredLogger.info('SIGTERM received, shutting down gracefully');\n  server.close(() => {\n    structuredLogger.info('Process terminated');\n    process.exit(0);\n  });\n});\n\nprocess.on('SIGINT', () => {\n  structuredLogger.info('SIGINT received, shutting down gracefully');\n  server.close(() => {\n    structuredLogger.info('Process terminated');\n    process.exit(0);\n  });\n});\n\nexport default app;",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\backup\\index.mega.ts",
        "start": 496,
        "end": 532,
        "startLoc": {
          "line": 496,
          "column": 35,
          "position": 3965
        },
        "endLoc": {
          "line": 532,
          "column": 2,
          "position": 4174
        }
      },
      "secondFile": {
        "name": "apps\\api\\backup\\index.working.backup.ts",
        "start": 586,
        "end": 273,
        "startLoc": {
          "line": 586,
          "column": 42,
          "position": 4704
        },
        "endLoc": {
          "line": 273,
          "column": 2,
          "position": 2058
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ";\n\n// Import middlewares (PR-27, PR-28, PR-29)\nimport { observabilityMiddleware } from './middleware/observability.js';\nimport { finOpsMiddleware } from './middleware/finops.js';\n\n// Import routers for working PRs\nimport { analyticsRouter } from './routes/analytics.js';\nimport { eventsRouter } from './routes/events.js';\nimport { cockpitRouter } from './routes/cockpit.js';\n\nconst app = express();\nconst PORT = process.env.PORT || 3001;\n\n// Initialize error handler",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\backup\\index.intermediate.backup.ts",
        "start": 9,
        "end": 23,
        "startLoc": {
          "line": 9,
          "column": 26,
          "position": 84
        },
        "endLoc": {
          "line": 23,
          "column": 28,
          "position": 187
        }
      },
      "secondFile": {
        "name": "apps\\api\\backup\\index.mega.ts",
        "start": 24,
        "end": 37,
        "startLoc": {
          "line": 24,
          "column": 30,
          "position": 206
        },
        "endLoc": {
          "line": 37,
          "column": 23,
          "position": 273
        }
      }
    },
    {
      "format": "typescript",
      "lines": 56,
      "fragment": ");\n\n// CORS configuration (PR-28)\napp.use(cors({\n  origin: ['http://localhost:3000', 'http://localhost:3001'],\n  credentials: true,\n  methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\n  allowedHeaders: ['Content-Type', 'Authorization', 'X-Org-ID', 'X-User-ID', 'X-Correlation-ID'],\n  exposedHeaders: ['X-System-Mode', 'X-Est-Cost-EUR', 'X-Budget-Pct', 'X-Latency-ms', 'X-Route']\n}));\n\n// Basic middleware\napp.use(express.json({ limit: '10mb' }));\napp.use(express.urlencoded({ extended: true }));\n\n// Apply observability middleware (PR-23)\napp.use(observabilityMiddleware);\n\n// Apply FinOps middleware (PR-29)\napp.use(finOpsMiddleware);\n\n// Simple rate limiting (PR-29)\nconst rateLimitStore = new Map();\napp.use((req, res, next) => {\n  const ip = req.ip || req.connection.remoteAddress || 'unknown';\n  const now = Date.now();\n  const windowMs = 15 * 60 * 1000; // 15 minutes\n  const maxRequests = 100;\n  \n  if (!rateLimitStore.has(ip)) {\n    rateLimitStore.set(ip, { count: 1, resetTime: now + windowMs });\n    return next();\n  }\n  \n  const record = rateLimitStore.get(ip);\n  if (now > record.resetTime) {\n    record.count = 1;\n    record.resetTime = now + windowMs;\n    return next();\n  }\n  \n  if (record.count >= maxRequests) {\n    return res.status(429).json({\n      error: 'Too Many Requests',\n      message: 'Rate limit exceeded',\n      retryAfter: Math.ceil((record.resetTime - now) / 1000)\n    });\n  }\n  \n  record.count++;\n  next();\n});\n\n// Basic validation middleware (PR-27)\napp.use((req, res, next) => {\n  // Basic request validation",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\backup\\index.intermediate.backup.ts",
        "start": 34,
        "end": 89,
        "startLoc": {
          "line": 34,
          "column": 2,
          "position": 290
        },
        "endLoc": {
          "line": 89,
          "column": 28,
          "position": 798
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\index.final.ts",
        "start": 56,
        "end": 117,
        "startLoc": {
          "line": 56,
          "column": 2,
          "position": 456
        },
        "endLoc": {
          "line": 117,
          "column": 3,
          "position": 974
        }
      }
    },
    {
      "format": "typescript",
      "lines": 64,
      "fragment": "if (req.headers['content-type'] && req.headers['content-type'].includes('application/json')) {\n    if (req.body && typeof req.body !== 'object') {\n      return res.status(400).json({\n        error: 'Invalid JSON',\n        message: 'Request body must be valid JSON'\n      });\n    }\n  }\n  next();\n});\n\n// Basic health check endpoint (< 200ms, no external dependencies)\napp.get(\"/health\", (req, res) => {\n  const ts = new Date().toISOString();\n  const version = process.env.npm_package_version || \"1.0.0\";\n  const currentMode = healthModeManager.getCurrentMode();\n  res.set('X-System-Mode', currentMode);\n  res.status(200).json({\n    status: \"ok\",\n    ts,\n    version,\n    mode: currentMode\n  });\n});\n\n// Enhanced Health check endpoints (PR-22)\napp.get(\"/health/live\", async (req, res) => {\n  try {\n    const result = await healthModeManager.getLivenessProbe();\n    const statusCode = result.status === 'ok' ? 200 : 503;\n    res.set('X-System-Mode', result.mode);\n    res.status(statusCode).json(result);\n  } catch (error) {\n    res.status(503).json({\n      status: \"error\",\n      mode: \"degraded\",\n      timestamp: new Date().toISOString(),\n      version: process.env.npm_package_version || '1.0.0',\n      error: (error as Error).message\n    });\n  }\n});\n\napp.get(\"/health/ready\", async (req, res) => {\n  try {\n    const result = await healthModeManager.getReadinessProbe();\n    const statusCode = result.status === 'ok' ? 200 : 503;\n    res.set('X-System-Mode', result.mode);\n    res.status(statusCode).json(result);\n  } catch (error) {\n    res.status(503).json({\n      status: \"error\",\n      mode: \"degraded\",\n      timestamp: new Date().toISOString(),\n      version: process.env.npm_package_version || '1.0.0',\n      error: (error as Error).message\n    });\n  }\n});\n\n// System metrics endpoint\napp.get(\"/metrics\", async (req, res) => {\n  try {\n    const cacheStats",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\backup\\index.intermediate.backup.ts",
        "start": 90,
        "end": 153,
        "startLoc": {
          "line": 90,
          "column": 3,
          "position": 801
        },
        "endLoc": {
          "line": 153,
          "column": 11,
          "position": 1431
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\index.final.ts",
        "start": 121,
        "end": 137,
        "startLoc": {
          "line": 121,
          "column": 3,
          "position": 1064
        },
        "endLoc": {
          "line": 137,
          "column": 8,
          "position": 1203
        }
      }
    },
    {
      "format": "typescript",
      "lines": 75,
      "fragment": ": (error as Error).message\n    });\n  }\n});\n\n// System metrics endpoint\napp.get(\"/metrics\", async (req, res) => {\n  try {\n    const cacheStats = cacheManager.getAllStats();\n    const memoryUsage = process.memoryUsage();\n    \n    // Generate Prometheus-style metrics\n    const metrics = `\n# HELP econeura_cache_hits_total Total number of cache hits\n# TYPE econeura_cache_hits_total counter\neconeura_cache_hits_total{cache=\"all\"} ${Object.values(cacheStats).reduce((sum: number, stats: any) => sum + (stats?.hits || 0), 0)}\n\n# HELP econeura_cache_misses_total Total number of cache misses  \n# TYPE econeura_cache_misses_total counter\neconeura_cache_misses_total{cache=\"all\"} ${Object.values(cacheStats).reduce((sum: number, stats: any) => sum + (stats?.misses || 0), 0)}\n\n# HELP econeura_system_memory_heap_used_bytes Memory heap used in bytes\n# TYPE econeura_system_memory_heap_used_bytes gauge\neconeura_system_memory_heap_used_bytes ${memoryUsage.heapUsed}\n\n# HELP econeura_system_memory_heap_total_bytes Memory heap total in bytes\n# TYPE econeura_system_memory_heap_total_bytes gauge\neconeura_system_memory_heap_total_bytes ${memoryUsage.heapTotal}\n\n# HELP econeura_system_uptime_seconds System uptime in seconds\n# TYPE econeura_system_uptime_seconds counter\neconeura_system_uptime_seconds ${process.uptime()}\n`;\n    \n    res.set('Content-Type', 'text/plain');\n    res.send(metrics.trim());\n  } catch (error) {\n    res.status(500).json({\n      error: 'Failed to get metrics',\n      message: (error as Error).message\n    });\n  }\n});\n\n// Cache statistics endpoint\napp.get(\"/cache/stats\", (req, res) => {\n  try {\n    const stats = cacheManager.getAllStats();\n    res.json({\n      success: true,\n      data: stats,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    res.status(500).json({\n      success: false,\n      error: 'Failed to get cache stats',\n      message: (error as Error).message\n    });\n  }\n});\n\n// API info endpoint with comprehensive feature list\napp.get(\"/\", (req, res) => {\n  res.json({\n    name: \"ECONEURA API\",\n    version: process.env.npm_package_version || \"1.0.0\",\n    status: \"running\",\n    timestamp: new Date().toISOString(),\n    features: [\n      \"PR-22: Health modes (live/ready/degraded)\",\n      \"PR-23: Observability coherente (logs + métricas + traces)\",\n      \"PR-24: Analytics events with Zod validation\", \n      \"PR-27: Validación básica en requests\",\n      \"PR-28: Security headers básicos + CORS\"",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\backup\\index.intermediate.backup.ts",
        "start": 145,
        "end": 219,
        "startLoc": {
          "line": 145,
          "column": 6,
          "position": 1376
        },
        "endLoc": {
          "line": 219,
          "column": 41,
          "position": 1891
        }
      },
      "secondFile": {
        "name": "apps\\api\\backup\\index.mega.ts",
        "start": 327,
        "end": 485,
        "startLoc": {
          "line": 327,
          "column": 8,
          "position": 2826
        },
        "endLoc": {
          "line": 485,
          "column": 52,
          "position": 4056
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": ",\n      \"POST /v1/analytics/events - Track analytics events (PR-24)\",\n      \"GET /v1/analytics/events - Query analytics events (PR-24)\",\n      \"GET /v1/analytics/metrics - Get aggregated metrics (PR-24)\",\n      \"GET /v1/events - Server-Sent Events for real-time updates\",\n      \"POST /v1/events/broadcast - Broadcast events to organization\",\n      \"GET /v1/cockpit/overview - Operational overview dashboard\",\n      \"GET /v1/cockpit/agents - Agent execution details\",\n      \"GET /v1/cockpit/costs - Cost breakdown by org/playbook\",\n      \"GET /v1/cockpit/system - System metrics and health\"\n    ]\n  });\n});\n\n// Mount Analytics routes (PR-24)\napp.use('/v1/analytics', analyticsRouter);\n\n// Mount Events (SSE) routes\napp.use('/v1/events', eventsRouter);\n\n// Mount Cockpit routes\napp.use('/v1/cockpit', cockpitRouter);\n\n// Basic error handling middleware",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\backup\\index.intermediate.backup.ts",
        "start": 231,
        "end": 254,
        "startLoc": {
          "line": 231,
          "column": 38,
          "position": 1942
        },
        "endLoc": {
          "line": 254,
          "column": 35,
          "position": 2034
        }
      },
      "secondFile": {
        "name": "apps\\api\\backup\\index.restored.backup.ts",
        "start": 87,
        "end": 110,
        "startLoc": {
          "line": 87,
          "column": 46,
          "position": 827
        },
        "endLoc": {
          "line": 110,
          "column": 23,
          "position": 919
        }
      }
    },
    {
      "format": "typescript",
      "lines": 41,
      "fragment": "]\n  });\n});\n\n// Mount Analytics routes (PR-24)\napp.use('/v1/analytics', analyticsRouter);\n\n// Mount Events (SSE) routes\napp.use('/v1/events', eventsRouter);\n\n// Mount Cockpit routes\napp.use('/v1/cockpit', cockpitRouter);\n\n// Basic error handling middleware\napp.use((error: Error, req: express.Request, res: express.Response, next: express.NextFunction) => {\n  const errorId = `err_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  \n  structuredLogger.error('Unhandled error', error, {\n    errorId,\n    path: req.path,\n    method: req.method,\n    headers: req.headers\n  });\n\n  res.status(500).json({\n    error: 'Internal server error',\n    message: 'An unexpected error occurred',\n    errorId,\n    timestamp: new Date().toISOString()\n  });\n});\n\n// 404 handler\napp.use((req: express.Request, res: express.Response) => {\n  res.status(404).json({\n    error: 'Not found',\n    message: `Route ${req.method} ${req.path} not found`,\n    timestamp: new Date().toISOString(),\n    availableEndpoints: [\n      'GET /health', 'GET /health/live', 'GET /health/ready', 'GET /metrics',\n      'GET /v1/analytics/*', 'GET /v1/events'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\backup\\index.intermediate.backup.ts",
        "start": 241,
        "end": 281,
        "startLoc": {
          "line": 241,
          "column": 5,
          "position": 1980
        },
        "endLoc": {
          "line": 281,
          "column": 17,
          "position": 2322
        }
      },
      "secondFile": {
        "name": "apps\\api\\backup\\index.working.backup.ts",
        "start": 523,
        "end": 563,
        "startLoc": {
          "line": 523,
          "column": 5,
          "position": 4209
        },
        "endLoc": {
          "line": 563,
          "column": 19,
          "position": 4551
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "]\n  });\n});\n\n// Start server\nconst server = app.listen(PORT, () => {\n  structuredLogger.info(`ECONEURA API Server running on port ${PORT}`, {\n    port: PORT,\n    environment: process.env.NODE_ENV || 'development',\n    version: process.env.npm_package_version || '1.0.0',\n    features: [\n      'PR-22: Health modes (live/ready/degraded)',\n      'PR-23: Observability coherente (logs + métricas + traces)',\n      'PR-24: Analytics events with Zod validation', \n      'PR-27: Validación básica en requests',\n      'PR-28: Security headers básicos + CORS'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\backup\\index.intermediate.backup.ts",
        "start": 282,
        "end": 297,
        "startLoc": {
          "line": 282,
          "column": 5,
          "position": 2328
        },
        "endLoc": {
          "line": 297,
          "column": 41,
          "position": 2437
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\index.expanded.ts",
        "start": 230,
        "end": 582,
        "startLoc": {
          "line": 230,
          "column": 5,
          "position": 1777
        },
        "endLoc": {
          "line": 582,
          "column": 52,
          "position": 4687
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "]\n  });\n});\n\n// Graceful shutdown\nprocess.on('SIGTERM', () => {\n  structuredLogger.info('SIGTERM received, shutting down gracefully');\n  server.close(() => {\n    structuredLogger.info('Process terminated');\n    process.exit(0);\n  });\n});\n\nprocess.on('SIGINT', () => {\n  structuredLogger.info('SIGINT received, shutting down gracefully');\n  server.close(() => {\n    structuredLogger.info('Process terminated');\n    process.exit(0);\n  });\n});\n\nexport default app;",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\backup\\index.intermediate.backup.ts",
        "start": 303,
        "end": 324,
        "startLoc": {
          "line": 303,
          "column": 5,
          "position": 2460
        },
        "endLoc": {
          "line": 324,
          "column": 2,
          "position": 2610
        }
      },
      "secondFile": {
        "name": "apps\\api\\backup\\index.working.backup.ts",
        "start": 601,
        "end": 273,
        "startLoc": {
          "line": 601,
          "column": 5,
          "position": 4763
        },
        "endLoc": {
          "line": 273,
          "column": 2,
          "position": 2058
        }
      }
    },
    {
      "format": "typescript",
      "lines": 273,
      "fragment": "import express from \"express\";\nimport cors from \"cors\";\nimport helmet from \"helmet\";\nimport { structuredLogger } from './lib/structured-logger.js';\nimport { ErrorHandler } from './lib/error-handler.js';\n\n// Import health modes (PR-22)\nimport { healthModeManager } from './lib/health-modes.js';\nimport { healthMonitor } from './lib/health-monitor.js';\n\n// Import middlewares (PR-27, PR-28, PR-29)\nimport { ValidationMiddleware } from './middleware/validation.js';\nimport { SecurityMiddleware } from './middleware/security.js';\nimport { RateLimitMiddleware } from './middleware/rate-limiter.js';\nimport { observabilityMiddleware } from './middleware/observability.js';\nimport { finOpsMiddleware } from './middleware/finops.js';\n\n// Import routers for working PRs\nimport { analyticsRouter } from './routes/analytics.js';\nimport { eventsRouter } from './routes/events.js';\nimport { cockpitRouter } from './routes/cockpit.js';\n// Import CRM routers\nimport { companiesRouter } from './routes/companies.js';\nimport { contactsRouter } from './routes/contacts.js';\nimport { dealsRouter } from './routes/deals.js';\nimport { invoicesRouter } from './routes/invoices.js';\nimport { agentsRouter } from './routes/agents.js';\n\nconst app = express();\nconst PORT = process.env.PORT || 3001;\n\n// Initialize error handler\nconst errorHandler = new ErrorHandler();\n\n// Security middleware (PR-28)\napp.use(helmet({\n  contentSecurityPolicy: {\n    directives: {\n      defaultSrc: [\"'self'\"],\n      scriptSrc: [\"'self'\", \"'unsafe-inline'\"],\n      styleSrc: [\"'self'\", \"'unsafe-inline'\"],\n      imgSrc: [\"'self'\", \"data:\", \"https:\"],\n      connectSrc: [\"'self'\", \"https:\"],\n    },\n  },\n  hsts: {\n    maxAge: 31536000,\n    includeSubDomains: true,\n    preload: true\n  }\n}));\n\n// CORS configuration (PR-28)\napp.use(cors({\n  origin: ['http://localhost:3000', 'http://localhost:3001'],\n  credentials: true,\n  methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\n  allowedHeaders: ['Content-Type', 'Authorization', 'X-Org-ID', 'X-User-ID', 'X-Correlation-ID'],\n  exposedHeaders: ['X-System-Mode', 'X-Est-Cost-EUR', 'X-Budget-Pct', 'X-Latency-ms', 'X-Route']\n}));\n\n// Basic middleware\napp.use(express.json({ limit: '10mb' }));\napp.use(express.urlencoded({ extended: true }));\n\n// Apply observability middleware (PR-23)\napp.use(observabilityMiddleware);\n\n// Apply FinOps middleware (PR-29)\napp.use(finOpsMiddleware);\n\n// Apply rate limiting middleware (PR-29)\napp.use(RateLimitMiddleware.createMiddleware({\n  windowMs: 15 * 60 * 1000, // 15 minutes\n  max: 100, // limit each IP to 100 requests per windowMs\n  keyGenerator: 'ip'\n}));\n\n// Apply validation middleware (PR-27)\napp.use(ValidationMiddleware.createMiddleware());\n\n// Apply security middleware (PR-28)\napp.use(SecurityMiddleware.createMiddleware());\n\n// Basic health check endpoint (< 200ms, no external dependencies)\napp.get(\"/health\", (req, res) => {\n  const ts = new Date().toISOString();\n  const version = process.env.npm_package_version || \"1.0.0\";\n  const currentMode = healthModeManager.getCurrentMode();\n  res.set('X-System-Mode', currentMode);\n  res.status(200).json({\n    status: \"ok\",\n    ts,\n    version,\n    mode: currentMode\n  });\n});\n\n// Enhanced Health check endpoints (PR-22)\napp.get(\"/health/live\", async (req, res) => {\n  try {\n    const result = await healthModeManager.getLivenessProbe();\n    const statusCode = result.status === 'ok' ? 200 : 503;\n    res.set('X-System-Mode', result.mode);\n    res.status(statusCode).json(result);\n  } catch (error) {\n    res.status(503).json({\n      status: \"error\",\n      mode: \"degraded\",\n      timestamp: new Date().toISOString(),\n      version: process.env.npm_package_version || '1.0.0',\n      error: (error as Error).message\n    });\n  }\n});\n\napp.get(\"/health/ready\", async (req, res) => {\n  try {\n    const result = await healthModeManager.getReadinessProbe();\n    const statusCode = result.status === 'ok' ? 200 : 503;\n    res.set('X-System-Mode', result.mode);\n    res.status(statusCode).json(result);\n  } catch (error) {\n    res.status(503).json({\n      status: \"error\",\n      mode: \"degraded\",\n      timestamp: new Date().toISOString(),\n      version: process.env.npm_package_version || '1.0.0',\n      error: (error as Error).message\n    });\n  }\n});\n\n// System metrics endpoint\napp.get(\"/metrics\", async (req, res) => {\n  try {\n    const metrics = await healthMonitor.getSystemMetrics();\n    res.set('Content-Type', 'text/plain');\n    res.send(metrics);\n  } catch (error) {\n    res.status(500).json({\n      error: 'Failed to get metrics',\n      message: (error as Error).message\n    });\n  }\n});\n\n// API info endpoint with comprehensive feature list\napp.get(\"/\", (req, res) => {\n  res.json({\n    name: \"ECONEURA API\",\n    version: process.env.npm_package_version || \"1.0.0\",\n    status: \"running\",\n    timestamp: new Date().toISOString(),\n    features: [\n      \"PR-22: Health modes (live/ready/degraded)\",\n      \"PR-23: Observability coherente (logs + métricas + traces)\",\n      \"PR-24: Analytics events with Zod validation\", \n      \"PR-27: Validación Zod integral en routers\",\n      \"PR-28: Security middlewares (Helmet + CORS + CSP)\",\n      \"PR-29: Rate limiting + Budget guard\",\n      \"SSE: Real-time events and notifications\",\n      \"Cockpit: Operational dashboard endpoints\",\n      \"CRM: Companies, Contacts, Deals management\",\n      \"ERP: Invoice processing and management\",\n      \"AI: Agents orchestration and execution\"\n    ],\n    endpoints: [\n      \"GET /health - Basic health check\",\n      \"GET /health/live - Liveness probe (PR-22)\", \n      \"GET /health/ready - Readiness probe (PR-22)\",\n      \"GET /metrics - Prometheus metrics (PR-23)\",\n      \"POST /v1/analytics/events - Track analytics events (PR-24)\",\n      \"GET /v1/analytics/events - Query analytics events (PR-24)\",\n      \"GET /v1/analytics/metrics - Get aggregated metrics (PR-24)\",\n      \"GET /v1/events - Server-Sent Events for real-time updates\",\n      \"POST /v1/events/broadcast - Broadcast events to organization\",\n      \"GET /v1/cockpit/overview - Operational overview dashboard\",\n      \"GET /v1/cockpit/agents - Agent execution details\",\n      \"GET /v1/cockpit/costs - Cost breakdown by org/playbook\",\n      \"GET /v1/cockpit/system - System metrics and health\",\n      \"GET /v1/companies - List companies (CRM)\",\n      \"POST /v1/companies - Create company (CRM)\",\n      \"GET /v1/contacts - List contacts (CRM)\",\n      \"POST /v1/contacts - Create contact (CRM)\",\n      \"GET /v1/deals - List deals (CRM)\",\n      \"POST /v1/deals - Create deal (CRM)\",\n      \"GET /v1/invoices - List invoices (ERP)\",\n      \"POST /v1/invoices - Create invoice (ERP)\",\n      \"GET /v1/agents - List AI agents\",\n      \"POST /v1/agents/run - Execute AI agent\"\n    ]\n  });\n});\n\n// Mount Analytics routes (PR-24)\napp.use('/v1/analytics', analyticsRouter);\n\n// Mount Events (SSE) routes\napp.use('/v1/events', eventsRouter);\n\n// Mount Cockpit routes\napp.use('/v1/cockpit', cockpitRouter);\n\n// Mount CRM routes\napp.use('/v1/companies', companiesRouter);\napp.use('/v1/contacts', contactsRouter);\napp.use('/v1/deals', dealsRouter);\n\n// Mount ERP routes\napp.use('/v1/invoices', invoicesRouter);\n\n// Mount AI routes\napp.use('/v1/agents', agentsRouter);\n\n// Error handling middleware\napp.use(errorHandler.handleError.bind(errorHandler));\n\n// 404 handler\napp.use((req: express.Request, res: express.Response) => {\n  res.status(404).json({\n    error: 'Not found',\n    message: `Route ${req.method} ${req.path} not found`,\n    timestamp: new Date().toISOString(),\n    availableEndpoints: [\n      'GET /health', 'GET /health/live', 'GET /health/ready',\n      'GET /v1/analytics/*', 'GET /v1/events', 'GET /v1/cockpit/*',\n      'GET /v1/companies', 'GET /v1/contacts', 'GET /v1/deals',\n      'GET /v1/invoices', 'GET /v1/agents'\n    ]\n  });\n});\n\n// Start server\nconst server = app.listen(PORT, () => {\n  structuredLogger.info(`ECONEURA API Server running on port ${PORT}`, {\n    port: PORT,\n    environment: process.env.NODE_ENV || 'development',\n    version: process.env.npm_package_version || '1.0.0',\n    features: [\n      'PR-22: Health modes (live/ready/degraded)',\n      'PR-23: Observability coherente (logs + métricas + traces)',\n      'PR-24: Analytics events with Zod validation', \n      'PR-27: Validación Zod integral en routers',\n      'PR-28: Security middlewares (Helmet + CORS + CSP)',\n      'PR-29: Rate limiting + Budget guard',\n      'SSE: Real-time events and notifications',\n      'Cockpit: Operational dashboard endpoints',\n      'CRM: Companies, Contacts, Deals management',\n      'ERP: Invoice processing and management',\n      'AI: Agents orchestration and execution'\n    ]\n  });\n});\n\n// Graceful shutdown\nprocess.on('SIGTERM', () => {\n  structuredLogger.info('SIGTERM received, shutting down gracefully');\n  server.close(() => {\n    structuredLogger.info('Process terminated');\n    process.exit(0);\n  });\n});\n\nprocess.on('SIGINT', () => {\n  structuredLogger.info('SIGINT received, shutting down gracefully');\n  server.close(() => {\n    structuredLogger.info('Process terminated');\n    process.exit(0);\n  });\n});\n\nexport default app;",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\backup\\index.expanded.ts",
        "start": 1,
        "end": 273,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 273,
          "column": 2,
          "position": 2058
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\index.expanded.ts",
        "start": 1,
        "end": 273,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 273,
          "column": 2,
          "position": 2058
        }
      }
    },
    {
      "format": "typescript",
      "lines": 273,
      "fragment": "import express from \"express\";\nimport cors from \"cors\";\nimport helmet from \"helmet\";\nimport { structuredLogger } from './lib/structured-logger.js';\nimport { ErrorHandler } from './lib/error-handler.js';\n\n// Import health modes (PR-22)\nimport { healthModeManager } from './lib/health-modes.js';\nimport { healthMonitor } from './lib/health-monitor.js';\n\n// Import middlewares (PR-27, PR-28, PR-29)\nimport { ValidationMiddleware } from './middleware/validation.js';\nimport { SecurityMiddleware } from './middleware/security.js';\nimport { RateLimitMiddleware } from './middleware/rate-limiter.js';\nimport { observabilityMiddleware } from './middleware/observability.js';\nimport { finOpsMiddleware } from './middleware/finops.js';\n\n// Import routers for working PRs\nimport { analyticsRouter } from './routes/analytics.js';\nimport { eventsRouter } from './routes/events.js';\nimport { cockpitRouter } from './routes/cockpit.js';\n// Import CRM routers\nimport { companiesRouter } from './routes/companies.js';\nimport { contactsRouter } from './routes/contacts.js';\nimport { dealsRouter } from './routes/deals.js';\nimport { invoicesRouter } from './routes/invoices.js';\nimport { agentsRouter } from './routes/agents.js';\n\nconst app = express();\nconst PORT = process.env.PORT || 3001;\n\n// Initialize error handler\nconst errorHandler = new ErrorHandler();\n\n// Security middleware (PR-28)\napp.use(helmet({\n  contentSecurityPolicy: {\n    directives: {\n      defaultSrc: [\"'self'\"],\n      scriptSrc: [\"'self'\", \"'unsafe-inline'\"],\n      styleSrc: [\"'self'\", \"'unsafe-inline'\"],\n      imgSrc: [\"'self'\", \"data:\", \"https:\"],\n      connectSrc: [\"'self'\", \"https:\"],\n    },\n  },\n  hsts: {\n    maxAge: 31536000,\n    includeSubDomains: true,\n    preload: true\n  }\n}));\n\n// CORS configuration (PR-28)\napp.use(cors({\n  origin: ['http://localhost:3000', 'http://localhost:3001'],\n  credentials: true,\n  methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\n  allowedHeaders: ['Content-Type', 'Authorization', 'X-Org-ID', 'X-User-ID', 'X-Correlation-ID'],\n  exposedHeaders: ['X-System-Mode', 'X-Est-Cost-EUR', 'X-Budget-Pct', 'X-Latency-ms', 'X-Route']\n}));\n\n// Basic middleware\napp.use(express.json({ limit: '10mb' }));\napp.use(express.urlencoded({ extended: true }));\n\n// Apply observability middleware (PR-23)\napp.use(observabilityMiddleware);\n\n// Apply FinOps middleware (PR-29)\napp.use(finOpsMiddleware);\n\n// Apply rate limiting middleware (PR-29)\napp.use(RateLimitMiddleware.createMiddleware({\n  windowMs: 15 * 60 * 1000, // 15 minutes\n  max: 100, // limit each IP to 100 requests per windowMs\n  keyGenerator: 'ip'\n}));\n\n// Apply validation middleware (PR-27)\napp.use(ValidationMiddleware.createMiddleware());\n\n// Apply security middleware (PR-28)\napp.use(SecurityMiddleware.createMiddleware());\n\n// Basic health check endpoint (< 200ms, no external dependencies)\napp.get(\"/health\", (req, res) => {\n  const ts = new Date().toISOString();\n  const version = process.env.npm_package_version || \"1.0.0\";\n  const currentMode = healthModeManager.getCurrentMode();\n  res.set('X-System-Mode', currentMode);\n  res.status(200).json({\n    status: \"ok\",\n    ts,\n    version,\n    mode: currentMode\n  });\n});\n\n// Enhanced Health check endpoints (PR-22)\napp.get(\"/health/live\", async (req, res) => {\n  try {\n    const result = await healthModeManager.getLivenessProbe();\n    const statusCode = result.status === 'ok' ? 200 : 503;\n    res.set('X-System-Mode', result.mode);\n    res.status(statusCode).json(result);\n  } catch (error) {\n    res.status(503).json({\n      status: \"error\",\n      mode: \"degraded\",\n      timestamp: new Date().toISOString(),\n      version: process.env.npm_package_version || '1.0.0',\n      error: (error as Error).message\n    });\n  }\n});\n\napp.get(\"/health/ready\", async (req, res) => {\n  try {\n    const result = await healthModeManager.getReadinessProbe();\n    const statusCode = result.status === 'ok' ? 200 : 503;\n    res.set('X-System-Mode', result.mode);\n    res.status(statusCode).json(result);\n  } catch (error) {\n    res.status(503).json({\n      status: \"error\",\n      mode: \"degraded\",\n      timestamp: new Date().toISOString(),\n      version: process.env.npm_package_version || '1.0.0',\n      error: (error as Error).message\n    });\n  }\n});\n\n// System metrics endpoint\napp.get(\"/metrics\", async (req, res) => {\n  try {\n    const metrics = await healthMonitor.getSystemMetrics();\n    res.set('Content-Type', 'text/plain');\n    res.send(metrics);\n  } catch (error) {\n    res.status(500).json({\n      error: 'Failed to get metrics',\n      message: (error as Error).message\n    });\n  }\n});\n\n// API info endpoint with comprehensive feature list\napp.get(\"/\", (req, res) => {\n  res.json({\n    name: \"ECONEURA API\",\n    version: process.env.npm_package_version || \"1.0.0\",\n    status: \"running\",\n    timestamp: new Date().toISOString(),\n    features: [\n      \"PR-22: Health modes (live/ready/degraded)\",\n      \"PR-23: Observability coherente (logs + métricas + traces)\",\n      \"PR-24: Analytics events with Zod validation\", \n      \"PR-27: Validación Zod integral en routers\",\n      \"PR-28: Security middlewares (Helmet + CORS + CSP)\",\n      \"PR-29: Rate limiting + Budget guard\",\n      \"SSE: Real-time events and notifications\",\n      \"Cockpit: Operational dashboard endpoints\",\n      \"CRM: Companies, Contacts, Deals management\",\n      \"ERP: Invoice processing and management\",\n      \"AI: Agents orchestration and execution\"\n    ],\n    endpoints: [\n      \"GET /health - Basic health check\",\n      \"GET /health/live - Liveness probe (PR-22)\", \n      \"GET /health/ready - Readiness probe (PR-22)\",\n      \"GET /metrics - Prometheus metrics (PR-23)\",\n      \"POST /v1/analytics/events - Track analytics events (PR-24)\",\n      \"GET /v1/analytics/events - Query analytics events (PR-24)\",\n      \"GET /v1/analytics/metrics - Get aggregated metrics (PR-24)\",\n      \"GET /v1/events - Server-Sent Events for real-time updates\",\n      \"POST /v1/events/broadcast - Broadcast events to organization\",\n      \"GET /v1/cockpit/overview - Operational overview dashboard\",\n      \"GET /v1/cockpit/agents - Agent execution details\",\n      \"GET /v1/cockpit/costs - Cost breakdown by org/playbook\",\n      \"GET /v1/cockpit/system - System metrics and health\",\n      \"GET /v1/companies - List companies (CRM)\",\n      \"POST /v1/companies - Create company (CRM)\",\n      \"GET /v1/contacts - List contacts (CRM)\",\n      \"POST /v1/contacts - Create contact (CRM)\",\n      \"GET /v1/deals - List deals (CRM)\",\n      \"POST /v1/deals - Create deal (CRM)\",\n      \"GET /v1/invoices - List invoices (ERP)\",\n      \"POST /v1/invoices - Create invoice (ERP)\",\n      \"GET /v1/agents - List AI agents\",\n      \"POST /v1/agents/run - Execute AI agent\"\n    ]\n  });\n});\n\n// Mount Analytics routes (PR-24)\napp.use('/v1/analytics', analyticsRouter);\n\n// Mount Events (SSE) routes\napp.use('/v1/events', eventsRouter);\n\n// Mount Cockpit routes\napp.use('/v1/cockpit', cockpitRouter);\n\n// Mount CRM routes\napp.use('/v1/companies', companiesRouter);\napp.use('/v1/contacts', contactsRouter);\napp.use('/v1/deals', dealsRouter);\n\n// Mount ERP routes\napp.use('/v1/invoices', invoicesRouter);\n\n// Mount AI routes\napp.use('/v1/agents', agentsRouter);\n\n// Error handling middleware\napp.use(errorHandler.handleError.bind(errorHandler));\n\n// 404 handler\napp.use((req: express.Request, res: express.Response) => {\n  res.status(404).json({\n    error: 'Not found',\n    message: `Route ${req.method} ${req.path} not found`,\n    timestamp: new Date().toISOString(),\n    availableEndpoints: [\n      'GET /health', 'GET /health/live', 'GET /health/ready',\n      'GET /v1/analytics/*', 'GET /v1/events', 'GET /v1/cockpit/*',\n      'GET /v1/companies', 'GET /v1/contacts', 'GET /v1/deals',\n      'GET /v1/invoices', 'GET /v1/agents'\n    ]\n  });\n});\n\n// Start server\nconst server = app.listen(PORT, () => {\n  structuredLogger.info(`ECONEURA API Server running on port ${PORT}`, {\n    port: PORT,\n    environment: process.env.NODE_ENV || 'development',\n    version: process.env.npm_package_version || '1.0.0',\n    features: [\n      'PR-22: Health modes (live/ready/degraded)',\n      'PR-23: Observability coherente (logs + métricas + traces)',\n      'PR-24: Analytics events with Zod validation', \n      'PR-27: Validación Zod integral en routers',\n      'PR-28: Security middlewares (Helmet + CORS + CSP)',\n      'PR-29: Rate limiting + Budget guard',\n      'SSE: Real-time events and notifications',\n      'Cockpit: Operational dashboard endpoints',\n      'CRM: Companies, Contacts, Deals management',\n      'ERP: Invoice processing and management',\n      'AI: Agents orchestration and execution'\n    ]\n  });\n});\n\n// Graceful shutdown\nprocess.on('SIGTERM', () => {\n  structuredLogger.info('SIGTERM received, shutting down gracefully');\n  server.close(() => {\n    structuredLogger.info('Process terminated');\n    process.exit(0);\n  });\n});\n\nprocess.on('SIGINT', () => {\n  structuredLogger.info('SIGINT received, shutting down gracefully');\n  server.close(() => {\n    structuredLogger.info('Process terminated');\n    process.exit(0);\n  });\n});\n\nexport default app;",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\api\\backup\\index.expanded.backup.ts",
        "start": 1,
        "end": 273,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 273,
          "column": 2,
          "position": 2058
        }
      },
      "secondFile": {
        "name": "apps\\api\\src\\index.expanded.ts",
        "start": 1,
        "end": 273,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 273,
          "column": 2,
          "position": 2058
        }
      }
    }
  ]
}