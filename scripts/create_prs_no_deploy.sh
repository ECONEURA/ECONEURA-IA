#!/usr/bin/env bash
set -euo pipefail

# Create PRs for any local branches named fix/no-deploy-*

if ! git rev-parse --is-inside-work-tree >/dev/null 2>&1; then
  echo "Not a git repo"
  exit 1
fi

BRANCHES=$(git for-each-ref --format='%(refname:short)' refs/heads/ | grep '^fix/no-deploy' || true)
if [ -z "$BRANCHES" ]; then
  echo "No local fix/no-deploy branches found"
  exit 0
fi

for b in $BRANCHES; do
  echo "Processing branch: $b"
  # push if not pushed
  if ! git ls-remote --exit-code origin "$b" >/dev/null 2>&1; then
    git push --set-upstream origin "$b"
  fi

  PR_TITLE="fix(ci): add NO_DEPLOY guards â€” $b"
  PR_BODY="This PR adds NO_DEPLOY guards to workflows to prevent accidental deployments.\n\nChanges: add conditional guards (DEPLOY_ENABLED) to deployment/migration steps so CI does not run destructive operations by default.\n\nChecklist:\n- [ ] Verify job/step-level guards are correct\n- [ ] Confirm no harmful changes to runtime behavior\n- [ ] Run CI and verify analyzer passes\n\nGenerated by scripts/create_prs_no_deploy.sh"

  if command -v gh >/dev/null 2>&1; then
    gh pr create --fill --base main --head "$b" --title "$PR_TITLE" --body "$PR_BODY" || true
  else
    # URL-encode title and body for manual PR creation
    urlenc() {
      python3 -c "import urllib.parse, sys; print(urllib.parse.quote(sys.stdin.read()))"
    }

    enc_title=$(printf "%s" "$PR_TITLE" | urlenc)
    enc_body=$(printf "%s" "$PR_BODY" | urlenc)
    echo "gh CLI not found. Create PR manually:"
    echo "https://github.com/ECONEURA/ECONEURA-IA/pull/new/$b?title=${enc_title}&body=${enc_body}"
  fi
done

echo "Done"
