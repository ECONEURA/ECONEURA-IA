# RADICAL_SOFT_MODE: Este workflow ha sido modificado para NO fallar nunca.
# Revertir buscando la etiqueta RADICAL_SOFT_MODE y eliminando continue-on-error / restaurando triggers.

name: k6-smoke

on:
  workflow_dispatch:  # RADICAL_SOFT_MODE: Only manual trigger, removed push/pull_request

env:
  DEPLOY_ENABLED: "false"

jobs:
  perf:
    runs-on: ubuntu-latest
    continue-on-error: true  # RADICAL_SOFT_MODE: Never fail
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile || echo "::warning ::Dependencies install failed (radical soft)"
      
    - name: Start API
      run: |
        node scripts/ci/api-start.mjs || echo "::warning ::API start failed (radical soft)"
      
    - name: Wait for API
      run: |
        npx wait-on http://localhost:3001/health -t 180000 || echo "::warning ::API health check failed (radical soft)"
      
    - name: Run k6 smoke tests
      run: |
        # Install k6
        sudo gpg -k
        sudo gpg --no-default-keyring --keyring /usr/share/keyrings/k6-archive-keyring.gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C5AD17C747E3415A3642D57D77C6C491D6AC1D69
        echo "deb [signed-by=/usr/share/keyrings/k6-archive-keyring.gpg] https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
        sudo apt-get update
        sudo apt-get install k6
        
        # RADICAL_SOFT_MODE: Run k6 but never fail
        k6 run tests/performance/smoke.js --summary-export=.artifacts/k6-summary.json || echo "::warning ::k6 smoke test failed (radical soft)"
        
        # Check p95 threshold but only warn
        if [ -f .artifacts/k6-summary.json ]; then
          P95=$(node -e "
            const fs = require('fs');
            try {
              const summary = JSON.parse(fs.readFileSync('.artifacts/k6-summary.json', 'utf8'));
              const p95 = summary.metrics.http_req_duration?.values?.['p(95)'] || 9999;
              console.log(p95);
            } catch(e) {
              console.log('9999');
            }
          ")
          
          echo "P95 latency: ${P95}ms"
          
          # RADICAL_SOFT_MODE: Warning instead of exit 1
          if (( $(echo "$P95 > 2000" | bc -l) )); then
            echo "::warning ::P95 ${P95}ms exceeds 2000ms threshold (radical soft)"
          else
            echo "::notice ::P95 ${P95}ms meets threshold"
          fi
        else
          echo "::warning ::No k6 summary file found (radical soft)"
        fi
      
    - name: Upload k6 results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: k6-results
        path: .artifacts/
        if-no-files-found: ignore

  # RADICAL_SOFT_MODE: close-pr-on-fail job commented
  # close-pr-on-fail:
  #   runs-on: ubuntu-latest
  #   needs: perf
  #   if: failure() && github.event_name == 'pull_request'
  #   steps:
  #   - name: Close PR on performance failure
  #     uses: actions/github-script@v7
  #     with:
  #       script: |
  #         github.rest.pulls.update({
  #           owner: context.repo.owner,
  #           repo: context.repo.repo,
  #           pull_number: context.issue.number,
  #           state: 'closed'
  #         })