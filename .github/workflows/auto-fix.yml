name: auto-fix
on:
  workflow_dispatch:
  schedule:
    - cron: "15 3 * * *"
  push:
    branches:
      - develop
    paths:
      - "**/*.ts"
      - "**/*.tsx"
      - "package.json"
      - "pnpm-lock.yaml"

permissions:
  contents: write
  pull-requests: write

env:
  BASE_BRANCH: develop
  AUTO_BRANCH: chore/auto-fix

jobs:
  autofix:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
            node-version: 20
            cache: pnpm

      - name: Enable corepack
        run: corepack enable

      - name: Install deps
        run: pnpm install --frozen-lockfile

      - name: Lint autofix
        run: |
          if pnpm run | grep -q "^lint"; then
            pnpm lint --fix || true
          else
            echo "No script lint definido."
          fi

      - name: Prettier (opcional)
        if: hashFiles('**/.prettierrc*') != ''
        run: |
          if pnpm run | grep -q "^format"; then
            pnpm format || true
          else
            npx prettier . -w || true
          fi

      - name: Detect changes
        id: diff
        run: |
          if git diff --quiet; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Create / Update branch
        if: steps.diff.outputs.changed == 'true'
        run: |
          git checkout -B "$AUTO_BRANCH"
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "chore(fix): auto-fix lint/style" || echo "Nada que commitear"
          git push -f origin "$AUTO_BRANCH"

      - name: Open or Update PR
        if: steps.diff.outputs.changed == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const head = process.env.AUTO_BRANCH;
            const base = process.env.BASE_BRANCH;
            const prs = await github.rest.pulls.list({ owner, repo, head: `${owner}:${head}`, state: 'open' });
            const body = [
              "PR autom√°tico de correcciones.",
              "",
              "Incluye:",
              "- Lint autofix",
              "- Formateo (si aplica)",
              "",
              "Se actualiza solo cuando hay nuevos cambios."
            ].join("\n");
            if (prs.data.length === 0) {
              await github.rest.pulls.create({
                owner, repo, head, base,
                title: "chore(fix): auto-fix lint/style",
                body
              });
            }