name: E2E Playwright Tests

on:
  push:
    branches: [ main, develop, 'pr/**' ]
  pull_request:
    branches: [ main, develop ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '20.17.0'
  PNPM_VERSION: '8.15.6'
  DEPLOY_ENABLED: false
  BASE_URL: 'http://127.0.0.1:3000'

permissions:
  contents: read

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Setup pnpm via Corepack
        run: |
          corepack enable
          corepack prepare pnpm@${{ env.PNPM_VERSION }} --activate
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
        
      - name: Start web application in dev mode
        run: pnpm --filter @econeura/web dev &
        
      - name: Wait for web application to be ready
        run: |
          for i in {1..30}; do
            if curl -fsS "${{ env.BASE_URL }}/health" >/dev/null 2>&1; then
              echo "‚úÖ Web app is ready"
              exit 0
            fi
            echo "Waiting for web app... ($i/30)"
            sleep 3
          done
          echo "‚ùå Web app did not start in time"
          exit 1
          
      - name: Check for existing snapshots
        id: snapshots
        run: |
          if [ -d "apps/web/tests/playwright/__snapshots__" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "‚úÖ Existing snapshots found"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "‚ö†Ô∏è No existing snapshots found"
          fi
          
      - name: Bootstrap snapshots (if none exist)
        if: steps.snapshots.outputs.exists == 'false'
        run: |
          echo "üì∏ Generating initial snapshots..."
          pnpm --filter @econeura/web test:ui:update
          
      - name: Run visual regression tests
        run: pnpm --filter @econeura/web test:ui
        
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: apps/web/playwright-report/
          retention-days: 7
