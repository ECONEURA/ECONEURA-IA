name: CI Extended

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  DEPLOY_ENABLED: "false"

jobs:
  openapi_validate:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: OpenAPI Spectral Lint
      run: |
        npx @stoplight/spectral-cli lint apps/api/openapi.yaml
        npx @stoplight/spectral-cli lint apps/api/openapi/openapi.yaml

  link_check:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Link Check
      uses: lycheeverse/lychee-action@v2
      with:
        args: docs --verbose
        fail: true

  security_scan:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: GitLeaks Scan
      uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  api_e2e:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Setup database
      run: |
        export DATABASE_URL="postgresql://postgres:postgres@localhost:5432/test_db"
        pnpm --filter "@econeura/db" db:push

    - name: Start API
      run: |
        node scripts/ci/api-start.mjs

    - name: Wait for API
      run: |
        npx wait-on http://localhost:3001/health -t 180000

    - name: Run E2E Tests
      run: |
        pnpm --filter "./apps/api" test:e2e

    - name: Upload API logs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: api-logs
        path: .artifacts/
        if-no-files-found: ignore