# RADICAL_SOFT_MODE: Este workflow ha sido modificado para NO fallar nunca.
# Revertir buscando la etiqueta RADICAL_SOFT_MODE y eliminando continue-on-error / restaurando triggers.

name: CI Extended

on:
  workflow_dispatch:  # RADICAL_SOFT_MODE: Only manual trigger, removed push/pull_request

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  DEPLOY_ENABLED: "false"

jobs:
  openapi_validate:
    runs-on: ubuntu-latest
    continue-on-error: true  # RADICAL_SOFT_MODE: Never fail
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile || echo "::warning ::Dependencies install failed (radical soft)"
      
    - name: OpenAPI Spectral Lint
      run: |
        npx @stoplight/spectral-cli lint apps/api/openapi.yaml || echo "::warning ::OpenAPI spectral lint failed (radical soft)"
        npx @stoplight/spectral-cli lint apps/api/openapi/openapi.yaml || echo "::warning ::OpenAPI spectral lint failed (radical soft)"

  # RADICAL_SOFT_MODE: link_check job commented to avoid noise
  # link_check:
  #   runs-on: ubuntu-latest
  #   continue-on-error: true
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v4
  #   - name: Link Check
  #     uses: lycheeverse/lychee-action@v2
  #     with:
  #       args: docs --verbose
  #       fail: true

  # RADICAL_SOFT_MODE: security_scan job commented to avoid noise  
  # security_scan:
  #   runs-on: ubuntu-latest
  #   continue-on-error: true
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v4
  #   - name: GitLeaks Scan
  #     uses: gitleaks/gitleaks-action@v2
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  api_e2e:
    runs-on: ubuntu-latest
    continue-on-error: true  # RADICAL_SOFT_MODE: Never fail
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile || echo "::warning ::Dependencies install failed (radical soft)"
      
    - name: Setup database
      run: |
        export DATABASE_URL="postgresql://postgres:postgres@localhost:5432/test_db"
        pnpm --filter "@econeura/db" db:push || echo "::warning ::Database setup failed (radical soft)"
      
    - name: Start API
      run: |
        node scripts/ci/api-start.mjs || echo "::warning ::API start failed (radical soft)"
      
    - name: Wait for API
      run: |
        npx wait-on http://localhost:3001/health -t 180000 || echo "::warning ::API health check failed (radical soft)"
      
    - name: Run E2E Tests
      run: |
        pnpm --filter "./apps/api" test:e2e || echo "::warning ::E2E tests failed (radical soft)"
      
    - name: Upload API logs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: api-logs
        path: .artifacts/
        if-no-files-found: ignore