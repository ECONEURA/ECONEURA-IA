name: ci-base

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

jobs:
  ci:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: econeura_test
        ports: [ "5432:5432" ]
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 5s --health-timeout 5s --health-retries 10
      redis:
        image: redis:7-alpine
        ports: [ "6379:6379" ]
        options: >-
          --health-cmd "redis-cli ping || exit 1"
          --health-interval 5s --health-timeout 3s --health-retries 10
    env:
      NODE_ENV: test
      POSTGRES_URL: postgres://postgres:postgres@localhost:5432/econeura_test
      REDIS_URL: redis://localhost:6379
      AUTH_REQUIRED: "false"
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with: { version: 9 }
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      - name: Typecheck y lint
        run: pnpm -w run -r typecheck || true && pnpm -w run -r lint || true
      - name: Migraciones (si existen)
        run: pnpm -w run db:migrate || true
      - name: Tests unitarios compartidos
        run: pnpm -w run -r test --filter @econeura/shared
      - name: Tests API
        run: pnpm -w run -r test --filter @econeura/api
      - name: Validar OpenAPI (si aplica)
        run: pnpm -w run openapi:validate || true
name: CI Base

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U test -d test" --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis:7
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install pnpm
        run: corepack enable && corepack prepare pnpm@8.8.0 --activate

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Typecheck (workspace)
        run: pnpm -w -s typecheck

      - name: Run shared tests
        env:
          PGHOST: localhost
          PGUSER: test
          PGPASSWORD: test
          PGDATABASE: test
          REDIS_URL: redis://localhost:6379
        run: pnpm -w -r test --filter @econeura/shared --silent
