name: CI Gates

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  TZ: UTC
  LC_ALL: C.UTF-8
  NODE_ENV: test
  NEXT_TELEMETRY_DISABLED: 1
  CI: 1

jobs:
  build:
    name: Build and Lint
    runs-on: ubuntu-latest
    env: 
      DEPLOY_ENABLED: 'false'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20 }
      - uses: pnpm/action-setup@v3
        with: { version: 8 }
      - run: pnpm -w i && (pnpm -w lint || true) && (pnpm -w typecheck || true)

  api-tests:
    name: API Tests
    needs: build
    runs-on: ubuntu-latest
    env: 
      DEPLOY_ENABLED: 'false'
      HEALTH_PATH: '/health'
    services:
      postgres:
        image: postgres:15-alpine
        env: 
          POSTGRES_USER: ci
          POSTGRES_PASSWORD: ci
          POSTGRES_DB: econeura_ci
        ports: ['5432:5432']
        options: >-
          --health-cmd="pg_isready -U ci -d econeura_ci"
          --health-interval=5s --health-timeout=5s --health-retries=20
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
        with: { version: 8 }
      - run: pnpm -w i
      - run: bash scripts/ci/api-up.sh
        env: 
          DATABASE_URL: postgresql://ci:ci@127.0.0.1:5432/econeura_ci
          PORT: 3001
          MOCK_EXTERNAL: '1'
      - run: pnpm --filter apps/api test:e2e
        env: 
          BASE_URL: http://127.0.0.1:3001
          HEALTH_PATH: '/health'
          MOCK_EXTERNAL: '1'
      - if: always()
        uses: actions/upload-artifact@v4
        with: 
          name: api-artifacts
          path: ".artifacts/api.log"
      - if: always()
        run: bash scripts/ci/api-down.sh

  e2e-ui:
    name: E2E UI Tests
    needs: api-tests
    runs-on: ubuntu-latest
    env: 
      DEPLOY_ENABLED: 'false'
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
        with: { version: 8 }
      - run: pnpm -w i
      - run: bash scripts/ci/web-up.sh
      - run: pnpm --filter apps/web playwright test
        env: 
          WEB_BASE_URL: http://127.0.0.1:3000
      - if: always()
        uses: actions/upload-artifact@v4
        with: 
          name: web-artifacts
          path: ".artifacts/web.log"
      - if: always()
        run: bash scripts/ci/web-down.sh

  coverage-merge:
    name: Coverage Merge
    needs: [api-tests, e2e-ui]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: node scripts/ci/coverage-merge.mjs
      - uses: actions/upload-artifact@v4
        with: 
          name: coverage-merged
          path: ".artifacts/coverage-merged.json"

  axe:
    name: Accessibility Tests
    needs: e2e-ui
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
        with: { version: 8 }
      - run: pnpm -w i
      - run: pnpm --filter apps/web playwright test tests/e2e/axe.spec.ts

  links:
    name: Link Check
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: npx lychee docs --config .lychee.toml --no-progress

  security:
    name: Security Scan
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: mkdir -p reports && gitleaks detect --no-git -s . -r reports/gitleaks.json
      - uses: actions/upload-artifact@v4
        with: 
          name: gitleaks
          path: "reports/gitleaks.json"

  all-gates:
    name: All Gates Pass
    needs: [coverage-merge, axe, links, security]
    runs-on: ubuntu-latest
    steps:
      - run: echo "ALL_GATES=PASS"