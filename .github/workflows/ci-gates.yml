name: CI Gates

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  coverage:
    name: Coverage Gate (≥80%)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      
      - run: pnpm install --frozen-lockfile
      - run: pnpm test:coverage
      
      - name: Check coverage threshold
        run: |
          COVERAGE=$(cat coverage/coverage-summary.json | jq '.total.lines.pct')
          echo "Coverage: $COVERAGE%"
          if (( $(echo "$COVERAGE < 80" | bc -l) )); then
            echo "❌ Coverage below 80%: $COVERAGE%"
            exit 1
          else
            echo "✅ Coverage above 80%: $COVERAGE%"
          fi

  visual-diff:
    name: Visual Diff Gate (≤2%)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      
      - run: pnpm install --frozen-lockfile
      - run: pnpm build
      - run: pnpm playwright install
      - run: pnpm test:visual
      
      - name: Check visual diff threshold
        run: |
          DIFF_PCT=$(cat visual-diff-report.json | jq '.diffPercentage')
          echo "Visual diff: $DIFF_PCT%"
          if (( $(echo "$DIFF_PCT > 2" | bc -l) )); then
            echo "❌ Visual diff above 2%: $DIFF_PCT%"
            exit 1
          else
            echo "✅ Visual diff below 2%: $DIFF_PCT%"
          fi

  axe-accessibility:
    name: Axe Accessibility Gate (≥95%)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      
      - run: pnpm install --frozen-lockfile
      - run: pnpm build
      - run: pnpm playwright install
      - run: pnpm test:axe
      
      - name: Check accessibility score
        run: |
          AXE_SCORE=$(cat axe-report.json | jq '.score')
          echo "Axe score: $AXE_SCORE%"
          if (( $(echo "$AXE_SCORE < 95" | bc -l) )); then
            echo "❌ Axe score below 95%: $AXE_SCORE%"
            exit 1
          else
            echo "✅ Axe score above 95%: $AXE_SCORE%"
          fi

  broken-links:
    name: Broken Links Gate (0 broken)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      
      - run: pnpm install --frozen-lockfile
      - run: pnpm build
      - run: pnpm start &
      - run: sleep 10
      - run: pnpm test:links
      
      - name: Check broken links
        run: |
          BROKEN_LINKS=$(cat link-check-report.json | jq '.brokenLinks')
          echo "Broken links: $BROKEN_LINKS"
          if [ "$BROKEN_LINKS" -ne "0" ]; then
            echo "❌ Found $BROKEN_LINKS broken links"
            exit 1
          else
            echo "✅ No broken links found"
          fi

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      
      - run: pnpm install --frozen-lockfile
      - run: pnpm build
      - run: pnpm playwright install
      
      - name: Run database migrations
        run: |
          psql postgres://postgres:postgres@localhost:5432/postgres -f packages/db/migrations/20250101000000_mem.sql
      
      - name: Start services
        run: |
          pnpm --filter api-neura-comet dev &
          pnpm --filter api-agents-make dev &
          pnpm --filter econeura-cockpit dev &
          sleep 30
      
      - run: pnpm test:e2e
      
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      
      - run: pnpm install --frozen-lockfile
      - run: pnpm audit --audit-level high
      - run: pnpm snyk test
      - run: pnpm test:secrets

  gates-passed:
    name: All Gates Passed
    runs-on: ubuntu-latest
    needs: [coverage, visual-diff, axe-accessibility, broken-links, e2e-tests, security-scan]
    steps:
      - run: echo "✅ All CI gates passed!"

