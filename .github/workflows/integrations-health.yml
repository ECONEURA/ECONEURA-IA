name: integrations-health

on:
  schedule:
    - cron: '0 */6 * * *'  # Every 6 hours
  workflow_dispatch:

env:
  DEPLOY_ENABLED: "false"

jobs:
  health:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Check integrations health
      run: |
        echo "Checking integrations health..."

        # Run the health check script
        node scripts/ci/check-integrations-health.mjs

        # Check if health results exist
        if [ -f .artifacts/health-check.json ]; then
          echo "Health check results:"
          cat .artifacts/health-check.json

          # Parse results and fail if unhealthy
          FAILED_SERVICES=$(node -e "
            const fs = require('fs');
            try {
              const health = JSON.parse(fs.readFileSync('.artifacts/health-check.json', 'utf8'));
              const failed = Object.entries(health).filter(([_, status]) => status !== 'healthy').length;
              console.log(failed);
            } catch(e) {
              console.log('0');
            }
          ")

          if [ "$FAILED_SERVICES" -gt "0" ]; then
            echo "::error ::$FAILED_SERVICES integrations are unhealthy"
            exit 1
          else
            echo "::notice ::All integrations are healthy"
          fi
        else
          echo "::error ::No health check results found"
          exit 1
        fi

    - name: Test external dependencies
      run: |
        echo "Testing external dependencies..."

        # Test database connectivity
        if [ -n "$DATABASE_URL" ]; then
          node -e "
            const { Client } = require('pg');
            const client = new Client(process.env.DATABASE_URL);
            client.connect()
              .then(() => { console.log('Database: Connected'); client.end(); })
              .catch(err => { console.log('Database: Failed -', err.message); process.exit(1); });
          "
        else
          echo "::warning ::No DATABASE_URL configured"
        fi

        # Test Redis connectivity (if configured)
        if [ -n "$REDIS_URL" ]; then
          node -e "
            const redis = require('redis');
            const client = redis.createClient(process.env.REDIS_URL);
            client.ping()
              .then(() => { console.log('Redis: Connected'); client.quit(); })
              .catch(err => { console.log('Redis: Failed -', err.message); process.exit(1); });
          "
        else
          echo "::notice ::No REDIS_URL configured, skipping Redis test"
        fi

    - name: Upload health results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: health-check-results
        path: .artifacts/
        if-no-files-found: ignore

    - name: Summary
      run: |
        echo "=== Integration Health Summary ==="
        echo "All health checks completed successfully"
        echo "::notice ::Integration health check completed"