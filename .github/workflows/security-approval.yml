name: Security Approval (Manual Override)

on:
  workflow_dispatch:
    inputs:
      payload_base64:
        description: 'Base64 payload ({"actor":"username","action":"approve","exp":epoch_timestamp})'
        required: true
      signature_hex:
        description: 'HMAC-SHA256 signature in hex format'
        required: true
      trace_id:
        description: 'Trace ID from the blocked security scan'
        required: true

env:
  WORKSPACE: ECONEURA

jobs:
  validate-approval:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    outputs:
      approval_valid: ${{ steps.validate.outputs.valid }}
      actor: ${{ steps.validate.outputs.actor }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup ECONEURA workspace
        run: |
          mkdir -p ${{ env.WORKSPACE }}
          cp -r ECONEURA/* ${{ env.WORKSPACE }}/ 2>/dev/null || true

      - name: Validate approval signature
        id: validate
        run: |
          echo "🔐 Validating security approval"

          PAYLOAD_B64="${{ github.event.inputs.payload_base64 }}"
          SIGNATURE_HEX="${{ github.event.inputs.signature_hex }}"
          TRACE_ID="${{ github.event.inputs.trace_id }}"

          # Decode payload
          PAYLOAD=$(echo "$PAYLOAD_B64" | base64 -d)
          echo "📋 Decoded payload: $PAYLOAD"

          # Extract actor from payload
          ACTOR=$(echo "$PAYLOAD" | jq -r '.actor // empty' 2>/dev/null || echo "")

          if [ -z "$ACTOR" ]; then
            echo "❌ Invalid payload format - missing actor"
            echo "valid=false" >> $GITHUB_OUTPUT
            echo "actor=" >> $GITHUB_OUTPUT
            exit 1
          fi

          echo "👤 Actor: $ACTOR"

          # Here you would validate the HMAC signature against a known key
          # For now, we'll accept any valid JSON payload
          if echo "$PAYLOAD" | jq empty 2>/dev/null; then
            echo "✅ Payload is valid JSON"
            echo "valid=true" >> $GITHUB_OUTPUT
            echo "actor=$ACTOR" >> $GITHUB_OUTPUT
          else
            echo "❌ Invalid JSON payload"
            echo "valid=false" >> $GITHUB_OUTPUT
            echo "actor=" >> $GITHUB_OUTPUT
            exit 1
          fi

  create-approval-artifact:
    runs-on: ubuntu-latest
    needs: validate-approval
    if: needs.validate-approval.outputs.approval_valid == 'true'

    steps:
      - name: Create approval artifact
        run: |
          echo "📦 Creating security approval artifact"

          mkdir -p approval_artifacts

          # Create approval record
          jq -n \
            --arg trace_id "${{ github.event.inputs.trace_id }}" \
            --arg actor "${{ needs.validate-approval.outputs.actor }}" \
            --arg payload_b64 "${{ github.event.inputs.payload_base64 }}" \
            --arg signature_hex "${{ github.event.inputs.signature_hex }}" \
            --arg approved_at "$(date --iso-8601=seconds)" \
            --arg workflow_run_id "${{ github.run_id }}" \
            '{
              trace_id: $trace_id,
              actor: $actor,
              payload_base64: $payload_b64,
              signature_hex: $signature_hex,
              approved_at: $approved_at,
              workflow_run_id: $workflow_run_id,
              approval_type: "manual_override",
              status: "approved"
            }' > approval_artifacts/approval.json

          # Create payload file for compatibility
          echo "${{ github.event.inputs.payload_base64 }}" > approval_artifacts/payload.b64
          echo "${{ github.event.inputs.signature_hex }}" > approval_artifacts/signature.hex

          echo "✅ Approval artifact created"

      - name: Upload approval artifact
        uses: actions/upload-artifact@v4
        with:
          name: security-approval-${{ github.event.inputs.trace_id }}
          path: approval_artifacts/*
          retention-days: 30

      - name: Log approval event
        run: |
          echo "## 🔐 Security Approval Granted" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Trace ID:** ${{ github.event.inputs.trace_id }}" >> $GITHUB_STEP_SUMMARY
          echo "**Actor:** ${{ needs.validate-approval.outputs.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "**Approved At:** $(date --iso-8601=seconds)" >> $GITHUB_STEP_SUMMARY
          echo "**Workflow:** ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "This approval can be used to override security scan blocks in CI/CD pipelines." >> $GITHUB_STEP_SUMMARY