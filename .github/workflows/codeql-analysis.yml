name: CodeQL Security Analysis

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'apps/**'
      - 'packages/**'
      - 'scripts/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'apps/**'
      - 'packages/**'
      - 'scripts/**'
  schedule:
    - cron: '0 6 * * 1'  # Lunes a las 6 AM UTC
  workflow_dispatch:
    inputs:
      language:
        description: 'Programming language to analyze'
        required: false
        default: 'javascript-typescript'
        type: choice
        options:
          - javascript-typescript
          - python
          - java
          - csharp

env:
  CODEQL_THREADS: 4
  CODEQL_RAM: 8192

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  analyze:
    name: Analyze Code
    runs-on: ubuntu-latest
    timeout-minutes: 360
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ javascript, python ]
        include:
          - language: javascript
            build-mode: none
          - language: python
            build-mode: none

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Initialize CodeQL for the specified language
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}
        config-file: ./.github/codeql-config.yml
        queries: security-and-quality

    # Setup Node.js for JavaScript/TypeScript analysis
    - name: Setup Node.js
      if: matrix.language == 'javascript'
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'pnpm'

    - name: Setup pnpm
      if: matrix.language == 'javascript'
      uses: pnpm/action-setup@v2
      with:
        version: 8

    - name: Install dependencies
      if: matrix.language == 'javascript'
      run: pnpm install --frozen-lockfile

    - name: Build project
      if: matrix.language == 'javascript'
      run: pnpm build

    # Setup Python for Python analysis
    - name: Setup Python
      if: matrix.language == 'python'
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Python dependencies
      if: matrix.language == 'python'
      run: |
python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f pyproject.toml ]; then pip install -e .; fi

    # Perform CodeQL analysis
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
        upload: true
        output: sarif-results
      env:
        CODEQL_ACTION_SARIF_RESULTS: sarif-results

    # Upload SARIF results
    - name: Upload SARIF results
      if: always()
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: sarif-results/${{ matrix.language }}.sarif
        category: "/language:${{matrix.language}}"

    # Generate security report
    - name: Generate Security Report
      if: always()
      run: |
echo "## 🔒 CodeQL Security Analysis Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Analysis Details:" >> $GITHUB_STEP_SUMMARY
        echo "- **Language:** ${{ matrix.language }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Mode:** ${{ matrix.build-mode }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Timestamp:** $(date)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY

        if [ -f "sarif-results/${{ matrix.language }}.sarif" ]; then
          echo "### SARIF Results Generated ✅" >> $GITHUB_STEP_SUMMARY
          echo "- File: \`sarif-results/${{ matrix.language }}.sarif\`" >> $GITHUB_STEP_SUMMARY
        else
          echo "### No SARIF Results Generated ⚠️" >> $GITHUB_STEP_SUMMARY
        fi

        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Security Queries Executed:" >> $GITHUB_STEP_SUMMARY
        echo "- SQL Injection detection" >> $GITHUB_STEP_SUMMARY
        echo "- Cross-Site Scripting (XSS)" >> $GITHUB_STEP_SUMMARY
        echo "- Command Injection" >> $GITHUB_STEP_SUMMARY
        echo "- Path Traversal" >> $GITHUB_STEP_SUMMARY
        echo "- Hardcoded credentials" >> $GITHUB_STEP_SUMMARY
        echo "- Insecure random generation" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Next Steps:" >> $GITHUB_STEP_SUMMARY
        echo "1. Review security alerts in Security tab" >> $GITHUB_STEP_SUMMARY
        echo "2. Address high/critical severity issues" >> $GITHUB_STEP_SUMMARY
        echo "3. Consider adding custom security queries" >> $GITHUB_STEP_SUMMARY

  summary:
    name: Analysis Summary
    runs-on: ubuntu-latest
    needs: analyze
    if: always()
    timeout-minutes: 5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Generate Final Summary
      run: |
echo "## 🎯 CodeQL Analysis Complete" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Status: ${{ needs.analyze.result == 'success' && '✅ Success' || '❌ Failed' }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Analyzed Languages:" >> $GITHUB_STEP_SUMMARY
        echo "- JavaScript/TypeScript" >> $GITHUB_STEP_SUMMARY
        echo "- Python" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Security Benefits:" >> $GITHUB_STEP_SUMMARY
        echo "- Automated vulnerability detection" >> $GITHUB_STEP_SUMMARY
        echo "- SARIF reports for GitHub Security tab" >> $GITHUB_STEP_SUMMARY
        echo "- Integration with GitHub Advanced Security" >> $GITHUB_STEP_SUMMARY
        echo "- Continuous security monitoring" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Recommendations:" >> $GITHUB_STEP_SUMMARY
        echo "- Enable CodeQL Advanced Security in repository settings" >> $GITHUB_STEP_SUMMARY
        echo "- Set up security alerts notifications" >> $GITHUB_STEP_SUMMARY
        echo "- Review and fix security issues regularly" >> $GITHUB_STEP_SUMMARY
