name: Release

on:
  push:
    branches:
      - main
      - develop
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  release:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: pnpm test

      - name: Run linting
        run: pnpm lint

      - name: Build
        run: pnpm build

      - name: Generate changelog
        run: pnpm changelog

      - name: Create release
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            pnpm release:${{ github.event.inputs.release_type }}
          else
            pnpm release:patch
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: |
            CHANGELOG.md
            package.json
          retention-days: 30

  semantic-release:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run semantic release
        run: pnpm semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  notify:
    runs-on: ubuntu-latest
    needs: [release, semantic-release]
    if: always()
    
    steps:
      - name: Notify success
        if: needs.release.result == 'success' || needs.semantic-release.result == 'success'
        run: |
          echo "üéâ Release completed successfully!"
          echo "Check the releases page: https://github.com/ECONEURA/ECONEURA-IA/releases"

      - name: Notify failure
        if: needs.release.result == 'failure' || needs.semantic-release.result == 'failure'
        run: |
          echo "‚ùå Release failed!"
          echo "Check the workflow logs for details"
