import { z } from 'zod';
export declare const ProductSchema: z.ZodObject<{
    id: z.ZodString;
    org_id: z.ZodString;
    name: z.ZodString;
    description: z.ZodOptional<z.ZodString>;
    sku: z.ZodString;
    category: z.ZodOptional<z.ZodString>;
    unit_price: z.ZodNumber;
    cost_price: z.ZodOptional<z.ZodNumber>;
    currency: z.ZodDefault<z.ZodString>;
    unit: z.ZodDefault<z.ZodString>;
    stock_quantity: z.ZodDefault<z.ZodNumber>;
    min_stock_level: z.ZodDefault<z.ZodNumber>;
    supplier_id: z.ZodOptional<z.ZodString>;
    is_active: z.ZodDefault<z.ZodBoolean>;
    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
    created_at: z.ZodDate;
    updated_at: z.ZodDate;
}, "strip", z.ZodTypeAny, {
    id?: string;
    metadata?: Record<string, any>;
    category?: string;
    name?: string;
    description?: string;
    currency?: string;
    sku?: string;
    unit?: string;
    unit_price?: number;
    org_id?: string;
    created_at?: Date;
    updated_at?: Date;
    cost_price?: number;
    stock_quantity?: number;
    min_stock_level?: number;
    supplier_id?: string;
    is_active?: boolean;
}, {
    id?: string;
    metadata?: Record<string, any>;
    category?: string;
    name?: string;
    description?: string;
    currency?: string;
    sku?: string;
    unit?: string;
    unit_price?: number;
    org_id?: string;
    created_at?: Date;
    updated_at?: Date;
    cost_price?: number;
    stock_quantity?: number;
    min_stock_level?: number;
    supplier_id?: string;
    is_active?: boolean;
}>;
export declare const CreateProductSchema: z.ZodObject<Omit<{
    id: z.ZodString;
    org_id: z.ZodString;
    name: z.ZodString;
    description: z.ZodOptional<z.ZodString>;
    sku: z.ZodString;
    category: z.ZodOptional<z.ZodString>;
    unit_price: z.ZodNumber;
    cost_price: z.ZodOptional<z.ZodNumber>;
    currency: z.ZodDefault<z.ZodString>;
    unit: z.ZodDefault<z.ZodString>;
    stock_quantity: z.ZodDefault<z.ZodNumber>;
    min_stock_level: z.ZodDefault<z.ZodNumber>;
    supplier_id: z.ZodOptional<z.ZodString>;
    is_active: z.ZodDefault<z.ZodBoolean>;
    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
    created_at: z.ZodDate;
    updated_at: z.ZodDate;
}, "id" | "created_at" | "updated_at">, "strip", z.ZodTypeAny, {
    metadata?: Record<string, any>;
    category?: string;
    name?: string;
    description?: string;
    currency?: string;
    sku?: string;
    unit?: string;
    unit_price?: number;
    org_id?: string;
    cost_price?: number;
    stock_quantity?: number;
    min_stock_level?: number;
    supplier_id?: string;
    is_active?: boolean;
}, {
    metadata?: Record<string, any>;
    category?: string;
    name?: string;
    description?: string;
    currency?: string;
    sku?: string;
    unit?: string;
    unit_price?: number;
    org_id?: string;
    cost_price?: number;
    stock_quantity?: number;
    min_stock_level?: number;
    supplier_id?: string;
    is_active?: boolean;
}>;
export declare const UpdateProductSchema: z.ZodObject<{
    metadata: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>>;
    category: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    name: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    currency: z.ZodOptional<z.ZodDefault<z.ZodString>>;
    sku: z.ZodOptional<z.ZodString>;
    unit: z.ZodOptional<z.ZodDefault<z.ZodString>>;
    unit_price: z.ZodOptional<z.ZodNumber>;
    org_id: z.ZodOptional<z.ZodString>;
    cost_price: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
    stock_quantity: z.ZodOptional<z.ZodDefault<z.ZodNumber>>;
    min_stock_level: z.ZodOptional<z.ZodDefault<z.ZodNumber>>;
    supplier_id: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    is_active: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
}, "strip", z.ZodTypeAny, {
    metadata?: Record<string, any>;
    category?: string;
    name?: string;
    description?: string;
    currency?: string;
    sku?: string;
    unit?: string;
    unit_price?: number;
    org_id?: string;
    cost_price?: number;
    stock_quantity?: number;
    min_stock_level?: number;
    supplier_id?: string;
    is_active?: boolean;
}, {
    metadata?: Record<string, any>;
    category?: string;
    name?: string;
    description?: string;
    currency?: string;
    sku?: string;
    unit?: string;
    unit_price?: number;
    org_id?: string;
    cost_price?: number;
    stock_quantity?: number;
    min_stock_level?: number;
    supplier_id?: string;
    is_active?: boolean;
}>;
export declare const SupplierSchema: z.ZodObject<{
    id: z.ZodString;
    org_id: z.ZodString;
    name: z.ZodString;
    contact_person: z.ZodOptional<z.ZodString>;
    email: z.ZodOptional<z.ZodString>;
    phone: z.ZodOptional<z.ZodString>;
    website: z.ZodOptional<z.ZodString>;
    address: z.ZodOptional<z.ZodObject<{
        street: z.ZodOptional<z.ZodString>;
        city: z.ZodOptional<z.ZodString>;
        state: z.ZodOptional<z.ZodString>;
        postal_code: z.ZodOptional<z.ZodString>;
        country: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        city?: string;
        state?: string;
        country?: string;
        street?: string;
        postal_code?: string;
    }, {
        city?: string;
        state?: string;
        country?: string;
        street?: string;
        postal_code?: string;
    }>>;
    tax_id: z.ZodOptional<z.ZodString>;
    payment_terms: z.ZodDefault<z.ZodString>;
    credit_limit: z.ZodOptional<z.ZodNumber>;
    currency: z.ZodDefault<z.ZodString>;
    is_active: z.ZodDefault<z.ZodBoolean>;
    rating: z.ZodOptional<z.ZodNumber>;
    notes: z.ZodOptional<z.ZodString>;
    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
    created_at: z.ZodDate;
    updated_at: z.ZodDate;
}, "strip", z.ZodTypeAny, {
    id?: string;
    metadata?: Record<string, any>;
    name?: string;
    email?: string;
    phone?: string;
    website?: string;
    currency?: string;
    address?: {
        city?: string;
        state?: string;
        country?: string;
        street?: string;
        postal_code?: string;
    };
    notes?: string;
    rating?: number;
    org_id?: string;
    created_at?: Date;
    updated_at?: Date;
    is_active?: boolean;
    contact_person?: string;
    tax_id?: string;
    payment_terms?: string;
    credit_limit?: number;
}, {
    id?: string;
    metadata?: Record<string, any>;
    name?: string;
    email?: string;
    phone?: string;
    website?: string;
    currency?: string;
    address?: {
        city?: string;
        state?: string;
        country?: string;
        street?: string;
        postal_code?: string;
    };
    notes?: string;
    rating?: number;
    org_id?: string;
    created_at?: Date;
    updated_at?: Date;
    is_active?: boolean;
    contact_person?: string;
    tax_id?: string;
    payment_terms?: string;
    credit_limit?: number;
}>;
export declare const CreateSupplierSchema: z.ZodObject<Omit<{
    id: z.ZodString;
    org_id: z.ZodString;
    name: z.ZodString;
    contact_person: z.ZodOptional<z.ZodString>;
    email: z.ZodOptional<z.ZodString>;
    phone: z.ZodOptional<z.ZodString>;
    website: z.ZodOptional<z.ZodString>;
    address: z.ZodOptional<z.ZodObject<{
        street: z.ZodOptional<z.ZodString>;
        city: z.ZodOptional<z.ZodString>;
        state: z.ZodOptional<z.ZodString>;
        postal_code: z.ZodOptional<z.ZodString>;
        country: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        city?: string;
        state?: string;
        country?: string;
        street?: string;
        postal_code?: string;
    }, {
        city?: string;
        state?: string;
        country?: string;
        street?: string;
        postal_code?: string;
    }>>;
    tax_id: z.ZodOptional<z.ZodString>;
    payment_terms: z.ZodDefault<z.ZodString>;
    credit_limit: z.ZodOptional<z.ZodNumber>;
    currency: z.ZodDefault<z.ZodString>;
    is_active: z.ZodDefault<z.ZodBoolean>;
    rating: z.ZodOptional<z.ZodNumber>;
    notes: z.ZodOptional<z.ZodString>;
    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
    created_at: z.ZodDate;
    updated_at: z.ZodDate;
}, "id" | "created_at" | "updated_at">, "strip", z.ZodTypeAny, {
    metadata?: Record<string, any>;
    name?: string;
    email?: string;
    phone?: string;
    website?: string;
    currency?: string;
    address?: {
        city?: string;
        state?: string;
        country?: string;
        street?: string;
        postal_code?: string;
    };
    notes?: string;
    rating?: number;
    org_id?: string;
    is_active?: boolean;
    contact_person?: string;
    tax_id?: string;
    payment_terms?: string;
    credit_limit?: number;
}, {
    metadata?: Record<string, any>;
    name?: string;
    email?: string;
    phone?: string;
    website?: string;
    currency?: string;
    address?: {
        city?: string;
        state?: string;
        country?: string;
        street?: string;
        postal_code?: string;
    };
    notes?: string;
    rating?: number;
    org_id?: string;
    is_active?: boolean;
    contact_person?: string;
    tax_id?: string;
    payment_terms?: string;
    credit_limit?: number;
}>;
export declare const UpdateSupplierSchema: z.ZodObject<{
    metadata: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>>;
    name: z.ZodOptional<z.ZodString>;
    email: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    phone: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    website: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    currency: z.ZodOptional<z.ZodDefault<z.ZodString>>;
    address: z.ZodOptional<z.ZodOptional<z.ZodObject<{
        street: z.ZodOptional<z.ZodString>;
        city: z.ZodOptional<z.ZodString>;
        state: z.ZodOptional<z.ZodString>;
        postal_code: z.ZodOptional<z.ZodString>;
        country: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        city?: string;
        state?: string;
        country?: string;
        street?: string;
        postal_code?: string;
    }, {
        city?: string;
        state?: string;
        country?: string;
        street?: string;
        postal_code?: string;
    }>>>;
    notes: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    rating: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
    org_id: z.ZodOptional<z.ZodString>;
    is_active: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    contact_person: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    tax_id: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    payment_terms: z.ZodOptional<z.ZodDefault<z.ZodString>>;
    credit_limit: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
}, "strip", z.ZodTypeAny, {
    metadata?: Record<string, any>;
    name?: string;
    email?: string;
    phone?: string;
    website?: string;
    currency?: string;
    address?: {
        city?: string;
        state?: string;
        country?: string;
        street?: string;
        postal_code?: string;
    };
    notes?: string;
    rating?: number;
    org_id?: string;
    is_active?: boolean;
    contact_person?: string;
    tax_id?: string;
    payment_terms?: string;
    credit_limit?: number;
}, {
    metadata?: Record<string, any>;
    name?: string;
    email?: string;
    phone?: string;
    website?: string;
    currency?: string;
    address?: {
        city?: string;
        state?: string;
        country?: string;
        street?: string;
        postal_code?: string;
    };
    notes?: string;
    rating?: number;
    org_id?: string;
    is_active?: boolean;
    contact_person?: string;
    tax_id?: string;
    payment_terms?: string;
    credit_limit?: number;
}>;
export declare const InvoiceSchema: z.ZodObject<{
    id: z.ZodString;
    org_id: z.ZodString;
    invoice_number: z.ZodString;
    supplier_id: z.ZodOptional<z.ZodString>;
    company_id: z.ZodOptional<z.ZodString>;
    contact_id: z.ZodOptional<z.ZodString>;
    deal_id: z.ZodOptional<z.ZodString>;
    issue_date: z.ZodDate;
    due_date: z.ZodDate;
    status: z.ZodDefault<z.ZodEnum<["draft", "sent", "paid", "overdue", "cancelled"]>>;
    subtotal: z.ZodNumber;
    tax_rate: z.ZodDefault<z.ZodNumber>;
    tax_amount: z.ZodDefault<z.ZodNumber>;
    total: z.ZodNumber;
    currency: z.ZodDefault<z.ZodString>;
    notes: z.ZodOptional<z.ZodString>;
    payment_terms: z.ZodOptional<z.ZodString>;
    paid_at: z.ZodOptional<z.ZodDate>;
    created_by: z.ZodString;
    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
    created_at: z.ZodDate;
    updated_at: z.ZodDate;
}, "strip", z.ZodTypeAny, {
    status?: "cancelled" | "draft" | "sent" | "paid" | "overdue";
    total?: number;
    id?: string;
    metadata?: Record<string, any>;
    currency?: string;
    notes?: string;
    subtotal?: number;
    org_id?: string;
    created_at?: Date;
    due_date?: Date;
    updated_at?: Date;
    supplier_id?: string;
    payment_terms?: string;
    invoice_number?: string;
    company_id?: string;
    contact_id?: string;
    deal_id?: string;
    issue_date?: Date;
    tax_rate?: number;
    tax_amount?: number;
    paid_at?: Date;
    created_by?: string;
}, {
    status?: "cancelled" | "draft" | "sent" | "paid" | "overdue";
    total?: number;
    id?: string;
    metadata?: Record<string, any>;
    currency?: string;
    notes?: string;
    subtotal?: number;
    org_id?: string;
    created_at?: Date;
    due_date?: Date;
    updated_at?: Date;
    supplier_id?: string;
    payment_terms?: string;
    invoice_number?: string;
    company_id?: string;
    contact_id?: string;
    deal_id?: string;
    issue_date?: Date;
    tax_rate?: number;
    tax_amount?: number;
    paid_at?: Date;
    created_by?: string;
}>;
export declare const CreateInvoiceSchema: z.ZodObject<Omit<{
    id: z.ZodString;
    org_id: z.ZodString;
    invoice_number: z.ZodString;
    supplier_id: z.ZodOptional<z.ZodString>;
    company_id: z.ZodOptional<z.ZodString>;
    contact_id: z.ZodOptional<z.ZodString>;
    deal_id: z.ZodOptional<z.ZodString>;
    issue_date: z.ZodDate;
    due_date: z.ZodDate;
    status: z.ZodDefault<z.ZodEnum<["draft", "sent", "paid", "overdue", "cancelled"]>>;
    subtotal: z.ZodNumber;
    tax_rate: z.ZodDefault<z.ZodNumber>;
    tax_amount: z.ZodDefault<z.ZodNumber>;
    total: z.ZodNumber;
    currency: z.ZodDefault<z.ZodString>;
    notes: z.ZodOptional<z.ZodString>;
    payment_terms: z.ZodOptional<z.ZodString>;
    paid_at: z.ZodOptional<z.ZodDate>;
    created_by: z.ZodString;
    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
    created_at: z.ZodDate;
    updated_at: z.ZodDate;
}, "id" | "created_at" | "updated_at">, "strip", z.ZodTypeAny, {
    status?: "cancelled" | "draft" | "sent" | "paid" | "overdue";
    total?: number;
    metadata?: Record<string, any>;
    currency?: string;
    notes?: string;
    subtotal?: number;
    org_id?: string;
    due_date?: Date;
    supplier_id?: string;
    payment_terms?: string;
    invoice_number?: string;
    company_id?: string;
    contact_id?: string;
    deal_id?: string;
    issue_date?: Date;
    tax_rate?: number;
    tax_amount?: number;
    paid_at?: Date;
    created_by?: string;
}, {
    status?: "cancelled" | "draft" | "sent" | "paid" | "overdue";
    total?: number;
    metadata?: Record<string, any>;
    currency?: string;
    notes?: string;
    subtotal?: number;
    org_id?: string;
    due_date?: Date;
    supplier_id?: string;
    payment_terms?: string;
    invoice_number?: string;
    company_id?: string;
    contact_id?: string;
    deal_id?: string;
    issue_date?: Date;
    tax_rate?: number;
    tax_amount?: number;
    paid_at?: Date;
    created_by?: string;
}>;
export declare const UpdateInvoiceSchema: z.ZodObject<{
    status: z.ZodOptional<z.ZodDefault<z.ZodEnum<["draft", "sent", "paid", "overdue", "cancelled"]>>>;
    total: z.ZodOptional<z.ZodNumber>;
    metadata: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>>;
    currency: z.ZodOptional<z.ZodDefault<z.ZodString>>;
    notes: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    subtotal: z.ZodOptional<z.ZodNumber>;
    org_id: z.ZodOptional<z.ZodString>;
    due_date: z.ZodOptional<z.ZodDate>;
    supplier_id: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    payment_terms: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    invoice_number: z.ZodOptional<z.ZodString>;
    company_id: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    contact_id: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    deal_id: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    issue_date: z.ZodOptional<z.ZodDate>;
    tax_rate: z.ZodOptional<z.ZodDefault<z.ZodNumber>>;
    tax_amount: z.ZodOptional<z.ZodDefault<z.ZodNumber>>;
    paid_at: z.ZodOptional<z.ZodOptional<z.ZodDate>>;
    created_by: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    status?: "cancelled" | "draft" | "sent" | "paid" | "overdue";
    total?: number;
    metadata?: Record<string, any>;
    currency?: string;
    notes?: string;
    subtotal?: number;
    org_id?: string;
    due_date?: Date;
    supplier_id?: string;
    payment_terms?: string;
    invoice_number?: string;
    company_id?: string;
    contact_id?: string;
    deal_id?: string;
    issue_date?: Date;
    tax_rate?: number;
    tax_amount?: number;
    paid_at?: Date;
    created_by?: string;
}, {
    status?: "cancelled" | "draft" | "sent" | "paid" | "overdue";
    total?: number;
    metadata?: Record<string, any>;
    currency?: string;
    notes?: string;
    subtotal?: number;
    org_id?: string;
    due_date?: Date;
    supplier_id?: string;
    payment_terms?: string;
    invoice_number?: string;
    company_id?: string;
    contact_id?: string;
    deal_id?: string;
    issue_date?: Date;
    tax_rate?: number;
    tax_amount?: number;
    paid_at?: Date;
    created_by?: string;
}>;
export declare const InvoiceItemSchema: z.ZodObject<{
    id: z.ZodString;
    invoice_id: z.ZodString;
    product_id: z.ZodOptional<z.ZodString>;
    name: z.ZodString;
    description: z.ZodOptional<z.ZodString>;
    quantity: z.ZodNumber;
    unit_price: z.ZodNumber;
    unit: z.ZodDefault<z.ZodString>;
    tax_rate: z.ZodDefault<z.ZodNumber>;
    subtotal: z.ZodNumber;
    tax_amount: z.ZodDefault<z.ZodNumber>;
    total: z.ZodNumber;
    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
    created_at: z.ZodDate;
}, "strip", z.ZodTypeAny, {
    total?: number;
    id?: string;
    metadata?: Record<string, any>;
    name?: string;
    description?: string;
    unit?: string;
    quantity?: number;
    subtotal?: number;
    product_id?: string;
    unit_price?: number;
    created_at?: Date;
    tax_rate?: number;
    tax_amount?: number;
    invoice_id?: string;
}, {
    total?: number;
    id?: string;
    metadata?: Record<string, any>;
    name?: string;
    description?: string;
    unit?: string;
    quantity?: number;
    subtotal?: number;
    product_id?: string;
    unit_price?: number;
    created_at?: Date;
    tax_rate?: number;
    tax_amount?: number;
    invoice_id?: string;
}>;
export declare const CreateInvoiceItemSchema: z.ZodObject<Omit<{
    id: z.ZodString;
    invoice_id: z.ZodString;
    product_id: z.ZodOptional<z.ZodString>;
    name: z.ZodString;
    description: z.ZodOptional<z.ZodString>;
    quantity: z.ZodNumber;
    unit_price: z.ZodNumber;
    unit: z.ZodDefault<z.ZodString>;
    tax_rate: z.ZodDefault<z.ZodNumber>;
    subtotal: z.ZodNumber;
    tax_amount: z.ZodDefault<z.ZodNumber>;
    total: z.ZodNumber;
    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
    created_at: z.ZodDate;
}, "id" | "created_at">, "strip", z.ZodTypeAny, {
    total?: number;
    metadata?: Record<string, any>;
    name?: string;
    description?: string;
    unit?: string;
    quantity?: number;
    subtotal?: number;
    product_id?: string;
    unit_price?: number;
    tax_rate?: number;
    tax_amount?: number;
    invoice_id?: string;
}, {
    total?: number;
    metadata?: Record<string, any>;
    name?: string;
    description?: string;
    unit?: string;
    quantity?: number;
    subtotal?: number;
    product_id?: string;
    unit_price?: number;
    tax_rate?: number;
    tax_amount?: number;
    invoice_id?: string;
}>;
export declare const UpdateInvoiceItemSchema: z.ZodObject<{
    total: z.ZodOptional<z.ZodNumber>;
    metadata: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>>;
    name: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    unit: z.ZodOptional<z.ZodDefault<z.ZodString>>;
    quantity: z.ZodOptional<z.ZodNumber>;
    subtotal: z.ZodOptional<z.ZodNumber>;
    product_id: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    unit_price: z.ZodOptional<z.ZodNumber>;
    tax_rate: z.ZodOptional<z.ZodDefault<z.ZodNumber>>;
    tax_amount: z.ZodOptional<z.ZodDefault<z.ZodNumber>>;
    invoice_id: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    total?: number;
    metadata?: Record<string, any>;
    name?: string;
    description?: string;
    unit?: string;
    quantity?: number;
    subtotal?: number;
    product_id?: string;
    unit_price?: number;
    tax_rate?: number;
    tax_amount?: number;
    invoice_id?: string;
}, {
    total?: number;
    metadata?: Record<string, any>;
    name?: string;
    description?: string;
    unit?: string;
    quantity?: number;
    subtotal?: number;
    product_id?: string;
    unit_price?: number;
    tax_rate?: number;
    tax_amount?: number;
    invoice_id?: string;
}>;
export type Product = z.infer<typeof ProductSchema>;
export type CreateProduct = z.infer<typeof CreateProductSchema>;
export type UpdateProduct = z.infer<typeof UpdateProductSchema>;
export type Supplier = z.infer<typeof SupplierSchema>;
export type CreateSupplier = z.infer<typeof CreateSupplierSchema>;
export type UpdateSupplier = z.infer<typeof UpdateSupplierSchema>;
export type Invoice = z.infer<typeof InvoiceSchema>;
export type CreateInvoice = z.infer<typeof CreateInvoiceSchema>;
export type UpdateInvoice = z.infer<typeof UpdateInvoiceSchema>;
export type InvoiceItem = z.infer<typeof InvoiceItemSchema>;
export type CreateInvoiceItem = z.infer<typeof CreateInvoiceItemSchema>;
export type UpdateInvoiceItem = z.infer<typeof UpdateInvoiceItemSchema>;
//# sourceMappingURL=inventory.d.ts.map