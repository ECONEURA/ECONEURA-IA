import { z } from 'zod';
export declare const AnalyticsEventType: z.ZodEnum<["user_login", "user_logout", "user_action", "page_view", "button_click", "company_created", "company_updated", "contact_created", "contact_updated", "deal_created", "deal_updated", "deal_stage_changed", "agent_started", "agent_completed", "agent_failed", "agent_cancelled", "api_request", "error_occurred", "performance_metric", "cost_threshold_reached", "budget_warning", "invoice_sent", "payment_received", "dunning_sent", "integration_sync"]>;
export type AnalyticsEventTypeEnum = z.infer<typeof AnalyticsEventType>;
export declare const BaseAnalyticsEventSchema: z.ZodObject<{
    eventType: z.ZodEnum<["user_login", "user_logout", "user_action", "page_view", "button_click", "company_created", "company_updated", "contact_created", "contact_updated", "deal_created", "deal_updated", "deal_stage_changed", "agent_started", "agent_completed", "agent_failed", "agent_cancelled", "api_request", "error_occurred", "performance_metric", "cost_threshold_reached", "budget_warning", "invoice_sent", "payment_received", "dunning_sent", "integration_sync"]>;
    timestamp: z.ZodString;
    orgId: z.ZodString;
    userId: z.ZodOptional<z.ZodString>;
    sessionId: z.ZodOptional<z.ZodString>;
    correlationId: z.ZodOptional<z.ZodString>;
    source: z.ZodDefault<z.ZodString>;
    version: z.ZodDefault<z.ZodString>;
    environment: z.ZodDefault<z.ZodString>;
    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
}, "strip", z.ZodTypeAny, {
    orgId?: string;
    timestamp?: string;
    metadata?: Record<string, unknown>;
    userId?: string;
    version?: string;
    sessionId?: string;
    correlationId?: string;
    source?: string;
    environment?: string;
    eventType?: "api_request" | "user_login" | "user_logout" | "user_action" | "page_view" | "button_click" | "company_created" | "company_updated" | "contact_created" | "contact_updated" | "deal_created" | "deal_updated" | "deal_stage_changed" | "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled" | "error_occurred" | "performance_metric" | "cost_threshold_reached" | "budget_warning" | "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync";
}, {
    orgId?: string;
    timestamp?: string;
    metadata?: Record<string, unknown>;
    userId?: string;
    version?: string;
    sessionId?: string;
    correlationId?: string;
    source?: string;
    environment?: string;
    eventType?: "api_request" | "user_login" | "user_logout" | "user_action" | "page_view" | "button_click" | "company_created" | "company_updated" | "contact_created" | "contact_updated" | "deal_created" | "deal_updated" | "deal_stage_changed" | "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled" | "error_occurred" | "performance_metric" | "cost_threshold_reached" | "budget_warning" | "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync";
}>;
export declare const UserActionEventSchema: z.ZodObject<{
    timestamp: z.ZodString;
    orgId: z.ZodString;
    userId: z.ZodOptional<z.ZodString>;
    sessionId: z.ZodOptional<z.ZodString>;
    correlationId: z.ZodOptional<z.ZodString>;
    source: z.ZodDefault<z.ZodString>;
    version: z.ZodDefault<z.ZodString>;
    environment: z.ZodDefault<z.ZodString>;
    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
} & {
    eventType: z.ZodLiteral<"user_action">;
    action: z.ZodString;
    resource: z.ZodOptional<z.ZodString>;
    resourceId: z.ZodOptional<z.ZodString>;
    duration: z.ZodOptional<z.ZodNumber>;
    success: z.ZodDefault<z.ZodBoolean>;
    errorMessage: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    orgId?: string;
    timestamp?: string;
    success?: boolean;
    duration?: number;
    metadata?: Record<string, unknown>;
    userId?: string;
    version?: string;
    resource?: string;
    action?: string;
    resourceId?: string;
    sessionId?: string;
    correlationId?: string;
    errorMessage?: string;
    source?: string;
    environment?: string;
    eventType?: "user_action";
}, {
    orgId?: string;
    timestamp?: string;
    success?: boolean;
    duration?: number;
    metadata?: Record<string, unknown>;
    userId?: string;
    version?: string;
    resource?: string;
    action?: string;
    resourceId?: string;
    sessionId?: string;
    correlationId?: string;
    errorMessage?: string;
    source?: string;
    environment?: string;
    eventType?: "user_action";
}>;
export declare const AgentEventSchema: z.ZodObject<{
    timestamp: z.ZodString;
    orgId: z.ZodString;
    userId: z.ZodOptional<z.ZodString>;
    sessionId: z.ZodOptional<z.ZodString>;
    correlationId: z.ZodOptional<z.ZodString>;
    source: z.ZodDefault<z.ZodString>;
    version: z.ZodDefault<z.ZodString>;
    environment: z.ZodDefault<z.ZodString>;
    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
} & {
    eventType: z.ZodEnum<["agent_started", "agent_completed", "agent_failed", "agent_cancelled"]>;
    agentId: z.ZodString;
    agentCategory: z.ZodEnum<["ventas", "marketing", "operaciones", "finanzas", "soporte_qa"]>;
    executionId: z.ZodString;
    duration: z.ZodOptional<z.ZodNumber>;
    costEur: z.ZodOptional<z.ZodNumber>;
    inputTokens: z.ZodOptional<z.ZodNumber>;
    outputTokens: z.ZodOptional<z.ZodNumber>;
    provider: z.ZodOptional<z.ZodString>;
    errorMessage: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    orgId?: string;
    inputTokens?: number;
    outputTokens?: number;
    costEur?: number;
    timestamp?: string;
    duration?: number;
    metadata?: Record<string, unknown>;
    userId?: string;
    version?: string;
    sessionId?: string;
    correlationId?: string;
    errorMessage?: string;
    provider?: string;
    source?: string;
    environment?: string;
    eventType?: "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled";
    agentId?: string;
    agentCategory?: "ventas" | "marketing" | "operaciones" | "finanzas" | "soporte_qa";
    executionId?: string;
}, {
    orgId?: string;
    inputTokens?: number;
    outputTokens?: number;
    costEur?: number;
    timestamp?: string;
    duration?: number;
    metadata?: Record<string, unknown>;
    userId?: string;
    version?: string;
    sessionId?: string;
    correlationId?: string;
    errorMessage?: string;
    provider?: string;
    source?: string;
    environment?: string;
    eventType?: "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled";
    agentId?: string;
    agentCategory?: "ventas" | "marketing" | "operaciones" | "finanzas" | "soporte_qa";
    executionId?: string;
}>;
export declare const ApiRequestEventSchema: z.ZodObject<{
    timestamp: z.ZodString;
    orgId: z.ZodString;
    userId: z.ZodOptional<z.ZodString>;
    sessionId: z.ZodOptional<z.ZodString>;
    correlationId: z.ZodOptional<z.ZodString>;
    source: z.ZodDefault<z.ZodString>;
    version: z.ZodDefault<z.ZodString>;
    environment: z.ZodDefault<z.ZodString>;
    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
} & {
    eventType: z.ZodLiteral<"api_request">;
    method: z.ZodEnum<["GET", "POST", "PUT", "DELETE", "PATCH", "OPTIONS"]>;
    path: z.ZodString;
    statusCode: z.ZodNumber;
    duration: z.ZodNumber;
    requestSize: z.ZodOptional<z.ZodNumber>;
    responseSize: z.ZodOptional<z.ZodNumber>;
    userAgent: z.ZodOptional<z.ZodString>;
    ip: z.ZodOptional<z.ZodString>;
    referer: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    path?: string;
    orgId?: string;
    timestamp?: string;
    duration?: number;
    metadata?: Record<string, unknown>;
    userId?: string;
    version?: string;
    userAgent?: string;
    sessionId?: string;
    correlationId?: string;
    method?: "GET" | "POST" | "PUT" | "DELETE" | "OPTIONS" | "PATCH";
    statusCode?: number;
    source?: string;
    environment?: string;
    ip?: string;
    eventType?: "api_request";
    requestSize?: number;
    responseSize?: number;
    referer?: string;
}, {
    path?: string;
    orgId?: string;
    timestamp?: string;
    duration?: number;
    metadata?: Record<string, unknown>;
    userId?: string;
    version?: string;
    userAgent?: string;
    sessionId?: string;
    correlationId?: string;
    method?: "GET" | "POST" | "PUT" | "DELETE" | "OPTIONS" | "PATCH";
    statusCode?: number;
    source?: string;
    environment?: string;
    ip?: string;
    eventType?: "api_request";
    requestSize?: number;
    responseSize?: number;
    referer?: string;
}>;
export declare const PerformanceEventSchema: z.ZodObject<{
    timestamp: z.ZodString;
    orgId: z.ZodString;
    userId: z.ZodOptional<z.ZodString>;
    sessionId: z.ZodOptional<z.ZodString>;
    correlationId: z.ZodOptional<z.ZodString>;
    source: z.ZodDefault<z.ZodString>;
    version: z.ZodDefault<z.ZodString>;
    environment: z.ZodDefault<z.ZodString>;
    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
} & {
    eventType: z.ZodLiteral<"performance_metric">;
    metricName: z.ZodString;
    metricValue: z.ZodNumber;
    metricUnit: z.ZodOptional<z.ZodString>;
    tags: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    orgId?: string;
    timestamp?: string;
    metadata?: Record<string, unknown>;
    userId?: string;
    version?: string;
    sessionId?: string;
    correlationId?: string;
    tags?: Record<string, string>;
    metricName?: string;
    source?: string;
    environment?: string;
    eventType?: "performance_metric";
    metricValue?: number;
    metricUnit?: string;
}, {
    orgId?: string;
    timestamp?: string;
    metadata?: Record<string, unknown>;
    userId?: string;
    version?: string;
    sessionId?: string;
    correlationId?: string;
    tags?: Record<string, string>;
    metricName?: string;
    source?: string;
    environment?: string;
    eventType?: "performance_metric";
    metricValue?: number;
    metricUnit?: string;
}>;
export declare const CostEventSchema: z.ZodObject<{
    timestamp: z.ZodString;
    orgId: z.ZodString;
    userId: z.ZodOptional<z.ZodString>;
    sessionId: z.ZodOptional<z.ZodString>;
    correlationId: z.ZodOptional<z.ZodString>;
    source: z.ZodDefault<z.ZodString>;
    version: z.ZodDefault<z.ZodString>;
    environment: z.ZodDefault<z.ZodString>;
    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
} & {
    eventType: z.ZodEnum<["cost_threshold_reached", "budget_warning"]>;
    currentCost: z.ZodNumber;
    budgetLimit: z.ZodNumber;
    utilizationPct: z.ZodNumber;
    period: z.ZodEnum<["daily", "weekly", "monthly"]>;
    thresholdType: z.ZodEnum<["warning", "critical", "exceeded"]>;
}, "strip", z.ZodTypeAny, {
    orgId?: string;
    timestamp?: string;
    metadata?: Record<string, unknown>;
    userId?: string;
    version?: string;
    sessionId?: string;
    correlationId?: string;
    period?: "daily" | "weekly" | "monthly";
    source?: string;
    environment?: string;
    eventType?: "cost_threshold_reached" | "budget_warning";
    currentCost?: number;
    budgetLimit?: number;
    utilizationPct?: number;
    thresholdType?: "warning" | "critical" | "exceeded";
}, {
    orgId?: string;
    timestamp?: string;
    metadata?: Record<string, unknown>;
    userId?: string;
    version?: string;
    sessionId?: string;
    correlationId?: string;
    period?: "daily" | "weekly" | "monthly";
    source?: string;
    environment?: string;
    eventType?: "cost_threshold_reached" | "budget_warning";
    currentCost?: number;
    budgetLimit?: number;
    utilizationPct?: number;
    thresholdType?: "warning" | "critical" | "exceeded";
}>;
export declare const BusinessEventSchema: z.ZodObject<{
    timestamp: z.ZodString;
    orgId: z.ZodString;
    userId: z.ZodOptional<z.ZodString>;
    sessionId: z.ZodOptional<z.ZodString>;
    correlationId: z.ZodOptional<z.ZodString>;
    source: z.ZodDefault<z.ZodString>;
    version: z.ZodDefault<z.ZodString>;
    environment: z.ZodDefault<z.ZodString>;
    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
} & {
    eventType: z.ZodEnum<["invoice_sent", "payment_received", "dunning_sent", "integration_sync"]>;
    entityType: z.ZodOptional<z.ZodString>;
    entityId: z.ZodOptional<z.ZodString>;
    amount: z.ZodOptional<z.ZodNumber>;
    currency: z.ZodOptional<z.ZodString>;
    integration: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    orgId?: string;
    timestamp?: string;
    metadata?: Record<string, unknown>;
    userId?: string;
    version?: string;
    currency?: string;
    sessionId?: string;
    correlationId?: string;
    amount?: number;
    entityType?: string;
    entityId?: string;
    source?: string;
    environment?: string;
    eventType?: "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync";
    integration?: string;
}, {
    orgId?: string;
    timestamp?: string;
    metadata?: Record<string, unknown>;
    userId?: string;
    version?: string;
    currency?: string;
    sessionId?: string;
    correlationId?: string;
    amount?: number;
    entityType?: string;
    entityId?: string;
    source?: string;
    environment?: string;
    eventType?: "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync";
    integration?: string;
}>;
export declare const AnalyticsEventSchema: z.ZodDiscriminatedUnion<"eventType", [z.ZodObject<{
    timestamp: z.ZodString;
    orgId: z.ZodString;
    userId: z.ZodOptional<z.ZodString>;
    sessionId: z.ZodOptional<z.ZodString>;
    correlationId: z.ZodOptional<z.ZodString>;
    source: z.ZodDefault<z.ZodString>;
    version: z.ZodDefault<z.ZodString>;
    environment: z.ZodDefault<z.ZodString>;
    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
} & {
    eventType: z.ZodLiteral<"user_action">;
    action: z.ZodString;
    resource: z.ZodOptional<z.ZodString>;
    resourceId: z.ZodOptional<z.ZodString>;
    duration: z.ZodOptional<z.ZodNumber>;
    success: z.ZodDefault<z.ZodBoolean>;
    errorMessage: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    orgId?: string;
    timestamp?: string;
    success?: boolean;
    duration?: number;
    metadata?: Record<string, unknown>;
    userId?: string;
    version?: string;
    resource?: string;
    action?: string;
    resourceId?: string;
    sessionId?: string;
    correlationId?: string;
    errorMessage?: string;
    source?: string;
    environment?: string;
    eventType?: "user_action";
}, {
    orgId?: string;
    timestamp?: string;
    success?: boolean;
    duration?: number;
    metadata?: Record<string, unknown>;
    userId?: string;
    version?: string;
    resource?: string;
    action?: string;
    resourceId?: string;
    sessionId?: string;
    correlationId?: string;
    errorMessage?: string;
    source?: string;
    environment?: string;
    eventType?: "user_action";
}>, z.ZodObject<{
    timestamp: z.ZodString;
    orgId: z.ZodString;
    userId: z.ZodOptional<z.ZodString>;
    sessionId: z.ZodOptional<z.ZodString>;
    correlationId: z.ZodOptional<z.ZodString>;
    source: z.ZodDefault<z.ZodString>;
    version: z.ZodDefault<z.ZodString>;
    environment: z.ZodDefault<z.ZodString>;
    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
} & {
    eventType: z.ZodEnum<["agent_started", "agent_completed", "agent_failed", "agent_cancelled"]>;
    agentId: z.ZodString;
    agentCategory: z.ZodEnum<["ventas", "marketing", "operaciones", "finanzas", "soporte_qa"]>;
    executionId: z.ZodString;
    duration: z.ZodOptional<z.ZodNumber>;
    costEur: z.ZodOptional<z.ZodNumber>;
    inputTokens: z.ZodOptional<z.ZodNumber>;
    outputTokens: z.ZodOptional<z.ZodNumber>;
    provider: z.ZodOptional<z.ZodString>;
    errorMessage: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    orgId?: string;
    inputTokens?: number;
    outputTokens?: number;
    costEur?: number;
    timestamp?: string;
    duration?: number;
    metadata?: Record<string, unknown>;
    userId?: string;
    version?: string;
    sessionId?: string;
    correlationId?: string;
    errorMessage?: string;
    provider?: string;
    source?: string;
    environment?: string;
    eventType?: "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled";
    agentId?: string;
    agentCategory?: "ventas" | "marketing" | "operaciones" | "finanzas" | "soporte_qa";
    executionId?: string;
}, {
    orgId?: string;
    inputTokens?: number;
    outputTokens?: number;
    costEur?: number;
    timestamp?: string;
    duration?: number;
    metadata?: Record<string, unknown>;
    userId?: string;
    version?: string;
    sessionId?: string;
    correlationId?: string;
    errorMessage?: string;
    provider?: string;
    source?: string;
    environment?: string;
    eventType?: "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled";
    agentId?: string;
    agentCategory?: "ventas" | "marketing" | "operaciones" | "finanzas" | "soporte_qa";
    executionId?: string;
}>, z.ZodObject<{
    timestamp: z.ZodString;
    orgId: z.ZodString;
    userId: z.ZodOptional<z.ZodString>;
    sessionId: z.ZodOptional<z.ZodString>;
    correlationId: z.ZodOptional<z.ZodString>;
    source: z.ZodDefault<z.ZodString>;
    version: z.ZodDefault<z.ZodString>;
    environment: z.ZodDefault<z.ZodString>;
    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
} & {
    eventType: z.ZodLiteral<"api_request">;
    method: z.ZodEnum<["GET", "POST", "PUT", "DELETE", "PATCH", "OPTIONS"]>;
    path: z.ZodString;
    statusCode: z.ZodNumber;
    duration: z.ZodNumber;
    requestSize: z.ZodOptional<z.ZodNumber>;
    responseSize: z.ZodOptional<z.ZodNumber>;
    userAgent: z.ZodOptional<z.ZodString>;
    ip: z.ZodOptional<z.ZodString>;
    referer: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    path?: string;
    orgId?: string;
    timestamp?: string;
    duration?: number;
    metadata?: Record<string, unknown>;
    userId?: string;
    version?: string;
    userAgent?: string;
    sessionId?: string;
    correlationId?: string;
    method?: "GET" | "POST" | "PUT" | "DELETE" | "OPTIONS" | "PATCH";
    statusCode?: number;
    source?: string;
    environment?: string;
    ip?: string;
    eventType?: "api_request";
    requestSize?: number;
    responseSize?: number;
    referer?: string;
}, {
    path?: string;
    orgId?: string;
    timestamp?: string;
    duration?: number;
    metadata?: Record<string, unknown>;
    userId?: string;
    version?: string;
    userAgent?: string;
    sessionId?: string;
    correlationId?: string;
    method?: "GET" | "POST" | "PUT" | "DELETE" | "OPTIONS" | "PATCH";
    statusCode?: number;
    source?: string;
    environment?: string;
    ip?: string;
    eventType?: "api_request";
    requestSize?: number;
    responseSize?: number;
    referer?: string;
}>, z.ZodObject<{
    timestamp: z.ZodString;
    orgId: z.ZodString;
    userId: z.ZodOptional<z.ZodString>;
    sessionId: z.ZodOptional<z.ZodString>;
    correlationId: z.ZodOptional<z.ZodString>;
    source: z.ZodDefault<z.ZodString>;
    version: z.ZodDefault<z.ZodString>;
    environment: z.ZodDefault<z.ZodString>;
    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
} & {
    eventType: z.ZodLiteral<"performance_metric">;
    metricName: z.ZodString;
    metricValue: z.ZodNumber;
    metricUnit: z.ZodOptional<z.ZodString>;
    tags: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    orgId?: string;
    timestamp?: string;
    metadata?: Record<string, unknown>;
    userId?: string;
    version?: string;
    sessionId?: string;
    correlationId?: string;
    tags?: Record<string, string>;
    metricName?: string;
    source?: string;
    environment?: string;
    eventType?: "performance_metric";
    metricValue?: number;
    metricUnit?: string;
}, {
    orgId?: string;
    timestamp?: string;
    metadata?: Record<string, unknown>;
    userId?: string;
    version?: string;
    sessionId?: string;
    correlationId?: string;
    tags?: Record<string, string>;
    metricName?: string;
    source?: string;
    environment?: string;
    eventType?: "performance_metric";
    metricValue?: number;
    metricUnit?: string;
}>, z.ZodObject<{
    timestamp: z.ZodString;
    orgId: z.ZodString;
    userId: z.ZodOptional<z.ZodString>;
    sessionId: z.ZodOptional<z.ZodString>;
    correlationId: z.ZodOptional<z.ZodString>;
    source: z.ZodDefault<z.ZodString>;
    version: z.ZodDefault<z.ZodString>;
    environment: z.ZodDefault<z.ZodString>;
    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
} & {
    eventType: z.ZodEnum<["cost_threshold_reached", "budget_warning"]>;
    currentCost: z.ZodNumber;
    budgetLimit: z.ZodNumber;
    utilizationPct: z.ZodNumber;
    period: z.ZodEnum<["daily", "weekly", "monthly"]>;
    thresholdType: z.ZodEnum<["warning", "critical", "exceeded"]>;
}, "strip", z.ZodTypeAny, {
    orgId?: string;
    timestamp?: string;
    metadata?: Record<string, unknown>;
    userId?: string;
    version?: string;
    sessionId?: string;
    correlationId?: string;
    period?: "daily" | "weekly" | "monthly";
    source?: string;
    environment?: string;
    eventType?: "cost_threshold_reached" | "budget_warning";
    currentCost?: number;
    budgetLimit?: number;
    utilizationPct?: number;
    thresholdType?: "warning" | "critical" | "exceeded";
}, {
    orgId?: string;
    timestamp?: string;
    metadata?: Record<string, unknown>;
    userId?: string;
    version?: string;
    sessionId?: string;
    correlationId?: string;
    period?: "daily" | "weekly" | "monthly";
    source?: string;
    environment?: string;
    eventType?: "cost_threshold_reached" | "budget_warning";
    currentCost?: number;
    budgetLimit?: number;
    utilizationPct?: number;
    thresholdType?: "warning" | "critical" | "exceeded";
}>, z.ZodObject<{
    timestamp: z.ZodString;
    orgId: z.ZodString;
    userId: z.ZodOptional<z.ZodString>;
    sessionId: z.ZodOptional<z.ZodString>;
    correlationId: z.ZodOptional<z.ZodString>;
    source: z.ZodDefault<z.ZodString>;
    version: z.ZodDefault<z.ZodString>;
    environment: z.ZodDefault<z.ZodString>;
    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
} & {
    eventType: z.ZodEnum<["invoice_sent", "payment_received", "dunning_sent", "integration_sync"]>;
    entityType: z.ZodOptional<z.ZodString>;
    entityId: z.ZodOptional<z.ZodString>;
    amount: z.ZodOptional<z.ZodNumber>;
    currency: z.ZodOptional<z.ZodString>;
    integration: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    orgId?: string;
    timestamp?: string;
    metadata?: Record<string, unknown>;
    userId?: string;
    version?: string;
    currency?: string;
    sessionId?: string;
    correlationId?: string;
    amount?: number;
    entityType?: string;
    entityId?: string;
    source?: string;
    environment?: string;
    eventType?: "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync";
    integration?: string;
}, {
    orgId?: string;
    timestamp?: string;
    metadata?: Record<string, unknown>;
    userId?: string;
    version?: string;
    currency?: string;
    sessionId?: string;
    correlationId?: string;
    amount?: number;
    entityType?: string;
    entityId?: string;
    source?: string;
    environment?: string;
    eventType?: "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync";
    integration?: string;
}>, z.ZodObject<{
    eventType: z.ZodEnum<["user_login", "user_logout", "user_action", "page_view", "button_click", "company_created", "company_updated", "contact_created", "contact_updated", "deal_created", "deal_updated", "deal_stage_changed", "agent_started", "agent_completed", "agent_failed", "agent_cancelled", "api_request", "error_occurred", "performance_metric", "cost_threshold_reached", "budget_warning", "invoice_sent", "payment_received", "dunning_sent", "integration_sync"]>;
    timestamp: z.ZodString;
    orgId: z.ZodString;
    userId: z.ZodOptional<z.ZodString>;
    sessionId: z.ZodOptional<z.ZodString>;
    correlationId: z.ZodOptional<z.ZodString>;
    source: z.ZodDefault<z.ZodString>;
    version: z.ZodDefault<z.ZodString>;
    environment: z.ZodDefault<z.ZodString>;
    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
}, "strip", z.ZodTypeAny, {
    orgId?: string;
    timestamp?: string;
    metadata?: Record<string, unknown>;
    userId?: string;
    version?: string;
    sessionId?: string;
    correlationId?: string;
    source?: string;
    environment?: string;
    eventType?: "api_request" | "user_login" | "user_logout" | "user_action" | "page_view" | "button_click" | "company_created" | "company_updated" | "contact_created" | "contact_updated" | "deal_created" | "deal_updated" | "deal_stage_changed" | "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled" | "error_occurred" | "performance_metric" | "cost_threshold_reached" | "budget_warning" | "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync";
}, {
    orgId?: string;
    timestamp?: string;
    metadata?: Record<string, unknown>;
    userId?: string;
    version?: string;
    sessionId?: string;
    correlationId?: string;
    source?: string;
    environment?: string;
    eventType?: "api_request" | "user_login" | "user_logout" | "user_action" | "page_view" | "button_click" | "company_created" | "company_updated" | "contact_created" | "contact_updated" | "deal_created" | "deal_updated" | "deal_stage_changed" | "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled" | "error_occurred" | "performance_metric" | "cost_threshold_reached" | "budget_warning" | "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync";
}>]>;
export type AnalyticsEvent = z.infer<typeof AnalyticsEventSchema>;
export declare const AnalyticsEventBatchSchema: z.ZodObject<{
    events: z.ZodArray<z.ZodDiscriminatedUnion<"eventType", [z.ZodObject<{
        timestamp: z.ZodString;
        orgId: z.ZodString;
        userId: z.ZodOptional<z.ZodString>;
        sessionId: z.ZodOptional<z.ZodString>;
        correlationId: z.ZodOptional<z.ZodString>;
        source: z.ZodDefault<z.ZodString>;
        version: z.ZodDefault<z.ZodString>;
        environment: z.ZodDefault<z.ZodString>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    } & {
        eventType: z.ZodLiteral<"user_action">;
        action: z.ZodString;
        resource: z.ZodOptional<z.ZodString>;
        resourceId: z.ZodOptional<z.ZodString>;
        duration: z.ZodOptional<z.ZodNumber>;
        success: z.ZodDefault<z.ZodBoolean>;
        errorMessage: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        orgId?: string;
        timestamp?: string;
        success?: boolean;
        duration?: number;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        resource?: string;
        action?: string;
        resourceId?: string;
        sessionId?: string;
        correlationId?: string;
        errorMessage?: string;
        source?: string;
        environment?: string;
        eventType?: "user_action";
    }, {
        orgId?: string;
        timestamp?: string;
        success?: boolean;
        duration?: number;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        resource?: string;
        action?: string;
        resourceId?: string;
        sessionId?: string;
        correlationId?: string;
        errorMessage?: string;
        source?: string;
        environment?: string;
        eventType?: "user_action";
    }>, z.ZodObject<{
        timestamp: z.ZodString;
        orgId: z.ZodString;
        userId: z.ZodOptional<z.ZodString>;
        sessionId: z.ZodOptional<z.ZodString>;
        correlationId: z.ZodOptional<z.ZodString>;
        source: z.ZodDefault<z.ZodString>;
        version: z.ZodDefault<z.ZodString>;
        environment: z.ZodDefault<z.ZodString>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    } & {
        eventType: z.ZodEnum<["agent_started", "agent_completed", "agent_failed", "agent_cancelled"]>;
        agentId: z.ZodString;
        agentCategory: z.ZodEnum<["ventas", "marketing", "operaciones", "finanzas", "soporte_qa"]>;
        executionId: z.ZodString;
        duration: z.ZodOptional<z.ZodNumber>;
        costEur: z.ZodOptional<z.ZodNumber>;
        inputTokens: z.ZodOptional<z.ZodNumber>;
        outputTokens: z.ZodOptional<z.ZodNumber>;
        provider: z.ZodOptional<z.ZodString>;
        errorMessage: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        orgId?: string;
        inputTokens?: number;
        outputTokens?: number;
        costEur?: number;
        timestamp?: string;
        duration?: number;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        sessionId?: string;
        correlationId?: string;
        errorMessage?: string;
        provider?: string;
        source?: string;
        environment?: string;
        eventType?: "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled";
        agentId?: string;
        agentCategory?: "ventas" | "marketing" | "operaciones" | "finanzas" | "soporte_qa";
        executionId?: string;
    }, {
        orgId?: string;
        inputTokens?: number;
        outputTokens?: number;
        costEur?: number;
        timestamp?: string;
        duration?: number;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        sessionId?: string;
        correlationId?: string;
        errorMessage?: string;
        provider?: string;
        source?: string;
        environment?: string;
        eventType?: "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled";
        agentId?: string;
        agentCategory?: "ventas" | "marketing" | "operaciones" | "finanzas" | "soporte_qa";
        executionId?: string;
    }>, z.ZodObject<{
        timestamp: z.ZodString;
        orgId: z.ZodString;
        userId: z.ZodOptional<z.ZodString>;
        sessionId: z.ZodOptional<z.ZodString>;
        correlationId: z.ZodOptional<z.ZodString>;
        source: z.ZodDefault<z.ZodString>;
        version: z.ZodDefault<z.ZodString>;
        environment: z.ZodDefault<z.ZodString>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    } & {
        eventType: z.ZodLiteral<"api_request">;
        method: z.ZodEnum<["GET", "POST", "PUT", "DELETE", "PATCH", "OPTIONS"]>;
        path: z.ZodString;
        statusCode: z.ZodNumber;
        duration: z.ZodNumber;
        requestSize: z.ZodOptional<z.ZodNumber>;
        responseSize: z.ZodOptional<z.ZodNumber>;
        userAgent: z.ZodOptional<z.ZodString>;
        ip: z.ZodOptional<z.ZodString>;
        referer: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        path?: string;
        orgId?: string;
        timestamp?: string;
        duration?: number;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        userAgent?: string;
        sessionId?: string;
        correlationId?: string;
        method?: "GET" | "POST" | "PUT" | "DELETE" | "OPTIONS" | "PATCH";
        statusCode?: number;
        source?: string;
        environment?: string;
        ip?: string;
        eventType?: "api_request";
        requestSize?: number;
        responseSize?: number;
        referer?: string;
    }, {
        path?: string;
        orgId?: string;
        timestamp?: string;
        duration?: number;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        userAgent?: string;
        sessionId?: string;
        correlationId?: string;
        method?: "GET" | "POST" | "PUT" | "DELETE" | "OPTIONS" | "PATCH";
        statusCode?: number;
        source?: string;
        environment?: string;
        ip?: string;
        eventType?: "api_request";
        requestSize?: number;
        responseSize?: number;
        referer?: string;
    }>, z.ZodObject<{
        timestamp: z.ZodString;
        orgId: z.ZodString;
        userId: z.ZodOptional<z.ZodString>;
        sessionId: z.ZodOptional<z.ZodString>;
        correlationId: z.ZodOptional<z.ZodString>;
        source: z.ZodDefault<z.ZodString>;
        version: z.ZodDefault<z.ZodString>;
        environment: z.ZodDefault<z.ZodString>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    } & {
        eventType: z.ZodLiteral<"performance_metric">;
        metricName: z.ZodString;
        metricValue: z.ZodNumber;
        metricUnit: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        orgId?: string;
        timestamp?: string;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        sessionId?: string;
        correlationId?: string;
        tags?: Record<string, string>;
        metricName?: string;
        source?: string;
        environment?: string;
        eventType?: "performance_metric";
        metricValue?: number;
        metricUnit?: string;
    }, {
        orgId?: string;
        timestamp?: string;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        sessionId?: string;
        correlationId?: string;
        tags?: Record<string, string>;
        metricName?: string;
        source?: string;
        environment?: string;
        eventType?: "performance_metric";
        metricValue?: number;
        metricUnit?: string;
    }>, z.ZodObject<{
        timestamp: z.ZodString;
        orgId: z.ZodString;
        userId: z.ZodOptional<z.ZodString>;
        sessionId: z.ZodOptional<z.ZodString>;
        correlationId: z.ZodOptional<z.ZodString>;
        source: z.ZodDefault<z.ZodString>;
        version: z.ZodDefault<z.ZodString>;
        environment: z.ZodDefault<z.ZodString>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    } & {
        eventType: z.ZodEnum<["cost_threshold_reached", "budget_warning"]>;
        currentCost: z.ZodNumber;
        budgetLimit: z.ZodNumber;
        utilizationPct: z.ZodNumber;
        period: z.ZodEnum<["daily", "weekly", "monthly"]>;
        thresholdType: z.ZodEnum<["warning", "critical", "exceeded"]>;
    }, "strip", z.ZodTypeAny, {
        orgId?: string;
        timestamp?: string;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        sessionId?: string;
        correlationId?: string;
        period?: "daily" | "weekly" | "monthly";
        source?: string;
        environment?: string;
        eventType?: "cost_threshold_reached" | "budget_warning";
        currentCost?: number;
        budgetLimit?: number;
        utilizationPct?: number;
        thresholdType?: "warning" | "critical" | "exceeded";
    }, {
        orgId?: string;
        timestamp?: string;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        sessionId?: string;
        correlationId?: string;
        period?: "daily" | "weekly" | "monthly";
        source?: string;
        environment?: string;
        eventType?: "cost_threshold_reached" | "budget_warning";
        currentCost?: number;
        budgetLimit?: number;
        utilizationPct?: number;
        thresholdType?: "warning" | "critical" | "exceeded";
    }>, z.ZodObject<{
        timestamp: z.ZodString;
        orgId: z.ZodString;
        userId: z.ZodOptional<z.ZodString>;
        sessionId: z.ZodOptional<z.ZodString>;
        correlationId: z.ZodOptional<z.ZodString>;
        source: z.ZodDefault<z.ZodString>;
        version: z.ZodDefault<z.ZodString>;
        environment: z.ZodDefault<z.ZodString>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    } & {
        eventType: z.ZodEnum<["invoice_sent", "payment_received", "dunning_sent", "integration_sync"]>;
        entityType: z.ZodOptional<z.ZodString>;
        entityId: z.ZodOptional<z.ZodString>;
        amount: z.ZodOptional<z.ZodNumber>;
        currency: z.ZodOptional<z.ZodString>;
        integration: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        orgId?: string;
        timestamp?: string;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        currency?: string;
        sessionId?: string;
        correlationId?: string;
        amount?: number;
        entityType?: string;
        entityId?: string;
        source?: string;
        environment?: string;
        eventType?: "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync";
        integration?: string;
    }, {
        orgId?: string;
        timestamp?: string;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        currency?: string;
        sessionId?: string;
        correlationId?: string;
        amount?: number;
        entityType?: string;
        entityId?: string;
        source?: string;
        environment?: string;
        eventType?: "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync";
        integration?: string;
    }>, z.ZodObject<{
        eventType: z.ZodEnum<["user_login", "user_logout", "user_action", "page_view", "button_click", "company_created", "company_updated", "contact_created", "contact_updated", "deal_created", "deal_updated", "deal_stage_changed", "agent_started", "agent_completed", "agent_failed", "agent_cancelled", "api_request", "error_occurred", "performance_metric", "cost_threshold_reached", "budget_warning", "invoice_sent", "payment_received", "dunning_sent", "integration_sync"]>;
        timestamp: z.ZodString;
        orgId: z.ZodString;
        userId: z.ZodOptional<z.ZodString>;
        sessionId: z.ZodOptional<z.ZodString>;
        correlationId: z.ZodOptional<z.ZodString>;
        source: z.ZodDefault<z.ZodString>;
        version: z.ZodDefault<z.ZodString>;
        environment: z.ZodDefault<z.ZodString>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strip", z.ZodTypeAny, {
        orgId?: string;
        timestamp?: string;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        sessionId?: string;
        correlationId?: string;
        source?: string;
        environment?: string;
        eventType?: "api_request" | "user_login" | "user_logout" | "user_action" | "page_view" | "button_click" | "company_created" | "company_updated" | "contact_created" | "contact_updated" | "deal_created" | "deal_updated" | "deal_stage_changed" | "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled" | "error_occurred" | "performance_metric" | "cost_threshold_reached" | "budget_warning" | "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync";
    }, {
        orgId?: string;
        timestamp?: string;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        sessionId?: string;
        correlationId?: string;
        source?: string;
        environment?: string;
        eventType?: "api_request" | "user_login" | "user_logout" | "user_action" | "page_view" | "button_click" | "company_created" | "company_updated" | "contact_created" | "contact_updated" | "deal_created" | "deal_updated" | "deal_stage_changed" | "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled" | "error_occurred" | "performance_metric" | "cost_threshold_reached" | "budget_warning" | "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync";
    }>]>, "many">;
    batchId: z.ZodOptional<z.ZodString>;
    timestamp: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    timestamp?: string;
    events?: ({
        orgId?: string;
        timestamp?: string;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        sessionId?: string;
        correlationId?: string;
        source?: string;
        environment?: string;
        eventType?: "api_request" | "user_login" | "user_logout" | "user_action" | "page_view" | "button_click" | "company_created" | "company_updated" | "contact_created" | "contact_updated" | "deal_created" | "deal_updated" | "deal_stage_changed" | "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled" | "error_occurred" | "performance_metric" | "cost_threshold_reached" | "budget_warning" | "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync";
    } | {
        orgId?: string;
        timestamp?: string;
        success?: boolean;
        duration?: number;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        resource?: string;
        action?: string;
        resourceId?: string;
        sessionId?: string;
        correlationId?: string;
        errorMessage?: string;
        source?: string;
        environment?: string;
        eventType?: "user_action";
    } | {
        orgId?: string;
        inputTokens?: number;
        outputTokens?: number;
        costEur?: number;
        timestamp?: string;
        duration?: number;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        sessionId?: string;
        correlationId?: string;
        errorMessage?: string;
        provider?: string;
        source?: string;
        environment?: string;
        eventType?: "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled";
        agentId?: string;
        agentCategory?: "ventas" | "marketing" | "operaciones" | "finanzas" | "soporte_qa";
        executionId?: string;
    } | {
        path?: string;
        orgId?: string;
        timestamp?: string;
        duration?: number;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        userAgent?: string;
        sessionId?: string;
        correlationId?: string;
        method?: "GET" | "POST" | "PUT" | "DELETE" | "OPTIONS" | "PATCH";
        statusCode?: number;
        source?: string;
        environment?: string;
        ip?: string;
        eventType?: "api_request";
        requestSize?: number;
        responseSize?: number;
        referer?: string;
    } | {
        orgId?: string;
        timestamp?: string;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        sessionId?: string;
        correlationId?: string;
        tags?: Record<string, string>;
        metricName?: string;
        source?: string;
        environment?: string;
        eventType?: "performance_metric";
        metricValue?: number;
        metricUnit?: string;
    } | {
        orgId?: string;
        timestamp?: string;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        sessionId?: string;
        correlationId?: string;
        period?: "daily" | "weekly" | "monthly";
        source?: string;
        environment?: string;
        eventType?: "cost_threshold_reached" | "budget_warning";
        currentCost?: number;
        budgetLimit?: number;
        utilizationPct?: number;
        thresholdType?: "warning" | "critical" | "exceeded";
    } | {
        orgId?: string;
        timestamp?: string;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        currency?: string;
        sessionId?: string;
        correlationId?: string;
        amount?: number;
        entityType?: string;
        entityId?: string;
        source?: string;
        environment?: string;
        eventType?: "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync";
        integration?: string;
    })[];
    batchId?: string;
}, {
    timestamp?: string;
    events?: ({
        orgId?: string;
        timestamp?: string;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        sessionId?: string;
        correlationId?: string;
        source?: string;
        environment?: string;
        eventType?: "api_request" | "user_login" | "user_logout" | "user_action" | "page_view" | "button_click" | "company_created" | "company_updated" | "contact_created" | "contact_updated" | "deal_created" | "deal_updated" | "deal_stage_changed" | "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled" | "error_occurred" | "performance_metric" | "cost_threshold_reached" | "budget_warning" | "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync";
    } | {
        orgId?: string;
        timestamp?: string;
        success?: boolean;
        duration?: number;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        resource?: string;
        action?: string;
        resourceId?: string;
        sessionId?: string;
        correlationId?: string;
        errorMessage?: string;
        source?: string;
        environment?: string;
        eventType?: "user_action";
    } | {
        orgId?: string;
        inputTokens?: number;
        outputTokens?: number;
        costEur?: number;
        timestamp?: string;
        duration?: number;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        sessionId?: string;
        correlationId?: string;
        errorMessage?: string;
        provider?: string;
        source?: string;
        environment?: string;
        eventType?: "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled";
        agentId?: string;
        agentCategory?: "ventas" | "marketing" | "operaciones" | "finanzas" | "soporte_qa";
        executionId?: string;
    } | {
        path?: string;
        orgId?: string;
        timestamp?: string;
        duration?: number;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        userAgent?: string;
        sessionId?: string;
        correlationId?: string;
        method?: "GET" | "POST" | "PUT" | "DELETE" | "OPTIONS" | "PATCH";
        statusCode?: number;
        source?: string;
        environment?: string;
        ip?: string;
        eventType?: "api_request";
        requestSize?: number;
        responseSize?: number;
        referer?: string;
    } | {
        orgId?: string;
        timestamp?: string;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        sessionId?: string;
        correlationId?: string;
        tags?: Record<string, string>;
        metricName?: string;
        source?: string;
        environment?: string;
        eventType?: "performance_metric";
        metricValue?: number;
        metricUnit?: string;
    } | {
        orgId?: string;
        timestamp?: string;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        sessionId?: string;
        correlationId?: string;
        period?: "daily" | "weekly" | "monthly";
        source?: string;
        environment?: string;
        eventType?: "cost_threshold_reached" | "budget_warning";
        currentCost?: number;
        budgetLimit?: number;
        utilizationPct?: number;
        thresholdType?: "warning" | "critical" | "exceeded";
    } | {
        orgId?: string;
        timestamp?: string;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        currency?: string;
        sessionId?: string;
        correlationId?: string;
        amount?: number;
        entityType?: string;
        entityId?: string;
        source?: string;
        environment?: string;
        eventType?: "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync";
        integration?: string;
    })[];
    batchId?: string;
}>;
export type AnalyticsEventBatch = z.infer<typeof AnalyticsEventBatchSchema>;
export declare const AnalyticsQuerySchema: z.ZodObject<{
    eventTypes: z.ZodOptional<z.ZodArray<z.ZodEnum<["user_login", "user_logout", "user_action", "page_view", "button_click", "company_created", "company_updated", "contact_created", "contact_updated", "deal_created", "deal_updated", "deal_stage_changed", "agent_started", "agent_completed", "agent_failed", "agent_cancelled", "api_request", "error_occurred", "performance_metric", "cost_threshold_reached", "budget_warning", "invoice_sent", "payment_received", "dunning_sent", "integration_sync"]>, "many">>;
    startDate: z.ZodOptional<z.ZodString>;
    endDate: z.ZodOptional<z.ZodString>;
    orgId: z.ZodOptional<z.ZodString>;
    userId: z.ZodOptional<z.ZodString>;
    source: z.ZodOptional<z.ZodString>;
    limit: z.ZodDefault<z.ZodNumber>;
    offset: z.ZodDefault<z.ZodNumber>;
    groupBy: z.ZodOptional<z.ZodEnum<["hour", "day", "week", "month"]>>;
    aggregation: z.ZodOptional<z.ZodEnum<["count", "sum", "avg", "min", "max"]>>;
    metricField: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    orgId?: string;
    limit?: number;
    userId?: string;
    startDate?: string;
    endDate?: string;
    source?: string;
    eventTypes?: ("api_request" | "user_login" | "user_logout" | "user_action" | "page_view" | "button_click" | "company_created" | "company_updated" | "contact_created" | "contact_updated" | "deal_created" | "deal_updated" | "deal_stage_changed" | "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled" | "error_occurred" | "performance_metric" | "cost_threshold_reached" | "budget_warning" | "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync")[];
    offset?: number;
    groupBy?: "month" | "hour" | "day" | "week";
    aggregation?: "count" | "sum" | "avg" | "min" | "max";
    metricField?: string;
}, {
    orgId?: string;
    limit?: number;
    userId?: string;
    startDate?: string;
    endDate?: string;
    source?: string;
    eventTypes?: ("api_request" | "user_login" | "user_logout" | "user_action" | "page_view" | "button_click" | "company_created" | "company_updated" | "contact_created" | "contact_updated" | "deal_created" | "deal_updated" | "deal_stage_changed" | "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled" | "error_occurred" | "performance_metric" | "cost_threshold_reached" | "budget_warning" | "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync")[];
    offset?: number;
    groupBy?: "month" | "hour" | "day" | "week";
    aggregation?: "count" | "sum" | "avg" | "min" | "max";
    metricField?: string;
}>;
export type AnalyticsQuery = z.infer<typeof AnalyticsQuerySchema>;
export declare const AnalyticsMetricSchema: z.ZodObject<{
    name: z.ZodString;
    value: z.ZodNumber;
    unit: z.ZodOptional<z.ZodString>;
    timestamp: z.ZodString;
    tags: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    value?: number;
    timestamp?: string;
    name?: string;
    tags?: Record<string, string>;
    unit?: string;
}, {
    value?: number;
    timestamp?: string;
    name?: string;
    tags?: Record<string, string>;
    unit?: string;
}>;
export declare const AnalyticsAggregationSchema: z.ZodObject<{
    period: z.ZodString;
    count: z.ZodNumber;
    sum: z.ZodOptional<z.ZodNumber>;
    avg: z.ZodOptional<z.ZodNumber>;
    min: z.ZodOptional<z.ZodNumber>;
    max: z.ZodOptional<z.ZodNumber>;
    events: z.ZodOptional<z.ZodArray<z.ZodDiscriminatedUnion<"eventType", [z.ZodObject<{
        timestamp: z.ZodString;
        orgId: z.ZodString;
        userId: z.ZodOptional<z.ZodString>;
        sessionId: z.ZodOptional<z.ZodString>;
        correlationId: z.ZodOptional<z.ZodString>;
        source: z.ZodDefault<z.ZodString>;
        version: z.ZodDefault<z.ZodString>;
        environment: z.ZodDefault<z.ZodString>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    } & {
        eventType: z.ZodLiteral<"user_action">;
        action: z.ZodString;
        resource: z.ZodOptional<z.ZodString>;
        resourceId: z.ZodOptional<z.ZodString>;
        duration: z.ZodOptional<z.ZodNumber>;
        success: z.ZodDefault<z.ZodBoolean>;
        errorMessage: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        orgId?: string;
        timestamp?: string;
        success?: boolean;
        duration?: number;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        resource?: string;
        action?: string;
        resourceId?: string;
        sessionId?: string;
        correlationId?: string;
        errorMessage?: string;
        source?: string;
        environment?: string;
        eventType?: "user_action";
    }, {
        orgId?: string;
        timestamp?: string;
        success?: boolean;
        duration?: number;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        resource?: string;
        action?: string;
        resourceId?: string;
        sessionId?: string;
        correlationId?: string;
        errorMessage?: string;
        source?: string;
        environment?: string;
        eventType?: "user_action";
    }>, z.ZodObject<{
        timestamp: z.ZodString;
        orgId: z.ZodString;
        userId: z.ZodOptional<z.ZodString>;
        sessionId: z.ZodOptional<z.ZodString>;
        correlationId: z.ZodOptional<z.ZodString>;
        source: z.ZodDefault<z.ZodString>;
        version: z.ZodDefault<z.ZodString>;
        environment: z.ZodDefault<z.ZodString>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    } & {
        eventType: z.ZodEnum<["agent_started", "agent_completed", "agent_failed", "agent_cancelled"]>;
        agentId: z.ZodString;
        agentCategory: z.ZodEnum<["ventas", "marketing", "operaciones", "finanzas", "soporte_qa"]>;
        executionId: z.ZodString;
        duration: z.ZodOptional<z.ZodNumber>;
        costEur: z.ZodOptional<z.ZodNumber>;
        inputTokens: z.ZodOptional<z.ZodNumber>;
        outputTokens: z.ZodOptional<z.ZodNumber>;
        provider: z.ZodOptional<z.ZodString>;
        errorMessage: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        orgId?: string;
        inputTokens?: number;
        outputTokens?: number;
        costEur?: number;
        timestamp?: string;
        duration?: number;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        sessionId?: string;
        correlationId?: string;
        errorMessage?: string;
        provider?: string;
        source?: string;
        environment?: string;
        eventType?: "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled";
        agentId?: string;
        agentCategory?: "ventas" | "marketing" | "operaciones" | "finanzas" | "soporte_qa";
        executionId?: string;
    }, {
        orgId?: string;
        inputTokens?: number;
        outputTokens?: number;
        costEur?: number;
        timestamp?: string;
        duration?: number;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        sessionId?: string;
        correlationId?: string;
        errorMessage?: string;
        provider?: string;
        source?: string;
        environment?: string;
        eventType?: "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled";
        agentId?: string;
        agentCategory?: "ventas" | "marketing" | "operaciones" | "finanzas" | "soporte_qa";
        executionId?: string;
    }>, z.ZodObject<{
        timestamp: z.ZodString;
        orgId: z.ZodString;
        userId: z.ZodOptional<z.ZodString>;
        sessionId: z.ZodOptional<z.ZodString>;
        correlationId: z.ZodOptional<z.ZodString>;
        source: z.ZodDefault<z.ZodString>;
        version: z.ZodDefault<z.ZodString>;
        environment: z.ZodDefault<z.ZodString>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    } & {
        eventType: z.ZodLiteral<"api_request">;
        method: z.ZodEnum<["GET", "POST", "PUT", "DELETE", "PATCH", "OPTIONS"]>;
        path: z.ZodString;
        statusCode: z.ZodNumber;
        duration: z.ZodNumber;
        requestSize: z.ZodOptional<z.ZodNumber>;
        responseSize: z.ZodOptional<z.ZodNumber>;
        userAgent: z.ZodOptional<z.ZodString>;
        ip: z.ZodOptional<z.ZodString>;
        referer: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        path?: string;
        orgId?: string;
        timestamp?: string;
        duration?: number;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        userAgent?: string;
        sessionId?: string;
        correlationId?: string;
        method?: "GET" | "POST" | "PUT" | "DELETE" | "OPTIONS" | "PATCH";
        statusCode?: number;
        source?: string;
        environment?: string;
        ip?: string;
        eventType?: "api_request";
        requestSize?: number;
        responseSize?: number;
        referer?: string;
    }, {
        path?: string;
        orgId?: string;
        timestamp?: string;
        duration?: number;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        userAgent?: string;
        sessionId?: string;
        correlationId?: string;
        method?: "GET" | "POST" | "PUT" | "DELETE" | "OPTIONS" | "PATCH";
        statusCode?: number;
        source?: string;
        environment?: string;
        ip?: string;
        eventType?: "api_request";
        requestSize?: number;
        responseSize?: number;
        referer?: string;
    }>, z.ZodObject<{
        timestamp: z.ZodString;
        orgId: z.ZodString;
        userId: z.ZodOptional<z.ZodString>;
        sessionId: z.ZodOptional<z.ZodString>;
        correlationId: z.ZodOptional<z.ZodString>;
        source: z.ZodDefault<z.ZodString>;
        version: z.ZodDefault<z.ZodString>;
        environment: z.ZodDefault<z.ZodString>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    } & {
        eventType: z.ZodLiteral<"performance_metric">;
        metricName: z.ZodString;
        metricValue: z.ZodNumber;
        metricUnit: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        orgId?: string;
        timestamp?: string;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        sessionId?: string;
        correlationId?: string;
        tags?: Record<string, string>;
        metricName?: string;
        source?: string;
        environment?: string;
        eventType?: "performance_metric";
        metricValue?: number;
        metricUnit?: string;
    }, {
        orgId?: string;
        timestamp?: string;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        sessionId?: string;
        correlationId?: string;
        tags?: Record<string, string>;
        metricName?: string;
        source?: string;
        environment?: string;
        eventType?: "performance_metric";
        metricValue?: number;
        metricUnit?: string;
    }>, z.ZodObject<{
        timestamp: z.ZodString;
        orgId: z.ZodString;
        userId: z.ZodOptional<z.ZodString>;
        sessionId: z.ZodOptional<z.ZodString>;
        correlationId: z.ZodOptional<z.ZodString>;
        source: z.ZodDefault<z.ZodString>;
        version: z.ZodDefault<z.ZodString>;
        environment: z.ZodDefault<z.ZodString>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    } & {
        eventType: z.ZodEnum<["cost_threshold_reached", "budget_warning"]>;
        currentCost: z.ZodNumber;
        budgetLimit: z.ZodNumber;
        utilizationPct: z.ZodNumber;
        period: z.ZodEnum<["daily", "weekly", "monthly"]>;
        thresholdType: z.ZodEnum<["warning", "critical", "exceeded"]>;
    }, "strip", z.ZodTypeAny, {
        orgId?: string;
        timestamp?: string;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        sessionId?: string;
        correlationId?: string;
        period?: "daily" | "weekly" | "monthly";
        source?: string;
        environment?: string;
        eventType?: "cost_threshold_reached" | "budget_warning";
        currentCost?: number;
        budgetLimit?: number;
        utilizationPct?: number;
        thresholdType?: "warning" | "critical" | "exceeded";
    }, {
        orgId?: string;
        timestamp?: string;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        sessionId?: string;
        correlationId?: string;
        period?: "daily" | "weekly" | "monthly";
        source?: string;
        environment?: string;
        eventType?: "cost_threshold_reached" | "budget_warning";
        currentCost?: number;
        budgetLimit?: number;
        utilizationPct?: number;
        thresholdType?: "warning" | "critical" | "exceeded";
    }>, z.ZodObject<{
        timestamp: z.ZodString;
        orgId: z.ZodString;
        userId: z.ZodOptional<z.ZodString>;
        sessionId: z.ZodOptional<z.ZodString>;
        correlationId: z.ZodOptional<z.ZodString>;
        source: z.ZodDefault<z.ZodString>;
        version: z.ZodDefault<z.ZodString>;
        environment: z.ZodDefault<z.ZodString>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    } & {
        eventType: z.ZodEnum<["invoice_sent", "payment_received", "dunning_sent", "integration_sync"]>;
        entityType: z.ZodOptional<z.ZodString>;
        entityId: z.ZodOptional<z.ZodString>;
        amount: z.ZodOptional<z.ZodNumber>;
        currency: z.ZodOptional<z.ZodString>;
        integration: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        orgId?: string;
        timestamp?: string;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        currency?: string;
        sessionId?: string;
        correlationId?: string;
        amount?: number;
        entityType?: string;
        entityId?: string;
        source?: string;
        environment?: string;
        eventType?: "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync";
        integration?: string;
    }, {
        orgId?: string;
        timestamp?: string;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        currency?: string;
        sessionId?: string;
        correlationId?: string;
        amount?: number;
        entityType?: string;
        entityId?: string;
        source?: string;
        environment?: string;
        eventType?: "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync";
        integration?: string;
    }>, z.ZodObject<{
        eventType: z.ZodEnum<["user_login", "user_logout", "user_action", "page_view", "button_click", "company_created", "company_updated", "contact_created", "contact_updated", "deal_created", "deal_updated", "deal_stage_changed", "agent_started", "agent_completed", "agent_failed", "agent_cancelled", "api_request", "error_occurred", "performance_metric", "cost_threshold_reached", "budget_warning", "invoice_sent", "payment_received", "dunning_sent", "integration_sync"]>;
        timestamp: z.ZodString;
        orgId: z.ZodString;
        userId: z.ZodOptional<z.ZodString>;
        sessionId: z.ZodOptional<z.ZodString>;
        correlationId: z.ZodOptional<z.ZodString>;
        source: z.ZodDefault<z.ZodString>;
        version: z.ZodDefault<z.ZodString>;
        environment: z.ZodDefault<z.ZodString>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strip", z.ZodTypeAny, {
        orgId?: string;
        timestamp?: string;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        sessionId?: string;
        correlationId?: string;
        source?: string;
        environment?: string;
        eventType?: "api_request" | "user_login" | "user_logout" | "user_action" | "page_view" | "button_click" | "company_created" | "company_updated" | "contact_created" | "contact_updated" | "deal_created" | "deal_updated" | "deal_stage_changed" | "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled" | "error_occurred" | "performance_metric" | "cost_threshold_reached" | "budget_warning" | "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync";
    }, {
        orgId?: string;
        timestamp?: string;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        sessionId?: string;
        correlationId?: string;
        source?: string;
        environment?: string;
        eventType?: "api_request" | "user_login" | "user_logout" | "user_action" | "page_view" | "button_click" | "company_created" | "company_updated" | "contact_created" | "contact_updated" | "deal_created" | "deal_updated" | "deal_stage_changed" | "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled" | "error_occurred" | "performance_metric" | "cost_threshold_reached" | "budget_warning" | "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync";
    }>]>, "many">>;
}, "strip", z.ZodTypeAny, {
    events?: ({
        orgId?: string;
        timestamp?: string;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        sessionId?: string;
        correlationId?: string;
        source?: string;
        environment?: string;
        eventType?: "api_request" | "user_login" | "user_logout" | "user_action" | "page_view" | "button_click" | "company_created" | "company_updated" | "contact_created" | "contact_updated" | "deal_created" | "deal_updated" | "deal_stage_changed" | "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled" | "error_occurred" | "performance_metric" | "cost_threshold_reached" | "budget_warning" | "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync";
    } | {
        orgId?: string;
        timestamp?: string;
        success?: boolean;
        duration?: number;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        resource?: string;
        action?: string;
        resourceId?: string;
        sessionId?: string;
        correlationId?: string;
        errorMessage?: string;
        source?: string;
        environment?: string;
        eventType?: "user_action";
    } | {
        orgId?: string;
        inputTokens?: number;
        outputTokens?: number;
        costEur?: number;
        timestamp?: string;
        duration?: number;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        sessionId?: string;
        correlationId?: string;
        errorMessage?: string;
        provider?: string;
        source?: string;
        environment?: string;
        eventType?: "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled";
        agentId?: string;
        agentCategory?: "ventas" | "marketing" | "operaciones" | "finanzas" | "soporte_qa";
        executionId?: string;
    } | {
        path?: string;
        orgId?: string;
        timestamp?: string;
        duration?: number;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        userAgent?: string;
        sessionId?: string;
        correlationId?: string;
        method?: "GET" | "POST" | "PUT" | "DELETE" | "OPTIONS" | "PATCH";
        statusCode?: number;
        source?: string;
        environment?: string;
        ip?: string;
        eventType?: "api_request";
        requestSize?: number;
        responseSize?: number;
        referer?: string;
    } | {
        orgId?: string;
        timestamp?: string;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        sessionId?: string;
        correlationId?: string;
        tags?: Record<string, string>;
        metricName?: string;
        source?: string;
        environment?: string;
        eventType?: "performance_metric";
        metricValue?: number;
        metricUnit?: string;
    } | {
        orgId?: string;
        timestamp?: string;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        sessionId?: string;
        correlationId?: string;
        period?: "daily" | "weekly" | "monthly";
        source?: string;
        environment?: string;
        eventType?: "cost_threshold_reached" | "budget_warning";
        currentCost?: number;
        budgetLimit?: number;
        utilizationPct?: number;
        thresholdType?: "warning" | "critical" | "exceeded";
    } | {
        orgId?: string;
        timestamp?: string;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        currency?: string;
        sessionId?: string;
        correlationId?: string;
        amount?: number;
        entityType?: string;
        entityId?: string;
        source?: string;
        environment?: string;
        eventType?: "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync";
        integration?: string;
    })[];
    count?: number;
    period?: string;
    sum?: number;
    avg?: number;
    min?: number;
    max?: number;
}, {
    events?: ({
        orgId?: string;
        timestamp?: string;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        sessionId?: string;
        correlationId?: string;
        source?: string;
        environment?: string;
        eventType?: "api_request" | "user_login" | "user_logout" | "user_action" | "page_view" | "button_click" | "company_created" | "company_updated" | "contact_created" | "contact_updated" | "deal_created" | "deal_updated" | "deal_stage_changed" | "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled" | "error_occurred" | "performance_metric" | "cost_threshold_reached" | "budget_warning" | "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync";
    } | {
        orgId?: string;
        timestamp?: string;
        success?: boolean;
        duration?: number;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        resource?: string;
        action?: string;
        resourceId?: string;
        sessionId?: string;
        correlationId?: string;
        errorMessage?: string;
        source?: string;
        environment?: string;
        eventType?: "user_action";
    } | {
        orgId?: string;
        inputTokens?: number;
        outputTokens?: number;
        costEur?: number;
        timestamp?: string;
        duration?: number;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        sessionId?: string;
        correlationId?: string;
        errorMessage?: string;
        provider?: string;
        source?: string;
        environment?: string;
        eventType?: "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled";
        agentId?: string;
        agentCategory?: "ventas" | "marketing" | "operaciones" | "finanzas" | "soporte_qa";
        executionId?: string;
    } | {
        path?: string;
        orgId?: string;
        timestamp?: string;
        duration?: number;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        userAgent?: string;
        sessionId?: string;
        correlationId?: string;
        method?: "GET" | "POST" | "PUT" | "DELETE" | "OPTIONS" | "PATCH";
        statusCode?: number;
        source?: string;
        environment?: string;
        ip?: string;
        eventType?: "api_request";
        requestSize?: number;
        responseSize?: number;
        referer?: string;
    } | {
        orgId?: string;
        timestamp?: string;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        sessionId?: string;
        correlationId?: string;
        tags?: Record<string, string>;
        metricName?: string;
        source?: string;
        environment?: string;
        eventType?: "performance_metric";
        metricValue?: number;
        metricUnit?: string;
    } | {
        orgId?: string;
        timestamp?: string;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        sessionId?: string;
        correlationId?: string;
        period?: "daily" | "weekly" | "monthly";
        source?: string;
        environment?: string;
        eventType?: "cost_threshold_reached" | "budget_warning";
        currentCost?: number;
        budgetLimit?: number;
        utilizationPct?: number;
        thresholdType?: "warning" | "critical" | "exceeded";
    } | {
        orgId?: string;
        timestamp?: string;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        currency?: string;
        sessionId?: string;
        correlationId?: string;
        amount?: number;
        entityType?: string;
        entityId?: string;
        source?: string;
        environment?: string;
        eventType?: "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync";
        integration?: string;
    })[];
    count?: number;
    period?: string;
    sum?: number;
    avg?: number;
    min?: number;
    max?: number;
}>;
export declare const AnalyticsQueryResponseSchema: z.ZodObject<{
    success: z.ZodBoolean;
    data: z.ZodArray<z.ZodUnion<[z.ZodDiscriminatedUnion<"eventType", [z.ZodObject<{
        timestamp: z.ZodString;
        orgId: z.ZodString;
        userId: z.ZodOptional<z.ZodString>;
        sessionId: z.ZodOptional<z.ZodString>;
        correlationId: z.ZodOptional<z.ZodString>;
        source: z.ZodDefault<z.ZodString>;
        version: z.ZodDefault<z.ZodString>;
        environment: z.ZodDefault<z.ZodString>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    } & {
        eventType: z.ZodLiteral<"user_action">;
        action: z.ZodString;
        resource: z.ZodOptional<z.ZodString>;
        resourceId: z.ZodOptional<z.ZodString>;
        duration: z.ZodOptional<z.ZodNumber>;
        success: z.ZodDefault<z.ZodBoolean>;
        errorMessage: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        orgId?: string;
        timestamp?: string;
        success?: boolean;
        duration?: number;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        resource?: string;
        action?: string;
        resourceId?: string;
        sessionId?: string;
        correlationId?: string;
        errorMessage?: string;
        source?: string;
        environment?: string;
        eventType?: "user_action";
    }, {
        orgId?: string;
        timestamp?: string;
        success?: boolean;
        duration?: number;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        resource?: string;
        action?: string;
        resourceId?: string;
        sessionId?: string;
        correlationId?: string;
        errorMessage?: string;
        source?: string;
        environment?: string;
        eventType?: "user_action";
    }>, z.ZodObject<{
        timestamp: z.ZodString;
        orgId: z.ZodString;
        userId: z.ZodOptional<z.ZodString>;
        sessionId: z.ZodOptional<z.ZodString>;
        correlationId: z.ZodOptional<z.ZodString>;
        source: z.ZodDefault<z.ZodString>;
        version: z.ZodDefault<z.ZodString>;
        environment: z.ZodDefault<z.ZodString>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    } & {
        eventType: z.ZodEnum<["agent_started", "agent_completed", "agent_failed", "agent_cancelled"]>;
        agentId: z.ZodString;
        agentCategory: z.ZodEnum<["ventas", "marketing", "operaciones", "finanzas", "soporte_qa"]>;
        executionId: z.ZodString;
        duration: z.ZodOptional<z.ZodNumber>;
        costEur: z.ZodOptional<z.ZodNumber>;
        inputTokens: z.ZodOptional<z.ZodNumber>;
        outputTokens: z.ZodOptional<z.ZodNumber>;
        provider: z.ZodOptional<z.ZodString>;
        errorMessage: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        orgId?: string;
        inputTokens?: number;
        outputTokens?: number;
        costEur?: number;
        timestamp?: string;
        duration?: number;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        sessionId?: string;
        correlationId?: string;
        errorMessage?: string;
        provider?: string;
        source?: string;
        environment?: string;
        eventType?: "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled";
        agentId?: string;
        agentCategory?: "ventas" | "marketing" | "operaciones" | "finanzas" | "soporte_qa";
        executionId?: string;
    }, {
        orgId?: string;
        inputTokens?: number;
        outputTokens?: number;
        costEur?: number;
        timestamp?: string;
        duration?: number;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        sessionId?: string;
        correlationId?: string;
        errorMessage?: string;
        provider?: string;
        source?: string;
        environment?: string;
        eventType?: "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled";
        agentId?: string;
        agentCategory?: "ventas" | "marketing" | "operaciones" | "finanzas" | "soporte_qa";
        executionId?: string;
    }>, z.ZodObject<{
        timestamp: z.ZodString;
        orgId: z.ZodString;
        userId: z.ZodOptional<z.ZodString>;
        sessionId: z.ZodOptional<z.ZodString>;
        correlationId: z.ZodOptional<z.ZodString>;
        source: z.ZodDefault<z.ZodString>;
        version: z.ZodDefault<z.ZodString>;
        environment: z.ZodDefault<z.ZodString>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    } & {
        eventType: z.ZodLiteral<"api_request">;
        method: z.ZodEnum<["GET", "POST", "PUT", "DELETE", "PATCH", "OPTIONS"]>;
        path: z.ZodString;
        statusCode: z.ZodNumber;
        duration: z.ZodNumber;
        requestSize: z.ZodOptional<z.ZodNumber>;
        responseSize: z.ZodOptional<z.ZodNumber>;
        userAgent: z.ZodOptional<z.ZodString>;
        ip: z.ZodOptional<z.ZodString>;
        referer: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        path?: string;
        orgId?: string;
        timestamp?: string;
        duration?: number;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        userAgent?: string;
        sessionId?: string;
        correlationId?: string;
        method?: "GET" | "POST" | "PUT" | "DELETE" | "OPTIONS" | "PATCH";
        statusCode?: number;
        source?: string;
        environment?: string;
        ip?: string;
        eventType?: "api_request";
        requestSize?: number;
        responseSize?: number;
        referer?: string;
    }, {
        path?: string;
        orgId?: string;
        timestamp?: string;
        duration?: number;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        userAgent?: string;
        sessionId?: string;
        correlationId?: string;
        method?: "GET" | "POST" | "PUT" | "DELETE" | "OPTIONS" | "PATCH";
        statusCode?: number;
        source?: string;
        environment?: string;
        ip?: string;
        eventType?: "api_request";
        requestSize?: number;
        responseSize?: number;
        referer?: string;
    }>, z.ZodObject<{
        timestamp: z.ZodString;
        orgId: z.ZodString;
        userId: z.ZodOptional<z.ZodString>;
        sessionId: z.ZodOptional<z.ZodString>;
        correlationId: z.ZodOptional<z.ZodString>;
        source: z.ZodDefault<z.ZodString>;
        version: z.ZodDefault<z.ZodString>;
        environment: z.ZodDefault<z.ZodString>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    } & {
        eventType: z.ZodLiteral<"performance_metric">;
        metricName: z.ZodString;
        metricValue: z.ZodNumber;
        metricUnit: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        orgId?: string;
        timestamp?: string;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        sessionId?: string;
        correlationId?: string;
        tags?: Record<string, string>;
        metricName?: string;
        source?: string;
        environment?: string;
        eventType?: "performance_metric";
        metricValue?: number;
        metricUnit?: string;
    }, {
        orgId?: string;
        timestamp?: string;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        sessionId?: string;
        correlationId?: string;
        tags?: Record<string, string>;
        metricName?: string;
        source?: string;
        environment?: string;
        eventType?: "performance_metric";
        metricValue?: number;
        metricUnit?: string;
    }>, z.ZodObject<{
        timestamp: z.ZodString;
        orgId: z.ZodString;
        userId: z.ZodOptional<z.ZodString>;
        sessionId: z.ZodOptional<z.ZodString>;
        correlationId: z.ZodOptional<z.ZodString>;
        source: z.ZodDefault<z.ZodString>;
        version: z.ZodDefault<z.ZodString>;
        environment: z.ZodDefault<z.ZodString>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    } & {
        eventType: z.ZodEnum<["cost_threshold_reached", "budget_warning"]>;
        currentCost: z.ZodNumber;
        budgetLimit: z.ZodNumber;
        utilizationPct: z.ZodNumber;
        period: z.ZodEnum<["daily", "weekly", "monthly"]>;
        thresholdType: z.ZodEnum<["warning", "critical", "exceeded"]>;
    }, "strip", z.ZodTypeAny, {
        orgId?: string;
        timestamp?: string;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        sessionId?: string;
        correlationId?: string;
        period?: "daily" | "weekly" | "monthly";
        source?: string;
        environment?: string;
        eventType?: "cost_threshold_reached" | "budget_warning";
        currentCost?: number;
        budgetLimit?: number;
        utilizationPct?: number;
        thresholdType?: "warning" | "critical" | "exceeded";
    }, {
        orgId?: string;
        timestamp?: string;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        sessionId?: string;
        correlationId?: string;
        period?: "daily" | "weekly" | "monthly";
        source?: string;
        environment?: string;
        eventType?: "cost_threshold_reached" | "budget_warning";
        currentCost?: number;
        budgetLimit?: number;
        utilizationPct?: number;
        thresholdType?: "warning" | "critical" | "exceeded";
    }>, z.ZodObject<{
        timestamp: z.ZodString;
        orgId: z.ZodString;
        userId: z.ZodOptional<z.ZodString>;
        sessionId: z.ZodOptional<z.ZodString>;
        correlationId: z.ZodOptional<z.ZodString>;
        source: z.ZodDefault<z.ZodString>;
        version: z.ZodDefault<z.ZodString>;
        environment: z.ZodDefault<z.ZodString>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    } & {
        eventType: z.ZodEnum<["invoice_sent", "payment_received", "dunning_sent", "integration_sync"]>;
        entityType: z.ZodOptional<z.ZodString>;
        entityId: z.ZodOptional<z.ZodString>;
        amount: z.ZodOptional<z.ZodNumber>;
        currency: z.ZodOptional<z.ZodString>;
        integration: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        orgId?: string;
        timestamp?: string;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        currency?: string;
        sessionId?: string;
        correlationId?: string;
        amount?: number;
        entityType?: string;
        entityId?: string;
        source?: string;
        environment?: string;
        eventType?: "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync";
        integration?: string;
    }, {
        orgId?: string;
        timestamp?: string;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        currency?: string;
        sessionId?: string;
        correlationId?: string;
        amount?: number;
        entityType?: string;
        entityId?: string;
        source?: string;
        environment?: string;
        eventType?: "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync";
        integration?: string;
    }>, z.ZodObject<{
        eventType: z.ZodEnum<["user_login", "user_logout", "user_action", "page_view", "button_click", "company_created", "company_updated", "contact_created", "contact_updated", "deal_created", "deal_updated", "deal_stage_changed", "agent_started", "agent_completed", "agent_failed", "agent_cancelled", "api_request", "error_occurred", "performance_metric", "cost_threshold_reached", "budget_warning", "invoice_sent", "payment_received", "dunning_sent", "integration_sync"]>;
        timestamp: z.ZodString;
        orgId: z.ZodString;
        userId: z.ZodOptional<z.ZodString>;
        sessionId: z.ZodOptional<z.ZodString>;
        correlationId: z.ZodOptional<z.ZodString>;
        source: z.ZodDefault<z.ZodString>;
        version: z.ZodDefault<z.ZodString>;
        environment: z.ZodDefault<z.ZodString>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strip", z.ZodTypeAny, {
        orgId?: string;
        timestamp?: string;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        sessionId?: string;
        correlationId?: string;
        source?: string;
        environment?: string;
        eventType?: "api_request" | "user_login" | "user_logout" | "user_action" | "page_view" | "button_click" | "company_created" | "company_updated" | "contact_created" | "contact_updated" | "deal_created" | "deal_updated" | "deal_stage_changed" | "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled" | "error_occurred" | "performance_metric" | "cost_threshold_reached" | "budget_warning" | "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync";
    }, {
        orgId?: string;
        timestamp?: string;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        sessionId?: string;
        correlationId?: string;
        source?: string;
        environment?: string;
        eventType?: "api_request" | "user_login" | "user_logout" | "user_action" | "page_view" | "button_click" | "company_created" | "company_updated" | "contact_created" | "contact_updated" | "deal_created" | "deal_updated" | "deal_stage_changed" | "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled" | "error_occurred" | "performance_metric" | "cost_threshold_reached" | "budget_warning" | "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync";
    }>]>, z.ZodObject<{
        period: z.ZodString;
        count: z.ZodNumber;
        sum: z.ZodOptional<z.ZodNumber>;
        avg: z.ZodOptional<z.ZodNumber>;
        min: z.ZodOptional<z.ZodNumber>;
        max: z.ZodOptional<z.ZodNumber>;
        events: z.ZodOptional<z.ZodArray<z.ZodDiscriminatedUnion<"eventType", [z.ZodObject<{
            timestamp: z.ZodString;
            orgId: z.ZodString;
            userId: z.ZodOptional<z.ZodString>;
            sessionId: z.ZodOptional<z.ZodString>;
            correlationId: z.ZodOptional<z.ZodString>;
            source: z.ZodDefault<z.ZodString>;
            version: z.ZodDefault<z.ZodString>;
            environment: z.ZodDefault<z.ZodString>;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        } & {
            eventType: z.ZodLiteral<"user_action">;
            action: z.ZodString;
            resource: z.ZodOptional<z.ZodString>;
            resourceId: z.ZodOptional<z.ZodString>;
            duration: z.ZodOptional<z.ZodNumber>;
            success: z.ZodDefault<z.ZodBoolean>;
            errorMessage: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            orgId?: string;
            timestamp?: string;
            success?: boolean;
            duration?: number;
            metadata?: Record<string, unknown>;
            userId?: string;
            version?: string;
            resource?: string;
            action?: string;
            resourceId?: string;
            sessionId?: string;
            correlationId?: string;
            errorMessage?: string;
            source?: string;
            environment?: string;
            eventType?: "user_action";
        }, {
            orgId?: string;
            timestamp?: string;
            success?: boolean;
            duration?: number;
            metadata?: Record<string, unknown>;
            userId?: string;
            version?: string;
            resource?: string;
            action?: string;
            resourceId?: string;
            sessionId?: string;
            correlationId?: string;
            errorMessage?: string;
            source?: string;
            environment?: string;
            eventType?: "user_action";
        }>, z.ZodObject<{
            timestamp: z.ZodString;
            orgId: z.ZodString;
            userId: z.ZodOptional<z.ZodString>;
            sessionId: z.ZodOptional<z.ZodString>;
            correlationId: z.ZodOptional<z.ZodString>;
            source: z.ZodDefault<z.ZodString>;
            version: z.ZodDefault<z.ZodString>;
            environment: z.ZodDefault<z.ZodString>;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        } & {
            eventType: z.ZodEnum<["agent_started", "agent_completed", "agent_failed", "agent_cancelled"]>;
            agentId: z.ZodString;
            agentCategory: z.ZodEnum<["ventas", "marketing", "operaciones", "finanzas", "soporte_qa"]>;
            executionId: z.ZodString;
            duration: z.ZodOptional<z.ZodNumber>;
            costEur: z.ZodOptional<z.ZodNumber>;
            inputTokens: z.ZodOptional<z.ZodNumber>;
            outputTokens: z.ZodOptional<z.ZodNumber>;
            provider: z.ZodOptional<z.ZodString>;
            errorMessage: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            orgId?: string;
            inputTokens?: number;
            outputTokens?: number;
            costEur?: number;
            timestamp?: string;
            duration?: number;
            metadata?: Record<string, unknown>;
            userId?: string;
            version?: string;
            sessionId?: string;
            correlationId?: string;
            errorMessage?: string;
            provider?: string;
            source?: string;
            environment?: string;
            eventType?: "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled";
            agentId?: string;
            agentCategory?: "ventas" | "marketing" | "operaciones" | "finanzas" | "soporte_qa";
            executionId?: string;
        }, {
            orgId?: string;
            inputTokens?: number;
            outputTokens?: number;
            costEur?: number;
            timestamp?: string;
            duration?: number;
            metadata?: Record<string, unknown>;
            userId?: string;
            version?: string;
            sessionId?: string;
            correlationId?: string;
            errorMessage?: string;
            provider?: string;
            source?: string;
            environment?: string;
            eventType?: "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled";
            agentId?: string;
            agentCategory?: "ventas" | "marketing" | "operaciones" | "finanzas" | "soporte_qa";
            executionId?: string;
        }>, z.ZodObject<{
            timestamp: z.ZodString;
            orgId: z.ZodString;
            userId: z.ZodOptional<z.ZodString>;
            sessionId: z.ZodOptional<z.ZodString>;
            correlationId: z.ZodOptional<z.ZodString>;
            source: z.ZodDefault<z.ZodString>;
            version: z.ZodDefault<z.ZodString>;
            environment: z.ZodDefault<z.ZodString>;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        } & {
            eventType: z.ZodLiteral<"api_request">;
            method: z.ZodEnum<["GET", "POST", "PUT", "DELETE", "PATCH", "OPTIONS"]>;
            path: z.ZodString;
            statusCode: z.ZodNumber;
            duration: z.ZodNumber;
            requestSize: z.ZodOptional<z.ZodNumber>;
            responseSize: z.ZodOptional<z.ZodNumber>;
            userAgent: z.ZodOptional<z.ZodString>;
            ip: z.ZodOptional<z.ZodString>;
            referer: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            path?: string;
            orgId?: string;
            timestamp?: string;
            duration?: number;
            metadata?: Record<string, unknown>;
            userId?: string;
            version?: string;
            userAgent?: string;
            sessionId?: string;
            correlationId?: string;
            method?: "GET" | "POST" | "PUT" | "DELETE" | "OPTIONS" | "PATCH";
            statusCode?: number;
            source?: string;
            environment?: string;
            ip?: string;
            eventType?: "api_request";
            requestSize?: number;
            responseSize?: number;
            referer?: string;
        }, {
            path?: string;
            orgId?: string;
            timestamp?: string;
            duration?: number;
            metadata?: Record<string, unknown>;
            userId?: string;
            version?: string;
            userAgent?: string;
            sessionId?: string;
            correlationId?: string;
            method?: "GET" | "POST" | "PUT" | "DELETE" | "OPTIONS" | "PATCH";
            statusCode?: number;
            source?: string;
            environment?: string;
            ip?: string;
            eventType?: "api_request";
            requestSize?: number;
            responseSize?: number;
            referer?: string;
        }>, z.ZodObject<{
            timestamp: z.ZodString;
            orgId: z.ZodString;
            userId: z.ZodOptional<z.ZodString>;
            sessionId: z.ZodOptional<z.ZodString>;
            correlationId: z.ZodOptional<z.ZodString>;
            source: z.ZodDefault<z.ZodString>;
            version: z.ZodDefault<z.ZodString>;
            environment: z.ZodDefault<z.ZodString>;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        } & {
            eventType: z.ZodLiteral<"performance_metric">;
            metricName: z.ZodString;
            metricValue: z.ZodNumber;
            metricUnit: z.ZodOptional<z.ZodString>;
            tags: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
        }, "strip", z.ZodTypeAny, {
            orgId?: string;
            timestamp?: string;
            metadata?: Record<string, unknown>;
            userId?: string;
            version?: string;
            sessionId?: string;
            correlationId?: string;
            tags?: Record<string, string>;
            metricName?: string;
            source?: string;
            environment?: string;
            eventType?: "performance_metric";
            metricValue?: number;
            metricUnit?: string;
        }, {
            orgId?: string;
            timestamp?: string;
            metadata?: Record<string, unknown>;
            userId?: string;
            version?: string;
            sessionId?: string;
            correlationId?: string;
            tags?: Record<string, string>;
            metricName?: string;
            source?: string;
            environment?: string;
            eventType?: "performance_metric";
            metricValue?: number;
            metricUnit?: string;
        }>, z.ZodObject<{
            timestamp: z.ZodString;
            orgId: z.ZodString;
            userId: z.ZodOptional<z.ZodString>;
            sessionId: z.ZodOptional<z.ZodString>;
            correlationId: z.ZodOptional<z.ZodString>;
            source: z.ZodDefault<z.ZodString>;
            version: z.ZodDefault<z.ZodString>;
            environment: z.ZodDefault<z.ZodString>;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        } & {
            eventType: z.ZodEnum<["cost_threshold_reached", "budget_warning"]>;
            currentCost: z.ZodNumber;
            budgetLimit: z.ZodNumber;
            utilizationPct: z.ZodNumber;
            period: z.ZodEnum<["daily", "weekly", "monthly"]>;
            thresholdType: z.ZodEnum<["warning", "critical", "exceeded"]>;
        }, "strip", z.ZodTypeAny, {
            orgId?: string;
            timestamp?: string;
            metadata?: Record<string, unknown>;
            userId?: string;
            version?: string;
            sessionId?: string;
            correlationId?: string;
            period?: "daily" | "weekly" | "monthly";
            source?: string;
            environment?: string;
            eventType?: "cost_threshold_reached" | "budget_warning";
            currentCost?: number;
            budgetLimit?: number;
            utilizationPct?: number;
            thresholdType?: "warning" | "critical" | "exceeded";
        }, {
            orgId?: string;
            timestamp?: string;
            metadata?: Record<string, unknown>;
            userId?: string;
            version?: string;
            sessionId?: string;
            correlationId?: string;
            period?: "daily" | "weekly" | "monthly";
            source?: string;
            environment?: string;
            eventType?: "cost_threshold_reached" | "budget_warning";
            currentCost?: number;
            budgetLimit?: number;
            utilizationPct?: number;
            thresholdType?: "warning" | "critical" | "exceeded";
        }>, z.ZodObject<{
            timestamp: z.ZodString;
            orgId: z.ZodString;
            userId: z.ZodOptional<z.ZodString>;
            sessionId: z.ZodOptional<z.ZodString>;
            correlationId: z.ZodOptional<z.ZodString>;
            source: z.ZodDefault<z.ZodString>;
            version: z.ZodDefault<z.ZodString>;
            environment: z.ZodDefault<z.ZodString>;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        } & {
            eventType: z.ZodEnum<["invoice_sent", "payment_received", "dunning_sent", "integration_sync"]>;
            entityType: z.ZodOptional<z.ZodString>;
            entityId: z.ZodOptional<z.ZodString>;
            amount: z.ZodOptional<z.ZodNumber>;
            currency: z.ZodOptional<z.ZodString>;
            integration: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            orgId?: string;
            timestamp?: string;
            metadata?: Record<string, unknown>;
            userId?: string;
            version?: string;
            currency?: string;
            sessionId?: string;
            correlationId?: string;
            amount?: number;
            entityType?: string;
            entityId?: string;
            source?: string;
            environment?: string;
            eventType?: "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync";
            integration?: string;
        }, {
            orgId?: string;
            timestamp?: string;
            metadata?: Record<string, unknown>;
            userId?: string;
            version?: string;
            currency?: string;
            sessionId?: string;
            correlationId?: string;
            amount?: number;
            entityType?: string;
            entityId?: string;
            source?: string;
            environment?: string;
            eventType?: "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync";
            integration?: string;
        }>, z.ZodObject<{
            eventType: z.ZodEnum<["user_login", "user_logout", "user_action", "page_view", "button_click", "company_created", "company_updated", "contact_created", "contact_updated", "deal_created", "deal_updated", "deal_stage_changed", "agent_started", "agent_completed", "agent_failed", "agent_cancelled", "api_request", "error_occurred", "performance_metric", "cost_threshold_reached", "budget_warning", "invoice_sent", "payment_received", "dunning_sent", "integration_sync"]>;
            timestamp: z.ZodString;
            orgId: z.ZodString;
            userId: z.ZodOptional<z.ZodString>;
            sessionId: z.ZodOptional<z.ZodString>;
            correlationId: z.ZodOptional<z.ZodString>;
            source: z.ZodDefault<z.ZodString>;
            version: z.ZodDefault<z.ZodString>;
            environment: z.ZodDefault<z.ZodString>;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        }, "strip", z.ZodTypeAny, {
            orgId?: string;
            timestamp?: string;
            metadata?: Record<string, unknown>;
            userId?: string;
            version?: string;
            sessionId?: string;
            correlationId?: string;
            source?: string;
            environment?: string;
            eventType?: "api_request" | "user_login" | "user_logout" | "user_action" | "page_view" | "button_click" | "company_created" | "company_updated" | "contact_created" | "contact_updated" | "deal_created" | "deal_updated" | "deal_stage_changed" | "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled" | "error_occurred" | "performance_metric" | "cost_threshold_reached" | "budget_warning" | "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync";
        }, {
            orgId?: string;
            timestamp?: string;
            metadata?: Record<string, unknown>;
            userId?: string;
            version?: string;
            sessionId?: string;
            correlationId?: string;
            source?: string;
            environment?: string;
            eventType?: "api_request" | "user_login" | "user_logout" | "user_action" | "page_view" | "button_click" | "company_created" | "company_updated" | "contact_created" | "contact_updated" | "deal_created" | "deal_updated" | "deal_stage_changed" | "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled" | "error_occurred" | "performance_metric" | "cost_threshold_reached" | "budget_warning" | "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync";
        }>]>, "many">>;
    }, "strip", z.ZodTypeAny, {
        events?: ({
            orgId?: string;
            timestamp?: string;
            metadata?: Record<string, unknown>;
            userId?: string;
            version?: string;
            sessionId?: string;
            correlationId?: string;
            source?: string;
            environment?: string;
            eventType?: "api_request" | "user_login" | "user_logout" | "user_action" | "page_view" | "button_click" | "company_created" | "company_updated" | "contact_created" | "contact_updated" | "deal_created" | "deal_updated" | "deal_stage_changed" | "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled" | "error_occurred" | "performance_metric" | "cost_threshold_reached" | "budget_warning" | "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync";
        } | {
            orgId?: string;
            timestamp?: string;
            success?: boolean;
            duration?: number;
            metadata?: Record<string, unknown>;
            userId?: string;
            version?: string;
            resource?: string;
            action?: string;
            resourceId?: string;
            sessionId?: string;
            correlationId?: string;
            errorMessage?: string;
            source?: string;
            environment?: string;
            eventType?: "user_action";
        } | {
            orgId?: string;
            inputTokens?: number;
            outputTokens?: number;
            costEur?: number;
            timestamp?: string;
            duration?: number;
            metadata?: Record<string, unknown>;
            userId?: string;
            version?: string;
            sessionId?: string;
            correlationId?: string;
            errorMessage?: string;
            provider?: string;
            source?: string;
            environment?: string;
            eventType?: "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled";
            agentId?: string;
            agentCategory?: "ventas" | "marketing" | "operaciones" | "finanzas" | "soporte_qa";
            executionId?: string;
        } | {
            path?: string;
            orgId?: string;
            timestamp?: string;
            duration?: number;
            metadata?: Record<string, unknown>;
            userId?: string;
            version?: string;
            userAgent?: string;
            sessionId?: string;
            correlationId?: string;
            method?: "GET" | "POST" | "PUT" | "DELETE" | "OPTIONS" | "PATCH";
            statusCode?: number;
            source?: string;
            environment?: string;
            ip?: string;
            eventType?: "api_request";
            requestSize?: number;
            responseSize?: number;
            referer?: string;
        } | {
            orgId?: string;
            timestamp?: string;
            metadata?: Record<string, unknown>;
            userId?: string;
            version?: string;
            sessionId?: string;
            correlationId?: string;
            tags?: Record<string, string>;
            metricName?: string;
            source?: string;
            environment?: string;
            eventType?: "performance_metric";
            metricValue?: number;
            metricUnit?: string;
        } | {
            orgId?: string;
            timestamp?: string;
            metadata?: Record<string, unknown>;
            userId?: string;
            version?: string;
            sessionId?: string;
            correlationId?: string;
            period?: "daily" | "weekly" | "monthly";
            source?: string;
            environment?: string;
            eventType?: "cost_threshold_reached" | "budget_warning";
            currentCost?: number;
            budgetLimit?: number;
            utilizationPct?: number;
            thresholdType?: "warning" | "critical" | "exceeded";
        } | {
            orgId?: string;
            timestamp?: string;
            metadata?: Record<string, unknown>;
            userId?: string;
            version?: string;
            currency?: string;
            sessionId?: string;
            correlationId?: string;
            amount?: number;
            entityType?: string;
            entityId?: string;
            source?: string;
            environment?: string;
            eventType?: "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync";
            integration?: string;
        })[];
        count?: number;
        period?: string;
        sum?: number;
        avg?: number;
        min?: number;
        max?: number;
    }, {
        events?: ({
            orgId?: string;
            timestamp?: string;
            metadata?: Record<string, unknown>;
            userId?: string;
            version?: string;
            sessionId?: string;
            correlationId?: string;
            source?: string;
            environment?: string;
            eventType?: "api_request" | "user_login" | "user_logout" | "user_action" | "page_view" | "button_click" | "company_created" | "company_updated" | "contact_created" | "contact_updated" | "deal_created" | "deal_updated" | "deal_stage_changed" | "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled" | "error_occurred" | "performance_metric" | "cost_threshold_reached" | "budget_warning" | "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync";
        } | {
            orgId?: string;
            timestamp?: string;
            success?: boolean;
            duration?: number;
            metadata?: Record<string, unknown>;
            userId?: string;
            version?: string;
            resource?: string;
            action?: string;
            resourceId?: string;
            sessionId?: string;
            correlationId?: string;
            errorMessage?: string;
            source?: string;
            environment?: string;
            eventType?: "user_action";
        } | {
            orgId?: string;
            inputTokens?: number;
            outputTokens?: number;
            costEur?: number;
            timestamp?: string;
            duration?: number;
            metadata?: Record<string, unknown>;
            userId?: string;
            version?: string;
            sessionId?: string;
            correlationId?: string;
            errorMessage?: string;
            provider?: string;
            source?: string;
            environment?: string;
            eventType?: "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled";
            agentId?: string;
            agentCategory?: "ventas" | "marketing" | "operaciones" | "finanzas" | "soporte_qa";
            executionId?: string;
        } | {
            path?: string;
            orgId?: string;
            timestamp?: string;
            duration?: number;
            metadata?: Record<string, unknown>;
            userId?: string;
            version?: string;
            userAgent?: string;
            sessionId?: string;
            correlationId?: string;
            method?: "GET" | "POST" | "PUT" | "DELETE" | "OPTIONS" | "PATCH";
            statusCode?: number;
            source?: string;
            environment?: string;
            ip?: string;
            eventType?: "api_request";
            requestSize?: number;
            responseSize?: number;
            referer?: string;
        } | {
            orgId?: string;
            timestamp?: string;
            metadata?: Record<string, unknown>;
            userId?: string;
            version?: string;
            sessionId?: string;
            correlationId?: string;
            tags?: Record<string, string>;
            metricName?: string;
            source?: string;
            environment?: string;
            eventType?: "performance_metric";
            metricValue?: number;
            metricUnit?: string;
        } | {
            orgId?: string;
            timestamp?: string;
            metadata?: Record<string, unknown>;
            userId?: string;
            version?: string;
            sessionId?: string;
            correlationId?: string;
            period?: "daily" | "weekly" | "monthly";
            source?: string;
            environment?: string;
            eventType?: "cost_threshold_reached" | "budget_warning";
            currentCost?: number;
            budgetLimit?: number;
            utilizationPct?: number;
            thresholdType?: "warning" | "critical" | "exceeded";
        } | {
            orgId?: string;
            timestamp?: string;
            metadata?: Record<string, unknown>;
            userId?: string;
            version?: string;
            currency?: string;
            sessionId?: string;
            correlationId?: string;
            amount?: number;
            entityType?: string;
            entityId?: string;
            source?: string;
            environment?: string;
            eventType?: "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync";
            integration?: string;
        })[];
        count?: number;
        period?: string;
        sum?: number;
        avg?: number;
        min?: number;
        max?: number;
    }>]>, "many">;
    pagination: z.ZodObject<{
        limit: z.ZodNumber;
        offset: z.ZodNumber;
        total: z.ZodNumber;
        hasMore: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        limit?: number;
        hasMore?: boolean;
        total?: number;
        offset?: number;
    }, {
        limit?: number;
        hasMore?: boolean;
        total?: number;
        offset?: number;
    }>;
    query: z.ZodObject<{
        eventTypes: z.ZodOptional<z.ZodArray<z.ZodEnum<["user_login", "user_logout", "user_action", "page_view", "button_click", "company_created", "company_updated", "contact_created", "contact_updated", "deal_created", "deal_updated", "deal_stage_changed", "agent_started", "agent_completed", "agent_failed", "agent_cancelled", "api_request", "error_occurred", "performance_metric", "cost_threshold_reached", "budget_warning", "invoice_sent", "payment_received", "dunning_sent", "integration_sync"]>, "many">>;
        startDate: z.ZodOptional<z.ZodString>;
        endDate: z.ZodOptional<z.ZodString>;
        orgId: z.ZodOptional<z.ZodString>;
        userId: z.ZodOptional<z.ZodString>;
        source: z.ZodOptional<z.ZodString>;
        limit: z.ZodDefault<z.ZodNumber>;
        offset: z.ZodDefault<z.ZodNumber>;
        groupBy: z.ZodOptional<z.ZodEnum<["hour", "day", "week", "month"]>>;
        aggregation: z.ZodOptional<z.ZodEnum<["count", "sum", "avg", "min", "max"]>>;
        metricField: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        orgId?: string;
        limit?: number;
        userId?: string;
        startDate?: string;
        endDate?: string;
        source?: string;
        eventTypes?: ("api_request" | "user_login" | "user_logout" | "user_action" | "page_view" | "button_click" | "company_created" | "company_updated" | "contact_created" | "contact_updated" | "deal_created" | "deal_updated" | "deal_stage_changed" | "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled" | "error_occurred" | "performance_metric" | "cost_threshold_reached" | "budget_warning" | "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync")[];
        offset?: number;
        groupBy?: "month" | "hour" | "day" | "week";
        aggregation?: "count" | "sum" | "avg" | "min" | "max";
        metricField?: string;
    }, {
        orgId?: string;
        limit?: number;
        userId?: string;
        startDate?: string;
        endDate?: string;
        source?: string;
        eventTypes?: ("api_request" | "user_login" | "user_logout" | "user_action" | "page_view" | "button_click" | "company_created" | "company_updated" | "contact_created" | "contact_updated" | "deal_created" | "deal_updated" | "deal_stage_changed" | "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled" | "error_occurred" | "performance_metric" | "cost_threshold_reached" | "budget_warning" | "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync")[];
        offset?: number;
        groupBy?: "month" | "hour" | "day" | "week";
        aggregation?: "count" | "sum" | "avg" | "min" | "max";
        metricField?: string;
    }>;
    executionTime: z.ZodOptional<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    data?: ({
        orgId?: string;
        timestamp?: string;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        sessionId?: string;
        correlationId?: string;
        source?: string;
        environment?: string;
        eventType?: "api_request" | "user_login" | "user_logout" | "user_action" | "page_view" | "button_click" | "company_created" | "company_updated" | "contact_created" | "contact_updated" | "deal_created" | "deal_updated" | "deal_stage_changed" | "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled" | "error_occurred" | "performance_metric" | "cost_threshold_reached" | "budget_warning" | "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync";
    } | {
        orgId?: string;
        timestamp?: string;
        success?: boolean;
        duration?: number;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        resource?: string;
        action?: string;
        resourceId?: string;
        sessionId?: string;
        correlationId?: string;
        errorMessage?: string;
        source?: string;
        environment?: string;
        eventType?: "user_action";
    } | {
        orgId?: string;
        inputTokens?: number;
        outputTokens?: number;
        costEur?: number;
        timestamp?: string;
        duration?: number;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        sessionId?: string;
        correlationId?: string;
        errorMessage?: string;
        provider?: string;
        source?: string;
        environment?: string;
        eventType?: "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled";
        agentId?: string;
        agentCategory?: "ventas" | "marketing" | "operaciones" | "finanzas" | "soporte_qa";
        executionId?: string;
    } | {
        path?: string;
        orgId?: string;
        timestamp?: string;
        duration?: number;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        userAgent?: string;
        sessionId?: string;
        correlationId?: string;
        method?: "GET" | "POST" | "PUT" | "DELETE" | "OPTIONS" | "PATCH";
        statusCode?: number;
        source?: string;
        environment?: string;
        ip?: string;
        eventType?: "api_request";
        requestSize?: number;
        responseSize?: number;
        referer?: string;
    } | {
        orgId?: string;
        timestamp?: string;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        sessionId?: string;
        correlationId?: string;
        tags?: Record<string, string>;
        metricName?: string;
        source?: string;
        environment?: string;
        eventType?: "performance_metric";
        metricValue?: number;
        metricUnit?: string;
    } | {
        orgId?: string;
        timestamp?: string;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        sessionId?: string;
        correlationId?: string;
        period?: "daily" | "weekly" | "monthly";
        source?: string;
        environment?: string;
        eventType?: "cost_threshold_reached" | "budget_warning";
        currentCost?: number;
        budgetLimit?: number;
        utilizationPct?: number;
        thresholdType?: "warning" | "critical" | "exceeded";
    } | {
        orgId?: string;
        timestamp?: string;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        currency?: string;
        sessionId?: string;
        correlationId?: string;
        amount?: number;
        entityType?: string;
        entityId?: string;
        source?: string;
        environment?: string;
        eventType?: "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync";
        integration?: string;
    } | {
        events?: ({
            orgId?: string;
            timestamp?: string;
            metadata?: Record<string, unknown>;
            userId?: string;
            version?: string;
            sessionId?: string;
            correlationId?: string;
            source?: string;
            environment?: string;
            eventType?: "api_request" | "user_login" | "user_logout" | "user_action" | "page_view" | "button_click" | "company_created" | "company_updated" | "contact_created" | "contact_updated" | "deal_created" | "deal_updated" | "deal_stage_changed" | "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled" | "error_occurred" | "performance_metric" | "cost_threshold_reached" | "budget_warning" | "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync";
        } | {
            orgId?: string;
            timestamp?: string;
            success?: boolean;
            duration?: number;
            metadata?: Record<string, unknown>;
            userId?: string;
            version?: string;
            resource?: string;
            action?: string;
            resourceId?: string;
            sessionId?: string;
            correlationId?: string;
            errorMessage?: string;
            source?: string;
            environment?: string;
            eventType?: "user_action";
        } | {
            orgId?: string;
            inputTokens?: number;
            outputTokens?: number;
            costEur?: number;
            timestamp?: string;
            duration?: number;
            metadata?: Record<string, unknown>;
            userId?: string;
            version?: string;
            sessionId?: string;
            correlationId?: string;
            errorMessage?: string;
            provider?: string;
            source?: string;
            environment?: string;
            eventType?: "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled";
            agentId?: string;
            agentCategory?: "ventas" | "marketing" | "operaciones" | "finanzas" | "soporte_qa";
            executionId?: string;
        } | {
            path?: string;
            orgId?: string;
            timestamp?: string;
            duration?: number;
            metadata?: Record<string, unknown>;
            userId?: string;
            version?: string;
            userAgent?: string;
            sessionId?: string;
            correlationId?: string;
            method?: "GET" | "POST" | "PUT" | "DELETE" | "OPTIONS" | "PATCH";
            statusCode?: number;
            source?: string;
            environment?: string;
            ip?: string;
            eventType?: "api_request";
            requestSize?: number;
            responseSize?: number;
            referer?: string;
        } | {
            orgId?: string;
            timestamp?: string;
            metadata?: Record<string, unknown>;
            userId?: string;
            version?: string;
            sessionId?: string;
            correlationId?: string;
            tags?: Record<string, string>;
            metricName?: string;
            source?: string;
            environment?: string;
            eventType?: "performance_metric";
            metricValue?: number;
            metricUnit?: string;
        } | {
            orgId?: string;
            timestamp?: string;
            metadata?: Record<string, unknown>;
            userId?: string;
            version?: string;
            sessionId?: string;
            correlationId?: string;
            period?: "daily" | "weekly" | "monthly";
            source?: string;
            environment?: string;
            eventType?: "cost_threshold_reached" | "budget_warning";
            currentCost?: number;
            budgetLimit?: number;
            utilizationPct?: number;
            thresholdType?: "warning" | "critical" | "exceeded";
        } | {
            orgId?: string;
            timestamp?: string;
            metadata?: Record<string, unknown>;
            userId?: string;
            version?: string;
            currency?: string;
            sessionId?: string;
            correlationId?: string;
            amount?: number;
            entityType?: string;
            entityId?: string;
            source?: string;
            environment?: string;
            eventType?: "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync";
            integration?: string;
        })[];
        count?: number;
        period?: string;
        sum?: number;
        avg?: number;
        min?: number;
        max?: number;
    })[];
    pagination?: {
        limit?: number;
        hasMore?: boolean;
        total?: number;
        offset?: number;
    };
    success?: boolean;
    query?: {
        orgId?: string;
        limit?: number;
        userId?: string;
        startDate?: string;
        endDate?: string;
        source?: string;
        eventTypes?: ("api_request" | "user_login" | "user_logout" | "user_action" | "page_view" | "button_click" | "company_created" | "company_updated" | "contact_created" | "contact_updated" | "deal_created" | "deal_updated" | "deal_stage_changed" | "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled" | "error_occurred" | "performance_metric" | "cost_threshold_reached" | "budget_warning" | "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync")[];
        offset?: number;
        groupBy?: "month" | "hour" | "day" | "week";
        aggregation?: "count" | "sum" | "avg" | "min" | "max";
        metricField?: string;
    };
    executionTime?: number;
}, {
    data?: ({
        orgId?: string;
        timestamp?: string;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        sessionId?: string;
        correlationId?: string;
        source?: string;
        environment?: string;
        eventType?: "api_request" | "user_login" | "user_logout" | "user_action" | "page_view" | "button_click" | "company_created" | "company_updated" | "contact_created" | "contact_updated" | "deal_created" | "deal_updated" | "deal_stage_changed" | "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled" | "error_occurred" | "performance_metric" | "cost_threshold_reached" | "budget_warning" | "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync";
    } | {
        orgId?: string;
        timestamp?: string;
        success?: boolean;
        duration?: number;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        resource?: string;
        action?: string;
        resourceId?: string;
        sessionId?: string;
        correlationId?: string;
        errorMessage?: string;
        source?: string;
        environment?: string;
        eventType?: "user_action";
    } | {
        orgId?: string;
        inputTokens?: number;
        outputTokens?: number;
        costEur?: number;
        timestamp?: string;
        duration?: number;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        sessionId?: string;
        correlationId?: string;
        errorMessage?: string;
        provider?: string;
        source?: string;
        environment?: string;
        eventType?: "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled";
        agentId?: string;
        agentCategory?: "ventas" | "marketing" | "operaciones" | "finanzas" | "soporte_qa";
        executionId?: string;
    } | {
        path?: string;
        orgId?: string;
        timestamp?: string;
        duration?: number;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        userAgent?: string;
        sessionId?: string;
        correlationId?: string;
        method?: "GET" | "POST" | "PUT" | "DELETE" | "OPTIONS" | "PATCH";
        statusCode?: number;
        source?: string;
        environment?: string;
        ip?: string;
        eventType?: "api_request";
        requestSize?: number;
        responseSize?: number;
        referer?: string;
    } | {
        orgId?: string;
        timestamp?: string;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        sessionId?: string;
        correlationId?: string;
        tags?: Record<string, string>;
        metricName?: string;
        source?: string;
        environment?: string;
        eventType?: "performance_metric";
        metricValue?: number;
        metricUnit?: string;
    } | {
        orgId?: string;
        timestamp?: string;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        sessionId?: string;
        correlationId?: string;
        period?: "daily" | "weekly" | "monthly";
        source?: string;
        environment?: string;
        eventType?: "cost_threshold_reached" | "budget_warning";
        currentCost?: number;
        budgetLimit?: number;
        utilizationPct?: number;
        thresholdType?: "warning" | "critical" | "exceeded";
    } | {
        orgId?: string;
        timestamp?: string;
        metadata?: Record<string, unknown>;
        userId?: string;
        version?: string;
        currency?: string;
        sessionId?: string;
        correlationId?: string;
        amount?: number;
        entityType?: string;
        entityId?: string;
        source?: string;
        environment?: string;
        eventType?: "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync";
        integration?: string;
    } | {
        events?: ({
            orgId?: string;
            timestamp?: string;
            metadata?: Record<string, unknown>;
            userId?: string;
            version?: string;
            sessionId?: string;
            correlationId?: string;
            source?: string;
            environment?: string;
            eventType?: "api_request" | "user_login" | "user_logout" | "user_action" | "page_view" | "button_click" | "company_created" | "company_updated" | "contact_created" | "contact_updated" | "deal_created" | "deal_updated" | "deal_stage_changed" | "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled" | "error_occurred" | "performance_metric" | "cost_threshold_reached" | "budget_warning" | "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync";
        } | {
            orgId?: string;
            timestamp?: string;
            success?: boolean;
            duration?: number;
            metadata?: Record<string, unknown>;
            userId?: string;
            version?: string;
            resource?: string;
            action?: string;
            resourceId?: string;
            sessionId?: string;
            correlationId?: string;
            errorMessage?: string;
            source?: string;
            environment?: string;
            eventType?: "user_action";
        } | {
            orgId?: string;
            inputTokens?: number;
            outputTokens?: number;
            costEur?: number;
            timestamp?: string;
            duration?: number;
            metadata?: Record<string, unknown>;
            userId?: string;
            version?: string;
            sessionId?: string;
            correlationId?: string;
            errorMessage?: string;
            provider?: string;
            source?: string;
            environment?: string;
            eventType?: "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled";
            agentId?: string;
            agentCategory?: "ventas" | "marketing" | "operaciones" | "finanzas" | "soporte_qa";
            executionId?: string;
        } | {
            path?: string;
            orgId?: string;
            timestamp?: string;
            duration?: number;
            metadata?: Record<string, unknown>;
            userId?: string;
            version?: string;
            userAgent?: string;
            sessionId?: string;
            correlationId?: string;
            method?: "GET" | "POST" | "PUT" | "DELETE" | "OPTIONS" | "PATCH";
            statusCode?: number;
            source?: string;
            environment?: string;
            ip?: string;
            eventType?: "api_request";
            requestSize?: number;
            responseSize?: number;
            referer?: string;
        } | {
            orgId?: string;
            timestamp?: string;
            metadata?: Record<string, unknown>;
            userId?: string;
            version?: string;
            sessionId?: string;
            correlationId?: string;
            tags?: Record<string, string>;
            metricName?: string;
            source?: string;
            environment?: string;
            eventType?: "performance_metric";
            metricValue?: number;
            metricUnit?: string;
        } | {
            orgId?: string;
            timestamp?: string;
            metadata?: Record<string, unknown>;
            userId?: string;
            version?: string;
            sessionId?: string;
            correlationId?: string;
            period?: "daily" | "weekly" | "monthly";
            source?: string;
            environment?: string;
            eventType?: "cost_threshold_reached" | "budget_warning";
            currentCost?: number;
            budgetLimit?: number;
            utilizationPct?: number;
            thresholdType?: "warning" | "critical" | "exceeded";
        } | {
            orgId?: string;
            timestamp?: string;
            metadata?: Record<string, unknown>;
            userId?: string;
            version?: string;
            currency?: string;
            sessionId?: string;
            correlationId?: string;
            amount?: number;
            entityType?: string;
            entityId?: string;
            source?: string;
            environment?: string;
            eventType?: "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync";
            integration?: string;
        })[];
        count?: number;
        period?: string;
        sum?: number;
        avg?: number;
        min?: number;
        max?: number;
    })[];
    pagination?: {
        limit?: number;
        hasMore?: boolean;
        total?: number;
        offset?: number;
    };
    success?: boolean;
    query?: {
        orgId?: string;
        limit?: number;
        userId?: string;
        startDate?: string;
        endDate?: string;
        source?: string;
        eventTypes?: ("api_request" | "user_login" | "user_logout" | "user_action" | "page_view" | "button_click" | "company_created" | "company_updated" | "contact_created" | "contact_updated" | "deal_created" | "deal_updated" | "deal_stage_changed" | "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled" | "error_occurred" | "performance_metric" | "cost_threshold_reached" | "budget_warning" | "invoice_sent" | "payment_received" | "dunning_sent" | "integration_sync")[];
        offset?: number;
        groupBy?: "month" | "hour" | "day" | "week";
        aggregation?: "count" | "sum" | "avg" | "min" | "max";
        metricField?: string;
    };
    executionTime?: number;
}>;
export type AnalyticsQueryResponse = z.infer<typeof AnalyticsQueryResponseSchema>;
//# sourceMappingURL=analytics.d.ts.map