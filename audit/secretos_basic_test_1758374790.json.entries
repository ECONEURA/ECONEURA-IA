{"path":"apps/api/backup/index.full.ts","line":"6348","string":"    const { email, username, password, roles } = req.body;","detector":"basic_grep","pattern":"password.*="},
{"path":"apps/api/backup/index.full.ts","line":"6384","string":"    const { email, password } = req.body;","detector":"basic_grep","pattern":"password.*="},
{"path":"apps/api/dist/application/use-cases/user/create-user.use-case.js","line":"27","string":"            const passwordHash = await this.hashPassword(request.password);","detector":"basic_grep","pattern":"password.*="},
{"path":"apps/api/dist/application/use-cases/user/create-user.use-case.js","line":"57","string":"        const passwordValidation = User.validatePassword(request.password);","detector":"basic_grep","pattern":"password.*="},
{"path":"apps/api/dist/domain/entities/user.entity.js","line":"81","string":"        this.props.passwordHash = newPasswordHash;","detector":"basic_grep","pattern":"password.*="},
{"path":"apps/api/dist/index.js","line":"2456","string":"        const { email, username, password, roles } = req.body;","detector":"basic_grep","pattern":"password.*="},
{"path":"apps/api/dist/index.js","line":"2491","string":"        const { email, password } = req.body;","detector":"basic_grep","pattern":"password.*="},
{"path":"apps/api/dist/lib/advanced-security.js","line":"67","string":"            const passwordHash = this.hashPassword(data.password, salt);","detector":"basic_grep","pattern":"password.*="},
{"path":"apps/api/dist/lib/advanced-security.js","line":"144","string":"            const passwordHash = this.hashPassword(password, user.salt);","detector":"basic_grep","pattern":"password.*="},
{"path":"apps/api/dist/lib/advanced-security.js","line":"145","string":"            if (passwordHash !== user.passwordHash) {","detector":"basic_grep","pattern":"password.*="},
{"path":"apps/api/dist/lib/security.js","line":"14","string":"    async createUser(email, username, password, roles = []) {","detector":"basic_grep","pattern":"password.*="},
{"path":"apps/api/dist/lib/security.js","line":"21","string":"            const passwordHash = this.hashPassword(password, salt);","detector":"basic_grep","pattern":"password.*="},
{"path":"apps/api/dist/lib/security.js","line":"75","string":"            const passwordHash = this.hashPassword(password, user.salt);","detector":"basic_grep","pattern":"password.*="},
{"path":"apps/api/dist/lib/security.js","line":"76","string":"            if (passwordHash !== user.passwordHash) {","detector":"basic_grep","pattern":"password.*="},
{"path":"apps/api/dist/lib/validation-manager.service.js","line":"142","string":"        this.customValidators.set('strongPassword', (password) => {","detector":"basic_grep","pattern":"password.*="},
{"path":"apps/api/dist/middleware/security.middleware.js","line":"237","string":"    password: body('password').isLength({ min: 8 }).matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]/),","detector":"basic_grep","pattern":"password.*="},
{"path":"apps/api/dist/routes/auth.js","line":"376","string":"router.post('/change-password', authenticateToken, async (req, res) => {","detector":"basic_grep","pattern":"password.*="},
{"path":"apps/api/src/application/use-cases/user/create-user.use-case.ts","line":"61","string":"      const passwordHash = await this.hashPassword(request.password);","detector":"basic_grep","pattern":"password.*="},
{"path":"apps/api/src/application/use-cases/user/create-user.use-case.ts","line":"101","string":"    const passwordValidation = User.validatePassword(request.password);","detector":"basic_grep","pattern":"password.*="},
{"path":"apps/api/src/domain/entities/user.entity.ts","line":"153","string":"    this.props.passwordHash = newPasswordHash;","detector":"basic_grep","pattern":"password.*="},
{"path":"apps/api/src/index.ts","line":"2931","string":"    const { email, username, password, roles } = req.body;","detector":"basic_grep","pattern":"password.*="},
{"path":"apps/api/src/index.ts","line":"2967","string":"    const { email, password } = req.body;","detector":"basic_grep","pattern":"password.*="},
{"path":"apps/api/src/lib/advanced-security.ts","line":"215","string":"      const passwordHash = this.hashPassword(data.password, salt);","detector":"basic_grep","pattern":"password.*="},
{"path":"apps/api/src/lib/advanced-security.ts","line":"307","string":"      const passwordHash = this.hashPassword(password, user.salt);","detector":"basic_grep","pattern":"password.*="},
{"path":"apps/api/src/lib/advanced-security.ts","line":"308","string":"      if (passwordHash !== user.passwordHash) {","detector":"basic_grep","pattern":"password.*="},
{"path":"apps/api/src/lib/security.ts","line":"94","string":"  async createUser(email: string, username: string, password: string, roles: string[] = []): Promise<User> {","detector":"basic_grep","pattern":"password.*="},
{"path":"apps/api/src/lib/security.ts","line":"102","string":"      const passwordHash = this.hashPassword(password, salt);","detector":"basic_grep","pattern":"password.*="},
{"path":"apps/api/src/lib/security.ts","line":"168","string":"      const passwordHash = this.hashPassword(password, user.salt);","detector":"basic_grep","pattern":"password.*="},
{"path":"apps/api/src/lib/security.ts","line":"169","string":"      if (passwordHash !== user.passwordHash) {","detector":"basic_grep","pattern":"password.*="},
{"path":"apps/api/src/lib/validation-manager.service.ts","line":"200","string":"    this.customValidators.set('strongPassword', (password: string) => {","detector":"basic_grep","pattern":"password.*="},
{"path":"apps/api/src/middleware/security.middleware.ts","line":"371","string":"  password: body('password').isLength({ min: 8 }).matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]/),","detector":"basic_grep","pattern":"password.*="},
{"path":"apps/api/src/routes/auth.ts","line":"478","string":"router.post('/change-password', authenticateToken, async (req: Request, res: Response): Promise<void> => {","detector":"basic_grep","pattern":"password.*="},
