{
  "compilerOptions": {
    "target": "ES2022",
    "module": "ESNext",
    "moduleResolution": "node",
    "allowSyntheticDefaultImports": true,
    "esModuleInterop": true,
    "allowJs": true,
    "strict": true,
    "skipLibCheck": true,
    "forceConsistentCasingInFileNames": true,
    "resolveJsonModule": true,
    "isolatedModules": true,
    "noEmit": true,
    "jsx": "preserve",
    "incremental": true,
    "baseUrl": ".",
    "paths": {
      "@/*": ["./src/*"],
      "@econeura/*": ["../../packages/*/src"]
    },
    "types": ["node"],
    "lib": ["ES2022", "DOM"],
    "outDir": "./dist",
    "rootDir": "./src",
    "declaration": true,
    "declarationMap": true,
    "sourceMap": true,
    "removeComments": false,
    "noImplicitAny": false,
    "noImplicitReturns": false,
    "noFallthroughCasesInSwitch": true,
    "noUncheckedIndexedAccess": false,
    "exactOptionalPropertyTypes": false
  },
  "include": [
    "src/index.ts",
    "src/lib/structured-logger.ts",
    "src/lib/health-modes.ts",
    "src/lib/sse-manager.ts",
    "src/lib/analytics-schemas.ts",
    "src/lib/error-handler.ts",
    "src/lib/advanced-cache.ts",
    "src/lib/health-monitor.ts",
    "src/lib/process-manager.ts",
    "src/lib/logger.ts",
    "src/lib/finops.ts",
    "src/lib/budget-manager.service.ts",
    "src/lib/cost-tracker.service.ts",
    "src/lib/cost-optimizer.service.ts",
    "src/lib/sepa-parser.service.ts",
    "src/middleware/observability.ts",
    "src/middleware/finops.ts",
    "src/routes/analytics.ts",
    "src/routes/events.ts",
    "src/routes/cockpit.ts"
  ],
  "exclude": [
    "node_modules",
    "dist",
    "build",
    "**/*.test.ts",
    "**/*.spec.ts",
    "src/lib/advanced-*.ts",
    "src/lib/ai-*.ts",
    "src/lib/security-*.ts",
    "src/lib/warmup*.ts",
    "src/lib/threat-*.ts",
    "src/lib/gdpr-*.ts",
    "src/lib/rls-*.ts",
    "src/lib/*service.ts",
    "src/routes/agents*.ts",
    "src/routes/companies*.ts",
    "src/routes/contacts*.ts",
    "src/routes/deals.ts",
    "src/routes/invoices.ts",
    "src/middleware/**/*"
  ],
  "ts-node": {
    "esm": true,
    "experimentalSpecifierResolution": "node"
  }
}