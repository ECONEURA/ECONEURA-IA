import { z } from 'zod';
export declare const AnalyticsEventType: z.ZodEnum<["user_login", "user_logout", "user_action", "page_view", "button_click", "company_created", "company_updated", "contact_created", "contact_updated", "deal_created", "deal_updated", "deal_stage_changed", "agent_started", "agent_completed", "agent_failed", "agent_cancelled", "api_request", "error_occurred", "performance_metric", "system_event"]>;
export declare const AnalyticsEventSchema: z.ZodObject<{
    eventType: z.ZodEnum<["user_login", "user_logout", "user_action", "page_view", "button_click", "company_created", "company_updated", "contact_created", "contact_updated", "deal_created", "deal_updated", "deal_stage_changed", "agent_started", "agent_completed", "agent_failed", "agent_cancelled", "api_request", "error_occurred", "performance_metric", "system_event"]>;
    timestamp: z.ZodString;
    orgId: z.ZodString;
    userId: z.ZodOptional<z.ZodString>;
    sessionId: z.ZodOptional<z.ZodString>;
    correlationId: z.ZodOptional<z.ZodString>;
    source: z.ZodDefault<z.ZodString>;
    action: z.ZodOptional<z.ZodString>;
    entity: z.ZodOptional<z.ZodString>;
    entityId: z.ZodOptional<z.ZodString>;
    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
    duration: z.ZodOptional<z.ZodNumber>;
    responseTime: z.ZodOptional<z.ZodNumber>;
    error: z.ZodOptional<z.ZodString>;
    errorCode: z.ZodOptional<z.ZodString>;
    stackTrace: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    error?: string;
    userId?: string;
    sessionId?: string;
    duration?: number;
    timestamp?: string;
    responseTime?: number;
    metadata?: Record<string, any>;
    source?: string;
    action?: string;
    eventType?: "user_action" | "system_event" | "api_request" | "user_login" | "user_logout" | "page_view" | "button_click" | "company_created" | "company_updated" | "contact_created" | "contact_updated" | "deal_created" | "deal_updated" | "deal_stage_changed" | "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled" | "error_occurred" | "performance_metric";
    orgId?: string;
    correlationId?: string;
    entityId?: string;
    entity?: string;
    stackTrace?: string;
    errorCode?: string;
}, {
    error?: string;
    userId?: string;
    sessionId?: string;
    duration?: number;
    timestamp?: string;
    responseTime?: number;
    metadata?: Record<string, any>;
    source?: string;
    action?: string;
    eventType?: "user_action" | "system_event" | "api_request" | "user_login" | "user_logout" | "page_view" | "button_click" | "company_created" | "company_updated" | "contact_created" | "contact_updated" | "deal_created" | "deal_updated" | "deal_stage_changed" | "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled" | "error_occurred" | "performance_metric";
    orgId?: string;
    correlationId?: string;
    entityId?: string;
    entity?: string;
    stackTrace?: string;
    errorCode?: string;
}>;
export declare const AnalyticsEventBatchSchema: z.ZodObject<{
    batchId: z.ZodString;
    timestamp: z.ZodString;
    events: z.ZodArray<z.ZodObject<{
        eventType: z.ZodEnum<["user_login", "user_logout", "user_action", "page_view", "button_click", "company_created", "company_updated", "contact_created", "contact_updated", "deal_created", "deal_updated", "deal_stage_changed", "agent_started", "agent_completed", "agent_failed", "agent_cancelled", "api_request", "error_occurred", "performance_metric", "system_event"]>;
        timestamp: z.ZodString;
        orgId: z.ZodString;
        userId: z.ZodOptional<z.ZodString>;
        sessionId: z.ZodOptional<z.ZodString>;
        correlationId: z.ZodOptional<z.ZodString>;
        source: z.ZodDefault<z.ZodString>;
        action: z.ZodOptional<z.ZodString>;
        entity: z.ZodOptional<z.ZodString>;
        entityId: z.ZodOptional<z.ZodString>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
        duration: z.ZodOptional<z.ZodNumber>;
        responseTime: z.ZodOptional<z.ZodNumber>;
        error: z.ZodOptional<z.ZodString>;
        errorCode: z.ZodOptional<z.ZodString>;
        stackTrace: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        error?: string;
        userId?: string;
        sessionId?: string;
        duration?: number;
        timestamp?: string;
        responseTime?: number;
        metadata?: Record<string, any>;
        source?: string;
        action?: string;
        eventType?: "user_action" | "system_event" | "api_request" | "user_login" | "user_logout" | "page_view" | "button_click" | "company_created" | "company_updated" | "contact_created" | "contact_updated" | "deal_created" | "deal_updated" | "deal_stage_changed" | "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled" | "error_occurred" | "performance_metric";
        orgId?: string;
        correlationId?: string;
        entityId?: string;
        entity?: string;
        stackTrace?: string;
        errorCode?: string;
    }, {
        error?: string;
        userId?: string;
        sessionId?: string;
        duration?: number;
        timestamp?: string;
        responseTime?: number;
        metadata?: Record<string, any>;
        source?: string;
        action?: string;
        eventType?: "user_action" | "system_event" | "api_request" | "user_login" | "user_logout" | "page_view" | "button_click" | "company_created" | "company_updated" | "contact_created" | "contact_updated" | "deal_created" | "deal_updated" | "deal_stage_changed" | "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled" | "error_occurred" | "performance_metric";
        orgId?: string;
        correlationId?: string;
        entityId?: string;
        entity?: string;
        stackTrace?: string;
        errorCode?: string;
    }>, "many">;
}, "strip", z.ZodTypeAny, {
    timestamp?: string;
    events?: {
        error?: string;
        userId?: string;
        sessionId?: string;
        duration?: number;
        timestamp?: string;
        responseTime?: number;
        metadata?: Record<string, any>;
        source?: string;
        action?: string;
        eventType?: "user_action" | "system_event" | "api_request" | "user_login" | "user_logout" | "page_view" | "button_click" | "company_created" | "company_updated" | "contact_created" | "contact_updated" | "deal_created" | "deal_updated" | "deal_stage_changed" | "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled" | "error_occurred" | "performance_metric";
        orgId?: string;
        correlationId?: string;
        entityId?: string;
        entity?: string;
        stackTrace?: string;
        errorCode?: string;
    }[];
    batchId?: string;
}, {
    timestamp?: string;
    events?: {
        error?: string;
        userId?: string;
        sessionId?: string;
        duration?: number;
        timestamp?: string;
        responseTime?: number;
        metadata?: Record<string, any>;
        source?: string;
        action?: string;
        eventType?: "user_action" | "system_event" | "api_request" | "user_login" | "user_logout" | "page_view" | "button_click" | "company_created" | "company_updated" | "contact_created" | "contact_updated" | "deal_created" | "deal_updated" | "deal_stage_changed" | "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled" | "error_occurred" | "performance_metric";
        orgId?: string;
        correlationId?: string;
        entityId?: string;
        entity?: string;
        stackTrace?: string;
        errorCode?: string;
    }[];
    batchId?: string;
}>;
export declare const AnalyticsQuerySchema: z.ZodObject<{
    orgId: z.ZodString;
    eventTypes: z.ZodOptional<z.ZodArray<z.ZodEnum<["user_login", "user_logout", "user_action", "page_view", "button_click", "company_created", "company_updated", "contact_created", "contact_updated", "deal_created", "deal_updated", "deal_stage_changed", "agent_started", "agent_completed", "agent_failed", "agent_cancelled", "api_request", "error_occurred", "performance_metric", "system_event"]>, "many">>;
    startDate: z.ZodOptional<z.ZodString>;
    endDate: z.ZodOptional<z.ZodString>;
    userId: z.ZodOptional<z.ZodString>;
    source: z.ZodOptional<z.ZodString>;
    limit: z.ZodDefault<z.ZodNumber>;
    offset: z.ZodDefault<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    userId?: string;
    limit?: number;
    source?: string;
    orgId?: string;
    startDate?: string;
    endDate?: string;
    eventTypes?: ("user_action" | "system_event" | "api_request" | "user_login" | "user_logout" | "page_view" | "button_click" | "company_created" | "company_updated" | "contact_created" | "contact_updated" | "deal_created" | "deal_updated" | "deal_stage_changed" | "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled" | "error_occurred" | "performance_metric")[];
    offset?: number;
}, {
    userId?: string;
    limit?: number;
    source?: string;
    orgId?: string;
    startDate?: string;
    endDate?: string;
    eventTypes?: ("user_action" | "system_event" | "api_request" | "user_login" | "user_logout" | "page_view" | "button_click" | "company_created" | "company_updated" | "contact_created" | "contact_updated" | "deal_created" | "deal_updated" | "deal_stage_changed" | "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled" | "error_occurred" | "performance_metric")[];
    offset?: number;
}>;
export declare const AnalyticsQueryResponseSchema: z.ZodObject<{
    success: z.ZodBoolean;
    data: z.ZodArray<z.ZodObject<{
        eventType: z.ZodEnum<["user_login", "user_logout", "user_action", "page_view", "button_click", "company_created", "company_updated", "contact_created", "contact_updated", "deal_created", "deal_updated", "deal_stage_changed", "agent_started", "agent_completed", "agent_failed", "agent_cancelled", "api_request", "error_occurred", "performance_metric", "system_event"]>;
        timestamp: z.ZodString;
        orgId: z.ZodString;
        userId: z.ZodOptional<z.ZodString>;
        sessionId: z.ZodOptional<z.ZodString>;
        correlationId: z.ZodOptional<z.ZodString>;
        source: z.ZodDefault<z.ZodString>;
        action: z.ZodOptional<z.ZodString>;
        entity: z.ZodOptional<z.ZodString>;
        entityId: z.ZodOptional<z.ZodString>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
        duration: z.ZodOptional<z.ZodNumber>;
        responseTime: z.ZodOptional<z.ZodNumber>;
        error: z.ZodOptional<z.ZodString>;
        errorCode: z.ZodOptional<z.ZodString>;
        stackTrace: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        error?: string;
        userId?: string;
        sessionId?: string;
        duration?: number;
        timestamp?: string;
        responseTime?: number;
        metadata?: Record<string, any>;
        source?: string;
        action?: string;
        eventType?: "user_action" | "system_event" | "api_request" | "user_login" | "user_logout" | "page_view" | "button_click" | "company_created" | "company_updated" | "contact_created" | "contact_updated" | "deal_created" | "deal_updated" | "deal_stage_changed" | "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled" | "error_occurred" | "performance_metric";
        orgId?: string;
        correlationId?: string;
        entityId?: string;
        entity?: string;
        stackTrace?: string;
        errorCode?: string;
    }, {
        error?: string;
        userId?: string;
        sessionId?: string;
        duration?: number;
        timestamp?: string;
        responseTime?: number;
        metadata?: Record<string, any>;
        source?: string;
        action?: string;
        eventType?: "user_action" | "system_event" | "api_request" | "user_login" | "user_logout" | "page_view" | "button_click" | "company_created" | "company_updated" | "contact_created" | "contact_updated" | "deal_created" | "deal_updated" | "deal_stage_changed" | "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled" | "error_occurred" | "performance_metric";
        orgId?: string;
        correlationId?: string;
        entityId?: string;
        entity?: string;
        stackTrace?: string;
        errorCode?: string;
    }>, "many">;
    pagination: z.ZodObject<{
        limit: z.ZodNumber;
        offset: z.ZodNumber;
        total: z.ZodNumber;
        hasMore: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        limit?: number;
        hasMore?: boolean;
        total?: number;
        offset?: number;
    }, {
        limit?: number;
        hasMore?: boolean;
        total?: number;
        offset?: number;
    }>;
    query: z.ZodObject<{
        orgId: z.ZodString;
        eventTypes: z.ZodOptional<z.ZodArray<z.ZodEnum<["user_login", "user_logout", "user_action", "page_view", "button_click", "company_created", "company_updated", "contact_created", "contact_updated", "deal_created", "deal_updated", "deal_stage_changed", "agent_started", "agent_completed", "agent_failed", "agent_cancelled", "api_request", "error_occurred", "performance_metric", "system_event"]>, "many">>;
        startDate: z.ZodOptional<z.ZodString>;
        endDate: z.ZodOptional<z.ZodString>;
        userId: z.ZodOptional<z.ZodString>;
        source: z.ZodOptional<z.ZodString>;
        limit: z.ZodDefault<z.ZodNumber>;
        offset: z.ZodDefault<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        userId?: string;
        limit?: number;
        source?: string;
        orgId?: string;
        startDate?: string;
        endDate?: string;
        eventTypes?: ("user_action" | "system_event" | "api_request" | "user_login" | "user_logout" | "page_view" | "button_click" | "company_created" | "company_updated" | "contact_created" | "contact_updated" | "deal_created" | "deal_updated" | "deal_stage_changed" | "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled" | "error_occurred" | "performance_metric")[];
        offset?: number;
    }, {
        userId?: string;
        limit?: number;
        source?: string;
        orgId?: string;
        startDate?: string;
        endDate?: string;
        eventTypes?: ("user_action" | "system_event" | "api_request" | "user_login" | "user_logout" | "page_view" | "button_click" | "company_created" | "company_updated" | "contact_created" | "contact_updated" | "deal_created" | "deal_updated" | "deal_stage_changed" | "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled" | "error_occurred" | "performance_metric")[];
        offset?: number;
    }>;
    executionTime: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    query?: {
        userId?: string;
        limit?: number;
        source?: string;
        orgId?: string;
        startDate?: string;
        endDate?: string;
        eventTypes?: ("user_action" | "system_event" | "api_request" | "user_login" | "user_logout" | "page_view" | "button_click" | "company_created" | "company_updated" | "contact_created" | "contact_updated" | "deal_created" | "deal_updated" | "deal_stage_changed" | "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled" | "error_occurred" | "performance_metric")[];
        offset?: number;
    };
    success?: boolean;
    data?: {
        error?: string;
        userId?: string;
        sessionId?: string;
        duration?: number;
        timestamp?: string;
        responseTime?: number;
        metadata?: Record<string, any>;
        source?: string;
        action?: string;
        eventType?: "user_action" | "system_event" | "api_request" | "user_login" | "user_logout" | "page_view" | "button_click" | "company_created" | "company_updated" | "contact_created" | "contact_updated" | "deal_created" | "deal_updated" | "deal_stage_changed" | "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled" | "error_occurred" | "performance_metric";
        orgId?: string;
        correlationId?: string;
        entityId?: string;
        entity?: string;
        stackTrace?: string;
        errorCode?: string;
    }[];
    pagination?: {
        limit?: number;
        hasMore?: boolean;
        total?: number;
        offset?: number;
    };
    executionTime?: number;
}, {
    query?: {
        userId?: string;
        limit?: number;
        source?: string;
        orgId?: string;
        startDate?: string;
        endDate?: string;
        eventTypes?: ("user_action" | "system_event" | "api_request" | "user_login" | "user_logout" | "page_view" | "button_click" | "company_created" | "company_updated" | "contact_created" | "contact_updated" | "deal_created" | "deal_updated" | "deal_stage_changed" | "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled" | "error_occurred" | "performance_metric")[];
        offset?: number;
    };
    success?: boolean;
    data?: {
        error?: string;
        userId?: string;
        sessionId?: string;
        duration?: number;
        timestamp?: string;
        responseTime?: number;
        metadata?: Record<string, any>;
        source?: string;
        action?: string;
        eventType?: "user_action" | "system_event" | "api_request" | "user_login" | "user_logout" | "page_view" | "button_click" | "company_created" | "company_updated" | "contact_created" | "contact_updated" | "deal_created" | "deal_updated" | "deal_stage_changed" | "agent_started" | "agent_completed" | "agent_failed" | "agent_cancelled" | "error_occurred" | "performance_metric";
        orgId?: string;
        correlationId?: string;
        entityId?: string;
        entity?: string;
        stackTrace?: string;
        errorCode?: string;
    }[];
    pagination?: {
        limit?: number;
        hasMore?: boolean;
        total?: number;
        offset?: number;
    };
    executionTime?: number;
}>;
export type AnalyticsEvent = z.infer<typeof AnalyticsEventSchema>;
export type AnalyticsEventBatch = z.infer<typeof AnalyticsEventBatchSchema>;
export type AnalyticsQuery = z.infer<typeof AnalyticsQuerySchema>;
export type AnalyticsQueryResponse = z.infer<typeof AnalyticsQueryResponseSchema>;
//# sourceMappingURL=analytics-schemas.d.ts.map