# ECONEURA API Server (Express.js) - Production Dockerfile
# Mediterranean CRM+ERP+AI System Backend

# Build stage
FROM node:18-alpine AS builder

# Install dependencies for node-gyp and Prisma
RUN apk add --no-cache libc6-compat python3 make g++ openssl

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./
COPY apps/api/package*.json ./apps/api/
COPY packages/shared/package*.json ./packages/shared/

# Install dependencies
RUN npm ci --frozen-lockfile

# Copy source code
COPY . .

# Generate Prisma client
RUN npx prisma generate

# Build the application
RUN npm run build:api

# Production stage
FROM node:18-alpine AS runner

# Install dumb-init and other runtime dependencies
RUN apk add --no-cache dumb-init curl openssl

# Create app user
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 apiuser

# Set working directory
WORKDIR /app

# Copy built application and dependencies
COPY --from=builder --chown=apiuser:nodejs /app/apps/api/dist ./apps/api/dist
COPY --from=builder --chown=apiuser:nodejs /app/node_modules ./node_modules
COPY --from=builder --chown=apiuser:nodejs /app/packages ./packages
COPY --from=builder --chown=apiuser:nodejs /app/prisma ./prisma
COPY --from=builder --chown=apiuser:nodejs /app/package*.json ./

# Copy startup script
COPY --from=builder --chown=apiuser:nodejs /app/apps/api/package.json ./apps/api/

# Create logs directory
RUN mkdir -p /app/logs && chown apiuser:nodejs /app/logs

# Switch to non-root user
USER apiuser

# Expose port
EXPOSE 8080

# Set environment
ENV NODE_ENV=production \
    PORT=8080 \
    HOST=0.0.0.0

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=10s --retries=3 \
  CMD curl -f http://localhost:8080/api/health || exit 1

# Start the application with dumb-init
ENTRYPOINT ["dumb-init", "--"]
CMD ["node", "apps/api/dist/main.js"]