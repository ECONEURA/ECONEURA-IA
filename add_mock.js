const fs = require("fs"); const content = fs.readFileSync("apps/web/src/app/api/econeura/[...path]/route.test.ts", "utf8"); const mockCode = "// Mock next/server module\\nvi.mock(\\"next/server\\", () => ({\\n  NextRequest: vi.fn((url, options) => ({\\n    url: typeof url === \\"string\\" ? url : url?.href || \\"\\",\\n    method: options?.method || \\"GET\\",\\n    headers: new Map(Object.entries(options?.headers || {})),\\n    json: vi.fn().mockResolvedValue(options?.body || {}),\\n    text: vi.fn().mockResolvedValue(JSON.stringify(options?.body || {})),\\n    clone: vi.fn(),\\n    arrayBuffer: vi.fn(),\\n    blob: vi.fn(),\\n    formData: vi.fn(),\\n  })),\\n  NextResponse: {\\n    json: vi.fn((data, options) => ({\\n      status: options?.status || 200,\\n      json: vi.fn().mockResolvedValue(data),\\n      headers: new Map(Object.entries(options?.headers || {})),\\n      ok: (options?.status || 200) < 400,\\n      clone: vi.fn(),\\n      text: vi.fn().mockResolvedValue(JSON.stringify(data)),\\n      arrayBuffer: vi.fn(),\\n      blob: vi.fn(),\\n    })),\\n    redirect: vi.fn((url, status) => ({\\n      status: status || 302,\\n      headers: new Map([[\\"Location\\", url]]),\\n      ok: false,\\n      clone: vi.fn(),\\n      text: vi.fn(),\\n      json: vi.fn(),\\n      arrayBuffer: vi.fn(),\\n      blob: vi.fn(),\\n    })),\\n    next: vi.fn(() => ({\\n      status: 200,\\n      headers: new Map(),\\n      ok: true,\\n      clone: vi.fn(),\\n      text: vi.fn(),\\n      json: vi.fn(),\\n      arrayBuffer: vi.fn(),\\n      blob: vi.fn(),\\n    })),\\n  },\\n}));\\n\\n"; const newContent = mockCode + content; fs.writeFileSync("apps/web/src/app/api/econeura/[...path]/route.test.ts", newContent); console.log("Mock added successfully");
