{
  "statistics": {
    "detectionDate": "2025-09-13T04:45:28.369Z",
    "formats": {
      "typescript": {
        "sources": {
          "packages/shared/src/notifications/templates/template-engine.ts": {
            "lines": 704,
            "tokens": 6424,
            "sources": 1,
            "clones": 20,
            "duplicatedLines": 364,
            "duplicatedTokens": 3274,
            "percentage": 51.7,
            "percentageTokens": 50.97,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/notifications/providers/sms.provider.ts": {
            "lines": 503,
            "tokens": 4380,
            "sources": 1,
            "clones": 19,
            "duplicatedLines": 201,
            "duplicatedTokens": 2163,
            "percentage": 39.96,
            "percentageTokens": 49.38,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/notifications/providers/push.provider.ts": {
            "lines": 588,
            "tokens": 5298,
            "sources": 1,
            "clones": 11,
            "duplicatedLines": 126,
            "duplicatedTokens": 1263,
            "percentage": 21.43,
            "percentageTokens": 23.84,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/notifications/providers/email.provider.ts": {
            "lines": 492,
            "tokens": 4378,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 75,
            "duplicatedTokens": 716,
            "percentage": 15.24,
            "percentageTokens": 16.35,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/types/index.ts": {
            "lines": 122,
            "tokens": 891,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/telemetry/index.ts": {
            "lines": 530,
            "tokens": 5116,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/services/webhook-manager.ts": {
            "lines": 377,
            "tokens": 2929,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/services/service-discovery.ts": {
            "lines": 252,
            "tokens": 1871,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/security/index.ts": {
            "lines": 170,
            "tokens": 1425,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/schemas/inventory.ts": {
            "lines": 141,
            "tokens": 1809,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/schemas/index.ts": {
            "lines": 193,
            "tokens": 1986,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/schemas/finance.ts": {
            "lines": 145,
            "tokens": 2192,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 26,
            "duplicatedTokens": 326,
            "percentage": 17.93,
            "percentageTokens": 14.87,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/schemas/erp.ts": {
            "lines": 261,
            "tokens": 3661,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 62,
            "percentage": 2.3,
            "percentageTokens": 1.69,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/schemas/crm.ts": {
            "lines": 164,
            "tokens": 2459,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 54,
            "duplicatedTokens": 662,
            "percentage": 32.93,
            "percentageTokens": 26.92,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/schemas/common.ts": {
            "lines": 175,
            "tokens": 2162,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 17,
            "duplicatedTokens": 219,
            "percentage": 9.71,
            "percentageTokens": 10.13,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/schemas/auth.ts": {
            "lines": 252,
            "tokens": 3352,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 13,
            "duplicatedTokens": 159,
            "percentage": 5.16,
            "percentageTokens": 4.74,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/schemas/analytics.ts": {
            "lines": 202,
            "tokens": 2089,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/rate-limiting/index.ts": {
            "lines": 499,
            "tokens": 3983,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/playbooks/dsl.ts": {
            "lines": 641,
            "tokens": 4731,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/playbooks/cfo-collection.ts": {
            "lines": 410,
            "tokens": 1973,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/otel/index.ts": {
            "lines": 114,
            "tokens": 1843,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/observability/index.ts": {
            "lines": 346,
            "tokens": 3249,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/monitoring/logger.ts": {
            "lines": 401,
            "tokens": 3333,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/middleware/telemetry.ts": {
            "lines": 67,
            "tokens": 482,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/metrics/metrics.ts": {
            "lines": 357,
            "tokens": 2977,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/logging/index.ts": {
            "lines": 217,
            "tokens": 1764,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 82,
            "percentage": 2.76,
            "percentageTokens": 4.65,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/logging/enhanced.ts": {
            "lines": 213,
            "tokens": 1854,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 82,
            "percentage": 2.82,
            "percentageTokens": 4.42,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/health/index.ts": {
            "lines": 245,
            "tokens": 1944,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 53,
            "duplicatedTokens": 548,
            "percentage": 21.63,
            "percentageTokens": 28.19,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/graph/client.ts": {
            "lines": 432,
            "tokens": 2942,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/errors/index.ts": {
            "lines": 411,
            "tokens": 3135,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/correlation/index.ts": {
            "lines": 365,
            "tokens": 2692,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/contracts/sdk.ts": {
            "lines": 458,
            "tokens": 4508,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 24,
            "duplicatedTokens": 390,
            "percentage": 5.24,
            "percentageTokens": 8.65,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/contracts/index.ts": {
            "lines": 455,
            "tokens": 5453,
            "sources": 1,
            "clones": 14,
            "duplicatedLines": 83,
            "duplicatedTokens": 1169,
            "percentage": 18.24,
            "percentageTokens": 21.44,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/clients/service-client.ts": {
            "lines": 346,
            "tokens": 2707,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/clients/index.ts": {
            "lines": 111,
            "tokens": 706,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/clients/finance-client.ts": {
            "lines": 330,
            "tokens": 2761,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/clients/example-usage.ts": {
            "lines": 245,
            "tokens": 1481,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/clients/erp-client.ts": {
            "lines": 287,
            "tokens": 2375,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/clients/crm-client.ts": {
            "lines": 343,
            "tokens": 3105,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 72,
            "duplicatedTokens": 648,
            "percentage": 20.99,
            "percentageTokens": 20.87,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/clients/base-client.ts": {
            "lines": 135,
            "tokens": 1272,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/backup/intermediate.ts": {
            "lines": 325,
            "tokens": 2607,
            "sources": 1,
            "clones": 26,
            "duplicatedLines": 658,
            "duplicatedTokens": 5732,
            "percentage": 202.46,
            "percentageTokens": 219.87,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/backup/basic.ts": {
            "lines": 136,
            "tokens": 1239,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 270,
            "duplicatedTokens": 2549,
            "percentage": 198.53,
            "percentageTokens": 205.73,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/ai/router.ts": {
            "lines": 272,
            "tokens": 2038,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/ai/providers.ts": {
            "lines": 684,
            "tokens": 5083,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/ai/enhanced-router.ts": {
            "lines": 612,
            "tokens": 4666,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/ai/cost-guardrails.ts": {
            "lines": 391,
            "tokens": 3414,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/sdk/src/resources/crm.ts": {
            "lines": 155,
            "tokens": 1758,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/sdk/src/resources/auth.ts": {
            "lines": 77,
            "tokens": 525,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/db/src/seeds/inventory.seeds.ts": {
            "lines": 332,
            "tokens": 2121,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/db/src/schema/index.ts": {
            "lines": 379,
            "tokens": 4911,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 70,
            "duplicatedTokens": 830,
            "percentage": 18.47,
            "percentageTokens": 16.9,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/index.ts": {
            "lines": 96,
            "tokens": 583,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/env.ts": {
            "lines": 63,
            "tokens": 696,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/cost-meter.ts": {
            "lines": 218,
            "tokens": 2067,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/sdk/src/index.ts": {
            "lines": 30,
            "tokens": 121,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/sdk/src/client.ts": {
            "lines": 261,
            "tokens": 2422,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 31,
            "duplicatedTokens": 380,
            "percentage": 11.88,
            "percentageTokens": 15.69,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/db/src/schema.ts": {
            "lines": 351,
            "tokens": 4433,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 20,
            "duplicatedTokens": 318,
            "percentage": 5.7,
            "percentageTokens": 7.17,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/db/src/index.ts": {
            "lines": 41,
            "tokens": 176,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/db/src/database.ts": {
            "lines": 379,
            "tokens": 2950,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/db/src/connection.ts": {
            "lines": 42,
            "tokens": 346,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/config/src/env.ts": {
            "lines": 13,
            "tokens": 175,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/agents/src/types.ts": {
            "lines": 105,
            "tokens": 1030,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/agents/memory.ts": {
            "lines": 456,
            "tokens": 2165,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/agents/connector.d.ts": {
            "lines": 314,
            "tokens": 1346,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/agents/ai-router.client.ts": {
            "lines": 349,
            "tokens": 2923,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/user/update-user.use-case.ts": {
            "lines": 149,
            "tokens": 1145,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 84,
            "percentage": 5.37,
            "percentageTokens": 7.34,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/user/delete-user.use-case.ts": {
            "lines": 85,
            "tokens": 573,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 84,
            "percentage": 9.41,
            "percentageTokens": 14.66,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/user/create-user.use-case.ts": {
            "lines": 141,
            "tokens": 1075,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/search/intelligent-search.use-case.ts": {
            "lines": 78,
            "tokens": 710,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/search/index-entity.use-case.ts": {
            "lines": 50,
            "tokens": 389,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/search/get-suggestions.use-case.ts": {
            "lines": 57,
            "tokens": 446,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/product/update-product.use-case.ts": {
            "lines": 300,
            "tokens": 2354,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 39,
            "duplicatedTokens": 303,
            "percentage": 13,
            "percentageTokens": 12.87,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/product/create-product.use-case.ts": {
            "lines": 231,
            "tokens": 1830,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 62,
            "duplicatedTokens": 446,
            "percentage": 26.84,
            "percentageTokens": 24.37,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/predictive-analytics/update-predictive-analytics.use-case.ts": {
            "lines": 146,
            "tokens": 1296,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 20,
            "duplicatedTokens": 102,
            "percentage": 13.7,
            "percentageTokens": 7.87,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/predictive-analytics/train-model.use-case.ts": {
            "lines": 204,
            "tokens": 1493,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 20,
            "duplicatedTokens": 102,
            "percentage": 9.8,
            "percentageTokens": 6.83,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/predictive-analytics/generate-prediction.use-case.ts": {
            "lines": 115,
            "tokens": 809,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/predictive-analytics/create-predictive-analytics.use-case.ts": {
            "lines": 150,
            "tokens": 1228,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 84,
            "percentage": 6.67,
            "percentageTokens": 6.84,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/invoice/update-invoice.use-case.ts": {
            "lines": 234,
            "tokens": 2007,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 37,
            "duplicatedTokens": 373,
            "percentage": 15.81,
            "percentageTokens": 18.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/invoice/create-invoice.use-case.ts": {
            "lines": 185,
            "tokens": 1645,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 37,
            "duplicatedTokens": 373,
            "percentage": 20,
            "percentageTokens": 22.67,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/inventory-kardex/update-inventory-kardex.use-case.ts": {
            "lines": 146,
            "tokens": 1275,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/inventory-kardex/record-movement.use-case.ts": {
            "lines": 206,
            "tokens": 1498,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 27,
            "duplicatedTokens": 233,
            "percentage": 13.11,
            "percentageTokens": 15.55,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/inventory-kardex/create-inventory-kardex.use-case.ts": {
            "lines": 166,
            "tokens": 1234,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 17,
            "duplicatedTokens": 135,
            "percentage": 10.24,
            "percentageTokens": 10.94,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/interaction/update-interaction.use-case.ts": {
            "lines": 388,
            "tokens": 2816,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 110,
            "duplicatedTokens": 813,
            "percentage": 28.35,
            "percentageTokens": 28.87,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/interaction/create-interaction.use-case.ts": {
            "lines": 235,
            "tokens": 1583,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 52,
            "duplicatedTokens": 358,
            "percentage": 22.13,
            "percentageTokens": 22.62,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/deal/update-deal.use-case.ts": {
            "lines": 528,
            "tokens": 4035,
            "sources": 1,
            "clones": 13,
            "duplicatedLines": 182,
            "duplicatedTokens": 1438,
            "percentage": 34.47,
            "percentageTokens": 35.64,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/deal/create-deal.use-case.ts": {
            "lines": 342,
            "tokens": 2451,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 175,
            "duplicatedTokens": 1190,
            "percentage": 51.17,
            "percentageTokens": 48.55,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/database-schema/create-database-schema.use-case.ts": {
            "lines": 369,
            "tokens": 3182,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 154,
            "duplicatedTokens": 1314,
            "percentage": 41.73,
            "percentageTokens": 41.29,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/database-schema/analyze-database-schema.use-case.ts": {
            "lines": 138,
            "tokens": 945,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 25,
            "duplicatedTokens": 161,
            "percentage": 18.12,
            "percentageTokens": 17.04,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/contact/update-contact.use-case.ts": {
            "lines": 420,
            "tokens": 3946,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 132,
            "duplicatedTokens": 1266,
            "percentage": 31.43,
            "percentageTokens": 32.08,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/contact/create-contact.use-case.ts": {
            "lines": 377,
            "tokens": 3536,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 154,
            "duplicatedTokens": 1528,
            "percentage": 40.85,
            "percentageTokens": 43.21,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/company/update-company.use-case.ts": {
            "lines": 367,
            "tokens": 3137,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 90,
            "duplicatedTokens": 749,
            "percentage": 24.52,
            "percentageTokens": 23.88,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/company/create-company.use-case.ts": {
            "lines": 310,
            "tokens": 2673,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 112,
            "duplicatedTokens": 1011,
            "percentage": 36.13,
            "percentageTokens": 37.82,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/architecture/create-architecture.use-case.ts": {
            "lines": 216,
            "tokens": 1887,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 100,
            "duplicatedTokens": 1006,
            "percentage": 46.3,
            "percentageTokens": 53.31,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/architecture/analyze-architecture.use-case.ts": {
            "lines": 120,
            "tokens": 797,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 16,
            "duplicatedTokens": 96,
            "percentage": 13.33,
            "percentageTokens": 12.05,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/shared/utils/validation.utils.ts": {
            "lines": 437,
            "tokens": 4338,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 28,
            "duplicatedTokens": 445,
            "percentage": 6.41,
            "percentageTokens": 10.26,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/shared/utils/error.utils.ts": {
            "lines": 527,
            "tokens": 4060,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/routes/user.routes.ts": {
            "lines": 213,
            "tokens": 1646,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 19,
            "duplicatedTokens": 321,
            "percentage": 8.92,
            "percentageTokens": 19.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/routes/search.routes.ts": {
            "lines": 184,
            "tokens": 952,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/routes/product.routes.ts": {
            "lines": 707,
            "tokens": 7687,
            "sources": 1,
            "clones": 65,
            "duplicatedLines": 843,
            "duplicatedTokens": 9353,
            "percentage": 119.24,
            "percentageTokens": 121.67,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/routes/predictive-analytics.routes.ts": {
            "lines": 327,
            "tokens": 3814,
            "sources": 1,
            "clones": 28,
            "duplicatedLines": 294,
            "duplicatedTokens": 4657,
            "percentage": 89.91,
            "percentageTokens": 122.1,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/routes/invoice.routes.ts": {
            "lines": 445,
            "tokens": 5260,
            "sources": 1,
            "clones": 24,
            "duplicatedLines": 246,
            "duplicatedTokens": 4041,
            "percentage": 55.28,
            "percentageTokens": 76.83,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/routes/inventory-kardex.routes.ts": {
            "lines": 390,
            "tokens": 4464,
            "sources": 1,
            "clones": 21,
            "duplicatedLines": 231,
            "duplicatedTokens": 3589,
            "percentage": 59.23,
            "percentageTokens": 80.4,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/routes/interaction.routes.ts": {
            "lines": 433,
            "tokens": 2568,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/routes/deal.routes.ts": {
            "lines": 532,
            "tokens": 3219,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/routes/contact.routes.ts": {
            "lines": 600,
            "tokens": 6971,
            "sources": 1,
            "clones": 29,
            "duplicatedLines": 395,
            "duplicatedTokens": 6543,
            "percentage": 65.83,
            "percentageTokens": 93.86,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/routes/company.routes.ts": {
            "lines": 436,
            "tokens": 5255,
            "sources": 1,
            "clones": 19,
            "duplicatedLines": 300,
            "duplicatedTokens": 4830,
            "percentage": 68.81,
            "percentageTokens": 91.91,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/routes/basic-ai.routes.ts": {
            "lines": 149,
            "tokens": 770,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/routes/architecture.routes.ts": {
            "lines": 333,
            "tokens": 3901,
            "sources": 1,
            "clones": 20,
            "duplicatedLines": 217,
            "duplicatedTokens": 3537,
            "percentage": 65.17,
            "percentageTokens": 90.67,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/routes/agents.routes.ts": {
            "lines": 387,
            "tokens": 1607,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/middleware/validation.middleware.ts": {
            "lines": 47,
            "tokens": 425,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 94,
            "percentage": 19.15,
            "percentageTokens": 22.12,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/middleware/response.middleware.ts": {
            "lines": 71,
            "tokens": 673,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/middleware/error.middleware.ts": {
            "lines": 81,
            "tokens": 688,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 94,
            "percentage": 11.11,
            "percentageTokens": 13.66,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/middleware/base.middleware.ts": {
            "lines": 268,
            "tokens": 1884,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/dto/user.dto.ts": {
            "lines": 209,
            "tokens": 2327,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 32,
            "duplicatedTokens": 404,
            "percentage": 15.31,
            "percentageTokens": 17.36,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/dto/search.dto.ts": {
            "lines": 164,
            "tokens": 1940,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 13,
            "duplicatedTokens": 258,
            "percentage": 7.93,
            "percentageTokens": 13.3,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/dto/product.dto.ts": {
            "lines": 361,
            "tokens": 4933,
            "sources": 1,
            "clones": 25,
            "duplicatedLines": 211,
            "duplicatedTokens": 2808,
            "percentage": 58.45,
            "percentageTokens": 56.92,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/dto/predictive-analytics.dto.ts": {
            "lines": 299,
            "tokens": 3865,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 57,
            "duplicatedTokens": 1273,
            "percentage": 19.06,
            "percentageTokens": 32.94,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/dto/organization.dto.ts": {
            "lines": 257,
            "tokens": 3165,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 19,
            "duplicatedTokens": 285,
            "percentage": 7.39,
            "percentageTokens": 9,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/dto/invoice.dto.ts": {
            "lines": 303,
            "tokens": 3821,
            "sources": 1,
            "clones": 13,
            "duplicatedLines": 79,
            "duplicatedTokens": 1466,
            "percentage": 26.07,
            "percentageTokens": 38.37,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/dto/inventory-kardex.dto.ts": {
            "lines": 330,
            "tokens": 4030,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 50,
            "duplicatedTokens": 1062,
            "percentage": 15.15,
            "percentageTokens": 26.35,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/dto/interaction.dto.ts": {
            "lines": 373,
            "tokens": 3719,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 116,
            "duplicatedTokens": 1097,
            "percentage": 31.1,
            "percentageTokens": 29.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/dto/deal.dto.ts": {
            "lines": 540,
            "tokens": 6070,
            "sources": 1,
            "clones": 14,
            "duplicatedLines": 214,
            "duplicatedTokens": 2523,
            "percentage": 39.63,
            "percentageTokens": 41.57,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/dto/database-schema.dto.ts": {
            "lines": 638,
            "tokens": 9058,
            "sources": 1,
            "clones": 12,
            "duplicatedLines": 122,
            "duplicatedTokens": 2012,
            "percentage": 19.12,
            "percentageTokens": 22.21,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/dto/contact.dto.ts": {
            "lines": 608,
            "tokens": 8155,
            "sources": 1,
            "clones": 20,
            "duplicatedLines": 176,
            "duplicatedTokens": 2814,
            "percentage": 28.95,
            "percentageTokens": 34.51,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/dto/company.dto.ts": {
            "lines": 428,
            "tokens": 5633,
            "sources": 1,
            "clones": 15,
            "duplicatedLines": 118,
            "duplicatedTokens": 1748,
            "percentage": 27.57,
            "percentageTokens": 31.03,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/dto/base.dto.ts": {
            "lines": 190,
            "tokens": 1605,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 16,
            "duplicatedTokens": 201,
            "percentage": 8.42,
            "percentageTokens": 12.52,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/dto/architecture.dto.ts": {
            "lines": 319,
            "tokens": 3950,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 108,
            "duplicatedTokens": 2106,
            "percentage": 33.86,
            "percentageTokens": 53.32,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/controllers/user.controller.ts": {
            "lines": 492,
            "tokens": 4132,
            "sources": 1,
            "clones": 18,
            "duplicatedLines": 270,
            "duplicatedTokens": 2146,
            "percentage": 54.88,
            "percentageTokens": 51.94,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/controllers/search.controller.ts": {
            "lines": 207,
            "tokens": 1702,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/controllers/product.controller.ts": {
            "lines": 661,
            "tokens": 6482,
            "sources": 1,
            "clones": 11,
            "duplicatedLines": 446,
            "duplicatedTokens": 4698,
            "percentage": 67.47,
            "percentageTokens": 72.48,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/controllers/predictive-analytics.controller.ts": {
            "lines": 382,
            "tokens": 3791,
            "sources": 1,
            "clones": 18,
            "duplicatedLines": 162,
            "duplicatedTokens": 1626,
            "percentage": 42.41,
            "percentageTokens": 42.89,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/controllers/invoice.controller.ts": {
            "lines": 450,
            "tokens": 4500,
            "sources": 1,
            "clones": 19,
            "duplicatedLines": 185,
            "duplicatedTokens": 1699,
            "percentage": 41.11,
            "percentageTokens": 37.76,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/controllers/inventory-kardex.controller.ts": {
            "lines": 463,
            "tokens": 4506,
            "sources": 1,
            "clones": 21,
            "duplicatedLines": 199,
            "duplicatedTokens": 2043,
            "percentage": 42.98,
            "percentageTokens": 45.34,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/controllers/interaction.controller.ts": {
            "lines": 803,
            "tokens": 7642,
            "sources": 1,
            "clones": 46,
            "duplicatedLines": 988,
            "duplicatedTokens": 9934,
            "percentage": 123.04,
            "percentageTokens": 129.99,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/controllers/company.controller.ts": {
            "lines": 745,
            "tokens": 6677,
            "sources": 1,
            "clones": 30,
            "duplicatedLines": 436,
            "duplicatedTokens": 3268,
            "percentage": 58.52,
            "percentageTokens": 48.94,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/controllers/basic-ai.controller.ts": {
            "lines": 398,
            "tokens": 2869,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 102,
            "duplicatedTokens": 754,
            "percentage": 25.63,
            "percentageTokens": 26.28,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/controllers/base.controller.ts": {
            "lines": 204,
            "tokens": 1612,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/controllers/architecture.controller.ts": {
            "lines": 430,
            "tokens": 4226,
            "sources": 1,
            "clones": 21,
            "duplicatedLines": 229,
            "duplicatedTokens": 2297,
            "percentage": 53.26,
            "percentageTokens": 54.35,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/controllers/agents.controller.ts": {
            "lines": 606,
            "tokens": 4470,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 136,
            "duplicatedTokens": 980,
            "percentage": 22.44,
            "percentageTokens": 21.92,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/system-cockpit/system-health.service.ts": {
            "lines": 483,
            "tokens": 3714,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/handlers/user-handlers.ts": {
            "lines": 179,
            "tokens": 1761,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 32,
            "duplicatedTokens": 346,
            "percentage": 17.88,
            "percentageTokens": 19.65,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/basic-ai/basic-ai.service.ts": {
            "lines": 509,
            "tokens": 3892,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 39,
            "duplicatedTokens": 408,
            "percentage": 7.66,
            "percentageTokens": 10.48,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/aggregates/user.ts": {
            "lines": 196,
            "tokens": 1323,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/infrastructure/observability/tracing.service.ts": {
            "lines": 396,
            "tokens": 3106,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 130,
            "duplicatedTokens": 1108,
            "percentage": 32.83,
            "percentageTokens": 35.67,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/infrastructure/observability/metrics.service.ts": {
            "lines": 397,
            "tokens": 3280,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/infrastructure/observability/logger.service.ts": {
            "lines": 298,
            "tokens": 2533,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/infrastructure/observability/index.ts": {
            "lines": 18,
            "tokens": 241,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/infrastructure/observability/health.service.ts": {
            "lines": 486,
            "tokens": 3807,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 88,
            "percentage": 1.44,
            "percentageTokens": 2.31,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/infrastructure/observability/dashboard.service.ts": {
            "lines": 788,
            "tokens": 6115,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 48,
            "duplicatedTokens": 372,
            "percentage": 6.09,
            "percentageTokens": 6.08,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/infrastructure/observability/alerting.service.ts": {
            "lines": 592,
            "tokens": 4863,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 95,
            "percentage": 2.03,
            "percentageTokens": 1.95,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/value-objects/money.vo.ts": {
            "lines": 276,
            "tokens": 2672,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/value-objects/email.vo.ts": {
            "lines": 109,
            "tokens": 744,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/value-objects/address.vo.ts": {
            "lines": 343,
            "tokens": 2549,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 44,
            "duplicatedTokens": 300,
            "percentage": 12.83,
            "percentageTokens": 11.77,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/services/user.domain.service.ts": {
            "lines": 407,
            "tokens": 3327,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/repositories/user.repository.ts": {
            "lines": 104,
            "tokens": 811,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/repositories/search.repository.ts": {
            "lines": 65,
            "tokens": 542,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/repositories/product.repository.ts": {
            "lines": 192,
            "tokens": 1804,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/repositories/predictive-analytics.repository.ts": {
            "lines": 272,
            "tokens": 2424,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 32,
            "duplicatedTokens": 226,
            "percentage": 11.76,
            "percentageTokens": 9.32,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/repositories/organization.repository.ts": {
            "lines": 102,
            "tokens": 739,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/repositories/invoice.repository.ts": {
            "lines": 230,
            "tokens": 2219,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/repositories/inventory-kardex.repository.ts": {
            "lines": 322,
            "tokens": 2934,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 40,
            "duplicatedTokens": 290,
            "percentage": 12.42,
            "percentageTokens": 9.88,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/repositories/interaction.repository.ts": {
            "lines": 207,
            "tokens": 2049,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 72,
            "percentage": 3.38,
            "percentageTokens": 3.51,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/repositories/deal.repository.ts": {
            "lines": 274,
            "tokens": 3075,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 72,
            "percentage": 2.55,
            "percentageTokens": 2.34,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/repositories/database-schema.repository.ts": {
            "lines": 350,
            "tokens": 3305,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 42,
            "duplicatedTokens": 306,
            "percentage": 12,
            "percentageTokens": 9.26,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/repositories/contact.repository.ts": {
            "lines": 396,
            "tokens": 4218,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 113,
            "duplicatedTokens": 902,
            "percentage": 28.54,
            "percentageTokens": 21.38,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/repositories/company.repository.ts": {
            "lines": 254,
            "tokens": 2528,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 73,
            "duplicatedTokens": 582,
            "percentage": 28.74,
            "percentageTokens": 23.02,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/repositories/base.repository.ts": {
            "lines": 89,
            "tokens": 641,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/repositories/architecture.repository.ts": {
            "lines": 270,
            "tokens": 2416,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 26,
            "duplicatedTokens": 178,
            "percentage": 9.63,
            "percentageTokens": 7.37,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/entities/user.entity.ts": {
            "lines": 323,
            "tokens": 2471,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 22,
            "duplicatedTokens": 182,
            "percentage": 6.81,
            "percentageTokens": 7.37,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/entities/search-result.entity.ts": {
            "lines": 280,
            "tokens": 2314,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 13,
            "duplicatedTokens": 258,
            "percentage": 4.64,
            "percentageTokens": 11.15,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/entities/product.entity.ts": {
            "lines": 365,
            "tokens": 3372,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 80,
            "duplicatedTokens": 484,
            "percentage": 21.92,
            "percentageTokens": 14.35,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/entities/predictive-analytics.entity.ts": {
            "lines": 442,
            "tokens": 3911,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 78,
            "duplicatedTokens": 570,
            "percentage": 17.65,
            "percentageTokens": 14.57,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/entities/organization.entity.ts": {
            "lines": 435,
            "tokens": 3304,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 93,
            "duplicatedTokens": 721,
            "percentage": 21.38,
            "percentageTokens": 21.82,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/entities/invoice.entity.ts": {
            "lines": 436,
            "tokens": 4020,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/entities/inventory-kardex.entity.ts": {
            "lines": 607,
            "tokens": 5038,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 49,
            "duplicatedTokens": 455,
            "percentage": 8.07,
            "percentageTokens": 9.03,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/entities/interaction.entity.ts": {
            "lines": 330,
            "tokens": 2781,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 101,
            "duplicatedTokens": 888,
            "percentage": 30.61,
            "percentageTokens": 31.93,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/entities/deal.entity.ts": {
            "lines": 528,
            "tokens": 4850,
            "sources": 1,
            "clones": 11,
            "duplicatedLines": 220,
            "duplicatedTokens": 1697,
            "percentage": 41.67,
            "percentageTokens": 34.99,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/entities/database-schema.entity.ts": {
            "lines": 651,
            "tokens": 5729,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 143,
            "duplicatedTokens": 999,
            "percentage": 21.97,
            "percentageTokens": 17.44,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/entities/company.entity.ts": {
            "lines": 625,
            "tokens": 5568,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 106,
            "duplicatedTokens": 1014,
            "percentage": 16.96,
            "percentageTokens": 18.21,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/entities/base.entity.ts": {
            "lines": 76,
            "tokens": 533,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/entities/architecture.entity.ts": {
            "lines": 412,
            "tokens": 3760,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 62,
            "duplicatedTokens": 434,
            "percentage": 15.05,
            "percentageTokens": 11.54,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/db/partitions/partition-manager.service.ts": {
            "lines": 529,
            "tokens": 4744,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 31,
            "duplicatedTokens": 288,
            "percentage": 5.86,
            "percentageTokens": 6.07,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/db/optimization/database-optimizer.service.ts": {
            "lines": 818,
            "tokens": 6013,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 66,
            "duplicatedTokens": 620,
            "percentage": 8.07,
            "percentageTokens": 10.31,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/db/indexes/index-manager.service.ts": {
            "lines": 418,
            "tokens": 3310,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 102,
            "percentage": 3.59,
            "percentageTokens": 3.08,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/use-cases/base.use-case.ts": {
            "lines": 116,
            "tokens": 907,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/services/user.application.service.ts": {
            "lines": 368,
            "tokens": 2874,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 38,
            "duplicatedTokens": 242,
            "percentage": 10.33,
            "percentageTokens": 8.42,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/__tests__/setup/test-setup.ts": {
            "lines": 166,
            "tokens": 1281,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workers/src/utils/metrics.ts": {
            "lines": 313,
            "tokens": 2401,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workers/src/utils/logger.ts": {
            "lines": 140,
            "tokens": 1316,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workers/src/types/email.types.ts": {
            "lines": 263,
            "tokens": 2005,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workers/src/services/graph-service.ts": {
            "lines": 317,
            "tokens": 2341,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workers/src/services/cron-service.ts": {
            "lines": 441,
            "tokens": 3412,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workers/src/queues/job-queue.ts": {
            "lines": 429,
            "tokens": 4006,
            "sources": 1,
            "clones": 13,
            "duplicatedLines": 128,
            "duplicatedTokens": 1495,
            "percentage": 29.84,
            "percentageTokens": 37.32,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workers/src/queues/job-queue-methods.ts": {
            "lines": 93,
            "tokens": 965,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 22,
            "duplicatedTokens": 281,
            "percentage": 23.66,
            "percentageTokens": 29.12,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workers/src/processors/email-processor.ts": {
            "lines": 371,
            "tokens": 3202,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 18,
            "duplicatedTokens": 196,
            "percentage": 4.85,
            "percentageTokens": 6.12,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workers/src/config/env.ts": {
            "lines": 108,
            "tokens": 987,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 76,
            "percentage": 5.56,
            "percentageTokens": 7.7,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api-neura-comet/src/svc/memory.ts": {
            "lines": 149,
            "tokens": 1246,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api-neura-comet/src/routes/chat.ts": {
            "lines": 152,
            "tokens": 1269,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api-neura-comet/src/middleware/finops.ts": {
            "lines": 84,
            "tokens": 689,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 66,
            "duplicatedTokens": 557,
            "percentage": 78.57,
            "percentageTokens": 80.84,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api-agents-make/src/svc/runs.ts": {
            "lines": 160,
            "tokens": 1066,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api-agents-make/src/routes/trigger.ts": {
            "lines": 88,
            "tokens": 684,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api-agents-make/src/routes/events.ts": {
            "lines": 87,
            "tokens": 736,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api-agents-make/src/middleware/finops.ts": {
            "lines": 80,
            "tokens": 633,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 66,
            "duplicatedTokens": 557,
            "percentage": 82.5,
            "percentageTokens": 87.99,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/types/problem-details.types.ts": {
            "lines": 49,
            "tokens": 120,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/shared/index.ts": {
            "lines": 36,
            "tokens": 127,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/web-search.service.ts": {
            "lines": 377,
            "tokens": 3691,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/stabilization.service.ts": {
            "lines": 16,
            "tokens": 142,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/sentiment-analysis.service.ts": {
            "lines": 762,
            "tokens": 7708,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 105,
            "percentage": 0.92,
            "percentageTokens": 1.36,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/security-config.service.ts": {
            "lines": 517,
            "tokens": 3598,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 79,
            "duplicatedTokens": 369,
            "percentage": 15.28,
            "percentageTokens": 10.26,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/products.service.ts": {
            "lines": 29,
            "tokens": 245,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/predictive-ai.service.ts": {
            "lines": 260,
            "tokens": 2360,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/observability-otel.service.ts": {
            "lines": 823,
            "tokens": 6587,
            "sources": 1,
            "clones": 15,
            "duplicatedLines": 212,
            "duplicatedTokens": 1646,
            "percentage": 25.76,
            "percentageTokens": 24.99,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/next-ai-platform.service.ts": {
            "lines": 963,
            "tokens": 7350,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 80,
            "duplicatedTokens": 720,
            "percentage": 8.31,
            "percentageTokens": 9.8,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/memory.service.ts": {
            "lines": 78,
            "tokens": 678,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 20,
            "duplicatedTokens": 164,
            "percentage": 25.64,
            "percentageTokens": 24.19,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/invoices.service.ts": {
            "lines": 26,
            "tokens": 231,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/health-checks.service.ts": {
            "lines": 27,
            "tokens": 199,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/external-integrations.service.ts": {
            "lines": 732,
            "tokens": 7205,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 70,
            "duplicatedTokens": 654,
            "percentage": 9.56,
            "percentageTokens": 9.08,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/document-management.service.ts": {
            "lines": 877,
            "tokens": 7303,
            "sources": 1,
            "clones": 13,
            "duplicatedLines": 129,
            "duplicatedTokens": 1427,
            "percentage": 14.71,
            "percentageTokens": 19.54,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/customer-support.service.ts": {
            "lines": 974,
            "tokens": 7868,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 54,
            "duplicatedTokens": 681,
            "percentage": 5.54,
            "percentageTokens": 8.66,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/content-management.service.ts": {
            "lines": 995,
            "tokens": 8542,
            "sources": 1,
            "clones": 14,
            "duplicatedLines": 161,
            "duplicatedTokens": 1985,
            "percentage": 16.18,
            "percentageTokens": 23.24,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/cockpit-integration.service.ts": {
            "lines": 713,
            "tokens": 6052,
            "sources": 1,
            "clones": 13,
            "duplicatedLines": 158,
            "duplicatedTokens": 1785,
            "percentage": 22.16,
            "percentageTokens": 29.49,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/cockpit-bff-live.service.ts": {
            "lines": 583,
            "tokens": 4636,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/azure-openai.service.ts": {
            "lines": 410,
            "tokens": 3408,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 36,
            "duplicatedTokens": 364,
            "percentage": 8.78,
            "percentageTokens": 10.68,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/azure-integration.service.ts": {
            "lines": 525,
            "tokens": 4101,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/automl.service.ts": {
            "lines": 356,
            "tokens": 3133,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/analytics.service.ts": {
            "lines": 31,
            "tokens": 220,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/ai-training.service.ts": {
            "lines": 834,
            "tokens": 6069,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 83,
            "percentage": 1.2,
            "percentageTokens": 1.37,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/ai-security-compliance.service.ts": {
            "lines": 928,
            "tokens": 7897,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 94,
            "duplicatedTokens": 876,
            "percentage": 10.13,
            "percentageTokens": 11.09,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/ai-performance-optimization.service.ts": {
            "lines": 917,
            "tokens": 7793,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 82,
            "duplicatedTokens": 784,
            "percentage": 8.94,
            "percentageTokens": 10.06,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/ai-model-management.service.ts": {
            "lines": 997,
            "tokens": 6877,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 83,
            "percentage": 1,
            "percentageTokens": 1.21,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/ai-dashboard-consolidation.service.ts": {
            "lines": 553,
            "tokens": 4813,
            "sources": 1,
            "clones": 13,
            "duplicatedLines": 180,
            "duplicatedTokens": 1953,
            "percentage": 32.55,
            "percentageTokens": 40.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/ai-cost-prediction.service.ts": {
            "lines": 981,
            "tokens": 8916,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 79,
            "duplicatedTokens": 764,
            "percentage": 8.05,
            "percentageTokens": 8.57,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/advanced-observability.service.ts": {
            "lines": 634,
            "tokens": 5172,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/services/advanced-cicd.service.ts": {
            "lines": 788,
            "tokens": 6289,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/security/security-manager.service.ts": {
            "lines": 853,
            "tokens": 6526,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 109,
            "percentage": 1.29,
            "percentageTokens": 1.67,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/security/rbac.service.ts": {
            "lines": 819,
            "tokens": 7534,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 12,
            "duplicatedTokens": 192,
            "percentage": 1.47,
            "percentageTokens": 2.55,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/security/mfa.service.ts": {
            "lines": 833,
            "tokens": 6076,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 109,
            "percentage": 1.32,
            "percentageTokens": 1.79,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/workflows.ts": {
            "lines": 468,
            "tokens": 3562,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 5,
            "duplicatedTokens": 73,
            "percentage": 1.07,
            "percentageTokens": 2.05,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/workers-integration.ts": {
            "lines": 330,
            "tokens": 2673,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 158,
            "duplicatedTokens": 1268,
            "percentage": 47.88,
            "percentageTokens": 47.44,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/warmup.ts": {
            "lines": 356,
            "tokens": 2806,
            "sources": 1,
            "clones": 32,
            "duplicatedLines": 180,
            "duplicatedTokens": 3255,
            "percentage": 50.56,
            "percentageTokens": 116,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/supplier-scorecard.ts": {
            "lines": 471,
            "tokens": 5091,
            "sources": 1,
            "clones": 21,
            "duplicatedLines": 211,
            "duplicatedTokens": 1889,
            "percentage": 44.8,
            "percentageTokens": 37.1,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/stripe-receipts.ts": {
            "lines": 352,
            "tokens": 3335,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 58,
            "duplicatedTokens": 477,
            "percentage": 16.48,
            "percentageTokens": 14.3,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/status.ts": {
            "lines": 457,
            "tokens": 3756,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 20,
            "duplicatedTokens": 332,
            "percentage": 4.38,
            "percentageTokens": 8.84,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/stabilization.ts": {
            "lines": 14,
            "tokens": 153,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/social-media-management.ts": {
            "lines": 673,
            "tokens": 5864,
            "sources": 1,
            "clones": 30,
            "duplicatedLines": 398,
            "duplicatedTokens": 3347,
            "percentage": 59.14,
            "percentageTokens": 57.08,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/sepa.ts": {
            "lines": 457,
            "tokens": 3784,
            "sources": 1,
            "clones": 46,
            "duplicatedLines": 492,
            "duplicatedTokens": 3914,
            "percentage": 107.66,
            "percentageTokens": 103.44,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/sepa-robust.ts": {
            "lines": 334,
            "tokens": 3434,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 97,
            "duplicatedTokens": 849,
            "percentage": 29.04,
            "percentageTokens": 24.72,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/semantic-search-crm.ts": {
            "lines": 388,
            "tokens": 4213,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 48,
            "duplicatedTokens": 474,
            "percentage": 12.37,
            "percentageTokens": 11.25,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/security.ts": {
            "lines": 875,
            "tokens": 7349,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 32,
            "duplicatedTokens": 352,
            "percentage": 3.66,
            "percentageTokens": 4.79,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/security-config.ts": {
            "lines": 526,
            "tokens": 3927,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 24,
            "duplicatedTokens": 164,
            "percentage": 4.56,
            "percentageTokens": 4.18,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/rls-tenant-policies.ts": {
            "lines": 541,
            "tokens": 4104,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 82,
            "percentage": 2.22,
            "percentageTokens": 2,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/rls-generativa.ts": {
            "lines": 391,
            "tokens": 4091,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 47,
            "duplicatedTokens": 580,
            "percentage": 12.02,
            "percentageTokens": 14.18,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/reportes-mensuales.ts": {
            "lines": 477,
            "tokens": 4551,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 42,
            "duplicatedTokens": 303,
            "percentage": 8.81,
            "percentageTokens": 6.66,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/rbac-granular.ts": {
            "lines": 357,
            "tokens": 2939,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/rate-limiting.ts": {
            "lines": 542,
            "tokens": 4400,
            "sources": 1,
            "clones": 50,
            "duplicatedLines": 424,
            "duplicatedTokens": 4660,
            "percentage": 78.23,
            "percentageTokens": 105.91,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/prompt-library.ts": {
            "lines": 182,
            "tokens": 1534,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/project-completion-deployment.ts": {
            "lines": 588,
            "tokens": 5145,
            "sources": 1,
            "clones": 13,
            "duplicatedLines": 200,
            "duplicatedTokens": 1490,
            "percentage": 34.01,
            "percentageTokens": 28.96,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/progress.ts": {
            "lines": 28,
            "tokens": 230,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/ping.ts": {
            "lines": 13,
            "tokens": 107,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/performance.ts": {
            "lines": 281,
            "tokens": 2537,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/performance-v2.ts": {
            "lines": 514,
            "tokens": 4537,
            "sources": 1,
            "clones": 21,
            "duplicatedLines": 193,
            "duplicatedTokens": 2352,
            "percentage": 37.55,
            "percentageTokens": 51.84,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/openapi.ts": {
            "lines": 298,
            "tokens": 1463,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/observability-otel.ts": {
            "lines": 608,
            "tokens": 4638,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 82,
            "duplicatedTokens": 624,
            "percentage": 13.49,
            "percentageTokens": 13.45,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/notifications.ts": {
            "lines": 931,
            "tokens": 7715,
            "sources": 1,
            "clones": 44,
            "duplicatedLines": 532,
            "duplicatedTokens": 4246,
            "percentage": 57.14,
            "percentageTokens": 55.04,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/next-ai-platform.ts": {
            "lines": 810,
            "tokens": 2585,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 119,
            "duplicatedTokens": 506,
            "percentage": 14.69,
            "percentageTokens": 19.57,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/metrics.ts": {
            "lines": 311,
            "tokens": 2589,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 63,
            "duplicatedTokens": 747,
            "percentage": 20.26,
            "percentageTokens": 28.85,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/memory.routes.ts": {
            "lines": 17,
            "tokens": 128,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/memory-management.ts": {
            "lines": 603,
            "tokens": 5372,
            "sources": 1,
            "clones": 12,
            "duplicatedLines": 132,
            "duplicatedTokens": 1417,
            "percentage": 21.89,
            "percentageTokens": 26.38,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/make-quotas.ts": {
            "lines": 275,
            "tokens": 2273,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/invoices.ts": {
            "lines": 492,
            "tokens": 4198,
            "sources": 1,
            "clones": 30,
            "duplicatedLines": 324,
            "duplicatedTokens": 3403,
            "percentage": 65.85,
            "percentageTokens": 81.06,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/inventory-kardex.ts": {
            "lines": 493,
            "tokens": 4924,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 64,
            "duplicatedTokens": 581,
            "percentage": 12.98,
            "percentageTokens": 11.8,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/interactions.ts": {
            "lines": 343,
            "tokens": 2885,
            "sources": 1,
            "clones": 15,
            "duplicatedLines": 166,
            "duplicatedTokens": 1386,
            "percentage": 48.4,
            "percentageTokens": 48.04,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/interactions-sas-av.ts": {
            "lines": 408,
            "tokens": 4612,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 67,
            "duplicatedTokens": 618,
            "percentage": 16.42,
            "percentageTokens": 13.4,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/hitl-v2.ts": {
            "lines": 518,
            "tokens": 4777,
            "sources": 1,
            "clones": 26,
            "duplicatedLines": 344,
            "duplicatedTokens": 2871,
            "percentage": 66.41,
            "percentageTokens": 60.1,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/hitl-ownership-sla.ts": {
            "lines": 631,
            "tokens": 6979,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 44,
            "duplicatedTokens": 362,
            "percentage": 6.97,
            "percentageTokens": 5.19,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/health.ts": {
            "lines": 347,
            "tokens": 2830,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 52,
            "duplicatedTokens": 442,
            "percentage": 14.99,
            "percentageTokens": 15.62,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/health-checks.ts": {
            "lines": 14,
            "tokens": 153,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/graph-wrappers.ts": {
            "lines": 560,
            "tokens": 4746,
            "sources": 1,
            "clones": 19,
            "duplicatedLines": 260,
            "duplicatedTokens": 2176,
            "percentage": 46.43,
            "percentageTokens": 45.85,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/graph-chaos-light.ts": {
            "lines": 214,
            "tokens": 1852,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/gdpr-hitl.ts": {
            "lines": 616,
            "tokens": 4802,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 18,
            "duplicatedTokens": 164,
            "percentage": 2.92,
            "percentageTokens": 3.42,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/gdpr-compliance.ts": {
            "lines": 974,
            "tokens": 7722,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 82,
            "percentage": 0.92,
            "percentageTokens": 1.06,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/fiscalidad-regional.ts": {
            "lines": 447,
            "tokens": 4636,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 27,
            "duplicatedTokens": 195,
            "percentage": 6.04,
            "percentageTokens": 4.21,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/fiscalidad-regional-ue.ts": {
            "lines": 531,
            "tokens": 4324,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 108,
            "percentage": 2.82,
            "percentageTokens": 2.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/finops-admin.ts": {
            "lines": 275,
            "tokens": 2086,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 64,
            "duplicatedTokens": 384,
            "percentage": 23.27,
            "percentageTokens": 18.41,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/external-integrations.ts": {
            "lines": 642,
            "tokens": 5116,
            "sources": 1,
            "clones": 38,
            "duplicatedLines": 458,
            "duplicatedTokens": 3633,
            "percentage": 71.34,
            "percentageTokens": 71.01,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/events.ts": {
            "lines": 136,
            "tokens": 1105,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 112,
            "percentage": 8.82,
            "percentageTokens": 10.14,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/email-marketing.ts": {
            "lines": 730,
            "tokens": 6490,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 153,
            "duplicatedTokens": 1514,
            "percentage": 20.96,
            "percentageTokens": 23.33,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/dunning-solid.ts": {
            "lines": 581,
            "tokens": 5288,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 121,
            "duplicatedTokens": 1080,
            "percentage": 20.83,
            "percentageTokens": 20.42,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/dunning-3-toques.ts": {
            "lines": 482,
            "tokens": 3923,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 124,
            "duplicatedTokens": 1056,
            "percentage": 25.73,
            "percentageTokens": 26.92,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/document-management.ts": {
            "lines": 563,
            "tokens": 4734,
            "sources": 1,
            "clones": 19,
            "duplicatedLines": 237,
            "duplicatedTokens": 2371,
            "percentage": 42.1,
            "percentageTokens": 50.08,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/dlg-grooming.ts": {
            "lines": 395,
            "tokens": 4200,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 102,
            "duplicatedTokens": 1001,
            "percentage": 25.82,
            "percentageTokens": 23.83,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/deals.ts": {
            "lines": 662,
            "tokens": 5785,
            "sources": 1,
            "clones": 25,
            "duplicatedLines": 284,
            "duplicatedTokens": 2508,
            "percentage": 42.9,
            "percentageTokens": 43.35,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/deals-nba.ts": {
            "lines": 417,
            "tokens": 3426,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 84,
            "duplicatedTokens": 769,
            "percentage": 20.14,
            "percentageTokens": 22.45,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/database-optimization.ts": {
            "lines": 577,
            "tokens": 4808,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/data-analytics-dashboard.ts": {
            "lines": 621,
            "tokens": 5540,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 100,
            "duplicatedTokens": 1320,
            "percentage": 16.1,
            "percentageTokens": 23.83,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/customer-support.ts": {
            "lines": 554,
            "tokens": 4450,
            "sources": 1,
            "clones": 13,
            "duplicatedLines": 161,
            "duplicatedTokens": 1473,
            "percentage": 29.06,
            "percentageTokens": 33.1,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/csp-sri-banking.ts": {
            "lines": 473,
            "tokens": 4080,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 74,
            "duplicatedTokens": 804,
            "percentage": 15.64,
            "percentageTokens": 19.71,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/content-management.ts": {
            "lines": 748,
            "tokens": 7107,
            "sources": 1,
            "clones": 25,
            "duplicatedLines": 348,
            "duplicatedTokens": 3805,
            "percentage": 46.52,
            "percentageTokens": 53.54,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/contacts.ts": {
            "lines": 338,
            "tokens": 2802,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 127,
            "duplicatedTokens": 1158,
            "percentage": 37.57,
            "percentageTokens": 41.33,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/contacts-simple.ts": {
            "lines": 117,
            "tokens": 985,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 64,
            "duplicatedTokens": 503,
            "percentage": 54.7,
            "percentageTokens": 51.07,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/contacts-dedupe.ts": {
            "lines": 339,
            "tokens": 3884,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 58,
            "duplicatedTokens": 766,
            "percentage": 17.11,
            "percentageTokens": 19.72,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/connection-pool.ts": {
            "lines": 739,
            "tokens": 6454,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 51,
            "duplicatedTokens": 685,
            "percentage": 6.9,
            "percentageTokens": 10.61,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/configuration.ts": {
            "lines": 575,
            "tokens": 4271,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 19,
            "duplicatedTokens": 162,
            "percentage": 3.3,
            "percentageTokens": 3.79,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/companies.ts": {
            "lines": 318,
            "tokens": 2556,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 137,
            "duplicatedTokens": 1234,
            "percentage": 43.08,
            "percentageTokens": 48.28,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/companies-taxonomy.ts": {
            "lines": 368,
            "tokens": 2801,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 21,
            "duplicatedTokens": 393,
            "percentage": 5.71,
            "percentageTokens": 14.03,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/companies-simple.ts": {
            "lines": 160,
            "tokens": 1339,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 88,
            "duplicatedTokens": 712,
            "percentage": 55,
            "percentageTokens": 53.17,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/cockpit.ts": {
            "lines": 546,
            "tokens": 5169,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/cockpit-integration.ts": {
            "lines": 352,
            "tokens": 3139,
            "sources": 1,
            "clones": 18,
            "duplicatedLines": 208,
            "duplicatedTokens": 1966,
            "percentage": 59.09,
            "percentageTokens": 62.63,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/cockpit-bff-live.ts": {
            "lines": 449,
            "tokens": 3444,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 88,
            "duplicatedTokens": 636,
            "percentage": 19.6,
            "percentageTokens": 18.47,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/centralized-logging.ts": {
            "lines": 784,
            "tokens": 7344,
            "sources": 1,
            "clones": 23,
            "duplicatedLines": 326,
            "duplicatedTokens": 2969,
            "percentage": 41.58,
            "percentageTokens": 40.43,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/cache-warmup.ts": {
            "lines": 181,
            "tokens": 1439,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/blue-green-deployment.ts": {
            "lines": 362,
            "tokens": 3608,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 30,
            "duplicatedTokens": 216,
            "percentage": 8.29,
            "percentageTokens": 5.99,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/basic-ai.ts": {
            "lines": 15,
            "tokens": 170,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/backup-recovery.ts": {
            "lines": 643,
            "tokens": 5758,
            "sources": 1,
            "clones": 18,
            "duplicatedLines": 196,
            "duplicatedTokens": 2358,
            "percentage": 30.48,
            "percentageTokens": 40.95,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/azure-integration.ts": {
            "lines": 405,
            "tokens": 3080,
            "sources": 1,
            "clones": 15,
            "duplicatedLines": 314,
            "duplicatedTokens": 2046,
            "percentage": 77.53,
            "percentageTokens": 66.43,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/automated-testing.ts": {
            "lines": 623,
            "tokens": 5517,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 177,
            "duplicatedTokens": 1390,
            "percentage": 28.41,
            "percentageTokens": 25.19,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/automated-documentation.ts": {
            "lines": 599,
            "tokens": 5232,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 96,
            "duplicatedTokens": 790,
            "percentage": 16.03,
            "percentageTokens": 15.1,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/auth.ts": {
            "lines": 602,
            "tokens": 4934,
            "sources": 1,
            "clones": 32,
            "duplicatedLines": 271,
            "duplicatedTokens": 2917,
            "percentage": 45.02,
            "percentageTokens": 59.12,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/audit-trail-crm-undo.ts": {
            "lines": 449,
            "tokens": 3985,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 56,
            "duplicatedTokens": 695,
            "percentage": 12.47,
            "percentageTokens": 17.44,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/antivirus-global.ts": {
            "lines": 511,
            "tokens": 4361,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 30,
            "duplicatedTokens": 321,
            "percentage": 5.87,
            "percentageTokens": 7.36,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/analytics.ts": {
            "lines": 14,
            "tokens": 150,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/ai-training.ts": {
            "lines": 618,
            "tokens": 4422,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 145,
            "duplicatedTokens": 893,
            "percentage": 23.46,
            "percentageTokens": 20.19,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/ai-security-compliance.ts": {
            "lines": 509,
            "tokens": 4059,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 168,
            "duplicatedTokens": 1348,
            "percentage": 33.01,
            "percentageTokens": 33.21,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/ai-performance-optimization.ts": {
            "lines": 623,
            "tokens": 4870,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 109,
            "duplicatedTokens": 971,
            "percentage": 17.5,
            "percentageTokens": 19.94,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/ai-model-management.ts": {
            "lines": 707,
            "tokens": 5527,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 155,
            "duplicatedTokens": 952,
            "percentage": 21.92,
            "percentageTokens": 17.22,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/ai-dashboard-consolidation.ts": {
            "lines": 323,
            "tokens": 2794,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 148,
            "duplicatedTokens": 1336,
            "percentage": 45.82,
            "percentageTokens": 47.82,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/ai-cost-prediction.ts": {
            "lines": 767,
            "tokens": 5725,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 88,
            "duplicatedTokens": 765,
            "percentage": 11.47,
            "percentageTokens": 13.36,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/ai-cost-optimization.ts": {
            "lines": 672,
            "tokens": 5391,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 97,
            "duplicatedTokens": 789,
            "percentage": 14.43,
            "percentageTokens": 14.64,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/ai-chat-advanced.ts": {
            "lines": 541,
            "tokens": 5073,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 107,
            "duplicatedTokens": 995,
            "percentage": 19.78,
            "percentageTokens": 19.61,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/ai-budget-ux.ts": {
            "lines": 485,
            "tokens": 3922,
            "sources": 1,
            "clones": 15,
            "duplicatedLines": 132,
            "duplicatedTokens": 1348,
            "percentage": 27.22,
            "percentageTokens": 34.37,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/ai-analytics.ts": {
            "lines": 750,
            "tokens": 2679,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 89,
            "duplicatedTokens": 220,
            "percentage": 11.87,
            "percentageTokens": 8.21,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/agents.ts": {
            "lines": 537,
            "tokens": 4454,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 86,
            "duplicatedTokens": 815,
            "percentage": 16.01,
            "percentageTokens": 18.3,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/agents-simple.ts": {
            "lines": 474,
            "tokens": 5492,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 60,
            "duplicatedTokens": 531,
            "percentage": 12.66,
            "percentageTokens": 9.67,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/advanced-security.ts": {
            "lines": 439,
            "tokens": 3553,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 74,
            "duplicatedTokens": 482,
            "percentage": 16.86,
            "percentageTokens": 13.57,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/advanced-security-framework.ts": {
            "lines": 530,
            "tokens": 3958,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/advanced-reporting.ts": {
            "lines": 470,
            "tokens": 3482,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 124,
            "duplicatedTokens": 942,
            "percentage": 26.38,
            "percentageTokens": 27.05,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/advanced-performance-monitoring.ts": {
            "lines": 449,
            "tokens": 3987,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 58,
            "duplicatedTokens": 391,
            "percentage": 12.92,
            "percentageTokens": 9.81,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/advanced-observability.ts": {
            "lines": 621,
            "tokens": 5144,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 41,
            "duplicatedTokens": 432,
            "percentage": 6.6,
            "percentageTokens": 8.4,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/advanced-metrics-alerts.ts": {
            "lines": 712,
            "tokens": 6345,
            "sources": 1,
            "clones": 13,
            "duplicatedLines": 228,
            "duplicatedTokens": 1794,
            "percentage": 32.02,
            "percentageTokens": 28.27,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/advanced-features.ts": {
            "lines": 358,
            "tokens": 4058,
            "sources": 1,
            "clones": 31,
            "duplicatedLines": 295,
            "duplicatedTokens": 3204,
            "percentage": 82.4,
            "percentageTokens": 78.96,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/advanced-error-management.ts": {
            "lines": 557,
            "tokens": 6100,
            "sources": 1,
            "clones": 11,
            "duplicatedLines": 114,
            "duplicatedTokens": 1121,
            "percentage": 20.47,
            "percentageTokens": 18.38,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/advanced-deployment-automation.ts": {
            "lines": 680,
            "tokens": 5914,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 72,
            "duplicatedTokens": 485,
            "percentage": 10.59,
            "percentageTokens": 8.2,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/advanced-configuration-management.ts": {
            "lines": 813,
            "tokens": 7240,
            "sources": 1,
            "clones": 16,
            "duplicatedLines": 172,
            "duplicatedTokens": 1802,
            "percentage": 21.16,
            "percentageTokens": 24.89,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/advanced-cicd.ts": {
            "lines": 631,
            "tokens": 4880,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 70,
            "duplicatedTokens": 516,
            "percentage": 11.09,
            "percentageTokens": 10.57,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/advanced-audit-compliance.ts": {
            "lines": 669,
            "tokens": 5371,
            "sources": 1,
            "clones": 15,
            "duplicatedLines": 105,
            "duplicatedTokens": 1491,
            "percentage": 15.7,
            "percentageTokens": 27.76,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/routes/advanced-analytics.ts": {
            "lines": 255,
            "tokens": 2297,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 83,
            "percentage": 2.35,
            "percentageTokens": 3.61,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/presentation/index.ts": {
            "lines": 55,
            "tokens": 450,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/openapi/spec.ts": {
            "lines": 579,
            "tokens": 4302,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 24,
            "duplicatedTokens": 190,
            "percentage": 4.15,
            "percentageTokens": 4.42,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/validation.ts": {
            "lines": 300,
            "tokens": 2570,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/validation.middleware.ts": {
            "lines": 147,
            "tokens": 1464,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 36,
            "duplicatedTokens": 244,
            "percentage": 24.49,
            "percentageTokens": 16.67,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/trace-propagation.middleware.ts": {
            "lines": 439,
            "tokens": 3039,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/security.ts": {
            "lines": 431,
            "tokens": 3534,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 173,
            "percentage": 4.41,
            "percentageTokens": 4.9,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/security.middleware.ts": {
            "lines": 378,
            "tokens": 3024,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 173,
            "percentage": 5.03,
            "percentageTokens": 5.72,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/security-enhanced.middleware.ts": {
            "lines": 527,
            "tokens": 3895,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 79,
            "duplicatedTokens": 369,
            "percentage": 14.99,
            "percentageTokens": 9.47,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/rls.ts": {
            "lines": 244,
            "tokens": 2011,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 126,
            "percentage": 4.51,
            "percentageTokens": 6.27,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/rls-tenant.middleware.ts": {
            "lines": 506,
            "tokens": 3876,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 126,
            "percentage": 2.17,
            "percentageTokens": 3.25,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/response-optimizer.ts": {
            "lines": 367,
            "tokens": 2842,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/rate-limiting.ts": {
            "lines": 157,
            "tokens": 1236,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/rate-limiter.ts": {
            "lines": 360,
            "tokens": 3003,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/rate-limit-org.ts": {
            "lines": 409,
            "tokens": 3375,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 16,
            "duplicatedTokens": 200,
            "percentage": 3.91,
            "percentageTokens": 5.93,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/performance.middleware.ts": {
            "lines": 325,
            "tokens": 2858,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/observability.ts": {
            "lines": 189,
            "tokens": 1779,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/metrics.ts": {
            "lines": 324,
            "tokens": 2358,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 83,
            "percentage": 2.16,
            "percentageTokens": 3.52,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/gateway.ts": {
            "lines": 279,
            "tokens": 2417,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 24,
            "duplicatedTokens": 226,
            "percentage": 8.6,
            "percentageTokens": 9.35,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/finops.ts": {
            "lines": 19,
            "tokens": 269,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/finops-enforce.ts": {
            "lines": 284,
            "tokens": 2158,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/finops-enforce-v2.ts": {
            "lines": 534,
            "tokens": 4632,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/feature-flags.ts": {
            "lines": 232,
            "tokens": 1998,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 12,
            "duplicatedTokens": 188,
            "percentage": 5.17,
            "percentageTokens": 9.41,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/error-handler.ts": {
            "lines": 343,
            "tokens": 2547,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/correlation.ts": {
            "lines": 323,
            "tokens": 2235,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/chaos.ts": {
            "lines": 115,
            "tokens": 1288,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/middleware/auth.ts": {
            "lines": 497,
            "tokens": 4124,
            "sources": 1,
            "clones": 12,
            "duplicatedLines": 129,
            "duplicatedTokens": 1215,
            "percentage": 25.96,
            "percentageTokens": 29.46,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/workflows.ts": {
            "lines": 901,
            "tokens": 8611,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 35,
            "duplicatedTokens": 300,
            "percentage": 3.88,
            "percentageTokens": 3.48,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/workflows.service.ts": {
            "lines": 691,
            "tokens": 7161,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 120,
            "percentage": 1.59,
            "percentageTokens": 1.68,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/workflows-simple.ts": {
            "lines": 43,
            "tokens": 358,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/workers-integration.service.ts": {
            "lines": 495,
            "tokens": 3497,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/warmup.service.ts": {
            "lines": 556,
            "tokens": 4518,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/warmup-types.ts": {
            "lines": 580,
            "tokens": 3874,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/warmup-system.service.ts": {
            "lines": 539,
            "tokens": 4469,
            "sources": 1,
            "clones": 14,
            "duplicatedLines": 168,
            "duplicatedTokens": 1792,
            "percentage": 31.17,
            "percentageTokens": 40.1,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/validation-manager.service.ts": {
            "lines": 484,
            "tokens": 4949,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/tracing.ts": {
            "lines": 262,
            "tokens": 2643,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 32,
            "duplicatedTokens": 362,
            "percentage": 12.21,
            "percentageTokens": 13.7,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/threat-detection.service.ts": {
            "lines": 741,
            "tokens": 6545,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/testing-framework.ts": {
            "lines": 430,
            "tokens": 3247,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/swagger-config.ts": {
            "lines": 738,
            "tokens": 4113,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/supplier-scorecard.service.ts": {
            "lines": 987,
            "tokens": 9548,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 88,
            "duplicatedTokens": 1218,
            "percentage": 8.92,
            "percentageTokens": 12.76,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/structured-logger.ts": {
            "lines": 186,
            "tokens": 2117,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/stripe-receipts.service.ts": {
            "lines": 598,
            "tokens": 5880,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 23,
            "duplicatedTokens": 357,
            "percentage": 3.85,
            "percentageTokens": 6.07,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/sse-manager.ts": {
            "lines": 270,
            "tokens": 2119,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/smart-cache.service.ts": {
            "lines": 550,
            "tokens": 4660,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/service-mesh.ts": {
            "lines": 333,
            "tokens": 2845,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/service-discovery.ts": {
            "lines": 396,
            "tokens": 3538,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/sepa.service.ts": {
            "lines": 886,
            "tokens": 8709,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 18,
            "duplicatedTokens": 309,
            "percentage": 2.03,
            "percentageTokens": 3.55,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/sepa-types.ts": {
            "lines": 67,
            "tokens": 473,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/sepa-robust.service.ts": {
            "lines": 790,
            "tokens": 7493,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 33,
            "duplicatedTokens": 413,
            "percentage": 4.18,
            "percentageTokens": 5.51,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/sepa-parser.service.ts": {
            "lines": 225,
            "tokens": 2081,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 20,
            "duplicatedTokens": 220,
            "percentage": 8.89,
            "percentageTokens": 10.57,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/semantic-search-crm.service.ts": {
            "lines": 884,
            "tokens": 8013,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 100,
            "percentage": 0.68,
            "percentageTokens": 1.25,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/security.ts": {
            "lines": 653,
            "tokens": 5407,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/security.service.ts": {
            "lines": 471,
            "tokens": 3978,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/security-types.ts": {
            "lines": 678,
            "tokens": 5177,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 20,
            "duplicatedTokens": 168,
            "percentage": 2.95,
            "percentageTokens": 3.25,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/security-manager.service.ts": {
            "lines": 623,
            "tokens": 5715,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 5,
            "duplicatedTokens": 92,
            "percentage": 0.8,
            "percentageTokens": 1.61,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/security-enhanced.service.ts": {
            "lines": 53,
            "tokens": 504,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/security-compliance-enhanced.service.ts": {
            "lines": 892,
            "tokens": 7328,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/rule-engine.service.ts": {
            "lines": 396,
            "tokens": 3483,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 90,
            "percentage": 2.78,
            "percentageTokens": 2.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/rls.ts": {
            "lines": 424,
            "tokens": 3018,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/rls-types.ts": {
            "lines": 331,
            "tokens": 2617,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/rls-policy-validator.service.ts": {
            "lines": 687,
            "tokens": 5496,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/rls-policy-generator.service.ts": {
            "lines": 716,
            "tokens": 5051,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 216,
            "duplicatedTokens": 1258,
            "percentage": 30.17,
            "percentageTokens": 24.91,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/rls-policy-deployer.service.ts": {
            "lines": 507,
            "tokens": 4456,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/rls-cicd.service.ts": {
            "lines": 652,
            "tokens": 3858,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/resource-management.service.ts": {
            "lines": 72,
            "tokens": 710,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/request-tracing.service.ts": {
            "lines": 65,
            "tokens": 555,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/reporting-engine.service.ts": {
            "lines": 654,
            "tokens": 6431,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 36,
            "duplicatedTokens": 491,
            "percentage": 5.5,
            "percentageTokens": 7.63,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/reportes-mensuales.service.ts": {
            "lines": 866,
            "tokens": 7192,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/reconciliation.service.ts": {
            "lines": 204,
            "tokens": 1772,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/real-time-collaboration.ts": {
            "lines": 851,
            "tokens": 7450,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 24,
            "duplicatedTokens": 170,
            "percentage": 2.82,
            "percentageTokens": 2.28,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/rbac.service.ts": {
            "lines": 693,
            "tokens": 6157,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/rbac-simple.ts": {
            "lines": 189,
            "tokens": 1803,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 178,
            "duplicatedTokens": 1628,
            "percentage": 94.18,
            "percentageTokens": 90.29,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/rbac-granular.ts": {
            "lines": 382,
            "tokens": 3378,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 102,
            "duplicatedTokens": 903,
            "percentage": 26.7,
            "percentageTokens": 26.73,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/rbac-basic.ts": {
            "lines": 174,
            "tokens": 1545,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 102,
            "duplicatedTokens": 931,
            "percentage": 58.62,
            "percentageTokens": 60.26,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/rate-limiting.ts": {
            "lines": 321,
            "tokens": 3009,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/rate-limiting.service.ts": {
            "lines": 65,
            "tokens": 552,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/quiet-hours.service.ts": {
            "lines": 373,
            "tokens": 3282,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/quiet-hours-types.ts": {
            "lines": 484,
            "tokens": 3367,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/prompt-library.service.ts": {
            "lines": 164,
            "tokens": 1609,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/process-manager.ts": {
            "lines": 453,
            "tokens": 3803,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/performance-optimizer.ts": {
            "lines": 439,
            "tokens": 3540,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/performance-optimizer.service.ts": {
            "lines": 576,
            "tokens": 4123,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 66,
            "duplicatedTokens": 620,
            "percentage": 11.46,
            "percentageTokens": 15.04,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/performance-optimizer-v3.service.ts": {
            "lines": 500,
            "tokens": 3703,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 124,
            "percentage": 2.4,
            "percentageTokens": 3.35,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/performance-optimizer-v2.service.ts": {
            "lines": 685,
            "tokens": 4845,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 14,
            "duplicatedTokens": 220,
            "percentage": 2.04,
            "percentageTokens": 4.54,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/performance-optimization.service.ts": {
            "lines": 553,
            "tokens": 4948,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/oncall.service.ts": {
            "lines": 408,
            "tokens": 3464,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 22,
            "duplicatedTokens": 436,
            "percentage": 5.39,
            "percentageTokens": 12.59,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/observability.ts": {
            "lines": 32,
            "tokens": 246,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/notification-intelligence.service.ts": {
            "lines": 585,
            "tokens": 4886,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/monitoring.service.ts": {
            "lines": 707,
            "tokens": 6418,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/monitoring-alerts.service.ts": {
            "lines": 641,
            "tokens": 5092,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 24,
            "duplicatedTokens": 204,
            "percentage": 3.74,
            "percentageTokens": 4.01,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/metrics.ts": {
            "lines": 285,
            "tokens": 2806,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/memory-manager.service.ts": {
            "lines": 676,
            "tokens": 5412,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 30,
            "duplicatedTokens": 536,
            "percentage": 4.44,
            "percentageTokens": 9.9,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/matching-engine.service.ts": {
            "lines": 241,
            "tokens": 2158,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 90,
            "percentage": 4.56,
            "percentageTokens": 4.17,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/make-quotas.service.ts": {
            "lines": 249,
            "tokens": 2271,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/logger.ts": {
            "lines": 452,
            "tokens": 3741,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/inventory.ts": {
            "lines": 964,
            "tokens": 9266,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/inventory-kardex.service.ts": {
            "lines": 942,
            "tokens": 9050,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 42,
            "duplicatedTokens": 600,
            "percentage": 4.46,
            "percentageTokens": 6.63,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/interactions.service.ts": {
            "lines": 646,
            "tokens": 6612,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 38,
            "duplicatedTokens": 511,
            "percentage": 5.88,
            "percentageTokens": 7.73,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/intelligent-search.service.ts": {
            "lines": 511,
            "tokens": 4379,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/intelligent-reporting.service.ts": {
            "lines": 662,
            "tokens": 6117,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 32,
            "duplicatedTokens": 313,
            "percentage": 4.83,
            "percentageTokens": 5.12,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/integrations.ts": {
            "lines": 216,
            "tokens": 1878,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/hitl-v2.service.ts": {
            "lines": 614,
            "tokens": 5653,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 14,
            "duplicatedTokens": 230,
            "percentage": 2.28,
            "percentageTokens": 4.07,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/health-monitor.ts": {
            "lines": 523,
            "tokens": 4729,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 88,
            "percentage": 1.34,
            "percentageTokens": 1.86,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/health-modes.ts": {
            "lines": 209,
            "tokens": 1837,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/health-check.service.ts": {
            "lines": 327,
            "tokens": 2692,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/graph-wrappers.service.ts": {
            "lines": 621,
            "tokens": 4722,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 16,
            "duplicatedTokens": 170,
            "percentage": 2.58,
            "percentageTokens": 3.6,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/graph-chaos-light.service.ts": {
            "lines": 369,
            "tokens": 3036,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/graceful-shutdown.service.ts": {
            "lines": 60,
            "tokens": 498,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/gdpr-types.ts": {
            "lines": 185,
            "tokens": 1436,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/gdpr-export.service.ts": {
            "lines": 417,
            "tokens": 3585,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/gdpr-erase.service.ts": {
            "lines": 423,
            "tokens": 3841,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/gdpr-audit.service.ts": {
            "lines": 435,
            "tokens": 3580,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/gateway.ts": {
            "lines": 487,
            "tokens": 4361,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/fiscalidad-regional.service.ts": {
            "lines": 821,
            "tokens": 7125,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/fiscalidad-regional-ue.service.ts": {
            "lines": 614,
            "tokens": 5209,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/finops.ts": {
            "lines": 560,
            "tokens": 5584,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/finops-types.ts": {
            "lines": 439,
            "tokens": 3596,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/executive-dashboard.service.ts": {
            "lines": 708,
            "tokens": 6584,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 31,
            "duplicatedTokens": 341,
            "percentage": 4.38,
            "percentageTokens": 5.18,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/events.ts": {
            "lines": 531,
            "tokens": 4572,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 16,
            "duplicatedTokens": 158,
            "percentage": 3.01,
            "percentageTokens": 3.46,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/escalation.service.ts": {
            "lines": 462,
            "tokens": 3700,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/error-recovery.service.ts": {
            "lines": 56,
            "tokens": 593,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/error-manager.service.ts": {
            "lines": 537,
            "tokens": 4743,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 5,
            "duplicatedTokens": 92,
            "percentage": 0.93,
            "percentageTokens": 1.94,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/error-handler.ts": {
            "lines": 248,
            "tokens": 2027,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/error-handler.service.ts": {
            "lines": 444,
            "tokens": 3427,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/dunning-solid.service.ts": {
            "lines": 707,
            "tokens": 6245,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/dunning-3-toques.service.ts": {
            "lines": 565,
            "tokens": 4859,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/distributed-cache.ts": {
            "lines": 531,
            "tokens": 4016,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/deals.service.ts": {
            "lines": 698,
            "tokens": 6997,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 68,
            "duplicatedTokens": 787,
            "percentage": 9.74,
            "percentageTokens": 11.25,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/deals-nba.service.ts": {
            "lines": 554,
            "tokens": 5183,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 35,
            "duplicatedTokens": 379,
            "percentage": 6.32,
            "percentageTokens": 7.31,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/database.ts": {
            "lines": 88,
            "tokens": 769,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/database-pool.ts": {
            "lines": 574,
            "tokens": 5007,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/data-validator.ts": {
            "lines": 597,
            "tokens": 4672,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/data-encryption.service.ts": {
            "lines": 66,
            "tokens": 648,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/data-analytics-dashboard.service.ts": {
            "lines": 959,
            "tokens": 9080,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 94,
            "duplicatedTokens": 1253,
            "percentage": 9.8,
            "percentageTokens": 13.8,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/csp-sri-banking.service.ts": {
            "lines": 705,
            "tokens": 6751,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 29,
            "duplicatedTokens": 335,
            "percentage": 4.11,
            "percentageTokens": 4.96,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/cost-tracker.service.ts": {
            "lines": 546,
            "tokens": 5418,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 117,
            "percentage": 1.47,
            "percentageTokens": 2.16,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/cost-optimizer.service.ts": {
            "lines": 617,
            "tokens": 5611,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/contacts-dedupe.service.ts": {
            "lines": 652,
            "tokens": 5997,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 58,
            "duplicatedTokens": 900,
            "percentage": 8.9,
            "percentageTokens": 15.01,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/connection-pool.service.ts": {
            "lines": 837,
            "tokens": 6772,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/configuration.ts": {
            "lines": 513,
            "tokens": 4543,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/configuration.service.ts": {
            "lines": 479,
            "tokens": 4613,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 26,
            "duplicatedTokens": 411,
            "percentage": 5.43,
            "percentageTokens": 8.91,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/config-validation.service.ts": {
            "lines": 55,
            "tokens": 542,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/comprehensive-audit.service.ts": {
            "lines": 854,
            "tokens": 8126,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 83,
            "percentage": 0.7,
            "percentageTokens": 1.02,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/compliance-management.service.ts": {
            "lines": 649,
            "tokens": 5832,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 20,
            "duplicatedTokens": 255,
            "percentage": 3.08,
            "percentageTokens": 4.37,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/companies-taxonomy.service.ts": {
            "lines": 195,
            "tokens": 1811,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/circuit-breaker.service.ts": {
            "lines": 284,
            "tokens": 2196,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/centralized-logging.service.ts": {
            "lines": 973,
            "tokens": 9813,
            "sources": 1,
            "clones": 12,
            "duplicatedLines": 147,
            "duplicatedTokens": 1693,
            "percentage": 15.11,
            "percentageTokens": 17.25,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/cache.ts": {
            "lines": 372,
            "tokens": 3244,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/cache.service.ts": {
            "lines": 408,
            "tokens": 3411,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 129,
            "percentage": 3.68,
            "percentageTokens": 3.78,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/cache-warmup.service.ts": {
            "lines": 334,
            "tokens": 2583,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/cache-manager.service.ts": {
            "lines": 488,
            "tokens": 3996,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/business-intelligence.service.ts": {
            "lines": 739,
            "tokens": 6738,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/budget-manager.service.ts": {
            "lines": 575,
            "tokens": 5577,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/blue-green-deployment.service.ts": {
            "lines": 858,
            "tokens": 7565,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 102,
            "percentage": 0.93,
            "percentageTokens": 1.35,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/backup-recovery.service.ts": {
            "lines": 979,
            "tokens": 9246,
            "sources": 1,
            "clones": 12,
            "duplicatedLines": 166,
            "duplicatedTokens": 1714,
            "percentage": 16.96,
            "percentageTokens": 18.54,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/backup-recovery-automated.service.ts": {
            "lines": 850,
            "tokens": 7229,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 14,
            "duplicatedTokens": 188,
            "percentage": 1.65,
            "percentageTokens": 2.6,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/automated-testing.service.ts": {
            "lines": 743,
            "tokens": 7517,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/auth.service.ts": {
            "lines": 593,
            "tokens": 4734,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 35,
            "duplicatedTokens": 381,
            "percentage": 5.9,
            "percentageTokens": 8.05,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/audit-trail-crm-undo.service.ts": {
            "lines": 604,
            "tokens": 4946,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 116,
            "percentage": 1.66,
            "percentageTokens": 2.35,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/api-versioning.service.ts": {
            "lines": 540,
            "tokens": 4302,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/api-gateway.service.ts": {
            "lines": 543,
            "tokens": 4016,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/api-gateway-enhanced.service.ts": {
            "lines": 732,
            "tokens": 6209,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/antivirus-global.service.ts": {
            "lines": 554,
            "tokens": 4647,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 14,
            "duplicatedTokens": 145,
            "percentage": 2.53,
            "percentageTokens": 3.12,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/analytics.ts": {
            "lines": 887,
            "tokens": 7697,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 12,
            "duplicatedTokens": 136,
            "percentage": 1.35,
            "percentageTokens": 1.77,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/analytics-types.ts": {
            "lines": 547,
            "tokens": 3736,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/analytics-schemas.ts": {
            "lines": 89,
            "tokens": 796,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 5,
            "duplicatedTokens": 59,
            "percentage": 5.62,
            "percentageTokens": 7.41,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/alerts.ts": {
            "lines": 496,
            "tokens": 4458,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 112,
            "percentage": 2.22,
            "percentageTokens": 2.51,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/alerting-system.ts": {
            "lines": 590,
            "tokens": 4361,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 88,
            "duplicatedTokens": 602,
            "percentage": 14.92,
            "percentageTokens": 13.8,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/ai-router.ts": {
            "lines": 42,
            "tokens": 303,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/ai-ml-types.ts": {
            "lines": 401,
            "tokens": 2947,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/ai-chat-advanced.service.ts": {
            "lines": 812,
            "tokens": 7720,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/ai-budget-ux.service.ts": {
            "lines": 679,
            "tokens": 6466,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/agent-runtime.service.ts": {
            "lines": 827,
            "tokens": 6980,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 45,
            "duplicatedTokens": 532,
            "percentage": 5.44,
            "percentageTokens": 7.62,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/advanced-search.ts": {
            "lines": 683,
            "tokens": 6402,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/advanced-rate-limiter.ts": {
            "lines": 427,
            "tokens": 3316,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/advanced-performance-monitoring.service.ts": {
            "lines": 850,
            "tokens": 8230,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 12,
            "duplicatedTokens": 180,
            "percentage": 1.41,
            "percentageTokens": 2.19,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/advanced-monitoring-alerts.service.ts": {
            "lines": 792,
            "tokens": 6694,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 124,
            "percentage": 1.52,
            "percentageTokens": 1.85,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/advanced-metrics-alerts.service.ts": {
            "lines": 894,
            "tokens": 9179,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 36,
            "duplicatedTokens": 451,
            "percentage": 4.03,
            "percentageTokens": 4.91,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/advanced-configuration-management.service.ts": {
            "lines": 873,
            "tokens": 8550,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 65,
            "duplicatedTokens": 1003,
            "percentage": 7.45,
            "percentageTokens": 11.73,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/advanced-cache.ts": {
            "lines": 519,
            "tokens": 4403,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 129,
            "percentage": 2.89,
            "percentageTokens": 2.93,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/advanced-audit-compliance.service.ts": {
            "lines": 654,
            "tokens": 6347,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 181,
            "percentage": 1.83,
            "percentageTokens": 2.85,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/advanced-analytics.ts": {
            "lines": 380,
            "tokens": 4049,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 181,
            "percentage": 3.16,
            "percentageTokens": 4.47,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/lib/advanced-analytics.service.ts": {
            "lines": 707,
            "tokens": 7025,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 89,
            "percentage": 0.85,
            "percentageTokens": 1.27,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/domain/index.ts": {
            "lines": 68,
            "tokens": 981,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/db/migrations.ts": {
            "lines": 199,
            "tokens": 1906,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/db/memory.repo.ts": {
            "lines": 160,
            "tokens": 1817,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 31,
            "duplicatedTokens": 380,
            "percentage": 19.38,
            "percentageTokens": 20.91,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/controllers/memory.controller.ts": {
            "lines": 118,
            "tokens": 955,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 46,
            "duplicatedTokens": 320,
            "percentage": 38.98,
            "percentageTokens": 33.51,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/controllers/advanced-features.controller.ts": {
            "lines": 665,
            "tokens": 6061,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 68,
            "duplicatedTokens": 678,
            "percentage": 10.23,
            "percentageTokens": 11.19,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/config/env.ts": {
            "lines": 133,
            "tokens": 1217,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 76,
            "percentage": 4.51,
            "percentageTokens": 6.24,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/application/index.ts": {
            "lines": 63,
            "tokens": 809,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workers/src/index.ts": {
            "lines": 572,
            "tokens": 5882,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workers/src/bootstrap.example.ts": {
            "lines": 220,
            "tokens": 1604,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 89,
            "percentage": 4.55,
            "percentageTokens": 5.55,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/voice/src/voice-recognition.ts": {
            "lines": 166,
            "tokens": 1224,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api-neura-comet/src/server.ts": {
            "lines": 77,
            "tokens": 570,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 51,
            "duplicatedTokens": 406,
            "percentage": 66.23,
            "percentageTokens": 71.23,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api-agents-make/src/server.ts": {
            "lines": 76,
            "tokens": 583,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 51,
            "duplicatedTokens": 406,
            "percentage": 67.11,
            "percentageTokens": 69.64,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/tests/setup-e2e.ts": {
            "lines": 80,
            "tokens": 469,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/test-e2e-advanced.ts": {
            "lines": 305,
            "tokens": 2196,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/test-all-endpoints.ts": {
            "lines": 235,
            "tokens": 2043,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/index.final.ts": {
            "lines": 860,
            "tokens": 7197,
            "sources": 1,
            "clones": 18,
            "duplicatedLines": 551,
            "duplicatedTokens": 5105,
            "percentage": 64.07,
            "percentageTokens": 70.93,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/index.expanded.ts": {
            "lines": 272,
            "tokens": 2058,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 719,
            "duplicatedTokens": 5557,
            "percentage": 264.34,
            "percentageTokens": 270.02,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/src/bootstrap.example.ts": {
            "lines": 152,
            "tokens": 966,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 89,
            "percentage": 6.58,
            "percentageTokens": 9.21,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/scripts/rollback.ts": {
            "lines": 81,
            "tokens": 776,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/scripts/openapi.ts": {
            "lines": 650,
            "tokens": 4210,
            "sources": 1,
            "clones": 11,
            "duplicatedLines": 112,
            "duplicatedTokens": 1147,
            "percentage": 17.23,
            "percentageTokens": 27.24,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/scripts/generate-openapi.ts": {
            "lines": 590,
            "tokens": 5143,
            "sources": 1,
            "clones": 12,
            "duplicatedLines": 138,
            "duplicatedTokens": 1764,
            "percentage": 23.39,
            "percentageTokens": 34.3,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/prisma/seed.improved.ts": {
            "lines": 573,
            "tokens": 5741,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/backup/index.working.backup.ts": {
            "lines": 621,
            "tokens": 4913,
            "sources": 1,
            "clones": 22,
            "duplicatedLines": 611,
            "duplicatedTokens": 4764,
            "percentage": 98.39,
            "percentageTokens": 96.97,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/backup/index.restored.backup.ts": {
            "lines": 165,
            "tokens": 1385,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 285,
            "duplicatedTokens": 2476,
            "percentage": 172.73,
            "percentageTokens": 178.77,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/backup/index.minimal.ts": {
            "lines": 135,
            "tokens": 1221,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 132,
            "duplicatedTokens": 1192,
            "percentage": 97.78,
            "percentageTokens": 97.62,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/backup/index.mega.ts": {
            "lines": 531,
            "tokens": 4174,
            "sources": 1,
            "clones": 11,
            "duplicatedLines": 649,
            "duplicatedTokens": 4825,
            "percentage": 122.22,
            "percentageTokens": 115.6,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/backup/index.intermediate.backup.ts": {
            "lines": 323,
            "tokens": 2610,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 323,
            "duplicatedTokens": 2590,
            "percentage": 100,
            "percentageTokens": 99.23,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/backup/index.expanded.ts": {
            "lines": 272,
            "tokens": 2058,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 272,
            "duplicatedTokens": 2058,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/backup/index.expanded.backup.ts": {
            "lines": 272,
            "tokens": 2058,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 272,
            "duplicatedTokens": 2058,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 231892,
          "tokens": 2008482,
          "sources": 556,
          "clones": 1225,
          "duplicatedLines": 17052,
          "duplicatedTokens": 167549,
          "percentage": 7.35,
          "percentageTokens": 8.34,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "javascript": {
        "sources": {
          "packages/shared/src/metrics/index.js": {
            "lines": 314,
            "tokens": 2872,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/logging/index.js": {
            "lines": 115,
            "tokens": 914,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/ai/providers.js": {
            "lines": 541,
            "tokens": 4251,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/ai/enhanced-router.js": {
            "lines": 482,
            "tokens": 4104,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/src/ai/cost-guardrails.js": {
            "lines": 285,
            "tokens": 2802,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workers/tests/stress-test.js": {
            "lines": 173,
            "tokens": 1711,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workers/tests/load-test.js": {
            "lines": 157,
            "tokens": 1575,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workers/scripts/optimize.js": {
            "lines": 352,
            "tokens": 2850,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workers/scripts/monitor.js": {
            "lines": 358,
            "tokens": 3381,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workers/.eslintrc.cjs": {
            "lines": 93,
            "tokens": 609,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 2870,
          "tokens": 25069,
          "sources": 10,
          "clones": 0,
          "duplicatedLines": 0,
          "duplicatedTokens": 0,
          "percentage": 0,
          "percentageTokens": 0,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "json": {
        "sources": {
          "packages/shared/tsconfig.json": {
            "lines": 13,
            "tokens": 93,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 13,
            "duplicatedTokens": 93,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/shared/package.json": {
            "lines": 58,
            "tokens": 350,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/sdk/tsconfig.json": {
            "lines": 25,
            "tokens": 142,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/sdk/package.json": {
            "lines": 33,
            "tokens": 197,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/db/tsconfig.json": {
            "lines": 13,
            "tokens": 93,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 13,
            "duplicatedTokens": 93,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/db/package.json": {
            "lines": 56,
            "tokens": 341,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/config/package.json": {
            "lines": 14,
            "tokens": 77,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/agents/tsconfig.json": {
            "lines": 23,
            "tokens": 128,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "packages/agents/package.json": {
            "lines": 23,
            "tokens": 135,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workers/tsconfig.json": {
            "lines": 35,
            "tokens": 210,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workers/package.json": {
            "lines": 54,
            "tokens": 357,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api-neura-comet/package.json": {
            "lines": 34,
            "tokens": 217,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 17,
            "duplicatedTokens": 109,
            "percentage": 50,
            "percentageTokens": 50.23,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api-agents-make/package.json": {
            "lines": 33,
            "tokens": 210,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 17,
            "duplicatedTokens": 109,
            "percentage": 51.52,
            "percentageTokens": 51.9,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/tsconfig.json": {
            "lines": 20,
            "tokens": 149,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/package.json": {
            "lines": 86,
            "tokens": 576,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 520,
          "tokens": 3275,
          "sources": 15,
          "clones": 2,
          "duplicatedLines": 30,
          "duplicatedTokens": 202,
          "percentage": 5.77,
          "percentageTokens": 6.17,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "yaml": {
        "sources": {
          "apps/api/openapi/openapi.yaml": {
            "lines": 192,
            "tokens": 1079,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/api/openapi.yaml": {
            "lines": 691,
            "tokens": 3755,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 134,
            "duplicatedTokens": 706,
            "percentage": 19.39,
            "percentageTokens": 18.8,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 883,
          "tokens": 4834,
          "sources": 2,
          "clones": 2,
          "duplicatedLines": 67,
          "duplicatedTokens": 353,
          "percentage": 7.59,
          "percentageTokens": 7.3,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "markdown": {
        "sources": {
          "apps/workers/README.md": {
            "lines": 209,
            "tokens": 1461,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workers/FASE4-OPTIMIZATIONS.md": {
            "lines": 204,
            "tokens": 1975,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/voice/README.md": {
            "lines": 64,
            "tokens": 398,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 477,
          "tokens": 3834,
          "sources": 3,
          "clones": 0,
          "duplicatedLines": 0,
          "duplicatedTokens": 0,
          "percentage": 0,
          "percentageTokens": 0,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      }
    },
    "total": {
      "lines": 236642,
      "tokens": 2045494,
      "sources": 586,
      "clones": 1229,
      "duplicatedLines": 17149,
      "duplicatedTokens": 168104,
      "percentage": 7.25,
      "percentageTokens": 8.22,
      "newDuplicatedLines": 0,
      "newClones": 0
    }
  },
  "duplicates": [
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "> = new Map();\n  private cache: Map<string, TemplateRenderResult> = new Map();\n\n  constructor(config: TemplateEngineConfig) {\n    this.config = config;\n    this.initializeDefaultTemplates();\n  }\n\n  async render(request: TemplateRenderRequest): Promise<TemplateRenderResult> {\n    const startTime = Date.now();\n    const cacheKey = this.generateCacheKey(request);\n\n    try {\n      // Check cache first\n      if (this.config.cacheEnabled && this.cache.has(cacheKey)) {\n        const cached = this.cache.get(cacheKey)!;\n        return",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/notifications/templates/template-engine.ts",
        "start": 459,
        "end": 475,
        "startLoc": {
          "line": 459,
          "column": 9,
          "position": 4137
        },
        "endLoc": {
          "line": 475,
          "column": 7,
          "position": 4305
        }
      },
      "secondFile": {
        "name": "packages/shared/src/notifications/templates/template-engine.ts",
        "start": 119,
        "end": 135,
        "startLoc": {
          "line": 119,
          "column": 4,
          "position": 1085
        },
        "endLoc": {
          "line": 135,
          "column": 7,
          "position": 1253
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ";\n        return {\n          ...cached,\n          metadata: {\n            ...cached.metadata,\n            cacheHit: true,\n            renderTime: Date.now() - startTime\n          }\n        };\n      }\n\n      // Get template\n      const template = await this.getTemplate(request.templateId, request.language);\n      if (!template) {\n        throw new Error(`Template not found: ${request.templateId}`);\n      }\n\n      // Prepare context",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/notifications/templates/template-engine.ts",
        "start": 474,
        "end": 491,
        "startLoc": {
          "line": 474,
          "column": 2,
          "position": 4302
        },
        "endLoc": {
          "line": 491,
          "column": 19,
          "position": 4418
        }
      },
      "secondFile": {
        "name": "packages/shared/src/notifications/templates/template-engine.ts",
        "start": 139,
        "end": 156,
        "startLoc": {
          "line": 139,
          "column": 2,
          "position": 1289
        },
        "endLoc": {
          "line": 156,
          "column": 34,
          "position": 1405
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ",\n          renderTime: Date.now() - startTime,\n          cacheHit: false,\n          warnings: []\n        }\n      };\n\n      // Cache result\n      if (this.config.cacheEnabled) {\n        this.cache.set(cacheKey, result);\n        this.cleanupCache();\n      }\n\n      return",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/notifications/templates/template-engine.ts",
        "start": 508,
        "end": 521,
        "startLoc": {
          "line": 508,
          "column": 11,
          "position": 4565
        },
        "endLoc": {
          "line": 521,
          "column": 7,
          "position": 4647
        }
      },
      "secondFile": {
        "name": "packages/shared/src/notifications/templates/template-engine.ts",
        "start": 188,
        "end": 201,
        "startLoc": {
          "line": 188,
          "column": 13,
          "position": 1698
        },
        "endLoc": {
          "line": 201,
          "column": 7,
          "position": 1780
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": ", {\n        templateId: request.templateId,\n        error: (error as Error).message\n      });\n      throw error;\n    }\n  }\n\n  async validateTemplate(template: Template): Promise<{ valid: boolean; errors: string[] }> {\n    const errors: string[] = [];\n\n    try {\n      // Basic validation\n      if (!template.name || !template.body) {\n        errors.push('Template name and body are required');\n      }\n\n      if (!this.config.supportedLanguages.includes(template.language)) {\n        errors.push(`Unsupported language: ${template.language}`);\n      }\n\n      // Mustache syntax validation",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/notifications/templates/template-engine.ts",
        "start": 524,
        "end": 545,
        "startLoc": {
          "line": 524,
          "column": 34,
          "position": 4670
        },
        "endLoc": {
          "line": 545,
          "column": 30,
          "position": 4847
        }
      },
      "secondFile": {
        "name": "packages/shared/src/notifications/templates/template-engine.ts",
        "start": 211,
        "end": 232,
        "startLoc": {
          "line": 211,
          "column": 25,
          "position": 1854
        },
        "endLoc": {
          "line": 232,
          "column": 32,
          "position": 2031
        }
      }
    },
    {
      "format": "typescript",
      "lines": 39,
      "fragment": "}`);\n      }\n\n      return {\n        valid: errors.length === 0,\n        errors\n      };\n\n    } catch (error) {\n      return {\n        valid: false,\n        errors: [`Validation error: ${(error as Error).message}`]\n      };\n    }\n  }\n\n  async getTemplate(templateId: string, language?: string): Promise<Template | null> {\n    const lang = language || this.config.defaultLanguage;\n    const key = `${templateId}_${lang}`;\n    return this.templates.get(key) || null;\n  }\n\n  async listTemplates(type?: string, language?: string): Promise<Template[]> {\n    let templates = Array.from(this.templates.values());\n\n    if (type) {\n      templates = templates.filter(t => t.type === type);\n    }\n\n    if (language) {\n      templates = templates.filter(t => t.language === language);\n    }\n\n    return templates.filter(t => t.isActive);\n  }\n\n  async clearCache(): Promise<void> {\n    this.cache.clear();\n    logger",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/notifications/templates/template-engine.ts",
        "start": 549,
        "end": 587,
        "startLoc": {
          "line": 549,
          "column": 8,
          "position": 4894
        },
        "endLoc": {
          "line": 587,
          "column": 7,
          "position": 5238
        }
      },
      "secondFile": {
        "name": "packages/shared/src/notifications/templates/template-engine.ts",
        "start": 245,
        "end": 283,
        "startLoc": {
          "line": 245,
          "column": 2,
          "position": 2173
        },
        "endLoc": {
          "line": 283,
          "column": 5,
          "position": 2517
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "}\\}/gs, (match, variable, content) => {\n      const array = context[variable];\n      if (!Array.isArray(array)) return '';\n      \n      return array.map((item, index) => {\n        let itemContent = content;\n        itemContent = itemContent.replace(/\\{\\{@index\\}\\}/g, String(index));\n        itemContent = itemContent.replace(/\\{\\{\\.\\}\\}/g",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/notifications/templates/template-engine.ts",
        "start": 610,
        "end": 617,
        "startLoc": {
          "line": 610,
          "column": 2,
          "position": 5570
        },
        "endLoc": {
          "line": 617,
          "column": 14,
          "position": 5680
        }
      },
      "secondFile": {
        "name": "packages/shared/src/notifications/templates/template-engine.ts",
        "start": 306,
        "end": 313,
        "startLoc": {
          "line": 306,
          "column": 6,
          "position": 2811
        },
        "endLoc": {
          "line": 313,
          "column": 16,
          "position": 2921
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ", String(item));\n        \n        if (typeof item === 'object') {\n          for (const [key, value] of Object.entries(item)) {\n            const regex = new RegExp(`\\\\{\\\\{${key}\\\\}\\\\}`, 'g');\n            itemContent = itemContent.replace(regex, String(value || ''));\n          }\n        }\n        \n        return itemContent;\n      }).join('');\n    });\n\n    return result;\n  }\n\n  private",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/notifications/templates/template-engine.ts",
        "start": 617,
        "end": 633,
        "startLoc": {
          "line": 617,
          "column": 14,
          "position": 5681
        },
        "endLoc": {
          "line": 633,
          "column": 8,
          "position": 5818
        }
      },
      "secondFile": {
        "name": "packages/shared/src/notifications/templates/template-engine.ts",
        "start": 313,
        "end": 327,
        "startLoc": {
          "line": 313,
          "column": 16,
          "position": 2922
        },
        "endLoc": {
          "line": 327,
          "column": 2,
          "position": 3056
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": ";\n  }\n\n  private generateCacheKey(request: TemplateRenderRequest): string {\n    const variablesHash = JSON.stringify(request.variables);\n    const contextHash = JSON.stringify(request.context || {});\n    return `${request.templateId}_${request.language || this.config.defaultLanguage}_${variablesHash}_${contextHash}`;\n  }\n\n  private cleanupCache(): void {\n    if (this.cache.size > this.config.cacheSize) {\n      const entries = Array.from(this.cache.entries());\n      const toDelete = entries.slice(0, entries.length - this.config.cacheSize);\n      toDelete.forEach(([key]) => this.cache.delete(key));\n    }\n  }\n\n  private initializeDefaultTemplates(): void {\n    // Same as HandlebarsEngine but with Mustache syntax",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/notifications/templates/template-engine.ts",
        "start": 630,
        "end": 648,
        "startLoc": {
          "line": 630,
          "column": 7,
          "position": 5811
        },
        "endLoc": {
          "line": 648,
          "column": 53,
          "position": 6035
        }
      },
      "secondFile": {
        "name": "packages/shared/src/notifications/templates/template-engine.ts",
        "start": 362,
        "end": 380,
        "startLoc": {
          "line": 362,
          "column": 2,
          "position": 3337
        },
        "endLoc": {
          "line": 380,
          "column": 6,
          "position": 3561
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "const defaultTemplates: Omit<Template, 'id' | 'createdAt' | 'updatedAt'>[] = [\n      {\n        name: 'Welcome Email',\n        description: 'Welcome email template',\n        type: 'email',\n        language: 'es',\n        subject: 'Bienvenido a {{app_name}}',\n        body: 'Hola {{user_name}}, bienvenido a {{app_name}}! Estamos emocionados de tenerte a bordo.',\n        variables: ['app_name', 'user_name'],\n        isActive: true,\n        version: 1\n      }\n    ]",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/notifications/templates/template-engine.ts",
        "start": 649,
        "end": 661,
        "startLoc": {
          "line": 649,
          "column": 5,
          "position": 6038
        },
        "endLoc": {
          "line": 661,
          "column": 2,
          "position": 6139
        }
      },
      "secondFile": {
        "name": "packages/shared/src/notifications/templates/template-engine.ts",
        "start": 380,
        "end": 391,
        "startLoc": {
          "line": 380,
          "column": 5,
          "position": 3561
        },
        "endLoc": {
          "line": 391,
          "column": 2,
          "position": 3660
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": "],\n        isActive: true,\n        version: 1\n      }\n    ];\n\n    for (const template of defaultTemplates) {\n      const id = `template_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n      const now = new Date();\n      \n      const newTemplate: Template = {\n        ...template,\n        id,\n        createdAt: now,\n        updatedAt: now\n      };\n\n      const key = `${id}_${template.language}`;\n      this.templates.set(key, newTemplate);\n    }\n  }\n}\n\n// ============================================================================\n// TEMPLATE ENGINE FACTORY",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/notifications/templates/template-engine.ts",
        "start": 657,
        "end": 681,
        "startLoc": {
          "line": 657,
          "column": 12,
          "position": 6119
        },
        "endLoc": {
          "line": 681,
          "column": 27,
          "position": 6297
        }
      },
      "secondFile": {
        "name": "packages/shared/src/notifications/templates/template-engine.ts",
        "start": 430,
        "end": 454,
        "startLoc": {
          "line": 430,
          "column": 16,
          "position": 3921
        },
        "endLoc": {
          "line": 454,
          "column": 19,
          "position": 4099
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ";\n    for (let i = 0; i < messages.length; i += batchSize) {\n      const batch = messages.slice(i, i + batchSize);\n      const batchPromises = batch.map(message => this.send(message));\n      const batchResults = await Promise.all(batchPromises);\n      results.push(...batchResults);\n    }\n\n    return results;\n  }\n\n  async validateConfig(): Promise<boolean> {\n    try {\n      return !!(this.config",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/notifications/providers/sms.provider.ts",
        "start": 306,
        "end": 319,
        "startLoc": {
          "line": 306,
          "column": 3,
          "position": 2622
        },
        "endLoc": {
          "line": 319,
          "column": 7,
          "position": 2770
        }
      },
      "secondFile": {
        "name": "packages/shared/src/notifications/providers/sms.provider.ts",
        "start": 177,
        "end": 190,
        "startLoc": {
          "line": 177,
          "column": 3,
          "position": 1517
        },
        "endLoc": {
          "line": 190,
          "column": 11,
          "position": 1665
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ");\n    } catch (error) {\n      return false;\n    }\n  }\n\n  async getQuota(): Promise<{ used: number; limit: number; resetAt: Date }> {\n    // Simulate quota check\n    return {\n      used: Math.floor(Math.random() * 50",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/notifications/providers/sms.provider.ts",
        "start": 319,
        "end": 328,
        "startLoc": {
          "line": 319,
          "column": 7,
          "position": 2789
        },
        "endLoc": {
          "line": 328,
          "column": 3,
          "position": 2874
        }
      },
      "secondFile": {
        "name": "packages/shared/src/notifications/providers/sms.provider.ts",
        "start": 190,
        "end": 199,
        "startLoc": {
          "line": 190,
          "column": 10,
          "position": 1672
        },
        "endLoc": {
          "line": 199,
          "column": 4,
          "position": 1757
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ",\n      resetAt: new Date(Date.now() + 24 * 60 * 60 * 1000)\n    };\n  }\n\n  async getMessageStatus(messageId: string): Promise<{ status: string; errorCode?: string }> {\n    // Simulate status check\n    const statuses = ['sent'",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/notifications/providers/sms.provider.ts",
        "start": 329,
        "end": 336,
        "startLoc": {
          "line": 329,
          "column": 4,
          "position": 2883
        },
        "endLoc": {
          "line": 336,
          "column": 7,
          "position": 2968
        }
      },
      "secondFile": {
        "name": "packages/shared/src/notifications/providers/sms.provider.ts",
        "start": 200,
        "end": 207,
        "startLoc": {
          "line": 200,
          "column": 5,
          "position": 1766
        },
        "endLoc": {
          "line": 207,
          "column": 9,
          "position": 1851
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ";\n    for (let i = 0; i < messages.length; i += batchSize) {\n      const batch = messages.slice(i, i + batchSize);\n      const batchPromises = batch.map(message => this.send(message));\n      const batchResults = await Promise.all(batchPromises);\n      results.push(...batchResults);\n    }\n\n    return results;\n  }\n\n  async validateConfig(): Promise<boolean> {\n    try {\n      return !!(this.apiKey",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/notifications/providers/sms.provider.ts",
        "start": 438,
        "end": 451,
        "startLoc": {
          "line": 438,
          "column": 3,
          "position": 3824
        },
        "endLoc": {
          "line": 451,
          "column": 7,
          "position": 3972
        }
      },
      "secondFile": {
        "name": "packages/shared/src/notifications/providers/sms.provider.ts",
        "start": 177,
        "end": 190,
        "startLoc": {
          "line": 177,
          "column": 3,
          "position": 1517
        },
        "endLoc": {
          "line": 190,
          "column": 11,
          "position": 1665
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ");\n    } catch (error) {\n      return false;\n    }\n  }\n\n  async getQuota(): Promise<{ used: number; limit: number; resetAt: Date }> {\n    // Simulate quota check\n    return {\n      used: Math.floor(Math.random() * 75",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/notifications/providers/sms.provider.ts",
        "start": 451,
        "end": 460,
        "startLoc": {
          "line": 451,
          "column": 10,
          "position": 3979
        },
        "endLoc": {
          "line": 460,
          "column": 3,
          "position": 4064
        }
      },
      "secondFile": {
        "name": "packages/shared/src/notifications/providers/sms.provider.ts",
        "start": 190,
        "end": 199,
        "startLoc": {
          "line": 190,
          "column": 10,
          "position": 1672
        },
        "endLoc": {
          "line": 199,
          "column": 4,
          "position": 1757
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ",\n      resetAt: new Date(Date.now() + 24 * 60 * 60 * 1000)\n    };\n  }\n\n  async getMessageStatus(messageId: string): Promise<{ status: string; errorCode?: string }> {\n    // Simulate status check\n    const statuses = ['accepted'",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/notifications/providers/sms.provider.ts",
        "start": 461,
        "end": 468,
        "startLoc": {
          "line": 461,
          "column": 4,
          "position": 4073
        },
        "endLoc": {
          "line": 468,
          "column": 11,
          "position": 4158
        }
      },
      "secondFile": {
        "name": "packages/shared/src/notifications/providers/sms.provider.ts",
        "start": 200,
        "end": 207,
        "startLoc": {
          "line": 200,
          "column": 5,
          "position": 1766
        },
        "endLoc": {
          "line": 207,
          "column": 9,
          "position": 1851
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ";\n    for (let i = 0; i < messages.length; i += batchSize) {\n      const batch = messages.slice(i, i + batchSize);\n      const batchPromises = batch.map(message => this.send(message));\n      const batchResults = await Promise.all(batchPromises);\n      results.push(...batchResults);\n    }\n\n    return results;\n  }\n\n  async validateConfig(): Promise<boolean> {\n    try {\n      return !!(this.serverKey",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/notifications/providers/push.provider.ts",
        "start": 247,
        "end": 260,
        "startLoc": {
          "line": 247,
          "column": 4,
          "position": 2222
        },
        "endLoc": {
          "line": 260,
          "column": 10,
          "position": 2370
        }
      },
      "secondFile": {
        "name": "packages/shared/src/notifications/providers/sms.provider.ts",
        "start": 177,
        "end": 190,
        "startLoc": {
          "line": 177,
          "column": 3,
          "position": 1517
        },
        "endLoc": {
          "line": 190,
          "column": 11,
          "position": 1665
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ");\n    } catch (error) {\n      return false;\n    }\n  }\n\n  async getQuota(): Promise<{ used: number; limit: number; resetAt: Date }> {\n    // Simulate quota check\n    return {\n      used: Math.floor(Math.random() * 1000",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/notifications/providers/push.provider.ts",
        "start": 260,
        "end": 269,
        "startLoc": {
          "line": 260,
          "column": 10,
          "position": 2377
        },
        "endLoc": {
          "line": 269,
          "column": 5,
          "position": 2462
        }
      },
      "secondFile": {
        "name": "packages/shared/src/notifications/providers/sms.provider.ts",
        "start": 190,
        "end": 199,
        "startLoc": {
          "line": 190,
          "column": 10,
          "position": 1672
        },
        "endLoc": {
          "line": 199,
          "column": 4,
          "position": 1757
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ": undefined\n      }));\n\n      const successCount = results.filter(r => !r.error).length;\n      const failureCount = results.filter(r => r.error).length;\n\n      return {\n        messageId,\n        success: successCount > 0,\n        provider: 'web_push'",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/notifications/providers/push.provider.ts",
        "start": 353,
        "end": 362,
        "startLoc": {
          "line": 353,
          "column": 2,
          "position": 3262
        },
        "endLoc": {
          "line": 362,
          "column": 11,
          "position": 3345
        }
      },
      "secondFile": {
        "name": "packages/shared/src/notifications/providers/push.provider.ts",
        "start": 207,
        "end": 216,
        "startLoc": {
          "line": 207,
          "column": 2,
          "position": 1922
        },
        "endLoc": {
          "line": 216,
          "column": 11,
          "position": 2005
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ";\n    for (let i = 0; i < messages.length; i += batchSize) {\n      const batch = messages.slice(i, i + batchSize);\n      const batchPromises = batch.map(message => this.send(message));\n      const batchResults = await Promise.all(batchPromises);\n      results.push(...batchResults);\n    }\n\n    return results;\n  }\n\n  async validateConfig(): Promise<boolean> {\n    try {\n      return !!(this.vapidPublicKey",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/notifications/providers/push.provider.ts",
        "start": 391,
        "end": 404,
        "startLoc": {
          "line": 391,
          "column": 3,
          "position": 3548
        },
        "endLoc": {
          "line": 404,
          "column": 15,
          "position": 3696
        }
      },
      "secondFile": {
        "name": "packages/shared/src/notifications/providers/sms.provider.ts",
        "start": 177,
        "end": 190,
        "startLoc": {
          "line": 177,
          "column": 3,
          "position": 1517
        },
        "endLoc": {
          "line": 190,
          "column": 11,
          "position": 1665
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ": undefined\n      }));\n\n      const successCount = results.filter(r => !r.error).length;\n      const failureCount = results.filter(r => r.error).length;\n\n      return {\n        messageId,\n        success: successCount > 0,\n        provider: 'apns'",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/notifications/providers/push.provider.ts",
        "start": 496,
        "end": 505,
        "startLoc": {
          "line": 496,
          "column": 2,
          "position": 4566
        },
        "endLoc": {
          "line": 505,
          "column": 7,
          "position": 4649
        }
      },
      "secondFile": {
        "name": "packages/shared/src/notifications/providers/push.provider.ts",
        "start": 207,
        "end": 216,
        "startLoc": {
          "line": 207,
          "column": 2,
          "position": 1922
        },
        "endLoc": {
          "line": 216,
          "column": 11,
          "position": 2005
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "[] = [];\n    \n    // Process in batches of 20\n    const batchSize = 20;\n    for (let i = 0; i < messages.length; i += batchSize) {\n      const batch = messages.slice(i, i + batchSize);\n      const batchPromises = batch.map(message => this.send(message));\n      const batchResults = await Promise.all(batchPromises);\n      results.push(...batchResults);\n    }\n\n    return results;\n  }\n\n  async validateConfig(): Promise<boolean> {\n    try {\n      return !!(this.privateKey",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/notifications/providers/push.provider.ts",
        "start": 531,
        "end": 547,
        "startLoc": {
          "line": 531,
          "column": 11,
          "position": 4830
        },
        "endLoc": {
          "line": 547,
          "column": 11,
          "position": 5000
        }
      },
      "secondFile": {
        "name": "packages/shared/src/notifications/providers/sms.provider.ts",
        "start": 303,
        "end": 190,
        "startLoc": {
          "line": 303,
          "column": 10,
          "position": 2600
        },
        "endLoc": {
          "line": 190,
          "column": 11,
          "position": 1665
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ");\n    } catch (error) {\n      return false;\n    }\n  }\n\n  async getQuota(): Promise<{ used: number; limit: number; resetAt: Date }> {\n    // Simulate quota check\n    return {\n      used: Math.floor(Math.random() * 500",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/notifications/providers/push.provider.ts",
        "start": 547,
        "end": 556,
        "startLoc": {
          "line": 547,
          "column": 9,
          "position": 5019
        },
        "endLoc": {
          "line": 556,
          "column": 4,
          "position": 5104
        }
      },
      "secondFile": {
        "name": "packages/shared/src/notifications/providers/sms.provider.ts",
        "start": 190,
        "end": 199,
        "startLoc": {
          "line": 190,
          "column": 10,
          "position": 1672
        },
        "endLoc": {
          "line": 199,
          "column": 4,
          "position": 1757
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "[] = [];\n    \n    // Process in batches of 10\n    const batchSize = 10;\n    for (let i = 0; i < messages.length; i += batchSize) {\n      const batch = messages.slice(i, i + batchSize);\n      const batchPromises = batch.map(message => this.send(message));\n      const batchResults = await Promise.all(batchPromises);\n      results.push(...batchResults);\n    }\n\n    return results;\n  }\n\n  async validateConfig(): Promise<boolean> {\n    try {\n      // Simulate API key validation",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/notifications/providers/email.provider.ts",
        "start": 208,
        "end": 224,
        "startLoc": {
          "line": 208,
          "column": 12,
          "position": 1974
        },
        "endLoc": {
          "line": 224,
          "column": 31,
          "position": 2137
        }
      },
      "secondFile": {
        "name": "packages/shared/src/notifications/providers/sms.provider.ts",
        "start": 174,
        "end": 190,
        "startLoc": {
          "line": 174,
          "column": 10,
          "position": 1495
        },
        "endLoc": {
          "line": 190,
          "column": 7,
          "position": 1658
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ";\n    } catch (error) {\n      return false;\n    }\n  }\n\n  async getQuota(): Promise<{ used: number; limit: number; resetAt: Date }> {\n    // Simulate quota check\n    return {\n      used: Math.floor(Math.random() * 1000),\n      limit: 10000,\n      resetAt: new Date(Date.now() + 24 * 60 * 60 * 1000)\n    };\n  }\n}\n\n// ============================================================================\n// AWS SES PROVIDER",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/notifications/providers/email.provider.ts",
        "start": 225,
        "end": 242,
        "startLoc": {
          "line": 225,
          "column": 2,
          "position": 2151
        },
        "endLoc": {
          "line": 242,
          "column": 20,
          "position": 2289
        }
      },
      "secondFile": {
        "name": "packages/shared/src/notifications/providers/push.provider.ts",
        "start": 260,
        "end": 277,
        "startLoc": {
          "line": 260,
          "column": 2,
          "position": 2378
        },
        "endLoc": {
          "line": 277,
          "column": 21,
          "position": 2516
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "const batchSize = 50;\n    for (let i = 0; i < messages.length; i += batchSize) {\n      const batch = messages.slice(i, i + batchSize);\n      const batchPromises = batch.map(message => this.send(message));\n      const batchResults = await Promise.all(batchPromises);\n      results.push(...batchResults);\n    }\n\n    return results;\n  }\n\n  async validateConfig(): Promise<boolean> {\n    try {\n      return !!(this.config.secretKey",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/notifications/providers/email.provider.ts",
        "start": 329,
        "end": 342,
        "startLoc": {
          "line": 329,
          "column": 5,
          "position": 3056
        },
        "endLoc": {
          "line": 342,
          "column": 10,
          "position": 3213
        }
      },
      "secondFile": {
        "name": "packages/shared/src/notifications/providers/push.provider.ts",
        "start": 391,
        "end": 319,
        "startLoc": {
          "line": 391,
          "column": 5,
          "position": 3541
        },
        "endLoc": {
          "line": 319,
          "column": 7,
          "position": 2772
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "&& this.config.region);\n    } catch (error) {\n      return false;\n    }\n  }\n\n  async getQuota(): Promise<{ used: number; limit: number; resetAt: Date }> {\n    // Simulate quota check\n    return {\n      used: Math.floor(Math.random() * 200",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/notifications/providers/email.provider.ts",
        "start": 342,
        "end": 351,
        "startLoc": {
          "line": 342,
          "column": 2,
          "position": 3215
        },
        "endLoc": {
          "line": 351,
          "column": 4,
          "position": 3307
        }
      },
      "secondFile": {
        "name": "packages/shared/src/notifications/providers/sms.provider.ts",
        "start": 319,
        "end": 199,
        "startLoc": {
          "line": 319,
          "column": 2,
          "position": 2782
        },
        "endLoc": {
          "line": 199,
          "column": 4,
          "position": 1757
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "implements IEmailProvider {\n  private config: EmailProviderConfig;\n\n  constructor(config: EmailProviderConfig) {\n    this.config = config;\n  }\n\n  async send(message: EmailMessage): Promise<EmailResult> {\n    try {\n      if (this.config.testMode) {\n        logger.info('SMTP email sent (test mode)'",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/notifications/providers/email.provider.ts",
        "start": 362,
        "end": 372,
        "startLoc": {
          "line": 362,
          "column": 2,
          "position": 3372
        },
        "endLoc": {
          "line": 372,
          "column": 30,
          "position": 3455
        }
      },
      "secondFile": {
        "name": "packages/shared/src/notifications/providers/email.provider.ts",
        "start": 245,
        "end": 255,
        "startLoc": {
          "line": 245,
          "column": 2,
          "position": 2300
        },
        "endLoc": {
          "line": 255,
          "column": 33,
          "position": 2383
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "),\n  tags: z.array(z.string()).default([]),\n  orgId: z.string(),\n  createdAt: z.string().datetime().optional(),\n  updatedAt: z.string().datetime().optional()\n});\n\nexport const CreateContactSchema",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/schemas/crm.ts",
        "start": 40,
        "end": 47,
        "startLoc": {
          "line": 40,
          "column": 9,
          "position": 612
        },
        "endLoc": {
          "line": 47,
          "column": 20,
          "position": 694
        }
      },
      "secondFile": {
        "name": "packages/shared/src/schemas/crm.ts",
        "start": 19,
        "end": 26,
        "startLoc": {
          "line": 19,
          "column": 2,
          "position": 281
        },
        "endLoc": {
          "line": 26,
          "column": 20,
          "position": 363
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "(),\n  name: z.string().min(1),\n  description: z.string().optional(),\n  amount: z.number().positive(),\n  currency: z.string().default('EUR'),\n  stage",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/schemas/crm.ts",
        "start": 52,
        "end": 57,
        "startLoc": {
          "line": 52,
          "column": 9,
          "position": 790
        },
        "endLoc": {
          "line": 57,
          "column": 6,
          "position": 857
        }
      },
      "secondFile": {
        "name": "packages/shared/src/schemas/finance.ts",
        "start": 96,
        "end": 101,
        "startLoc": {
          "line": 96,
          "column": 7,
          "position": 1428
        },
        "endLoc": {
          "line": 101,
          "column": 7,
          "position": 1495
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ").optional(),\n  tags: z.array(z.string()).default([]),\n  orgId: z.string(),\n  createdAt: z.string().datetime().optional(),\n  updatedAt: z.string().datetime().optional()\n});\n\nexport const CreateDealSchema",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/schemas/crm.ts",
        "start": 63,
        "end": 70,
        "startLoc": {
          "line": 63,
          "column": 2,
          "position": 1010
        },
        "endLoc": {
          "line": 70,
          "column": 17,
          "position": 1096
        }
      },
      "secondFile": {
        "name": "packages/shared/src/schemas/crm.ts",
        "start": 19,
        "end": 26,
        "startLoc": {
          "line": 19,
          "column": 2,
          "position": 277
        },
        "endLoc": {
          "line": 26,
          "column": 20,
          "position": 363
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "),\n  metadata: z.record(z.any()).optional(),\n  orgId: z.string(),\n  createdAt: z.string().datetime().optional(),\n  updatedAt: z.string().datetime().optional()\n});\n\nexport const CreateInteractionSchema",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/schemas/crm.ts",
        "start": 137,
        "end": 144,
        "startLoc": {
          "line": 137,
          "column": 2,
          "position": 2041
        },
        "endLoc": {
          "line": 144,
          "column": 24,
          "position": 2121
        }
      },
      "secondFile": {
        "name": "packages/shared/src/schemas/finance.ts",
        "start": 48,
        "end": 55,
        "startLoc": {
          "line": 48,
          "column": 2,
          "position": 781
        },
        "endLoc": {
          "line": 55,
          "column": 20,
          "position": 861
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ": true });\n\n// Export types\nexport type Company = z.infer<typeof CompanySchema>;\nexport type CreateCompany = z.infer<typeof CreateCompanySchema>;\nexport type UpdateCompany = z.infer<typeof UpdateCompanySchema>;\n\nexport type Contact = z.infer<typeof ContactSchema>;\nexport type CreateContact = z.infer<typeof CreateContactSchema>;\nexport type UpdateContact = z.infer<typeof UpdateContactSchema>;\n\nexport type Deal = z.infer<typeof DealSchema>;\nexport type CreateDeal = z.infer<typeof CreateDealSchema>;\nexport type UpdateDeal = z.infer<typeof UpdateDealSchema>;\nexport type DealFilter",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/schemas/crm.ts",
        "start": 145,
        "end": 159,
        "startLoc": {
          "line": 145,
          "column": 6,
          "position": 2177
        },
        "endLoc": {
          "line": 159,
          "column": 11,
          "position": 2356
        }
      },
      "secondFile": {
        "name": "packages/shared/src/schemas/finance.ts",
        "start": 119,
        "end": 134,
        "startLoc": {
          "line": 119,
          "column": 15,
          "position": 1835
        },
        "endLoc": {
          "line": 134,
          "column": 8,
          "position": 2015
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "(),\n  createdAt: z.string().datetime(),\n  updatedAt: z.string().datetime(),\n  deletedAt: z.string().datetime().nullable().optional(),\n});\n\n// Organization schemas",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/schemas/auth.ts",
        "start": 16,
        "end": 22,
        "startLoc": {
          "line": 16,
          "column": 9,
          "position": 259
        },
        "endLoc": {
          "line": 22,
          "column": 24,
          "position": 321
        }
      },
      "secondFile": {
        "name": "packages/shared/src/schemas/erp.ts",
        "start": 6,
        "end": 12,
        "startLoc": {
          "line": 6,
          "column": 5,
          "position": 54
        },
        "endLoc": {
          "line": 12,
          "column": 19,
          "position": 116
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "this.logger = pino({\n      level: process.env.LOG_LEVEL || 'info',\n      formatters: {\n        level: (label) => ({ level: label }),\n        log: (object) => ({\n          ts: new Date().toISOString(),\n          service",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/logging/enhanced.ts",
        "start": 28,
        "end": 34,
        "startLoc": {
          "line": 28,
          "column": 5,
          "position": 207
        },
        "endLoc": {
          "line": 34,
          "column": 8,
          "position": 289
        }
      },
      "secondFile": {
        "name": "packages/shared/src/logging/index.ts",
        "start": 61,
        "end": 67,
        "startLoc": {
          "line": 61,
          "column": 5,
          "position": 445
        },
        "endLoc": {
          "line": 67,
          "column": 4,
          "position": 527
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "export const HealthCheckResponseSchema = z.object({\n  status: z.enum(['healthy', 'degraded', 'unhealthy']),\n  version: z.string(),\n  timestamp: z.string().datetime(),\n  checks: z.array(z.object({\n    name: z.string(),\n    status: z.enum(['healthy', 'degraded', 'unhealthy']),\n    message: z.string().optional(),\n    duration: z.number().optional(),\n    metadata",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/health/index.ts",
        "start": 38,
        "end": 47,
        "startLoc": {
          "line": 38,
          "column": 1,
          "position": 348
        },
        "endLoc": {
          "line": 47,
          "column": 9,
          "position": 484
        }
      },
      "secondFile": {
        "name": "packages/shared/src/schemas/common.ts",
        "start": 147,
        "end": 155,
        "startLoc": {
          "line": 147,
          "column": 1,
          "position": 1706
        },
        "endLoc": {
          "line": 155,
          "column": 16,
          "position": 1841
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "// For now, return a mock healthy status\n    return {\n      status: 'healthy',\n      responseTime: 0,\n      lastCheck: new Date().toISOString(),\n    };\n  } catch (error) {\n    return {\n      status: 'unhealthy',\n      responseTime: 0,\n      lastCheck: new Date().toISOString(),\n      error: error instanceof Error ? error.message : 'Redis connection failed'",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/health/index.ts",
        "start": 150,
        "end": 161,
        "startLoc": {
          "line": 150,
          "column": 5,
          "position": 1318
        },
        "endLoc": {
          "line": 161,
          "column": 26,
          "position": 1421
        }
      },
      "secondFile": {
        "name": "packages/shared/src/health/index.ts",
        "start": 131,
        "end": 142,
        "startLoc": {
          "line": 131,
          "column": 5,
          "position": 1175
        },
        "endLoc": {
          "line": 142,
          "column": 29,
          "position": 1278
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "// For now, return a mock healthy status\n    return {\n      status: 'healthy',\n      responseTime: 0,\n      lastCheck: new Date().toISOString(),\n    };\n  } catch (error) {\n    return {\n      status: 'unhealthy',\n      responseTime: 0,\n      lastCheck: new Date().toISOString(),\n      error: error instanceof Error ? error.message : 'Azure OpenAI connection failed'",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/health/index.ts",
        "start": 169,
        "end": 180,
        "startLoc": {
          "line": 169,
          "column": 5,
          "position": 1461
        },
        "endLoc": {
          "line": 180,
          "column": 33,
          "position": 1564
        }
      },
      "secondFile": {
        "name": "packages/shared/src/health/index.ts",
        "start": 131,
        "end": 142,
        "startLoc": {
          "line": 131,
          "column": 5,
          "position": 1175
        },
        "endLoc": {
          "line": 142,
          "column": 29,
          "position": 1278
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ">> {\n    const searchParams = new URLSearchParams();\n    if (params?.page) searchParams.set('page', params.page.toString());\n    if (params?.limit) searchParams.set('limit', params.limit.toString());\n    if (params?.search) searchParams.set('search', params.search);\n\n    const query = searchParams.toString();\n    return this.http.get<PaginatedResponse<Contact",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/contracts/sdk.ts",
        "start": 254,
        "end": 261,
        "startLoc": {
          "line": 254,
          "column": 8,
          "position": 2096
        },
        "endLoc": {
          "line": 261,
          "column": 8,
          "position": 2217
        }
      },
      "secondFile": {
        "name": "packages/shared/src/contracts/sdk.ts",
        "start": 220,
        "end": 227,
        "startLoc": {
          "line": 220,
          "column": 5,
          "position": 1660
        },
        "endLoc": {
          "line": 227,
          "column": 5,
          "position": 1781
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ">> {\n    const searchParams = new URLSearchParams();\n    if (params?.page) searchParams.set('page', params.page.toString());\n    if (params?.limit) searchParams.set('limit', params.limit.toString());\n\n    const",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/contracts/sdk.ts",
        "start": 397,
        "end": 402,
        "startLoc": {
          "line": 397,
          "column": 8,
          "position": 3906
        },
        "endLoc": {
          "line": 402,
          "column": 6,
          "position": 3980
        }
      },
      "secondFile": {
        "name": "packages/shared/src/contracts/sdk.ts",
        "start": 220,
        "end": 224,
        "startLoc": {
          "line": 220,
          "column": 5,
          "position": 1660
        },
        "endLoc": {
          "line": 224,
          "column": 3,
          "position": 1733
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "z.object({\n  id: z.string().uuid(),\n  email: z.string().email(),\n  name: z.string(),\n  organizationId: z.string().uuid(),\n  roles: z.array(z.string()),\n  permissions: z.array(z.string()),",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/contracts/index.ts",
        "start": 96,
        "end": 102,
        "startLoc": {
          "line": 96,
          "column": 2,
          "position": 906
        },
        "endLoc": {
          "line": 102,
          "column": 2,
          "position": 998
        }
      },
      "secondFile": {
        "name": "packages/shared/src/contracts/index.ts",
        "start": 48,
        "end": 55,
        "startLoc": {
          "line": 48,
          "column": 2,
          "position": 433
        },
        "endLoc": {
          "line": 55,
          "column": 2,
          "position": 527
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "),\n  email: z.string().email().optional(),\n  phone: z.string().optional(),\n  company: z.string().optional(),\n  title: z.string().optional(),\n  tags",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/contracts/index.ts",
        "start": 172,
        "end": 177,
        "startLoc": {
          "line": 172,
          "column": 24,
          "position": 1791
        },
        "endLoc": {
          "line": 177,
          "column": 5,
          "position": 1859
        }
      },
      "secondFile": {
        "name": "packages/shared/src/contracts/index.ts",
        "start": 158,
        "end": 163,
        "startLoc": {
          "line": 158,
          "column": 2,
          "position": 1590
        },
        "endLoc": {
          "line": 163,
          "column": 15,
          "position": 1658
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "(),\n  email: z.string().email().optional(),\n  phone: z.string().optional(),\n  company: z.string().optional(),\n  title: z.string().optional(),\n  tags: z.array(z.string()).optional",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/contracts/index.ts",
        "start": 183,
        "end": 188,
        "startLoc": {
          "line": 183,
          "column": 9,
          "position": 1956
        },
        "endLoc": {
          "line": 188,
          "column": 9,
          "position": 2039
        }
      },
      "secondFile": {
        "name": "packages/shared/src/contracts/index.ts",
        "start": 158,
        "end": 177,
        "startLoc": {
          "line": 158,
          "column": 7,
          "position": 1589
        },
        "endLoc": {
          "line": 177,
          "column": 8,
          "position": 1873
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "),\n  items: z.array(z.object({\n    productId: z.string().uuid(),\n    quantity: z.number().min(1),\n    price: z.number().min(0)\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/contracts/index.ts",
        "start": 299,
        "end": 304,
        "startLoc": {
          "line": 299,
          "column": 2,
          "position": 3521
        },
        "endLoc": {
          "line": 304,
          "column": 2,
          "position": 3585
        }
      },
      "secondFile": {
        "name": "packages/shared/src/contracts/index.ts",
        "start": 279,
        "end": 283,
        "startLoc": {
          "line": 279,
          "column": 6,
          "position": 3289
        },
        "endLoc": {
          "line": 283,
          "column": 2,
          "position": 3351
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "),\n  shippingAddress: z.object({\n    street: z.string().min(1),\n    city: z.string().min(1),\n    state: z.string().min(1),\n    zipCode: z.string().min(1),\n    country: z.string().min(1)\n  }).optional(),\n  customFields: z.record(z.any()).optional",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/contracts/index.ts",
        "start": 316,
        "end": 324,
        "startLoc": {
          "line": 316,
          "column": 2,
          "position": 3763
        },
        "endLoc": {
          "line": 324,
          "column": 9,
          "position": 3879
        }
      },
      "secondFile": {
        "name": "packages/shared/src/contracts/index.ts",
        "start": 304,
        "end": 312,
        "startLoc": {
          "line": 304,
          "column": 32,
          "position": 3595
        },
        "endLoc": {
          "line": 312,
          "column": 8,
          "position": 3711
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ";\n\nexport type LoginRequest = z.infer<typeof LoginRequestSchema>;\nexport type LoginResponse = z.infer<typeof LoginResponseSchema>;\nexport type RefreshTokenRequest = z.infer<typeof RefreshTokenRequestSchema>;\nexport type RefreshTokenResponse = z.infer<typeof RefreshTokenResponseSchema>;\nexport type LogoutRequest = z.infer<typeof LogoutRequestSchema>;\nexport type CreateApiKeyRequest",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/contracts/index.ts",
        "start": 397,
        "end": 404,
        "startLoc": {
          "line": 397,
          "column": 2,
          "position": 4675
        },
        "endLoc": {
          "line": 404,
          "column": 20,
          "position": 4772
        }
      },
      "secondFile": {
        "name": "packages/shared/src/schemas/auth.ts",
        "start": 243,
        "end": 250,
        "startLoc": {
          "line": 243,
          "column": 2,
          "position": 3206
        },
        "endLoc": {
          "line": 250,
          "column": 11,
          "position": 3303
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "name: string;\n  industry?: string;\n  size?: 'startup' | 'small' | 'medium' | 'large' | 'enterprise';\n  website?: string;\n  phone?: string;\n  email?: string;\n  address?: string;\n  country?: string;\n  vat_number?: string;\n  tags?: string[];\n  notes?: string;\n}",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/clients/crm-client.ts",
        "start": 105,
        "end": 116,
        "startLoc": {
          "line": 105,
          "column": 3,
          "position": 777
        },
        "endLoc": {
          "line": 116,
          "column": 2,
          "position": 881
        }
      },
      "secondFile": {
        "name": "packages/shared/src/clients/crm-client.ts",
        "start": 21,
        "end": 32,
        "startLoc": {
          "line": 21,
          "column": 3,
          "position": 138
        },
        "endLoc": {
          "line": 32,
          "column": 11,
          "position": 243
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ": string;\n  industry?: string;\n  size?: 'startup' | 'small' | 'medium' | 'large' | 'enterprise';\n  website?: string;\n  phone?: string;\n  email?: string;\n  address?: string;\n  country?: string;\n  vat_number?: string;\n  tags?: string[];\n  notes?: string;\n}\n\nexport interface CreateDealInput",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/clients/crm-client.ts",
        "start": 119,
        "end": 132,
        "startLoc": {
          "line": 119,
          "column": 2,
          "position": 895
        },
        "endLoc": {
          "line": 132,
          "column": 16,
          "position": 1005
        }
      },
      "secondFile": {
        "name": "packages/shared/src/clients/crm-client.ts",
        "start": 21,
        "end": 118,
        "startLoc": {
          "line": 21,
          "column": 5,
          "position": 139
        },
        "endLoc": {
          "line": 118,
          "column": 19,
          "position": 888
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "title: string;\n  description?: string;\n  value: number;\n  currency: string;\n  stage: 'lead' | 'qualified' | 'proposal' | 'negotiation' | 'closed-won' | 'closed-lost';\n  probability: number;\n  expected_close_date: string;\n  contact_id?: string;\n  company_id?: string;\n  owner_id: string;\n  tags?: string[];\n  notes?: string;\n}",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/clients/crm-client.ts",
        "start": 133,
        "end": 145,
        "startLoc": {
          "line": 133,
          "column": 3,
          "position": 1010
        },
        "endLoc": {
          "line": 145,
          "column": 2,
          "position": 1120
        }
      },
      "secondFile": {
        "name": "packages/shared/src/clients/crm-client.ts",
        "start": 38,
        "end": 50,
        "startLoc": {
          "line": 38,
          "column": 3,
          "position": 275
        },
        "endLoc": {
          "line": 50,
          "column": 11,
          "position": 386
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "();\n    const statusCode = result.status === 'ok' ? 200 : 503;\n    res.set('X-System-Mode', result.mode);\n    res.status(statusCode).json(result);\n  } catch (error) {\n    res.status(503).json({\n      status: \"error\",\n      mode: \"degraded\",\n      timestamp: new Date().toISOString(),\n      version: process.env.npm_package_version || '1.0.0',\n      error: (error as Error).message\n    });\n  }\n});\n\n// System metrics endpoint",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/backup/intermediate.ts",
        "start": 135,
        "end": 150,
        "startLoc": {
          "line": 135,
          "column": 18,
          "position": 1251
        },
        "endLoc": {
          "line": 150,
          "column": 27,
          "position": 1401
        }
      },
      "secondFile": {
        "name": "packages/shared/src/backup/intermediate.ts",
        "start": 118,
        "end": 133,
        "startLoc": {
          "line": 118,
          "column": 17,
          "position": 1064
        },
        "endLoc": {
          "line": 133,
          "column": 4,
          "position": 1214
        }
      }
    },
    {
      "format": "typescript",
      "lines": 52,
      "fragment": ");\n\n// Basic health check endpoint (< 200ms, no external dependencies)\napp.get(\"/health\", (req, res) => {\n  const ts = new Date().toISOString();\n  const version = process.env.npm_package_version || \"1.0.0\";\n  const currentMode = healthModeManager.getCurrentMode();\n  res.set('X-System-Mode', currentMode);\n  res.status(200).json({\n    status: \"ok\",\n    ts,\n    version,\n    mode: currentMode\n  });\n});\n\n// Enhanced Health check endpoints (PR-22)\napp.get(\"/health/live\", async (req, res) => {\n  try {\n    const result = await healthModeManager.getLivenessProbe();\n    const statusCode = result.status === 'ok' ? 200 : 503;\n    res.set('X-System-Mode', result.mode);\n    res.status(statusCode).json(result);\n  } catch (error) {\n    res.status(503).json({\n      status: \"error\",\n      mode: \"degraded\",\n      timestamp: new Date().toISOString(),\n      version: process.env.npm_package_version || '1.0.0',\n      error: (error as Error).message\n    });\n  }\n});\n\napp.get(\"/health/ready\", async (req, res) => {\n  try {\n    const result = await healthModeManager.getReadinessProbe();\n    const statusCode = result.status === 'ok' ? 200 : 503;\n    res.set('X-System-Mode', result.mode);\n    res.status(statusCode).json(result);\n  } catch (error) {\n    res.status(503).json({\n      status: \"error\",\n      mode: \"degraded\",\n      timestamp: new Date().toISOString(),\n      version: process.env.npm_package_version || '1.0.0',\n      error: (error as Error).message\n    });\n  }\n});\n\n// Basic API info endpoint",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/backup/basic.ts",
        "start": 21,
        "end": 72,
        "startLoc": {
          "line": 21,
          "column": 2,
          "position": 192
        },
        "endLoc": {
          "line": 72,
          "column": 27,
          "position": 697
        }
      },
      "secondFile": {
        "name": "packages/shared/src/backup/intermediate.ts",
        "start": 99,
        "end": 133,
        "startLoc": {
          "line": 99,
          "column": 2,
          "position": 896
        },
        "endLoc": {
          "line": 133,
          "column": 4,
          "position": 1214
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ",\n    timestamp: new Date().toISOString()\n  });\n});\n\n// 404 handler\napp.use((req: express.Request, res: express.Response) => {\n  res.status(404).json({\n    error: 'Not found',\n    message: `Route ${req.method} ${req.path} not found`,\n    timestamp: new Date().toISOString()\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/backup/basic.ts",
        "start": 97,
        "end": 108,
        "startLoc": {
          "line": 97,
          "column": 31,
          "position": 909
        },
        "endLoc": {
          "line": 108,
          "column": 2,
          "position": 1015
        }
      },
      "secondFile": {
        "name": "packages/shared/src/backup/intermediate.ts",
        "start": 270,
        "end": 280,
        "startLoc": {
          "line": 270,
          "column": 8,
          "position": 2190
        },
        "endLoc": {
          "line": 280,
          "column": 2,
          "position": 2294
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "});\n});\n\n// Start server\nconst server = app.listen(PORT, () => {\n  structuredLogger.info(`ECONEURA API Server running on port ${PORT}`, {\n    port: PORT,\n    environment: process.env.NODE_ENV || 'development',\n    version: process.env.npm_package_version || '1.0.0'\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/backup/basic.ts",
        "start": 108,
        "end": 117,
        "startLoc": {
          "line": 108,
          "column": 3,
          "position": 1015
        },
        "endLoc": {
          "line": 117,
          "column": 2,
          "position": 1097
        }
      },
      "secondFile": {
        "name": "packages/shared/src/backup/intermediate.ts",
        "start": 285,
        "end": 293,
        "startLoc": {
          "line": 285,
          "column": 3,
          "position": 2328
        },
        "endLoc": {
          "line": 293,
          "column": 2,
          "position": 2408
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "process.on('SIGTERM', () => {\n  structuredLogger.info('SIGTERM received, shutting down gracefully');\n  server.close(() => {\n    structuredLogger.info('Process terminated');\n    process.exit(0);\n  });\n});\n\nprocess.on('SIGINT', () => {\n  structuredLogger.info('SIGINT received, shutting down gracefully');\n  server.close(() => {\n    structuredLogger.info('Process terminated');\n    process.exit(0);\n  });\n});\n\nexport default app;",
      "tokens": 0,
      "firstFile": {
        "name": "packages/shared/src/backup/basic.ts",
        "start": 121,
        "end": 137,
        "startLoc": {
          "line": 121,
          "column": 1,
          "position": 1108
        },
        "endLoc": {
          "line": 137,
          "column": 2,
          "position": 1239
        }
      },
      "secondFile": {
        "name": "packages/shared/src/backup/intermediate.ts",
        "start": 310,
        "end": 326,
        "startLoc": {
          "line": 310,
          "column": 1,
          "position": 2476
        },
        "endLoc": {
          "line": 326,
          "column": 2,
          "position": 2607
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "),\n  isActive: boolean('is_active').default(true),\n  createdAt: timestamp('created_at', { withTimezone: true }).defaultNow().notNull(),\n  updatedAt: timestamp('updated_at', { withTimezone: true }).defaultNow().notNull(),\n});\n\n// ============================================================================\n// CONTACTS (CRM with Deduplication)",
      "tokens": 0,
      "firstFile": {
        "name": "packages/db/src/schema/index.ts",
        "start": 64,
        "end": 71,
        "startLoc": {
          "line": 64,
          "column": 2,
          "position": 918
        },
        "endLoc": {
          "line": 71,
          "column": 37,
          "position": 999
        }
      },
      "secondFile": {
        "name": "packages/db/src/schema/index.ts",
        "start": 45,
        "end": 52,
        "startLoc": {
          "line": 45,
          "column": 2,
          "position": 648
        },
        "endLoc": {
          "line": 52,
          "column": 24,
          "position": 729
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "),\n  isActive: boolean('is_active').default(true),\n  createdAt: timestamp('created_at', { withTimezone: true }).defaultNow().notNull(),\n  updatedAt: timestamp('updated_at', { withTimezone: true }).defaultNow().notNull(),\n});\n\n// ============================================================================\n// INTERACTIONS (CRM Timeline)",
      "tokens": 0,
      "firstFile": {
        "name": "packages/db/src/schema/index.ts",
        "start": 83,
        "end": 90,
        "startLoc": {
          "line": 83,
          "column": 6,
          "position": 1225
        },
        "endLoc": {
          "line": 90,
          "column": 31,
          "position": 1306
        }
      },
      "secondFile": {
        "name": "packages/db/src/schema/index.ts",
        "start": 45,
        "end": 52,
        "startLoc": {
          "line": 45,
          "column": 2,
          "position": 648
        },
        "endLoc": {
          "line": 52,
          "column": 24,
          "position": 729
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "),\n  isActive: boolean('is_active').default(true),\n  createdAt: timestamp('created_at', { withTimezone: true }).defaultNow().notNull(),\n  updatedAt: timestamp('updated_at', { withTimezone: true }).defaultNow().notNull(),\n});\n\n// ============================================================================\n// INVOICES (ERP with SEPA)",
      "tokens": 0,
      "firstFile": {
        "name": "packages/db/src/schema/index.ts",
        "start": 119,
        "end": 126,
        "startLoc": {
          "line": 119,
          "column": 2,
          "position": 1787
        },
        "endLoc": {
          "line": 126,
          "column": 28,
          "position": 1868
        }
      },
      "secondFile": {
        "name": "packages/db/src/schema/index.ts",
        "start": 45,
        "end": 52,
        "startLoc": {
          "line": 45,
          "column": 2,
          "position": 648
        },
        "endLoc": {
          "line": 52,
          "column": 24,
          "position": 729
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "),\n  isActive: boolean('is_active').default(true),\n  createdAt: timestamp('created_at', { withTimezone: true }).defaultNow().notNull(),\n  updatedAt: timestamp('updated_at', { withTimezone: true }).defaultNow().notNull(),\n});\n\n// ============================================================================\n// API KEYS (External Integrations)",
      "tokens": 0,
      "firstFile": {
        "name": "packages/db/src/schema/index.ts",
        "start": 191,
        "end": 198,
        "startLoc": {
          "line": 191,
          "column": 13,
          "position": 2926
        },
        "endLoc": {
          "line": 198,
          "column": 36,
          "position": 3007
        }
      },
      "secondFile": {
        "name": "packages/db/src/schema/index.ts",
        "start": 45,
        "end": 52,
        "startLoc": {
          "line": 45,
          "column": 2,
          "position": 648
        },
        "endLoc": {
          "line": 52,
          "column": 24,
          "position": 729
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ", { withTimezone: true }),\n  isActive: boolean('is_active').default(true),\n  createdAt: timestamp('created_at', { withTimezone: true }).defaultNow().notNull(),\n  updatedAt: timestamp('updated_at', { withTimezone: true }).defaultNow().notNull(),\n});\n\n// ============================================================================\n// RELATIONS",
      "tokens": 0,
      "firstFile": {
        "name": "packages/db/src/schema/index.ts",
        "start": 209,
        "end": 216,
        "startLoc": {
          "line": 209,
          "column": 13,
          "position": 3211
        },
        "endLoc": {
          "line": 216,
          "column": 13,
          "position": 3302
        }
      },
      "secondFile": {
        "name": "packages/db/src/schema/index.ts",
        "start": 45,
        "end": 52,
        "startLoc": {
          "line": 45,
          "column": 13,
          "position": 638
        },
        "endLoc": {
          "line": 52,
          "column": 24,
          "position": 729
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "),\n  status: text('status').notNull().default('active'),\n  createdAt: timestamp('created_at').defaultNow().notNull(),\n  updatedAt: timestamp('updated_at').defaultNow().notNull(),\n}, (table) => ({\n  orgIdIdx: index('contacts_org_id_idx'",
      "tokens": 0,
      "firstFile": {
        "name": "packages/db/src/schema.ts",
        "start": 64,
        "end": 69,
        "startLoc": {
          "line": 64,
          "column": 11,
          "position": 762
        },
        "endLoc": {
          "line": 69,
          "column": 22,
          "position": 838
        }
      },
      "secondFile": {
        "name": "packages/db/src/schema.ts",
        "start": 46,
        "end": 51,
        "startLoc": {
          "line": 46,
          "column": 2,
          "position": 525
        },
        "endLoc": {
          "line": 51,
          "column": 23,
          "position": 601
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ", {\n  id: uuid('id').primaryKey().defaultRandom(),\n  orgId: text('org_id').notNull(), // RLS key\n  companyId: uuid('company_id').references(() => companies.id),\n  contactId: uuid('contact_id').references(() => contacts.id),\n  dealId",
      "tokens": 0,
      "firstFile": {
        "name": "packages/db/src/schema.ts",
        "start": 98,
        "end": 103,
        "startLoc": {
          "line": 98,
          "column": 15,
          "position": 1253
        },
        "endLoc": {
          "line": 103,
          "column": 7,
          "position": 1336
        }
      },
      "secondFile": {
        "name": "packages/db/src/schema.ts",
        "start": 75,
        "end": 80,
        "startLoc": {
          "line": 75,
          "column": 8,
          "position": 901
        },
        "endLoc": {
          "line": 80,
          "column": 6,
          "position": 984
        }
      }
    },
    {
      "format": "json",
      "lines": 14,
      "fragment": "{\n  \"extends\": \"../../tsconfig.json\",\n  \"compilerOptions\": {\n    \"outDir\": \"./dist\",\n    \"rootDir\": \"./src\",\n    \"declaration\": true,\n    \"declarationMap\": true,\n    \"sourceMap\": true,\n    \"composite\": true,\n    \"noEmit\": false\n  },\n  \"include\": [\"src/**/*\"],\n  \"exclude\": [\"dist\", \"node_modules\", \"**/*.test.ts\", \"**/*.spec.ts\"]\n}",
      "tokens": 0,
      "firstFile": {
        "name": "packages/db/tsconfig.json",
        "start": 1,
        "end": 14,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 14,
          "column": 2,
          "position": 93
        }
      },
      "secondFile": {
        "name": "packages/shared/tsconfig.json",
        "start": 1,
        "end": 14,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 14,
          "column": 2,
          "position": 93
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "): { isValid: boolean; errors: string[] } {\n    const errors: string[] = [];\n\n    // Validate user ID\n    if (!request.userId || request.userId.trim().length === 0) {\n      errors.push('User ID is required');\n    }\n\n    // Validate deleted by",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/application/use-cases/user/delete-user.use-case.ts",
        "start": 63,
        "end": 71,
        "startLoc": {
          "line": 63,
          "column": 18,
          "position": 385
        },
        "endLoc": {
          "line": 71,
          "column": 23,
          "position": 469
        }
      },
      "secondFile": {
        "name": "apps/api/src/application/use-cases/user/update-user.use-case.ts",
        "start": 98,
        "end": 106,
        "startLoc": {
          "line": 98,
          "column": 18,
          "position": 676
        },
        "endLoc": {
          "line": 106,
          "column": 23,
          "position": 760
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": "name: string;\n    sku: string;\n    price: {\n      amount: number;\n      currency: string;\n    };\n    compareAtPrice?: {\n      amount: number;\n      currency: string;\n    };\n    costPrice?: {\n      amount: number;\n      currency: string;\n    };\n    inventory: {\n      quantity: number;\n      reserved: number;\n      available: number;\n    };\n    attributes: Record<string, any>;\n    isActive: boolean;\n  }>;\n}\n\nexport interface CreateProductResponse",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/application/use-cases/product/create-product.use-case.ts",
        "start": 66,
        "end": 90,
        "startLoc": {
          "line": 66,
          "column": 5,
          "position": 479
        },
        "endLoc": {
          "line": 90,
          "column": 22,
          "position": 629
        }
      },
      "secondFile": {
        "name": "apps/api/src/application/use-cases/product/update-product.use-case.ts",
        "start": 67,
        "end": 91,
        "startLoc": {
          "line": 67,
          "column": 5,
          "position": 508
        },
        "endLoc": {
          "line": 91,
          "column": 22,
          "position": 658
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "crypto.randomUUID(),\n        name: variant.name,\n        sku: variant.sku,\n        price: Money.create(variant.price.amount, variant.price.currency),\n        compareAtPrice: variant.compareAtPrice ? Money.create(\n          variant.compareAtPrice.amount,\n          variant.compareAtPrice.currency\n        ) : undefined,\n        costPrice: variant.costPrice ? Money.create(\n          variant.costPrice.amount,\n          variant.costPrice.currency\n        ) : undefined,\n        inventory: variant.inventory,\n        attributes: variant.attributes,\n        isActive: variant.isActive,\n      })",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/application/use-cases/product/create-product.use-case.ts",
        "start": 188,
        "end": 203,
        "startLoc": {
          "line": 188,
          "column": 2,
          "position": 1545
        },
        "endLoc": {
          "line": 203,
          "column": 2,
          "position": 1698
        }
      },
      "secondFile": {
        "name": "apps/api/src/application/use-cases/product/update-product.use-case.ts",
        "start": 256,
        "end": 271,
        "startLoc": {
          "line": 256,
          "column": 2,
          "position": 2066
        },
        "endLoc": {
          "line": 271,
          "column": 2,
          "position": 2219
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": "> {\n    // ========================================================================\n    // VALIDATION\n    // ========================================================================\n\n    this.validateId(request.id, 'Predictive Analytics ID');\n\n    // ========================================================================\n    // FIND EXISTING PREDICTIVE ANALYTICS\n    // ========================================================================\n\n    const existingPredictiveAnalytics = await this.predictiveAnalyticsRepository.findById(request.id);\n    if (!existingPredictiveAnalytics) {\n      throw new Error(`Predictive analytics with ID '${request.id}' not found`);\n    }\n\n    // ========================================================================\n    // BUSINESS LOGIC VALIDATION\n    // ========================================================================\n\n    // Check if model is already training",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/application/use-cases/predictive-analytics/train-model.use-case.ts",
        "start": 42,
        "end": 62,
        "startLoc": {
          "line": 42,
          "column": 19,
          "position": 287
        },
        "endLoc": {
          "line": 62,
          "column": 38,
          "position": 389
        }
      },
      "secondFile": {
        "name": "apps/api/src/application/use-cases/predictive-analytics/update-predictive-analytics.use-case.ts",
        "start": 46,
        "end": 66,
        "startLoc": {
          "line": 46,
          "column": 34,
          "position": 406
        },
        "endLoc": {
          "line": 66,
          "column": 47,
          "position": 508
        }
      }
    },
    {
      "format": "typescript",
      "lines": 27,
      "fragment": "productId?: string;\n    description: string;\n    quantity: number;\n    unitPrice: {\n      amount: number;\n      currency: string;\n    };\n    totalPrice: {\n      amount: number;\n      currency: string;\n    };\n    taxRate?: number;\n    taxAmount?: {\n      amount: number;\n      currency: string;\n    };\n    discountRate?: number;\n    discountAmount?: {\n      amount: number;\n      currency: string;\n    };\n    notes?: string;\n  }>;\n  paymentMethod?: 'cash' | 'credit_card' | 'bank_transfer' | 'check' | 'paypal' | 'stripe' | 'other';\n  reference?: string;\n  notes?: string;\n  settings:",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/application/use-cases/invoice/create-invoice.use-case.ts",
        "start": 21,
        "end": 47,
        "startLoc": {
          "line": 21,
          "column": 5,
          "position": 212
        },
        "endLoc": {
          "line": 47,
          "column": 2,
          "position": 410
        }
      },
      "secondFile": {
        "name": "apps/api/src/application/use-cases/invoice/update-invoice.use-case.ts",
        "start": 23,
        "end": 49,
        "startLoc": {
          "line": 23,
          "column": 5,
          "position": 235
        },
        "endLoc": {
          "line": 49,
          "column": 2,
          "position": 433
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "this.generateId(),\n        productId: item.productId,\n        description: item.description,\n        quantity: item.quantity,\n        unitPrice: Money.create(item.unitPrice.amount, item.unitPrice.currency),\n        totalPrice: Money.create(item.totalPrice.amount, item.totalPrice.currency),\n        taxRate: item.taxRate,\n        taxAmount: item.taxAmount ? Money.create(item.taxAmount.amount, item.taxAmount.currency) : undefined,\n        discountRate: item.discountRate,\n        discountAmount: item.discountAmount ? Money.create(item.discountAmount.amount, item.discountAmount.currency) : undefined,\n        notes: item.notes,\n      })",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/application/use-cases/invoice/create-invoice.use-case.ts",
        "start": 130,
        "end": 141,
        "startLoc": {
          "line": 130,
          "column": 2,
          "position": 1141
        },
        "endLoc": {
          "line": 141,
          "column": 2,
          "position": 1316
        }
      },
      "secondFile": {
        "name": "apps/api/src/application/use-cases/invoice/update-invoice.use-case.ts",
        "start": 168,
        "end": 179,
        "startLoc": {
          "line": 168,
          "column": 2,
          "position": 1342
        },
        "endLoc": {
          "line": 179,
          "column": 2,
          "position": 1517
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "(\n    id: InteractionId,\n    organizationId: OrganizationId,\n    userId: UserId,\n    tag: string\n  ): Promise<UpdateInteractionResponse> {\n    const existingInteraction = await this.interactionRepository.findById(id);\n    if (!existingInteraction) {\n      throw createNotFoundError('Interaction', id);\n    }\n\n    const currentTags = existingInteraction.tags.",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/application/use-cases/interaction/update-interaction.use-case.ts",
        "start": 324,
        "end": 335,
        "startLoc": {
          "line": 324,
          "column": 10,
          "position": 2336
        },
        "endLoc": {
          "line": 335,
          "column": 2,
          "position": 2431
        }
      },
      "secondFile": {
        "name": "apps/api/src/application/use-cases/interaction/update-interaction.use-case.ts",
        "start": 300,
        "end": 311,
        "startLoc": {
          "line": 300,
          "column": 7,
          "position": 2164
        },
        "endLoc": {
          "line": 311,
          "column": 2,
          "position": 2259
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ".attachments.length > 5) {\n      throw createValidationError('Cannot have more than 5 attachments', 'attachments');\n    }\n\n    // ========================================================================\n    // BUSINESS LOGIC VALIDATION\n    // ========================================================================\n\n    // Check if user exists and has access to organization\n    const user = await this.userDomainService.findById(request.userId);\n    if (!user) {\n      throw createNotFoundError('User', request.userId);\n    }\n\n    if (user.organizationId !== request.organizationId) {\n      throw createConflictError('User', 'User does not belong to the specified organization');\n    }\n\n    // Check if user is active\n    if (user.status !== 'ACTIVE') {\n      throw createConflictError('User', 'User is not active');\n    }\n\n    // ========================================================================\n    // CREATE INTERACTION",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/application/use-cases/interaction/create-interaction.use-case.ts",
        "start": 83,
        "end": 107,
        "startLoc": {
          "line": 83,
          "column": 8,
          "position": 650
        },
        "endLoc": {
          "line": 107,
          "column": 22,
          "position": 811
        }
      },
      "secondFile": {
        "name": "apps/api/src/application/use-cases/interaction/update-interaction.use-case.ts",
        "start": 100,
        "end": 124,
        "startLoc": {
          "line": 100,
          "column": 8,
          "position": 881
        },
        "endLoc": {
          "line": 124,
          "column": 20,
          "position": 1042
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ", 'id');\n    }\n    if (!request.organizationId) {\n      throw createValidationError('Organization ID is required', 'organizationId');\n    }\n    if (!request.userId) {\n      throw createValidationError('User ID is required', 'userId');\n    }\n\n    // Validate updates\n    if (!request.updates || Object.keys(request.updates).length === 0) {\n      throw createValidationError('At least one update field is required', 'updates');\n    }\n\n    // Validate name length",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/application/use-cases/deal/update-deal.use-case.ts",
        "start": 59,
        "end": 73,
        "startLoc": {
          "line": 59,
          "column": 22,
          "position": 437
        },
        "endLoc": {
          "line": 73,
          "column": 24,
          "position": 550
        }
      },
      "secondFile": {
        "name": "apps/api/src/application/use-cases/interaction/update-interaction.use-case.ts",
        "start": 50,
        "end": 64,
        "startLoc": {
          "line": 50,
          "column": 29,
          "position": 354
        },
        "endLoc": {
          "line": 64,
          "column": 27,
          "position": 467
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ");\n    }\n\n    // Validate tags\n    if (request.updates.tags !== undefined && request.updates.tags && request.updates.tags.length > 10) {\n      throw createValidationError('Cannot have more than 10 tags', 'tags');\n    }\n\n    // Validate attachments\n    if (request.updates.attachments !== undefined && request.updates.attachments && request.updates.attachments.length > 5) {\n      throw createValidationError('Cannot have more than 5 attachments', 'attachments');\n    }\n\n    // Validate competitors",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/application/use-cases/deal/update-deal.use-case.ts",
        "start": 105,
        "end": 118,
        "startLoc": {
          "line": 105,
          "column": 8,
          "position": 931
        },
        "endLoc": {
          "line": 118,
          "column": 24,
          "position": 1055
        }
      },
      "secondFile": {
        "name": "apps/api/src/application/use-cases/interaction/update-interaction.use-case.ts",
        "start": 91,
        "end": 104,
        "startLoc": {
          "line": 91,
          "column": 11,
          "position": 786
        },
        "endLoc": {
          "line": 104,
          "column": 76,
          "position": 910
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": ");\n    }\n\n    // ========================================================================\n    // BUSINESS LOGIC VALIDATION\n    // ========================================================================\n\n    // Check if user exists and has access to organization\n    const user = await this.userDomainService.findById(request.userId);\n    if (!user) {\n      throw createNotFoundError('User', request.userId);\n    }\n\n    if (user.organizationId !== request.organizationId) {\n      throw createConflictError('User', 'User does not belong to the specified organization');\n    }\n\n    // Check if user is active\n    if (user.status !== 'ACTIVE') {\n      throw createConflictError('User', 'User is not active');\n    }\n\n    // ========================================================================\n    // FIND DEAL",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/application/use-cases/deal/update-deal.use-case.ts",
        "start": 135,
        "end": 158,
        "startLoc": {
          "line": 135,
          "column": 13,
          "position": 1279
        },
        "endLoc": {
          "line": 158,
          "column": 13,
          "position": 1419
        }
      },
      "secondFile": {
        "name": "apps/api/src/application/use-cases/interaction/update-interaction.use-case.ts",
        "start": 101,
        "end": 124,
        "startLoc": {
          "line": 101,
          "column": 14,
          "position": 902
        },
        "endLoc": {
          "line": 124,
          "column": 20,
          "position": 1042
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ".tags;\n    if (!currentTags.includes(tag)) {\n      currentTags.push(tag);\n    }\n\n    return this.execute({\n      id,\n      organizationId,\n      userId,\n      updates: { tags: currentTags }\n    });\n  }\n\n  async removeTag(\n    id: DealId",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/application/use-cases/deal/update-deal.use-case.ts",
        "start": 406,
        "end": 420,
        "startLoc": {
          "line": 406,
          "column": 13,
          "position": 3143
        },
        "endLoc": {
          "line": 420,
          "column": 7,
          "position": 3228
        }
      },
      "secondFile": {
        "name": "apps/api/src/application/use-cases/interaction/update-interaction.use-case.ts",
        "start": 311,
        "end": 325,
        "startLoc": {
          "line": 311,
          "column": 20,
          "position": 2257
        },
        "endLoc": {
          "line": 325,
          "column": 14,
          "position": 2342
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "(\n    id: DealId,\n    organizationId: OrganizationId,\n    userId: UserId,\n    tag: string\n  ): Promise<UpdateDealResponse> {\n    const existingDeal = await this.dealRepository.findById(id);\n    if (!existingDeal) {\n      throw createNotFoundError('Deal', id);\n    }\n\n    const currentTags = existingDeal.tags.",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/application/use-cases/deal/update-deal.use-case.ts",
        "start": 419,
        "end": 430,
        "startLoc": {
          "line": 419,
          "column": 10,
          "position": 3222
        },
        "endLoc": {
          "line": 430,
          "column": 2,
          "position": 3317
        }
      },
      "secondFile": {
        "name": "apps/api/src/application/use-cases/deal/update-deal.use-case.ts",
        "start": 395,
        "end": 406,
        "startLoc": {
          "line": 395,
          "column": 7,
          "position": 3050
        },
        "endLoc": {
          "line": 406,
          "column": 2,
          "position": 3145
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "(\n    id: DealId,\n    organizationId: OrganizationId,\n    userId: UserId,\n    competitor: string\n  ): Promise<UpdateDealResponse> {\n    const existingDeal = await this.dealRepository.findById(id);\n    if (!existingDeal) {\n      throw createNotFoundError('Deal', id);\n    }\n\n    const currentCompetitors = existingDeal.competitors.",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/application/use-cases/deal/update-deal.use-case.ts",
        "start": 464,
        "end": 475,
        "startLoc": {
          "line": 464,
          "column": 17,
          "position": 3552
        },
        "endLoc": {
          "line": 475,
          "column": 2,
          "position": 3647
        }
      },
      "secondFile": {
        "name": "apps/api/src/application/use-cases/deal/update-deal.use-case.ts",
        "start": 440,
        "end": 451,
        "startLoc": {
          "line": 440,
          "column": 14,
          "position": 3380
        },
        "endLoc": {
          "line": 451,
          "column": 2,
          "position": 3475
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "(\n    id: DealId,\n    organizationId: OrganizationId,\n    userId: UserId,\n    decisionMaker: string\n  ): Promise<UpdateDealResponse> {\n    const existingDeal = await this.dealRepository.findById(id);\n    if (!existingDeal) {\n      throw createNotFoundError('Deal', id);\n    }\n\n    const currentDecisionMakers = existingDeal.decisionMakers.",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/application/use-cases/deal/update-deal.use-case.ts",
        "start": 509,
        "end": 520,
        "startLoc": {
          "line": 509,
          "column": 20,
          "position": 3882
        },
        "endLoc": {
          "line": 520,
          "column": 2,
          "position": 3977
        }
      },
      "secondFile": {
        "name": "apps/api/src/application/use-cases/deal/update-deal.use-case.ts",
        "start": 485,
        "end": 496,
        "startLoc": {
          "line": 485,
          "column": 17,
          "position": 3710
        },
        "endLoc": {
          "line": 496,
          "column": 2,
          "position": 3805
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ";\n  expectedCloseDate?: Date;\n  nextStep?: string;\n  nextStepDate?: Date;\n  tags?: string[];\n  customFields?: Record<string, any>;\n  attachments?: string[];\n  notes?: string;\n  competitors?: string[];\n  decisionMakers?: string[];\n  budget?: number;\n  timeline?: string;\n  requirements?: string[];\n  objections?: string[];\n}\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/application/use-cases/deal/create-deal.use-case.ts",
        "start": 22,
        "end": 38,
        "startLoc": {
          "line": 22,
          "column": 10,
          "position": 187
        },
        "endLoc": {
          "line": 38,
          "column": 7,
          "position": 314
        }
      },
      "secondFile": {
        "name": "apps/api/src/application/use-cases/deal/update-deal.use-case.ts",
        "start": 22,
        "end": 36,
        "startLoc": {
          "line": 22,
          "column": 7,
          "position": 181
        },
        "endLoc": {
          "line": 36,
          "column": 2,
          "position": 307
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "> {\n    // ========================================================================\n    // VALIDATION\n    // ========================================================================\n\n    // Validate required fields\n    if (!request.organizationId) {\n      throw createValidationError('Organization ID is required', 'organizationId');\n    }\n    if (!request.contactId) {\n      throw createValidationError('Contact ID is required', 'contactId');\n    }\n    if (!request.userId) {\n      throw createValidationError('User ID is required', 'userId');\n    }\n    if (!request.name",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/application/use-cases/deal/create-deal.use-case.ts",
        "start": 51,
        "end": 66,
        "startLoc": {
          "line": 51,
          "column": 19,
          "position": 404
        },
        "endLoc": {
          "line": 66,
          "column": 5,
          "position": 509
        }
      },
      "secondFile": {
        "name": "apps/api/src/application/use-cases/interaction/create-interaction.use-case.ts",
        "start": 40,
        "end": 55,
        "startLoc": {
          "line": 40,
          "column": 26,
          "position": 305
        },
        "endLoc": {
          "line": 55,
          "column": 5,
          "position": 410
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ");\n    }\n\n    // Validate tags\n    if (request.tags && request.tags.length > 10) {\n      throw createValidationError('Cannot have more than 10 tags', 'tags');\n    }\n\n    // Validate attachments\n    if (request.attachments && request.attachments.length > 5) {\n      throw createValidationError('Cannot have more than 5 attachments', 'attachments');\n    }\n\n    // Validate competitors",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/application/use-cases/deal/create-deal.use-case.ts",
        "start": 100,
        "end": 113,
        "startLoc": {
          "line": 100,
          "column": 8,
          "position": 831
        },
        "endLoc": {
          "line": 113,
          "column": 24,
          "position": 923
        }
      },
      "secondFile": {
        "name": "apps/api/src/application/use-cases/interaction/create-interaction.use-case.ts",
        "start": 74,
        "end": 87,
        "startLoc": {
          "line": 74,
          "column": 13,
          "position": 587
        },
        "endLoc": {
          "line": 87,
          "column": 76,
          "position": 679
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": ".objections.length > 20) {\n      throw createValidationError('Cannot have more than 20 objections', 'objections');\n    }\n\n    // ========================================================================\n    // BUSINESS LOGIC VALIDATION\n    // ========================================================================\n\n    // Check if user exists and has access to organization\n    const user = await this.userDomainService.findById(request.userId);\n    if (!user) {\n      throw createNotFoundError('User', request.userId);\n    }\n\n    if (user.organizationId !== request.organizationId) {\n      throw createConflictError('User', 'User does not belong to the specified organization');\n    }\n\n    // Check if user is active\n    if (user.status !== 'ACTIVE') {\n      throw createConflictError('User', 'User is not active');\n    }\n\n    // Check if deal with same name already exists for this contact",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/application/use-cases/deal/create-deal.use-case.ts",
        "start": 129,
        "end": 152,
        "startLoc": {
          "line": 129,
          "column": 8,
          "position": 1062
        },
        "endLoc": {
          "line": 152,
          "column": 64,
          "position": 1220
        }
      },
      "secondFile": {
        "name": "apps/api/src/application/use-cases/deal/update-deal.use-case.ts",
        "start": 134,
        "end": 123,
        "startLoc": {
          "line": 134,
          "column": 8,
          "position": 1258
        },
        "endLoc": {
          "line": 123,
          "column": 76,
          "position": 1039
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "(\n    organizationId: OrganizationId,\n    contactId: ContactId,\n    userId: UserId,\n    name: string,\n    value: number,\n    currency: string = 'USD',\n    source: DealSource = 'WEBSITE',\n    companyId?: CompanyId\n  ): Promise<CreateDealResponse> {\n    return this.execute({\n      organizationId,\n      contactId,\n      userId,\n      name,\n      value,\n      currency,\n      source,\n      stage: 'QUALIFIED'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/application/use-cases/deal/create-deal.use-case.ts",
        "start": 248,
        "end": 266,
        "startLoc": {
          "line": 248,
          "column": 16,
          "position": 1897
        },
        "endLoc": {
          "line": 266,
          "column": 12,
          "position": 2015
        }
      },
      "secondFile": {
        "name": "apps/api/src/application/use-cases/deal/create-deal.use-case.ts",
        "start": 225,
        "end": 243,
        "startLoc": {
          "line": 225,
          "column": 11,
          "position": 1760
        },
        "endLoc": {
          "line": 243,
          "column": 7,
          "position": 1878
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "(\n    organizationId: OrganizationId,\n    contactId: ContactId,\n    userId: UserId,\n    name: string,\n    value: number,\n    currency: string = 'USD',\n    source: DealSource = 'WEBSITE',\n    companyId?: CompanyId\n  ): Promise<CreateDealResponse> {\n    return this.execute({\n      organizationId,\n      contactId,\n      userId,\n      name,\n      value,\n      currency,\n      source,\n      stage: 'PROPOSAL'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/application/use-cases/deal/create-deal.use-case.ts",
        "start": 271,
        "end": 289,
        "startLoc": {
          "line": 271,
          "column": 15,
          "position": 2034
        },
        "endLoc": {
          "line": 289,
          "column": 11,
          "position": 2152
        }
      },
      "secondFile": {
        "name": "apps/api/src/application/use-cases/deal/create-deal.use-case.ts",
        "start": 225,
        "end": 243,
        "startLoc": {
          "line": 225,
          "column": 11,
          "position": 1760
        },
        "endLoc": {
          "line": 243,
          "column": 7,
          "position": 1878
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "(\n    organizationId: OrganizationId,\n    contactId: ContactId,\n    userId: UserId,\n    name: string,\n    value: number,\n    currency: string = 'USD',\n    source: DealSource = 'WEBSITE',\n    companyId?: CompanyId\n  ): Promise<CreateDealResponse> {\n    return this.execute({\n      organizationId,\n      contactId,\n      userId,\n      name,\n      value,\n      currency,\n      source,\n      stage: 'NEGOTIATION'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/application/use-cases/deal/create-deal.use-case.ts",
        "start": 294,
        "end": 312,
        "startLoc": {
          "line": 294,
          "column": 18,
          "position": 2171
        },
        "endLoc": {
          "line": 312,
          "column": 14,
          "position": 2289
        }
      },
      "secondFile": {
        "name": "apps/api/src/application/use-cases/deal/create-deal.use-case.ts",
        "start": 225,
        "end": 243,
        "startLoc": {
          "line": 225,
          "column": 11,
          "position": 1760
        },
        "endLoc": {
          "line": 243,
          "column": 7,
          "position": 1878
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ";\n    constraints: Array<{\n      id: string;\n      name: string;\n      type: 'primary_key' | 'foreign_key' | 'unique' | 'check' | 'not_null' | 'default' | 'index';\n      columns: string[];\n      referencedTable?: string;\n      referencedColumns?: string[];\n      condition?: string;\n      description: string;\n      isDeferrable: boolean;\n      initiallyDeferred: boolean;\n      onDelete?: 'CASCADE' | 'SET NULL' | 'RESTRICT' | 'NO ACTION';\n      onUpdate?: 'CASCADE' | 'SET NULL' | 'RESTRICT' | 'NO ACTION';\n    }>;\n    indexes",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/application/use-cases/database-schema/create-database-schema.use-case.ts",
        "start": 94,
        "end": 109,
        "startLoc": {
          "line": 94,
          "column": 2,
          "position": 798
        },
        "endLoc": {
          "line": 109,
          "column": 8,
          "position": 955
        }
      },
      "secondFile": {
        "name": "apps/api/src/application/use-cases/database-schema/create-database-schema.use-case.ts",
        "start": 73,
        "end": 88,
        "startLoc": {
          "line": 73,
          "column": 4,
          "position": 595
        },
        "endLoc": {
          "line": 88,
          "column": 12,
          "position": 752
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ".constraints.map(constraint => ({\n          id: constraint.id,\n          name: constraint.name,\n          type: { value: constraint.type },\n          columns: constraint.columns,\n          referencedTable: constraint.referencedTable,\n          referencedColumns: constraint.referencedColumns,\n          condition: constraint.condition,\n          description: constraint.description,\n          isDeferrable: constraint.isDeferrable,\n          initiallyDeferred: constraint.initiallyDeferred,\n          onDelete: constraint.onDelete,\n          onUpdate: constraint.onUpdate,\n          createdAt: new Date(),\n          updatedAt: new Date()\n        })),\n        indexes",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/application/use-cases/database-schema/create-database-schema.use-case.ts",
        "start": 278,
        "end": 294,
        "startLoc": {
          "line": 278,
          "column": 6,
          "position": 2427
        },
        "endLoc": {
          "line": 294,
          "column": 8,
          "position": 2582
        }
      },
      "secondFile": {
        "name": "apps/api/src/application/use-cases/database-schema/create-database-schema.use-case.ts",
        "start": 253,
        "end": 269,
        "startLoc": {
          "line": 253,
          "column": 7,
          "position": 2187
        },
        "endLoc": {
          "line": 269,
          "column": 12,
          "position": 2342
        }
      }
    },
    {
      "format": "typescript",
      "lines": 68,
      "fragment": ": 'low' | 'medium' | 'high' | 'urgent';\n  email?: string;\n  phone?: string;\n  mobile?: string;\n  fax?: string;\n  website?: string;\n  address?: {\n    street: string;\n    city: string;\n    state?: string;\n    postalCode: string;\n    country: string;\n    countryCode: string;\n  };\n  birthday?: Date;\n  anniversary?: Date;\n  gender?: 'male' | 'female' | 'other' | 'prefer_not_to_say';\n  maritalStatus?: 'single' | 'married' | 'divorced' | 'widowed' | 'separated';\n  children?: number;\n  education?: string;\n  profession?: string;\n  industry?: string;\n  experience?: number;\n  salary?: {\n    amount: number;\n    currency: string;\n  };\n  socialMedia?: {\n    linkedin?: string;\n    twitter?: string;\n    facebook?: string;\n    instagram?: string;\n    youtube?: string;\n    tiktok?: string;\n    other?: Record<string, string>;\n  };\n  communication?: {\n    preferredMethod?: 'email' | 'phone' | 'sms' | 'whatsapp' | 'linkedin' | 'other';\n    bestTimeToCall?: string;\n    timeZone?: string;\n    doNotCall?: boolean;\n    doNotEmail?: boolean;\n    doNotSms?: boolean;\n  };\n  settings?: {\n    notifications?: {\n      email?: boolean;\n      sms?: boolean;\n      push?: boolean;\n      phone?: boolean;\n    };\n    preferences?: {\n      language?: string;\n      timezone?: string;\n      currency?: string;\n      dateFormat?: string;\n      timeFormat?: string;\n    };\n    customFields?: Record<string, any>;\n    tags?: string[];\n    notes?: string;\n    internalNotes?: string;\n  };\n  assignedUserId?: string;\n  nextFollowUpDate?: Date;\n  leadScore?: number;\n  engagementScore?: number;\n  createdBy",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/application/use-cases/contact/create-contact.use-case.ts",
        "start": 21,
        "end": 88,
        "startLoc": {
          "line": 21,
          "column": 9,
          "position": 232
        },
        "endLoc": {
          "line": 88,
          "column": 10,
          "position": 798
        }
      },
      "secondFile": {
        "name": "apps/api/src/application/use-cases/contact/update-contact.use-case.ts",
        "start": 21,
        "end": 88,
        "startLoc": {
          "line": 21,
          "column": 2,
          "position": 238
        },
        "endLoc": {
          "line": 88,
          "column": 10,
          "position": 804
        }
      }
    },
    {
      "format": "typescript",
      "lines": 26,
      "fragment": "request.companyId && request.companyId.trim().length === 0) {\n      errors.push('Company ID cannot be empty');\n    }\n\n    // Validate children if provided\n    if (request.children !== undefined && (request.children < 0 || request.children > 20)) {\n      errors.push('Children count must be between 0 and 20');\n    }\n\n    // Validate experience if provided\n    if (request.experience !== undefined && (request.experience < 0 || request.experience > 50)) {\n      errors.push('Experience must be between 0 and 50 years');\n    }\n\n    // Validate lead score if provided\n    if (request.leadScore !== undefined && (request.leadScore < 0 || request.leadScore > 100)) {\n      errors.push('Lead score must be between 0 and 100');\n    }\n\n    // Validate engagement score if provided\n    if (request.engagementScore !== undefined && (request.engagementScore < 0 || request.engagementScore > 100)) {\n      errors.push('Engagement score must be between 0 and 100');\n    }\n\n    // Validate salary if provided\n    if (request.salary)",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/application/use-cases/contact/create-contact.use-case.ts",
        "start": 299,
        "end": 324,
        "startLoc": {
          "line": 299,
          "column": 2,
          "position": 2732
        },
        "endLoc": {
          "line": 324,
          "column": 2,
          "position": 2990
        }
      },
      "secondFile": {
        "name": "apps/api/src/application/use-cases/contact/update-contact.use-case.ts",
        "start": 331,
        "end": 356,
        "startLoc": {
          "line": 331,
          "column": 2,
          "position": 3040
        },
        "endLoc": {
          "line": 356,
          "column": 4,
          "position": 3299
        }
      }
    },
    {
      "format": "typescript",
      "lines": 41,
      "fragment": ") {\n      if (request.salary.amount < 0) {\n        errors.push('Salary cannot be negative');\n      }\n      if (!request.salary.currency || request.salary.currency.length !== 3) {\n        errors.push('Salary currency must be a 3-letter code');\n      }\n    }\n\n    // Validate social media URLs if provided\n    if (request.socialMedia) {\n      if (request.socialMedia.linkedin && !Contact.validateSocialMediaUrl(request.socialMedia.linkedin, 'linkedin')) {\n        errors.push('Invalid LinkedIn URL');\n      }\n      if (request.socialMedia.twitter && !Contact.validateSocialMediaUrl(request.socialMedia.twitter, 'twitter')) {\n        errors.push('Invalid Twitter URL');\n      }\n      if (request.socialMedia.facebook && !Contact.validateSocialMediaUrl(request.socialMedia.facebook, 'facebook')) {\n        errors.push('Invalid Facebook URL');\n      }\n      if (request.socialMedia.instagram && !Contact.validateSocialMediaUrl(request.socialMedia.instagram, 'instagram')) {\n        errors.push('Invalid Instagram URL');\n      }\n      if (request.socialMedia.youtube && !Contact.validateSocialMediaUrl(request.socialMedia.youtube, 'youtube')) {\n        errors.push('Invalid YouTube URL');\n      }\n      if (request.socialMedia.tiktok && !Contact.validateSocialMediaUrl(request.socialMedia.tiktok, 'tiktok')) {\n        errors.push('Invalid TikTok URL');\n      }\n    }\n\n    // Validate communication preferences if provided\n    if (request.communication) {\n      const validMethods = ['email', 'phone', 'sms', 'whatsapp', 'linkedin', 'other'];\n      if (request.communication.preferredMethod && !validMethods.includes(request.communication.preferredMethod)) {\n        errors.push('Invalid preferred communication method');\n      }\n    }\n\n    // Validate assigned user ID if provided\n    if (request.assignedUserId &&",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/application/use-cases/contact/create-contact.use-case.ts",
        "start": 324,
        "end": 364,
        "startLoc": {
          "line": 324,
          "column": 7,
          "position": 2990
        },
        "endLoc": {
          "line": 364,
          "column": 3,
          "position": 3432
        }
      },
      "secondFile": {
        "name": "apps/api/src/application/use-cases/contact/update-contact.use-case.ts",
        "start": 356,
        "end": 396,
        "startLoc": {
          "line": 356,
          "column": 10,
          "position": 3302
        },
        "endLoc": {
          "line": 396,
          "column": 4,
          "position": 3744
        }
      }
    },
    {
      "format": "typescript",
      "lines": 59,
      "fragment": ": 'website' | 'referral' | 'cold_call' | 'email' | 'social_media' | 'event' | 'other';\n  website?: string;\n  email?: string;\n  phone?: string;\n  address?: {\n    street: string;\n    city: string;\n    state?: string;\n    postalCode: string;\n    country: string;\n    countryCode: string;\n  };\n  billingAddress?: {\n    street: string;\n    city: string;\n    state?: string;\n    postalCode: string;\n    country: string;\n    countryCode: string;\n  };\n  shippingAddress?: {\n    street: string;\n    city: string;\n    state?: string;\n    postalCode: string;\n    country: string;\n    countryCode: string;\n  };\n  taxId?: string;\n  vatNumber?: string;\n  registrationNumber?: string;\n  description?: string;\n  annualRevenue?: {\n    amount: number;\n    currency: string;\n  };\n  employeeCount?: number;\n  foundedYear?: number;\n  parentCompanyId?: string;\n  assignedUserId?: string;\n  nextFollowUpDate?: Date;\n  leadScore?: number;\n  settings?: {\n    notifications?: {\n      email?: boolean;\n      sms?: boolean;\n      push?: boolean;\n    };\n    preferences?: {\n      language?: string;\n      timezone?: string;\n      currency?: string;\n      dateFormat?: string;\n    };\n    customFields?: Record<string, any>;\n    tags?: string[];\n    notes?: string;\n  };\n  createdBy",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/application/use-cases/company/create-company.use-case.ts",
        "start": 18,
        "end": 76,
        "startLoc": {
          "line": 18,
          "column": 7,
          "position": 168
        },
        "endLoc": {
          "line": 76,
          "column": 10,
          "position": 610
        }
      },
      "secondFile": {
        "name": "apps/api/src/application/use-cases/company/update-company.use-case.ts",
        "start": 18,
        "end": 76,
        "startLoc": {
          "line": 18,
          "column": 2,
          "position": 174
        },
        "endLoc": {
          "line": 76,
          "column": 10,
          "position": 616
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ",\n        settings: {\n          notifications: {\n            email: request.settings?.notifications?.email ?? true,\n            sms: request.settings?.notifications?.sms ?? false,\n            push: request.settings?.notifications?.push ?? false\n          }",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/application/use-cases/company/create-company.use-case.ts",
        "start": 154,
        "end": 160,
        "startLoc": {
          "line": 154,
          "column": 12,
          "position": 1230
        },
        "endLoc": {
          "line": 160,
          "column": 2,
          "position": 1304
        }
      },
      "secondFile": {
        "name": "apps/api/src/application/use-cases/contact/create-contact.use-case.ts",
        "start": 175,
        "end": 180,
        "startLoc": {
          "line": 175,
          "column": 2,
          "position": 1560
        },
        "endLoc": {
          "line": 180,
          "column": 2,
          "position": 1632
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "?? false\n          },\n          preferences: {\n            language: request.settings?.preferences?.language ?? 'en',\n            timezone: request.settings?.preferences?.timezone ?? 'UTC',\n            currency: request.settings?.preferences?.currency ?? 'EUR',\n            dateFormat: request.settings?.preferences?.dateFormat ?? 'DD/MM/YYYY'\n          }",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/application/use-cases/company/create-company.use-case.ts",
        "start": 159,
        "end": 166,
        "startLoc": {
          "line": 159,
          "column": 2,
          "position": 1298
        },
        "endLoc": {
          "line": 166,
          "column": 2,
          "position": 1393
        }
      },
      "secondFile": {
        "name": "apps/api/src/application/use-cases/contact/create-contact.use-case.ts",
        "start": 181,
        "end": 187,
        "startLoc": {
          "line": 181,
          "column": 2,
          "position": 1648
        },
        "endLoc": {
          "line": 187,
          "column": 2,
          "position": 1741
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "): { isValid: boolean; errors: string[] } {\n    const errors: string[] = [];\n\n    // Validate organization ID\n    if (!request.organizationId || request.organizationId.trim().length === 0) {\n      errors.push('Organization ID is required');\n    }\n\n    // Validate name\n    const nameValidation = Company",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/application/use-cases/company/create-company.use-case.ts",
        "start": 197,
        "end": 206,
        "startLoc": {
          "line": 197,
          "column": 21,
          "position": 1648
        },
        "endLoc": {
          "line": 206,
          "column": 8,
          "position": 1741
        }
      },
      "secondFile": {
        "name": "apps/api/src/application/use-cases/contact/create-contact.use-case.ts",
        "start": 230,
        "end": 239,
        "startLoc": {
          "line": 230,
          "column": 21,
          "position": 2100
        },
        "endLoc": {
          "line": 239,
          "column": 8,
          "position": 2193
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": "request.vatNumber && !Company.validateVatNumber(request.vatNumber)) {\n      errors.push('Invalid VAT number format');\n    }\n\n    // Validate employee count if provided\n    if (request.employeeCount !== undefined && (request.employeeCount < 0 || request.employeeCount > 1000000)) {\n      errors.push('Employee count must be between 0 and 1,000,000');\n    }\n\n    // Validate founded year if provided\n    if (request.foundedYear !== undefined) {\n      const currentYear = new Date().getFullYear();\n      if (request.foundedYear < 1800 || request.foundedYear > currentYear) {\n        errors.push(`Founded year must be between 1800 and ${currentYear}`);\n      }\n    }\n\n    // Validate lead score if provided\n    if (request.leadScore !== undefined && (request.leadScore < 0 || request.leadScore > 100)) {\n      errors.push('Lead score must be between 0 and 100');\n    }\n\n    // Validate annual revenue if provided\n    if (request.annualRevenue)",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/application/use-cases/company/create-company.use-case.ts",
        "start": 269,
        "end": 292,
        "startLoc": {
          "line": 269,
          "column": 2,
          "position": 2295
        },
        "endLoc": {
          "line": 292,
          "column": 2,
          "position": 2524
        }
      },
      "secondFile": {
        "name": "apps/api/src/application/use-cases/company/update-company.use-case.ts",
        "start": 315,
        "end": 338,
        "startLoc": {
          "line": 315,
          "column": 2,
          "position": 2667
        },
        "endLoc": {
          "line": 338,
          "column": 4,
          "position": 2897
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ") {\n      if (request.annualRevenue.amount < 0) {\n        errors.push('Annual revenue cannot be negative');\n      }\n      if (!request.annualRevenue.currency || request.annualRevenue.currency.length !== 3) {\n        errors.push('Annual revenue currency must be a 3-letter code');\n      }\n    }\n\n    // Validate created by",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/application/use-cases/company/create-company.use-case.ts",
        "start": 292,
        "end": 301,
        "startLoc": {
          "line": 292,
          "column": 14,
          "position": 2524
        },
        "endLoc": {
          "line": 301,
          "column": 23,
          "position": 2602
        }
      },
      "secondFile": {
        "name": "apps/api/src/application/use-cases/company/update-company.use-case.ts",
        "start": 338,
        "end": 347,
        "startLoc": {
          "line": 338,
          "column": 10,
          "position": 2900
        },
        "endLoc": {
          "line": 347,
          "column": 23,
          "position": 2978
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ".create({\n      organizationId: { value: request.organizationId },\n      name: request.name,\n      type: { value: request.type },\n      status: { value: 'design' },\n      description: request.description,\n      settings: {\n        type: { value: request.type },\n        layers",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/application/use-cases/architecture/create-architecture.use-case.ts",
        "start": 108,
        "end": 116,
        "startLoc": {
          "line": 108,
          "column": 13,
          "position": 881
        },
        "endLoc": {
          "line": 116,
          "column": 7,
          "position": 973
        }
      },
      "secondFile": {
        "name": "apps/api/src/application/use-cases/database-schema/create-database-schema.use-case.ts",
        "start": 216,
        "end": 224,
        "startLoc": {
          "line": 216,
          "column": 15,
          "position": 1773
        },
        "endLoc": {
          "line": 224,
          "column": 8,
          "position": 1865
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "layer.components.map(component => ({\n          id: component.id,\n          name: component.name,\n          type: { value: component.type },\n          layer: { value: layer.type },\n          description: component.description,\n          dependencies: component.dependencies,\n          interfaces: component.interfaces,\n          implementation: component.implementation,\n          tests: component.tests,\n          documentation: component.documentation,\n          createdAt: new Date(),\n          updatedAt: new Date()\n        }))\n      )",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/application/use-cases/architecture/create-architecture.use-case.ts",
        "start": 152,
        "end": 166,
        "startLoc": {
          "line": 152,
          "column": 9,
          "position": 1357
        },
        "endLoc": {
          "line": 166,
          "column": 2,
          "position": 1501
        }
      },
      "secondFile": {
        "name": "apps/api/src/application/use-cases/architecture/create-architecture.use-case.ts",
        "start": 121,
        "end": 134,
        "startLoc": {
          "line": 121,
          "column": 2,
          "position": 1038
        },
        "endLoc": {
          "line": 134,
          "column": 2,
          "position": 1180
        }
      }
    },
    {
      "format": "typescript",
      "lines": 27,
      "fragment": ",\n      layers: request.settings.layers.map(layer => ({\n        id: layer.id,\n        name: layer.name,\n        type: { value: layer.type },\n        description: layer.description,\n        components: layer.components.map(component => ({\n          id: component.id,\n          name: component.name,\n          type: { value: component.type },\n          layer: { value: layer.type },\n          description: component.description,\n          dependencies: component.dependencies,\n          interfaces: component.interfaces,\n          implementation: component.implementation,\n          tests: component.tests,\n          documentation: component.documentation,\n          createdAt: new Date(),\n          updatedAt: new Date()\n        })),\n        dependencies: layer.dependencies,\n        responsibilities: layer.responsibilities,\n        patterns: layer.patterns,\n        createdAt: new Date(),\n        updatedAt: new Date()\n      })),\n      isActive",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/application/use-cases/architecture/create-architecture.use-case.ts",
        "start": 166,
        "end": 192,
        "startLoc": {
          "line": 166,
          "column": 2,
          "position": 1502
        },
        "endLoc": {
          "line": 192,
          "column": 9,
          "position": 1769
        }
      },
      "secondFile": {
        "name": "apps/api/src/application/use-cases/architecture/create-architecture.use-case.ts",
        "start": 115,
        "end": 141,
        "startLoc": {
          "line": 115,
          "column": 2,
          "position": 970
        },
        "endLoc": {
          "line": 141,
          "column": 9,
          "position": 1237
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ": z.object({\n          firstName: z.string().min(2).optional(),\n          lastName: z.string().min(2).optional(),\n          role: z.enum(['admin', 'manager', 'editor', 'viewer']).optional(),\n          status: z.enum(['active', 'inactive', 'suspended', 'pending']).optional()\n        })\n      })\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/user.routes.ts",
        "start": 134,
        "end": 141,
        "startLoc": {
          "line": 134,
          "column": 8,
          "position": 1091
        },
        "endLoc": {
          "line": 141,
          "column": 2,
          "position": 1201
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/user.routes.ts",
        "start": 38,
        "end": 44,
        "startLoc": {
          "line": 38,
          "column": 5,
          "position": 302
        },
        "endLoc": {
          "line": 44,
          "column": 2,
          "position": 410
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ": z.object({\n            amount: z.number().min(0),\n            currency: z.string().length(3)\n          }),\n          compareAtPrice: z.object({\n            amount: z.number().min(0),\n            currency: z.string().length(3)\n          }).optional(),\n          costPrice",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 79,
        "end": 87,
        "startLoc": {
          "line": 79,
          "column": 6,
          "position": 1045
        },
        "endLoc": {
          "line": 87,
          "column": 10,
          "position": 1140
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 44,
        "end": 52,
        "startLoc": {
          "line": 44,
          "column": 13,
          "position": 520
        },
        "endLoc": {
          "line": 52,
          "column": 7,
          "position": 615
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "),\n        brand: z.string().max(100).optional(),\n        supplier: z.string().max(100).optional(),\n        settings: z.object({\n          inventory: z.object({\n            trackInventory: z.boolean().optional",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 118,
        "end": 123,
        "startLoc": {
          "line": 118,
          "column": 2,
          "position": 1580
        },
        "endLoc": {
          "line": 123,
          "column": 9,
          "position": 1653
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 29,
        "end": 34,
        "startLoc": {
          "line": 29,
          "column": 4,
          "position": 318
        },
        "endLoc": {
          "line": 34,
          "column": 8,
          "position": 391
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "),\n          pricing: z.object({\n            costPrice: z.object({\n              amount: z.number().min(0),\n              currency: z.string().length(3)\n            }).optional(),\n            sellingPrice: z.object({\n              amount: z.number().min(0),\n              currency: z.string().length(3)\n            }).",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 127,
        "end": 136,
        "startLoc": {
          "line": 127,
          "column": 2,
          "position": 1717
        },
        "endLoc": {
          "line": 136,
          "column": 2,
          "position": 1824
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 38,
        "end": 47,
        "startLoc": {
          "line": 38,
          "column": 2,
          "position": 455
        },
        "endLoc": {
          "line": 47,
          "column": 2,
          "position": 562
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "),\n            compareAtPrice: z.object({\n              amount: z.number().min(0),\n              currency: z.string().length(3)\n            }).optional(),\n            margin: z.number().min(0).max(100).optional()\n          }).",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 136,
        "end": 142,
        "startLoc": {
          "line": 136,
          "column": 2,
          "position": 1827
        },
        "endLoc": {
          "line": 142,
          "column": 2,
          "position": 1907
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 47,
        "end": 53,
        "startLoc": {
          "line": 47,
          "column": 2,
          "position": 561
        },
        "endLoc": {
          "line": 53,
          "column": 2,
          "position": 641
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "),\n          shipping: z.object({\n            weight: z.number().min(0).optional(),\n            dimensions: z.object({\n              length: z.number().min(0),\n              width: z.number().min(0),\n              height: z.number().min(0)\n            }).optional(),\n            requiresShipping: z.boolean().optional",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 142,
        "end": 150,
        "startLoc": {
          "line": 142,
          "column": 2,
          "position": 1910
        },
        "endLoc": {
          "line": 150,
          "column": 9,
          "position": 2019
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 53,
        "end": 61,
        "startLoc": {
          "line": 53,
          "column": 2,
          "position": 640
        },
        "endLoc": {
          "line": 61,
          "column": 8,
          "position": 749
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "),\n        images: z.array(z.string().url()).optional(),\n        documents: z.array(z.string().url()).optional(),\n        specifications: z.record(z.any()).optional(),\n        variants: z.array(z.object({\n          id",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 161,
        "end": 166,
        "startLoc": {
          "line": 161,
          "column": 2,
          "position": 2195
        },
        "endLoc": {
          "line": 166,
          "column": 3,
          "position": 2281
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 72,
        "end": 77,
        "startLoc": {
          "line": 72,
          "column": 2,
          "position": 916
        },
        "endLoc": {
          "line": 77,
          "column": 5,
          "position": 1002
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": "name: z.string().min(1).max(100),\n          sku: z.string().min(1).max(100),\n          price: z.object({\n            amount: z.number().min(0),\n            currency: z.string().length(3)\n          }),\n          compareAtPrice: z.object({\n            amount: z.number().min(0),\n            currency: z.string().length(3)\n          }).optional(),\n          costPrice: z.object({\n            amount: z.number().min(0),\n            currency: z.string().length(3)\n          }).optional(),\n          inventory: z.object({\n            quantity: z.number().int().min(0),\n            reserved: z.number().int().min(0),\n            available: z.number().int().min(0)\n          }),\n          attributes: z.record(z.any()).default({}),\n          isActive: z.boolean().default(true)\n        })).optional()\n      })\n    }),\n    productController.updateProduct",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 167,
        "end": 191,
        "startLoc": {
          "line": 167,
          "column": 11,
          "position": 2300
        },
        "endLoc": {
          "line": 191,
          "column": 14,
          "position": 2619
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 77,
        "end": 101,
        "startLoc": {
          "line": 77,
          "column": 11,
          "position": 1002
        },
        "endLoc": {
          "line": 101,
          "column": 14,
          "position": 1321
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": ",\n    validateRequest({\n      params: z.object({\n        organizationId: z.string().uuid()\n      }),\n      query: z.object({\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.enum(['name', 'sku', 'category', 'brand', 'createdAt', 'updatedAt']).default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc'),\n        search: z.string().max(200).optional(),\n        type: z.enum(['physical', 'digital', 'service', 'subscription', 'bundle']).optional(),\n        status: z.enum(['active', 'inactive', 'discontinued', 'draft', 'archived']).optional(),\n        category: z.string().optional(),\n        brand: z.string().optional(),\n        supplier: z.string().optional(),\n        minPrice: z.coerce.number().min(0).optional(),\n        maxPrice: z.coerce.number().min(0).optional(),\n        inStock: z.coerce.boolean().optional(),\n        lowStock: z.coerce.boolean().optional()\n      })\n    }),\n    productController.searchProducts",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 245,
        "end": 267,
        "startLoc": {
          "line": 245,
          "column": 40,
          "position": 3174
        },
        "endLoc": {
          "line": 267,
          "column": 15,
          "position": 3549
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 219,
        "end": 241,
        "startLoc": {
          "line": 219,
          "column": 33,
          "position": 2778
        },
        "endLoc": {
          "line": 241,
          "column": 26,
          "position": 3153
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ")\n      }),\n      query: z.object({\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.enum(['name', 'sku', 'category', 'brand', 'createdAt', 'updatedAt']).default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc')\n      }",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 288,
        "end": 295,
        "startLoc": {
          "line": 288,
          "column": 2,
          "position": 3684
        },
        "endLoc": {
          "line": 295,
          "column": 2,
          "position": 3816
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 222,
        "end": 228,
        "startLoc": {
          "line": 222,
          "column": 2,
          "position": 2807
        },
        "endLoc": {
          "line": 228,
          "column": 2,
          "position": 2937
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "])\n      }),\n      query: z.object({\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.enum(['name', 'sku', 'category', 'brand', 'createdAt', 'updatedAt']).default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc')\n      })\n    }),\n    async (req, res, next) => {\n      try {\n        const { status",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 328,
        "end": 339,
        "startLoc": {
          "line": 328,
          "column": 11,
          "position": 4117
        },
        "endLoc": {
          "line": 339,
          "column": 7,
          "position": 4285
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 288,
        "end": 299,
        "startLoc": {
          "line": 288,
          "column": 9,
          "position": 3683
        },
        "endLoc": {
          "line": 299,
          "column": 5,
          "position": 3851
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ");\n        \n        res.status(200).json({\n          success: true,\n          data: products.map(product => ({\n            id: product.id.value,\n            name: product.name,\n            sku: product.sku,\n            type: product.type.value,\n            status: product.status.value,\n            category: product.category.value,\n            brand: product.brand?.value,\n            supplier: product.supplier?.value,\n            isActive: product.isActive,\n            createdAt: product.createdAt,\n            updatedAt: product.updatedAt\n          }))\n        });\n      } catch (error) {\n        next(error);\n      }\n    }\n  );\n\n  // GET /products/category/:category - Get products by category",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 340,
        "end": 364,
        "startLoc": {
          "line": 340,
          "column": 7,
          "position": 4313
        },
        "endLoc": {
          "line": 364,
          "column": 63,
          "position": 4504
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 300,
        "end": 324,
        "startLoc": {
          "line": 300,
          "column": 5,
          "position": 3879
        },
        "endLoc": {
          "line": 324,
          "column": 57,
          "position": 4070
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ")\n      }),\n      query: z.object({\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.enum(['name', 'sku', 'category', 'brand', 'createdAt', 'updatedAt']).default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc')\n      })\n    }),\n    async (req, res, next) => {\n      try {\n        const { category",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 368,
        "end": 379,
        "startLoc": {
          "line": 368,
          "column": 4,
          "position": 4547
        },
        "endLoc": {
          "line": 379,
          "column": 9,
          "position": 4714
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 222,
        "end": 299,
        "startLoc": {
          "line": 222,
          "column": 2,
          "position": 2807
        },
        "endLoc": {
          "line": 299,
          "column": 5,
          "position": 3851
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ");\n        \n        res.status(200).json({\n          success: true,\n          data: products.map(product => ({\n            id: product.id.value,\n            name: product.name,\n            sku: product.sku,\n            type: product.type.value,\n            status: product.status.value,\n            category: product.category.value,\n            brand: product.brand?.value,\n            supplier: product.supplier?.value,\n            isActive: product.isActive,\n            createdAt: product.createdAt,\n            updatedAt: product.updatedAt\n          }))\n        });\n      } catch (error) {\n        next(error);\n      }\n    }\n  );\n\n  // GET /products/brand/:brand - Get products by brand",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 380,
        "end": 404,
        "startLoc": {
          "line": 380,
          "column": 9,
          "position": 4742
        },
        "endLoc": {
          "line": 404,
          "column": 54,
          "position": 4933
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 300,
        "end": 324,
        "startLoc": {
          "line": 300,
          "column": 5,
          "position": 3879
        },
        "endLoc": {
          "line": 324,
          "column": 57,
          "position": 4070
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ": z.string().min(1).max(100)\n      }),\n      query: z.object({\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.enum(['name', 'sku', 'category', 'brand', 'createdAt', 'updatedAt']).default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc')\n      })\n    }),\n    async (req, res, next) => {\n      try {\n        const { brand",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 408,
        "end": 419,
        "startLoc": {
          "line": 408,
          "column": 6,
          "position": 4960
        },
        "endLoc": {
          "line": 419,
          "column": 6,
          "position": 5143
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 368,
        "end": 299,
        "startLoc": {
          "line": 368,
          "column": 9,
          "position": 4531
        },
        "endLoc": {
          "line": 299,
          "column": 5,
          "position": 3851
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ");\n        \n        res.status(200).json({\n          success: true,\n          data: products.map(product => ({\n            id: product.id.value,\n            name: product.name,\n            sku: product.sku,\n            type: product.type.value,\n            status: product.status.value,\n            category: product.category.value,\n            brand: product.brand?.value,\n            supplier: product.supplier?.value,\n            isActive: product.isActive,\n            createdAt: product.createdAt,\n            updatedAt: product.updatedAt\n          }))\n        });\n      } catch (error) {\n        next(error);\n      }\n    }\n  );\n\n  // GET /products/supplier/:supplier - Get products by supplier",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 420,
        "end": 444,
        "startLoc": {
          "line": 420,
          "column": 6,
          "position": 5171
        },
        "endLoc": {
          "line": 444,
          "column": 63,
          "position": 5362
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 300,
        "end": 324,
        "startLoc": {
          "line": 300,
          "column": 5,
          "position": 3879
        },
        "endLoc": {
          "line": 324,
          "column": 57,
          "position": 4070
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ": z.string().min(1).max(100)\n      }),\n      query: z.object({\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.enum(['name', 'sku', 'category', 'brand', 'createdAt', 'updatedAt']).default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc')\n      })\n    }),\n    async (req, res, next) => {\n      try {\n        const { supplier",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 448,
        "end": 459,
        "startLoc": {
          "line": 448,
          "column": 9,
          "position": 5389
        },
        "endLoc": {
          "line": 459,
          "column": 9,
          "position": 5572
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 368,
        "end": 299,
        "startLoc": {
          "line": 368,
          "column": 9,
          "position": 4531
        },
        "endLoc": {
          "line": 299,
          "column": 5,
          "position": 3851
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ");\n        \n        res.status(200).json({\n          success: true,\n          data: products.map(product => ({\n            id: product.id.value,\n            name: product.name,\n            sku: product.sku,\n            type: product.type.value,\n            status: product.status.value,\n            category: product.category.value,\n            brand: product.brand?.value,\n            supplier: product.supplier?.value,\n            isActive: product.isActive,\n            createdAt: product.createdAt,\n            updatedAt: product.updatedAt\n          }))\n        });\n      } catch (error) {\n        next(error);\n      }\n    }\n  );\n\n  // GET /products/sku/:sku - Get product by SKU",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 460,
        "end": 484,
        "startLoc": {
          "line": 460,
          "column": 9,
          "position": 5600
        },
        "endLoc": {
          "line": 484,
          "column": 47,
          "position": 5791
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 300,
        "end": 324,
        "startLoc": {
          "line": 300,
          "column": 5,
          "position": 3879
        },
        "endLoc": {
          "line": 324,
          "column": 57,
          "position": 4070
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "{\n            id: product.id.value,\n            name: product.name,\n            sku: product.sku,\n            type: product.type.value,\n            status: product.status.value,\n            category: product.category.value,\n            brand: product.brand?.value,\n            supplier: product.supplier?.value,\n            isActive: product.isActive,\n            createdAt: product.createdAt,\n            updatedAt: product.updatedAt\n          }\n        }",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 506,
        "end": 519,
        "startLoc": {
          "line": 506,
          "column": 2,
          "position": 5976
        },
        "endLoc": {
          "line": 519,
          "column": 2,
          "position": 6094
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 304,
        "end": 316,
        "startLoc": {
          "line": 304,
          "column": 2,
          "position": 3916
        },
        "endLoc": {
          "line": 316,
          "column": 2,
          "position": 4032
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ");\n        \n        if (!product) {\n          res.status(404).json({\n            success: false,\n            message: 'Product not found'\n          });\n          return;\n        }\n\n        res.status(200).json({\n          success: true,\n          data: {\n            id: product.id.value,\n            name: product.name,\n            sku: product.sku,\n            barcode",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 536,
        "end": 552,
        "startLoc": {
          "line": 536,
          "column": 8,
          "position": 6237
        },
        "endLoc": {
          "line": 552,
          "column": 8,
          "position": 6345
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 494,
        "end": 510,
        "startLoc": {
          "line": 494,
          "column": 4,
          "position": 5900
        },
        "endLoc": {
          "line": 510,
          "column": 5,
          "position": 6008
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ",\n            type: product.type.value,\n            status: product.status.value,\n            category: product.category.value,\n            brand: product.brand?.value,\n            supplier: product.supplier?.value,\n            isActive: product.isActive,\n            createdAt: product.createdAt,\n            updatedAt: product.updatedAt\n          }\n        });\n      } catch (error) {\n        next(error);\n      }\n    }\n  );\n\n  // ========================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 552,
        "end": 569,
        "startLoc": {
          "line": 552,
          "column": 8,
          "position": 6351
        },
        "endLoc": {
          "line": 569,
          "column": 76,
          "position": 6474
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 307,
        "end": 526,
        "startLoc": {
          "line": 307,
          "column": 4,
          "position": 3945
        },
        "endLoc": {
          "line": 526,
          "column": 59,
          "position": 6128
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ");\n        \n        res.status(200).json({\n          success: true,\n          data: products.map(product => ({\n            id: product.id.value,\n            name: product.name,\n            sku: product.sku,\n            type: product.type.value,\n            status: product.status.value,\n            category: product.category.value,\n            brand: product.brand?.value,\n            supplier: product.supplier?.value,\n            isActive: product.isActive,\n            createdAt: product.createdAt,\n            updatedAt: product.updatedAt\n          }))\n        });\n      } catch (error) {\n        next(error);\n      }\n    }\n  );\n\n  // GET /products/inventory/out-of-stock - Get products out of stock",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 584,
        "end": 608,
        "startLoc": {
          "line": 584,
          "column": 7,
          "position": 6627
        },
        "endLoc": {
          "line": 608,
          "column": 68,
          "position": 6818
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 300,
        "end": 324,
        "startLoc": {
          "line": 300,
          "column": 5,
          "position": 3879
        },
        "endLoc": {
          "line": 324,
          "column": 57,
          "position": 4070
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ");\n        \n        res.status(200).json({\n          success: true,\n          data: products.map(product => ({\n            id: product.id.value,\n            name: product.name,\n            sku: product.sku,\n            type: product.type.value,\n            status: product.status.value,\n            category: product.category.value,\n            brand: product.brand?.value,\n            supplier: product.supplier?.value,\n            isActive: product.isActive,\n            createdAt: product.createdAt,\n            updatedAt: product.updatedAt\n          }))\n        });\n      } catch (error) {\n        next(error);\n      }\n    }\n  );\n\n  // GET /products/inventory/in-stock - Get products in stock",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 618,
        "end": 642,
        "startLoc": {
          "line": 618,
          "column": 7,
          "position": 6925
        },
        "endLoc": {
          "line": 642,
          "column": 60,
          "position": 7116
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 300,
        "end": 324,
        "startLoc": {
          "line": 300,
          "column": 5,
          "position": 3879
        },
        "endLoc": {
          "line": 324,
          "column": 57,
          "position": 4070
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ",\n    validateRequest({\n      query: z.object({\n        organizationId: z.string().uuid()\n      })\n    }),\n    async (req, res, next) => {\n      try {\n        const { organizationId } = req.query;\n        const products = await productController['productRepository'].findByInStock",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 643,
        "end": 652,
        "startLoc": {
          "line": 643,
          "column": 22,
          "position": 7124
        },
        "endLoc": {
          "line": 652,
          "column": 14,
          "position": 7216
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 609,
        "end": 618,
        "startLoc": {
          "line": 609,
          "column": 26,
          "position": 6826
        },
        "endLoc": {
          "line": 618,
          "column": 17,
          "position": 6918
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": "(organizationId as string);\n        \n        res.status(200).json({\n          success: true,\n          data: products.map(product => ({\n            id: product.id.value,\n            name: product.name,\n            sku: product.sku,\n            type: product.type.value,\n            status: product.status.value,\n            category: product.category.value,\n            brand: product.brand?.value,\n            supplier: product.supplier?.value,\n            isActive: product.isActive,\n            createdAt: product.createdAt,\n            updatedAt: product.updatedAt\n          }))\n        });\n      } catch (error) {\n        next(error);\n      }\n    }\n  );\n\n  // ========================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 652,
        "end": 676,
        "startLoc": {
          "line": 652,
          "column": 14,
          "position": 7217
        },
        "endLoc": {
          "line": 676,
          "column": 76,
          "position": 7414
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 618,
        "end": 324,
        "startLoc": {
          "line": 618,
          "column": 17,
          "position": 6919
        },
        "endLoc": {
          "line": 324,
          "column": 57,
          "position": 4070
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "}),\n          customFields: z.record(z.any()).default({}),\n          tags: z.array(z.string()).default([]),\n          notes: z.string().max(1000).default('')\n        })\n      }",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/predictive-analytics.routes.ts",
        "start": 39,
        "end": 44,
        "startLoc": {
          "line": 39,
          "column": 2,
          "position": 543
        },
        "endLoc": {
          "line": 44,
          "column": 2,
          "position": 616
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 68,
        "end": 72,
        "startLoc": {
          "line": 68,
          "column": 11,
          "position": 846
        },
        "endLoc": {
          "line": 72,
          "column": 2,
          "position": 917
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ").optional(),\n          customFields: z.record(z.any()).optional(),\n          tags: z.array(z.string()).optional(),\n          notes: z.string().max(1000).optional()\n        }).optional()\n      }",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/predictive-analytics.routes.ts",
        "start": 73,
        "end": 78,
        "startLoc": {
          "line": 73,
          "column": 2,
          "position": 1098
        },
        "endLoc": {
          "line": 78,
          "column": 2,
          "position": 1173
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 157,
        "end": 161,
        "startLoc": {
          "line": 157,
          "column": 2,
          "position": 2123
        },
        "endLoc": {
          "line": 161,
          "column": 2,
          "position": 2196
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ",\n    validateRequest({\n      params: z.object({\n        organizationId: z.string().uuid()\n      }),\n      query: z.object({\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.string",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/predictive-analytics.routes.ts",
        "start": 114,
        "end": 122,
        "startLoc": {
          "line": 114,
          "column": 2,
          "position": 1382
        },
        "endLoc": {
          "line": 122,
          "column": 7,
          "position": 1493
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 219,
        "end": 104,
        "startLoc": {
          "line": 219,
          "column": 33,
          "position": 2778
        },
        "endLoc": {
          "line": 104,
          "column": 5,
          "position": 882
        }
      }
    },
    {
      "format": "typescript",
      "lines": 29,
      "fragment": ",\n    authenticate,\n    authorize(['analytics:read']),\n    validateRequest({\n      params: z.object({\n        organizationId: z.string().uuid()\n      }),\n      query: z.object({\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.string().default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc'),\n        search: z.string().max(200).optional(),\n        type: z.enum(['sales_forecast', 'demand_prediction', 'churn_prediction', 'revenue_forecast', 'inventory_optimization', 'customer_lifetime_value', 'market_trend', 'risk_assessment']).optional(),\n        status: z.enum(['pending', 'processing', 'completed', 'failed', 'cancelled']).optional(),\n        modelType: z.enum(['linear_regression', 'decision_tree', 'random_forest', 'neural_network', 'time_series', 'clustering', 'classification', 'deep_learning']).optional(),\n        accuracy: z.enum(['low', 'medium', 'high', 'very_high']).optional(),\n        isActive: z.coerce.boolean().optional(),\n        needsRetraining: z.coerce.boolean().optional(),\n        hasPredictions: z.coerce.boolean().optional(),\n        minAccuracy: z.coerce.number().min(0).max(1).optional(),\n        maxAccuracy: z.coerce.number().min(0).max(1).optional(),\n        lastPredictionFrom: z.coerce.date().optional(),\n        lastPredictionTo: z.coerce.date().optional(),\n        nextRetrainFrom: z.coerce.date().optional(),\n        nextRetrainTo: z.coerce.date().optional()\n      })\n    }),\n    predictiveAnalyticsController.searchPredictiveAnalytics",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/predictive-analytics.routes.ts",
        "start": 144,
        "end": 172,
        "startLoc": {
          "line": 144,
          "column": 40,
          "position": 1885
        },
        "endLoc": {
          "line": 172,
          "column": 26,
          "position": 2380
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/predictive-analytics.routes.ts",
        "start": 112,
        "end": 140,
        "startLoc": {
          "line": 112,
          "column": 33,
          "position": 1369
        },
        "endLoc": {
          "line": 140,
          "column": 37,
          "position": 1864
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "(),\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.string().default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc')\n      }",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/predictive-analytics.routes.ts",
        "start": 200,
        "end": 205,
        "startLoc": {
          "line": 200,
          "column": 5,
          "position": 2578
        },
        "endLoc": {
          "line": 205,
          "column": 2,
          "position": 2679
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/user.routes.ts",
        "start": 101,
        "end": 123,
        "startLoc": {
          "line": 101,
          "column": 9,
          "position": 813
        },
        "endLoc": {
          "line": 123,
          "column": 2,
          "position": 1523
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "])\n      }),\n      query: z.object({\n        organizationId: z.string().uuid(),\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.string().default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc')\n      })\n    }),\n    predictiveAnalyticsController.getAnalyticsByStatus",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/predictive-analytics.routes.ts",
        "start": 216,
        "end": 226,
        "startLoc": {
          "line": 216,
          "column": 12,
          "position": 2763
        },
        "endLoc": {
          "line": 226,
          "column": 21,
          "position": 2904
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/predictive-analytics.routes.ts",
        "start": 197,
        "end": 207,
        "startLoc": {
          "line": 197,
          "column": 18,
          "position": 2549
        },
        "endLoc": {
          "line": 207,
          "column": 19,
          "position": 2690
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "query: z.object({\n        organizationId: z.string().uuid(),\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.string().default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc')\n      })\n    }),\n    predictiveAnalyticsController.getActiveModels",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/predictive-analytics.routes.ts",
        "start": 234,
        "end": 242,
        "startLoc": {
          "line": 234,
          "column": 7,
          "position": 2946
        },
        "endLoc": {
          "line": 242,
          "column": 16,
          "position": 3078
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/predictive-analytics.routes.ts",
        "start": 199,
        "end": 207,
        "startLoc": {
          "line": 199,
          "column": 7,
          "position": 2558
        },
        "endLoc": {
          "line": 207,
          "column": 19,
          "position": 2690
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ",\n    authenticate,\n    authorize(['analytics:read']),\n    validateRequest({\n      query: z.object({\n        organizationId: z.string().uuid(),\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.string().default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc')\n      })\n    }),\n    predictiveAnalyticsController.getNeedsRetraining",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/predictive-analytics.routes.ts",
        "start": 246,
        "end": 258,
        "startLoc": {
          "line": 246,
          "column": 20,
          "position": 3099
        },
        "endLoc": {
          "line": 258,
          "column": 19,
          "position": 3252
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/predictive-analytics.routes.ts",
        "start": 230,
        "end": 207,
        "startLoc": {
          "line": 230,
          "column": 10,
          "position": 2925
        },
        "endLoc": {
          "line": 207,
          "column": 19,
          "position": 2690
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": "productId: z.string().uuid().optional(),\n          description: z.string().min(1).max(500),\n          quantity: z.number().min(0.01),\n          unitPrice: z.object({\n            amount: z.number().min(0),\n            currency: z.string().length(3)\n          }),\n          totalPrice: z.object({\n            amount: z.number().min(0),\n            currency: z.string().length(3)\n          }),\n          taxRate: z.number().min(0).max(100).optional(),\n          taxAmount: z.object({\n            amount: z.number().min(0),\n            currency: z.string().length(3)\n          }).optional(),\n          discountRate: z.number().min(0).max(100).optional(),\n          discountAmount: z.object({\n            amount: z.number().min(0),\n            currency: z.string().length(3)\n          }).optional(),\n          notes: z.string().max(500).optional()\n        })).optional",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/invoice.routes.ts",
        "start": 101,
        "end": 123,
        "startLoc": {
          "line": 101,
          "column": 11,
          "position": 1386
        },
        "endLoc": {
          "line": 123,
          "column": 9,
          "position": 1707
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/invoice.routes.ts",
        "start": 34,
        "end": 56,
        "startLoc": {
          "line": 34,
          "column": 11,
          "position": 365
        },
        "endLoc": {
          "line": 56,
          "column": 4,
          "position": 686
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "),\n        paymentMethod: z.enum(['cash', 'credit_card', 'bank_transfer', 'check', 'paypal', 'stripe', 'other']).optional(),\n        reference: z.string().max(100).optional(),\n        notes: z.string().max(1000).optional(),\n        settings: z.object({\n          currency: z.string().length(3).",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/invoice.routes.ts",
        "start": 123,
        "end": 128,
        "startLoc": {
          "line": 123,
          "column": 2,
          "position": 1709
        },
        "endLoc": {
          "line": 128,
          "column": 2,
          "position": 1812
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/invoice.routes.ts",
        "start": 56,
        "end": 61,
        "startLoc": {
          "line": 56,
          "column": 2,
          "position": 689
        },
        "endLoc": {
          "line": 61,
          "column": 2,
          "position": 792
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "),\n          lateFeeRate: z.number().min(0).max(100).optional(),\n          lateFeeAmount: z.object({\n            amount: z.number().min(0),\n            currency: z.string().length(3)\n          }).optional(),\n          notes: z.string().max(1000).optional(),\n          footer: z.string().max(1000).optional(),\n          customFields: z.record(z.any()).optional",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/invoice.routes.ts",
        "start": 131,
        "end": 139,
        "startLoc": {
          "line": 131,
          "column": 2,
          "position": 1879
        },
        "endLoc": {
          "line": 139,
          "column": 9,
          "position": 2012
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/invoice.routes.ts",
        "start": 64,
        "end": 72,
        "startLoc": {
          "line": 64,
          "column": 3,
          "position": 858
        },
        "endLoc": {
          "line": 72,
          "column": 8,
          "position": 991
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "]),\n    validateRequest({\n      params: z.object({\n        organizationId: z.string().uuid()\n      }),\n      query: z.object({\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.string().default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc'),\n        search: z.string().max(200).optional(),\n        type: z.enum(['invoice'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/invoice.routes.ts",
        "start": 179,
        "end": 190,
        "startLoc": {
          "line": 179,
          "column": 15,
          "position": 2276
        },
        "endLoc": {
          "line": 190,
          "column": 10,
          "position": 2450
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/predictive-analytics.routes.ts",
        "start": 114,
        "end": 125,
        "startLoc": {
          "line": 114,
          "column": 17,
          "position": 1380
        },
        "endLoc": {
          "line": 125,
          "column": 17,
          "position": 1554
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ").optional(),\n        type: z.enum(['invoice', 'credit_note', 'debit_note', 'proforma', 'quote', 'receipt']).optional(),\n        status: z.enum(['draft', 'sent', 'paid', 'overdue', 'cancelled', 'refunded', 'partially_paid']).optional(),\n        paymentStatus: z.enum(['pending', 'paid', 'partial', 'overdue', 'cancelled']).optional(),\n        companyId: z.string().uuid().optional(),\n        contactId: z.string().uuid().optional(),\n        issueDateFrom",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/invoice.routes.ts",
        "start": 189,
        "end": 195,
        "startLoc": {
          "line": 189,
          "column": 4,
          "position": 2434
        },
        "endLoc": {
          "line": 195,
          "column": 14,
          "position": 2579
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/invoice.routes.ts",
        "start": 90,
        "end": 96,
        "startLoc": {
          "line": 90,
          "column": 4,
          "position": 1157
        },
        "endLoc": {
          "line": 96,
          "column": 10,
          "position": 1302
        }
      }
    },
    {
      "format": "typescript",
      "lines": 31,
      "fragment": ",\n    authenticate,\n    authorize(['invoice:read']),\n    validateRequest({\n      params: z.object({\n        organizationId: z.string().uuid()\n      }),\n      query: z.object({\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.string().default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc'),\n        search: z.string().max(200).optional(),\n        type: z.enum(['invoice', 'credit_note', 'debit_note', 'proforma', 'quote', 'receipt']).optional(),\n        status: z.enum(['draft', 'sent', 'paid', 'overdue', 'cancelled', 'refunded', 'partially_paid']).optional(),\n        paymentStatus: z.enum(['pending', 'paid', 'partial', 'overdue', 'cancelled']).optional(),\n        companyId: z.string().uuid().optional(),\n        contactId: z.string().uuid().optional(),\n        issueDateFrom: z.coerce.date().optional(),\n        issueDateTo: z.coerce.date().optional(),\n        dueDateFrom: z.coerce.date().optional(),\n        dueDateTo: z.coerce.date().optional(),\n        minAmount: z.coerce.number().min(0).optional(),\n        maxAmount: z.coerce.number().min(0).optional(),\n        isOverdue: z.coerce.boolean().optional(),\n        isPaid: z.coerce.boolean().optional(),\n        isPartiallyPaid: z.coerce.boolean().optional(),\n        isPending: z.coerce.boolean().optional()\n      })\n    }),\n    invoiceController.searchInvoices",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/invoice.routes.ts",
        "start": 211,
        "end": 241,
        "startLoc": {
          "line": 211,
          "column": 40,
          "position": 2790
        },
        "endLoc": {
          "line": 241,
          "column": 15,
          "position": 3294
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/invoice.routes.ts",
        "start": 177,
        "end": 207,
        "startLoc": {
          "line": 177,
          "column": 33,
          "position": 2265
        },
        "endLoc": {
          "line": 207,
          "column": 26,
          "position": 2769
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "])\n      }),\n      query: z.object({\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.string().default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc')\n      })\n    }),\n    invoiceController",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/invoice.routes.ts",
        "start": 266,
        "end": 275,
        "startLoc": {
          "line": 266,
          "column": 10,
          "position": 3457
        },
        "endLoc": {
          "line": 275,
          "column": 18,
          "position": 3581
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 288,
        "end": 207,
        "startLoc": {
          "line": 288,
          "column": 9,
          "position": 3683
        },
        "endLoc": {
          "line": 207,
          "column": 30,
          "position": 2688
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "])\n      }),\n      query: z.object({\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.string().default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc')\n      })\n    }),\n    invoiceController.getInvoicesByStatus",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/invoice.routes.ts",
        "start": 284,
        "end": 293,
        "startLoc": {
          "line": 284,
          "column": 17,
          "position": 3662
        },
        "endLoc": {
          "line": 293,
          "column": 20,
          "position": 3788
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 288,
        "end": 275,
        "startLoc": {
          "line": 288,
          "column": 9,
          "position": 3683
        },
        "endLoc": {
          "line": 275,
          "column": 18,
          "position": 3583
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "])\n      }),\n      query: z.object({\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.string().default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc')\n      })\n    }),\n    invoiceController.getInvoicesByPaymentStatus",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/invoice.routes.ts",
        "start": 302,
        "end": 311,
        "startLoc": {
          "line": 302,
          "column": 12,
          "position": 3861
        },
        "endLoc": {
          "line": 311,
          "column": 27,
          "position": 3987
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 288,
        "end": 275,
        "startLoc": {
          "line": 288,
          "column": 9,
          "position": 3683
        },
        "endLoc": {
          "line": 275,
          "column": 18,
          "position": 3583
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ": z.string().uuid()\n      }),\n      query: z.object({\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.string().default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc')\n      })\n    }),\n    invoiceController.getInvoicesByCompany",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/invoice.routes.ts",
        "start": 320,
        "end": 329,
        "startLoc": {
          "line": 320,
          "column": 10,
          "position": 4040
        },
        "endLoc": {
          "line": 329,
          "column": 21,
          "position": 4175
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 222,
        "end": 275,
        "startLoc": {
          "line": 222,
          "column": 15,
          "position": 2797
        },
        "endLoc": {
          "line": 275,
          "column": 18,
          "position": 3583
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "]),\n    validateRequest({\n      query: z.object({\n        organizationId: z.string().uuid(),\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.string().default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc')\n      })\n    }),\n    invoiceController.getOverdueInvoices",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/invoice.routes.ts",
        "start": 335,
        "end": 345,
        "startLoc": {
          "line": 335,
          "column": 15,
          "position": 4207
        },
        "endLoc": {
          "line": 345,
          "column": 19,
          "position": 4349
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/predictive-analytics.routes.ts",
        "start": 232,
        "end": 275,
        "startLoc": {
          "line": 232,
          "column": 17,
          "position": 2936
        },
        "endLoc": {
          "line": 275,
          "column": 18,
          "position": 3583
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ")\n      }),\n      query: z.object({\n        organizationId: z.string().uuid(),\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.string().default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc')\n      })\n    }),\n    invoiceController.getInvoicesDueSoon",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/invoice.routes.ts",
        "start": 354,
        "end": 364,
        "startLoc": {
          "line": 354,
          "column": 4,
          "position": 4424
        },
        "endLoc": {
          "line": 364,
          "column": 19,
          "position": 4564
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/predictive-analytics.routes.ts",
        "start": 197,
        "end": 275,
        "startLoc": {
          "line": 197,
          "column": 2,
          "position": 2550
        },
        "endLoc": {
          "line": 275,
          "column": 18,
          "position": 3583
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "),\n          customFields: z.record(z.any()).default({}),\n          tags: z.array(z.string()).default([]),\n          notes: z.string().max(1000).default('')\n        })\n      })\n    }),\n    inventoryKardexController",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/inventory-kardex.routes.ts",
        "start": 43,
        "end": 50,
        "startLoc": {
          "line": 43,
          "column": 6,
          "position": 502
        },
        "endLoc": {
          "line": 50,
          "column": 26,
          "position": 583
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 68,
        "end": 46,
        "startLoc": {
          "line": 68,
          "column": 2,
          "position": 847
        },
        "endLoc": {
          "line": 46,
          "column": 30,
          "position": 625
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ").optional(),\n          customFields: z.record(z.any()).optional(),\n          tags: z.array(z.string()).optional(),\n          notes: z.string().max(1000).optional()\n        }).optional()\n      })\n    }),\n    inventoryKardexController",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/inventory-kardex.routes.ts",
        "start": 75,
        "end": 82,
        "startLoc": {
          "line": 75,
          "column": 2,
          "position": 910
        },
        "endLoc": {
          "line": 82,
          "column": 26,
          "position": 994
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 157,
        "end": 80,
        "startLoc": {
          "line": 157,
          "column": 2,
          "position": 2123
        },
        "endLoc": {
          "line": 80,
          "column": 30,
          "position": 1182
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "]),\n    validateRequest({\n      params: z.object({\n        organizationId: z.string().uuid()\n      }),\n      query: z.object({\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.string().default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc'),\n        search: z.string().max(200).optional(),\n        productId",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/inventory-kardex.routes.ts",
        "start": 116,
        "end": 127,
        "startLoc": {
          "line": 116,
          "column": 17,
          "position": 1192
        },
        "endLoc": {
          "line": 127,
          "column": 10,
          "position": 1358
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/predictive-analytics.routes.ts",
        "start": 114,
        "end": 125,
        "startLoc": {
          "line": 114,
          "column": 17,
          "position": 1380
        },
        "endLoc": {
          "line": 125,
          "column": 5,
          "position": 1546
        }
      }
    },
    {
      "format": "typescript",
      "lines": 33,
      "fragment": ",\n    authenticate,\n    authorize(['inventory:read']),\n    validateRequest({\n      params: z.object({\n        organizationId: z.string().uuid()\n      }),\n      query: z.object({\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.string().default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc'),\n        search: z.string().max(200).optional(),\n        productId: z.string().uuid().optional(),\n        warehouseId: z.string().uuid().optional(),\n        locationId: z.string().uuid().optional(),\n        movementType: z.enum(['in', 'out', 'transfer', 'adjustment', 'return', 'damage', 'expired', 'theft']).optional(),\n        movementReason: z.enum(['purchase', 'sale', 'transfer_in', 'transfer_out', 'adjustment', 'return', 'damage', 'expired', 'theft', 'production', 'consumption', 'other']).optional(),\n        status: z.enum(['pending', 'completed', 'cancelled', 'reversed']).optional(),\n        lowStock: z.coerce.boolean().optional(),\n        outOfStock: z.coerce.boolean().optional(),\n        needsReorder: z.coerce.boolean().optional(),\n        hasExpiredItems: z.coerce.boolean().optional(),\n        hasExpiringItems: z.coerce.boolean().optional(),\n        minQuantity: z.coerce.number().min(0).optional(),\n        maxQuantity: z.coerce.number().min(0).optional(),\n        minValue: z.coerce.number().min(0).optional(),\n        maxValue: z.coerce.number().min(0).optional(),\n        costMethod: z.enum(['fifo', 'lifo', 'average', 'standard']).optional(),\n        valuationMethod: z.enum(['fifo', 'lifo', 'average', 'standard']).optional()\n      })\n    }),\n    inventoryKardexController.searchInventoryKardex",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/inventory-kardex.routes.ts",
        "start": 150,
        "end": 182,
        "startLoc": {
          "line": 150,
          "column": 40,
          "position": 1790
        },
        "endLoc": {
          "line": 182,
          "column": 22,
          "position": 2378
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/inventory-kardex.routes.ts",
        "start": 114,
        "end": 146,
        "startLoc": {
          "line": 114,
          "column": 33,
          "position": 1181
        },
        "endLoc": {
          "line": 146,
          "column": 33,
          "position": 1769
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ")\n      }),\n      query: z.object({\n        organizationId: z.string().uuid(),\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.string().default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc')\n      })\n    }),\n    inventoryKardexController",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/inventory-kardex.routes.ts",
        "start": 207,
        "end": 217,
        "startLoc": {
          "line": 207,
          "column": 2,
          "position": 2528
        },
        "endLoc": {
          "line": 217,
          "column": 26,
          "position": 2666
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/predictive-analytics.routes.ts",
        "start": 197,
        "end": 207,
        "startLoc": {
          "line": 197,
          "column": 2,
          "position": 2550
        },
        "endLoc": {
          "line": 207,
          "column": 30,
          "position": 2688
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ": z.string().uuid()\n      }),\n      query: z.object({\n        organizationId: z.string().uuid(),\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.string().default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc')\n      })\n    }),\n    inventoryKardexController.getInventoryByWarehouse",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/inventory-kardex.routes.ts",
        "start": 226,
        "end": 236,
        "startLoc": {
          "line": 226,
          "column": 12,
          "position": 2721
        },
        "endLoc": {
          "line": 236,
          "column": 24,
          "position": 2871
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/inventory-kardex.routes.ts",
        "start": 207,
        "end": 217,
        "startLoc": {
          "line": 207,
          "column": 10,
          "position": 2518
        },
        "endLoc": {
          "line": 217,
          "column": 22,
          "position": 2668
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "]),\n    validateRequest({\n      query: z.object({\n        organizationId: z.string().uuid(),\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.string().default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc')\n      })\n    }),\n    inventoryKardexController.getLowStockInventory",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/inventory-kardex.routes.ts",
        "start": 242,
        "end": 252,
        "startLoc": {
          "line": 242,
          "column": 17,
          "position": 2903
        },
        "endLoc": {
          "line": 252,
          "column": 21,
          "position": 3045
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/predictive-analytics.routes.ts",
        "start": 232,
        "end": 217,
        "startLoc": {
          "line": 232,
          "column": 17,
          "position": 2936
        },
        "endLoc": {
          "line": 217,
          "column": 22,
          "position": 2668
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ",\n    authenticate,\n    authorize(['inventory:read']),\n    validateRequest({\n      query: z.object({\n        organizationId: z.string().uuid(),\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.string().default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc')\n      })\n    }),\n    inventoryKardexController.getOutOfStockInventory",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/inventory-kardex.routes.ts",
        "start": 256,
        "end": 268,
        "startLoc": {
          "line": 256,
          "column": 16,
          "position": 3066
        },
        "endLoc": {
          "line": 268,
          "column": 23,
          "position": 3219
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/inventory-kardex.routes.ts",
        "start": 240,
        "end": 217,
        "startLoc": {
          "line": 240,
          "column": 13,
          "position": 2892
        },
        "endLoc": {
          "line": 217,
          "column": 22,
          "position": 2668
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ",\n    authenticate,\n    authorize(['inventory:read']),\n    validateRequest({\n      query: z.object({\n        organizationId: z.string().uuid(),\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.string().default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc')\n      })\n    }),\n    inventoryKardexController.getNeedsReorderInventory",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/inventory-kardex.routes.ts",
        "start": 272,
        "end": 284,
        "startLoc": {
          "line": 272,
          "column": 17,
          "position": 3240
        },
        "endLoc": {
          "line": 284,
          "column": 25,
          "position": 3393
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/inventory-kardex.routes.ts",
        "start": 240,
        "end": 217,
        "startLoc": {
          "line": 240,
          "column": 13,
          "position": 2892
        },
        "endLoc": {
          "line": 217,
          "column": 22,
          "position": 2668
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ",\n    authenticate,\n    authorize(['inventory:update']),\n    validateRequest({\n      params: z.object({\n        id: z.string().uuid()\n      }),\n      body: z.object({\n        quantity: z.number().min(0.01),\n        notes",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/inventory-kardex.routes.ts",
        "start": 339,
        "end": 348,
        "startLoc": {
          "line": 339,
          "column": 15,
          "position": 4007
        },
        "endLoc": {
          "line": 348,
          "column": 6,
          "position": 4083
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/inventory-kardex.routes.ts",
        "start": 321,
        "end": 330,
        "startLoc": {
          "line": 321,
          "column": 15,
          "position": 3841
        },
        "endLoc": {
          "line": 330,
          "column": 10,
          "position": 3917
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "lowStockThreshold: z.number().min(0).optional(),\n          reorderPoint: z.number().min(0).optional(),\n          reorderQuantity: z.number().min(0).optional(),\n          costMethod: z.enum(['fifo', 'lifo', 'average', 'standard']).optional(),\n          valuationMethod: z.enum(['fifo', 'lifo', 'average', 'standard']).optional(),\n          tags",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/inventory-kardex.routes.ts",
        "start": 366,
        "end": 371,
        "startLoc": {
          "line": 366,
          "column": 11,
          "position": 4210
        },
        "endLoc": {
          "line": 371,
          "column": 5,
          "position": 4324
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/inventory-kardex.routes.ts",
        "start": 67,
        "end": 72,
        "startLoc": {
          "line": 67,
          "column": 11,
          "position": 744
        },
        "endLoc": {
          "line": 72,
          "column": 12,
          "position": 858
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "z.object({\n            email: z.boolean().optional(),\n            sms: z.boolean().optional(),\n            push: z.boolean().optional(),\n            phone: z.boolean().optional()\n          }).",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/contact.routes.ts",
        "start": 76,
        "end": 81,
        "startLoc": {
          "line": 76,
          "column": 2,
          "position": 1160
        },
        "endLoc": {
          "line": 81,
          "column": 2,
          "position": 1228
        }
      },
      "secondFile": {
        "name": "apps/api/src/shared/utils/validation.utils.ts",
        "start": 106,
        "end": 111,
        "startLoc": {
          "line": 106,
          "column": 2,
          "position": 916
        },
        "endLoc": {
          "line": 111,
          "column": 2,
          "position": 983
        }
      }
    },
    {
      "format": "typescript",
      "lines": 70,
      "fragment": "),\n        email: z.string().email().optional(),\n        phone: z.string().regex(/^[\\+]?[1-9][\\d]{0,15}$/).optional(),\n        mobile: z.string().regex(/^[\\+]?[1-9][\\d]{0,15}$/).optional(),\n        fax: z.string().regex(/^[\\+]?[1-9][\\d]{0,15}$/).optional(),\n        website: z.string().url().optional(),\n        address: z.object({\n          street: z.string().min(1),\n          city: z.string().min(1),\n          state: z.string().optional(),\n          postalCode: z.string().min(1),\n          country: z.string().min(1),\n          countryCode: z.string().length(2)\n        }).optional(),\n        birthday: z.coerce.date().optional(),\n        anniversary: z.coerce.date().optional(),\n        gender: z.enum(['male', 'female', 'other', 'prefer_not_to_say']).optional(),\n        maritalStatus: z.enum(['single', 'married', 'divorced', 'widowed', 'separated']).optional(),\n        children: z.number().int().min(0).max(20).optional(),\n        education: z.string().max(200).optional(),\n        profession: z.string().max(100).optional(),\n        industry: z.string().max(100).optional(),\n        experience: z.number().int().min(0).max(50).optional(),\n        salary: z.object({\n          amount: z.number().min(0),\n          currency: z.string().length(3)\n        }).optional(),\n        socialMedia: z.object({\n          linkedin: z.string().url().optional(),\n          twitter: z.string().url().optional(),\n          facebook: z.string().url().optional(),\n          instagram: z.string().url().optional(),\n          youtube: z.string().url().optional(),\n          tiktok: z.string().url().optional(),\n          other: z.record(z.string()).optional()\n        }).optional(),\n        communication: z.object({\n          preferredMethod: z.enum(['email', 'phone', 'sms', 'whatsapp', 'linkedin', 'other']).optional(),\n          bestTimeToCall: z.string().optional(),\n          timeZone: z.string().optional(),\n          doNotCall: z.boolean().optional(),\n          doNotEmail: z.boolean().optional(),\n          doNotSms: z.boolean().optional()\n        }).optional(),\n        settings: z.object({\n          notifications: z.object({\n            email: z.boolean().optional(),\n            sms: z.boolean().optional(),\n            push: z.boolean().optional(),\n            phone: z.boolean().optional()\n          }).optional(),\n          preferences: z.object({\n            language: z.string().length(2).optional(),\n            timezone: z.string().optional(),\n            currency: z.string().length(3).optional(),\n            dateFormat: z.string().optional(),\n            timeFormat: z.string().optional()\n          }).optional(),\n          customFields: z.record(z.any()).optional(),\n          tags: z.array(z.string()).optional(),\n          notes: z.string().optional(),\n          internalNotes: z.string().optional()\n        }).optional(),\n        assignedUserId: z.string().uuid().optional(),\n        nextFollowUpDate: z.coerce.date().optional(),\n        leadScore: z.number().int().min(0).max(100).optional(),\n        engagementScore: z.number().int().min(0).max(100).optional()\n      })\n    }),\n    contactController.updateContact",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/contact.routes.ts",
        "start": 119,
        "end": 188,
        "startLoc": {
          "line": 119,
          "column": 2,
          "position": 1860
        },
        "endLoc": {
          "line": 188,
          "column": 14,
          "position": 2985
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/contact.routes.ts",
        "start": 31,
        "end": 100,
        "startLoc": {
          "line": 31,
          "column": 2,
          "position": 395
        },
        "endLoc": {
          "line": 100,
          "column": 14,
          "position": 1520
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ").optional(),\n        type: z.enum(['primary', 'secondary', 'decision_maker', 'influencer', 'user', 'technical', 'financial', 'procurement']).optional(),\n        status: z.enum(['active', 'inactive', 'unsubscribed', 'bounced', 'spam', 'deleted']).optional(),\n        source: z.enum(['website', 'referral', 'cold_call', 'email', 'social_media', 'event', 'trade_show', 'webinar', 'content', 'advertising', 'other']).optional(),\n        priority: z.enum(['low', 'medium', 'high', 'urgent']).optional(),\n        assignedUserId",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/contact.routes.ts",
        "start": 242,
        "end": 247,
        "startLoc": {
          "line": 242,
          "column": 2,
          "position": 3326
        },
        "endLoc": {
          "line": 247,
          "column": 15,
          "position": 3481
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/contact.routes.ts",
        "start": 115,
        "end": 120,
        "startLoc": {
          "line": 115,
          "column": 4,
          "position": 1709
        },
        "endLoc": {
          "line": 120,
          "column": 6,
          "position": 1864
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ",\n    validateRequest({\n      params: z.object({\n        organizationId: z.string().uuid()\n      }),\n      query: z.object({\n        minScore: z.coerce.number().int().min(0).max(100).default(70)\n      })\n    }),\n    contactController.getHighlyEngagedContacts",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/contact.routes.ts",
        "start": 440,
        "end": 449,
        "startLoc": {
          "line": 440,
          "column": 47,
          "position": 5422
        },
        "endLoc": {
          "line": 449,
          "column": 25,
          "position": 5511
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/contact.routes.ts",
        "start": 403,
        "end": 412,
        "startLoc": {
          "line": 403,
          "column": 49,
          "position": 5174
        },
        "endLoc": {
          "line": 412,
          "column": 18,
          "position": 5263
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ": z.object({\n          companyId: z.string().uuid().optional(),\n          firstName: z.string().min(1).max(100).optional(),\n          lastName: z.string().min(1).max(100).optional(),\n          middleName: z.string().max(100).optional(),\n          title: z.string().max(100).optional(),\n          department: z.string().max(100).optional(),\n          type: z.enum(['primary', 'secondary', 'decision_maker', 'influencer', 'user', 'technical', 'financial', 'procurement']).optional(),\n          status: z.enum(['active', 'inactive', 'unsubscribed', 'bounced', 'spam', 'deleted']).optional(),\n          source: z.enum(['website', 'referral', 'cold_call', 'email', 'social_media', 'event', 'trade_show', 'webinar', 'content', 'advertising', 'other']).optional(),\n          priority: z.enum(['low', 'medium', 'high', 'urgent']).optional(),\n          email: z.string().email().optional(),\n          phone: z.string().regex(/^[\\+]?[1-9][\\d]{0,15}$/).optional(),\n          mobile: z.string().regex(/^[\\+]?[1-9][\\d]{0,15}$/).optional(),\n          fax: z.string().regex(/^[\\+]?[1-9][\\d]{0,15}$/).optional(),\n          website: z.string().url().optional(),\n          assignedUserId",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/contact.routes.ts",
        "start": 545,
        "end": 561,
        "startLoc": {
          "line": 545,
          "column": 8,
          "position": 6113
        },
        "endLoc": {
          "line": 561,
          "column": 15,
          "position": 6496
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/contact.routes.ts",
        "start": 109,
        "end": 37,
        "startLoc": {
          "line": 109,
          "column": 5,
          "position": 1579
        },
        "endLoc": {
          "line": 37,
          "column": 8,
          "position": 497
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ").optional(),\n          settings: z.object({\n            notifications: z.object({\n              email: z.boolean().optional(),\n              sms: z.boolean().optional(),\n              push: z.boolean().optional(),\n              phone: z.boolean().optional()\n            }).optional(),\n            preferences: z.object({\n              language: z.string().length(2).optional(),\n              timezone: z.string().optional(),\n              currency: z.string().length(3).optional(),\n              dateFormat: z.string().optional(),\n              timeFormat: z.string().optional()\n            }).optional(),\n            customFields: z.record(z.any()).optional(),\n            tags: z.array(z.string()).optional(),\n            notes: z.string().optional(),\n            internalNotes: z.string().optional()\n          }).optional()\n        }",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/contact.routes.ts",
        "start": 564,
        "end": 584,
        "startLoc": {
          "line": 564,
          "column": 4,
          "position": 6582
        },
        "endLoc": {
          "line": 584,
          "column": 2,
          "position": 6858
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/contact.routes.ts",
        "start": 74,
        "end": 93,
        "startLoc": {
          "line": 74,
          "column": 2,
          "position": 1139
        },
        "endLoc": {
          "line": 93,
          "column": 2,
          "position": 1413
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ").optional(),\n        address: z.object({\n          street: z.string().min(1),\n          city: z.string().min(1),\n          state: z.string().optional(),\n          postalCode: z.string().min(1),\n          country: z.string().min(1),\n          countryCode: z.string().length(2)\n        }).optional(),\n        billingAddress",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/company.routes.ts",
        "start": 31,
        "end": 40,
        "startLoc": {
          "line": 31,
          "column": 25,
          "position": 369
        },
        "endLoc": {
          "line": 40,
          "column": 15,
          "position": 490
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/contact.routes.ts",
        "start": 36,
        "end": 45,
        "startLoc": {
          "line": 36,
          "column": 2,
          "position": 489
        },
        "endLoc": {
          "line": 45,
          "column": 9,
          "position": 610
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ": z.object({\n          street: z.string().min(1),\n          city: z.string().min(1),\n          state: z.string().optional(),\n          postalCode: z.string().min(1),\n          country: z.string().min(1),\n          countryCode: z.string().length(2)\n        }).optional(),\n        shippingAddress",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/company.routes.ts",
        "start": 40,
        "end": 48,
        "startLoc": {
          "line": 40,
          "column": 15,
          "position": 491
        },
        "endLoc": {
          "line": 48,
          "column": 16,
          "position": 603
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/contact.routes.ts",
        "start": 37,
        "end": 45,
        "startLoc": {
          "line": 37,
          "column": 8,
          "position": 498
        },
        "endLoc": {
          "line": 45,
          "column": 9,
          "position": 610
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ": z.object({\n          street: z.string().min(1),\n          city: z.string().min(1),\n          state: z.string().optional(),\n          postalCode: z.string().min(1),\n          country: z.string().min(1),\n          countryCode: z.string().length(2)\n        }).optional(),\n        taxId",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/company.routes.ts",
        "start": 48,
        "end": 56,
        "startLoc": {
          "line": 48,
          "column": 16,
          "position": 604
        },
        "endLoc": {
          "line": 56,
          "column": 6,
          "position": 716
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/contact.routes.ts",
        "start": 37,
        "end": 45,
        "startLoc": {
          "line": 37,
          "column": 8,
          "position": 498
        },
        "endLoc": {
          "line": 45,
          "column": 9,
          "position": 610
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ": z.number().int().min(0).max(100).optional(),\n        settings: z.object({\n          notifications: z.object({\n            email: z.boolean().optional(),\n            sms: z.boolean().optional(),\n            push: z.boolean().optional()\n          }",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/company.routes.ts",
        "start": 69,
        "end": 75,
        "startLoc": {
          "line": 69,
          "column": 10,
          "position": 978
        },
        "endLoc": {
          "line": 75,
          "column": 2,
          "position": 1070
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/contact.routes.ts",
        "start": 564,
        "end": 79,
        "startLoc": {
          "line": 564,
          "column": 16,
          "position": 6562
        },
        "endLoc": {
          "line": 79,
          "column": 2,
          "position": 1209
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ": z.boolean().optional()\n          }).optional(),\n          preferences: z.object({\n            language: z.string().length(2).optional(),\n            timezone: z.string().optional(),\n            currency: z.string().length(3).optional(),\n            dateFormat: z.string().optional()\n          }",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/company.routes.ts",
        "start": 74,
        "end": 81,
        "startLoc": {
          "line": 74,
          "column": 5,
          "position": 1057
        },
        "endLoc": {
          "line": 81,
          "column": 2,
          "position": 1158
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/contact.routes.ts",
        "start": 80,
        "end": 86,
        "startLoc": {
          "line": 80,
          "column": 6,
          "position": 1213
        },
        "endLoc": {
          "line": 86,
          "column": 2,
          "position": 1312
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ": z.string().optional()\n          }).optional(),\n          customFields: z.record(z.any()).optional(),\n          tags: z.array(z.string()).optional(),\n          notes: z.string().optional()\n        }",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/company.routes.ts",
        "start": 80,
        "end": 85,
        "startLoc": {
          "line": 80,
          "column": 11,
          "position": 1145
        },
        "endLoc": {
          "line": 85,
          "column": 2,
          "position": 1221
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/contact.routes.ts",
        "start": 87,
        "end": 91,
        "startLoc": {
          "line": 87,
          "column": 11,
          "position": 1316
        },
        "endLoc": {
          "line": 91,
          "column": 2,
          "position": 1390
        }
      }
    },
    {
      "format": "typescript",
      "lines": 61,
      "fragment": "),\n        website: z.string().url().optional(),\n        email: z.string().email().optional(),\n        phone: z.string().regex(/^[\\+]?[1-9][\\d]{0,15}$/).optional(),\n        address: z.object({\n          street: z.string().min(1),\n          city: z.string().min(1),\n          state: z.string().optional(),\n          postalCode: z.string().min(1),\n          country: z.string().min(1),\n          countryCode: z.string().length(2)\n        }).optional(),\n        billingAddress: z.object({\n          street: z.string().min(1),\n          city: z.string().min(1),\n          state: z.string().optional(),\n          postalCode: z.string().min(1),\n          country: z.string().min(1),\n          countryCode: z.string().length(2)\n        }).optional(),\n        shippingAddress: z.object({\n          street: z.string().min(1),\n          city: z.string().min(1),\n          state: z.string().optional(),\n          postalCode: z.string().min(1),\n          country: z.string().min(1),\n          countryCode: z.string().length(2)\n        }).optional(),\n        taxId: z.string().min(5).max(20).optional(),\n        vatNumber: z.string().min(8).max(15).optional(),\n        registrationNumber: z.string().max(50).optional(),\n        description: z.string().max(1000).optional(),\n        annualRevenue: z.object({\n          amount: z.number().min(0),\n          currency: z.string().length(3)\n        }).optional(),\n        employeeCount: z.number().int().min(0).max(1000000).optional(),\n        foundedYear: z.number().int().min(1800).max(new Date().getFullYear()).optional(),\n        parentCompanyId: z.string().uuid().optional(),\n        assignedUserId: z.string().uuid().optional(),\n        nextFollowUpDate: z.coerce.date().optional(),\n        leadScore: z.number().int().min(0).max(100).optional(),\n        settings: z.object({\n          notifications: z.object({\n            email: z.boolean().optional(),\n            sms: z.boolean().optional(),\n            push: z.boolean().optional()\n          }).optional(),\n          preferences: z.object({\n            language: z.string().length(2).optional(),\n            timezone: z.string().optional(),\n            currency: z.string().length(3).optional(),\n            dateFormat: z.string().optional()\n          }).optional(),\n          customFields: z.record(z.any()).optional(),\n          tags: z.array(z.string()).optional(),\n          notes: z.string().optional()\n        }).optional()\n      })\n    }),\n    companyController.updateCompany",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/company.routes.ts",
        "start": 104,
        "end": 164,
        "startLoc": {
          "line": 104,
          "column": 2,
          "position": 1500
        },
        "endLoc": {
          "line": 164,
          "column": 14,
          "position": 2425
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/company.routes.ts",
        "start": 28,
        "end": 88,
        "startLoc": {
          "line": 28,
          "column": 2,
          "position": 315
        },
        "endLoc": {
          "line": 88,
          "column": 14,
          "position": 1240
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "router.get('/organization/:organizationId/search',\n    validateRequest({\n      params: z.object({\n        organizationId: z.string().uuid()\n      }),\n      query: z.object({\n        query: z.string().optional(),\n        type: z.enum(['customer'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/company.routes.ts",
        "start": 202,
        "end": 209,
        "startLoc": {
          "line": 202,
          "column": 3,
          "position": 2643
        },
        "endLoc": {
          "line": 209,
          "column": 11,
          "position": 2718
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/contact.routes.ts",
        "start": 236,
        "end": 243,
        "startLoc": {
          "line": 236,
          "column": 3,
          "position": 3267
        },
        "endLoc": {
          "line": 243,
          "column": 10,
          "position": 3342
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ").optional(),\n        lastContactAfter: z.coerce.date().optional(),\n        lastContactBefore: z.coerce.date().optional(),\n        nextFollowUpAfter: z.coerce.date().optional(),\n        nextFollowUpBefore: z.coerce.date().optional(),\n        createdAfter",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/company.routes.ts",
        "start": 227,
        "end": 232,
        "startLoc": {
          "line": 227,
          "column": 5,
          "position": 3156
        },
        "endLoc": {
          "line": 232,
          "column": 13,
          "position": 3232
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/contact.routes.ts",
        "start": 269,
        "end": 274,
        "startLoc": {
          "line": 269,
          "column": 2,
          "position": 3967
        },
        "endLoc": {
          "line": 274,
          "column": 19,
          "position": 4043
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ": z.coerce.date().optional(),\n        createdAfter: z.coerce.date().optional(),\n        createdBefore: z.coerce.date().optional(),\n        updatedAfter: z.coerce.date().optional(),\n        updatedBefore: z.coerce.date().optional(),\n        tags",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/company.routes.ts",
        "start": 231,
        "end": 236,
        "startLoc": {
          "line": 231,
          "column": 19,
          "position": 3216
        },
        "endLoc": {
          "line": 236,
          "column": 5,
          "position": 3300
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/contact.routes.ts",
        "start": 281,
        "end": 286,
        "startLoc": {
          "line": 281,
          "column": 33,
          "position": 4163
        },
        "endLoc": {
          "line": 286,
          "column": 14,
          "position": 4247
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "router.get('/organization/:organizationId/high-score-leads',\n    validateRequest({\n      params: z.object({\n        organizationId: z.string().uuid()\n      }),\n      query: z.object({\n        minScore: z.coerce.number().int().min(0).max(100).default(70)\n      })\n    }),\n    companyController",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/company.routes.ts",
        "start": 338,
        "end": 347,
        "startLoc": {
          "line": 338,
          "column": 3,
          "position": 4064
        },
        "endLoc": {
          "line": 347,
          "column": 18,
          "position": 4156
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/contact.routes.ts",
        "start": 403,
        "end": 412,
        "startLoc": {
          "line": 403,
          "column": 3,
          "position": 5169
        },
        "endLoc": {
          "line": 412,
          "column": 18,
          "position": 5261
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ": z.object({\n          name: z.string().min(1).max(200).optional(),\n          legalName: z.string().max(200).optional(),\n          type: z.enum(['customer', 'supplier', 'partner', 'prospect', 'competitor']).optional(),\n          status: z.enum(['active', 'inactive', 'suspended', 'prospect', 'lead']).optional(),\n          size: z.enum(['startup', 'small', 'medium', 'large', 'enterprise']).optional(),\n          industry: z.string().min(1).max(100).optional(),\n          source: z.enum(['website', 'referral', 'cold_call', 'email', 'social_media', 'event', 'other']).optional(),\n          website: z.string().url().optional(),\n          email: z.string().email().optional(),\n          phone: z.string().regex(/^[\\+]?[1-9][\\d]{0,15}$/).optional(),\n          taxId",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/company.routes.ts",
        "start": 379,
        "end": 390,
        "startLoc": {
          "line": 379,
          "column": 8,
          "position": 4366
        },
        "endLoc": {
          "line": 390,
          "column": 6,
          "position": 4629
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/company.routes.ts",
        "start": 97,
        "end": 32,
        "startLoc": {
          "line": 97,
          "column": 5,
          "position": 1299
        },
        "endLoc": {
          "line": 32,
          "column": 8,
          "position": 377
        }
      }
    },
    {
      "format": "typescript",
      "lines": 34,
      "fragment": ").optional(),\n          taxId: z.string().min(5).max(20).optional(),\n          vatNumber: z.string().min(8).max(15).optional(),\n          registrationNumber: z.string().max(50).optional(),\n          description: z.string().max(1000).optional(),\n          annualRevenue: z.object({\n            amount: z.number().min(0),\n            currency: z.string().length(3)\n          }).optional(),\n          employeeCount: z.number().int().min(0).max(1000000).optional(),\n          foundedYear: z.number().int().min(1800).max(new Date().getFullYear()).optional(),\n          parentCompanyId: z.string().uuid().optional(),\n          assignedUserId: z.string().uuid().optional(),\n          nextFollowUpDate: z.coerce.date().optional(),\n          leadScore: z.number().int().min(0).max(100).optional(),\n          settings: z.object({\n            notifications: z.object({\n              email: z.boolean().optional(),\n              sms: z.boolean().optional(),\n              push: z.boolean().optional()\n            }).optional(),\n            preferences: z.object({\n              language: z.string().length(2).optional(),\n              timezone: z.string().optional(),\n              currency: z.string().length(3).optional(),\n              dateFormat: z.string().optional()\n            }).optional(),\n            customFields: z.record(z.any()).optional(),\n            tags: z.array(z.string()).optional(),\n            notes: z.string().optional()\n          }).optional()\n        })\n      })\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/company.routes.ts",
        "start": 389,
        "end": 422,
        "startLoc": {
          "line": 389,
          "column": 25,
          "position": 4621
        },
        "endLoc": {
          "line": 422,
          "column": 2,
          "position": 5150
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/company.routes.ts",
        "start": 55,
        "end": 87,
        "startLoc": {
          "line": 55,
          "column": 2,
          "position": 708
        },
        "endLoc": {
          "line": 87,
          "column": 2,
          "position": 1235
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "]),\n    validateRequest({\n      body: z.object({\n        organizationId: z.string().uuid(),\n        name: z.string().min(1).max(255),\n        type: z.enum(['hexagonal'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/architecture.routes.ts",
        "start": 20,
        "end": 25,
        "startLoc": {
          "line": 20,
          "column": 22,
          "position": 131
        },
        "endLoc": {
          "line": 25,
          "column": 12,
          "position": 195
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/predictive-analytics.routes.ts",
        "start": 20,
        "end": 25,
        "startLoc": {
          "line": 20,
          "column": 19,
          "position": 131
        },
        "endLoc": {
          "line": 25,
          "column": 17,
          "position": 195
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "),\n          customFields: z.record(z.any()).default({}),\n          tags: z.array(z.string()).default([]),\n          notes: z.string().max(1000).default('')\n        })\n      })\n    }),\n    architectureController",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/architecture.routes.ts",
        "start": 53,
        "end": 60,
        "startLoc": {
          "line": 53,
          "column": 2,
          "position": 748
        },
        "endLoc": {
          "line": 60,
          "column": 23,
          "position": 829
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 68,
        "end": 46,
        "startLoc": {
          "line": 68,
          "column": 2,
          "position": 847
        },
        "endLoc": {
          "line": 46,
          "column": 30,
          "position": 625
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "]),\n    validateRequest({\n      params: z.object({\n        id: z.string().uuid()\n      }),\n      body: z.object({\n        name: z.string().min(1).max(255).optional(),\n        type: z.enum(['hexagonal'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/architecture.routes.ts",
        "start": 66,
        "end": 73,
        "startLoc": {
          "line": 66,
          "column": 22,
          "position": 863
        },
        "endLoc": {
          "line": 73,
          "column": 12,
          "position": 945
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/predictive-analytics.routes.ts",
        "start": 52,
        "end": 59,
        "startLoc": {
          "line": 52,
          "column": 19,
          "position": 659
        },
        "endLoc": {
          "line": 59,
          "column": 17,
          "position": 741
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "),\n        description: z.string().max(1000).optional(),\n        settings: z.object({\n          layers: z.array(z.object({\n            id: z.string().uuid(),\n            name: z.string().min(1).max(255),\n            type: z.enum(['domain', 'application', 'infrastructure', 'presentation', 'shared']),\n            description: z.string().max(1000),\n            components: z.array(z.object({\n              id: z.string().uuid(),\n              name: z.string().min(1).max(255),\n              type: z.enum(['entity', 'repository', 'use_case', 'service', 'controller', 'middleware', 'dto', 'route']),\n              description: z.string().max(1000),\n              dependencies: z.array(z.string()).default([]),\n              interfaces: z.array(z.string()).default([]),\n              implementation: z.string().max(5000),\n              tests: z.array(z.string()).default([]),\n              documentation: z.string().max(5000)\n            })),",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/architecture.routes.ts",
        "start": 73,
        "end": 91,
        "startLoc": {
          "line": 73,
          "column": 2,
          "position": 963
        },
        "endLoc": {
          "line": 91,
          "column": 2,
          "position": 1290
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/architecture.routes.ts",
        "start": 25,
        "end": 43,
        "startLoc": {
          "line": 25,
          "column": 2,
          "position": 209
        },
        "endLoc": {
          "line": 43,
          "column": 2,
          "position": 536
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "()).optional(),\n          customFields: z.record(z.any()).optional(),\n          tags: z.array(z.string()).optional(),\n          notes: z.string().max(1000).optional()\n        }).optional()\n      })\n    }),\n    architectureController",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/architecture.routes.ts",
        "start": 101,
        "end": 108,
        "startLoc": {
          "line": 101,
          "column": 7,
          "position": 1478
        },
        "endLoc": {
          "line": 108,
          "column": 23,
          "position": 1564
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/predictive-analytics.routes.ts",
        "start": 73,
        "end": 80,
        "startLoc": {
          "line": 73,
          "column": 4,
          "position": 1096
        },
        "endLoc": {
          "line": 80,
          "column": 30,
          "position": 1182
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "]),\n    validateRequest({\n      params: z.object({\n        organizationId: z.string().uuid()\n      }),\n      query: z.object({\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.string().default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc'),\n        search: z.string().max(200).optional(),\n        type: z.enum(['hexagonal'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/architecture.routes.ts",
        "start": 142,
        "end": 153,
        "startLoc": {
          "line": 142,
          "column": 20,
          "position": 1762
        },
        "endLoc": {
          "line": 153,
          "column": 12,
          "position": 1936
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/predictive-analytics.routes.ts",
        "start": 114,
        "end": 125,
        "startLoc": {
          "line": 114,
          "column": 17,
          "position": 1380
        },
        "endLoc": {
          "line": 125,
          "column": 17,
          "position": 1554
        }
      }
    },
    {
      "format": "typescript",
      "lines": 26,
      "fragment": ",\n    authenticate,\n    authorize(['architecture:read']),\n    validateRequest({\n      params: z.object({\n        organizationId: z.string().uuid()\n      }),\n      query: z.object({\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.string().default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc'),\n        search: z.string().max(200).optional(),\n        type: z.enum(['hexagonal', 'layered', 'microservices', 'monolithic', 'event_driven']).optional(),\n        status: z.enum(['design', 'implementation', 'testing', 'deployed', 'maintenance']).optional(),\n        layerType: z.enum(['domain', 'application', 'infrastructure', 'presentation', 'shared']).optional(),\n        componentType: z.enum(['entity', 'repository', 'use_case', 'service', 'controller', 'middleware', 'dto', 'route']).optional(),\n        isActive: z.coerce.boolean().optional(),\n        hasMetrics: z.coerce.boolean().optional(),\n        minQualityScore: z.coerce.number().min(0).max(10).optional(),\n        maxQualityScore: z.coerce.number().min(0).max(10).optional(),\n        lastAnalysisFrom: z.coerce.date().optional(),\n        lastAnalysisTo: z.coerce.date().optional()\n      })\n    }),\n    architectureController.searchArchitectures",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/architecture.routes.ts",
        "start": 169,
        "end": 194,
        "startLoc": {
          "line": 169,
          "column": 40,
          "position": 2210
        },
        "endLoc": {
          "line": 194,
          "column": 20,
          "position": 2648
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/architecture.routes.ts",
        "start": 140,
        "end": 165,
        "startLoc": {
          "line": 140,
          "column": 33,
          "position": 1751
        },
        "endLoc": {
          "line": 165,
          "column": 31,
          "position": 2189
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "])\n      }),\n      query: z.object({\n        organizationId: z.string().uuid(),\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.string().default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc')\n      })\n    }),\n    architectureController",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/architecture.routes.ts",
        "start": 219,
        "end": 229,
        "startLoc": {
          "line": 219,
          "column": 15,
          "position": 2808
        },
        "endLoc": {
          "line": 229,
          "column": 23,
          "position": 2947
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/predictive-analytics.routes.ts",
        "start": 197,
        "end": 207,
        "startLoc": {
          "line": 197,
          "column": 18,
          "position": 2549
        },
        "endLoc": {
          "line": 207,
          "column": 30,
          "position": 2688
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "])\n      }),\n      query: z.object({\n        organizationId: z.string().uuid(),\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.string().default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc')\n      })\n    }),\n    architectureController.getArchitecturesByStatus",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/architecture.routes.ts",
        "start": 238,
        "end": 248,
        "startLoc": {
          "line": 238,
          "column": 14,
          "position": 3022
        },
        "endLoc": {
          "line": 248,
          "column": 25,
          "position": 3163
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/predictive-analytics.routes.ts",
        "start": 197,
        "end": 229,
        "startLoc": {
          "line": 197,
          "column": 18,
          "position": 2549
        },
        "endLoc": {
          "line": 229,
          "column": 23,
          "position": 2949
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "]),\n    validateRequest({\n      query: z.object({\n        organizationId: z.string().uuid(),\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.string().default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc')\n      })\n    }),\n    architectureController.getActiveArchitectures",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/architecture.routes.ts",
        "start": 254,
        "end": 264,
        "startLoc": {
          "line": 254,
          "column": 20,
          "position": 3195
        },
        "endLoc": {
          "line": 264,
          "column": 23,
          "position": 3337
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/predictive-analytics.routes.ts",
        "start": 232,
        "end": 229,
        "startLoc": {
          "line": 232,
          "column": 17,
          "position": 2936
        },
        "endLoc": {
          "line": 229,
          "column": 23,
          "position": 2949
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ",\n    authenticate,\n    authorize(['architecture:read']),\n    validateRequest({\n      query: z.object({\n        organizationId: z.string().uuid(),\n        page: z.coerce.number().int().min(1).default(1),\n        limit: z.coerce.number().int().min(1).max(100).default(20),\n        sortBy: z.string().default('createdAt'),\n        sortOrder: z.enum(['asc', 'desc']).default('desc')\n      })\n    }),\n    architectureController.getArchitecturesWithMetrics",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/routes/architecture.routes.ts",
        "start": 268,
        "end": 280,
        "startLoc": {
          "line": 268,
          "column": 16,
          "position": 3358
        },
        "endLoc": {
          "line": 280,
          "column": 28,
          "position": 3511
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/architecture.routes.ts",
        "start": 252,
        "end": 229,
        "startLoc": {
          "line": 252,
          "column": 10,
          "position": 3184
        },
        "endLoc": {
          "line": 229,
          "column": 23,
          "position": 2949
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "ZodError) {\n    res.status(400).json({\n      success: false,\n      error: 'Validation failed',\n      details: error.errors.map(err => ({\n        field: err.path.join('.'),\n        message: err.message,\n        code: err.code\n      })),\n      timestamp: new Date(),",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/middleware/error.middleware.ts",
        "start": 32,
        "end": 41,
        "startLoc": {
          "line": 32,
          "column": 2,
          "position": 219
        },
        "endLoc": {
          "line": 41,
          "column": 2,
          "position": 313
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/middleware/validation.middleware.ts",
        "start": 32,
        "end": 42,
        "startLoc": {
          "line": 32,
          "column": 2,
          "position": 303
        },
        "endLoc": {
          "line": 42,
          "column": 2,
          "position": 399
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "= z.object({\n  success: z.boolean(),\n  data: z.any().optional(),\n  error: z.string().optional(),\n  message: z.string().optional(),\n  timestamp",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/user.dto.ts",
        "start": 109,
        "end": 114,
        "startLoc": {
          "line": 109,
          "column": 2,
          "position": 1396
        },
        "endLoc": {
          "line": 114,
          "column": 10,
          "position": 1461
        }
      },
      "secondFile": {
        "name": "packages/shared/src/contracts/index.ts",
        "start": 11,
        "end": 16,
        "startLoc": {
          "line": 11,
          "column": 2,
          "position": 34
        },
        "endLoc": {
          "line": 16,
          "column": 10,
          "position": 99
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ").default(10),\n      allowBackorder: z.boolean().default(false),\n      allowPreorder: z.boolean().default(false)\n    }),\n    pricing: z.object({\n      costPrice: z.object({\n        amount: z.number().min(0,",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/product.dto.ts",
        "start": 30,
        "end": 36,
        "startLoc": {
          "line": 30,
          "column": 43,
          "position": 414
        },
        "endLoc": {
          "line": 36,
          "column": 2,
          "position": 491
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 35,
        "end": 41,
        "startLoc": {
          "line": 35,
          "column": 2,
          "position": 414
        },
        "endLoc": {
          "line": 41,
          "column": 2,
          "position": 491
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ")\n      }).optional(),\n      requiresShipping: z.boolean().default(true),\n      freeShipping: z.boolean().default(false)\n    }),\n    seo: z.object({\n      metaTitle: z.string().max(60,",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/product.dto.ts",
        "start": 54,
        "end": 60,
        "startLoc": {
          "line": 54,
          "column": 30,
          "position": 764
        },
        "endLoc": {
          "line": 60,
          "column": 2,
          "position": 834
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 59,
        "end": 65,
        "startLoc": {
          "line": 59,
          "column": 2,
          "position": 728
        },
        "endLoc": {
          "line": 65,
          "column": 2,
          "position": 798
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "),\n      currency: z.string().length(3, 'Currency must be 3 characters')\n    }),\n    compareAtPrice: z.object({\n      amount: z.number().min(0, 'Compare at price must be non-negative'),\n      currency: z.string().length(3, 'Currency must be 3 characters')\n    }).optional(),\n    costPrice",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/product.dto.ts",
        "start": 75,
        "end": 82,
        "startLoc": {
          "line": 75,
          "column": 37,
          "position": 1134
        },
        "endLoc": {
          "line": 82,
          "column": 10,
          "position": 1217
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/product.dto.ts",
        "start": 40,
        "end": 47,
        "startLoc": {
          "line": 40,
          "column": 37,
          "position": 550
        },
        "endLoc": {
          "line": 47,
          "column": 7,
          "position": 633
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "),\n  brand: z.string().max(100, 'Brand cannot exceed 100 characters').optional(),\n  supplier: z.string().max(100, 'Supplier cannot exceed 100 characters').optional(),\n  settings: z.object({\n    inventory: z.object({\n      trackInventory: z.boolean().optional",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/product.dto.ts",
        "start": 108,
        "end": 113,
        "startLoc": {
          "line": 108,
          "column": 2,
          "position": 1691
        },
        "endLoc": {
          "line": 113,
          "column": 9,
          "position": 1770
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/product.dto.ts",
        "start": 24,
        "end": 29,
        "startLoc": {
          "line": 24,
          "column": 40,
          "position": 309
        },
        "endLoc": {
          "line": 29,
          "column": 8,
          "position": 388
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ").optional(),\n      allowBackorder: z.boolean().optional(),\n      allowPreorder: z.boolean().optional()\n    }).optional(),\n    pricing: z.object({\n      costPrice: z.object({\n        amount: z.number().min(0,",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/product.dto.ts",
        "start": 114,
        "end": 120,
        "startLoc": {
          "line": 114,
          "column": 43,
          "position": 1795
        },
        "endLoc": {
          "line": 120,
          "column": 2,
          "position": 1873
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 124,
        "end": 130,
        "startLoc": {
          "line": 124,
          "column": 2,
          "position": 1675
        },
        "endLoc": {
          "line": 130,
          "column": 2,
          "position": 1753
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "),\n    pricing: z.object({\n      costPrice: z.object({\n        amount: z.number().min(0, 'Cost price must be non-negative'),\n        currency: z.string().length(3, 'Currency must be 3 characters')\n      }).optional(),\n      sellingPrice: z.object({\n        amount: z.number().min(0, 'Selling price must be non-negative'),\n        currency: z.string().length(3, 'Currency must be 3 characters')\n      }).",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/product.dto.ts",
        "start": 117,
        "end": 126,
        "startLoc": {
          "line": 117,
          "column": 2,
          "position": 1837
        },
        "endLoc": {
          "line": 126,
          "column": 2,
          "position": 1956
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/product.dto.ts",
        "start": 33,
        "end": 42,
        "startLoc": {
          "line": 33,
          "column": 2,
          "position": 455
        },
        "endLoc": {
          "line": 42,
          "column": 2,
          "position": 574
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "),\n      compareAtPrice: z.object({\n        amount: z.number().min(0, 'Compare at price must be non-negative'),\n        currency: z.string().length(3, 'Currency must be 3 characters')\n      }).optional(),\n      margin: z.number().min(0, 'Margin must be non-negative').max(100, 'Margin cannot exceed 100%').optional()\n    }).",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/product.dto.ts",
        "start": 126,
        "end": 132,
        "startLoc": {
          "line": 126,
          "column": 2,
          "position": 1959
        },
        "endLoc": {
          "line": 132,
          "column": 2,
          "position": 2051
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/product.dto.ts",
        "start": 42,
        "end": 48,
        "startLoc": {
          "line": 42,
          "column": 2,
          "position": 573
        },
        "endLoc": {
          "line": 48,
          "column": 2,
          "position": 665
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "),\n    shipping: z.object({\n      weight: z.number().min(0, 'Weight must be non-negative').optional(),\n      dimensions: z.object({\n        length: z.number().min(0, 'Length must be non-negative'),\n        width: z.number().min(0, 'Width must be non-negative'),\n        height: z.number().min(0, 'Height must be non-negative')\n      }).optional(),\n      requiresShipping: z.boolean().optional",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/product.dto.ts",
        "start": 132,
        "end": 140,
        "startLoc": {
          "line": 132,
          "column": 2,
          "position": 2054
        },
        "endLoc": {
          "line": 140,
          "column": 9,
          "position": 2175
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/product.dto.ts",
        "start": 48,
        "end": 56,
        "startLoc": {
          "line": 48,
          "column": 2,
          "position": 664
        },
        "endLoc": {
          "line": 56,
          "column": 8,
          "position": 785
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ")\n      }).optional(),\n      requiresShipping: z.boolean().optional(),\n      freeShipping: z.boolean().optional()\n    }).optional(),\n    seo: z.object({\n      metaTitle: z.string().max(60,",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/product.dto.ts",
        "start": 138,
        "end": 144,
        "startLoc": {
          "line": 138,
          "column": 30,
          "position": 2154
        },
        "endLoc": {
          "line": 144,
          "column": 2,
          "position": 2226
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 148,
        "end": 154,
        "startLoc": {
          "line": 148,
          "column": 2,
          "position": 1998
        },
        "endLoc": {
          "line": 154,
          "column": 2,
          "position": 2070
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "),\n  images: z.array(z.string().url('Invalid image URL')).optional(),\n  documents: z.array(z.string().url('Invalid document URL')).optional(),\n  specifications: z.record(z.any()).optional(),\n  variants: z.array(z.object({\n    id",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/product.dto.ts",
        "start": 151,
        "end": 156,
        "startLoc": {
          "line": 151,
          "column": 2,
          "position": 2366
        },
        "endLoc": {
          "line": 156,
          "column": 3,
          "position": 2454
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/product.dto.ts",
        "start": 67,
        "end": 72,
        "startLoc": {
          "line": 67,
          "column": 2,
          "position": 967
        },
        "endLoc": {
          "line": 72,
          "column": 5,
          "position": 1055
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": "name: z.string().min(1, 'Variant name is required').max(100, 'Variant name cannot exceed 100 characters'),\n    sku: z.string().min(1, 'Variant SKU is required').max(100, 'Variant SKU cannot exceed 100 characters'),\n    price: z.object({\n      amount: z.number().min(0, 'Variant price must be non-negative'),\n      currency: z.string().length(3, 'Currency must be 3 characters')\n    }),\n    compareAtPrice: z.object({\n      amount: z.number().min(0, 'Compare at price must be non-negative'),\n      currency: z.string().length(3, 'Currency must be 3 characters')\n    }).optional(),\n    costPrice: z.object({\n      amount: z.number().min(0, 'Cost price must be non-negative'),\n      currency: z.string().length(3, 'Currency must be 3 characters')\n    }).optional(),\n    inventory: z.object({\n      quantity: z.number().int().min(0, 'Quantity must be non-negative'),\n      reserved: z.number().int().min(0, 'Reserved quantity must be non-negative'),\n      available: z.number().int().min(0, 'Available quantity must be non-negative')\n    }),\n    attributes: z.record(z.any()).default({}),\n    isActive: z.boolean().default(true)\n  })).optional()\n});\n\n// ========================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/product.dto.ts",
        "start": 157,
        "end": 181,
        "startLoc": {
          "line": 157,
          "column": 5,
          "position": 2474
        },
        "endLoc": {
          "line": 181,
          "column": 76,
          "position": 2825
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/product.dto.ts",
        "start": 72,
        "end": 96,
        "startLoc": {
          "line": 72,
          "column": 5,
          "position": 1055
        },
        "endLoc": {
          "line": 96,
          "column": 7,
          "position": 1406
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ").optional(),\n  type: z.enum(['physical', 'digital', 'service', 'subscription', 'bundle']).optional(),\n  status: z.enum(['active', 'inactive', 'discontinued', 'draft', 'archived']).optional(),\n  category: z.string().optional(),\n  brand: z.string().optional(),\n  supplier: z.string().optional(),\n  minPrice: z.coerce.number().min(0,",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/product.dto.ts",
        "start": 202,
        "end": 208,
        "startLoc": {
          "line": 202,
          "column": 43,
          "position": 3061
        },
        "endLoc": {
          "line": 208,
          "column": 2,
          "position": 3188
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 115,
        "end": 235,
        "startLoc": {
          "line": 115,
          "column": 4,
          "position": 1491
        },
        "endLoc": {
          "line": 235,
          "column": 2,
          "position": 3079
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "),\n  updates: z.object({\n    status: z.enum(['active', 'inactive', 'discontinued', 'draft', 'archived']).optional(),\n    category: z.string().optional(),\n    brand: z.string().optional(),\n    supplier: z.string().optional(),\n    tags: z.array(z.string()).optional()\n  })\n});",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/product.dto.ts",
        "start": 215,
        "end": 223,
        "startLoc": {
          "line": 215,
          "column": 38,
          "position": 3301
        },
        "endLoc": {
          "line": 223,
          "column": 2,
          "position": 3414
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 684,
        "end": 693,
        "startLoc": {
          "line": 684,
          "column": 2,
          "position": 7471
        },
        "endLoc": {
          "line": 693,
          "column": 2,
          "position": 7587
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ": z.object({\n      amount: z.number(),\n      currency: z.string()\n    }),\n    compareAtPrice: z.object({\n      amount: z.number(),\n      currency: z.string()\n    }).optional(),\n    costPrice",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/product.dto.ts",
        "start": 294,
        "end": 302,
        "startLoc": {
          "line": 294,
          "column": 6,
          "position": 4201
        },
        "endLoc": {
          "line": 302,
          "column": 10,
          "position": 4276
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/product.dto.ts",
        "start": 258,
        "end": 266,
        "startLoc": {
          "line": 258,
          "column": 13,
          "position": 3795
        },
        "endLoc": {
          "line": 266,
          "column": 7,
          "position": 3870
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ".optional(),\n  settings: z.object({\n    modelType: z.enum(['linear_regression', 'decision_tree', 'random_forest', 'neural_network', 'time_series', 'clustering', 'classification', 'deep_learning']).optional(),\n    trainingPeriod: z.number().int().min(1).max(3650).optional(),\n    predictionHorizon: z.number().int().min(1).max(365).optional(),\n    confidenceThreshold: z.number().min(0).max(1).optional(),\n    autoRetrain: z.boolean().optional(),\n    retrainFrequency: z.number().int().min(1).max(365).optional(),\n    dataSource: z.array(z.string().min(1)).optional(),\n    features: z.array(z.string().min(1)).optional(),\n    targetVariable: z.string().min(1).max(100).optional(),\n    validationMethod: z.enum(['cross_validation', 'holdout', 'time_series_split']).optional(),\n    hyperparameters: z.record(z.any()).optional(),\n    customFields: CustomFieldsSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/predictive-analytics.dto.ts",
        "start": 63,
        "end": 76,
        "startLoc": {
          "line": 63,
          "column": 11,
          "position": 703
        },
        "endLoc": {
          "line": 76,
          "column": 19,
          "position": 1008
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/predictive-analytics.routes.ts",
        "start": 61,
        "end": 74,
        "startLoc": {
          "line": 61,
          "column": 2,
          "position": 804
        },
        "endLoc": {
          "line": 74,
          "column": 2,
          "position": 1109
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "type: z.enum(['sales_forecast', 'demand_prediction', 'churn_prediction', 'revenue_forecast', 'inventory_optimization', 'customer_lifetime_value', 'market_trend', 'risk_assessment']).optional(),\n  status: z.enum(['pending', 'processing', 'completed', 'failed', 'cancelled']).optional(),\n  modelType: z.enum(['linear_regression', 'decision_tree', 'random_forest', 'neural_network', 'time_series', 'clustering', 'classification', 'deep_learning']).optional(),\n  accuracy: z.enum(['low', 'medium', 'high', 'very_high']).optional(),\n  isActive: z.coerce.boolean().optional(),\n  needsRetraining: z.coerce.boolean().optional(),\n  hasPredictions: z.coerce.boolean().optional(),\n  minAccuracy: z.coerce.number().min(0).max(1).optional(),\n  maxAccuracy: z.coerce.number().min(0).max(1).optional(),\n  lastPredictionFrom: z.coerce.date().optional(),\n  lastPredictionTo: z.coerce.date().optional(),\n  nextRetrainFrom: z.coerce.date().optional(),\n  nextRetrainTo: z.coerce.date().optional()\n});",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/predictive-analytics.dto.ts",
        "start": 106,
        "end": 119,
        "startLoc": {
          "line": 106,
          "column": 3,
          "position": 1247
        },
        "endLoc": {
          "line": 119,
          "column": 2,
          "position": 1555
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/predictive-analytics.routes.ts",
        "start": 125,
        "end": 139,
        "startLoc": {
          "line": 125,
          "column": 9,
          "position": 1546
        },
        "endLoc": {
          "line": 139,
          "column": 2,
          "position": 1857
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "),\n  updates: z.object({\n    status: z.enum(['pending', 'processing', 'completed', 'failed', 'cancelled']).optional(),\n    autoRetrain: z.boolean().optional(),\n    retrainFrequency: z.number().int().min(1).max(365).optional(),\n    tags: z.array(z.string()).optional()\n  })\n});",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/predictive-analytics.dto.ts",
        "start": 122,
        "end": 129,
        "startLoc": {
          "line": 122,
          "column": 51,
          "position": 1589
        },
        "endLoc": {
          "line": 129,
          "column": 2,
          "position": 1701
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/predictive-analytics.routes.ts",
        "start": 303,
        "end": 311,
        "startLoc": {
          "line": 303,
          "column": 2,
          "position": 3586
        },
        "endLoc": {
          "line": 311,
          "column": 2,
          "position": 3701
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "({\n    type: z.enum(['sales_forecast', 'demand_prediction', 'churn_prediction', 'revenue_forecast', 'inventory_optimization', 'customer_lifetime_value', 'market_trend', 'risk_assessment']).optional(),\n    status: z.enum(['pending', 'processing', 'completed', 'failed', 'cancelled']).optional(),\n    modelType: z.enum(['linear_regression', 'decision_tree', 'random_forest', 'neural_network', 'time_series', 'clustering', 'classification', 'deep_learning']).optional(),\n    accuracy: z.enum(['low', 'medium', 'high', 'very_high']).optional(),\n    isActive: z.boolean",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/predictive-analytics.dto.ts",
        "start": 238,
        "end": 243,
        "startLoc": {
          "line": 238,
          "column": 7,
          "position": 2895
        },
        "endLoc": {
          "line": 243,
          "column": 8,
          "position": 3039
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/predictive-analytics.dto.ts",
        "start": 105,
        "end": 129,
        "startLoc": {
          "line": 105,
          "column": 7,
          "position": 1243
        },
        "endLoc": {
          "line": 129,
          "column": 7,
          "position": 1686
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "= z.object({\n  organizationId: OrganizationIdSchema,\n  startDate: z.coerce.date(),\n  endDate: z.coerce.date(),\n  filters: z.object({\n    type: z.enum(['sales_forecast', 'demand_prediction', 'churn_prediction', 'revenue_forecast', 'inventory_optimization', 'customer_lifetime_value', 'market_trend', 'risk_assessment']).optional(),\n    modelType: z.enum(['linear_regression', 'decision_tree', 'random_forest', 'neural_network', 'time_series', 'clustering', 'classification', 'deep_learning']).optional(),\n    status",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/predictive-analytics.dto.ts",
        "start": 266,
        "end": 273,
        "startLoc": {
          "line": 266,
          "column": 2,
          "position": 3329
        },
        "endLoc": {
          "line": 273,
          "column": 7,
          "position": 3459
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/predictive-analytics.dto.ts",
        "start": 250,
        "end": 257,
        "startLoc": {
          "line": 250,
          "column": 2,
          "position": 3107
        },
        "endLoc": {
          "line": 257,
          "column": 14,
          "position": 3237
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "),\n  description: z.string().max(500, 'Description cannot exceed 500 characters').optional(),\n  website: z.string().url('Invalid website URL').optional(),\n  logo: z.string().url('Invalid logo URL').optional(),\n  settings: z.object({\n    timezone: z.string().optional",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/organization.dto.ts",
        "start": 53,
        "end": 58,
        "startLoc": {
          "line": 53,
          "column": 2,
          "position": 761
        },
        "endLoc": {
          "line": 58,
          "column": 9,
          "position": 847
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/organization.dto.ts",
        "start": 17,
        "end": 22,
        "startLoc": {
          "line": 17,
          "column": 41,
          "position": 137
        },
        "endLoc": {
          "line": 22,
          "column": 8,
          "position": 223
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "),\n  total: z.number().int().min(0),\n  page: z.number().int().min(1),\n  limit: z.number().int().min(1),\n  totalPages: z.number().int().min(0),\n  hasNext: z.boolean(),\n  hasPrevious: z.boolean()\n});\n\nexport const OrganizationStatsResponseSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/organization.dto.ts",
        "start": 156,
        "end": 165,
        "startLoc": {
          "line": 156,
          "column": 27,
          "position": 2166
        },
        "endLoc": {
          "line": 165,
          "column": 32,
          "position": 2279
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/user.dto.ts",
        "start": 87,
        "end": 96,
        "startLoc": {
          "line": 87,
          "column": 19,
          "position": 1065
        },
        "endLoc": {
          "line": 96,
          "column": 24,
          "position": 1178
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ".optional(),\n  issueDate: z.coerce.date(),\n  dueDate: z.coerce.date(),\n  paidDate: z.coerce.date().optional(),\n  items: z.array(z.object({\n    productId: UUIDSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/invoice.dto.ts",
        "start": 43,
        "end": 48,
        "startLoc": {
          "line": 43,
          "column": 11,
          "position": 331
        },
        "endLoc": {
          "line": 48,
          "column": 11,
          "position": 398
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/invoice.routes.ts",
        "start": 29,
        "end": 34,
        "startLoc": {
          "line": 29,
          "column": 2,
          "position": 301
        },
        "endLoc": {
          "line": 34,
          "column": 2,
          "position": 368
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ".optional(),\n  issueDate: z.coerce.date().optional(),\n  dueDate: z.coerce.date().optional(),\n  paidDate: z.coerce.date().optional(),\n  items: z.array(z.object({\n    id: UUIDSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/invoice.dto.ts",
        "start": 89,
        "end": 94,
        "startLoc": {
          "line": 89,
          "column": 11,
          "position": 1095
        },
        "endLoc": {
          "line": 94,
          "column": 11,
          "position": 1170
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/invoice.routes.ts",
        "start": 95,
        "end": 100,
        "startLoc": {
          "line": 95,
          "column": 2,
          "position": 1295
        },
        "endLoc": {
          "line": 100,
          "column": 2,
          "position": 1370
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "productId: UUIDSchema.optional(),\n    description: z.string().min(1, 'Item description is required').max(500, 'Description cannot exceed 500 characters'),\n    quantity: z.number().min(0.01, 'Quantity must be greater than 0'),\n    unitPrice: MoneySchema,\n    totalPrice: MoneySchema,\n    taxRate: z.number().min(0, 'Tax rate must be non-negative').max(100, 'Tax rate cannot exceed 100%').optional(),\n    taxAmount: MoneySchema.optional(),\n    discountRate: z.number().min(0, 'Discount rate must be non-negative').max(100, 'Discount rate cannot exceed 100%').optional(),\n    discountAmount: MoneySchema.optional(),\n    notes: z.string().max(500, 'Item notes cannot exceed 500 characters').optional()\n  })).optional",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/invoice.dto.ts",
        "start": 95,
        "end": 105,
        "startLoc": {
          "line": 95,
          "column": 5,
          "position": 1178
        },
        "endLoc": {
          "line": 105,
          "column": 9,
          "position": 1359
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/invoice.dto.ts",
        "start": 48,
        "end": 58,
        "startLoc": {
          "line": 48,
          "column": 5,
          "position": 395
        },
        "endLoc": {
          "line": 58,
          "column": 4,
          "position": 576
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "),\n    lateFeeRate: z.number().min(0, 'Late fee rate must be non-negative').max(100, 'Late fee rate cannot exceed 100%').optional(),\n    lateFeeAmount: MoneySchema.optional(),\n    notes: z.string().max(1000, 'Settings notes cannot exceed 1000 characters').optional(),\n    footer: z.string().max(1000, 'Footer cannot exceed 1000 characters').optional(),\n    customFields: CustomFieldsSchema.",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/invoice.dto.ts",
        "start": 113,
        "end": 118,
        "startLoc": {
          "line": 113,
          "column": 2,
          "position": 1537
        },
        "endLoc": {
          "line": 118,
          "column": 2,
          "position": 1633
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/invoice.dto.ts",
        "start": 66,
        "end": 71,
        "startLoc": {
          "line": 66,
          "column": 3,
          "position": 753
        },
        "endLoc": {
          "line": 71,
          "column": 2,
          "position": 849
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "type: z.enum(['invoice', 'credit_note', 'debit_note', 'proforma', 'quote', 'receipt']).optional(),\n  status: z.enum(['draft', 'sent', 'paid', 'overdue', 'cancelled', 'refunded', 'partially_paid']).optional(),\n  paymentStatus: z.enum(['pending', 'paid', 'partial', 'overdue', 'cancelled']).optional(),\n  companyId: UUIDSchema.optional(),\n  contactId: UUIDSchema.optional(),\n  issueDateFrom",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/invoice.dto.ts",
        "start": 136,
        "end": 141,
        "startLoc": {
          "line": 136,
          "column": 3,
          "position": 1739
        },
        "endLoc": {
          "line": 141,
          "column": 14,
          "position": 1860
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/invoice.routes.ts",
        "start": 91,
        "end": 90,
        "startLoc": {
          "line": 91,
          "column": 9,
          "position": 1165
        },
        "endLoc": {
          "line": 90,
          "column": 10,
          "position": 1102
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ".optional(),\n  issueDateFrom: z.coerce.date().optional(),\n  issueDateTo: z.coerce.date().optional(),\n  dueDateFrom: z.coerce.date().optional(),\n  dueDateTo: z.coerce.date().optional(),\n  minAmount: z.coerce.number().min(0,",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/invoice.dto.ts",
        "start": 140,
        "end": 145,
        "startLoc": {
          "line": 140,
          "column": 11,
          "position": 1853
        },
        "endLoc": {
          "line": 145,
          "column": 2,
          "position": 1942
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/invoice.routes.ts",
        "start": 194,
        "end": 199,
        "startLoc": {
          "line": 194,
          "column": 2,
          "position": 2572
        },
        "endLoc": {
          "line": 199,
          "column": 2,
          "position": 2661
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ").optional(),\n  isOverdue: z.coerce.boolean().optional(),\n  isPaid: z.coerce.boolean().optional(),\n  isPartiallyPaid: z.coerce.boolean().optional(),\n  isPending: z.coerce.boolean().optional()\n});",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/invoice.dto.ts",
        "start": 146,
        "end": 151,
        "startLoc": {
          "line": 146,
          "column": 38,
          "position": 1970
        },
        "endLoc": {
          "line": 151,
          "column": 2,
          "position": 2046
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/invoice.routes.ts",
        "start": 200,
        "end": 206,
        "startLoc": {
          "line": 200,
          "column": 2,
          "position": 2683
        },
        "endLoc": {
          "line": 206,
          "column": 2,
          "position": 2762
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "),\n  updates: z.object({\n    status: z.enum(['draft', 'sent', 'paid', 'overdue', 'cancelled', 'refunded', 'partially_paid']).optional(),\n    paymentStatus: z.enum(['pending', 'paid', 'partial', 'overdue', 'cancelled']).optional(),\n    tags: z.array(z.string()).optional()\n  })\n});",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/invoice.dto.ts",
        "start": 154,
        "end": 160,
        "startLoc": {
          "line": 154,
          "column": 38,
          "position": 2080
        },
        "endLoc": {
          "line": 160,
          "column": 2,
          "position": 2184
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/invoice.routes.ts",
        "start": 422,
        "end": 429,
        "startLoc": {
          "line": 422,
          "column": 2,
          "position": 5040
        },
        "endLoc": {
          "line": 429,
          "column": 2,
          "position": 5147
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "),\n  type: z.enum(['invoice', 'credit_note', 'debit_note', 'proforma', 'quote', 'receipt']),\n  status: z.enum(['draft', 'sent', 'paid', 'overdue', 'cancelled', 'refunded', 'partially_paid']),\n  paymentStatus: z.enum(['pending', 'paid', 'partial', 'overdue', 'cancelled']),\n  companyId: z.string().uuid(),\n  contactId: z.string().uuid().optional(),\n  issueDate: z.date",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/invoice.dto.ts",
        "start": 185,
        "end": 191,
        "startLoc": {
          "line": 185,
          "column": 2,
          "position": 2405
        },
        "endLoc": {
          "line": 191,
          "column": 5,
          "position": 2535
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/invoice.routes.ts",
        "start": 24,
        "end": 30,
        "startLoc": {
          "line": 24,
          "column": 4,
          "position": 183
        },
        "endLoc": {
          "line": 30,
          "column": 7,
          "position": 313
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "({\n    type: z.enum(['invoice', 'credit_note', 'debit_note', 'proforma', 'quote', 'receipt']).optional(),\n    status: z.enum(['draft', 'sent', 'paid', 'overdue', 'cancelled', 'refunded', 'partially_paid']).optional(),\n    paymentStatus: z.enum(['pending', 'paid', 'partial', 'overdue', 'cancelled']).optional(),\n    companyId: UUIDSchema.optional(),\n    contactId: UUIDSchema.optional(),\n    dateRange",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/invoice.dto.ts",
        "start": 265,
        "end": 271,
        "startLoc": {
          "line": 265,
          "column": 7,
          "position": 3305
        },
        "endLoc": {
          "line": 271,
          "column": 10,
          "position": 3430
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/invoice.dto.ts",
        "start": 135,
        "end": 90,
        "startLoc": {
          "line": 135,
          "column": 7,
          "position": 1735
        },
        "endLoc": {
          "line": 90,
          "column": 10,
          "position": 1102
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ").default('fifo'),\n    autoReorder: z.boolean().default(false),\n    trackExpiration: z.boolean().default(false),\n    trackSerialNumbers: z.boolean().default(false),\n    trackBatchNumbers: z.boolean().default(false),\n    customFields: CustomFieldsSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/inventory-kardex.dto.ts",
        "start": 48,
        "end": 53,
        "startLoc": {
          "line": 48,
          "column": 2,
          "position": 396
        },
        "endLoc": {
          "line": 53,
          "column": 19,
          "position": 472
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/inventory-kardex.routes.ts",
        "start": 39,
        "end": 44,
        "startLoc": {
          "line": 39,
          "column": 2,
          "position": 433
        },
        "endLoc": {
          "line": 44,
          "column": 2,
          "position": 509
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ").optional(),\n    costMethod: z.enum(['fifo', 'lifo', 'average', 'standard']).optional(),\n    valuationMethod: z.enum(['fifo', 'lifo', 'average', 'standard']).optional(),\n    autoReorder: z.boolean().optional(),\n    trackExpiration: z.boolean().optional(),\n    trackSerialNumbers: z.boolean().optional(),\n    trackBatchNumbers: z.boolean().optional(),\n    customFields: CustomFieldsSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/inventory-kardex.dto.ts",
        "start": 67,
        "end": 74,
        "startLoc": {
          "line": 67,
          "column": 40,
          "position": 635
        },
        "endLoc": {
          "line": 74,
          "column": 19,
          "position": 760
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/inventory-kardex.routes.ts",
        "start": 69,
        "end": 76,
        "startLoc": {
          "line": 69,
          "column": 2,
          "position": 796
        },
        "endLoc": {
          "line": 76,
          "column": 2,
          "position": 921
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ".optional(),\n  movementType: z.enum(['in', 'out', 'transfer', 'adjustment', 'return', 'damage', 'expired', 'theft']).optional(),\n  movementReason: z.enum(['purchase', 'sale', 'transfer_in', 'transfer_out', 'adjustment', 'return', 'damage', 'expired', 'theft', 'production', 'consumption', 'other']).optional(),\n  status: z.enum(['pending', 'completed', 'cancelled', 'reversed']).optional(),\n  lowStock: z.coerce.boolean().optional(),\n  outOfStock: z.coerce.boolean().optional(),\n  needsReorder: z.coerce.boolean().optional(),\n  hasExpiredItems: z.coerce.boolean().optional(),\n  hasExpiringItems: z.coerce.boolean().optional(),\n  minQuantity: z.coerce.number().min(0,",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/inventory-kardex.dto.ts",
        "start": 127,
        "end": 136,
        "startLoc": {
          "line": 127,
          "column": 11,
          "position": 1315
        },
        "endLoc": {
          "line": 136,
          "column": 2,
          "position": 1538
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/inventory-kardex.routes.ts",
        "start": 129,
        "end": 138,
        "startLoc": {
          "line": 129,
          "column": 2,
          "position": 1408
        },
        "endLoc": {
          "line": 138,
          "column": 2,
          "position": 1631
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "lowStockThreshold: z.number().min(0, 'Low stock threshold must be non-negative').optional(),\n    reorderPoint: z.number().min(0, 'Reorder point must be non-negative').optional(),\n    reorderQuantity: z.number().min(0, 'Reorder quantity must be non-negative').optional(),\n    costMethod: z.enum(['fifo', 'lifo', 'average', 'standard']).optional(),\n    valuationMethod: z.enum(['fifo', 'lifo', 'average', 'standard']).optional(),\n    tags",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/inventory-kardex.dto.ts",
        "start": 147,
        "end": 152,
        "startLoc": {
          "line": 147,
          "column": 5,
          "position": 1726
        },
        "endLoc": {
          "line": 152,
          "column": 5,
          "position": 1849
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/inventory-kardex.dto.ts",
        "start": 65,
        "end": 70,
        "startLoc": {
          "line": 65,
          "column": 5,
          "position": 574
        },
        "endLoc": {
          "line": 70,
          "column": 12,
          "position": 697
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ").optional(),\n    costMethod: z.enum(['fifo', 'lifo', 'average', 'standard']).optional(),\n    valuationMethod: z.enum(['fifo', 'lifo', 'average', 'standard']).optional(),\n    tags: z.array(z.string()).optional()\n  })\n});",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/inventory-kardex.dto.ts",
        "start": 149,
        "end": 154,
        "startLoc": {
          "line": 149,
          "column": 40,
          "position": 1787
        },
        "endLoc": {
          "line": 154,
          "column": 2,
          "position": 1873
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/inventory-kardex.routes.ts",
        "start": 368,
        "end": 374,
        "startLoc": {
          "line": 368,
          "column": 2,
          "position": 4262
        },
        "endLoc": {
          "line": 374,
          "column": 2,
          "position": 4351
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "({\n    productId: UUIDSchema.optional(),\n    warehouseId: UUIDSchema.optional(),\n    locationId: UUIDSchema.optional(),\n    movementType: z.enum(['in', 'out', 'transfer', 'adjustment', 'return', 'damage', 'expired', 'theft']).optional(),\n    movementReason: z.enum(['purchase', 'sale', 'transfer_in', 'transfer_out', 'adjustment', 'return', 'damage', 'expired', 'theft', 'production', 'consumption', 'other']).optional(),\n    status: z.enum(['pending', 'completed', 'cancelled', 'reversed']).optional()\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/inventory-kardex.dto.ts",
        "start": 291,
        "end": 298,
        "startLoc": {
          "line": 291,
          "column": 7,
          "position": 3450
        },
        "endLoc": {
          "line": 298,
          "column": 2,
          "position": 3603
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/inventory-kardex.dto.ts",
        "start": 124,
        "end": 132,
        "startLoc": {
          "line": 124,
          "column": 7,
          "position": 1285
        },
        "endLoc": {
          "line": 132,
          "column": 2,
          "position": 1529
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ").optional(),\n  nextAction: z.string().max(500, 'Next action cannot exceed 500 characters').optional(),\n  nextActionDate: z.coerce.date().optional(),\n  tags: TagsSchema,\n  customFields: CustomFieldsSchema,\n  attachments: z.array(z.string().url('Invalid attachment URL')).max(5, 'Cannot have more than 5 attachments').optional()\n});\n\nexport const UpdateStatusSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/interaction.dto.ts",
        "start": 105,
        "end": 113,
        "startLoc": {
          "line": 105,
          "column": 40,
          "position": 817
        },
        "endLoc": {
          "line": 113,
          "column": 19,
          "position": 919
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/interaction.dto.ts",
        "start": 51,
        "end": 59,
        "startLoc": {
          "line": 51,
          "column": 2,
          "position": 269
        },
        "endLoc": {
          "line": 59,
          "column": 33,
          "position": 371
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "type: InteractionTypeSchema.optional(),\n  status: InteractionStatusSchema.optional(),\n  priority: InteractionPrioritySchema.optional(),\n  contactId: UUIDSchema.optional(),\n  companyId: UUIDSchema.optional(),\n  userId: UUIDSchema.optional(),\n  scheduledFrom: z.coerce.date().optional(),\n  scheduledTo: z.coerce.date().optional(),\n  completedFrom: z.coerce.date().optional(),\n  completedTo: z.coerce.date().optional(),\n  tags: z.string().optional(),\n  hasOutcome: z.coerce.boolean().optional(),\n  hasNextAction: z.coerce.boolean().optional(),\n  overdue: z.coerce.boolean().optional(),\n  upcoming: z.coerce.boolean().optional()\n});\n\n// ========================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/interaction.dto.ts",
        "start": 204,
        "end": 221,
        "startLoc": {
          "line": 204,
          "column": 3,
          "position": 1853
        },
        "endLoc": {
          "line": 221,
          "column": 76,
          "position": 2073
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/interaction.dto.ts",
        "start": 186,
        "end": 203,
        "startLoc": {
          "line": 186,
          "column": 3,
          "position": 1618
        },
        "endLoc": {
          "line": 203,
          "column": 7,
          "position": 1838
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "),\n  pagination: z.object({\n    page: z.number(),\n    limit: z.number(),\n    total: z.number(),\n    totalPages: z.number(),\n    hasNext: z.boolean(),\n    hasPrev: z.boolean()\n  })\n});\n\nexport const InteractionStatsResponseSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/interaction.dto.ts",
        "start": 288,
        "end": 299,
        "startLoc": {
          "line": 288,
          "column": 26,
          "position": 2663
        },
        "endLoc": {
          "line": 299,
          "column": 31,
          "position": 2754
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/product.dto.ts",
        "start": 320,
        "end": 331,
        "startLoc": {
          "line": 320,
          "column": 22,
          "position": 4458
        },
        "endLoc": {
          "line": 331,
          "column": 27,
          "position": 4549
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "= z.object({\n  contactId: UUIDSchema,\n  name: NameSchema,\n  value: z.number().min(0, 'Deal value cannot be negative'),\n  currency: z.string().length(3, 'Currency must be 3 characters').default('USD'),\n  source: DealSourceSchema.default('WEBSITE'),\n  companyId: UUIDSchema.optional(),\n  description: DescriptionSchema.optional()\n});\n\nexport const CreateProposalSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/deal.dto.ts",
        "start": 90,
        "end": 100,
        "startLoc": {
          "line": 90,
          "column": 2,
          "position": 832
        },
        "endLoc": {
          "line": 100,
          "column": 21,
          "position": 939
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/deal.dto.ts",
        "start": 80,
        "end": 90,
        "startLoc": {
          "line": 80,
          "column": 2,
          "position": 723
        },
        "endLoc": {
          "line": 90,
          "column": 22,
          "position": 830
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "= z.object({\n  contactId: UUIDSchema,\n  name: NameSchema,\n  value: z.number().min(0, 'Deal value cannot be negative'),\n  currency: z.string().length(3, 'Currency must be 3 characters').default('USD'),\n  source: DealSourceSchema.default('WEBSITE'),\n  companyId: UUIDSchema.optional(),\n  description: DescriptionSchema.optional()\n});\n\nexport const CreateNegotiationSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/deal.dto.ts",
        "start": 100,
        "end": 110,
        "startLoc": {
          "line": 100,
          "column": 2,
          "position": 941
        },
        "endLoc": {
          "line": 110,
          "column": 24,
          "position": 1048
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/deal.dto.ts",
        "start": 80,
        "end": 90,
        "startLoc": {
          "line": 80,
          "column": 2,
          "position": 723
        },
        "endLoc": {
          "line": 90,
          "column": 22,
          "position": 830
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "= z.object({\n  contactId: UUIDSchema,\n  name: NameSchema,\n  value: z.number().min(0, 'Deal value cannot be negative'),\n  currency: z.string().length(3, 'Currency must be 3 characters').default('USD'),\n  source: DealSourceSchema.default('WEBSITE'),\n  companyId: UUIDSchema.optional(),\n  description: DescriptionSchema.optional()\n});\n\n// ========================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/deal.dto.ts",
        "start": 110,
        "end": 120,
        "startLoc": {
          "line": 110,
          "column": 2,
          "position": 1050
        },
        "endLoc": {
          "line": 120,
          "column": 76,
          "position": 1153
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/deal.dto.ts",
        "start": 80,
        "end": 90,
        "startLoc": {
          "line": 80,
          "column": 2,
          "position": 723
        },
        "endLoc": {
          "line": 90,
          "column": 7,
          "position": 826
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ".optional(),\n  expectedCloseDate: z.coerce.date().optional(),\n  nextStep: z.string().max(500, 'Next step cannot exceed 500 characters').optional(),\n  nextStepDate: z.coerce.date().optional(),\n  tags: TagsSchema,\n  customFields: CustomFieldsSchema,\n  attachments: z.array(z.string().url('Invalid attachment URL')).max(5, 'Cannot have more than 5 attachments').optional(),\n  notes: z.string().max(2000, 'Notes cannot exceed 2000 characters').optional(),\n  competitors: z.array(z.string().max(100, 'Competitor name cannot exceed 100 characters')).max(10, 'Cannot have more than 10 competitors').optional(),\n  decisionMakers: z.array(z.string().max(100, 'Decision maker name cannot exceed 100 characters')).max(10, 'Cannot have more than 10 decision makers').optional(),\n  budget: z.number().min(0, 'Budget cannot be negative').optional(),\n  timeline: z.string().max(200, 'Timeline cannot exceed 200 characters').optional(),\n  requirements: z.array(z.string().max(500, 'Requirement cannot exceed 500 characters')).max(20, 'Cannot have more than 20 requirements').optional(),\n  objections: z.array(z.string().max(500, 'Objection cannot exceed 500 characters')).max(20, 'Cannot have more than 20 objections').optional()\n});\n\nexport const UpdateStageSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/deal.dto.ts",
        "start": 132,
        "end": 148,
        "startLoc": {
          "line": 132,
          "column": 2,
          "position": 1300
        },
        "endLoc": {
          "line": 148,
          "column": 18,
          "position": 1631
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/deal.dto.ts",
        "start": 64,
        "end": 80,
        "startLoc": {
          "line": 64,
          "column": 11,
          "position": 390
        },
        "endLoc": {
          "line": 80,
          "column": 17,
          "position": 721
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ": z.coerce.date().optional()\n});\n\nexport const AddTagSchema = z.object({\n  tag: z.string().min(1, 'Tag cannot be empty').max(50, 'Tag cannot exceed 50 characters')\n});\n\nexport const RemoveTagSchema = z.object({\n  tag: z.string().min(1, 'Tag cannot be empty').max(50, 'Tag cannot exceed 50 characters')\n});\n\nexport const AddCompetitorSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/deal.dto.ts",
        "start": 175,
        "end": 186,
        "startLoc": {
          "line": 175,
          "column": 13,
          "position": 1881
        },
        "endLoc": {
          "line": 186,
          "column": 20,
          "position": 1994
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/interaction.dto.ts",
        "start": 132,
        "end": 143,
        "startLoc": {
          "line": 132,
          "column": 15,
          "position": 1107
        },
        "endLoc": {
          "line": 143,
          "column": 21,
          "position": 1220
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ")\n});\n\nexport const SetCustomFieldSchema = z.object({\n  key: z.string().min(1, 'Key cannot be empty').max(100, 'Key cannot exceed 100 characters'),\n  value: z.any()\n});\n\nexport const RemoveCustomFieldSchema = z.object({\n  key: z.string().min(1, 'Key cannot be empty').max(100, 'Key cannot exceed 100 characters')\n});\n\n// ========================================================================\n// PARAMETER SCHEMAS\n// ========================================================================\n\nexport const DealIdParamSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/deal.dto.ts",
        "start": 199,
        "end": 215,
        "startLoc": {
          "line": 199,
          "column": 51,
          "position": 2163
        },
        "endLoc": {
          "line": 215,
          "column": 18,
          "position": 2282
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/interaction.dto.ts",
        "start": 140,
        "end": 156,
        "startLoc": {
          "line": 140,
          "column": 34,
          "position": 1209
        },
        "endLoc": {
          "line": 156,
          "column": 25,
          "position": 1328
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": "stage: DealStageSchema.optional(),\n  status: DealStatusSchema.optional(),\n  priority: DealPrioritySchema.optional(),\n  source: DealSourceSchema.optional(),\n  contactId: UUIDSchema.optional(),\n  companyId: UUIDSchema.optional(),\n  userId: UUIDSchema.optional(),\n  valueFrom: z.coerce.number().min(0, 'Value from cannot be negative').optional(),\n  valueTo: z.coerce.number().min(0, 'Value to cannot be negative').optional(),\n  probabilityFrom: z.coerce.number().min(0, 'Probability from cannot be negative').max(100, 'Probability from cannot exceed 100').optional(),\n  probabilityTo: z.coerce.number().min(0, 'Probability to cannot be negative').max(100, 'Probability to cannot exceed 100').optional(),\n  expectedCloseFrom: z.coerce.date().optional(),\n  expectedCloseTo: z.coerce.date().optional(),\n  actualCloseFrom: z.coerce.date().optional(),\n  actualCloseTo: z.coerce.date().optional(),\n  tags: z.string().optional(),\n  hasNextStep: z.coerce.boolean().optional(),\n  overdue: z.coerce.boolean().optional(),\n  won: z.coerce.boolean().optional(),\n  lost: z.coerce.boolean().optional(),\n  active: z.coerce.boolean().optional()\n});\n\n// ========================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/deal.dto.ts",
        "start": 269,
        "end": 292,
        "startLoc": {
          "line": 269,
          "column": 3,
          "position": 2957
        },
        "endLoc": {
          "line": 292,
          "column": 76,
          "position": 3321
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/deal.dto.ts",
        "start": 245,
        "end": 268,
        "startLoc": {
          "line": 245,
          "column": 3,
          "position": 2578
        },
        "endLoc": {
          "line": 268,
          "column": 7,
          "position": 2942
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "),\n  pagination: z.object({\n    page: z.number(),\n    limit: z.number(),\n    total: z.number(),\n    totalPages: z.number(),\n    hasNext: z.boolean(),\n    hasPrev: z.boolean()\n  })\n});\n\nexport const DealStatsResponseSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/deal.dto.ts",
        "start": 383,
        "end": 394,
        "startLoc": {
          "line": 383,
          "column": 19,
          "position": 4203
        },
        "endLoc": {
          "line": 394,
          "column": 24,
          "position": 4294
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/product.dto.ts",
        "start": 320,
        "end": 331,
        "startLoc": {
          "line": 320,
          "column": 22,
          "position": 4458
        },
        "endLoc": {
          "line": 331,
          "column": 27,
          "position": 4549
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "),\n    constraints: z.array(z.object({\n      id: z.string().uuid(),\n      name: z.string().min(1, 'Constraint name is required').max(255, 'Constraint name cannot exceed 255 characters'),\n      type: z.enum(['primary_key', 'foreign_key', 'unique', 'check', 'not_null', 'default', 'index'], {\n        errorMap: () => ({ message: 'Constraint type must be one of: primary_key, foreign_key, unique, check, not_null, default, index' })\n      }),\n      columns: z.array(z.string()).min(1, 'At least one column is required'),\n      referencedTable: z.string().max(255).optional(),\n      referencedColumns: z.array(z.string()).optional(),\n      condition: z.string().max(1000).optional(),\n      description: z.string().max(1000, 'Description cannot exceed 1000 characters'),\n      isDeferrable: z.boolean().default(false),\n      initiallyDeferred: z.boolean().default(false),\n      onDelete: z.enum(['CASCADE', 'SET NULL', 'RESTRICT', 'NO ACTION']).optional(),\n      onUpdate: z.enum(['CASCADE', 'SET NULL', 'RESTRICT', 'NO ACTION']).optional()\n    })).default([]),\n    indexes",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/database-schema.dto.ts",
        "start": 125,
        "end": 142,
        "startLoc": {
          "line": 125,
          "column": 44,
          "position": 1924
        },
        "endLoc": {
          "line": 142,
          "column": 8,
          "position": 2242
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/database-schema.dto.ts",
        "start": 102,
        "end": 119,
        "startLoc": {
          "line": 102,
          "column": 2,
          "position": 1490
        },
        "endLoc": {
          "line": 119,
          "column": 12,
          "position": 1808
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "),\n      condition: z.string().max(1000).optional(),\n      description: z.string().max(1000, 'Description cannot exceed 1000 characters'),\n      isActive: z.boolean().default(true)\n    })).default([]),\n    rowLevelSecurity",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/database-schema.dto.ts",
        "start": 166,
        "end": 171,
        "startLoc": {
          "line": 166,
          "column": 40,
          "position": 2703
        },
        "endLoc": {
          "line": 171,
          "column": 17,
          "position": 2773
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/database-schema.dto.ts",
        "start": 151,
        "end": 156,
        "startLoc": {
          "line": 151,
          "column": 6,
          "position": 2432
        },
        "endLoc": {
          "line": 156,
          "column": 9,
          "position": 2502
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "z.object({\n  id: z.string(),\n  name: z.string(),\n  type: z.enum(['primary_key', 'foreign_key', 'unique', 'check', 'not_null', 'default', 'index']),\n  columns: z.array(z.string()),\n  referencedTable: z.string().optional(),\n  referencedColumns: z.array(z.string()).optional(),\n  condition: z.string().optional(),\n  description: z.string(),\n  isDeferrable: z.boolean(),\n  initiallyDeferred: z.boolean(),\n  onDelete: z.enum(['CASCADE', 'SET NULL', 'RESTRICT', 'NO ACTION']).optional(),\n  onUpdate: z.enum(['CASCADE', 'SET NULL', 'RESTRICT', 'NO ACTION']).optional(),\n  createdAt: z.date(),\n  updatedAt: z.date()\n});",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/database-schema.dto.ts",
        "start": 342,
        "end": 357,
        "startLoc": {
          "line": 342,
          "column": 2,
          "position": 5449
        },
        "endLoc": {
          "line": 357,
          "column": 2,
          "position": 5685
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/database-schema.dto.ts",
        "start": 316,
        "end": 331,
        "startLoc": {
          "line": 316,
          "column": 2,
          "position": 5101
        },
        "endLoc": {
          "line": 331,
          "column": 2,
          "position": 5338
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "(),\n  condition: z.string().optional(),\n  description: z.string(),\n  isActive: z.boolean(),\n  createdAt: z.date(),\n  updatedAt: z.date()\n});\n\nexport const DatabasePolicyResponseSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/database-schema.dto.ts",
        "start": 380,
        "end": 388,
        "startLoc": {
          "line": 380,
          "column": 7,
          "position": 5962
        },
        "endLoc": {
          "line": 388,
          "column": 29,
          "position": 6033
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/database-schema.dto.ts",
        "start": 366,
        "end": 374,
        "startLoc": {
          "line": 366,
          "column": 8,
          "position": 5798
        },
        "endLoc": {
          "line": 374,
          "column": 30,
          "position": 5869
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "totalTables: z.number(),\n  totalViews: z.number(),\n  totalFunctions: z.number(),\n  totalProcedures: z.number(),\n  totalTriggers: z.number(),\n  totalIndexes: z.number(),\n  totalConstraints: z.number(),\n  totalPolicies: z.number(),\n  totalSize: z.number(),\n  averageTableSize: z.number(),\n  averageHealthScore",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/database-schema.dto.ts",
        "start": 540,
        "end": 550,
        "startLoc": {
          "line": 540,
          "column": 3,
          "position": 7749
        },
        "endLoc": {
          "line": 550,
          "column": 19,
          "position": 7859
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/database-schema.dto.ts",
        "start": 437,
        "end": 447,
        "startLoc": {
          "line": 437,
          "column": 3,
          "position": 6595
        },
        "endLoc": {
          "line": 447,
          "column": 13,
          "position": 6705
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "({\n    type: z.enum(['postgresql', 'mysql', 'sqlite', 'mongodb', 'redis', 'elasticsearch']).optional(),\n    status: z.enum(['design', 'development', 'testing', 'production', 'deprecated']).optional(),\n    tableType: z.enum(['table', 'view', 'materialized_view', 'function', 'procedure', 'trigger', 'index', 'sequence']).optional(),\n    columnType: z.enum(['varchar', 'text', 'integer', 'bigint', 'decimal', 'boolean', 'date', 'timestamp', 'json', 'jsonb', 'uuid', 'array', 'enum']).optional(),\n    constraintType: z.enum(['primary_key', 'foreign_key', 'unique', 'check', 'not_null', 'default', 'index']).optional(),\n    isActive: z.boolean",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/database-schema.dto.ts",
        "start": 577,
        "end": 583,
        "startLoc": {
          "line": 577,
          "column": 7,
          "position": 8076
        },
        "endLoc": {
          "line": 583,
          "column": 8,
          "position": 8277
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/database-schema.dto.ts",
        "start": 272,
        "end": 278,
        "startLoc": {
          "line": 272,
          "column": 7,
          "position": 4335
        },
        "endLoc": {
          "line": 278,
          "column": 7,
          "position": 4536
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "z.object({\n    street: z.string().min(1, 'Street is required'),\n    city: z.string().min(1, 'City is required'),\n    state: z.string().optional(),\n    postalCode: z.string().min(1, 'Postal code is required'),\n    country: z.string().min(1, 'Country is required'),\n    countryCode: z",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/contact.dto.ts",
        "start": 36,
        "end": 42,
        "startLoc": {
          "line": 36,
          "column": 2,
          "position": 549
        },
        "endLoc": {
          "line": 42,
          "column": 2,
          "position": 650
        }
      },
      "secondFile": {
        "name": "apps/api/src/shared/utils/validation.utils.ts",
        "start": 45,
        "end": 51,
        "startLoc": {
          "line": 45,
          "column": 2,
          "position": 352
        },
        "endLoc": {
          "line": 51,
          "column": 18,
          "position": 453
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ")\n  }).optional(),\n  birthday: z.coerce.date().optional(),\n  anniversary: z.coerce.date().optional(),\n  gender: z.enum(['male', 'female', 'other', 'prefer_not_to_say']).optional(),\n  maritalStatus: z.enum(['single', 'married', 'divorced', 'widowed', 'separated']).optional(),\n  children: z.number().int().min(0,",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/contact.dto.ts",
        "start": 42,
        "end": 48,
        "startLoc": {
          "line": 42,
          "column": 36,
          "position": 662
        },
        "endLoc": {
          "line": 48,
          "column": 2,
          "position": 781
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/contact.routes.ts",
        "start": 43,
        "end": 49,
        "startLoc": {
          "line": 43,
          "column": 2,
          "position": 598
        },
        "endLoc": {
          "line": 49,
          "column": 2,
          "position": 717
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "z.object({\n    linkedin: z.string().url('Invalid LinkedIn URL').optional(),\n    twitter: z.string().url('Invalid Twitter URL').optional(),\n    facebook: z.string().url('Invalid Facebook URL').optional(),\n    instagram: z.string().url('Invalid Instagram URL').optional(),\n    youtube: z.string().url('Invalid YouTube URL').optional(),\n    tiktok: z.string().url('Invalid TikTok URL').optional(),\n    other: z.record(z.string()).optional()\n  }).",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/contact.dto.ts",
        "start": 57,
        "end": 65,
        "startLoc": {
          "line": 57,
          "column": 2,
          "position": 963
        },
        "endLoc": {
          "line": 65,
          "column": 2,
          "position": 1111
        }
      },
      "secondFile": {
        "name": "apps/api/src/shared/utils/validation.utils.ts",
        "start": 92,
        "end": 100,
        "startLoc": {
          "line": 92,
          "column": 2,
          "position": 751
        },
        "endLoc": {
          "line": 100,
          "column": 2,
          "position": 898
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ").optional(),\n    other: z.record(z.string()).optional()\n  }).optional(),\n  communication: z.object({\n    preferredMethod: z.enum(['email', 'phone', 'sms', 'whatsapp', 'linkedin', 'other']).optional(),\n    bestTimeToCall: z.string().optional(),\n    timeZone: z.string().optional(),\n    doNotCall: z.boolean().optional(),\n    doNotEmail: z.boolean().optional(),\n    doNotSms: z.boolean().optional()\n  }).optional(),\n  settings: z.object({\n    notifications: z.object({\n      email: z.boolean().optional(),\n      sms: z.boolean().optional(),\n      push: z.boolean().optional(),\n      phone: z.boolean().optional()\n    }).optional(),\n    preferences: z.object({\n      language: z.string().length(2,",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/contact.dto.ts",
        "start": 63,
        "end": 82,
        "startLoc": {
          "line": 63,
          "column": 21,
          "position": 1082
        },
        "endLoc": {
          "line": 82,
          "column": 2,
          "position": 1354
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/contact.routes.ts",
        "start": 64,
        "end": 83,
        "startLoc": {
          "line": 64,
          "column": 2,
          "position": 985
        },
        "endLoc": {
          "line": 83,
          "column": 2,
          "position": 1257
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ").optional(),\n      dateFormat: z.string().optional(),\n      timeFormat: z.string().optional()\n    }).optional(),\n    customFields: z.record(z.any()).optional(),\n    tags: z.array(z.string()).optional(),\n    notes: z.string().optional(),\n    internalNotes: z.string().optional()\n  }).optional(),\n  assignedUserId: z.string().uuid('Invalid assigned user ID format'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/contact.dto.ts",
        "start": 84,
        "end": 93,
        "startLoc": {
          "line": 84,
          "column": 35,
          "position": 1395
        },
        "endLoc": {
          "line": 93,
          "column": 34,
          "position": 1530
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/contact.routes.ts",
        "start": 85,
        "end": 94,
        "startLoc": {
          "line": 85,
          "column": 2,
          "position": 1292
        },
        "endLoc": {
          "line": 94,
          "column": 2,
          "position": 1427
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "query: z.string().optional(),\n  type: z.enum(['primary', 'secondary', 'decision_maker', 'influencer', 'user', 'technical', 'financial', 'procurement']).optional(),\n  status: z.enum(['active', 'inactive', 'unsubscribed', 'bounced', 'spam', 'deleted']).optional(),\n  source: z.enum(['website', 'referral', 'cold_call', 'email', 'social_media', 'event', 'trade_show', 'webinar', 'content', 'advertising', 'other']).optional(),\n  priority: z.enum(['low', 'medium', 'high', 'urgent']).optional(),\n  assignedUserId: z.string().uuid('Invalid assigned user ID format'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/contact.dto.ts",
        "start": 111,
        "end": 116,
        "startLoc": {
          "line": 111,
          "column": 3,
          "position": 1756
        },
        "endLoc": {
          "line": 116,
          "column": 34,
          "position": 1929
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/contact.routes.ts",
        "start": 242,
        "end": 247,
        "startLoc": {
          "line": 242,
          "column": 9,
          "position": 3319
        },
        "endLoc": {
          "line": 247,
          "column": 2,
          "position": 3492
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ").optional(),\n  department: z.string().optional(),\n  industry: z.string().optional(),\n  profession: z.string().optional(),\n  isActive: z.boolean().optional(),\n  isVerified: z.boolean().optional(),\n  isOptedIn: z.boolean().optional(),\n  hasCompany: z.boolean().optional(),\n  isAssigned: z.boolean().optional(),\n  leadScoreMin: z.number",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/contact.dto.ts",
        "start": 117,
        "end": 126,
        "startLoc": {
          "line": 117,
          "column": 28,
          "position": 1950
        },
        "endLoc": {
          "line": 126,
          "column": 7,
          "position": 2083
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/contact.routes.ts",
        "start": 248,
        "end": 257,
        "startLoc": {
          "line": 248,
          "column": 2,
          "position": 3511
        },
        "endLoc": {
          "line": 257,
          "column": 7,
          "position": 3644
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": ".number().int().min(0).optional(),\n  lastContactAfter: z.coerce.date().optional(),\n  lastContactBefore: z.coerce.date().optional(),\n  nextFollowUpAfter: z.coerce.date().optional(),\n  nextFollowUpBefore: z.coerce.date().optional(),\n  lastEmailOpenAfter: z.coerce.date().optional(),\n  lastEmailOpenBefore: z.coerce.date().optional(),\n  lastEmailClickAfter: z.coerce.date().optional(),\n  lastEmailClickBefore: z.coerce.date().optional(),\n  lastWebsiteVisitAfter: z.coerce.date().optional(),\n  lastWebsiteVisitBefore: z.coerce.date().optional(),\n  lastSocialMediaInteractionAfter: z.coerce.date().optional(),\n  lastSocialMediaInteractionBefore: z.coerce.date().optional(),\n  createdAfter: z.coerce.date().optional(),\n  createdBefore: z.coerce.date().optional(),\n  updatedAfter: z.coerce.date().optional(),\n  updatedBefore: z.coerce.date().optional(),\n  birthdayAfter: z.coerce.date().optional(),\n  birthdayBefore: z.coerce.date().optional(),\n  anniversaryAfter: z.coerce.date().optional(),\n  anniversaryBefore: z.coerce.date().optional(),\n  tags: z.array(z.string()).optional(),\n  page: z.coerce.number().int().min(1,",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/contact.dto.ts",
        "start": 138,
        "end": 160,
        "startLoc": {
          "line": 138,
          "column": 2,
          "position": 2370
        },
        "endLoc": {
          "line": 160,
          "column": 2,
          "position": 2768
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/contact.routes.ts",
        "start": 269,
        "end": 291,
        "startLoc": {
          "line": 269,
          "column": 7,
          "position": 3955
        },
        "endLoc": {
          "line": 291,
          "column": 2,
          "position": 4353
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "(),\n  type: z.enum(['primary', 'secondary', 'decision_maker', 'influencer', 'user', 'technical', 'financial', 'procurement']),\n  status: z.enum(['active', 'inactive', 'unsubscribed', 'bounced', 'spam', 'deleted']),\n  source: z.enum(['website', 'referral', 'cold_call', 'email', 'social_media', 'event', 'trade_show', 'webinar', 'content', 'advertising', 'other']),\n  priority: z.enum(['low', 'medium', 'high', 'urgent']),\n  email: z.string().nullable",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/contact.dto.ts",
        "start": 187,
        "end": 192,
        "startLoc": {
          "line": 187,
          "column": 9,
          "position": 3154
        },
        "endLoc": {
          "line": 192,
          "column": 9,
          "position": 3299
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/contact.routes.ts",
        "start": 27,
        "end": 32,
        "startLoc": {
          "line": 27,
          "column": 9,
          "position": 263
        },
        "endLoc": {
          "line": 32,
          "column": 6,
          "position": 408
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "),\n  total: z.number().int().min(0),\n  page: z.number().int().min(1),\n  limit: z.number().int().min(1),\n  totalPages: z.number().int().min(0),\n  hasNext: z.boolean(),\n  hasPrevious: z.boolean()\n});\n\nexport const ContactStatsResponseSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/contact.dto.ts",
        "start": 295,
        "end": 304,
        "startLoc": {
          "line": 295,
          "column": 22,
          "position": 4574
        },
        "endLoc": {
          "line": 304,
          "column": 27,
          "position": 4687
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/user.dto.ts",
        "start": 87,
        "end": 96,
        "startLoc": {
          "line": 87,
          "column": 19,
          "position": 1065
        },
        "endLoc": {
          "line": 96,
          "column": 24,
          "position": 1178
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ").optional(),\n  address: z.object({\n    street: z.string().min(1, 'Street is required'),\n    city: z.string().min(1, 'City is required'),\n    state: z.string().optional(),\n    postalCode: z.string().min(1, 'Postal code is required'),\n    country: z.string().min(1, 'Country is required'),\n    countryCode: z.string().length(2, 'Country code must be 2 characters')\n  }).optional(),\n  billingAddress",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/company.dto.ts",
        "start": 30,
        "end": 39,
        "startLoc": {
          "line": 30,
          "column": 30,
          "position": 405
        },
        "endLoc": {
          "line": 39,
          "column": 15,
          "position": 541
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/contact.dto.ts",
        "start": 35,
        "end": 44,
        "startLoc": {
          "line": 35,
          "column": 22,
          "position": 538
        },
        "endLoc": {
          "line": 44,
          "column": 9,
          "position": 674
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ": z.object({\n    street: z.string().min(1, 'Street is required'),\n    city: z.string().min(1, 'City is required'),\n    state: z.string().optional(),\n    postalCode: z.string().min(1, 'Postal code is required'),\n    country: z.string().min(1, 'Country is required'),\n    countryCode: z.string().length(2, 'Country code must be 2 characters')\n  }).optional(),\n  shippingAddress",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/company.dto.ts",
        "start": 39,
        "end": 47,
        "startLoc": {
          "line": 39,
          "column": 15,
          "position": 542
        },
        "endLoc": {
          "line": 47,
          "column": 16,
          "position": 669
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/contact.dto.ts",
        "start": 36,
        "end": 44,
        "startLoc": {
          "line": 36,
          "column": 8,
          "position": 547
        },
        "endLoc": {
          "line": 44,
          "column": 9,
          "position": 674
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ": z.object({\n    street: z.string().min(1, 'Street is required'),\n    city: z.string().min(1, 'City is required'),\n    state: z.string().optional(),\n    postalCode: z.string().min(1, 'Postal code is required'),\n    country: z.string().min(1, 'Country is required'),\n    countryCode: z.string().length(2, 'Country code must be 2 characters')\n  }).optional(),\n  taxId",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/company.dto.ts",
        "start": 47,
        "end": 55,
        "startLoc": {
          "line": 47,
          "column": 16,
          "position": 670
        },
        "endLoc": {
          "line": 55,
          "column": 6,
          "position": 797
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/contact.dto.ts",
        "start": 36,
        "end": 44,
        "startLoc": {
          "line": 36,
          "column": 8,
          "position": 547
        },
        "endLoc": {
          "line": 44,
          "column": 9,
          "position": 674
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ").optional(),\n  settings: z.object({\n    notifications: z.object({\n      email: z.boolean().optional(),\n      sms: z.boolean().optional(),\n      push: z.boolean().optional()\n    }).optional(),\n    preferences: z.object({\n      language: z.string().length(2,",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/company.dto.ts",
        "start": 68,
        "end": 76,
        "startLoc": {
          "line": 68,
          "column": 31,
          "position": 1123
        },
        "endLoc": {
          "line": 76,
          "column": 2,
          "position": 1226
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/contact.routes.ts",
        "start": 74,
        "end": 77,
        "startLoc": {
          "line": 74,
          "column": 2,
          "position": 1139
        },
        "endLoc": {
          "line": 77,
          "column": 2,
          "position": 1101
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ": z.boolean().optional()\n    }).optional(),\n    preferences: z.object({\n      language: z.string().length(2, 'Language must be a 2-letter code').optional(),\n      timezone: z.string().optional(),\n      currency: z.string().length(3, 'Currency must be a 3-letter code').optional(),\n      dateFormat: z.string().optional()\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/company.dto.ts",
        "start": 73,
        "end": 80,
        "startLoc": {
          "line": 73,
          "column": 5,
          "position": 1182
        },
        "endLoc": {
          "line": 80,
          "column": 2,
          "position": 1289
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/contact.dto.ts",
        "start": 79,
        "end": 85,
        "startLoc": {
          "line": 79,
          "column": 6,
          "position": 1310
        },
        "endLoc": {
          "line": 85,
          "column": 2,
          "position": 1415
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ").optional(),\n      dateFormat: z.string().optional()\n    }).optional(),\n    customFields: z.record(z.any()).optional(),\n    tags: z.array(z.string()).optional(),\n    notes: z.string().optional()\n  }).optional()\n});",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/company.dto.ts",
        "start": 78,
        "end": 85,
        "startLoc": {
          "line": 78,
          "column": 35,
          "position": 1267
        },
        "endLoc": {
          "line": 85,
          "column": 2,
          "position": 1361
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/company.routes.ts",
        "start": 79,
        "end": 87,
        "startLoc": {
          "line": 79,
          "column": 2,
          "position": 1136
        },
        "endLoc": {
          "line": 87,
          "column": 2,
          "position": 1233
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "query: z.string().optional(),\n  type: z.enum(['customer', 'supplier', 'partner', 'prospect', 'competitor']).optional(),\n  status: z.enum(['active', 'inactive', 'suspended', 'prospect', 'lead']).optional(),\n  size: z.enum(['startup', 'small', 'medium', 'large', 'enterprise']).optional(),\n  industry: z.string().optional(),\n  source: z.enum(['website', 'referral', 'cold_call', 'email', 'social_media', 'event', 'other']).optional(),\n  assignedUserId: z.string().uuid('Invalid assigned user ID format'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/company.dto.ts",
        "start": 99,
        "end": 105,
        "startLoc": {
          "line": 99,
          "column": 3,
          "position": 1491
        },
        "endLoc": {
          "line": 105,
          "column": 34,
          "position": 1658
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/company.routes.ts",
        "start": 208,
        "end": 214,
        "startLoc": {
          "line": 208,
          "column": 9,
          "position": 2695
        },
        "endLoc": {
          "line": 214,
          "column": 2,
          "position": 2862
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ".number().int().min(1800).optional(),\n  lastContactAfter: z.coerce.date().optional(),\n  lastContactBefore: z.coerce.date().optional(),\n  nextFollowUpAfter: z.coerce.date().optional(),\n  nextFollowUpBefore: z.coerce.date().optional(),\n  createdAfter: z.coerce.date().optional(),\n  createdBefore: z.coerce.date().optional(),\n  updatedAfter: z.coerce.date().optional(),\n  updatedBefore: z.coerce.date().optional(),\n  tags: z.array(z.string()).optional(),\n  page: z.coerce.number().int().min(1,",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/company.dto.ts",
        "start": 118,
        "end": 128,
        "startLoc": {
          "line": 118,
          "column": 2,
          "position": 1926
        },
        "endLoc": {
          "line": 128,
          "column": 2,
          "position": 2120
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/company.routes.ts",
        "start": 227,
        "end": 237,
        "startLoc": {
          "line": 227,
          "column": 7,
          "position": 3144
        },
        "endLoc": {
          "line": 237,
          "column": 2,
          "position": 3338
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ": z.string().nullable(),\n  address: z.object({\n    street: z.string(),\n    city: z.string(),\n    state: z.string().nullable(),\n    postalCode: z.string(),\n    country: z.string(),\n    countryCode: z.string()\n  }).nullable(),\n  billingAddress",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/company.dto.ts",
        "start": 159,
        "end": 168,
        "startLoc": {
          "line": 159,
          "column": 6,
          "position": 2600
        },
        "endLoc": {
          "line": 168,
          "column": 15,
          "position": 2702
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/contact.dto.ts",
        "start": 196,
        "end": 205,
        "startLoc": {
          "line": 196,
          "column": 8,
          "position": 3351
        },
        "endLoc": {
          "line": 205,
          "column": 9,
          "position": 3453
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ": z.object({\n    street: z.string(),\n    city: z.string(),\n    state: z.string().nullable(),\n    postalCode: z.string(),\n    country: z.string(),\n    countryCode: z.string()\n  }).nullable(),\n  shippingAddress",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/company.dto.ts",
        "start": 168,
        "end": 176,
        "startLoc": {
          "line": 168,
          "column": 15,
          "position": 2703
        },
        "endLoc": {
          "line": 176,
          "column": 16,
          "position": 2790
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/contact.dto.ts",
        "start": 197,
        "end": 205,
        "startLoc": {
          "line": 197,
          "column": 8,
          "position": 3366
        },
        "endLoc": {
          "line": 205,
          "column": 9,
          "position": 3453
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ": z.object({\n    street: z.string(),\n    city: z.string(),\n    state: z.string().nullable(),\n    postalCode: z.string(),\n    country: z.string(),\n    countryCode: z.string()\n  }).nullable(),\n  taxId",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/company.dto.ts",
        "start": 176,
        "end": 184,
        "startLoc": {
          "line": 176,
          "column": 16,
          "position": 2791
        },
        "endLoc": {
          "line": 184,
          "column": 6,
          "position": 2878
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/contact.dto.ts",
        "start": 197,
        "end": 205,
        "startLoc": {
          "line": 197,
          "column": 8,
          "position": 3366
        },
        "endLoc": {
          "line": 205,
          "column": 9,
          "position": 3453
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "),\n  assignedUserId: z.string().uuid().nullable(),\n  lastContactDate: z.date().nullable(),\n  nextFollowUpDate: z.date().nullable(),\n  leadScore: z.number().int().nullable(),\n  leadScoreLevel",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/company.dto.ts",
        "start": 210,
        "end": 215,
        "startLoc": {
          "line": 210,
          "column": 2,
          "position": 3193
        },
        "endLoc": {
          "line": 215,
          "column": 15,
          "position": 3265
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/contact.dto.ts",
        "start": 238,
        "end": 243,
        "startLoc": {
          "line": 238,
          "column": 2,
          "position": 3859
        },
        "endLoc": {
          "line": 243,
          "column": 16,
          "position": 3931
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "),\n  total: z.number().int().min(0),\n  page: z.number().int().min(1),\n  limit: z.number().int().min(1),\n  totalPages: z.number().int().min(0),\n  hasNext: z.boolean(),\n  hasPrevious: z.boolean()\n});\n\nexport const CompanyStatsResponseSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/company.dto.ts",
        "start": 232,
        "end": 241,
        "startLoc": {
          "line": 232,
          "column": 22,
          "position": 3462
        },
        "endLoc": {
          "line": 241,
          "column": 27,
          "position": 3575
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/user.dto.ts",
        "start": 87,
        "end": 96,
        "startLoc": {
          "line": 87,
          "column": 19,
          "position": 1065
        },
        "endLoc": {
          "line": 96,
          "column": 24,
          "position": 1178
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ": z.number().int().min(0),\n  overdueForFollowUp: z.number().int().min(0),\n  highScoreLeads: z.number().int().min(0),\n  mediumScoreLeads: z.number().int().min(0),\n  lowScoreLeads: z.number().int().min(0),\n  averageLeadScore",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/company.dto.ts",
        "start": 258,
        "end": 263,
        "startLoc": {
          "line": 258,
          "column": 18,
          "position": 3967
        },
        "endLoc": {
          "line": 263,
          "column": 17,
          "position": 4066
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/contact.dto.ts",
        "start": 328,
        "end": 333,
        "startLoc": {
          "line": 328,
          "column": 15,
          "position": 5243
        },
        "endLoc": {
          "line": 333,
          "column": 14,
          "position": 5342
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ": z.string(),\n    count: z.number().int().min(0)\n  })),\n  topSources: z.array(z.object({\n    source: z.string(),\n    count: z.number().int().min(0)\n  })),\n  topAssignedUsers: z.array(z.object({\n    userId: z.string(),\n    count: z.number().int().min(0)\n  }))\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/company.dto.ts",
        "start": 271,
        "end": 282,
        "startLoc": {
          "line": 271,
          "column": 9,
          "position": 4209
        },
        "endLoc": {
          "line": 282,
          "column": 2,
          "position": 4342
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/contact.dto.ts",
        "start": 369,
        "end": 379,
        "startLoc": {
          "line": 369,
          "column": 11,
          "position": 5913
        },
        "endLoc": {
          "line": 379,
          "column": 2,
          "position": 6045
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "z.object({\n  page: z.number(),\n  limit: z.number(),\n  total: z.number(),\n  totalPages: z.number(),\n  hasNext: z.boolean(),\n  hasPrev: z.boolean()\n});",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/base.dto.ts",
        "start": 91,
        "end": 98,
        "startLoc": {
          "line": 91,
          "column": 2,
          "position": 727
        },
        "endLoc": {
          "line": 98,
          "column": 2,
          "position": 800
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/product.dto.ts",
        "start": 321,
        "end": 329,
        "startLoc": {
          "line": 321,
          "column": 2,
          "position": 4465
        },
        "endLoc": {
          "line": 329,
          "column": 2,
          "position": 4540
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "// ========================================================================\n\nexport const AddressSchema = z.object({\n  street: z.string().min(1, 'Street is required'),\n  city: z.string().min(1, 'City is required'),\n  state: z.string().optional(),\n  postalCode: z.string().min(1, 'Postal code is required'),\n  country: z.string().min(1, 'Country is required'),\n  countryCode: z.string().length(2, 'Country code must be 2 characters')\n});",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/base.dto.ts",
        "start": 163,
        "end": 172,
        "startLoc": {
          "line": 163,
          "column": 1,
          "position": 1250
        },
        "endLoc": {
          "line": 172,
          "column": 2,
          "position": 1378
        }
      },
      "secondFile": {
        "name": "apps/api/src/shared/utils/validation.utils.ts",
        "start": 43,
        "end": 43,
        "startLoc": {
          "line": 43,
          "column": 1,
          "position": 341
        },
        "endLoc": {
          "line": 43,
          "column": 2,
          "position": 667
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ".optional(),\n  settings: z.object({\n    layers: z.array(z.object({\n      id: z.string().uuid(),\n      name: z.string().min(1).max(255),\n      type: z.enum(['domain', 'application', 'infrastructure', 'presentation', 'shared'],",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/architecture.dto.ts",
        "start": 35,
        "end": 40,
        "startLoc": {
          "line": 35,
          "column": 18,
          "position": 187
        },
        "endLoc": {
          "line": 40,
          "column": 2,
          "position": 276
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/architecture.routes.ts",
        "start": 26,
        "end": 31,
        "startLoc": {
          "line": 26,
          "column": 2,
          "position": 226
        },
        "endLoc": {
          "line": 31,
          "column": 2,
          "position": 315
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "),\n      description: z.string().max(1000),\n      components: z.array(z.object({\n        id: z.string().uuid(),\n        name: z.string().min(1).max(255),\n        type: z.enum(['entity', 'repository', 'use_case', 'service', 'controller', 'middleware', 'dto', 'route'],",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/architecture.dto.ts",
        "start": 42,
        "end": 47,
        "startLoc": {
          "line": 42,
          "column": 2,
          "position": 302
        },
        "endLoc": {
          "line": 47,
          "column": 2,
          "position": 403
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/architecture.routes.ts",
        "start": 31,
        "end": 36,
        "startLoc": {
          "line": 31,
          "column": 2,
          "position": 315
        },
        "endLoc": {
          "line": 36,
          "column": 2,
          "position": 416
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "),\n        description: z.string().max(1000),\n        dependencies: z.array(z.string()).default([]),\n        interfaces: z.array(z.string()).default([]),\n        implementation: z.string().max(5000),\n        tests: z.array(z.string()).default([]),\n        documentation: z.string().max(5000)\n      })).min(1,",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/architecture.dto.ts",
        "start": 49,
        "end": 56,
        "startLoc": {
          "line": 49,
          "column": 2,
          "position": 429
        },
        "endLoc": {
          "line": 56,
          "column": 2,
          "position": 553
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/architecture.routes.ts",
        "start": 36,
        "end": 43,
        "startLoc": {
          "line": 36,
          "column": 2,
          "position": 416
        },
        "endLoc": {
          "line": 43,
          "column": 2,
          "position": 540
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "),\n    patterns: z.array(z.string()).default([]),\n    principles: z.array(z.string()).default([]),\n    conventions: z.record(z.any()).default({}),\n    tools: z.array(z.string()).default([]),\n    frameworks: z.array(z.string()).default([]),\n    libraries: z.array(z.string()).default([]),\n    customFields: CustomFieldsSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/architecture.dto.ts",
        "start": 60,
        "end": 67,
        "startLoc": {
          "line": 60,
          "column": 33,
          "position": 635
        },
        "endLoc": {
          "line": 67,
          "column": 19,
          "position": 774
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/architecture.routes.ts",
        "start": 47,
        "end": 54,
        "startLoc": {
          "line": 47,
          "column": 2,
          "position": 616
        },
        "endLoc": {
          "line": 54,
          "column": 2,
          "position": 755
        }
      }
    },
    {
      "format": "typescript",
      "lines": 30,
      "fragment": "),\n  description: DescriptionSchema.optional(),\n  settings: z.object({\n    layers: z.array(z.object({\n      id: z.string().uuid(),\n      name: z.string().min(1).max(255),\n      type: z.enum(['domain', 'application', 'infrastructure', 'presentation', 'shared']),\n      description: z.string().max(1000),\n      components: z.array(z.object({\n        id: z.string().uuid(),\n        name: z.string().min(1).max(255),\n        type: z.enum(['entity', 'repository', 'use_case', 'service', 'controller', 'middleware', 'dto', 'route']),\n        description: z.string().max(1000),\n        dependencies: z.array(z.string()).default([]),\n        interfaces: z.array(z.string()).default([]),\n        implementation: z.string().max(5000),\n        tests: z.array(z.string()).default([]),\n        documentation: z.string().max(5000)\n      })),\n      dependencies: z.array(z.string()).default([]),\n      responsibilities: z.array(z.string()).default([]),\n      patterns: z.array(z.string()).default([])\n    })).optional(),\n    patterns: z.array(z.string()).optional(),\n    principles: z.array(z.string()).optional(),\n    conventions: z.record(z.any()).optional(),\n    tools: z.array(z.string()).optional(),\n    frameworks: z.array(z.string()).optional(),\n    libraries: z.array(z.string()).optional(),\n    customFields: CustomFieldsSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/architecture.dto.ts",
        "start": 75,
        "end": 104,
        "startLoc": {
          "line": 75,
          "column": 2,
          "position": 851
        },
        "endLoc": {
          "line": 104,
          "column": 19,
          "position": 1370
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/architecture.dto.ts",
        "start": 34,
        "end": 102,
        "startLoc": {
          "line": 34,
          "column": 2,
          "position": 179
        },
        "endLoc": {
          "line": 102,
          "column": 2,
          "position": 1491
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "type: z.enum(['hexagonal', 'layered', 'microservices', 'monolithic', 'event_driven']).optional(),\n  status: z.enum(['design', 'implementation', 'testing', 'deployed', 'maintenance']).optional(),\n  layerType: z.enum(['domain', 'application', 'infrastructure', 'presentation', 'shared']).optional(),\n  componentType: z.enum(['entity', 'repository', 'use_case', 'service', 'controller', 'middleware', 'dto', 'route']).optional(),\n  isActive: z.coerce.boolean().optional(),\n  hasMetrics: z.coerce.boolean().optional(),\n  minQualityScore: z.coerce.number().min(0).max(10).optional(),\n  maxQualityScore: z.coerce.number().min(0).max(10).optional(),\n  lastAnalysisFrom: z.coerce.date().optional(),\n  lastAnalysisTo: z.coerce.date().optional()\n});",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/architecture.dto.ts",
        "start": 127,
        "end": 137,
        "startLoc": {
          "line": 127,
          "column": 3,
          "position": 1504
        },
        "endLoc": {
          "line": 137,
          "column": 2,
          "position": 1755
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/architecture.routes.ts",
        "start": 153,
        "end": 164,
        "startLoc": {
          "line": 153,
          "column": 9,
          "position": 1928
        },
        "endLoc": {
          "line": 164,
          "column": 2,
          "position": 2182
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "),\n  updates: z.object({\n    status: z.enum(['design', 'implementation', 'testing', 'deployed', 'maintenance']).optional(),\n    patterns: z.array(z.string()).optional(),\n    tags: z.array(z.string()).optional()\n  })\n});",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/architecture.dto.ts",
        "start": 140,
        "end": 146,
        "startLoc": {
          "line": 140,
          "column": 43,
          "position": 1789
        },
        "endLoc": {
          "line": 146,
          "column": 2,
          "position": 1877
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/architecture.routes.ts",
        "start": 310,
        "end": 317,
        "startLoc": {
          "line": 310,
          "column": 2,
          "position": 3697
        },
        "endLoc": {
          "line": 317,
          "column": 2,
          "position": 3788
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "({\n    type: z.enum(['hexagonal', 'layered', 'microservices', 'monolithic', 'event_driven']).optional(),\n    status: z.enum(['design', 'implementation', 'testing', 'deployed', 'maintenance']).optional(),\n    layerType: z.enum(['domain', 'application', 'infrastructure', 'presentation', 'shared']).optional(),\n    componentType: z.enum(['entity', 'repository', 'use_case', 'service', 'controller', 'middleware', 'dto', 'route']).optional(),\n    isActive: z.boolean",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/dto/architecture.dto.ts",
        "start": 267,
        "end": 272,
        "startLoc": {
          "line": 267,
          "column": 7,
          "position": 3189
        },
        "endLoc": {
          "line": 272,
          "column": 8,
          "position": 3327
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/architecture.dto.ts",
        "start": 126,
        "end": 157,
        "startLoc": {
          "line": 126,
          "column": 7,
          "position": 1500
        },
        "endLoc": {
          "line": 157,
          "column": 7,
          "position": 2062
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "});\n\n      if (!result.success) {\n        res.status(400).json({\n          success: false,\n          error: result.error,\n          timestamp: new Date()\n        } as ApiResponse);\n        return;\n      }\n\n      const response: ApiResponse<UserResponse> = {\n        success: true,\n        data: transformUserToResponse(result.user!),\n        message: 'User updated successfully'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/user.controller.ts",
        "start": 99,
        "end": 113,
        "startLoc": {
          "line": 99,
          "column": 7,
          "position": 707
        },
        "endLoc": {
          "line": 113,
          "column": 28,
          "position": 818
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/user.controller.ts",
        "start": 55,
        "end": 69,
        "startLoc": {
          "line": 55,
          "column": 7,
          "position": 336
        },
        "endLoc": {
          "line": 69,
          "column": 28,
          "position": 447
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ");\n\n      if (!user) {\n        res.status(404).json({\n          success: false,\n          error: 'User not found',\n          timestamp: new Date()\n        } as ApiResponse);\n        return;\n      }\n\n      const response: ApiResponse<UserResponse> = {\n        success: true,\n        data: transformUserToResponse(user),\n        timestamp: new Date(),\n        requestId: req.headers['x-request-id'] as string\n      };\n\n      res.status(200).json(response);\n    } catch (error) {\n      next(error);\n    }\n  }\n\n  async getUsersByOrganization",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/user.controller.ts",
        "start": 209,
        "end": 233,
        "startLoc": {
          "line": 209,
          "column": 6,
          "position": 1628
        },
        "endLoc": {
          "line": 233,
          "column": 23,
          "position": 1800
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/user.controller.ts",
        "start": 172,
        "end": 196,
        "startLoc": {
          "line": 172,
          "column": 7,
          "position": 1325
        },
        "endLoc": {
          "line": 196,
          "column": 15,
          "position": 1497
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "(req.body);\n      const updatedBy = req.user?.id || req.headers['x-user-id'] as string;\n\n      if (!updatedBy) {\n        res.status(401).json({\n          success: false,\n          error: 'User ID is required',\n          timestamp: new Date()\n        } as ApiResponse);\n        return;\n      }\n\n      const result = await this.userApplicationService.bulkUpdateUsers",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/user.controller.ts",
        "start": 301,
        "end": 313,
        "startLoc": {
          "line": 301,
          "column": 31,
          "position": 2401
        },
        "endLoc": {
          "line": 313,
          "column": 16,
          "position": 2513
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/user.controller.ts",
        "start": 83,
        "end": 95,
        "startLoc": {
          "line": 83,
          "column": 26,
          "position": 578
        },
        "endLoc": {
          "line": 95,
          "column": 11,
          "position": 690
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ");\n\n      if (!result.success) {\n        res.status(400).json({\n          success: false,\n          error: result.error,\n          timestamp: new Date()\n        } as ApiResponse);\n        return;\n      }\n\n      const response: ApiResponse = {\n        success: true,\n        data",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/user.controller.ts",
        "start": 317,
        "end": 330,
        "startLoc": {
          "line": 317,
          "column": 7,
          "position": 2532
        },
        "endLoc": {
          "line": 330,
          "column": 5,
          "position": 2623
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/user.controller.ts",
        "start": 141,
        "end": 154,
        "startLoc": {
          "line": 141,
          "column": 2,
          "position": 1070
        },
        "endLoc": {
          "line": 154,
          "column": 8,
          "position": 1161
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ");\n      const deletedBy = req.user?.id || req.headers['x-user-id'] as string;\n\n      if (!deletedBy) {\n        res.status(401).json({\n          success: false,\n          error: 'User ID is required',\n          timestamp: new Date()\n        } as ApiResponse);\n        return;\n      }\n\n      const result = await this.userApplicationService.bulkDeleteUsers",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/user.controller.ts",
        "start": 349,
        "end": 361,
        "startLoc": {
          "line": 349,
          "column": 5,
          "position": 2821
        },
        "endLoc": {
          "line": 361,
          "column": 16,
          "position": 2929
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/user.controller.ts",
        "start": 126,
        "end": 138,
        "startLoc": {
          "line": 126,
          "column": 2,
          "position": 948
        },
        "endLoc": {
          "line": 138,
          "column": 11,
          "position": 1056
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ");\n\n      if (!result.success) {\n        res.status(400).json({\n          success: false,\n          error: result.error,\n          timestamp: new Date()\n        } as ApiResponse);\n        return;\n      }\n\n      const response: ApiResponse = {\n        success: true,\n        data: {\n          total: result.results.length,\n          successful: result.results.filter(r => r.success).length,\n          failed: result.results.filter(r => !r.success).length,\n          results: result.results\n        },\n        message: 'Bulk delete completed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/user.controller.ts",
        "start": 364,
        "end": 383,
        "startLoc": {
          "line": 364,
          "column": 7,
          "position": 2942
        },
        "endLoc": {
          "line": 383,
          "column": 24,
          "position": 3110
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/user.controller.ts",
        "start": 141,
        "end": 336,
        "startLoc": {
          "line": 141,
          "column": 2,
          "position": 1070
        },
        "endLoc": {
          "line": 336,
          "column": 24,
          "position": 2700
        }
      }
    },
    {
      "format": "typescript",
      "lines": 67,
      "fragment": "});\n\n      const response: ProductResponse = {\n        id: result.data.product.id.value,\n        organizationId: result.data.product.organizationId.value,\n        name: result.data.product.name,\n        description: result.data.product.description,\n        shortDescription: result.data.product.shortDescription,\n        sku: result.data.product.sku,\n        barcode: result.data.product.barcode,\n        type: result.data.product.type.value,\n        status: result.data.product.status.value,\n        category: result.data.product.category.value,\n        brand: result.data.product.brand?.value,\n        supplier: result.data.product.supplier?.value,\n        settings: {\n          inventory: result.data.product.settings.inventory,\n          pricing: {\n            costPrice: result.data.product.settings.pricing.costPrice ? {\n              amount: result.data.product.settings.pricing.costPrice.amount,\n              currency: result.data.product.settings.pricing.costPrice.currency\n            } : undefined,\n            sellingPrice: {\n              amount: result.data.product.settings.pricing.sellingPrice.amount,\n              currency: result.data.product.settings.pricing.sellingPrice.currency\n            },\n            compareAtPrice: result.data.product.settings.pricing.compareAtPrice ? {\n              amount: result.data.product.settings.pricing.compareAtPrice.amount,\n              currency: result.data.product.settings.pricing.compareAtPrice.currency\n            } : undefined,\n            margin: result.data.product.settings.pricing.margin\n          },\n          shipping: result.data.product.settings.shipping,\n          seo: result.data.product.settings.seo,\n          customFields: result.data.product.settings.customFields,\n          tags: result.data.product.settings.tags,\n          notes: result.data.product.settings.notes\n        },\n        images: result.data.product.images,\n        documents: result.data.product.documents,\n        specifications: result.data.product.specifications,\n        variants: result.data.product.variants?.map(variant => ({\n          id: variant.id,\n          name: variant.name,\n          sku: variant.sku,\n          price: {\n            amount: variant.price.amount,\n            currency: variant.price.currency\n          },\n          compareAtPrice: variant.compareAtPrice ? {\n            amount: variant.compareAtPrice.amount,\n            currency: variant.compareAtPrice.currency\n          } : undefined,\n          costPrice: variant.costPrice ? {\n            amount: variant.costPrice.amount,\n            currency: variant.costPrice.currency\n          } : undefined,\n          inventory: variant.inventory,\n          attributes: variant.attributes,\n          isActive: variant.isActive\n        })),\n        isActive: result.data.product.isActive,\n        createdAt: result.data.product.createdAt,\n        updatedAt: result.data.product.updatedAt\n      };\n\n      res.status(200",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/product.controller.ts",
        "start": 139,
        "end": 205,
        "startLoc": {
          "line": 139,
          "column": 7,
          "position": 1330
        },
        "endLoc": {
          "line": 205,
          "column": 4,
          "position": 2102
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/product.controller.ts",
        "start": 53,
        "end": 119,
        "startLoc": {
          "line": 53,
          "column": 7,
          "position": 368
        },
        "endLoc": {
          "line": 119,
          "column": 4,
          "position": 1140
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ",\n        sku: product.sku,\n        barcode: product.barcode,\n        type: product.type.value,\n        status: product.status.value,\n        category: product.category.value,\n        brand: product.brand?.value,\n        supplier: product.supplier?.value,\n        settings",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/product.controller.ts",
        "start": 249,
        "end": 257,
        "startLoc": {
          "line": 249,
          "column": 17,
          "position": 2498
        },
        "endLoc": {
          "line": 257,
          "column": 9,
          "position": 2576
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/routes/product.routes.ts",
        "start": 550,
        "end": 558,
        "startLoc": {
          "line": 550,
          "column": 5,
          "position": 6333
        },
        "endLoc": {
          "line": 558,
          "column": 9,
          "position": 6411
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": "product.variants?.map(variant => ({\n          id: variant.id,\n          name: variant.name,\n          sku: variant.sku,\n          price: {\n            amount: variant.price.amount,\n            currency: variant.price.currency\n          },\n          compareAtPrice: variant.compareAtPrice ? {\n            amount: variant.compareAtPrice.amount,\n            currency: variant.compareAtPrice.currency\n          } : undefined,\n          costPrice: variant.costPrice ? {\n            amount: variant.costPrice.amount,\n            currency: variant.costPrice.currency\n          } : undefined,\n          inventory: variant.inventory,\n          attributes: variant.attributes,\n          isActive: variant.isActive\n        })),\n        isActive: product",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/product.controller.ts",
        "start": 283,
        "end": 303,
        "startLoc": {
          "line": 283,
          "column": 2,
          "position": 2848
        },
        "endLoc": {
          "line": 303,
          "column": 8,
          "position": 3038
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/product.controller.ts",
        "start": 94,
        "end": 114,
        "startLoc": {
          "line": 94,
          "column": 2,
          "position": 906
        },
        "endLoc": {
          "line": 114,
          "column": 7,
          "position": 1096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 63,
      "fragment": "{\n          id: product.id.value,\n          organizationId: product.organizationId.value,\n          name: product.name,\n          description: product.description,\n          shortDescription: product.shortDescription,\n          sku: product.sku,\n          barcode: product.barcode,\n          type: product.type.value,\n          status: product.status.value,\n          category: product.category.value,\n          brand: product.brand?.value,\n          supplier: product.supplier?.value,\n          settings: {\n            inventory: product.settings.inventory,\n            pricing: {\n              costPrice: product.settings.pricing.costPrice ? {\n                amount: product.settings.pricing.costPrice.amount,\n                currency: product.settings.pricing.costPrice.currency\n              } : undefined,\n              sellingPrice: {\n                amount: product.settings.pricing.sellingPrice.amount,\n                currency: product.settings.pricing.sellingPrice.currency\n              },\n              compareAtPrice: product.settings.pricing.compareAtPrice ? {\n                amount: product.settings.pricing.compareAtPrice.amount,\n                currency: product.settings.pricing.compareAtPrice.currency\n              } : undefined,\n              margin: product.settings.pricing.margin\n            },\n            shipping: product.settings.shipping,\n            seo: product.settings.seo,\n            customFields: product.settings.customFields,\n            tags: product.settings.tags,\n            notes: product.settings.notes\n          },\n          images: product.images,\n          documents: product.documents,\n          specifications: product.specifications,\n          variants: product.variants?.map(variant => ({\n            id: variant.id,\n            name: variant.name,\n            sku: variant.sku,\n            price: {\n              amount: variant.price.amount,\n              currency: variant.price.currency\n            },\n            compareAtPrice: variant.compareAtPrice ? {\n              amount: variant.compareAtPrice.amount,\n              currency: variant.compareAtPrice.currency\n            } : undefined,\n            costPrice: variant.costPrice ? {\n              amount: variant.costPrice.amount,\n              currency: variant.costPrice.currency\n            } : undefined,\n            inventory: variant.inventory,\n            attributes: variant.attributes,\n            isActive: variant.isActive\n          })),\n          isActive: product.isActive,\n          createdAt: product.createdAt,\n          updatedAt: product.updatedAt\n        })",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/product.controller.ts",
        "start": 375,
        "end": 437,
        "startLoc": {
          "line": 375,
          "column": 2,
          "position": 3800
        },
        "endLoc": {
          "line": 437,
          "column": 2,
          "position": 4413
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/product.controller.ts",
        "start": 244,
        "end": 306,
        "startLoc": {
          "line": 244,
          "column": 2,
          "position": 2449
        },
        "endLoc": {
          "line": 306,
          "column": 2,
          "position": 3062
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "(req: Request, res: Response, next: NextFunction): Promise<void> {\n    try {\n      const { organizationId } = ProductOrganizationIdParamSchema.parse(req.params);\n      const query = ProductSearchQuerySchema.parse(req.query);\n\n      const products = await this.productRepository.search",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/product.controller.ts",
        "start": 457,
        "end": 462,
        "startLoc": {
          "line": 457,
          "column": 15,
          "position": 4541
        },
        "endLoc": {
          "line": 462,
          "column": 7,
          "position": 4625
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/product.controller.ts",
        "start": 317,
        "end": 322,
        "startLoc": {
          "line": 317,
          "column": 26,
          "position": 3124
        },
        "endLoc": {
          "line": 322,
          "column": 21,
          "position": 3208
        }
      }
    },
    {
      "format": "typescript",
      "lines": 67,
      "fragment": ".map(product => ({\n          id: product.id.value,\n          organizationId: product.organizationId.value,\n          name: product.name,\n          description: product.description,\n          shortDescription: product.shortDescription,\n          sku: product.sku,\n          barcode: product.barcode,\n          type: product.type.value,\n          status: product.status.value,\n          category: product.category.value,\n          brand: product.brand?.value,\n          supplier: product.supplier?.value,\n          settings: {\n            inventory: product.settings.inventory,\n            pricing: {\n              costPrice: product.settings.pricing.costPrice ? {\n                amount: product.settings.pricing.costPrice.amount,\n                currency: product.settings.pricing.costPrice.currency\n              } : undefined,\n              sellingPrice: {\n                amount: product.settings.pricing.sellingPrice.amount,\n                currency: product.settings.pricing.sellingPrice.currency\n              },\n              compareAtPrice: product.settings.pricing.compareAtPrice ? {\n                amount: product.settings.pricing.compareAtPrice.amount,\n                currency: product.settings.pricing.compareAtPrice.currency\n              } : undefined,\n              margin: product.settings.pricing.margin\n            },\n            shipping: product.settings.shipping,\n            seo: product.settings.seo,\n            customFields: product.settings.customFields,\n            tags: product.settings.tags,\n            notes: product.settings.notes\n          },\n          images: product.images,\n          documents: product.documents,\n          specifications: product.specifications,\n          variants: product.variants?.map(variant => ({\n            id: variant.id,\n            name: variant.name,\n            sku: variant.sku,\n            price: {\n              amount: variant.price.amount,\n              currency: variant.price.currency\n            },\n            compareAtPrice: variant.compareAtPrice ? {\n              amount: variant.compareAtPrice.amount,\n              currency: variant.compareAtPrice.currency\n            } : undefined,\n            costPrice: variant.costPrice ? {\n              amount: variant.costPrice.amount,\n              currency: variant.costPrice.currency\n            } : undefined,\n            inventory: variant.inventory,\n            attributes: variant.attributes,\n            isActive: variant.isActive\n          })),\n          isActive: product.isActive,\n          createdAt: product.createdAt,\n          updatedAt: product.updatedAt\n        })),\n        pagination: {\n          page: query.page,\n          limit: query.limit,\n          total:",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/product.controller.ts",
        "start": 465,
        "end": 531,
        "startLoc": {
          "line": 465,
          "column": 9,
          "position": 4658
        },
        "endLoc": {
          "line": 531,
          "column": 2,
          "position": 5309
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/product.controller.ts",
        "start": 375,
        "end": 441,
        "startLoc": {
          "line": 375,
          "column": 18,
          "position": 3792
        },
        "endLoc": {
          "line": 441,
          "column": 2,
          "position": 4443
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "(req: Request, res: Response, next: NextFunction): Promise<void> {\n    await this.handleAsync(async () => {\n      const { organizationId } = PredictiveAnalyticsOrganizationIdParamSchema.parse(req.params);\n      const query = PredictiveAnalyticsSearchQuerySchema.parse(req.query);\n\n      const result = await this.predictiveAnalyticsRepository.search",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/predictive-analytics.controller.ts",
        "start": 127,
        "end": 132,
        "startLoc": {
          "line": 127,
          "column": 26,
          "position": 1198
        },
        "endLoc": {
          "line": 132,
          "column": 7,
          "position": 1293
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/predictive-analytics.controller.ts",
        "start": 111,
        "end": 116,
        "startLoc": {
          "line": 111,
          "column": 37,
          "position": 1013
        },
        "endLoc": {
          "line": 116,
          "column": 21,
          "position": 1108
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "organizationId, query);\n      \n      const response: PredictiveAnalyticsListResponse = {\n        data: result.data.map(predictiveAnalytics => this.transformPredictiveAnalyticsToResponse(predictiveAnalytics)),\n        pagination: result.pagination\n      };\n\n      this.sendSuccessResponse(res, response);\n    }, res, next);\n  }\n\n  async getPredictiveAnalyticsStats",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/predictive-analytics.controller.ts",
        "start": 132,
        "end": 143,
        "startLoc": {
          "line": 132,
          "column": 2,
          "position": 1304
        },
        "endLoc": {
          "line": 143,
          "column": 28,
          "position": 1391
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/predictive-analytics.controller.ts",
        "start": 116,
        "end": 127,
        "startLoc": {
          "line": 116,
          "column": 2,
          "position": 1110
        },
        "endLoc": {
          "line": 127,
          "column": 26,
          "position": 1197
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", organizationId, query);\n      \n      const response: PredictiveAnalyticsListResponse = {\n        data: result.data.map(predictiveAnalytics => this.transformPredictiveAnalyticsToResponse(predictiveAnalytics)),\n        pagination: result.pagination\n      };\n\n      this.sendSuccessResponse(res, response);\n    }, res, next);\n  }\n\n  async getAnalyticsByStatus",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/predictive-analytics.controller.ts",
        "start": 164,
        "end": 175,
        "startLoc": {
          "line": 164,
          "column": 5,
          "position": 1650
        },
        "endLoc": {
          "line": 175,
          "column": 21,
          "position": 1739
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/predictive-analytics.controller.ts",
        "start": 132,
        "end": 127,
        "startLoc": {
          "line": 132,
          "column": 3,
          "position": 1302
        },
        "endLoc": {
          "line": 127,
          "column": 26,
          "position": 1197
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", organizationId, query);\n      \n      const response: PredictiveAnalyticsListResponse = {\n        data: result.data.map(predictiveAnalytics => this.transformPredictiveAnalyticsToResponse(predictiveAnalytics)),\n        pagination: result.pagination\n      };\n\n      this.sendSuccessResponse(res, response);\n    }, res, next);\n  }\n\n  async getActiveModels",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/predictive-analytics.controller.ts",
        "start": 181,
        "end": 192,
        "startLoc": {
          "line": 181,
          "column": 7,
          "position": 1854
        },
        "endLoc": {
          "line": 192,
          "column": 16,
          "position": 1943
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/predictive-analytics.controller.ts",
        "start": 132,
        "end": 127,
        "startLoc": {
          "line": 132,
          "column": 3,
          "position": 1302
        },
        "endLoc": {
          "line": 127,
          "column": 26,
          "position": 1197
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "(req: Request, res: Response, next: NextFunction): Promise<void> {\n    await this.handleAsync(async () => {\n      const { organizationId } = PredictiveAnalyticsOrganizationIdParamSchema.parse(req.params);\n      const query = PredictiveAnalyticsSearchQuerySchema.parse(req.query);\n\n      const result = await this.predictiveAnalyticsRepository.findActiveModels",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/predictive-analytics.controller.ts",
        "start": 192,
        "end": 197,
        "startLoc": {
          "line": 192,
          "column": 16,
          "position": 1944
        },
        "endLoc": {
          "line": 197,
          "column": 17,
          "position": 2039
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/predictive-analytics.controller.ts",
        "start": 111,
        "end": 116,
        "startLoc": {
          "line": 111,
          "column": 37,
          "position": 1013
        },
        "endLoc": {
          "line": 116,
          "column": 21,
          "position": 1108
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "(organizationId, query);\n      \n      const response: PredictiveAnalyticsListResponse = {\n        data: result.data.map(predictiveAnalytics => this.transformPredictiveAnalyticsToResponse(predictiveAnalytics)),\n        pagination: result.pagination\n      };\n\n      this.sendSuccessResponse(res, response);\n    }, res, next);\n  }\n\n  async getNeedsRetraining",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/predictive-analytics.controller.ts",
        "start": 197,
        "end": 208,
        "startLoc": {
          "line": 197,
          "column": 17,
          "position": 2040
        },
        "endLoc": {
          "line": 208,
          "column": 19,
          "position": 2128
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/predictive-analytics.controller.ts",
        "start": 116,
        "end": 127,
        "startLoc": {
          "line": 116,
          "column": 21,
          "position": 1109
        },
        "endLoc": {
          "line": 127,
          "column": 26,
          "position": 1197
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "(req: Request, res: Response, next: NextFunction): Promise<void> {\n    await this.handleAsync(async () => {\n      const { organizationId } = PredictiveAnalyticsOrganizationIdParamSchema.parse(req.params);\n      const query = PredictiveAnalyticsSearchQuerySchema.parse(req.query);\n\n      const result = await this.predictiveAnalyticsRepository.findNeedsRetraining",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/predictive-analytics.controller.ts",
        "start": 208,
        "end": 213,
        "startLoc": {
          "line": 208,
          "column": 19,
          "position": 2129
        },
        "endLoc": {
          "line": 213,
          "column": 20,
          "position": 2224
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/predictive-analytics.controller.ts",
        "start": 111,
        "end": 116,
        "startLoc": {
          "line": 111,
          "column": 37,
          "position": 1013
        },
        "endLoc": {
          "line": 116,
          "column": 21,
          "position": 1108
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "(organizationId, query);\n      \n      const response: PredictiveAnalyticsListResponse = {\n        data: result.data.map(predictiveAnalytics => this.transformPredictiveAnalyticsToResponse(predictiveAnalytics)),\n        pagination: result.pagination\n      };\n\n      this.sendSuccessResponse(res, response);\n    }, res, next);\n  }\n\n  // ========================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/predictive-analytics.controller.ts",
        "start": 213,
        "end": 224,
        "startLoc": {
          "line": 213,
          "column": 20,
          "position": 2225
        },
        "endLoc": {
          "line": 224,
          "column": 76,
          "position": 2311
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/predictive-analytics.controller.ts",
        "start": 116,
        "end": 127,
        "startLoc": {
          "line": 116,
          "column": 21,
          "position": 1109
        },
        "endLoc": {
          "line": 127,
          "column": 6,
          "position": 1195
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "(req: Request, res: Response, next: NextFunction): Promise<void> {\n    await this.handleAsync(async () => {\n      const { organizationId } = InvoiceOrganizationIdParamSchema.parse(req.params);\n      const query = InvoiceSearchQuerySchema.parse(req.query);\n\n      const result = await this.invoiceRepository.search",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/invoice.controller.ts",
        "start": 121,
        "end": 126,
        "startLoc": {
          "line": 121,
          "column": 15,
          "position": 1124
        },
        "endLoc": {
          "line": 126,
          "column": 7,
          "position": 1219
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/invoice.controller.ts",
        "start": 105,
        "end": 110,
        "startLoc": {
          "line": 105,
          "column": 26,
          "position": 939
        },
        "endLoc": {
          "line": 110,
          "column": 21,
          "position": 1034
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "organizationId, query);\n      \n      const response: InvoiceListResponse = {\n        data: result.data.map(invoice => this.transformInvoiceToResponse(invoice)),\n        pagination: result.pagination\n      };\n\n      this.sendSuccessResponse(res, response);\n    }, res, next);\n  }\n\n  async getInvoiceStats",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/invoice.controller.ts",
        "start": 126,
        "end": 137,
        "startLoc": {
          "line": 126,
          "column": 2,
          "position": 1230
        },
        "endLoc": {
          "line": 137,
          "column": 16,
          "position": 1317
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/invoice.controller.ts",
        "start": 110,
        "end": 121,
        "startLoc": {
          "line": 110,
          "column": 2,
          "position": 1036
        },
        "endLoc": {
          "line": 121,
          "column": 15,
          "position": 1123
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", organizationId, query);\n      \n      const response: InvoiceListResponse = {\n        data: result.data.map(invoice => this.transformInvoiceToResponse(invoice)),\n        pagination: result.pagination\n      };\n\n      this.sendSuccessResponse(res, response);\n    }, res, next);\n  }\n\n  async getInvoicesByStatus",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/invoice.controller.ts",
        "start": 158,
        "end": 169,
        "startLoc": {
          "line": 158,
          "column": 5,
          "position": 1576
        },
        "endLoc": {
          "line": 169,
          "column": 20,
          "position": 1665
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/invoice.controller.ts",
        "start": 126,
        "end": 121,
        "startLoc": {
          "line": 126,
          "column": 3,
          "position": 1228
        },
        "endLoc": {
          "line": 121,
          "column": 15,
          "position": 1123
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", organizationId, query);\n      \n      const response: InvoiceListResponse = {\n        data: result.data.map(invoice => this.transformInvoiceToResponse(invoice)),\n        pagination: result.pagination\n      };\n\n      this.sendSuccessResponse(res, response);\n    }, res, next);\n  }\n\n  async getInvoicesByPaymentStatus",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/invoice.controller.ts",
        "start": 175,
        "end": 186,
        "startLoc": {
          "line": 175,
          "column": 7,
          "position": 1780
        },
        "endLoc": {
          "line": 186,
          "column": 27,
          "position": 1869
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/invoice.controller.ts",
        "start": 126,
        "end": 121,
        "startLoc": {
          "line": 126,
          "column": 3,
          "position": 1228
        },
        "endLoc": {
          "line": 121,
          "column": 15,
          "position": 1123
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", organizationId, query);\n      \n      const response: InvoiceListResponse = {\n        data: result.data.map(invoice => this.transformInvoiceToResponse(invoice)),\n        pagination: result.pagination\n      };\n\n      this.sendSuccessResponse(res, response);\n    }, res, next);\n  }\n\n  async getInvoicesByCompany",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/invoice.controller.ts",
        "start": 192,
        "end": 203,
        "startLoc": {
          "line": 192,
          "column": 14,
          "position": 1984
        },
        "endLoc": {
          "line": 203,
          "column": 21,
          "position": 2073
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/invoice.controller.ts",
        "start": 126,
        "end": 121,
        "startLoc": {
          "line": 126,
          "column": 3,
          "position": 1228
        },
        "endLoc": {
          "line": 121,
          "column": 15,
          "position": 1123
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", organizationId, query);\n      \n      const response: InvoiceListResponse = {\n        data: result.data.map(invoice => this.transformInvoiceToResponse(invoice)),\n        pagination: result.pagination\n      };\n\n      this.sendSuccessResponse(res, response);\n    }, res, next);\n  }\n\n  async getOverdueInvoices",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/invoice.controller.ts",
        "start": 209,
        "end": 220,
        "startLoc": {
          "line": 209,
          "column": 10,
          "position": 2188
        },
        "endLoc": {
          "line": 220,
          "column": 19,
          "position": 2277
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/invoice.controller.ts",
        "start": 126,
        "end": 121,
        "startLoc": {
          "line": 126,
          "column": 3,
          "position": 1228
        },
        "endLoc": {
          "line": 121,
          "column": 15,
          "position": 1123
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "(req: Request, res: Response, next: NextFunction): Promise<void> {\n    await this.handleAsync(async () => {\n      const { organizationId } = InvoiceOrganizationIdParamSchema.parse(req.params);\n      const query = InvoiceSearchQuerySchema.parse(req.query);\n\n      const result = await this.invoiceRepository.findOverdueInvoices",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/invoice.controller.ts",
        "start": 220,
        "end": 225,
        "startLoc": {
          "line": 220,
          "column": 19,
          "position": 2278
        },
        "endLoc": {
          "line": 225,
          "column": 20,
          "position": 2373
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/invoice.controller.ts",
        "start": 105,
        "end": 110,
        "startLoc": {
          "line": 105,
          "column": 26,
          "position": 939
        },
        "endLoc": {
          "line": 110,
          "column": 21,
          "position": 1034
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "(organizationId, query);\n      \n      const response: InvoiceListResponse = {\n        data: result.data.map(invoice => this.transformInvoiceToResponse(invoice)),\n        pagination: result.pagination\n      };\n\n      this.sendSuccessResponse(res, response);\n    }, res, next);\n  }\n\n  async getInvoicesDueSoon",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/invoice.controller.ts",
        "start": 225,
        "end": 236,
        "startLoc": {
          "line": 225,
          "column": 20,
          "position": 2374
        },
        "endLoc": {
          "line": 236,
          "column": 19,
          "position": 2462
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/invoice.controller.ts",
        "start": 110,
        "end": 121,
        "startLoc": {
          "line": 110,
          "column": 21,
          "position": 1035
        },
        "endLoc": {
          "line": 121,
          "column": 15,
          "position": 1123
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", query);\n      \n      const response: InvoiceListResponse = {\n        data: result.data.map(invoice => this.transformInvoiceToResponse(invoice)),\n        pagination: result.pagination\n      };\n\n      this.sendSuccessResponse(res, response);\n    }, res, next);\n  }\n\n  // ========================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/invoice.controller.ts",
        "start": 242,
        "end": 253,
        "startLoc": {
          "line": 242,
          "column": 2,
          "position": 2583
        },
        "endLoc": {
          "line": 253,
          "column": 76,
          "position": 2667
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/invoice.controller.ts",
        "start": 110,
        "end": 121,
        "startLoc": {
          "line": 110,
          "column": 15,
          "position": 1037
        },
        "endLoc": {
          "line": 121,
          "column": 6,
          "position": 1121
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "{\n    return {\n      total: stats.total,\n      active: stats.active,\n      inactive: stats.inactive,\n      createdThisMonth: stats.createdThisMonth,\n      createdThisYear: stats.createdThisYear,\n      updatedThisMonth: stats.updatedThisMonth,\n      updatedThisYear: stats.updatedThisYear,\n      byType: stats.byType,\n      byStatus: stats.byStatus,\n      byPaymentStatus",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/invoice.controller.ts",
        "start": 427,
        "end": 438,
        "startLoc": {
          "line": 427,
          "column": 2,
          "position": 4307
        },
        "endLoc": {
          "line": 438,
          "column": 16,
          "position": 4396
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/predictive-analytics.controller.ts",
        "start": 358,
        "end": 369,
        "startLoc": {
          "line": 358,
          "column": 2,
          "position": 3589
        },
        "endLoc": {
          "line": 369,
          "column": 12,
          "position": 3678
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "(req: Request, res: Response, next: NextFunction): Promise<void> {\n    await this.handleAsync(async () => {\n      const { organizationId } = InventoryKardexOrganizationIdParamSchema.parse(req.params);\n      const query = InventoryKardexSearchQuerySchema.parse(req.query);\n\n      const result = await this.inventoryKardexRepository.search",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/inventory-kardex.controller.ts",
        "start": 126,
        "end": 131,
        "startLoc": {
          "line": 126,
          "column": 22,
          "position": 1171
        },
        "endLoc": {
          "line": 131,
          "column": 7,
          "position": 1266
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/inventory-kardex.controller.ts",
        "start": 110,
        "end": 115,
        "startLoc": {
          "line": 110,
          "column": 33,
          "position": 986
        },
        "endLoc": {
          "line": 115,
          "column": 21,
          "position": 1081
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "organizationId, query);\n      \n      const response: InventoryKardexListResponse = {\n        data: result.data.map(inventoryKardex => this.transformInventoryKardexToResponse(inventoryKardex)),\n        pagination: result.pagination\n      };\n\n      this.sendSuccessResponse(res, response);\n    }, res, next);\n  }\n\n  async getInventoryKardexStats",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/inventory-kardex.controller.ts",
        "start": 131,
        "end": 142,
        "startLoc": {
          "line": 131,
          "column": 2,
          "position": 1277
        },
        "endLoc": {
          "line": 142,
          "column": 24,
          "position": 1364
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/inventory-kardex.controller.ts",
        "start": 115,
        "end": 126,
        "startLoc": {
          "line": 115,
          "column": 2,
          "position": 1083
        },
        "endLoc": {
          "line": 126,
          "column": 22,
          "position": 1170
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", organizationId, query);\n      \n      const response: InventoryKardexListResponse = {\n        data: result.data.map(inventoryKardex => this.transformInventoryKardexToResponse(inventoryKardex)),\n        pagination: result.pagination\n      };\n\n      this.sendSuccessResponse(res, response);\n    }, res, next);\n  }\n\n  async getInventoryByWarehouse",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/inventory-kardex.controller.ts",
        "start": 163,
        "end": 174,
        "startLoc": {
          "line": 163,
          "column": 10,
          "position": 1623
        },
        "endLoc": {
          "line": 174,
          "column": 24,
          "position": 1712
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/inventory-kardex.controller.ts",
        "start": 131,
        "end": 126,
        "startLoc": {
          "line": 131,
          "column": 3,
          "position": 1275
        },
        "endLoc": {
          "line": 126,
          "column": 22,
          "position": 1170
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", organizationId, query);\n      \n      const response: InventoryKardexListResponse = {\n        data: result.data.map(inventoryKardex => this.transformInventoryKardexToResponse(inventoryKardex)),\n        pagination: result.pagination\n      };\n\n      this.sendSuccessResponse(res, response);\n    }, res, next);\n  }\n\n  async getLowStockInventory",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/inventory-kardex.controller.ts",
        "start": 180,
        "end": 191,
        "startLoc": {
          "line": 180,
          "column": 12,
          "position": 1827
        },
        "endLoc": {
          "line": 191,
          "column": 21,
          "position": 1916
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/inventory-kardex.controller.ts",
        "start": 131,
        "end": 126,
        "startLoc": {
          "line": 131,
          "column": 3,
          "position": 1275
        },
        "endLoc": {
          "line": 126,
          "column": 22,
          "position": 1170
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "(req: Request, res: Response, next: NextFunction): Promise<void> {\n    await this.handleAsync(async () => {\n      const { organizationId } = InventoryKardexOrganizationIdParamSchema.parse(req.params);\n      const query = InventoryKardexSearchQuerySchema.parse(req.query);\n\n      const result = await this.inventoryKardexRepository.findLowStock",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/inventory-kardex.controller.ts",
        "start": 191,
        "end": 196,
        "startLoc": {
          "line": 191,
          "column": 21,
          "position": 1917
        },
        "endLoc": {
          "line": 196,
          "column": 13,
          "position": 2012
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/inventory-kardex.controller.ts",
        "start": 110,
        "end": 115,
        "startLoc": {
          "line": 110,
          "column": 33,
          "position": 986
        },
        "endLoc": {
          "line": 115,
          "column": 21,
          "position": 1081
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", query);\n      \n      const response: InventoryKardexListResponse = {\n        data: result.data.map(inventoryKardex => this.transformInventoryKardexToResponse(inventoryKardex)),\n        pagination: result.pagination\n      };\n\n      this.sendSuccessResponse(res, response);\n    }, res, next);\n  }\n\n  async getOutOfStockInventory",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/inventory-kardex.controller.ts",
        "start": 196,
        "end": 207,
        "startLoc": {
          "line": 196,
          "column": 10,
          "position": 2018
        },
        "endLoc": {
          "line": 207,
          "column": 23,
          "position": 2104
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/inventory-kardex.controller.ts",
        "start": 115,
        "end": 126,
        "startLoc": {
          "line": 115,
          "column": 15,
          "position": 1084
        },
        "endLoc": {
          "line": 126,
          "column": 22,
          "position": 1170
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "(req: Request, res: Response, next: NextFunction): Promise<void> {\n    await this.handleAsync(async () => {\n      const { organizationId } = InventoryKardexOrganizationIdParamSchema.parse(req.params);\n      const query = InventoryKardexSearchQuerySchema.parse(req.query);\n\n      const result = await this.inventoryKardexRepository.findOutOfStock",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/inventory-kardex.controller.ts",
        "start": 207,
        "end": 212,
        "startLoc": {
          "line": 207,
          "column": 23,
          "position": 2105
        },
        "endLoc": {
          "line": 212,
          "column": 15,
          "position": 2200
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/inventory-kardex.controller.ts",
        "start": 110,
        "end": 115,
        "startLoc": {
          "line": 110,
          "column": 33,
          "position": 986
        },
        "endLoc": {
          "line": 115,
          "column": 21,
          "position": 1081
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "(organizationId, query);\n      \n      const response: InventoryKardexListResponse = {\n        data: result.data.map(inventoryKardex => this.transformInventoryKardexToResponse(inventoryKardex)),\n        pagination: result.pagination\n      };\n\n      this.sendSuccessResponse(res, response);\n    }, res, next);\n  }\n\n  async getNeedsReorderInventory",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/inventory-kardex.controller.ts",
        "start": 212,
        "end": 223,
        "startLoc": {
          "line": 212,
          "column": 15,
          "position": 2201
        },
        "endLoc": {
          "line": 223,
          "column": 25,
          "position": 2289
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/inventory-kardex.controller.ts",
        "start": 115,
        "end": 126,
        "startLoc": {
          "line": 115,
          "column": 21,
          "position": 1082
        },
        "endLoc": {
          "line": 126,
          "column": 22,
          "position": 1170
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "(req: Request, res: Response, next: NextFunction): Promise<void> {\n    await this.handleAsync(async () => {\n      const { organizationId } = InventoryKardexOrganizationIdParamSchema.parse(req.params);\n      const query = InventoryKardexSearchQuerySchema.parse(req.query);\n\n      const result = await this.inventoryKardexRepository.findNeedsReorder",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/inventory-kardex.controller.ts",
        "start": 223,
        "end": 228,
        "startLoc": {
          "line": 223,
          "column": 25,
          "position": 2290
        },
        "endLoc": {
          "line": 228,
          "column": 17,
          "position": 2385
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/inventory-kardex.controller.ts",
        "start": 110,
        "end": 115,
        "startLoc": {
          "line": 110,
          "column": 33,
          "position": 986
        },
        "endLoc": {
          "line": 115,
          "column": 21,
          "position": 1081
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "(organizationId, query);\n      \n      const response: InventoryKardexListResponse = {\n        data: result.data.map(inventoryKardex => this.transformInventoryKardexToResponse(inventoryKardex)),\n        pagination: result.pagination\n      };\n\n      this.sendSuccessResponse(res, response);\n    }, res, next);\n  }\n\n  // ========================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/inventory-kardex.controller.ts",
        "start": 228,
        "end": 239,
        "startLoc": {
          "line": 228,
          "column": 17,
          "position": 2386
        },
        "endLoc": {
          "line": 239,
          "column": 76,
          "position": 2472
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/inventory-kardex.controller.ts",
        "start": 115,
        "end": 126,
        "startLoc": {
          "line": 115,
          "column": 21,
          "position": 1082
        },
        "endLoc": {
          "line": 126,
          "column": 6,
          "position": 1168
        }
      }
    },
    {
      "format": "typescript",
      "lines": 28,
      "fragment": "{\n        id: movement.id,\n        productId: movement.productId,\n        warehouseId: movement.warehouseId,\n        locationId: movement.locationId,\n        movementType: movement.movementType.value,\n        movementReason: movement.movementReason.value,\n        quantity: movement.quantity,\n        unitCost: {\n          amount: movement.unitCost.amount,\n          currency: movement.unitCost.currency\n        },\n        totalCost: {\n          amount: movement.totalCost.amount,\n          currency: movement.totalCost.currency\n        },\n        reference: movement.reference,\n        referenceId: movement.referenceId,\n        notes: movement.notes,\n        batchNumber: movement.batchNumber,\n        expirationDate: movement.expirationDate,\n        serialNumber: movement.serialNumber,\n        supplierId: movement.supplierId,\n        customerId: movement.customerId,\n        userId: movement.userId,\n        movementDate: movement.movementDate,\n        status: movement.status.value\n      })",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/inventory-kardex.controller.ts",
        "start": 381,
        "end": 408,
        "startLoc": {
          "line": 381,
          "column": 2,
          "position": 3784
        },
        "endLoc": {
          "line": 408,
          "column": 2,
          "position": 4017
        }
      },
      "secondFile": {
        "name": "apps/api/src/application/use-cases/inventory-kardex/record-movement.use-case.ts",
        "start": 177,
        "end": 205,
        "startLoc": {
          "line": 177,
          "column": 2,
          "position": 1253
        },
        "endLoc": {
          "line": 205,
          "column": 2,
          "position": 1488
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "(req: Request, res: Response): Promise<void> {\n    try {\n      const organizationId = req.user?.organizationId;\n      const userId = req.user?.id;\n\n      if (!organizationId || !userId) {\n        res.status(401).json(createErrorResponse(new Error('Unauthorized')));\n        return;\n      }\n\n      const result",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/interaction.controller.ts",
        "start": 90,
        "end": 100,
        "startLoc": {
          "line": 90,
          "column": 27,
          "position": 724
        },
        "endLoc": {
          "line": 100,
          "column": 7,
          "position": 829
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/interaction.controller.ts",
        "start": 35,
        "end": 45,
        "startLoc": {
          "line": 35,
          "column": 18,
          "position": 196
        },
        "endLoc": {
          "line": 45,
          "column": 8,
          "position": 301
        }
      }
    },
    {
      "format": "typescript",
      "lines": 37,
      "fragment": ");\n\n      const response: InteractionResponse = {\n        id: result.data.interaction.id,\n        organizationId: result.data.interaction.organizationId,\n        contactId: result.data.interaction.contactId,\n        companyId: result.data.interaction.companyId,\n        userId: result.data.interaction.userId,\n        type: result.data.interaction.type,\n        status: result.data.interaction.status,\n        priority: result.data.interaction.priority,\n        subject: result.data.interaction.subject,\n        description: result.data.interaction.description,\n        scheduledAt: result.data.interaction.scheduledAt,\n        completedAt: result.data.interaction.completedAt,\n        duration: result.data.interaction.duration,\n        outcome: result.data.interaction.outcome,\n        nextAction: result.data.interaction.nextAction,\n        nextActionDate: result.data.interaction.nextActionDate,\n        tags: result.data.interaction.tags,\n        customFields: result.data.interaction.customFields,\n        attachments: result.data.interaction.attachments,\n        createdAt: result.data.interaction.createdAt,\n        updatedAt: result.data.interaction.updatedAt\n      };\n\n      res.status(201).json({\n        success: true,\n        data: { interaction: response }\n      });\n    } catch (error) {\n      res.status(400).json(createErrorResponse(error));\n    }\n  }\n\n  // ========================================================================\n  // CREATE TASK",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/interaction.controller.ts",
        "start": 108,
        "end": 144,
        "startLoc": {
          "line": 108,
          "column": 7,
          "position": 890
        },
        "endLoc": {
          "line": 144,
          "column": 15,
          "position": 1259
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/interaction.controller.ts",
        "start": 51,
        "end": 87,
        "startLoc": {
          "line": 51,
          "column": 8,
          "position": 345
        },
        "endLoc": {
          "line": 87,
          "column": 32,
          "position": 714
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "(req: Request, res: Response): Promise<void> {\n    try {\n      const organizationId = req.user?.organizationId;\n      const userId = req.user?.id;\n\n      if (!organizationId || !userId) {\n        res.status(401).json(createErrorResponse(new Error('Unauthorized')));\n        return;\n      }\n\n      const result = await this.createInteractionUseCase.createTask",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/interaction.controller.ts",
        "start": 147,
        "end": 157,
        "startLoc": {
          "line": 147,
          "column": 11,
          "position": 1269
        },
        "endLoc": {
          "line": 157,
          "column": 11,
          "position": 1384
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/interaction.controller.ts",
        "start": 35,
        "end": 100,
        "startLoc": {
          "line": 35,
          "column": 18,
          "position": 196
        },
        "endLoc": {
          "line": 100,
          "column": 27,
          "position": 839
        }
      }
    },
    {
      "format": "typescript",
      "lines": 39,
      "fragment": ",\n        req.body.companyId\n      );\n\n      const response: InteractionResponse = {\n        id: result.data.interaction.id,\n        organizationId: result.data.interaction.organizationId,\n        contactId: result.data.interaction.contactId,\n        companyId: result.data.interaction.companyId,\n        userId: result.data.interaction.userId,\n        type: result.data.interaction.type,\n        status: result.data.interaction.status,\n        priority: result.data.interaction.priority,\n        subject: result.data.interaction.subject,\n        description: result.data.interaction.description,\n        scheduledAt: result.data.interaction.scheduledAt,\n        completedAt: result.data.interaction.completedAt,\n        duration: result.data.interaction.duration,\n        outcome: result.data.interaction.outcome,\n        nextAction: result.data.interaction.nextAction,\n        nextActionDate: result.data.interaction.nextActionDate,\n        tags: result.data.interaction.tags,\n        customFields: result.data.interaction.customFields,\n        attachments: result.data.interaction.attachments,\n        createdAt: result.data.interaction.createdAt,\n        updatedAt: result.data.interaction.updatedAt\n      };\n\n      res.status(201).json({\n        success: true,\n        data: { interaction: response }\n      });\n    } catch (error) {\n      res.status(400).json(createErrorResponse(error));\n    }\n  }\n\n  // ========================================================================\n  // CREATE NOTE",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/interaction.controller.ts",
        "start": 163,
        "end": 201,
        "startLoc": {
          "line": 163,
          "column": 9,
          "position": 1425
        },
        "endLoc": {
          "line": 201,
          "column": 15,
          "position": 1804
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/interaction.controller.ts",
        "start": 106,
        "end": 87,
        "startLoc": {
          "line": 106,
          "column": 12,
          "position": 880
        },
        "endLoc": {
          "line": 87,
          "column": 32,
          "position": 714
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "(req: Request, res: Response): Promise<void> {\n    try {\n      const organizationId = req.user?.organizationId;\n      const userId = req.user?.id;\n\n      if (!organizationId || !userId) {\n        res.status(401).json(createErrorResponse(new Error('Unauthorized')));\n        return;\n      }\n\n      const result = await this.createInteractionUseCase.createNote",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/interaction.controller.ts",
        "start": 204,
        "end": 214,
        "startLoc": {
          "line": 204,
          "column": 11,
          "position": 1814
        },
        "endLoc": {
          "line": 214,
          "column": 11,
          "position": 1929
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/interaction.controller.ts",
        "start": 35,
        "end": 100,
        "startLoc": {
          "line": 35,
          "column": 18,
          "position": 196
        },
        "endLoc": {
          "line": 100,
          "column": 27,
          "position": 839
        }
      }
    },
    {
      "format": "typescript",
      "lines": 39,
      "fragment": ",\n        req.body.companyId\n      );\n\n      const response: InteractionResponse = {\n        id: result.data.interaction.id,\n        organizationId: result.data.interaction.organizationId,\n        contactId: result.data.interaction.contactId,\n        companyId: result.data.interaction.companyId,\n        userId: result.data.interaction.userId,\n        type: result.data.interaction.type,\n        status: result.data.interaction.status,\n        priority: result.data.interaction.priority,\n        subject: result.data.interaction.subject,\n        description: result.data.interaction.description,\n        scheduledAt: result.data.interaction.scheduledAt,\n        completedAt: result.data.interaction.completedAt,\n        duration: result.data.interaction.duration,\n        outcome: result.data.interaction.outcome,\n        nextAction: result.data.interaction.nextAction,\n        nextActionDate: result.data.interaction.nextActionDate,\n        tags: result.data.interaction.tags,\n        customFields: result.data.interaction.customFields,\n        attachments: result.data.interaction.attachments,\n        createdAt: result.data.interaction.createdAt,\n        updatedAt: result.data.interaction.updatedAt\n      };\n\n      res.status(201).json({\n        success: true,\n        data: { interaction: response }\n      });\n    } catch (error) {\n      res.status(400).json(createErrorResponse(error));\n    }\n  }\n\n  // ========================================================================\n  // CREATE FOLLOW-UP",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/interaction.controller.ts",
        "start": 219,
        "end": 257,
        "startLoc": {
          "line": 219,
          "column": 12,
          "position": 1962
        },
        "endLoc": {
          "line": 257,
          "column": 20,
          "position": 2341
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/interaction.controller.ts",
        "start": 106,
        "end": 87,
        "startLoc": {
          "line": 106,
          "column": 12,
          "position": 880
        },
        "endLoc": {
          "line": 87,
          "column": 32,
          "position": 714
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "(req: Request, res: Response): Promise<void> {\n    try {\n      const organizationId = req.user?.organizationId;\n      const userId = req.user?.id;\n\n      if (!organizationId || !userId) {\n        res.status(401).json(createErrorResponse(new Error('Unauthorized')));\n        return;\n      }\n\n      const result = await this.createInteractionUseCase.createFollowUp",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/interaction.controller.ts",
        "start": 260,
        "end": 270,
        "startLoc": {
          "line": 260,
          "column": 15,
          "position": 2351
        },
        "endLoc": {
          "line": 270,
          "column": 15,
          "position": 2466
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/interaction.controller.ts",
        "start": 35,
        "end": 100,
        "startLoc": {
          "line": 35,
          "column": 18,
          "position": 196
        },
        "endLoc": {
          "line": 100,
          "column": 27,
          "position": 839
        }
      }
    },
    {
      "format": "typescript",
      "lines": 39,
      "fragment": ",\n        req.body.companyId\n      );\n\n      const response: InteractionResponse = {\n        id: result.data.interaction.id,\n        organizationId: result.data.interaction.organizationId,\n        contactId: result.data.interaction.contactId,\n        companyId: result.data.interaction.companyId,\n        userId: result.data.interaction.userId,\n        type: result.data.interaction.type,\n        status: result.data.interaction.status,\n        priority: result.data.interaction.priority,\n        subject: result.data.interaction.subject,\n        description: result.data.interaction.description,\n        scheduledAt: result.data.interaction.scheduledAt,\n        completedAt: result.data.interaction.completedAt,\n        duration: result.data.interaction.duration,\n        outcome: result.data.interaction.outcome,\n        nextAction: result.data.interaction.nextAction,\n        nextActionDate: result.data.interaction.nextActionDate,\n        tags: result.data.interaction.tags,\n        customFields: result.data.interaction.customFields,\n        attachments: result.data.interaction.attachments,\n        createdAt: result.data.interaction.createdAt,\n        updatedAt: result.data.interaction.updatedAt\n      };\n\n      res.status(201).json({\n        success: true,\n        data: { interaction: response }\n      });\n    } catch (error) {\n      res.status(400).json(createErrorResponse(error));\n    }\n  }\n\n  // ========================================================================\n  // UPDATE INTERACTION",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/interaction.controller.ts",
        "start": 275,
        "end": 313,
        "startLoc": {
          "line": 275,
          "column": 15,
          "position": 2499
        },
        "endLoc": {
          "line": 313,
          "column": 22,
          "position": 2878
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/interaction.controller.ts",
        "start": 106,
        "end": 87,
        "startLoc": {
          "line": 106,
          "column": 12,
          "position": 880
        },
        "endLoc": {
          "line": 87,
          "column": 32,
          "position": 714
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "(req: Request, res: Response): Promise<void> {\n    try {\n      const organizationId = req.user?.organizationId;\n      const userId = req.user?.id;\n\n      if (!organizationId || !userId) {\n        res.status(401).json(createErrorResponse(new Error('Unauthorized')));\n        return;\n      }\n\n      const request: UpdateInteractionRequest",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/interaction.controller.ts",
        "start": 316,
        "end": 326,
        "startLoc": {
          "line": 316,
          "column": 18,
          "position": 2888
        },
        "endLoc": {
          "line": 326,
          "column": 25,
          "position": 2996
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/interaction.controller.ts",
        "start": 35,
        "end": 45,
        "startLoc": {
          "line": 35,
          "column": 18,
          "position": 196
        },
        "endLoc": {
          "line": 45,
          "column": 25,
          "position": 304
        }
      }
    },
    {
      "format": "typescript",
      "lines": 27,
      "fragment": ".execute(request);\n\n      const response: InteractionResponse = {\n        id: result.data.interaction.id,\n        organizationId: result.data.interaction.organizationId,\n        contactId: result.data.interaction.contactId,\n        companyId: result.data.interaction.companyId,\n        userId: result.data.interaction.userId,\n        type: result.data.interaction.type,\n        status: result.data.interaction.status,\n        priority: result.data.interaction.priority,\n        subject: result.data.interaction.subject,\n        description: result.data.interaction.description,\n        scheduledAt: result.data.interaction.scheduledAt,\n        completedAt: result.data.interaction.completedAt,\n        duration: result.data.interaction.duration,\n        outcome: result.data.interaction.outcome,\n        nextAction: result.data.interaction.nextAction,\n        nextActionDate: result.data.interaction.nextActionDate,\n        tags: result.data.interaction.tags,\n        customFields: result.data.interaction.customFields,\n        attachments: result.data.interaction.attachments,\n        createdAt: result.data.interaction.createdAt,\n        updatedAt: result.data.interaction.updatedAt\n      };\n\n      res.status(200",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/interaction.controller.ts",
        "start": 333,
        "end": 359,
        "startLoc": {
          "line": 333,
          "column": 25,
          "position": 3046
        },
        "endLoc": {
          "line": 359,
          "column": 4,
          "position": 3348
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/interaction.controller.ts",
        "start": 51,
        "end": 77,
        "startLoc": {
          "line": 51,
          "column": 25,
          "position": 341
        },
        "endLoc": {
          "line": 77,
          "column": 4,
          "position": 643
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "interaction.updatedAt\n      };\n\n      res.status(200).json({\n        success: true,\n        data: { interaction: response }\n      });\n    } catch (error) {\n      res.status(400).json(createErrorResponse(error));\n    }\n  }\n\n  // ========================================================================\n  // GET INTERACTIONS BY ORGANIZATION",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/interaction.controller.ts",
        "start": 414,
        "end": 427,
        "startLoc": {
          "line": 414,
          "column": 2,
          "position": 3816
        },
        "endLoc": {
          "line": 427,
          "column": 36,
          "position": 3901
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/interaction.controller.ts",
        "start": 356,
        "end": 369,
        "startLoc": {
          "line": 356,
          "column": 2,
          "position": 3334
        },
        "endLoc": {
          "line": 369,
          "column": 25,
          "position": 3419
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "(req: Request, res: Response): Promise<void> {\n    try {\n      const organizationId = req.user?.organizationId;\n\n      if (!organizationId) {\n        res.status(401).json(createErrorResponse(new Error('Unauthorized')));\n        return;\n      }\n\n      const query",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/interaction.controller.ts",
        "start": 430,
        "end": 439,
        "startLoc": {
          "line": 430,
          "column": 30,
          "position": 3911
        },
        "endLoc": {
          "line": 439,
          "column": 6,
          "position": 3996
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/interaction.controller.ts",
        "start": 372,
        "end": 381,
        "startLoc": {
          "line": 372,
          "column": 19,
          "position": 3429
        },
        "endLoc": {
          "line": 381,
          "column": 12,
          "position": 3514
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": "{\n          id: interaction.id,\n          organizationId: interaction.organizationId,\n          contactId: interaction.contactId,\n          companyId: interaction.companyId,\n          userId: interaction.userId,\n          type: interaction.type,\n          status: interaction.status,\n          priority: interaction.priority,\n          subject: interaction.subject,\n          description: interaction.description,\n          scheduledAt: interaction.scheduledAt,\n          completedAt: interaction.completedAt,\n          duration: interaction.duration,\n          outcome: interaction.outcome,\n          nextAction: interaction.nextAction,\n          nextActionDate: interaction.nextActionDate,\n          tags: interaction.tags,\n          customFields: interaction.customFields,\n          attachments: interaction.attachments,\n          createdAt: interaction.createdAt,\n          updatedAt: interaction.updatedAt\n        })",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/interaction.controller.ts",
        "start": 465,
        "end": 487,
        "startLoc": {
          "line": 465,
          "column": 2,
          "position": 4501
        },
        "endLoc": {
          "line": 487,
          "column": 2,
          "position": 4693
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/interaction.controller.ts",
        "start": 393,
        "end": 415,
        "startLoc": {
          "line": 393,
          "column": 2,
          "position": 3630
        },
        "endLoc": {
          "line": 415,
          "column": 2,
          "position": 3822
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "(req: Request, res: Response): Promise<void> {\n    try {\n      const organizationId = req.user?.organizationId;\n\n      if (!organizationId) {\n        res.status(401).json(createErrorResponse(new Error('Unauthorized')));\n        return;\n      }\n\n      const query: InteractionSearchQuery = {\n        page: parseInt(req.query.page as string) || 1,\n        limit: parseInt(req.query.limit as string) || 20,\n        sortBy: (req.query.sortBy as any) || 'createdAt',\n        sortOrder: (req.query.sortOrder as any) || 'desc'\n      }",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/interaction.controller.ts",
        "start": 504,
        "end": 518,
        "startLoc": {
          "line": 504,
          "column": 25,
          "position": 4789
        },
        "endLoc": {
          "line": 518,
          "column": 2,
          "position": 4969
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/interaction.controller.ts",
        "start": 372,
        "end": 443,
        "startLoc": {
          "line": 372,
          "column": 19,
          "position": 3429
        },
        "endLoc": {
          "line": 443,
          "column": 2,
          "position": 4089
        }
      }
    },
    {
      "format": "typescript",
      "lines": 40,
      "fragment": ", query);\n\n      const response: InteractionListResponse = {\n        data: result.data.map(interaction => ({\n          id: interaction.id,\n          organizationId: interaction.organizationId,\n          contactId: interaction.contactId,\n          companyId: interaction.companyId,\n          userId: interaction.userId,\n          type: interaction.type,\n          status: interaction.status,\n          priority: interaction.priority,\n          subject: interaction.subject,\n          description: interaction.description,\n          scheduledAt: interaction.scheduledAt,\n          completedAt: interaction.completedAt,\n          duration: interaction.duration,\n          outcome: interaction.outcome,\n          nextAction: interaction.nextAction,\n          nextActionDate: interaction.nextActionDate,\n          tags: interaction.tags,\n          customFields: interaction.customFields,\n          attachments: interaction.attachments,\n          createdAt: interaction.createdAt,\n          updatedAt: interaction.updatedAt\n        })),\n        pagination: result.pagination\n      };\n\n      res.status(200).json({\n        success: true,\n        data: response\n      });\n    } catch (error) {\n      res.status(400).json(createErrorResponse(error));\n    }\n  }\n\n  // ========================================================================\n  // GET INTERACTIONS BY COMPANY",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/interaction.controller.ts",
        "start": 520,
        "end": 559,
        "startLoc": {
          "line": 520,
          "column": 10,
          "position": 4993
        },
        "endLoc": {
          "line": 559,
          "column": 31,
          "position": 5305
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/interaction.controller.ts",
        "start": 462,
        "end": 501,
        "startLoc": {
          "line": 462,
          "column": 15,
          "position": 4467
        },
        "endLoc": {
          "line": 501,
          "column": 31,
          "position": 4779
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "(req: Request, res: Response): Promise<void> {\n    try {\n      const organizationId = req.user?.organizationId;\n\n      if (!organizationId) {\n        res.status(401).json(createErrorResponse(new Error('Unauthorized')));\n        return;\n      }\n\n      const query: InteractionSearchQuery = {\n        page: parseInt(req.query.page as string) || 1,\n        limit: parseInt(req.query.limit as string) || 20,\n        sortBy: (req.query.sortBy as any) || 'createdAt',\n        sortOrder: (req.query.sortOrder as any) || 'desc'\n      };\n\n      const result = await this.interactionRepository.findByCompanyId",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/interaction.controller.ts",
        "start": 562,
        "end": 578,
        "startLoc": {
          "line": 562,
          "column": 25,
          "position": 5315
        },
        "endLoc": {
          "line": 578,
          "column": 16,
          "position": 5512
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/interaction.controller.ts",
        "start": 372,
        "end": 520,
        "startLoc": {
          "line": 372,
          "column": 19,
          "position": 3429
        },
        "endLoc": {
          "line": 520,
          "column": 16,
          "position": 4986
        }
      }
    },
    {
      "format": "typescript",
      "lines": 40,
      "fragment": ", query);\n\n      const response: InteractionListResponse = {\n        data: result.data.map(interaction => ({\n          id: interaction.id,\n          organizationId: interaction.organizationId,\n          contactId: interaction.contactId,\n          companyId: interaction.companyId,\n          userId: interaction.userId,\n          type: interaction.type,\n          status: interaction.status,\n          priority: interaction.priority,\n          subject: interaction.subject,\n          description: interaction.description,\n          scheduledAt: interaction.scheduledAt,\n          completedAt: interaction.completedAt,\n          duration: interaction.duration,\n          outcome: interaction.outcome,\n          nextAction: interaction.nextAction,\n          nextActionDate: interaction.nextActionDate,\n          tags: interaction.tags,\n          customFields: interaction.customFields,\n          attachments: interaction.attachments,\n          createdAt: interaction.createdAt,\n          updatedAt: interaction.updatedAt\n        })),\n        pagination: result.pagination\n      };\n\n      res.status(200).json({\n        success: true,\n        data: response\n      });\n    } catch (error) {\n      res.status(400).json(createErrorResponse(error));\n    }\n  }\n\n  // ========================================================================\n  // GET INTERACTION STATS",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/interaction.controller.ts",
        "start": 578,
        "end": 617,
        "startLoc": {
          "line": 578,
          "column": 10,
          "position": 5519
        },
        "endLoc": {
          "line": 617,
          "column": 25,
          "position": 5831
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/interaction.controller.ts",
        "start": 462,
        "end": 501,
        "startLoc": {
          "line": 462,
          "column": 15,
          "position": 4467
        },
        "endLoc": {
          "line": 501,
          "column": 31,
          "position": 4779
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "(req: Request, res: Response): Promise<void> {\n    try {\n      const organizationId = req.user?.organizationId;\n\n      if (!organizationId) {\n        res.status(401).json(createErrorResponse(new Error('Unauthorized')));\n        return;\n      }\n\n      const filters",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/interaction.controller.ts",
        "start": 620,
        "end": 629,
        "startLoc": {
          "line": 620,
          "column": 20,
          "position": 5841
        },
        "endLoc": {
          "line": 629,
          "column": 8,
          "position": 5926
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/interaction.controller.ts",
        "start": 372,
        "end": 381,
        "startLoc": {
          "line": 372,
          "column": 19,
          "position": 3429
        },
        "endLoc": {
          "line": 381,
          "column": 12,
          "position": 3514
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "type: req.query.type as any,\n        status: req.query.status as any,\n        priority: req.query.priority as any,\n        contactId: req.query.contactId as string,\n        companyId: req.query.companyId as string,\n        userId: req.query.userId as string,\n        scheduledFrom: req.query.scheduledFrom ? new Date(req.query.scheduledFrom as string) : undefined,\n        scheduledTo: req.query.scheduledTo ? new Date(req.query.scheduledTo as string) : undefined,\n        completedFrom: req.query.completedFrom ? new Date(req.query.completedFrom as string) : undefined,\n        completedTo: req.query.completedTo ? new Date(req.query.completedTo as string) : undefined,\n        tags: req.query.tags as string,\n        hasOutcome: req.query.hasOutcome ? req.query.hasOutcome === 'true' : undefined,\n        hasNextAction: req.query.hasNextAction ? req.query.hasNextAction === 'true' : undefined,\n        overdue: req.query.overdue ? req.query.overdue === 'true' : undefined,\n        upcoming: req.query.upcoming ? req.query.upcoming === 'true' : undefined\n      };\n\n      const stats",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/interaction.controller.ts",
        "start": 630,
        "end": 647,
        "startLoc": {
          "line": 630,
          "column": 9,
          "position": 5936
        },
        "endLoc": {
          "line": 647,
          "column": 6,
          "position": 6283
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/interaction.controller.ts",
        "start": 445,
        "end": 462,
        "startLoc": {
          "line": 445,
          "column": 9,
          "position": 4107
        },
        "endLoc": {
          "line": 462,
          "column": 7,
          "position": 4454
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": ".map(interaction => ({\n          id: interaction.id,\n          organizationId: interaction.organizationId,\n          contactId: interaction.contactId,\n          companyId: interaction.companyId,\n          userId: interaction.userId,\n          type: interaction.type,\n          status: interaction.status,\n          priority: interaction.priority,\n          subject: interaction.subject,\n          description: interaction.description,\n          scheduledAt: interaction.scheduledAt,\n          completedAt: interaction.completedAt,\n          duration: interaction.duration,\n          outcome: interaction.outcome,\n          nextAction: interaction.nextAction,\n          nextActionDate: interaction.nextActionDate,\n          tags: interaction.tags,\n          customFields: interaction.customFields,\n          attachments: interaction.attachments,\n          createdAt: interaction.createdAt,\n          updatedAt: interaction.updatedAt\n        })),\n        upcomingInteractions",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/interaction.controller.ts",
        "start": 692,
        "end": 715,
        "startLoc": {
          "line": 692,
          "column": 19,
          "position": 6670
        },
        "endLoc": {
          "line": 715,
          "column": 21,
          "position": 6875
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/interaction.controller.ts",
        "start": 465,
        "end": 488,
        "startLoc": {
          "line": 465,
          "column": 5,
          "position": 4493
        },
        "endLoc": {
          "line": 488,
          "column": 11,
          "position": 4698
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": ".map(interaction => ({\n          id: interaction.id,\n          organizationId: interaction.organizationId,\n          contactId: interaction.contactId,\n          companyId: interaction.companyId,\n          userId: interaction.userId,\n          type: interaction.type,\n          status: interaction.status,\n          priority: interaction.priority,\n          subject: interaction.subject,\n          description: interaction.description,\n          scheduledAt: interaction.scheduledAt,\n          completedAt: interaction.completedAt,\n          duration: interaction.duration,\n          outcome: interaction.outcome,\n          nextAction: interaction.nextAction,\n          nextActionDate: interaction.nextActionDate,\n          tags: interaction.tags,\n          customFields: interaction.customFields,\n          attachments: interaction.attachments,\n          createdAt: interaction.createdAt,\n          updatedAt: interaction.updatedAt\n        })),\n        overdueInteractions",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/interaction.controller.ts",
        "start": 715,
        "end": 738,
        "startLoc": {
          "line": 715,
          "column": 21,
          "position": 6881
        },
        "endLoc": {
          "line": 738,
          "column": 20,
          "position": 7086
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/interaction.controller.ts",
        "start": 465,
        "end": 488,
        "startLoc": {
          "line": 465,
          "column": 5,
          "position": 4493
        },
        "endLoc": {
          "line": 488,
          "column": 11,
          "position": 4698
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": ".map(interaction => ({\n          id: interaction.id,\n          organizationId: interaction.organizationId,\n          contactId: interaction.contactId,\n          companyId: interaction.companyId,\n          userId: interaction.userId,\n          type: interaction.type,\n          status: interaction.status,\n          priority: interaction.priority,\n          subject: interaction.subject,\n          description: interaction.description,\n          scheduledAt: interaction.scheduledAt,\n          completedAt: interaction.completedAt,\n          duration: interaction.duration,\n          outcome: interaction.outcome,\n          nextAction: interaction.nextAction,\n          nextActionDate: interaction.nextActionDate,\n          tags: interaction.tags,\n          customFields: interaction.customFields,\n          attachments: interaction.attachments,\n          createdAt: interaction.createdAt,\n          updatedAt: interaction.updatedAt\n        }))\n      }",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/interaction.controller.ts",
        "start": 738,
        "end": 761,
        "startLoc": {
          "line": 738,
          "column": 20,
          "position": 7092
        },
        "endLoc": {
          "line": 761,
          "column": 2,
          "position": 7296
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/interaction.controller.ts",
        "start": 465,
        "end": 487,
        "startLoc": {
          "line": 465,
          "column": 5,
          "position": 4493
        },
        "endLoc": {
          "line": 487,
          "column": 2,
          "position": 4695
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "(req: Request, res: Response): Promise<void> {\n    try {\n      const organizationId = req.user?.organizationId;\n\n      if (!organizationId) {\n        res.status(401).json(createErrorResponse(new Error('Unauthorized')));\n        return;\n      }\n\n      const interaction = await this.interactionRepository.findById(req.params.id);\n\n      if (!interaction) {\n        res.status(404).json(createErrorResponse(new Error('Interaction not found')));\n        return;\n      }\n\n      if (interaction.organizationId !== organizationId) {\n        res.status(403).json(createErrorResponse(new Error('Forbidden')));\n        return;\n      }\n\n      await",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/interaction.controller.ts",
        "start": 776,
        "end": 797,
        "startLoc": {
          "line": 776,
          "column": 18,
          "position": 7386
        },
        "endLoc": {
          "line": 797,
          "column": 6,
          "position": 7578
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/interaction.controller.ts",
        "start": 372,
        "end": 393,
        "startLoc": {
          "line": 372,
          "column": 19,
          "position": 3429
        },
        "endLoc": {
          "line": 393,
          "column": 6,
          "position": 3621
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "(req.body);\n      const createdBy = req.user?.id || req.headers['x-user-id'] as string;\n\n      if (!createdBy) {\n        res.status(401).json({\n          success: false,\n          error: 'User ID is required',\n          timestamp: new Date()\n        } as ApiResponse);\n        return;\n      }\n\n      const result = await this.createCompanyUseCase",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/company.controller.ts",
        "start": 48,
        "end": 60,
        "startLoc": {
          "line": 48,
          "column": 29,
          "position": 288
        },
        "endLoc": {
          "line": 60,
          "column": 21,
          "position": 398
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/user.controller.ts",
        "start": 40,
        "end": 52,
        "startLoc": {
          "line": 40,
          "column": 26,
          "position": 211
        },
        "endLoc": {
          "line": 52,
          "column": 23,
          "position": 321
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "({\n        ...requestData,\n        createdBy\n      });\n\n      if (!result.success) {\n        res.status(400).json({\n          success: false,\n          error: result.error,\n          timestamp: new Date()\n        } as ApiResponse);\n        return;\n      }\n\n      const response: ApiResponse<CompanyResponse",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/company.controller.ts",
        "start": 60,
        "end": 74,
        "startLoc": {
          "line": 60,
          "column": 8,
          "position": 401
        },
        "endLoc": {
          "line": 74,
          "column": 16,
          "position": 493
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/user.controller.ts",
        "start": 52,
        "end": 66,
        "startLoc": {
          "line": 52,
          "column": 11,
          "position": 324
        },
        "endLoc": {
          "line": 66,
          "column": 13,
          "position": 416
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "(req.body);\n      const updatedBy = req.user?.id || req.headers['x-user-id'] as string;\n\n      if (!updatedBy) {\n        res.status(401).json({\n          success: false,\n          error: 'User ID is required',\n          timestamp: new Date()\n        } as ApiResponse);\n        return;\n      }\n\n      const result = await this.updateCompanyUseCase",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/company.controller.ts",
        "start": 91,
        "end": 103,
        "startLoc": {
          "line": 91,
          "column": 29,
          "position": 655
        },
        "endLoc": {
          "line": 103,
          "column": 21,
          "position": 765
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/user.controller.ts",
        "start": 83,
        "end": 95,
        "startLoc": {
          "line": 83,
          "column": 26,
          "position": 578
        },
        "endLoc": {
          "line": 95,
          "column": 23,
          "position": 688
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ",\n        ...requestData,\n        updatedBy\n      });\n\n      if (!result.success) {\n        res.status(400).json({\n          success: false,\n          error: result.error,\n          timestamp: new Date()\n        } as ApiResponse);\n        return;\n      }\n\n      const response: ApiResponse<CompanyResponse> = {\n        success: true,\n        data: transformCompanyToResponse(result.company!),\n        message: 'Company updated successfully'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/company.controller.ts",
        "start": 104,
        "end": 121,
        "startLoc": {
          "line": 104,
          "column": 10,
          "position": 773
        },
        "endLoc": {
          "line": 121,
          "column": 31,
          "position": 895
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/user.controller.ts",
        "start": 96,
        "end": 77,
        "startLoc": {
          "line": 96,
          "column": 7,
          "position": 696
        },
        "endLoc": {
          "line": 77,
          "column": 31,
          "position": 524
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "const company = await this.companyRepository.findById(requestData.companyId);\n\n      if (!company) {\n        res.status(404).json({\n          success: false,\n          error: 'Company not found',\n          timestamp: new Date()\n        } as ApiResponse);\n        return;\n      }\n\n      const",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/company.controller.ts",
        "start": 169,
        "end": 180,
        "startLoc": {
          "line": 169,
          "column": 7,
          "position": 1299
        },
        "endLoc": {
          "line": 180,
          "column": 6,
          "position": 1384
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/company.controller.ts",
        "start": 137,
        "end": 147,
        "startLoc": {
          "line": 137,
          "column": 7,
          "position": 1033
        },
        "endLoc": {
          "line": 147,
          "column": 6,
          "position": 1117
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ");\n\n      const response: ApiResponse<CompanyResponse[]> = {\n        success: true,\n        data: companies.map(transformCompanyToResponse),\n        timestamp: new Date(),\n        requestId: req.headers['x-request-id'] as string\n      };\n\n      res.status(200).json(response);\n    } catch (error) {\n      next(error);\n    }\n  }\n\n  async getCompaniesByStatus",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/company.controller.ts",
        "start": 299,
        "end": 314,
        "startLoc": {
          "line": 299,
          "column": 5,
          "position": 2420
        },
        "endLoc": {
          "line": 314,
          "column": 21,
          "position": 2533
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/company.controller.ts",
        "start": 196,
        "end": 211,
        "startLoc": {
          "line": 196,
          "column": 15,
          "position": 1551
        },
        "endLoc": {
          "line": 211,
          "column": 16,
          "position": 1664
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ");\n\n      const response: ApiResponse<CompanyResponse[]> = {\n        success: true,\n        data: companies.map(transformCompanyToResponse),\n        timestamp: new Date(),\n        requestId: req.headers['x-request-id'] as string\n      };\n\n      res.status(200).json(response);\n    } catch (error) {\n      next(error);\n    }\n  }\n\n  async getCompaniesByIndustry",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/company.controller.ts",
        "start": 318,
        "end": 333,
        "startLoc": {
          "line": 318,
          "column": 7,
          "position": 2613
        },
        "endLoc": {
          "line": 333,
          "column": 23,
          "position": 2726
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/company.controller.ts",
        "start": 196,
        "end": 211,
        "startLoc": {
          "line": 196,
          "column": 15,
          "position": 1551
        },
        "endLoc": {
          "line": 211,
          "column": 16,
          "position": 1664
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ");\n\n      const response: ApiResponse<CompanyResponse[]> = {\n        success: true,\n        data: companies.map(transformCompanyToResponse),\n        timestamp: new Date(),\n        requestId: req.headers['x-request-id'] as string\n      };\n\n      res.status(200).json(response);\n    } catch (error) {\n      next(error);\n    }\n  }\n\n  async getCompaniesByAssignedUser",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/company.controller.ts",
        "start": 337,
        "end": 352,
        "startLoc": {
          "line": 337,
          "column": 9,
          "position": 2806
        },
        "endLoc": {
          "line": 352,
          "column": 27,
          "position": 2919
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/company.controller.ts",
        "start": 196,
        "end": 211,
        "startLoc": {
          "line": 196,
          "column": 15,
          "position": 1551
        },
        "endLoc": {
          "line": 211,
          "column": 16,
          "position": 1664
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ");\n\n      const response: ApiResponse<CompanyResponse[]> = {\n        success: true,\n        data: companies.map(transformCompanyToResponse),\n        timestamp: new Date(),\n        requestId: req.headers['x-request-id'] as string\n      };\n\n      res.status(200).json(response);\n    } catch (error) {\n      next(error);\n    }\n  }\n\n  // ========================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/company.controller.ts",
        "start": 356,
        "end": 371,
        "startLoc": {
          "line": 356,
          "column": 7,
          "position": 2999
        },
        "endLoc": {
          "line": 371,
          "column": 76,
          "position": 3110
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/company.controller.ts",
        "start": 196,
        "end": 211,
        "startLoc": {
          "line": 196,
          "column": 15,
          "position": 1551
        },
        "endLoc": {
          "line": 211,
          "column": 6,
          "position": 1662
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "(organizationId);\n\n      const response: ApiResponse<CompanyResponse[]> = {\n        success: true,\n        data: companies.map(transformCompanyToResponse),\n        timestamp: new Date(),\n        requestId: req.headers['x-request-id'] as string\n      };\n\n      res.status(200).json(response);\n    } catch (error) {\n      next(error);\n    }\n  }\n\n  async getScheduledForFollowUp",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/company.controller.ts",
        "start": 378,
        "end": 393,
        "startLoc": {
          "line": 378,
          "column": 23,
          "position": 3183
        },
        "endLoc": {
          "line": 393,
          "column": 24,
          "position": 3298
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/company.controller.ts",
        "start": 196,
        "end": 211,
        "startLoc": {
          "line": 196,
          "column": 21,
          "position": 1549
        },
        "endLoc": {
          "line": 211,
          "column": 16,
          "position": 1664
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ");\n\n      const response: ApiResponse<CompanyResponse[]> = {\n        success: true,\n        data: companies.map(transformCompanyToResponse),\n        timestamp: new Date(),\n        requestId: req.headers['x-request-id'] as string\n      };\n\n      res.status(200).json(response);\n    } catch (error) {\n      next(error);\n    }\n  }\n\n  // ========================================================================\n  // LEAD SCORING QUERIES",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/company.controller.ts",
        "start": 397,
        "end": 413,
        "startLoc": {
          "line": 397,
          "column": 5,
          "position": 3383
        },
        "endLoc": {
          "line": 413,
          "column": 24,
          "position": 3497
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/company.controller.ts",
        "start": 196,
        "end": 372,
        "startLoc": {
          "line": 196,
          "column": 15,
          "position": 1551
        },
        "endLoc": {
          "line": 372,
          "column": 21,
          "position": 3113
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ");\n\n      const response: ApiResponse<CompanyResponse[]> = {\n        success: true,\n        data: companies.map(transformCompanyToResponse),\n        timestamp: new Date(),\n        requestId: req.headers['x-request-id'] as string\n      };\n\n      res.status(200).json(response);\n    } catch (error) {\n      next(error);\n    }\n  }\n\n  async getMediumScoreLeads",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/company.controller.ts",
        "start": 420,
        "end": 435,
        "startLoc": {
          "line": 420,
          "column": 9,
          "position": 3597
        },
        "endLoc": {
          "line": 435,
          "column": 20,
          "position": 3710
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/company.controller.ts",
        "start": 196,
        "end": 211,
        "startLoc": {
          "line": 196,
          "column": 15,
          "position": 1551
        },
        "endLoc": {
          "line": 211,
          "column": 16,
          "position": 1664
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "(organizationId);\n\n      const response: ApiResponse<CompanyResponse[]> = {\n        success: true,\n        data: companies.map(transformCompanyToResponse),\n        timestamp: new Date(),\n        requestId: req.headers['x-request-id'] as string\n      };\n\n      res.status(200).json(response);\n    } catch (error) {\n      next(error);\n    }\n  }\n\n  async getLowScoreLeads",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/company.controller.ts",
        "start": 438,
        "end": 453,
        "startLoc": {
          "line": 438,
          "column": 21,
          "position": 3771
        },
        "endLoc": {
          "line": 453,
          "column": 17,
          "position": 3886
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/company.controller.ts",
        "start": 196,
        "end": 211,
        "startLoc": {
          "line": 196,
          "column": 21,
          "position": 1549
        },
        "endLoc": {
          "line": 211,
          "column": 16,
          "position": 1664
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "(organizationId);\n\n      const response: ApiResponse<CompanyResponse[]> = {\n        success: true,\n        data: companies.map(transformCompanyToResponse),\n        timestamp: new Date(),\n        requestId: req.headers['x-request-id'] as string\n      };\n\n      res.status(200).json(response);\n    } catch (error) {\n      next(error);\n    }\n  }\n\n  // ========================================================================\n  // BULK OPERATIONS",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/company.controller.ts",
        "start": 456,
        "end": 472,
        "startLoc": {
          "line": 456,
          "column": 18,
          "position": 3947
        },
        "endLoc": {
          "line": 472,
          "column": 19,
          "position": 4063
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/company.controller.ts",
        "start": 196,
        "end": 372,
        "startLoc": {
          "line": 196,
          "column": 21,
          "position": 1549
        },
        "endLoc": {
          "line": 372,
          "column": 21,
          "position": 3113
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "),\n        timestamp: new Date(),\n        requestId: req.headers['x-request-id'] as string\n      };\n\n      res.status(200).json(response);\n    } catch (error) {\n      next(error);\n    }\n  }\n\n  // ========================================================================\n  // BULK OPERATIONS\n  // ========================================================================\n\n  async bulkUpdateCompanies",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/company.controller.ts",
        "start": 460,
        "end": 475,
        "startLoc": {
          "line": 460,
          "column": 27,
          "position": 3986
        },
        "endLoc": {
          "line": 475,
          "column": 20,
          "position": 4072
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/user.controller.ts",
        "start": 284,
        "end": 299,
        "startLoc": {
          "line": 284,
          "column": 6,
          "position": 2274
        },
        "endLoc": {
          "line": 299,
          "column": 16,
          "position": 2360
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "(req.body);\n      const updatedBy = req.user?.id || req.headers['x-user-id'] as string;\n\n      if (!updatedBy) {\n        res.status(401).json({\n          success: false,\n          error: 'User ID is required',\n          timestamp: new Date()\n        } as ApiResponse);\n        return;\n      }\n\n      const results",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/company.controller.ts",
        "start": 477,
        "end": 489,
        "startLoc": {
          "line": 477,
          "column": 35,
          "position": 4113
        },
        "endLoc": {
          "line": 489,
          "column": 8,
          "position": 4215
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/user.controller.ts",
        "start": 83,
        "end": 95,
        "startLoc": {
          "line": 83,
          "column": 26,
          "position": 578
        },
        "endLoc": {
          "line": 95,
          "column": 7,
          "position": 680
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "} catch (error) {\n          errorCount++;\n          results.push({ \n            companyId, \n            success: false, \n            error: error instanceof Error ? error.message : 'Unknown error' \n          });\n        }\n      }\n\n      const response: ApiResponse = {\n        success: errorCount === 0,\n        data: {\n          total: requestData.companyIds.length,\n          successful: successCount,\n          failed: errorCount,\n          results\n        },\n        message: `Bulk delete completed: ",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/company.controller.ts",
        "start": 557,
        "end": 575,
        "startLoc": {
          "line": 557,
          "column": 9,
          "position": 4815
        },
        "endLoc": {
          "line": 575,
          "column": 25,
          "position": 4949
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/company.controller.ts",
        "start": 508,
        "end": 526,
        "startLoc": {
          "line": 508,
          "column": 9,
          "position": 4389
        },
        "endLoc": {
          "line": 526,
          "column": 25,
          "position": 4523
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "${successCount} successful, ${errorCount} failed`,\n        timestamp: new Date(),\n        requestId: req.headers['x-request-id'] as string\n      };\n\n      res.status(200).json(response);\n    } catch (error) {\n      next(error);\n    }\n  }\n\n  // ========================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/company.controller.ts",
        "start": 575,
        "end": 586,
        "startLoc": {
          "line": 575,
          "column": 25,
          "position": 4950
        },
        "endLoc": {
          "line": 586,
          "column": 76,
          "position": 5031
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/company.controller.ts",
        "start": 526,
        "end": 537,
        "startLoc": {
          "line": 526,
          "column": 25,
          "position": 4524
        },
        "endLoc": {
          "line": 537,
          "column": 6,
          "position": 4605
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", error as Error, {\n        userId: req.user?.id,\n        organizationId: req.user?.organizationId\n      });\n\n      const errorResponse = ErrorHandler.handle(error as Error);\n      res.status(errorResponse.statusCode).json({\n        success: false,\n        error: errorResponse.message,\n        code: errorResponse.code\n      });\n    }\n  }\n\n  // ============================================================================\n  // GET /api/ai/sessions/:sessionId/history - Get Session History",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/basic-ai.controller.ts",
        "start": 193,
        "end": 208,
        "startLoc": {
          "line": 193,
          "column": 30,
          "position": 1409
        },
        "endLoc": {
          "line": 208,
          "column": 65,
          "position": 1522
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/basic-ai.controller.ts",
        "start": 125,
        "end": 140,
        "startLoc": {
          "line": 125,
          "column": 33,
          "position": 934
        },
        "endLoc": {
          "line": 140,
          "column": 46,
          "position": 1047
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "(req: AuthenticatedRequest, res: Response): Promise<void> {\n    try {\n      const { sessionId } = req.params;\n      const user = req.user;\n\n      if (!user) {\n        res.status(401).json({\n          success: false,\n          error: 'Authentication required'\n        });\n        return;\n      }\n\n      if (!sessionId) {\n        res.status(400).json({\n          success: false,\n          error: 'Session ID is required'\n        });\n        return;\n      }\n\n      // Limpiar sesión",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/basic-ai.controller.ts",
        "start": 263,
        "end": 284,
        "startLoc": {
          "line": 263,
          "column": 13,
          "position": 1890
        },
        "endLoc": {
          "line": 284,
          "column": 18,
          "position": 2042
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/basic-ai.controller.ts",
        "start": 211,
        "end": 232,
        "startLoc": {
          "line": 211,
          "column": 18,
          "position": 1533
        },
        "endLoc": {
          "line": 232,
          "column": 34,
          "position": 1685
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", error as Error, {\n        userId: req.user?.id,\n        sessionId: req.params.sessionId\n      });\n\n      const errorResponse = ErrorHandler.handle(error as Error);\n      res.status(errorResponse.statusCode).json({\n        success: false,\n        error: errorResponse.message,\n        code: errorResponse.code\n      });\n    }\n  }\n\n  // ============================================================================\n  // GET /api/ai/health - Health Check",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/basic-ai.controller.ts",
        "start": 299,
        "end": 314,
        "startLoc": {
          "line": 299,
          "column": 29,
          "position": 2136
        },
        "endLoc": {
          "line": 314,
          "column": 37,
          "position": 2248
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/basic-ai.controller.ts",
        "start": 245,
        "end": 260,
        "startLoc": {
          "line": 245,
          "column": 32,
          "position": 1767
        },
        "endLoc": {
          "line": 260,
          "column": 54,
          "position": 1879
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "(req: Request, res: Response, next: NextFunction): Promise<void> {\n    await this.handleAsync(async () => {\n      const { organizationId } = ArchitectureOrganizationIdParamSchema.parse(req.params);\n      const query = ArchitectureSearchQuerySchema.parse(req.query);\n\n      const result = await this.architectureRepository.search",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/architecture.controller.ts",
        "start": 140,
        "end": 145,
        "startLoc": {
          "line": 140,
          "column": 20,
          "position": 1280
        },
        "endLoc": {
          "line": 145,
          "column": 7,
          "position": 1375
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/architecture.controller.ts",
        "start": 124,
        "end": 129,
        "startLoc": {
          "line": 124,
          "column": 31,
          "position": 1095
        },
        "endLoc": {
          "line": 129,
          "column": 21,
          "position": 1190
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "organizationId, query);\n      \n      const response: ArchitectureListResponse = {\n        data: result.data.map(architecture => this.transformArchitectureToResponse(architecture)),\n        pagination: result.pagination\n      };\n\n      this.sendSuccessResponse(res, response);\n    }, res, next);\n  }\n\n  async getArchitectureStats",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/architecture.controller.ts",
        "start": 145,
        "end": 156,
        "startLoc": {
          "line": 145,
          "column": 2,
          "position": 1386
        },
        "endLoc": {
          "line": 156,
          "column": 21,
          "position": 1473
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/architecture.controller.ts",
        "start": 129,
        "end": 140,
        "startLoc": {
          "line": 129,
          "column": 2,
          "position": 1192
        },
        "endLoc": {
          "line": 140,
          "column": 20,
          "position": 1279
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", organizationId, query);\n      \n      const response: ArchitectureListResponse = {\n        data: result.data.map(architecture => this.transformArchitectureToResponse(architecture)),\n        pagination: result.pagination\n      };\n\n      this.sendSuccessResponse(res, response);\n    }, res, next);\n  }\n\n  async getArchitecturesByStatus",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/architecture.controller.ts",
        "start": 177,
        "end": 188,
        "startLoc": {
          "line": 177,
          "column": 5,
          "position": 1732
        },
        "endLoc": {
          "line": 188,
          "column": 25,
          "position": 1821
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/architecture.controller.ts",
        "start": 145,
        "end": 140,
        "startLoc": {
          "line": 145,
          "column": 3,
          "position": 1384
        },
        "endLoc": {
          "line": 140,
          "column": 20,
          "position": 1279
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", organizationId, query);\n      \n      const response: ArchitectureListResponse = {\n        data: result.data.map(architecture => this.transformArchitectureToResponse(architecture)),\n        pagination: result.pagination\n      };\n\n      this.sendSuccessResponse(res, response);\n    }, res, next);\n  }\n\n  async getActiveArchitectures",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/architecture.controller.ts",
        "start": 194,
        "end": 205,
        "startLoc": {
          "line": 194,
          "column": 7,
          "position": 1936
        },
        "endLoc": {
          "line": 205,
          "column": 23,
          "position": 2025
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/architecture.controller.ts",
        "start": 145,
        "end": 140,
        "startLoc": {
          "line": 145,
          "column": 3,
          "position": 1384
        },
        "endLoc": {
          "line": 140,
          "column": 20,
          "position": 1279
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "(req: Request, res: Response, next: NextFunction): Promise<void> {\n    await this.handleAsync(async () => {\n      const { organizationId } = ArchitectureOrganizationIdParamSchema.parse(req.params);\n      const query = ArchitectureSearchQuerySchema.parse(req.query);\n\n      const result = await this.architectureRepository.findActiveArchitectures",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/architecture.controller.ts",
        "start": 205,
        "end": 210,
        "startLoc": {
          "line": 205,
          "column": 23,
          "position": 2026
        },
        "endLoc": {
          "line": 210,
          "column": 24,
          "position": 2121
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/architecture.controller.ts",
        "start": 124,
        "end": 129,
        "startLoc": {
          "line": 124,
          "column": 31,
          "position": 1095
        },
        "endLoc": {
          "line": 129,
          "column": 21,
          "position": 1190
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "(organizationId, query);\n      \n      const response: ArchitectureListResponse = {\n        data: result.data.map(architecture => this.transformArchitectureToResponse(architecture)),\n        pagination: result.pagination\n      };\n\n      this.sendSuccessResponse(res, response);\n    }, res, next);\n  }\n\n  async getArchitecturesWithMetrics",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/architecture.controller.ts",
        "start": 210,
        "end": 221,
        "startLoc": {
          "line": 210,
          "column": 24,
          "position": 2122
        },
        "endLoc": {
          "line": 221,
          "column": 28,
          "position": 2210
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/architecture.controller.ts",
        "start": 129,
        "end": 140,
        "startLoc": {
          "line": 129,
          "column": 21,
          "position": 1191
        },
        "endLoc": {
          "line": 140,
          "column": 20,
          "position": 1279
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "(req: Request, res: Response, next: NextFunction): Promise<void> {\n    await this.handleAsync(async () => {\n      const { organizationId } = ArchitectureOrganizationIdParamSchema.parse(req.params);\n      const query = ArchitectureSearchQuerySchema.parse(req.query);\n\n      const result = await this.architectureRepository.findWithMetrics",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/architecture.controller.ts",
        "start": 221,
        "end": 226,
        "startLoc": {
          "line": 221,
          "column": 28,
          "position": 2211
        },
        "endLoc": {
          "line": 226,
          "column": 16,
          "position": 2306
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/architecture.controller.ts",
        "start": 124,
        "end": 129,
        "startLoc": {
          "line": 124,
          "column": 31,
          "position": 1095
        },
        "endLoc": {
          "line": 129,
          "column": 21,
          "position": 1190
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "(organizationId, query);\n      \n      const response: ArchitectureListResponse = {\n        data: result.data.map(architecture => this.transformArchitectureToResponse(architecture)),\n        pagination: result.pagination\n      };\n\n      this.sendSuccessResponse(res, response);\n    }, res, next);\n  }\n\n  // ========================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/architecture.controller.ts",
        "start": 226,
        "end": 237,
        "startLoc": {
          "line": 226,
          "column": 16,
          "position": 2307
        },
        "endLoc": {
          "line": 237,
          "column": 76,
          "position": 2393
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/architecture.controller.ts",
        "start": 129,
        "end": 140,
        "startLoc": {
          "line": 129,
          "column": 21,
          "position": 1191
        },
        "endLoc": {
          "line": 140,
          "column": 6,
          "position": 1277
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ".components.map((component: any) => ({\n        id: component.id,\n        name: component.name,\n        type: component.type.value,\n        layer: component.layer.value,\n        description: component.description,\n        dependencies: component.dependencies,\n        interfaces: component.interfaces,\n        implementation: component.implementation,\n        tests: component.tests,\n        documentation: component.documentation,\n        createdAt: component.createdAt,\n        updatedAt: component.updatedAt\n      })),\n      layers",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/architecture.controller.ts",
        "start": 356,
        "end": 370,
        "startLoc": {
          "line": 356,
          "column": 13,
          "position": 3548
        },
        "endLoc": {
          "line": 370,
          "column": 7,
          "position": 3683
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/architecture.controller.ts",
        "start": 311,
        "end": 325,
        "startLoc": {
          "line": 311,
          "column": 6,
          "position": 3095
        },
        "endLoc": {
          "line": 325,
          "column": 13,
          "position": 3230
        }
      }
    },
    {
      "format": "typescript",
      "lines": 26,
      "fragment": ".layers.map((layer: any) => ({\n        id: layer.id,\n        name: layer.name,\n        type: layer.type.value,\n        description: layer.description,\n        components: layer.components.map((component: any) => ({\n          id: component.id,\n          name: component.name,\n          type: component.type.value,\n          layer: component.layer.value,\n          description: component.description,\n          dependencies: component.dependencies,\n          interfaces: component.interfaces,\n          implementation: component.implementation,\n          tests: component.tests,\n          documentation: component.documentation,\n          createdAt: component.createdAt,\n          updatedAt: component.updatedAt\n        })),\n        dependencies: layer.dependencies,\n        responsibilities: layer.responsibilities,\n        patterns: layer.patterns,\n        createdAt: layer.createdAt,\n        updatedAt: layer.updatedAt\n      })),\n      lastAnalysisDate",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/architecture.controller.ts",
        "start": 370,
        "end": 395,
        "startLoc": {
          "line": 370,
          "column": 13,
          "position": 3687
        },
        "endLoc": {
          "line": 395,
          "column": 17,
          "position": 3932
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/architecture.controller.ts",
        "start": 306,
        "end": 331,
        "startLoc": {
          "line": 306,
          "column": 9,
          "position": 3035
        },
        "endLoc": {
          "line": 331,
          "column": 9,
          "position": 3280
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "{\n    return {\n      total: stats.total,\n      active: stats.active,\n      inactive: stats.inactive,\n      createdThisMonth: stats.createdThisMonth,\n      createdThisYear: stats.createdThisYear,\n      updatedThisMonth: stats.updatedThisMonth,\n      updatedThisYear: stats.updatedThisYear,\n      byType: stats.byType,\n      byStatus: stats.byStatus,\n      byLayerType",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/architecture.controller.ts",
        "start": 402,
        "end": 413,
        "startLoc": {
          "line": 402,
          "column": 2,
          "position": 3988
        },
        "endLoc": {
          "line": 413,
          "column": 12,
          "position": 4077
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/predictive-analytics.controller.ts",
        "start": 358,
        "end": 369,
        "startLoc": {
          "line": 358,
          "column": 2,
          "position": 3589
        },
        "endLoc": {
          "line": 369,
          "column": 12,
          "position": 3678
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ";\n      const correlationId = generateCorrelationId();\n\n      // Obtener conector del agente\n      const connector = this.agentConnectors.get(id);\n      if (!connector) {\n        res.status(404).json({\n          success: false,\n          error: 'Agent not found',\n          agentId: id,\n          correlationId\n        });\n        return;\n      }\n\n      // Obtener estadísticas",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/agents.controller.ts",
        "start": 253,
        "end": 268,
        "startLoc": {
          "line": 253,
          "column": 6,
          "position": 1869
        },
        "endLoc": {
          "line": 268,
          "column": 24,
          "position": 1964
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/agents.controller.ts",
        "start": 202,
        "end": 217,
        "startLoc": {
          "line": 202,
          "column": 7,
          "position": 1498
        },
        "endLoc": {
          "line": 217,
          "column": 32,
          "position": 1593
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ".safeParse(req.body);\n      if (!bodyValidation.success) {\n        res.status(400).json({\n          success: false,\n          error: 'Invalid request body',\n          details: bodyValidation.error.errors,\n          correlationId\n        });\n        return;\n      }\n\n      const { resetCircuitBreaker",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/agents.controller.ts",
        "start": 302,
        "end": 313,
        "startLoc": {
          "line": 302,
          "column": 24,
          "position": 2218
        },
        "endLoc": {
          "line": 313,
          "column": 20,
          "position": 2297
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/agents.controller.ts",
        "start": 70,
        "end": 81,
        "startLoc": {
          "line": 70,
          "column": 26,
          "position": 491
        },
        "endLoc": {
          "line": 81,
          "column": 7,
          "position": 570
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "} = bodyValidation.data;\n\n      // Obtener conector del agente\n      const connector = this.agentConnectors.get(id);\n      if (!connector) {\n        res.status(404).json({\n          success: false,\n          error: 'Agent not found',\n          agentId: id,\n          correlationId\n        });\n        return;\n      }\n\n      // Verificar permisos de administrador",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/agents.controller.ts",
        "start": 313,
        "end": 327,
        "startLoc": {
          "line": 313,
          "column": 2,
          "position": 2302
        },
        "endLoc": {
          "line": 327,
          "column": 39,
          "position": 2392
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/agents.controller.ts",
        "start": 81,
        "end": 95,
        "startLoc": {
          "line": 81,
          "column": 2,
          "position": 578
        },
        "endLoc": {
          "line": 95,
          "column": 31,
          "position": 668
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "= async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const { id } = req.params;\n      const correlationId = generateCorrelationId();\n\n      // Obtener conector del agente\n      const connector = this.agentConnectors.get(id);\n      if (!connector) {\n        res.status(404).json({\n          success: false,\n          error: 'Agent not found',\n          agentId: id,\n          correlationId\n        });\n        return;\n      }\n\n      // Respuesta",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/agents.controller.ts",
        "start": 429,
        "end": 446,
        "startLoc": {
          "line": 429,
          "column": 2,
          "position": 3163
        },
        "endLoc": {
          "line": 446,
          "column": 13,
          "position": 3310
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/agents.controller.ts",
        "start": 200,
        "end": 217,
        "startLoc": {
          "line": 200,
          "column": 2,
          "position": 1446
        },
        "endLoc": {
          "line": 217,
          "column": 32,
          "position": 1593
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ".safeParse(req.body);\n      if (!bodyValidation.success) {\n        res.status(400).json({\n          success: false,\n          error: 'Invalid request body',\n          details: bodyValidation.error.errors,\n          correlationId\n        });\n        return;\n      }\n\n      const { keyPattern",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/presentation/controllers/agents.controller.ts",
        "start": 529,
        "end": 540,
        "startLoc": {
          "line": 529,
          "column": 25,
          "position": 3957
        },
        "endLoc": {
          "line": 540,
          "column": 11,
          "position": 4036
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/controllers/agents.controller.ts",
        "start": 70,
        "end": 81,
        "startLoc": {
          "line": 70,
          "column": 26,
          "position": 491
        },
        "endLoc": {
          "line": 81,
          "column": 7,
          "position": 570
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "= async (event: any): Promise<void> => {\n  const existingReadModel = await readModelStore.get(event.aggregateId, 'User');\n  \n  if (existingReadModel) {\n    const updatedReadModel: ReadModel = {\n      ...existingReadModel,\n      data: {\n        ...existingReadModel.data,\n        status",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/handlers/user-handlers.ts",
        "start": 122,
        "end": 130,
        "startLoc": {
          "line": 122,
          "column": 2,
          "position": 1278
        },
        "endLoc": {
          "line": 130,
          "column": 7,
          "position": 1363
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/handlers/user-handlers.ts",
        "start": 103,
        "end": 111,
        "startLoc": {
          "line": 103,
          "column": 2,
          "position": 1123
        },
        "endLoc": {
          "line": 111,
          "column": 5,
          "position": 1208
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "= async (event: any): Promise<void> => {\n  const existingReadModel = await readModelStore.get(event.aggregateId, 'User');\n  \n  if (existingReadModel) {\n    const updatedReadModel: ReadModel = {\n      ...existingReadModel,\n      data: {\n        ...existingReadModel.data,\n        status: 'active'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/handlers/user-handlers.ts",
        "start": 141,
        "end": 149,
        "startLoc": {
          "line": 141,
          "column": 2,
          "position": 1429
        },
        "endLoc": {
          "line": 149,
          "column": 9,
          "position": 1517
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/handlers/user-handlers.ts",
        "start": 103,
        "end": 130,
        "startLoc": {
          "line": 103,
          "column": 2,
          "position": 1123
        },
        "endLoc": {
          "line": 130,
          "column": 12,
          "position": 1366
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ");\n      \n      span.setStatus({ code: SpanStatusCode.OK });\n      return result;\n    } catch (error) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: error instanceof Error ? error.message : 'Unknown error'\n      });\n      span.recordException(error as Error);\n      throw error;\n    } finally {\n      span.end();\n    }\n  }\n\n  // ========================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/infrastructure/observability/tracing.service.ts",
        "start": 174,
        "end": 190,
        "startLoc": {
          "line": 174,
          "column": 2,
          "position": 1455
        },
        "endLoc": {
          "line": 190,
          "column": 76,
          "position": 1578
        }
      },
      "secondFile": {
        "name": "apps/api/src/infrastructure/observability/tracing.service.ts",
        "start": 145,
        "end": 160,
        "startLoc": {
          "line": 145,
          "column": 10,
          "position": 1173
        },
        "endLoc": {
          "line": 160,
          "column": 6,
          "position": 1294
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "name: string, options: SpanOptions = {}): Span {\n    const span = this.tracer.startSpan(name, {\n      kind: options.kind || SpanKind.INTERNAL,\n      attributes: {\n        'service.name': 'econeura-api',\n        'service.version': '1.0.0',\n        ...options.attributes\n      }\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/infrastructure/observability/tracing.service.ts",
        "start": 287,
        "end": 295,
        "startLoc": {
          "line": 287,
          "column": 2,
          "position": 2341
        },
        "endLoc": {
          "line": 295,
          "column": 2,
          "position": 2426
        }
      },
      "secondFile": {
        "name": "apps/api/src/infrastructure/observability/tracing.service.ts",
        "start": 46,
        "end": 53,
        "startLoc": {
          "line": 46,
          "column": 2,
          "position": 325
        },
        "endLoc": {
          "line": 53,
          "column": 2,
          "position": 408
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ", y: 0, z: 0 },\n          size: { width: 3, height: 2 },\n          config: {\n            min: 0,\n            max: 100,\n            unit: '%',\n            thresholds: [\n              { value: 80, color: 'yellow' },\n              { value: 90",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/infrastructure/observability/dashboard.service.ts",
        "start": 502,
        "end": 510,
        "startLoc": {
          "line": 502,
          "column": 2,
          "position": 3832
        },
        "endLoc": {
          "line": 510,
          "column": 3,
          "position": 3924
        }
      },
      "secondFile": {
        "name": "apps/api/src/infrastructure/observability/dashboard.service.ts",
        "start": 475,
        "end": 483,
        "startLoc": {
          "line": 475,
          "column": 2,
          "position": 3602
        },
        "endLoc": {
          "line": 483,
          "column": 3,
          "position": 3694
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ",\n          enabled: true\n        }\n      ],\n      layout: {\n        columns: 12,\n        rows: 5,\n        gap: 16,\n        responsive: true\n      },\n      filters: [\n        {\n          id: 'time_range',\n          name: 'Time Range',\n          type: 'select',\n          field: 'timeRange',\n          options: ['5m'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/infrastructure/observability/dashboard.service.ts",
        "start": 589,
        "end": 605,
        "startLoc": {
          "line": 589,
          "column": 6,
          "position": 4571
        },
        "endLoc": {
          "line": 605,
          "column": 5,
          "position": 4665
        }
      },
      "secondFile": {
        "name": "apps/api/src/infrastructure/observability/dashboard.service.ts",
        "start": 400,
        "end": 416,
        "startLoc": {
          "line": 400,
          "column": 6,
          "position": 3063
        },
        "endLoc": {
          "line": 416,
          "column": 5,
          "position": 3157
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": ",\n      'MG': 'Indian/Antananarivo',\n      'MU': 'Indian/Mauritius',\n      'SC': 'Indian/Mahe',\n      'RE': 'Indian/Reunion',\n      'YT': 'Indian/Mayotte',\n      'KM': 'Indian/Comoro',\n      'DJ': 'Africa/Djibouti',\n      'SO': 'Africa/Mogadishu',\n      'SD': 'Africa/Khartoum',\n      'SS': 'Africa/Juba',\n      'CF': 'Africa/Bangui',\n      'TD': 'Africa/Ndjamena',\n      'NE': 'Africa/Niamey',\n      'BF': 'Africa/Ouagadougou',\n      'ML': 'Africa/Bamako',\n      'SN': 'Africa/Dakar',\n      'GM': 'Africa/Banjul',\n      'GN': 'Africa/Conakry',\n      'SL': 'Africa/Freetown',\n      'LR': 'Africa/Monrovia',\n      'CI': 'Africa/Abidjan',\n      'TG'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/domain/value-objects/address.vo.ts",
        "start": 279,
        "end": 301,
        "startLoc": {
          "line": 279,
          "column": 17,
          "position": 2066
        },
        "endLoc": {
          "line": 301,
          "column": 5,
          "position": 2216
        }
      },
      "secondFile": {
        "name": "apps/api/src/domain/value-objects/address.vo.ts",
        "start": 241,
        "end": 263,
        "startLoc": {
          "line": 241,
          "column": 16,
          "position": 1800
        },
        "endLoc": {
          "line": 263,
          "column": 5,
          "position": 1950
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "{\n  type?: string;\n  status?: string;\n  modelType?: string;\n  accuracy?: string;\n  isActive?: boolean;\n  needsRetraining?: boolean;\n  hasPredictions?: boolean;\n  minAccuracy?: number;\n  maxAccuracy?: number;\n  lastPredictionFrom?: Date;\n  lastPredictionTo?: Date;\n  nextRetrainFrom?: Date;\n  nextRetrainTo?: Date;\n}\n\nexport interface PredictiveAnalyticsStats",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/domain/repositories/predictive-analytics.repository.ts",
        "start": 24,
        "end": 40,
        "startLoc": {
          "line": 24,
          "column": 2,
          "position": 178
        },
        "endLoc": {
          "line": 40,
          "column": 25,
          "position": 291
        }
      },
      "secondFile": {
        "name": "apps/api/src/domain/repositories/predictive-analytics.repository.ts",
        "start": 8,
        "end": 24,
        "startLoc": {
          "line": 8,
          "column": 2,
          "position": 59
        },
        "endLoc": {
          "line": 24,
          "column": 33,
          "position": 172
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": "{\n  productId?: string;\n  warehouseId?: string;\n  locationId?: string;\n  movementType?: string;\n  movementReason?: string;\n  status?: string;\n  lowStock?: boolean;\n  outOfStock?: boolean;\n  needsReorder?: boolean;\n  hasExpiredItems?: boolean;\n  hasExpiringItems?: boolean;\n  minQuantity?: number;\n  maxQuantity?: number;\n  minValue?: number;\n  maxValue?: number;\n  costMethod?: string;\n  valuationMethod?: string;\n}\n\nexport interface InventoryKardexStats",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/domain/repositories/inventory-kardex.repository.ts",
        "start": 28,
        "end": 48,
        "startLoc": {
          "line": 28,
          "column": 2,
          "position": 210
        },
        "endLoc": {
          "line": 48,
          "column": 21,
          "position": 355
        }
      },
      "secondFile": {
        "name": "apps/api/src/domain/repositories/inventory-kardex.repository.ts",
        "start": 8,
        "end": 28,
        "startLoc": {
          "line": 8,
          "column": 2,
          "position": 59
        },
        "endLoc": {
          "line": 28,
          "column": 29,
          "position": 204
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ">;\n  countByOrganizationId(organizationId: OrganizationId): Promise<number>;\n  countByContactId(contactId: ContactId): Promise<number>;\n  countByCompanyId(companyId: CompanyId): Promise<number>;\n  countByUserId(userId: UserId): Promise<number>;\n\n  // ========================================================================\n  // STAGE-SPECIFIC QUERIES",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/domain/repositories/deal.repository.ts",
        "start": 106,
        "end": 113,
        "startLoc": {
          "line": 106,
          "column": 10,
          "position": 897
        },
        "endLoc": {
          "line": 113,
          "column": 26,
          "position": 969
        }
      },
      "secondFile": {
        "name": "apps/api/src/domain/repositories/interaction.repository.ts",
        "start": 93,
        "end": 100,
        "startLoc": {
          "line": 93,
          "column": 17,
          "position": 785
        },
        "endLoc": {
          "line": 100,
          "column": 25,
          "position": 857
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "{\n  type?: string;\n  status?: string;\n  tableType?: string;\n  columnType?: string;\n  constraintType?: string;\n  isActive?: boolean;\n  hasBackup?: boolean;\n  hasMaintenance?: boolean;\n  minHealthScore?: number;\n  maxHealthScore?: number;\n  minPerformanceScore?: number;\n  maxPerformanceScore?: number;\n  minSecurityScore?: number;\n  maxSecurityScore?: number;\n  lastBackupFrom?: Date;\n  lastBackupTo?: Date;\n  lastMaintenanceFrom?: Date;\n  lastMaintenanceTo?: Date;\n}\n\nexport interface DatabaseSchemaStats",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/domain/repositories/database-schema.repository.ts",
        "start": 29,
        "end": 50,
        "startLoc": {
          "line": 29,
          "column": 2,
          "position": 218
        },
        "endLoc": {
          "line": 50,
          "column": 20,
          "position": 371
        }
      },
      "secondFile": {
        "name": "apps/api/src/domain/repositories/database-schema.repository.ts",
        "start": 8,
        "end": 29,
        "startLoc": {
          "line": 8,
          "column": 2,
          "position": 59
        },
        "endLoc": {
          "line": 29,
          "column": 28,
          "position": 212
        }
      }
    },
    {
      "format": "typescript",
      "lines": 50,
      "fragment": "type?: string;\n  status?: string;\n  source?: string;\n  priority?: string;\n  assignedUserId?: string;\n  companyId?: string;\n  department?: string;\n  industry?: string;\n  profession?: string;\n  isActive?: boolean;\n  isVerified?: boolean;\n  isOptedIn?: boolean;\n  hasCompany?: boolean;\n  isAssigned?: boolean;\n  leadScoreMin?: number;\n  leadScoreMax?: number;\n  engagementScoreMin?: number;\n  engagementScoreMax?: number;\n  revenueMin?: number;\n  revenueMax?: number;\n  currency?: string;\n  salaryMin?: number;\n  salaryMax?: number;\n  experienceMin?: number;\n  experienceMax?: number;\n  ageMin?: number;\n  ageMax?: number;\n  lastContactAfter?: Date;\n  lastContactBefore?: Date;\n  nextFollowUpAfter?: Date;\n  nextFollowUpBefore?: Date;\n  lastEmailOpenAfter?: Date;\n  lastEmailOpenBefore?: Date;\n  lastEmailClickAfter?: Date;\n  lastEmailClickBefore?: Date;\n  lastWebsiteVisitAfter?: Date;\n  lastWebsiteVisitBefore?: Date;\n  lastSocialMediaInteractionAfter?: Date;\n  lastSocialMediaInteractionBefore?: Date;\n  createdAfter?: Date;\n  createdBefore?: Date;\n  updatedAfter?: Date;\n  updatedBefore?: Date;\n  birthdayAfter?: Date;\n  birthdayBefore?: Date;\n  anniversaryAfter?: Date;\n  anniversaryBefore?: Date;\n  tags?: string[];\n  customFields?: Record<string, any>;\n  sortBy",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/domain/repositories/contact.repository.ts",
        "start": 274,
        "end": 323,
        "startLoc": {
          "line": 274,
          "column": 3,
          "position": 3097
        },
        "endLoc": {
          "line": 323,
          "column": 7,
          "position": 3497
        }
      },
      "secondFile": {
        "name": "apps/api/src/domain/repositories/contact.repository.ts",
        "start": 210,
        "end": 259,
        "startLoc": {
          "line": 210,
          "column": 3,
          "position": 2606
        },
        "endLoc": {
          "line": 259,
          "column": 2,
          "position": 3005
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "?: Date;\n  tags?: string[];\n  customFields?: Record<string, any>;\n}\n\nexport interface PaginatedResult<T> {\n  data: T[];\n  total: number;\n  page: number;\n  limit: number;\n  totalPages: number;\n  hasNext: boolean;\n  hasPrevious: boolean;\n}\n\nexport interface CompanySearchOptions",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/domain/repositories/company.repository.ts",
        "start": 170,
        "end": 185,
        "startLoc": {
          "line": 170,
          "column": 14,
          "position": 1761
        },
        "endLoc": {
          "line": 185,
          "column": 21,
          "position": 1863
        }
      },
      "secondFile": {
        "name": "apps/api/src/domain/repositories/contact.repository.ts",
        "start": 256,
        "end": 271,
        "startLoc": {
          "line": 256,
          "column": 18,
          "position": 2975
        },
        "endLoc": {
          "line": 271,
          "column": 21,
          "position": 3077
        }
      }
    },
    {
      "format": "typescript",
      "lines": 30,
      "fragment": "type?: string;\n  status?: string;\n  size?: string;\n  industry?: string;\n  source?: string;\n  assignedUserId?: string;\n  parentCompanyId?: string;\n  isActive?: boolean;\n  hasParentCompany?: boolean;\n  isAssigned?: boolean;\n  leadScoreMin?: number;\n  leadScoreMax?: number;\n  revenueMin?: number;\n  revenueMax?: number;\n  currency?: string;\n  employeeCountMin?: number;\n  employeeCountMax?: number;\n  foundedYearMin?: number;\n  foundedYearMax?: number;\n  lastContactAfter?: Date;\n  lastContactBefore?: Date;\n  nextFollowUpAfter?: Date;\n  nextFollowUpBefore?: Date;\n  createdAfter?: Date;\n  createdBefore?: Date;\n  updatedAfter?: Date;\n  updatedBefore?: Date;\n  tags?: string[];\n  customFields?: Record<string, any>;\n  sortBy",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/domain/repositories/company.repository.ts",
        "start": 188,
        "end": 217,
        "startLoc": {
          "line": 188,
          "column": 3,
          "position": 1883
        },
        "endLoc": {
          "line": 217,
          "column": 7,
          "position": 2123
        }
      },
      "secondFile": {
        "name": "apps/api/src/domain/repositories/company.repository.ts",
        "start": 144,
        "end": 173,
        "startLoc": {
          "line": 144,
          "column": 3,
          "position": 1552
        },
        "endLoc": {
          "line": 173,
          "column": 2,
          "position": 1791
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "{\n  type?: string;\n  status?: string;\n  layerType?: string;\n  componentType?: string;\n  isActive?: boolean;\n  hasMetrics?: boolean;\n  minQualityScore?: number;\n  maxQualityScore?: number;\n  lastAnalysisFrom?: Date;\n  lastAnalysisTo?: Date;\n}\n\nexport interface ArchitectureStats",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/domain/repositories/architecture.repository.ts",
        "start": 21,
        "end": 34,
        "startLoc": {
          "line": 21,
          "column": 2,
          "position": 154
        },
        "endLoc": {
          "line": 34,
          "column": 18,
          "position": 243
        }
      },
      "secondFile": {
        "name": "apps/api/src/domain/repositories/architecture.repository.ts",
        "start": 8,
        "end": 21,
        "startLoc": {
          "line": 8,
          "column": 2,
          "position": 59
        },
        "endLoc": {
          "line": 21,
          "column": 26,
          "position": 148
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ",\n      role: this.props.role.value,\n      status: this.props.status.value,\n      isEmailVerified: this.props.isEmailVerified,\n      mfaEnabled: this.props.mfaEnabled,\n      lastLoginAt: this.props.lastLoginAt,\n      createdAt: this.props.createdAt,\n      updatedAt: this.props.updatedAt\n    };\n  }\n\n  // ========================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/domain/entities/user.entity.ts",
        "start": 302,
        "end": 313,
        "startLoc": {
          "line": 302,
          "column": 9,
          "position": 2306
        },
        "endLoc": {
          "line": 313,
          "column": 76,
          "position": 2397
        }
      },
      "secondFile": {
        "name": "apps/api/src/domain/entities/user.entity.ts",
        "start": 284,
        "end": 295,
        "startLoc": {
          "line": 284,
          "column": 9,
          "position": 2133
        },
        "endLoc": {
          "line": 295,
          "column": 6,
          "position": 2224
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "().optional(),\n  userId: z.string().uuid().optional(),\n  organizationId: z.string().uuid().optional(),\n  tags: z.array(z.string()).optional(),\n  minScore: z.number().min(0).max(1).optional(),\n  minRelevance: z.number().min(0).max(1).optional(),\n  minConfidence: z.number().min(0).max(1).optional(),\n  customFilters: z.record(z.any()).optional()\n});",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/domain/entities/search-result.entity.ts",
        "start": 143,
        "end": 151,
        "startLoc": {
          "line": 143,
          "column": 5,
          "position": 827
        },
        "endLoc": {
          "line": 151,
          "column": 2,
          "position": 989
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/search.dto.ts",
        "start": 17,
        "end": 25,
        "startLoc": {
          "line": 17,
          "column": 9,
          "position": 184
        },
        "endLoc": {
          "line": 25,
          "column": 2,
          "position": 347
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ".optional(),\n  page: z.number().int().min(1).optional(),\n  limit: z.number().int().min(1).max(100).optional(),\n  sortBy: z.string().optional(),\n  sortOrder: z.enum(['asc', 'desc']).optional(),\n  searchType",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/domain/entities/search-result.entity.ts",
        "start": 155,
        "end": 160,
        "startLoc": {
          "line": 155,
          "column": 20,
          "position": 1032
        },
        "endLoc": {
          "line": 160,
          "column": 11,
          "position": 1128
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/search.dto.ts",
        "start": 26,
        "end": 31,
        "startLoc": {
          "line": 26,
          "column": 2,
          "position": 363
        },
        "endLoc": {
          "line": 31,
          "column": 16,
          "position": 459
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": ";\n    margin?: number;\n  };\n  shipping: {\n    weight?: number;\n    dimensions?: {\n      length: number;\n      width: number;\n      height: number;\n    };\n    requiresShipping: boolean;\n    freeShipping: boolean;\n  };\n  seo: {\n    metaTitle?: string;\n    metaDescription?: string;\n    slug: string;\n  };\n  customFields: Record<string, any>;\n  tags: string[];\n  notes: string;\n}\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/domain/entities/product.entity.ts",
        "start": 46,
        "end": 69,
        "startLoc": {
          "line": 46,
          "column": 6,
          "position": 265
        },
        "endLoc": {
          "line": 69,
          "column": 7,
          "position": 408
        }
      },
      "secondFile": {
        "name": "apps/api/src/application/use-cases/product/create-product.use-case.ts",
        "start": 40,
        "end": 61,
        "startLoc": {
          "line": 40,
          "column": 2,
          "position": 291
        },
        "endLoc": {
          "line": 61,
          "column": 2,
          "position": 433
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "dataSource: string[];\n  features: string[];\n  targetVariable: string;\n  validationMethod: 'cross_validation' | 'holdout' | 'time_series_split';\n  hyperparameters: Record<string, any>;\n  customFields: Record<string, any>;\n  tags: string[];\n  notes: string;\n}\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/domain/entities/predictive-analytics.entity.ts",
        "start": 46,
        "end": 56,
        "startLoc": {
          "line": 46,
          "column": 3,
          "position": 364
        },
        "endLoc": {
          "line": 56,
          "column": 7,
          "position": 448
        }
      },
      "secondFile": {
        "name": "apps/api/src/application/use-cases/predictive-analytics/create-predictive-analytics.use-case.ts",
        "start": 21,
        "end": 29,
        "startLoc": {
          "line": 21,
          "column": 5,
          "position": 200
        },
        "endLoc": {
          "line": 29,
          "column": 2,
          "position": 283
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ";\n  }\n\n  get isActive(): boolean {\n    return this.props.isActive;\n  }\n\n  get createdAt(): Date {\n    return this.props.createdAt;\n  }\n\n  get updatedAt(): Date {\n    return this.props.updatedAt;\n  }\n\n  // ========================================================================\n  // BUSINESS METHODS\n  // ========================================================================\n\n  updateName(name: string): void {\n    this",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/domain/entities/organization.entity.ts",
        "start": 175,
        "end": 195,
        "startLoc": {
          "line": 175,
          "column": 13,
          "position": 1230
        },
        "endLoc": {
          "line": 195,
          "column": 5,
          "position": 1339
        }
      },
      "secondFile": {
        "name": "apps/api/src/domain/entities/product.entity.ts",
        "start": 149,
        "end": 159,
        "startLoc": {
          "line": 149,
          "column": 9,
          "position": 1296
        },
        "endLoc": {
          "line": 159,
          "column": 3,
          "position": 1395
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "}\n\n  activate(): void {\n    this.props.isActive = true;\n    this.props.updatedAt = new Date();\n  }\n\n  deactivate(): void {\n    this.props.isActive = false;\n    this.props.updatedAt = new Date();\n  }\n\n  // ========================================================================\n  // BUSINESS RULES",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/domain/entities/organization.entity.ts",
        "start": 237,
        "end": 250,
        "startLoc": {
          "line": 237,
          "column": 3,
          "position": 1771
        },
        "endLoc": {
          "line": 250,
          "column": 18,
          "position": 1862
        }
      },
      "secondFile": {
        "name": "apps/api/src/domain/entities/product.entity.ts",
        "start": 281,
        "end": 294,
        "startLoc": {
          "line": 281,
          "column": 3,
          "position": 2669
        },
        "endLoc": {
          "line": 294,
          "column": 22,
          "position": 2760
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": "(): any {\n    return {\n      id: this.props.id.value,\n      name: this.props.name,\n      slug: this.props.slug.value,\n      description: this.props.description,\n      website: this.props.website,\n      logo: this.props.logo,\n      settings: this.props.settings,\n      subscriptionTier: this.props.subscriptionTier.value,\n      status: this.props.status.value,\n      trialEndsAt: this.props.trialEndsAt,\n      billingEmail: this.props.billingEmail,\n      isActive: this.props.isActive,\n      createdAt: this.props.createdAt,\n      updatedAt: this.props.updatedAt\n    };\n  }\n\n  // ========================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/domain/entities/organization.entity.ts",
        "start": 406,
        "end": 425,
        "startLoc": {
          "line": 406,
          "column": 6,
          "position": 3047
        },
        "endLoc": {
          "line": 425,
          "column": 76,
          "position": 3230
        }
      },
      "secondFile": {
        "name": "apps/api/src/domain/entities/organization.entity.ts",
        "start": 387,
        "end": 406,
        "startLoc": {
          "line": 387,
          "column": 14,
          "position": 2863
        },
        "endLoc": {
          "line": 406,
          "column": 6,
          "position": 3046
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "{\n  trackInventory: boolean;\n  allowNegativeStock: boolean;\n  lowStockThreshold: number;\n  reorderPoint: number;\n  reorderQuantity: number;\n  costMethod: 'fifo' | 'lifo' | 'average' | 'standard';\n  valuationMethod: 'fifo' | 'lifo' | 'average' | 'standard';\n  autoReorder: boolean;\n  trackExpiration: boolean;\n  trackSerialNumbers: boolean;\n  trackBatchNumbers: boolean;\n  customFields: Record<string, any>;\n  tags: string[];\n  notes: string;\n}\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/domain/entities/inventory-kardex.entity.ts",
        "start": 48,
        "end": 65,
        "startLoc": {
          "line": 48,
          "column": 2,
          "position": 374
        },
        "endLoc": {
          "line": 65,
          "column": 7,
          "position": 509
        }
      },
      "secondFile": {
        "name": "apps/api/src/application/use-cases/inventory-kardex/create-inventory-kardex.use-case.ts",
        "start": 19,
        "end": 34,
        "startLoc": {
          "line": 19,
          "column": 2,
          "position": 136
        },
        "endLoc": {
          "line": 34,
          "column": 2,
          "position": 270
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "},\n      movementReason: reason,\n      quantity: -quantity,\n      unitCost: this.props.averageCost,\n      totalCost: Money.create(-quantity * this.props.averageCost.amount, this.props.averageCost.currency),\n      reference,\n      referenceId,\n      notes,\n      userId",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/domain/entities/inventory-kardex.entity.ts",
        "start": 269,
        "end": 277,
        "startLoc": {
          "line": 269,
          "column": 2,
          "position": 2382
        },
        "endLoc": {
          "line": 277,
          "column": 7,
          "position": 2456
        }
      },
      "secondFile": {
        "name": "apps/api/src/domain/entities/inventory-kardex.entity.ts",
        "start": 231,
        "end": 239,
        "startLoc": {
          "line": 231,
          "column": 2,
          "position": 2069
        },
        "endLoc": {
          "line": 239,
          "column": 12,
          "position": 2143
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "?: string,\n    userId?: string\n  ): void {\n    const movement: InventoryMovement = {\n      id: crypto.randomUUID(),\n      productId: this.props.productId,\n      warehouseId: this.props.warehouseId,\n      locationId: this.props.locationId,\n      movementType: { value: 'adjustment'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/domain/entities/inventory-kardex.entity.ts",
        "start": 291,
        "end": 299,
        "startLoc": {
          "line": 291,
          "column": 6,
          "position": 2555
        },
        "endLoc": {
          "line": 299,
          "column": 13,
          "position": 2641
        }
      },
      "secondFile": {
        "name": "apps/api/src/domain/entities/inventory-kardex.entity.ts",
        "start": 183,
        "end": 191,
        "startLoc": {
          "line": 183,
          "column": 11,
          "position": 1675
        },
        "endLoc": {
          "line": 191,
          "column": 5,
          "position": 1761
        }
      }
    },
    {
      "format": "typescript",
      "lines": 29,
      "fragment": "export const InteractionTypeSchema = z.enum([\n  'EMAIL',\n  'PHONE',\n  'MEETING',\n  'NOTE',\n  'TASK',\n  'CALL',\n  'DEMO',\n  'PROPOSAL',\n  'FOLLOW_UP',\n  'OTHER'\n]);\n\nexport const InteractionStatusSchema = z.enum([\n  'SCHEDULED',\n  'IN_PROGRESS',\n  'COMPLETED',\n  'CANCELLED',\n  'RESCHEDULED'\n]);\n\nexport const InteractionPrioritySchema = z.enum([\n  'LOW',\n  'MEDIUM',\n  'HIGH',\n  'URGENT'\n]);\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/domain/entities/interaction.entity.ts",
        "start": 7,
        "end": 35,
        "startLoc": {
          "line": 7,
          "column": 1,
          "position": 21
        },
        "endLoc": {
          "line": 35,
          "column": 7,
          "position": 151
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/interaction.dto.ts",
        "start": 12,
        "end": 40,
        "startLoc": {
          "line": 12,
          "column": 1,
          "position": 53
        },
        "endLoc": {
          "line": 40,
          "column": 76,
          "position": 183
        }
      }
    },
    {
      "format": "typescript",
      "lines": 39,
      "fragment": "export const DealStageSchema = z.enum([\n  'LEAD',\n  'QUALIFIED',\n  'PROPOSAL',\n  'NEGOTIATION',\n  'CLOSED_WON',\n  'CLOSED_LOST',\n  'ON_HOLD',\n  'CANCELLED'\n]);\n\nexport const DealStatusSchema = z.enum([\n  'ACTIVE',\n  'WON',\n  'LOST',\n  'ON_HOLD',\n  'CANCELLED'\n]);\n\nexport const DealPrioritySchema = z.enum([\n  'LOW',\n  'MEDIUM',\n  'HIGH',\n  'URGENT'\n]);\n\nexport const DealSourceSchema = z.enum([\n  'WEBSITE',\n  'EMAIL',\n  'PHONE',\n  'REFERRAL',\n  'SOCIAL_MEDIA',\n  'ADVERTISING',\n  'TRADE_SHOW',\n  'PARTNER',\n  'OTHER'\n]);\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/domain/entities/deal.entity.ts",
        "start": 7,
        "end": 45,
        "startLoc": {
          "line": 7,
          "column": 1,
          "position": 21
        },
        "endLoc": {
          "line": 45,
          "column": 7,
          "position": 197
        }
      },
      "secondFile": {
        "name": "apps/api/src/presentation/dto/deal.dto.ts",
        "start": 12,
        "end": 50,
        "startLoc": {
          "line": 12,
          "column": 1,
          "position": 53
        },
        "endLoc": {
          "line": 50,
          "column": 76,
          "position": 229
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "?: Date;\n  nextStep?: string;\n  nextStepDate?: Date;\n  tags?: string[];\n  customFields?: Record<string, any>;\n  attachments?: string[];\n  notes?: string;\n  competitors?: string[];\n  decisionMakers?: string[];\n  budget?: number;\n  timeline?: string;\n  requirements?: string[];\n  objections?: string[];\n  createdAt",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/domain/entities/deal.entity.ts",
        "start": 80,
        "end": 93,
        "startLoc": {
          "line": 80,
          "column": 16,
          "position": 460
        },
        "endLoc": {
          "line": 93,
          "column": 10,
          "position": 581
        }
      },
      "secondFile": {
        "name": "apps/api/src/application/use-cases/deal/update-deal.use-case.ts",
        "start": 23,
        "end": 36,
        "startLoc": {
          "line": 23,
          "column": 18,
          "position": 185
        },
        "endLoc": {
          "line": 36,
          "column": 2,
          "position": 306
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "{ return this.props.id; }\n  get organizationId(): OrganizationId { return this.props.organizationId; }\n  get contactId(): ContactId { return this.props.contactId; }\n  get companyId(): CompanyId | undefined { return this.props.companyId; }\n  get userId(): UserId { return this.props.userId; }\n  get name",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/domain/entities/deal.entity.ts",
        "start": 112,
        "end": 117,
        "startLoc": {
          "line": 112,
          "column": 2,
          "position": 667
        },
        "endLoc": {
          "line": 117,
          "column": 5,
          "position": 779
        }
      },
      "secondFile": {
        "name": "apps/api/src/domain/entities/interaction.entity.ts",
        "start": 92,
        "end": 97,
        "startLoc": {
          "line": 92,
          "column": 2,
          "position": 527
        },
        "endLoc": {
          "line": 97,
          "column": 5,
          "position": 639
        }
      }
    },
    {
      "format": "typescript",
      "lines": 54,
      "fragment": "= date;\n    this.props.updatedAt = new Date();\n  }\n\n  addTag(tag: string): void {\n    if (!this.props.tags) {\n      this.props.tags = [];\n    }\n    if (!this.props.tags.includes(tag)) {\n      this.props.tags.push(tag);\n      this.props.updatedAt = new Date();\n    }\n  }\n\n  removeTag(tag: string): void {\n    if (this.props.tags) {\n      this.props.tags = this.props.tags.filter(t => t !== tag);\n      this.props.updatedAt = new Date();\n    }\n  }\n\n  setCustomField(key: string, value: any): void {\n    if (!this.props.customFields) {\n      this.props.customFields = {};\n    }\n    this.props.customFields[key] = value;\n    this.props.updatedAt = new Date();\n  }\n\n  removeCustomField(key: string): void {\n    if (this.props.customFields) {\n      delete this.props.customFields[key];\n      this.props.updatedAt = new Date();\n    }\n  }\n\n  addAttachment(attachment: string): void {\n    if (!this.props.attachments) {\n      this.props.attachments = [];\n    }\n    if (!this.props.attachments.includes(attachment)) {\n      this.props.attachments.push(attachment);\n      this.props.updatedAt = new Date();\n    }\n  }\n\n  removeAttachment(attachment: string): void {\n    if (this.props.attachments) {\n      this.props.attachments = this.props.attachments.filter(a => a !== attachment);\n      this.props.updatedAt = new Date();\n    }\n  }\n\n  addCompetitor",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/domain/entities/deal.entity.ts",
        "start": 204,
        "end": 257,
        "startLoc": {
          "line": 204,
          "column": 2,
          "position": 2042
        },
        "endLoc": {
          "line": 257,
          "column": 14,
          "position": 2572
        }
      },
      "secondFile": {
        "name": "apps/api/src/domain/entities/interaction.entity.ts",
        "start": 148,
        "end": 201,
        "startLoc": {
          "line": 148,
          "column": 2,
          "position": 1386
        },
        "endLoc": {
          "line": 201,
          "column": 76,
          "position": 1916
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ");\n      this.props.updatedAt = new Date();\n    }\n  }\n\n  // ========================================================================\n  // VALIDATION METHODS\n  // ========================================================================\n\n  validate(): boolean {\n    return (\n      this.props.id.length > 0 &&\n      this.props.organizationId.length > 0 &&\n      this.props.contactId.length > 0 &&\n      this.props.userId.length > 0 &&\n      this.props.name",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/domain/entities/deal.entity.ts",
        "start": 320,
        "end": 335,
        "startLoc": {
          "line": 320,
          "column": 10,
          "position": 3257
        },
        "endLoc": {
          "line": 335,
          "column": 5,
          "position": 3373
        }
      },
      "secondFile": {
        "name": "apps/api/src/domain/entities/interaction.entity.ts",
        "start": 196,
        "end": 211,
        "startLoc": {
          "line": 196,
          "column": 11,
          "position": 1889
        },
        "endLoc": {
          "line": 211,
          "column": 8,
          "position": 2005
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "(\n    organizationId: OrganizationId,\n    contactId: ContactId,\n    userId: UserId,\n    name: string,\n    value: number,\n    currency: string = 'USD',\n    source: DealSource = 'WEBSITE',\n    companyId?: CompanyId\n  ): Deal {\n    return Deal.create({\n      organizationId,\n      contactId,\n      companyId,\n      userId,\n      name,\n      stage: 'QUALIFIED'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/domain/entities/deal.entity.ts",
        "start": 398,
        "end": 414,
        "startLoc": {
          "line": 398,
          "column": 16,
          "position": 3849
        },
        "endLoc": {
          "line": 414,
          "column": 12,
          "position": 3956
        }
      },
      "secondFile": {
        "name": "apps/api/src/domain/entities/deal.entity.ts",
        "start": 372,
        "end": 388,
        "startLoc": {
          "line": 372,
          "column": 11,
          "position": 3694
        },
        "endLoc": {
          "line": 388,
          "column": 7,
          "position": 3801
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "(\n    organizationId: OrganizationId,\n    contactId: ContactId,\n    userId: UserId,\n    name: string,\n    value: number,\n    currency: string = 'USD',\n    source: DealSource = 'WEBSITE',\n    companyId?: CompanyId\n  ): Deal {\n    return Deal.create({\n      organizationId,\n      contactId,\n      companyId,\n      userId,\n      name,\n      stage: 'PROPOSAL'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/domain/entities/deal.entity.ts",
        "start": 424,
        "end": 440,
        "startLoc": {
          "line": 424,
          "column": 15,
          "position": 4004
        },
        "endLoc": {
          "line": 440,
          "column": 11,
          "position": 4111
        }
      },
      "secondFile": {
        "name": "apps/api/src/domain/entities/deal.entity.ts",
        "start": 372,
        "end": 388,
        "startLoc": {
          "line": 372,
          "column": 11,
          "position": 3694
        },
        "endLoc": {
          "line": 388,
          "column": 7,
          "position": 3801
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "(\n    organizationId: OrganizationId,\n    contactId: ContactId,\n    userId: UserId,\n    name: string,\n    value: number,\n    currency: string = 'USD',\n    source: DealSource = 'WEBSITE',\n    companyId?: CompanyId\n  ): Deal {\n    return Deal.create({\n      organizationId,\n      contactId,\n      companyId,\n      userId,\n      name,\n      stage: 'NEGOTIATION'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/domain/entities/deal.entity.ts",
        "start": 450,
        "end": 466,
        "startLoc": {
          "line": 450,
          "column": 18,
          "position": 4159
        },
        "endLoc": {
          "line": 466,
          "column": 14,
          "position": 4266
        }
      },
      "secondFile": {
        "name": "apps/api/src/domain/entities/deal.entity.ts",
        "start": 372,
        "end": 388,
        "startLoc": {
          "line": 372,
          "column": 11,
          "position": 3694
        },
        "endLoc": {
          "line": 388,
          "column": 7,
          "position": 3801
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ";\n  columns: string[];\n  referencedTable?: string;\n  referencedColumns?: string[];\n  condition?: string;\n  description: string;\n  isDeferrable: boolean;\n  initiallyDeferred: boolean;\n  onDelete?: 'CASCADE' | 'SET NULL' | 'RESTRICT' | 'NO ACTION';\n  onUpdate?: 'CASCADE' | 'SET NULL' | 'RESTRICT' | 'NO ACTION';\n  createdAt",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/domain/entities/database-schema.entity.ts",
        "start": 55,
        "end": 65,
        "startLoc": {
          "line": 55,
          "column": 15,
          "position": 446
        },
        "endLoc": {
          "line": 65,
          "column": 10,
          "position": 545
        }
      },
      "secondFile": {
        "name": "apps/api/src/application/use-cases/database-schema/create-database-schema.use-case.ts",
        "start": 77,
        "end": 87,
        "startLoc": {
          "line": 77,
          "column": 8,
          "position": 648
        },
        "endLoc": {
          "line": 87,
          "column": 2,
          "position": 747
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "{\n  id: string;\n  name: string;\n  table: string;\n  columns: string[];\n  type: 'btree' | 'hash' | 'gin' | 'gist' | 'spgist' | 'brin';\n  unique: boolean;\n  partial: boolean;\n  condition?: string;\n  description: string;\n  isActive: boolean;\n  createdAt",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/domain/entities/database-schema.entity.ts",
        "start": 86,
        "end": 97,
        "startLoc": {
          "line": 86,
          "column": 2,
          "position": 686
        },
        "endLoc": {
          "line": 97,
          "column": 10,
          "position": 782
        }
      },
      "secondFile": {
        "name": "apps/api/src/application/use-cases/database-schema/create-database-schema.use-case.ts",
        "start": 109,
        "end": 120,
        "startLoc": {
          "line": 109,
          "column": 2,
          "position": 960
        },
        "endLoc": {
          "line": 120,
          "column": 2,
          "position": 1056
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "{\n  rowCount: number;\n  tableSize: number;\n  indexSize: number;\n  totalSize: number;\n  lastAnalyzed: Date;\n  lastVacuumed: Date;\n  lastAutoVacuumed: Date;\n  deadTuples: number;\n  liveTuples: number;\n  nDistinct: number;\n  correlation: number;\n  mostCommonValues: any[];\n  mostCommonFrequencies: number[];\n  histogramBounds: any[];\n}\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/domain/entities/database-schema.entity.ts",
        "start": 129,
        "end": 146,
        "startLoc": {
          "line": 129,
          "column": 2,
          "position": 1021
        },
        "endLoc": {
          "line": 146,
          "column": 7,
          "position": 1130
        }
      },
      "secondFile": {
        "name": "apps/api/src/application/use-cases/database-schema/create-database-schema.use-case.ts",
        "start": 144,
        "end": 159,
        "startLoc": {
          "line": 144,
          "column": 2,
          "position": 1264
        },
        "endLoc": {
          "line": 159,
          "column": 2,
          "position": 1372
        }
      }
    },
    {
      "format": "typescript",
      "lines": 47,
      "fragment": "version: string;\n  encoding: string;\n  collation: string;\n  timezone: string;\n  connectionPool: {\n    min: number;\n    max: number;\n    idle: number;\n    acquire: number;\n    evict: number;\n  };\n  migrations: {\n    enabled: boolean;\n    directory: string;\n    table: string;\n    lockTable: string;\n  };\n  backup: {\n    enabled: boolean;\n    frequency: string;\n    retention: number;\n    compression: boolean;\n  };\n  monitoring: {\n    enabled: boolean;\n    slowQueryThreshold: number;\n    logLevel: string;\n    metrics: boolean;\n  };\n  security: {\n    ssl: boolean;\n    encryption: boolean;\n    auditLog: boolean;\n    rowLevelSecurity: boolean;\n  };\n  performance: {\n    queryOptimization: boolean;\n    indexOptimization: boolean;\n    connectionPooling: boolean;\n    caching: boolean;\n  };\n  customFields: Record<string, any>;\n  tags: string[];\n  notes: string;\n}\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/domain/entities/database-schema.entity.ts",
        "start": 148,
        "end": 194,
        "startLoc": {
          "line": 148,
          "column": 3,
          "position": 1146
        },
        "endLoc": {
          "line": 194,
          "column": 7,
          "position": 1440
        }
      },
      "secondFile": {
        "name": "apps/api/src/application/use-cases/database-schema/create-database-schema.use-case.ts",
        "start": 14,
        "end": 58,
        "startLoc": {
          "line": 14,
          "column": 5,
          "position": 114
        },
        "endLoc": {
          "line": 58,
          "column": 2,
          "position": 407
        }
      }
    },
    {
      "format": "typescript",
      "lines": 26,
      "fragment": "{\n  totalTables: number;\n  totalViews: number;\n  totalFunctions: number;\n  totalProcedures: number;\n  totalTriggers: number;\n  totalIndexes: number;\n  totalConstraints: number;\n  totalPolicies: number;\n  totalSize: number;\n  averageTableSize: number;\n  largestTable: string;\n  smallestTable: string;\n  mostIndexedTable: string;\n  leastIndexedTable: string;\n  lastBackupDate?: Date;\n  lastMaintenanceDate?: Date;\n  healthScore: number;\n  performanceScore: number;\n  securityScore: number;\n  maintainabilityScore: number;\n  lastAnalysisDate: Date;\n  analysisDuration: number;\n}\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/domain/entities/database-schema.entity.ts",
        "start": 194,
        "end": 219,
        "startLoc": {
          "line": 194,
          "column": 2,
          "position": 1446
        },
        "endLoc": {
          "line": 219,
          "column": 7,
          "position": 1607
        }
      },
      "secondFile": {
        "name": "apps/api/src/application/use-cases/database-schema/analyze-database-schema.use-case.ts",
        "start": 17,
        "end": 40,
        "startLoc": {
          "line": 17,
          "column": 2,
          "position": 112
        },
        "endLoc": {
          "line": 40,
          "column": 2,
          "position": 272
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "; }\n\n  // ========================================================================\n  // BUSINESS METHODS\n  // ========================================================================\n\n  updateName(name: string): void {\n    if (!name || name.trim().length === 0) {\n      throw new Error('Name cannot be empty');\n    }\n    this.props.name = name.trim();\n    this.updateTimestamp();\n  }\n\n  updateType(type: SchemaType",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/domain/entities/database-schema.entity.ts",
        "start": 281,
        "end": 295,
        "startLoc": {
          "line": 281,
          "column": 20,
          "position": 2341
        },
        "endLoc": {
          "line": 295,
          "column": 11,
          "position": 2442
        }
      },
      "secondFile": {
        "name": "apps/api/src/domain/entities/predictive-analytics.entity.ts",
        "start": 123,
        "end": 137,
        "startLoc": {
          "line": 123,
          "column": 16,
          "position": 1116
        },
        "endLoc": {
          "line": 137,
          "column": 14,
          "position": 1217
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ");\n  }\n\n  // ========================================================================\n  // VALIDATION METHODS\n  // ========================================================================\n\n  validate(): boolean {\n    if (!this.validateBase()) {\n      return false;\n    }\n\n    if (!this.props.name || this.props.name.trim().length === 0) {\n      return false;\n    }\n\n    if (!this.props.organizationId || this.props.organizationId.trim().length === 0) {\n      return false;\n    }\n\n    if (!",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/domain/entities/database-schema.entity.ts",
        "start": 583,
        "end": 603,
        "startLoc": {
          "line": 583,
          "column": 6,
          "position": 5189
        },
        "endLoc": {
          "line": 603,
          "column": 2,
          "position": 5328
        }
      },
      "secondFile": {
        "name": "apps/api/src/domain/entities/predictive-analytics.entity.ts",
        "start": 289,
        "end": 309,
        "startLoc": {
          "line": 289,
          "column": 4,
          "position": 2581
        },
        "endLoc": {
          "line": 309,
          "column": 5,
          "position": 2720
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ";\n  }\n\n  get isActive(): boolean {\n    return this.props.isActive;\n  }\n\n  get createdAt(): Date {\n    return this.props.createdAt;\n  }\n\n  get updatedAt(): Date {\n    return this.props.updatedAt;\n  }\n\n  // ========================================================================\n  // BUSINESS METHODS\n  // ========================================================================\n\n  updateName(name: string): void {\n    this.props.name = name;\n    this.props.updatedAt = new Date();\n  }\n\n  updateLegalName",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/domain/entities/company.entity.ts",
        "start": 273,
        "end": 297,
        "startLoc": {
          "line": 273,
          "column": 10,
          "position": 2153
        },
        "endLoc": {
          "line": 297,
          "column": 16,
          "position": 2294
        }
      },
      "secondFile": {
        "name": "apps/api/src/domain/entities/product.entity.ts",
        "start": 149,
        "end": 199,
        "startLoc": {
          "line": 149,
          "column": 9,
          "position": 1296
        },
        "endLoc": {
          "line": 199,
          "column": 18,
          "position": 1371
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": ";\n    this.props.updatedAt = new Date();\n  }\n\n  activate(): void {\n    this.props.isActive = true;\n    this.props.updatedAt = new Date();\n  }\n\n  deactivate(): void {\n    this.props.isActive = false;\n    this.props.updatedAt = new Date();\n  }\n\n  // ========================================================================\n  // BUSINESS RULES\n  // ========================================================================\n\n  isActive(): boolean {\n    return this.props.isActive && this.props.status.value === 'active';\n  }\n\n  isCustomer",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/domain/entities/company.entity.ts",
        "start": 402,
        "end": 424,
        "startLoc": {
          "line": 402,
          "column": 2,
          "position": 3450
        },
        "endLoc": {
          "line": 424,
          "column": 11,
          "position": 3605
        }
      },
      "secondFile": {
        "name": "apps/api/src/domain/entities/organization.entity.ts",
        "start": 235,
        "end": 257,
        "startLoc": {
          "line": 235,
          "column": 6,
          "position": 1752
        },
        "endLoc": {
          "line": 257,
          "column": 8,
          "position": 1907
        }
      }
    },
    {
      "format": "typescript",
      "lines": 31,
      "fragment": "(): any {\n    return {\n      id: this.props.id.value,\n      organizationId: this.props.organizationId.value,\n      name: this.props.name,\n      legalName: this.props.legalName,\n      type: this.props.type.value,\n      status: this.props.status.value,\n      size: this.props.size.value,\n      industry: this.props.industry.value,\n      source: this.props.source.value,\n      website: this.props.website,\n      email: this.props.email,\n      phone: this.props.phone,\n      address: this.props.address?.toJSON(),\n      billingAddress: this.props.billingAddress?.toJSON(),\n      shippingAddress: this.props.shippingAddress?.toJSON(),\n      taxId: this.props.taxId,\n      vatNumber: this.props.vatNumber,\n      registrationNumber: this.props.registrationNumber,\n      description: this.props.description,\n      settings: this.props.settings,\n      annualRevenue: this.props.annualRevenue?.toJSON(),\n      employeeCount: this.props.employeeCount,\n      foundedYear: this.props.foundedYear,\n      parentCompanyId: this.props.parentCompanyId?.value,\n      assignedUserId: this.props.assignedUserId,\n      lastContactDate: this.props.lastContactDate,\n      nextFollowUpDate: this.props.nextFollowUpDate,\n      leadScore: this.props.leadScore,\n      leadScoreLevel",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/domain/entities/company.entity.ts",
        "start": 568,
        "end": 598,
        "startLoc": {
          "line": 568,
          "column": 6,
          "position": 4974
        },
        "endLoc": {
          "line": 598,
          "column": 15,
          "position": 5333
        }
      },
      "secondFile": {
        "name": "apps/api/src/domain/entities/company.entity.ts",
        "start": 532,
        "end": 562,
        "startLoc": {
          "line": 532,
          "column": 14,
          "position": 4574
        },
        "endLoc": {
          "line": 562,
          "column": 9,
          "position": 4933
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ";\n  patterns: string[];\n  principles: string[];\n  conventions: Record<string, any>;\n  tools: string[];\n  frameworks: string[];\n  libraries: string[];\n  customFields: Record<string, any>;\n  tags: string[];\n  notes: string;\n}\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/domain/entities/architecture.entity.ts",
        "start": 58,
        "end": 70,
        "startLoc": {
          "line": 58,
          "column": 2,
          "position": 415
        },
        "endLoc": {
          "line": 70,
          "column": 7,
          "position": 507
        }
      },
      "secondFile": {
        "name": "apps/api/src/application/use-cases/architecture/create-architecture.use-case.ts",
        "start": 33,
        "end": 43,
        "startLoc": {
          "line": 33,
          "column": 2,
          "position": 301
        },
        "endLoc": {
          "line": 43,
          "column": 2,
          "position": 392
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "{\n  totalComponents: number;\n  totalLayers: number;\n  complexity: number;\n  coupling: number;\n  cohesion: number;\n  maintainability: number;\n  testability: number;\n  scalability: number;\n  performance: number;\n  security: number;\n  lastAnalysisDate: Date;\n  analysisDuration: number;\n  qualityScore: number;\n}\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/domain/entities/architecture.entity.ts",
        "start": 70,
        "end": 86,
        "startLoc": {
          "line": 70,
          "column": 2,
          "position": 513
        },
        "endLoc": {
          "line": 86,
          "column": 7,
          "position": 609
        }
      },
      "secondFile": {
        "name": "apps/api/src/application/use-cases/architecture/analyze-architecture.use-case.ts",
        "start": 17,
        "end": 31,
        "startLoc": {
          "line": 17,
          "column": 2,
          "position": 112
        },
        "endLoc": {
          "line": 31,
          "column": 2,
          "position": 207
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "; }\n\n  // ========================================================================\n  // BUSINESS METHODS\n  // ========================================================================\n\n  updateName(name: string): void {\n    if (!name || name.trim().length === 0) {\n      throw new Error('Name cannot be empty');\n    }\n    this.props.name = name.trim();\n    this.updateTimestamp();\n  }\n\n  updateType(type: ArchitectureType",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/domain/entities/architecture.entity.ts",
        "start": 136,
        "end": 150,
        "startLoc": {
          "line": 136,
          "column": 17,
          "position": 1138
        },
        "endLoc": {
          "line": 150,
          "column": 17,
          "position": 1239
        }
      },
      "secondFile": {
        "name": "apps/api/src/domain/entities/predictive-analytics.entity.ts",
        "start": 123,
        "end": 137,
        "startLoc": {
          "line": 123,
          "column": 16,
          "position": 1116
        },
        "endLoc": {
          "line": 137,
          "column": 14,
          "position": 1217
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ";\n  }\n\n  // ========================================================================\n  // VALIDATION METHODS\n  // ========================================================================\n\n  validate(): boolean {\n    if (!this.validateBase()) {\n      return false;\n    }\n\n    if (!this.props.name || this.props.name.trim().length === 0) {\n      return false;\n    }\n\n    if (!this.props.organizationId || this.props.organizationId.trim().length === 0) {\n      return false;\n    }\n\n    if (!this.props.settings.layers",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/domain/entities/architecture.entity.ts",
        "start": 344,
        "end": 364,
        "startLoc": {
          "line": 344,
          "column": 4,
          "position": 3243
        },
        "endLoc": {
          "line": 364,
          "column": 7,
          "position": 3388
        }
      },
      "secondFile": {
        "name": "apps/api/src/domain/entities/predictive-analytics.entity.ts",
        "start": 289,
        "end": 603,
        "startLoc": {
          "line": 289,
          "column": 2,
          "position": 2582
        },
        "endLoc": {
          "line": 603,
          "column": 8,
          "position": 5335
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "}`;\n          const condition = `FROM ('${startDate.toISOString().split('T')[0]}') TO ('${endDate.toISOString().split('T')[0]}')`;\n          \n          if (await this.createPartition(strategy.tableName, partitionName, condition, strategy.partitionType)) {\n            createdCount++;\n          }\n        }\n        break;\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/db/partitions/partition-manager.service.ts",
        "start": 284,
        "end": 292,
        "startLoc": {
          "line": 284,
          "column": 5,
          "position": 2511
        },
        "endLoc": {
          "line": 292,
          "column": 2,
          "position": 2604
        }
      },
      "secondFile": {
        "name": "apps/api/src/db/partitions/partition-manager.service.ts",
        "start": 253,
        "end": 262,
        "startLoc": {
          "line": 253,
          "column": 2,
          "position": 1999
        },
        "endLoc": {
          "line": 262,
          "column": 5,
          "position": 2093
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", {\n        error: error instanceof Error ? error.message : String(error)\n      });\n    }\n  }\n\n  /**\n   * Detiene el servicio de monitoreo\n   */\n  public stop(): void {\n    if (this.monitoringInterval) {\n      clearInterval(this.monitoringInterval);\n      this.monitoringInterval = null;\n    }\n    this.isMonitoring = false;\n    structuredLogger.info('Index manager monitoring stopped'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/db/indexes/index-manager.service.ts",
        "start": 400,
        "end": 415,
        "startLoc": {
          "line": 400,
          "column": 26,
          "position": 3185
        },
        "endLoc": {
          "line": 415,
          "column": 35,
          "position": 3287
        }
      },
      "secondFile": {
        "name": "apps/api/src/db/partitions/partition-manager.service.ts",
        "start": 496,
        "end": 511,
        "startLoc": {
          "line": 496,
          "column": 30,
          "position": 4413
        },
        "endLoc": {
          "line": 511,
          "column": 39,
          "position": 4515
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": "});\n        results.push(result);\n      }\n\n      const allSuccessful = results.every(result => result.success);\n\n      return {\n        success: allSuccessful,\n        results\n      };\n    } catch (error) {\n      return {\n        success: false,\n        results: [],\n        error: error instanceof Error ? error.message : 'Unknown error occurred'\n      };\n    }\n  }\n\n  // ========================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/application/services/user.application.service.ts",
        "start": 301,
        "end": 320,
        "startLoc": {
          "line": 301,
          "column": 9,
          "position": 2397
        },
        "endLoc": {
          "line": 320,
          "column": 76,
          "position": 2518
        }
      },
      "secondFile": {
        "name": "apps/api/src/application/services/user.application.service.ts",
        "start": 261,
        "end": 280,
        "startLoc": {
          "line": 261,
          "column": 9,
          "position": 2090
        },
        "endLoc": {
          "line": 280,
          "column": 6,
          "position": 2211
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ";\n      }\n\n      const job: Job = {\n        id: jobData.id,\n        type: jobData.type as Job['type'],\n        payload: JSON.parse(jobData.payload || '{}'),\n        organizationId: jobData.organizationId,\n        priority: jobData.priority as Job['priority'],\n        status: 'completed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/workers/src/queues/job-queue.ts",
        "start": 171,
        "end": 180,
        "startLoc": {
          "line": 171,
          "column": 2,
          "position": 1572
        },
        "endLoc": {
          "line": 180,
          "column": 12,
          "position": 1662
        }
      },
      "secondFile": {
        "name": "apps/workers/src/queues/job-queue.ts",
        "start": 120,
        "end": 129,
        "startLoc": {
          "line": 120,
          "column": 5,
          "position": 1063
        },
        "endLoc": {
          "line": 129,
          "column": 13,
          "position": 1153
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ",\n        retryCount: parseInt(jobData.retryCount || '0'),\n        maxRetries: parseInt(jobData.maxRetries || '3'),\n        error: jobData.error,\n        metadata: jobData.metadata ? JSON.parse(jobData.metadata) : undefined\n      };\n\n      // Update job status\n      await this.redis.hset(`job:${jobId}`, {\n        status: 'completed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/workers/src/queues/job-queue.ts",
        "start": 183,
        "end": 192,
        "startLoc": {
          "line": 183,
          "column": 2,
          "position": 1703
        },
        "endLoc": {
          "line": 192,
          "column": 12,
          "position": 1799
        }
      },
      "secondFile": {
        "name": "apps/workers/src/queues/job-queue.ts",
        "start": 132,
        "end": 141,
        "startLoc": {
          "line": 132,
          "column": 12,
          "position": 1188
        },
        "endLoc": {
          "line": 141,
          "column": 13,
          "position": 1284
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "): Promise<void> {\n    try {\n      const jobData = await this.redis.hgetall(`job:${jobId}`);\n      \n      if (!jobData || Object.keys(jobData).length === 0) {\n        throw new Error(`Job ${jobId} not found`);\n      }\n\n      const job: Job = {\n        id: jobData.id,\n        type: jobData.type as Job['type'],\n        payload: JSON.parse(jobData.payload || '{}'),\n        organizationId: jobData.organizationId,\n        priority: jobData.priority as Job['priority'],\n        status: 'failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/workers/src/queues/job-queue.ts",
        "start": 231,
        "end": 245,
        "startLoc": {
          "line": 231,
          "column": 7,
          "position": 2156
        },
        "endLoc": {
          "line": 245,
          "column": 9,
          "position": 2324
        }
      },
      "secondFile": {
        "name": "apps/workers/src/queues/job-queue.ts",
        "start": 166,
        "end": 129,
        "startLoc": {
          "line": 166,
          "column": 4,
          "position": 1494
        },
        "endLoc": {
          "line": 129,
          "column": 13,
          "position": 1153
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "as Job['status'],\n        createdAt: jobData.createdAt,\n        startedAt: jobData.startedAt,\n        completedAt: new Date().toISOString(),\n        retryCount: parseInt(jobData.retryCount || '0'),\n        maxRetries: parseInt(jobData.maxRetries || '3'),\n        error,",
      "tokens": 0,
      "firstFile": {
        "name": "apps/workers/src/queues/job-queue.ts",
        "start": 245,
        "end": 251,
        "startLoc": {
          "line": 245,
          "column": 2,
          "position": 2326
        },
        "endLoc": {
          "line": 251,
          "column": 2,
          "position": 2401
        }
      },
      "secondFile": {
        "name": "apps/workers/src/queues/job-queue.ts",
        "start": 180,
        "end": 186,
        "startLoc": {
          "line": 180,
          "column": 2,
          "position": 1664
        },
        "endLoc": {
          "line": 186,
          "column": 2,
          "position": 1739
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "{\n        id: jobData.id,\n        type: jobData.type as Job['type'],\n        payload: JSON.parse(jobData.payload || '{}'),\n        organizationId: jobData.organizationId,\n        priority: jobData.priority as Job['priority'],\n        status: jobData",
      "tokens": 0,
      "firstFile": {
        "name": "apps/workers/src/queues/job-queue.ts",
        "start": 322,
        "end": 328,
        "startLoc": {
          "line": 322,
          "column": 2,
          "position": 2994
        },
        "endLoc": {
          "line": 328,
          "column": 8,
          "position": 3068
        }
      },
      "secondFile": {
        "name": "apps/workers/src/queues/job-queue.ts",
        "start": 123,
        "end": 129,
        "startLoc": {
          "line": 123,
          "column": 2,
          "position": 1079
        },
        "endLoc": {
          "line": 129,
          "column": 13,
          "position": 1153
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "as Job['status'],\n        createdAt: jobData.createdAt,\n        startedAt: jobData.startedAt,\n        completedAt: jobData.completedAt,\n        retryCount: parseInt(jobData.retryCount || '0'),\n        maxRetries: parseInt(jobData.maxRetries || '3'),\n        error: jobData.error,\n        metadata: jobData.metadata ? JSON.parse(jobData.metadata) : undefined\n      };\n      }",
      "tokens": 0,
      "firstFile": {
        "name": "apps/workers/src/queues/job-queue.ts",
        "start": 328,
        "end": 337,
        "startLoc": {
          "line": 328,
          "column": 2,
          "position": 3072
        },
        "endLoc": {
          "line": 337,
          "column": 2,
          "position": 3176
        }
      },
      "secondFile": {
        "name": "apps/workers/src/queues/job-queue.ts",
        "start": 129,
        "end": 139,
        "startLoc": {
          "line": 129,
          "column": 2,
          "position": 1155
        },
        "endLoc": {
          "line": 139,
          "column": 21,
          "position": 1260
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": "(jobId: string): Promise<Job | null> {\n    try {\n      const jobData = await this.redis.hgetall(`job:${jobId}`);\n      if (!jobData || Object.keys(jobData).length === 0) {\n        return null;\n      }\n      return {\n        id: jobData.id,\n        type: jobData.type as Job['type'],\n        payload: JSON.parse(jobData.payload || '{}'),\n        organizationId: jobData.organizationId,\n        priority: jobData.priority as Job['priority'],\n        status: jobData.status as Job['status'],\n        createdAt: jobData.createdAt,\n        startedAt: jobData.startedAt,\n        completedAt: jobData.completedAt,\n        retryCount: parseInt(jobData.retryCount || '0'),\n        maxRetries: parseInt(jobData.maxRetries || '3'),\n        error: jobData.error,\n        metadata: jobData.metadata ? JSON.parse(jobData.metadata) : undefined\n      };\n    } catch (error) {\n      logger.error('Failed to get job status'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/workers/src/queues/job-queue-methods.ts",
        "start": 49,
        "end": 71,
        "startLoc": {
          "line": 49,
          "column": 13,
          "position": 502
        },
        "endLoc": {
          "line": 71,
          "column": 27,
          "position": 783
        }
      },
      "secondFile": {
        "name": "apps/workers/src/queues/job-queue.ts",
        "start": 314,
        "end": 338,
        "startLoc": {
          "line": 314,
          "column": 7,
          "position": 2907
        },
        "endLoc": {
          "line": 338,
          "column": 20,
          "position": 3191
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "action: 'categorize' | 'respond' | 'forward' | 'archive' | 'none';\n    confidence: number;\n    metadata: {\n      category?: string;\n      sentiment?: 'positive' | 'negative' | 'neutral';\n      urgency?: 'low' | 'medium' | 'high';\n      language?: string;\n      entities?: string[];\n    };\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "apps/workers/src/processors/email-processor.ts",
        "start": 152,
        "end": 161,
        "startLoc": {
          "line": 152,
          "column": 5,
          "position": 1157
        },
        "endLoc": {
          "line": 161,
          "column": 2,
          "position": 1255
        }
      },
      "secondFile": {
        "name": "apps/workers/src/processors/email-processor.ts",
        "start": 36,
        "end": 45,
        "startLoc": {
          "line": 36,
          "column": 3,
          "position": 250
        },
        "endLoc": {
          "line": 45,
          "column": 15,
          "position": 348
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": "import { Request, Response, NextFunction } from 'express';\n\ninterface FinOpsHeaders {\n  'X-Est-Cost-EUR'?: string;\n  'X-Budget-Pct'?: string;\n  'X-Latency-ms'?: string;\n  'X-Route'?: string;\n  'X-Correlation-Id'?: string;\n}\n\nexport interface FinOpsRequest extends Request {\n  startTime?: number;\n  correlationId?: string;\n  estimatedCost?: number;\n  budgetPct?: number;\n}\n\n/**\n * Initialize FinOps tracking\n */\nexport const initFinOps = (req: FinOpsRequest, res: Response, next: NextFunction) => {\n  req.startTime = Date.now();\n  req.correlationId = req.header('x-correlation-id') || `agent-",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api-agents-make/src/middleware/finops.ts",
        "start": 5,
        "end": 27,
        "startLoc": {
          "line": 5,
          "column": 1,
          "position": 3
        },
        "endLoc": {
          "line": 27,
          "column": 8,
          "position": 182
        }
      },
      "secondFile": {
        "name": "apps/api-neura-comet/src/middleware/finops.ts",
        "start": 5,
        "end": 27,
        "startLoc": {
          "line": 5,
          "column": 1,
          "position": 3
        },
        "endLoc": {
          "line": 27,
          "column": 8,
          "position": 182
        }
      }
    },
    {
      "format": "typescript",
      "lines": 32,
      "fragment": "${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n  req.estimatedCost = 0;\n  req.budgetPct = 0;\n  \n  next();\n};\n\n/**\n * Finalize FinOps headers\n */\nexport const finalizeFinOps = (req: FinOpsRequest, res: Response, next: NextFunction) => {\n  const latency = req.startTime ? Date.now() - req.startTime : 0;\n  \n  const headers: FinOpsHeaders = {\n    'X-Est-Cost-EUR': (req.estimatedCost || 0).toFixed(4),\n    'X-Budget-Pct': (req.budgetPct || 0).toFixed(2),\n    'X-Latency-ms': latency.toString(),\n    'X-Route': req.path,\n    'X-Correlation-Id': req.correlationId || 'unknown'\n  };\n  \n  // Set headers\n  Object.entries(headers).forEach(([key, value]) => {\n    if (value) res.setHeader(key, value);\n  });\n  \n  next();\n};\n\n/**\n * Calculate cost for Make.com webhook\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api-agents-make/src/middleware/finops.ts",
        "start": 27,
        "end": 58,
        "startLoc": {
          "line": 27,
          "column": 8,
          "position": 183
        },
        "endLoc": {
          "line": 58,
          "column": 4,
          "position": 462
        }
      },
      "secondFile": {
        "name": "apps/api-neura-comet/src/middleware/finops.ts",
        "start": 27,
        "end": 58,
        "startLoc": {
          "line": 27,
          "column": 8,
          "position": 183
        },
        "endLoc": {
          "line": 58,
          "column": 4,
          "position": 462
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ";\n};\n\n/**\n * Budget guard middleware\n */\nexport const budgetGuard = (req: FinOpsRequest, res: Response, next: NextFunction) => {\n  const budgetPct = req.budgetPct || 0;\n  \n  if (budgetPct >= 90) {\n    return res.status(402).json({\n      error: 'Budget limit exceeded',\n      budgetPct,\n      message: 'Agent execution blocked due to budget constraints'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api-agents-make/src/middleware/finops.ts",
        "start": 63,
        "end": 76,
        "startLoc": {
          "line": 63,
          "column": 19,
          "position": 515
        },
        "endLoc": {
          "line": 76,
          "column": 52,
          "position": 614
        }
      },
      "secondFile": {
        "name": "apps/api-neura-comet/src/middleware/finops.ts",
        "start": 67,
        "end": 80,
        "startLoc": {
          "line": 67,
          "column": 11,
          "position": 571
        },
        "endLoc": {
          "line": 80,
          "column": 44,
          "position": 670
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "= {}): Span {\n    const span = this.tracer.startSpan(`${req.method} ${req.path}`, {\n      kind: SpanKind.SERVER,\n      attributes: {\n        'http.method': req.method,\n        'http.url': req.url,\n        'http.route': req.route?.path || req.path,\n        'http.user_agent': req.headers['user-agent'] || '',\n        'http.request_id': req.headers['x-request-id'] as string || '',\n        'http.tenant_id'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/services/observability-otel.service.ts",
        "start": 294,
        "end": 303,
        "startLoc": {
          "line": 294,
          "column": 2,
          "position": 2011
        },
        "endLoc": {
          "line": 303,
          "column": 17,
          "position": 2140
        }
      },
      "secondFile": {
        "name": "apps/api/src/infrastructure/observability/tracing.service.ts",
        "start": 60,
        "end": 69,
        "startLoc": {
          "line": 60,
          "column": 2,
          "position": 454
        },
        "endLoc": {
          "line": 69,
          "column": 15,
          "position": 583
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ",\n        'service.name': this.config.service.name,\n        'service.version': this.config.service.version,\n        ...options.attributes\n      }\n    });\n\n    // Registrar span activo\n    this.activeSpans.set(span.spanContext().spanId, span);\n    this.spanMetrics.totalSpans++;\n    this.spanMetrics.activeSpans++;\n\n    return span;\n  }\n\n  createBusinessSpan",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/services/observability-otel.service.ts",
        "start": 362,
        "end": 377,
        "startLoc": {
          "line": 362,
          "column": 8,
          "position": 2717
        },
        "endLoc": {
          "line": 377,
          "column": 19,
          "position": 2813
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/observability-otel.service.ts",
        "start": 338,
        "end": 353,
        "startLoc": {
          "line": 338,
          "column": 6,
          "position": 2502
        },
        "endLoc": {
          "line": 353,
          "column": 22,
          "position": 2598
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ",\n        'service.name': this.config.service.name,\n        'service.version': this.config.service.version,\n        ...options.attributes\n      }\n    });\n\n    // Registrar span activo\n    this.activeSpans.set(span.spanContext().spanId, span);\n    this.spanMetrics.totalSpans++;\n    this.spanMetrics.activeSpans++;\n\n    return span;\n  }\n\n  // ========================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/services/observability-otel.service.ts",
        "start": 385,
        "end": 400,
        "startLoc": {
          "line": 385,
          "column": 15,
          "position": 2925
        },
        "endLoc": {
          "line": 400,
          "column": 76,
          "position": 3021
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/observability-otel.service.ts",
        "start": 338,
        "end": 353,
        "startLoc": {
          "line": 338,
          "column": 6,
          "position": 2502
        },
        "endLoc": {
          "line": 353,
          "column": 22,
          "position": 2598
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ", options);\n    const startTime = Date.now();\n    \n    try {\n      const result = await context.with(trace.setSpan(context.active(), span), operation);\n      const duration = Date.now() - startTime;\n      \n      span.setAttributes({\n        'http.status_code'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/services/observability-otel.service.ts",
        "start": 459,
        "end": 467,
        "startLoc": {
          "line": 459,
          "column": 4,
          "position": 3547
        },
        "endLoc": {
          "line": 467,
          "column": 19,
          "position": 3634
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/observability-otel.service.ts",
        "start": 412,
        "end": 420,
        "startLoc": {
          "line": 412,
          "column": 5,
          "position": 3128
        },
        "endLoc": {
          "line": 420,
          "column": 26,
          "position": 3215
        }
      }
    },
    {
      "format": "typescript",
      "lines": 30,
      "fragment": "}\n\n  // ========================================================================\n  // CONTEXT PROPAGATION\n  // ========================================================================\n\n  getCurrentSpan(): Span | undefined {\n    return trace.getActiveSpan();\n  }\n\n  getCurrentTraceId(): string | undefined {\n    const span = this.getCurrentSpan();\n    return span?.spanContext().traceId;\n  }\n\n  getCurrentSpanId(): string | undefined {\n    const span = this.getCurrentSpan();\n    return span?.spanContext().spanId;\n  }\n\n  getTraceContext(): TraceContext | undefined {\n    const span = this.getCurrentSpan();\n    if (!span) return undefined;\n\n    const spanContext = span.spanContext();\n    return {\n      traceId: spanContext.traceId,\n      spanId: spanContext.spanId,\n      operation: span.name,\n      service: this",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/services/observability-otel.service.ts",
        "start": 501,
        "end": 530,
        "startLoc": {
          "line": 501,
          "column": 3,
          "position": 3966
        },
        "endLoc": {
          "line": 530,
          "column": 5,
          "position": 4189
        }
      },
      "secondFile": {
        "name": "apps/api/src/infrastructure/observability/tracing.service.ts",
        "start": 212,
        "end": 241,
        "startLoc": {
          "line": 212,
          "column": 3,
          "position": 1797
        },
        "endLoc": {
          "line": 241,
          "column": 15,
          "position": 2020
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ";\n        \n        span.setAttributes({\n          'http.status_code': res.statusCode,\n          'http.response_size': JSON.stringify(res.locals.responseBody || {}).length,\n          'performance.duration_ms': duration\n        });\n        \n        if (res.statusCode >= 400) {\n          span.setStatus({\n            code: SpanStatusCode.ERROR,\n            message: `HTTP ${res.statusCode}`\n          });\n        }",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/services/observability-otel.service.ts",
        "start": 723,
        "end": 736,
        "startLoc": {
          "line": 723,
          "column": 2,
          "position": 5826
        },
        "endLoc": {
          "line": 736,
          "column": 2,
          "position": 5931
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/observability-otel.service.ts",
        "start": 464,
        "end": 477,
        "startLoc": {
          "line": 464,
          "column": 10,
          "position": 3622
        },
        "endLoc": {
          "line": 477,
          "column": 5,
          "position": 3727
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "});\n        \n        if (res.statusCode >= 400) {\n          span.setStatus({\n            code: SpanStatusCode.ERROR,\n            message: `HTTP ${res.statusCode}`\n          });\n        } else {\n          span.setStatus({ code: SpanStatusCode.OK });\n        }\n        \n        this",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/services/observability-otel.service.ts",
        "start": 729,
        "end": 740,
        "startLoc": {
          "line": 729,
          "column": 9,
          "position": 5876
        },
        "endLoc": {
          "line": 740,
          "column": 5,
          "position": 5961
        }
      },
      "secondFile": {
        "name": "apps/api/src/infrastructure/observability/tracing.service.ts",
        "start": 265,
        "end": 276,
        "startLoc": {
          "line": 265,
          "column": 9,
          "position": 2209
        },
        "endLoc": {
          "line": 276,
          "column": 5,
          "position": 2294
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "'service.name': this.config.service.name,\n        'service.version': this.config.service.version,\n        ...options.attributes\n      }\n    });\n\n    // Registrar span activo\n    this.activeSpans.set(span.spanContext().spanId, span);\n    this.spanMetrics.totalSpans++;\n    this.spanMetrics.activeSpans++;\n\n    return span;\n  }\n\n  traceError",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/services/observability-otel.service.ts",
        "start": 758,
        "end": 772,
        "startLoc": {
          "line": 758,
          "column": 9,
          "position": 6110
        },
        "endLoc": {
          "line": 772,
          "column": 11,
          "position": 6203
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/observability-otel.service.ts",
        "start": 339,
        "end": 353,
        "startLoc": {
          "line": 339,
          "column": 9,
          "position": 2505
        },
        "endLoc": {
          "line": 353,
          "column": 22,
          "position": 2598
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "traceError(error: Error, context: Record<string, any> = {}): void {\n    const span = this.getCurrentSpan();\n    if (span) {\n      span.recordException(error);\n      span.setAttributes({\n        'error.name': error.name,\n        'error.message': error.message,\n        'error.stack': error.stack || '',\n        ...context\n      });\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: error.message\n      });\n    }\n    \n    // Registrar error en métricas",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/services/observability-otel.service.ts",
        "start": 772,
        "end": 788,
        "startLoc": {
          "line": 772,
          "column": 3,
          "position": 6203
        },
        "endLoc": {
          "line": 788,
          "column": 31,
          "position": 6347
        }
      },
      "secondFile": {
        "name": "apps/api/src/infrastructure/observability/tracing.service.ts",
        "start": 347,
        "end": 362,
        "startLoc": {
          "line": 347,
          "column": 3,
          "position": 2786
        },
        "endLoc": {
          "line": 362,
          "column": 2,
          "position": 2928
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "traceBusinessOperation(operation: string, organizationId: string, context: Record<string, any> = {}): Span {\n    const span = this.createBusinessSpan(operation, organizationId);\n    \n    span.setAttributes({\n      'business.operation': operation,\n      'organization.id': organizationId,\n      ...context\n    });\n    \n    return span;\n  }\n}\n\n// ============================================================================\n// SINGLETON INSTANCE\n// ============================================================================\n\nexport const observabilityOTelService",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/services/observability-otel.service.ts",
        "start": 794,
        "end": 811,
        "startLoc": {
          "line": 794,
          "column": 3,
          "position": 6415
        },
        "endLoc": {
          "line": 811,
          "column": 25,
          "position": 6526
        }
      },
      "secondFile": {
        "name": "apps/api/src/infrastructure/observability/tracing.service.ts",
        "start": 368,
        "end": 385,
        "startLoc": {
          "line": 368,
          "column": 3,
          "position": 2942
        },
        "endLoc": {
          "line": 385,
          "column": 8,
          "position": 3053
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ",\n        timestamp: new Date().toISOString(),\n      },\n      model,\n      inputTokens: this.estimateTokens(JSON.stringify(input.data || {})),\n      outputTokens: this.estimateTokens(JSON.stringify(response)),\n      confidence: response.confidence,\n      insights: response.insights,\n      recommendations: response.recommendations,\n    };\n  }\n\n  private async processGenerationRequest",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/services/next-ai-platform.service.ts",
        "start": 461,
        "end": 473,
        "startLoc": {
          "line": 461,
          "column": 8,
          "position": 3341
        },
        "endLoc": {
          "line": 473,
          "column": 25,
          "position": 3447
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/next-ai-platform.service.ts",
        "start": 437,
        "end": 449,
        "startLoc": {
          "line": 437,
          "column": 12,
          "position": 3092
        },
        "endLoc": {
          "line": 449,
          "column": 25,
          "position": 3198
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ",\n        timestamp: new Date().toISOString(),\n      },\n      model,\n      inputTokens: this.estimateTokens(JSON.stringify(input.data || {})),\n      outputTokens: this.estimateTokens(JSON.stringify(response)),\n      confidence: response.confidence,\n      insights: response.insights,\n      recommendations: response.recommendations,\n    };\n  }\n\n  private async processInsightsRequest",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/services/next-ai-platform.service.ts",
        "start": 508,
        "end": 520,
        "startLoc": {
          "line": 508,
          "column": 8,
          "position": 3815
        },
        "endLoc": {
          "line": 520,
          "column": 23,
          "position": 3921
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/next-ai-platform.service.ts",
        "start": 437,
        "end": 449,
        "startLoc": {
          "line": 437,
          "column": 12,
          "position": 3092
        },
        "endLoc": {
          "line": 449,
          "column": 25,
          "position": 3198
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ",\n        timestamp: new Date().toISOString(),\n      },\n      model,\n      inputTokens: this.estimateTokens(JSON.stringify(input.data || {})),\n      outputTokens: this.estimateTokens(JSON.stringify(response)),\n      confidence: response.confidence,\n      insights: response.insights,\n      recommendations: response.recommendations,\n    };\n  }\n\n  // ============================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/services/next-ai-platform.service.ts",
        "start": 531,
        "end": 543,
        "startLoc": {
          "line": 531,
          "column": 16,
          "position": 4055
        },
        "endLoc": {
          "line": 543,
          "column": 80,
          "position": 4157
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/next-ai-platform.service.ts",
        "start": 437,
        "end": 449,
        "startLoc": {
          "line": 437,
          "column": 12,
          "position": 3092
        },
        "endLoc": {
          "line": 449,
          "column": 8,
          "position": 3194
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ";\n\n      const healthyServices = Object.values(services).filter(Boolean).length;\n      const totalServices = Object.keys(services).length;\n      \n      let status: 'healthy' | 'degraded' | 'unhealthy';\n      if (healthyServices === totalServices) {\n        status = 'healthy';\n      } else if (healthyServices >",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/services/next-ai-platform.service.ts",
        "start": 925,
        "end": 933,
        "startLoc": {
          "line": 925,
          "column": 2,
          "position": 7050
        },
        "endLoc": {
          "line": 933,
          "column": 2,
          "position": 7142
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/basic-ai/basic-ai.service.ts",
        "start": 484,
        "end": 492,
        "startLoc": {
          "line": 484,
          "column": 2,
          "position": 3709
        },
        "endLoc": {
          "line": 492,
          "column": 3,
          "position": 3801
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ",\n      };\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        throw new Error(`Validation error: ${error.errors.map(e => e.message).join(', ')}`);\n      }\n      throw error;\n    }\n  }\n\n  async getMemoryStats",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/services/memory.service.ts",
        "start": 42,
        "end": 52,
        "startLoc": {
          "line": 42,
          "column": 7,
          "position": 373
        },
        "endLoc": {
          "line": 52,
          "column": 15,
          "position": 455
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/memory.service.ts",
        "start": 20,
        "end": 30,
        "startLoc": {
          "line": 20,
          "column": 2,
          "position": 181
        },
        "endLoc": {
          "line": 30,
          "column": 12,
          "position": 263
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ", 'custom']),\n  apiKey: z.string(),\n  apiUrl: z.string().url(),\n  isActive: z.boolean().default(true),\n  rateLimit: z.object({\n    requestsPerMinute: z.number().default(5",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/services/external-integrations.service.ts",
        "start": 38,
        "end": 43,
        "startLoc": {
          "line": 38,
          "column": 6,
          "position": 420
        },
        "endLoc": {
          "line": 43,
          "column": 2,
          "position": 491
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/external-integrations.service.ts",
        "start": 13,
        "end": 18,
        "startLoc": {
          "line": 13,
          "column": 7,
          "position": 102
        },
        "endLoc": {
          "line": 18,
          "column": 3,
          "position": 173
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ", 'custom']),\n  apiKey: z.string(),\n  apiUrl: z.string().url(),\n  isActive: z.boolean().default(true),\n  rateLimit: z.object({\n    requestsPerMinute: z.number().default(60),\n    requestsPerDay",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/services/external-integrations.service.ts",
        "start": 52,
        "end": 58,
        "startLoc": {
          "line": 52,
          "column": 14,
          "position": 589
        },
        "endLoc": {
          "line": 58,
          "column": 15,
          "position": 665
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/external-integrations.service.ts",
        "start": 13,
        "end": 19,
        "startLoc": {
          "line": 13,
          "column": 7,
          "position": 102
        },
        "endLoc": {
          "line": 19,
          "column": 16,
          "position": 178
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ");\n      \n      const responseTime = Date.now() - startTime;\n      this.updateHealthCheck(providerId, 'healthy', responseTime);\n      \n      return data;\n    } catch (error) {\n      this.updateHealthCheck(providerId, 'down', 0, true);\n      throw error;\n    }\n  }\n\n  async getWeatherForecast",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/services/external-integrations.service.ts",
        "start": 355,
        "end": 367,
        "startLoc": {
          "line": 355,
          "column": 9,
          "position": 3219
        },
        "endLoc": {
          "line": 367,
          "column": 19,
          "position": 3310
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/external-integrations.service.ts",
        "start": 297,
        "end": 309,
        "startLoc": {
          "line": 297,
          "column": 7,
          "position": 2702
        },
        "endLoc": {
          "line": 309,
          "column": 19,
          "position": 2793
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ");\n      \n      const responseTime = Date.now() - startTime;\n      this.updateHealthCheck(providerId, 'healthy', responseTime);\n      \n      return data;\n    } catch (error) {\n      this.updateHealthCheck(providerId, 'down', 0, true);\n      throw error;\n    }\n  }\n\n  // ============================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/services/external-integrations.service.ts",
        "start": 381,
        "end": 393,
        "startLoc": {
          "line": 381,
          "column": 5,
          "position": 3467
        },
        "endLoc": {
          "line": 393,
          "column": 80,
          "position": 3556
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/external-integrations.service.ts",
        "start": 297,
        "end": 309,
        "startLoc": {
          "line": 297,
          "column": 7,
          "position": 2702
        },
        "endLoc": {
          "line": 309,
          "column": 6,
          "position": 2791
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "),\n  attachments: z.array(z.object({\n    id: z.string(),\n    name: z.string(),\n    url: z.string().url(),\n    size: z.number(),\n    type: z.string()\n  })).default([]),\n  isRead",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/services/customer-support.service.ts",
        "start": 63,
        "end": 71,
        "startLoc": {
          "line": 63,
          "column": 7,
          "position": 667
        },
        "endLoc": {
          "line": 71,
          "column": 7,
          "position": 755
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/customer-support.service.ts",
        "start": 44,
        "end": 52,
        "startLoc": {
          "line": 44,
          "column": 2,
          "position": 412
        },
        "endLoc": {
          "line": 52,
          "column": 9,
          "position": 500
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "),\n  author: z.string().min(1),\n  language: z.string().default('es'),\n  keywords: z.array(z.string()).default([]),\n  customFields: z.record(z.any()).default({}),\n  seo",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/services/content-management.service.ts",
        "start": 38,
        "end": 43,
        "startLoc": {
          "line": 38,
          "column": 2,
          "position": 276
        },
        "endLoc": {
          "line": 43,
          "column": 4,
          "position": 356
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/document-management.service.ts",
        "start": 36,
        "end": 41,
        "startLoc": {
          "line": 36,
          "column": 2,
          "position": 254
        },
        "endLoc": {
          "line": 41,
          "column": 14,
          "position": 334
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "(),\n  changes: z.string().optional(),\n  createdBy: z.string().uuid(),\n  createdAt: z.date(),\n  isActive: z.boolean().default(true)\n});\n\nexport const ContentSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/services/content-management.service.ts",
        "start": 72,
        "end": 79,
        "startLoc": {
          "line": 72,
          "column": 9,
          "position": 762
        },
        "endLoc": {
          "line": 79,
          "column": 14,
          "position": 831
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/document-management.service.ts",
        "start": 61,
        "end": 68,
        "startLoc": {
          "line": 61,
          "column": 7,
          "position": 604
        },
        "endLoc": {
          "line": 68,
          "column": 15,
          "position": 673
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ")\n  }).optional(),\n  createdAt: z.date(),\n  updatedAt: z.date(),\n  createdBy: z.string().uuid(),\n  updatedBy: z.string().uuid()\n});\n\nexport const ContentSearchSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/services/content-management.service.ts",
        "start": 114,
        "end": 122,
        "startLoc": {
          "line": 114,
          "column": 2,
          "position": 1355
        },
        "endLoc": {
          "line": 122,
          "column": 20,
          "position": 1426
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/document-management.service.ts",
        "start": 95,
        "end": 103,
        "startLoc": {
          "line": 95,
          "column": 6,
          "position": 1054
        },
        "endLoc": {
          "line": 103,
          "column": 21,
          "position": 1125
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "]),\n    direction: z.enum(['asc', 'desc'])\n  }).optional(),\n  pagination: z.object({\n    page: z.number().min(1).default(1),\n    limit: z.number().min(1).max(100).default(20)\n  }).optional()\n});\n\nexport type ContentType",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/services/content-management.service.ts",
        "start": 139,
        "end": 148,
        "startLoc": {
          "line": 139,
          "column": 13,
          "position": 1690
        },
        "endLoc": {
          "line": 148,
          "column": 12,
          "position": 1792
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/document-management.service.ts",
        "start": 121,
        "end": 130,
        "startLoc": {
          "line": 121,
          "column": 7,
          "position": 1383
        },
        "endLoc": {
          "line": 130,
          "column": 13,
          "position": 1485
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ": Map<string, Set<string>> = new Map();\n  private searchCache: Map<string, any> = new Map();\n  private readonly CACHE_TTL = 5 * 60 * 1000; // 5 minutes\n\n  constructor() {\n    this.db = getDatabaseService();\n    this.initializeService();\n  }\n\n  private async initializeService(): Promise<void> {\n    try {\n      structuredLogger.info('Initializing Content Management Service'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/services/content-management.service.ts",
        "start": 163,
        "end": 174,
        "startLoc": {
          "line": 163,
          "column": 13,
          "position": 1971
        },
        "endLoc": {
          "line": 174,
          "column": 42,
          "position": 2096
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/document-management.service.ts",
        "start": 145,
        "end": 156,
        "startLoc": {
          "line": 145,
          "column": 14,
          "position": 1664
        },
        "endLoc": {
          "line": 156,
          "column": 43,
          "position": 1789
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "[];\n    total: number;\n    page: number;\n    limit: number;\n  }> {\n    try {\n      const cacheKey = `search:${organizationId}:${JSON.stringify(searchParams)}`;\n      const cached = this.searchCache.get(cacheKey);\n      \n      if (cached && Date.now() - cached.timestamp < this.CACHE_TTL) {\n        return cached.result;\n      }\n\n      let contents",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/services/content-management.service.ts",
        "start": 554,
        "end": 567,
        "startLoc": {
          "line": 554,
          "column": 8,
          "position": 4520
        },
        "endLoc": {
          "line": 567,
          "column": 9,
          "position": 4642
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/document-management.service.ts",
        "start": 485,
        "end": 498,
        "startLoc": {
          "line": 485,
          "column": 9,
          "position": 3826
        },
        "endLoc": {
          "line": 498,
          "column": 10,
          "position": 3948
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ".slice(startIndex, endIndex),\n        total,\n        page,\n        limit\n      };\n\n      // Cache result\n      this.searchCache.set(cacheKey, {\n        result,\n        timestamp: Date.now()\n      });\n\n      return result;\n    } catch (error) {\n      structuredLogger.error('Failed to search content'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/services/content-management.service.ts",
        "start": 673,
        "end": 687,
        "startLoc": {
          "line": 673,
          "column": 9,
          "position": 5855
        },
        "endLoc": {
          "line": 687,
          "column": 27,
          "position": 5938
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/document-management.service.ts",
        "start": 598,
        "end": 612,
        "startLoc": {
          "line": 598,
          "column": 10,
          "position": 5030
        },
        "endLoc": {
          "line": 612,
          "column": 29,
          "position": 5113
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "{\n      content: this.generateChatResponse(messages),\n      usage: {\n        promptTokens: Math.floor(Math.random() * 100) + 50,\n        completionTokens: Math.floor(Math.random() * 200) + 100,\n        totalTokens: 0\n      },\n      finishReason: 'stop',\n      model: 'gpt-4o-mini-demo'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/services/azure-openai.service.ts",
        "start": 302,
        "end": 310,
        "startLoc": {
          "line": 302,
          "column": 2,
          "position": 2530
        },
        "endLoc": {
          "line": 310,
          "column": 19,
          "position": 2619
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/azure-openai.service.ts",
        "start": 237,
        "end": 245,
        "startLoc": {
          "line": 237,
          "column": 2,
          "position": 1887
        },
        "endLoc": {
          "line": 245,
          "column": 5,
          "position": 1976
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "${request.prompt}`,\n      usage: {\n        promptTokens: Math.floor(Math.random() * 50) + 25,\n        completionTokens: Math.floor(Math.random() * 50) + 25,\n        totalTokens: 0\n      },\n      timestamp: new Date()\n    };\n  }\n\n  private generateDemoTTSResponse",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/services/azure-openai.service.ts",
        "start": 318,
        "end": 328,
        "startLoc": {
          "line": 318,
          "column": 8,
          "position": 2673
        },
        "endLoc": {
          "line": 328,
          "column": 24,
          "position": 2766
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/azure-openai.service.ts",
        "start": 257,
        "end": 267,
        "startLoc": {
          "line": 257,
          "column": 12,
          "position": 2081
        },
        "endLoc": {
          "line": 267,
          "column": 6,
          "position": 2174
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "{\n        id: row.id,\n        name: row.name,\n        description: row.description,\n        type: row.type,\n        rules: row.rules,\n        severity: row.severity,\n        isActive: row.is_active,\n        createdAt: row.created_at,\n        updatedAt: row.updated_at\n      }))",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/services/ai-security-compliance.service.ts",
        "start": 311,
        "end": 321,
        "startLoc": {
          "line": 311,
          "column": 2,
          "position": 2596
        },
        "endLoc": {
          "line": 321,
          "column": 2,
          "position": 2681
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/ai-security-compliance.service.ts",
        "start": 218,
        "end": 228,
        "startLoc": {
          "line": 218,
          "column": 2,
          "position": 1709
        },
        "endLoc": {
          "line": 228,
          "column": 2,
          "position": 1794
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "};\n\n      const healthyServices = Object.values(services).filter(Boolean).length;\n      const totalServices = Object.keys(services).length;\n      \n      let status: 'healthy' | 'degraded' | 'unhealthy';\n      if (healthyServices === totalServices) {\n        status = 'healthy';\n      } else if (healthyServices >= totalServices * 0.5",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/services/ai-security-compliance.service.ts",
        "start": 890,
        "end": 898,
        "startLoc": {
          "line": 890,
          "column": 7,
          "position": 7569
        },
        "endLoc": {
          "line": 898,
          "column": 4,
          "position": 7668
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/basic-ai/basic-ai.service.ts",
        "start": 484,
        "end": 492,
        "startLoc": {
          "line": 484,
          "column": 5,
          "position": 3708
        },
        "endLoc": {
          "line": 492,
          "column": 4,
          "position": 3807
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "{\n        id: row.id,\n        name: row.name,\n        description: row.description,\n        condition: row.condition,\n        action: row.action,\n        isActive: row.is_active,\n        createdAt: row.created_at,\n        updatedAt: row.updated_at\n      }))",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/services/ai-performance-optimization.service.ts",
        "start": 494,
        "end": 503,
        "startLoc": {
          "line": 494,
          "column": 2,
          "position": 3972
        },
        "endLoc": {
          "line": 503,
          "column": 2,
          "position": 4048
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/ai-performance-optimization.service.ts",
        "start": 203,
        "end": 212,
        "startLoc": {
          "line": 203,
          "column": 2,
          "position": 1605
        },
        "endLoc": {
          "line": 212,
          "column": 2,
          "position": 1681
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ".size >= 0\n      };\n\n      const healthyServices = Object.values(services).filter(Boolean).length;\n      const totalServices = Object.keys(services).length;\n      \n      let status: 'healthy' | 'degraded' | 'unhealthy';\n      if (healthyServices === totalServices) {\n        status = 'healthy';\n      } else if (healthyServices >= totalServices * 0.5) {\n        status = 'degraded';\n      } else {\n        status = 'unhealthy';\n      }\n\n      return {\n        status,\n        services,\n        lastCheck: new Date()\n      };\n    } catch (error: any) {\n      logger.error('Health check failed', { error: error.message });\n      return {\n        status: 'unhealthy',\n        services: { database: false, monitoring",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/services/ai-performance-optimization.service.ts",
        "start": 878,
        "end": 902,
        "startLoc": {
          "line": 878,
          "column": 12,
          "position": 7457
        },
        "endLoc": {
          "line": 902,
          "column": 11,
          "position": 7682
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/ai-security-compliance.service.ts",
        "start": 889,
        "end": 913,
        "startLoc": {
          "line": 889,
          "column": 16,
          "position": 7561
        },
        "endLoc": {
          "line": 913,
          "column": 9,
          "position": 7786
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ": false },\n        lastCheck: new Date()\n      };\n    }\n  }\n\n  private async checkDatabaseHealth(): Promise<boolean> {\n    try {\n      await this.db.query('SELECT 1');\n      return true;\n    } catch {\n      return false;\n    }\n  }\n}\n\nexport const aiPerformanceOptimizationService",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/services/ai-performance-optimization.service.ts",
        "start": 902,
        "end": 918,
        "startLoc": {
          "line": 902,
          "column": 7,
          "position": 7689
        },
        "endLoc": {
          "line": 918,
          "column": 33,
          "position": 7784
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/ai-security-compliance.service.ts",
        "start": 913,
        "end": 929,
        "startLoc": {
          "line": 913,
          "column": 11,
          "position": 7793
        },
        "endLoc": {
          "line": 929,
          "column": 28,
          "position": 7888
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "> = new Map();\n  private isInitialized: boolean = false;\n\n  constructor() {\n    this.db = getDatabaseService();\n    this.initializeService();\n  }\n\n  private async initializeService(): Promise<void> {\n    try {\n      structuredLogger.info('Initializing AI Model Management Service'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/services/ai-model-management.service.ts",
        "start": 197,
        "end": 207,
        "startLoc": {
          "line": 197,
          "column": 12,
          "position": 1487
        },
        "endLoc": {
          "line": 207,
          "column": 43,
          "position": 1570
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/ai-training.service.ts",
        "start": 126,
        "end": 136,
        "startLoc": {
          "line": 126,
          "column": 17,
          "position": 1005
        },
        "endLoc": {
          "line": 136,
          "column": 44,
          "position": 1088
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "import { z } from 'zod';\nimport { logger } from '../lib/logger';\nimport { db } from '../lib/db';\nimport { eq, desc, gte, and } from 'drizzle-orm';\nimport { \n  aiCostOptimization, \n  aiCostPrediction, \n  aiAnalytics, \n  aiModelManagement,\n  aiTrainingJobs,\n  aiSecurityCompliance,\n  aiPerformanceOptimization\n} from '../lib/schema';\n\n// Schemas de validación\nconst DashboardMetricsSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/services/ai-dashboard-consolidation.service.ts",
        "start": 1,
        "end": 16,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 16,
          "column": 23,
          "position": 108
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/cockpit-integration.service.ts",
        "start": 1,
        "end": 16,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 16,
          "column": 26,
          "position": 108
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ");\n\n    return {\n      department: input.department,\n      timestamp: now,\n      agents,\n      kpis: {\n        totalCost: costMetrics.totalCost,\n        totalTokens: costMetrics.totalTokens,\n        averageLatency: costMetrics.averageLatency,\n        successRate: costMetrics.successRate,\n        activeAgents: agents.filter(a => a.status === 'active').length,\n        errorRate: costMetrics.errorRate,\n      },\n      timeline",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/services/ai-dashboard-consolidation.service.ts",
        "start": 283,
        "end": 297,
        "startLoc": {
          "line": 283,
          "column": 6,
          "position": 2338
        },
        "endLoc": {
          "line": 297,
          "column": 9,
          "position": 2447
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/ai-dashboard-consolidation.service.ts",
        "start": 251,
        "end": 265,
        "startLoc": {
          "line": 251,
          "column": 11,
          "position": 2064
        },
        "endLoc": {
          "line": 265,
          "column": 12,
          "position": 2173
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": "const costData = await db.select()\n        .from(aiCostOptimization)\n        .where(and(\n          eq(aiCostOptimization.department, department),\n          gte(aiCostOptimization.createdAt, since)\n        ))\n        .orderBy(desc(aiCostOptimization.createdAt))\n        .limit(100);\n\n      const totalCost = costData.reduce((sum, record) => sum + (record.costSavings || 0), 0);\n      const totalTokens = costData.reduce((sum, record) => sum + (record.tokensUsed || 0), 0);\n      const averageLatency = costData.reduce((sum, record) => sum + (record.latencyMs || 0), 0) / costData.length || 0;\n      const successRate = costData.filter(r => r.status === 'success').length / costData.length || 0;\n      const errorRate = costData.filter(r => r.status === 'error').length / costData.length || 0;\n\n      return {\n        totalCost,\n        totalTokens,\n        averageLatency,\n        successRate,\n        errorRate,\n      };\n    } catch (error) {\n      logger.error('Error getting cost metrics'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/services/ai-dashboard-consolidation.service.ts",
        "start": 307,
        "end": 330,
        "startLoc": {
          "line": 307,
          "column": 7,
          "position": 2491
        },
        "endLoc": {
          "line": 330,
          "column": 29,
          "position": 2814
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/cockpit-integration.service.ts",
        "start": 434,
        "end": 457,
        "startLoc": {
          "line": 434,
          "column": 7,
          "position": 3711
        },
        "endLoc": {
          "line": 457,
          "column": 26,
          "position": 4034
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "(department: string) {\n    try {\n      const predictionData = await db.select()\n        .from(aiCostPrediction)\n        .where(eq(aiCostPrediction.department, department))\n        .orderBy(desc(aiCostPrediction.createdAt))\n        .limit(1);\n\n      if (predictionData.length === 0) {\n        return undefined",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/services/ai-dashboard-consolidation.service.ts",
        "start": 344,
        "end": 353,
        "startLoc": {
          "line": 344,
          "column": 21,
          "position": 2888
        },
        "endLoc": {
          "line": 353,
          "column": 10,
          "position": 2978
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/cockpit-integration.service.ts",
        "start": 471,
        "end": 480,
        "startLoc": {
          "line": 471,
          "column": 18,
          "position": 4108
        },
        "endLoc": {
          "line": 480,
          "column": 2,
          "position": 4198
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ";\n      }\n\n      const latest = predictionData[0];\n      return {\n        costForecast: {\n          optimistic: latest.optimisticForecast || 0,\n          base: latest.baseForecast || 0,\n          pessimistic: latest.pessimisticForecast || 0,\n        },\n        usageForecast: {\n          tokens: latest.predictedTokens || 0,\n          calls: latest.predictedCalls || 0,\n        },\n        confidence: latest.confidenceScore || 0,\n      };\n    } catch (error) {\n      logger.error('Error getting prediction metrics'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/services/ai-dashboard-consolidation.service.ts",
        "start": 353,
        "end": 370,
        "startLoc": {
          "line": 353,
          "column": 10,
          "position": 2979
        },
        "endLoc": {
          "line": 370,
          "column": 35,
          "position": 3121
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/cockpit-integration.service.ts",
        "start": 484,
        "end": 501,
        "startLoc": {
          "line": 484,
          "column": 2,
          "position": 4255
        },
        "endLoc": {
          "line": 501,
          "column": 32,
          "position": 4397
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "(department: string) {\n    try {\n      const optimizationData = await db.select()\n        .from(aiCostOptimization)\n        .where(eq(aiCostOptimization.department, department))\n        .orderBy(desc(aiCostOptimization.createdAt))\n        .limit(10);\n\n      const activeRules = optimizationData.filter(r => r.status === 'active').length;\n      const savings = optimizationData.reduce((sum, r) => sum + (r.costSavings || 0), 0);\n      const recommendations = optimizationData\n        .filter(r => r.recommendations)\n        .map(r => r.recommendations)\n        .slice(0, 5);\n\n      return {\n        activeRules,\n        savings,\n        recommendations: recommendations as string[],\n      };\n    } catch (error) {\n      logger.error('Error getting optimization metrics'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/services/ai-dashboard-consolidation.service.ts",
        "start": 378,
        "end": 399,
        "startLoc": {
          "line": 378,
          "column": 23,
          "position": 3157
        },
        "endLoc": {
          "line": 399,
          "column": 37,
          "position": 3388
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/cockpit-integration.service.ts",
        "start": 513,
        "end": 534,
        "startLoc": {
          "line": 513,
          "column": 20,
          "position": 4489
        },
        "endLoc": {
          "line": 534,
          "column": 34,
          "position": 4720
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "(department: string) {\n    try {\n      const securityData = await db.select()\n        .from(aiSecurityCompliance)\n        .where(eq(aiSecurityCompliance.department, department))\n        .orderBy(desc(aiSecurityCompliance.createdAt))\n        .limit(1);\n\n      if (securityData.length === 0) {\n        return undefined",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/services/ai-dashboard-consolidation.service.ts",
        "start": 407,
        "end": 416,
        "startLoc": {
          "line": 407,
          "column": 19,
          "position": 3424
        },
        "endLoc": {
          "line": 416,
          "column": 10,
          "position": 3514
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/cockpit-integration.service.ts",
        "start": 546,
        "end": 555,
        "startLoc": {
          "line": 546,
          "column": 16,
          "position": 4781
        },
        "endLoc": {
          "line": 555,
          "column": 2,
          "position": 4871
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ";\n      }\n\n      const latest = securityData[0];\n      return {\n        complianceScore: latest.complianceScore || 0,\n        activePolicies: latest.activePolicies || 0,\n        incidents: latest.securityIncidents || 0,\n        lastAudit: latest.lastAuditDate || new Date(),\n      };\n    } catch (error) {\n      logger.error('Error getting security metrics'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/services/ai-dashboard-consolidation.service.ts",
        "start": 416,
        "end": 427,
        "startLoc": {
          "line": 416,
          "column": 10,
          "position": 3515
        },
        "endLoc": {
          "line": 427,
          "column": 33,
          "position": 3615
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/cockpit-integration.service.ts",
        "start": 560,
        "end": 571,
        "startLoc": {
          "line": 560,
          "column": 2,
          "position": 4907
        },
        "endLoc": {
          "line": 571,
          "column": 30,
          "position": 5007
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "{\n          tokens: Math.floor(Math.random() * 1000) + 100,\n          cost: Math.random() * 10 + 1,\n          latency: Math.floor(Math.random() * 500) + 100,\n          calls: Math.floor(Math.random() * 50) + 10,\n        },",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/services/ai-dashboard-consolidation.service.ts",
        "start": 498,
        "end": 503,
        "startLoc": {
          "line": 498,
          "column": 2,
          "position": 4226
        },
        "endLoc": {
          "line": 503,
          "column": 2,
          "position": 4321
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/cockpit-integration.service.ts",
        "start": 276,
        "end": 281,
        "startLoc": {
          "line": 276,
          "column": 2,
          "position": 2297
        },
        "endLoc": {
          "line": 281,
          "column": 2,
          "position": 2392
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "{\n          tokens: Math.floor(Math.random() * 800) + 50,\n          cost: Math.random() * 8 + 0.5,\n          latency: Math.floor(Math.random() * 400) + 80,\n          calls: Math.floor(Math.random() * 30) + 5,\n        },",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/services/ai-dashboard-consolidation.service.ts",
        "start": 510,
        "end": 515,
        "startLoc": {
          "line": 510,
          "column": 2,
          "position": 4388
        },
        "endLoc": {
          "line": 515,
          "column": 2,
          "position": 4483
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/cockpit-integration.service.ts",
        "start": 286,
        "end": 291,
        "startLoc": {
          "line": 286,
          "column": 2,
          "position": 2431
        },
        "endLoc": {
          "line": 291,
          "column": 2,
          "position": 2526
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "}\n\n  /**\n   * Convierte timeframe a milisegundos\n   */\n  private getTimeframeMs(timeframe: string): number {\n    switch (timeframe) {\n      case '1h': return 60 * 60 * 1000;\n      case '24h': return 24 * 60 * 60 * 1000;\n      case '7d': return 7 * 24 * 60 * 60 * 1000;\n      case '30d': return 30 * 24 * 60 * 60 * 1000;\n      default: return 24 * 60 * 60 * 1000;\n    }\n  }\n\n  /**\n   * Notifica a conexiones WebSocket\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/services/ai-dashboard-consolidation.service.ts",
        "start": 524,
        "end": 541,
        "startLoc": {
          "line": 524,
          "column": 3,
          "position": 4535
        },
        "endLoc": {
          "line": 541,
          "column": 6,
          "position": 4691
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/cockpit-integration.service.ts",
        "start": 698,
        "end": 712,
        "startLoc": {
          "line": 698,
          "column": 3,
          "position": 5882
        },
        "endLoc": {
          "line": 712,
          "column": 2,
          "position": 6036
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "{\n        id: row.id,\n        name: row.name,\n        description: row.description,\n        type: row.type,\n        algorithm: row.algorithm,\n        features: row.features,\n        hyperparameters: row.hyperparameters,\n        accuracy: parseFloat(row.accuracy),\n        mae: parseFloat(row.mae),\n        mse: parseFloat(row.mse),\n        rmse: parseFloat(row.rmse),\n        r2Score: parseFloat(row.r2_score),\n        isActive: row.is_active,\n        lastTrained: row.last_trained,\n        createdAt: row.created_at,\n        updatedAt: row.updated_at\n      }))",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/services/ai-cost-prediction.service.ts",
        "start": 346,
        "end": 363,
        "startLoc": {
          "line": 346,
          "column": 2,
          "position": 2879
        },
        "endLoc": {
          "line": 363,
          "column": 2,
          "position": 3042
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/ai-cost-prediction.service.ts",
        "start": 228,
        "end": 245,
        "startLoc": {
          "line": 228,
          "column": 2,
          "position": 1868
        },
        "endLoc": {
          "line": 245,
          "column": 2,
          "position": 2031
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": "};\n\n      const healthyServices = Object.values(services).filter(Boolean).length;\n      const totalServices = Object.keys(services).length;\n      \n      let status: 'healthy' | 'degraded' | 'unhealthy';\n      if (healthyServices === totalServices) {\n        status = 'healthy';\n      } else if (healthyServices >= totalServices * 0.5) {\n        status = 'degraded';\n      } else {\n        status = 'unhealthy';\n      }\n\n      return {\n        status,\n        services,\n        lastCheck: new Date()\n      };\n    } catch (error: any) {\n      logger.error('Health check failed', { error: error.message });\n      return {\n        status: 'unhealthy',\n        services: { database: false, models",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/services/ai-cost-prediction.service.ts",
        "start": 943,
        "end": 966,
        "startLoc": {
          "line": 943,
          "column": 7,
          "position": 8582
        },
        "endLoc": {
          "line": 966,
          "column": 7,
          "position": 8799
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/basic-ai/basic-ai.service.ts",
        "start": 484,
        "end": 913,
        "startLoc": {
          "line": 484,
          "column": 5,
          "position": 3708
        },
        "endLoc": {
          "line": 913,
          "column": 9,
          "position": 7786
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ": false },\n        lastCheck: new Date()\n      };\n    }\n  }\n\n  private async checkDatabaseHealth(): Promise<boolean> {\n    try {\n      await this.db.query('SELECT 1');\n      return true;\n    } catch {\n      return false;\n    }\n  }\n}\n\nexport const aiCostPredictionService",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/services/ai-cost-prediction.service.ts",
        "start": 966,
        "end": 982,
        "startLoc": {
          "line": 966,
          "column": 11,
          "position": 8812
        },
        "endLoc": {
          "line": 982,
          "column": 24,
          "position": 8907
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/ai-security-compliance.service.ts",
        "start": 913,
        "end": 929,
        "startLoc": {
          "line": 913,
          "column": 11,
          "position": 7793
        },
        "endLoc": {
          "line": 929,
          "column": 28,
          "position": 7888
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "(userRoles: UserRole[], permission: string): { allowed: boolean; matchedRules: string[] } {\n    const matchedRules: string[] = [];\n\n    for (const userRole of userRoles) {\n      const role = this.roles.get(userRole.roleId);\n      if (role) {\n        for",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/security/rbac.service.ts",
        "start": 641,
        "end": 647,
        "startLoc": {
          "line": 641,
          "column": 25,
          "position": 5985
        },
        "endLoc": {
          "line": 647,
          "column": 4,
          "position": 6081
        }
      },
      "secondFile": {
        "name": "apps/api/src/security/rbac.service.ts",
        "start": 625,
        "end": 631,
        "startLoc": {
          "line": 625,
          "column": 22,
          "position": 5802
        },
        "endLoc": {
          "line": 631,
          "column": 3,
          "position": 5898
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", {\n        error: error instanceof Error ? error.message : String(error)\n      });\n    }\n  }\n\n  private cleanupExpiredSessions(): void {\n    const now = new Date();\n    const expiredSessions: string[] = [];\n\n    for (const [sessionId, session] of this.activeSessions.entries()) {\n      if",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/security/mfa.service.ts",
        "start": 773,
        "end": 784,
        "startLoc": {
          "line": 773,
          "column": 24,
          "position": 5595
        },
        "endLoc": {
          "line": 784,
          "column": 3,
          "position": 5704
        }
      },
      "secondFile": {
        "name": "apps/api/src/security/security-manager.service.ts",
        "start": 776,
        "end": 787,
        "startLoc": {
          "line": 776,
          "column": 29,
          "position": 5826
        },
        "endLoc": {
          "line": 787,
          "column": 6,
          "position": 5935
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "),\n  organizationId: z.string().min(1, 'Organization ID is required'),\n  priority: z.enum(['low', 'normal', 'high', 'urgent']).optional().default('normal'),\n  metadata: z.record(z.any()).optional()\n});\n\nconst cronJobSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/workers-integration.ts",
        "start": 23,
        "end": 29,
        "startLoc": {
          "line": 23,
          "column": 38,
          "position": 214
        },
        "endLoc": {
          "line": 29,
          "column": 14,
          "position": 294
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/workers-integration.ts",
        "start": 16,
        "end": 22,
        "startLoc": {
          "line": 16,
          "column": 25,
          "position": 98
        },
        "endLoc": {
          "line": 22,
          "column": 26,
          "position": 178
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      body: req.body\n    });\n\n    if (error instanceof z.ZodError) {\n      res.status(400).json({\n        success: false,\n        error: 'Invalid request data',\n        details: error.errors,\n        timestamp: new Date().toISOString()\n      });\n    } else {\n      res.status(500).json({\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error',\n        timestamp: new Date().toISOString()\n      });\n    }\n  }\n});\n\n/**\n * Manage cron jobs\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/workers-integration.ts",
        "start": 137,
        "end": 161,
        "startLoc": {
          "line": 137,
          "column": 53,
          "position": 1200
        },
        "endLoc": {
          "line": 161,
          "column": 4,
          "position": 1385
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/workers-integration.ts",
        "start": 71,
        "end": 95,
        "startLoc": {
          "line": 71,
          "column": 47,
          "position": 645
        },
        "endLoc": {
          "line": 95,
          "column": 4,
          "position": 830
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ",\n          result: result.result,\n          serviceId: result.serviceId,\n          responseTime: result.responseTime\n        },\n        timestamp: new Date().toISOString()\n      });\n    } else {\n      res.status(500).json({\n        success: false,\n        error: result.error,\n        jobId",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/workers-integration.ts",
        "start": 179,
        "end": 190,
        "startLoc": {
          "line": 179,
          "column": 7,
          "position": 1538
        },
        "endLoc": {
          "line": 190,
          "column": 6,
          "position": 1625
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/workers-integration.ts",
        "start": 54,
        "end": 65,
        "startLoc": {
          "line": 54,
          "column": 10,
          "position": 510
        },
        "endLoc": {
          "line": 65,
          "column": 10,
          "position": 597
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      body: req.body\n    });\n\n    if (error instanceof z.ZodError) {\n      res.status(400).json({\n        success: false,\n        error: 'Invalid request data',\n        details: error.errors,\n        timestamp: new Date().toISOString()\n      });\n    } else {\n      res.status(500).json({\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error',\n        timestamp: new Date().toISOString()\n      });\n    }\n  }\n});\n\n/**\n * Get workers health status\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/workers-integration.ts",
        "start": 196,
        "end": 220,
        "startLoc": {
          "line": 196,
          "column": 49,
          "position": 1673
        },
        "endLoc": {
          "line": 220,
          "column": 4,
          "position": 1858
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/workers-integration.ts",
        "start": 71,
        "end": 95,
        "startLoc": {
          "line": 71,
          "column": 47,
          "position": 645
        },
        "endLoc": {
          "line": 95,
          "column": 4,
          "position": 830
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error'\n    });\n\n    res.status(500).json({\n      success: false,\n      error: error instanceof Error ? error.message : 'Unknown error',\n      timestamp: new Date().toISOString()\n    });\n  }\n});\n\n/**\n * Webhook endpoint for receiving events from workers\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/workers-integration.ts",
        "start": 262,
        "end": 276,
        "startLoc": {
          "line": 262,
          "column": 39,
          "position": 2186
        },
        "endLoc": {
          "line": 276,
          "column": 4,
          "position": 2283
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/workers-integration.ts",
        "start": 236,
        "end": 250,
        "startLoc": {
          "line": 236,
          "column": 36,
          "position": 1989
        },
        "endLoc": {
          "line": 250,
          "column": 4,
          "position": 2086
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ",\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Error getting supplier performance', { error });\n    res.status(400).json({\n      success: false,\n      error: 'Invalid request data',\n      details: error.errors\n    });\n  }\n});\n\n// Comparison Management",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/supplier-scorecard.ts",
        "start": 308,
        "end": 321,
        "startLoc": {
          "line": 308,
          "column": 12,
          "position": 3659
        },
        "endLoc": {
          "line": 321,
          "column": 25,
          "position": 3754
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/supplier-scorecard.ts",
        "start": 279,
        "end": 292,
        "startLoc": {
          "line": 279,
          "column": 2,
          "position": 3365
        },
        "endLoc": {
          "line": 292,
          "column": 24,
          "position": 3460
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "]).optional(),\n  startDate: z.string().datetime().optional(),\n  endDate: z.string().datetime().optional(),\n  limit: z.coerce.number().int().positive().max(100).default(50).optional(),\n});\n\nconst CreateReceiptSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/stripe-receipts.ts",
        "start": 12,
        "end": 18,
        "startLoc": {
          "line": 12,
          "column": 16,
          "position": 144
        },
        "endLoc": {
          "line": 18,
          "column": 20,
          "position": 232
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/supplier-scorecard.ts",
        "start": 76,
        "end": 82,
        "startLoc": {
          "line": 76,
          "column": 11,
          "position": 1223
        },
        "endLoc": {
          "line": 82,
          "column": 23,
          "position": 1311
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "),\n  startDate: z.string().datetime(),\n  endDate: z.string().datetime(),\n  generatedBy: z.string().min(1),\n});\n\nconst GetStatsSchema = z.object({\n  organizationId: z.string().min(1),\n});\n\n// Routes",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/stripe-receipts.ts",
        "start": 72,
        "end": 82,
        "startLoc": {
          "line": 72,
          "column": 2,
          "position": 936
        },
        "endLoc": {
          "line": 82,
          "column": 10,
          "position": 1023
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/supplier-scorecard.ts",
        "start": 134,
        "end": 144,
        "startLoc": {
          "line": 134,
          "column": 2,
          "position": 2127
        },
        "endLoc": {
          "line": 144,
          "column": 6,
          "position": 2214
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ");\n    \n    if (!receipt) {\n      return res.status(404).json({\n        success: false,\n        error: 'Receipt not found'\n      });\n    }\n    \n    res.json({\n      success: true,\n      data: receipt,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Error reconciling Stripe receipt'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/stripe-receipts.ts",
        "start": 190,
        "end": 205,
        "startLoc": {
          "line": 190,
          "column": 5,
          "position": 1959
        },
        "endLoc": {
          "line": 205,
          "column": 35,
          "position": 2067
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/stripe-receipts.ts",
        "start": 113,
        "end": 128,
        "startLoc": {
          "line": 113,
          "column": 3,
          "position": 1310
        },
        "endLoc": {
          "line": 128,
          "column": 31,
          "position": 1418
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ",\n      reportData.startDate,\n      reportData.endDate,\n      reportData.generatedBy\n    );\n    \n    res.status(201).json({\n      success: true,\n      data: report,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Error generating reconciliation report'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/stripe-receipts.ts",
        "start": 285,
        "end": 297,
        "startLoc": {
          "line": 285,
          "column": 15,
          "position": 2792
        },
        "endLoc": {
          "line": 297,
          "column": 41,
          "position": 2878
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/supplier-scorecard.ts",
        "start": 377,
        "end": 389,
        "startLoc": {
          "line": 377,
          "column": 11,
          "position": 4307
        },
        "endLoc": {
          "line": 389,
          "column": 35,
          "position": 4393
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "{\n        total: serviceHealth.length,\n        healthy: serviceHealth.filter(s => s.status === 'healthy').length,\n        degraded: serviceHealth.filter(s => s.status === 'degraded').length,\n        unhealthy: serviceHealth.filter(s => s.status === 'unhealthy').length\n      }",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/status.ts",
        "start": 210,
        "end": 215,
        "startLoc": {
          "line": 210,
          "column": 2,
          "position": 1852
        },
        "endLoc": {
          "line": 215,
          "column": 2,
          "position": 1935
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/status.ts",
        "start": 82,
        "end": 86,
        "startLoc": {
          "line": 82,
          "column": 2,
          "position": 719
        },
        "endLoc": {
          "line": 86,
          "column": 2,
          "position": 800
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "total: serviceHealth.length,\n          healthy: serviceHealth.filter(s => s.status === 'healthy').length,\n          degraded: serviceHealth.filter(s => s.status === 'degraded').length,\n          unhealthy: serviceHealth.filter(s => s.status === 'unhealthy').length\n        }\n      }",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/status.ts",
        "start": 436,
        "end": 441,
        "startLoc": {
          "line": 436,
          "column": 11,
          "position": 3544
        },
        "endLoc": {
          "line": 441,
          "column": 2,
          "position": 3627
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/status.ts",
        "start": 83,
        "end": 215,
        "startLoc": {
          "line": 83,
          "column": 9,
          "position": 722
        },
        "endLoc": {
          "line": 215,
          "column": 2,
          "position": 1936
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "]),\n    direction: z.enum(['asc', 'desc'])\n  }).optional(),\n  pagination: z.object({\n    page: z.number().min(1).default(1),\n    limit: z.number().min(1).max(100).default(20)\n  }).optional()\n});\n\n// ============================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/social-media-management.ts",
        "start": 127,
        "end": 136,
        "startLoc": {
          "line": 127,
          "column": 14,
          "position": 1627
        },
        "endLoc": {
          "line": 136,
          "column": 80,
          "position": 1725
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/document-management.service.ts",
        "start": 121,
        "end": 130,
        "startLoc": {
          "line": 121,
          "column": 7,
          "position": 1383
        },
        "endLoc": {
          "line": 130,
          "column": 7,
          "position": 1481
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ",\n      organizationId: req.user?.organizationId\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to update social account'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/social-media-management.ts",
        "start": 281,
        "end": 295,
        "startLoc": {
          "line": 281,
          "column": 3,
          "position": 2861
        },
        "endLoc": {
          "line": 295,
          "column": 34,
          "position": 2963
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/social-media-management.ts",
        "start": 172,
        "end": 186,
        "startLoc": {
          "line": 172,
          "column": 16,
          "position": 1994
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      organizationId: req.user?.organizationId\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to create social post'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/social-media-management.ts",
        "start": 363,
        "end": 378,
        "startLoc": {
          "line": 363,
          "column": 39,
          "position": 3452
        },
        "endLoc": {
          "line": 378,
          "column": 31,
          "position": 3577
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/social-media-management.ts",
        "start": 171,
        "end": 186,
        "startLoc": {
          "line": 171,
          "column": 42,
          "position": 1971
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      organizationId: req.user?.organizationId\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to list social posts'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/social-media-management.ts",
        "start": 407,
        "end": 422,
        "startLoc": {
          "line": 407,
          "column": 38,
          "position": 3836
        },
        "endLoc": {
          "line": 422,
          "column": 30,
          "position": 3961
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/social-media-management.ts",
        "start": 171,
        "end": 186,
        "startLoc": {
          "line": 171,
          "column": 42,
          "position": 1971
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ": req.params.id,\n      organizationId: req.user?.organizationId\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to update social post'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/social-media-management.ts",
        "start": 484,
        "end": 498,
        "startLoc": {
          "line": 484,
          "column": 7,
          "position": 4453
        },
        "endLoc": {
          "line": 498,
          "column": 31,
          "position": 4562
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/social-media-management.ts",
        "start": 281,
        "end": 186,
        "startLoc": {
          "line": 281,
          "column": 10,
          "position": 2854
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n    \n    logger.error('Failed to create SEPA transaction'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/sepa.ts",
        "start": 123,
        "end": 133,
        "startLoc": {
          "line": 123,
          "column": 5,
          "position": 1061
        },
        "endLoc": {
          "line": 133,
          "column": 36,
          "position": 1142
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/sepa.ts",
        "start": 39,
        "end": 49,
        "startLoc": {
          "line": 39,
          "column": 5,
          "position": 369
        },
        "endLoc": {
          "line": 49,
          "column": 34,
          "position": 450
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ".json({\n      success: true,\n      data: transaction\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n    \n    logger.error('Failed to update SEPA transaction'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/sepa.ts",
        "start": 171,
        "end": 184,
        "startLoc": {
          "line": 171,
          "column": 4,
          "position": 1475
        },
        "endLoc": {
          "line": 184,
          "column": 36,
          "position": 1575
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/sepa.ts",
        "start": 120,
        "end": 49,
        "startLoc": {
          "line": 120,
          "column": 2,
          "position": 1042
        },
        "endLoc": {
          "line": 49,
          "column": 34,
          "position": 450
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "('/transactions/:id', async (req, res) => {\n  try {\n    const orgId = req.headers['x-org-id'] as string || 'demo-org-1';\n    const userId = req.headers['x-user-id'] as string || 'demo-user';\n    const { id } = req.params;\n    \n    const deleted",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/sepa.ts",
        "start": 199,
        "end": 205,
        "startLoc": {
          "line": 199,
          "column": 7,
          "position": 1679
        },
        "endLoc": {
          "line": 205,
          "column": 8,
          "position": 1768
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/sepa.ts",
        "start": 147,
        "end": 153,
        "startLoc": {
          "line": 147,
          "column": 4,
          "position": 1235
        },
        "endLoc": {
          "line": 153,
          "column": 5,
          "position": 1324
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "(orgId, userId, data);\n    \n    res.set({\n      'X-Est-Cost-EUR': '0.0020',\n      'X-Budget-Pct': '0.2',\n      'X-Latency-ms': '45',\n      'X-Route': 'local',\n      'X-Correlation-Id': `req_${Date.now()}`\n    });\n    \n    res.status(201).json({\n      success: true,\n      data: rule",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/sepa.ts",
        "start": 377,
        "end": 389,
        "startLoc": {
          "line": 377,
          "column": 19,
          "position": 3143
        },
        "endLoc": {
          "line": 389,
          "column": 5,
          "position": 3235
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/sepa.ts",
        "start": 110,
        "end": 122,
        "startLoc": {
          "line": 110,
          "column": 18,
          "position": 966
        },
        "endLoc": {
          "line": 122,
          "column": 12,
          "position": 1058
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n    \n    logger.error('Failed to create matching rule'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/sepa.ts",
        "start": 390,
        "end": 400,
        "startLoc": {
          "line": 390,
          "column": 5,
          "position": 3238
        },
        "endLoc": {
          "line": 400,
          "column": 33,
          "position": 3319
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/sepa.ts",
        "start": 39,
        "end": 49,
        "startLoc": {
          "line": 39,
          "column": 5,
          "position": 369
        },
        "endLoc": {
          "line": 49,
          "column": 34,
          "position": 450
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ").optional(),\n  startDate: z.string().datetime().optional(),\n  endDate: z.string().datetime().optional(),\n  limit: z.coerce.number().int().positive().max(100).default(50).optional(),\n});\n\nconst CreateTransactionSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/sepa-robust.ts",
        "start": 14,
        "end": 20,
        "startLoc": {
          "line": 14,
          "column": 2,
          "position": 187
        },
        "endLoc": {
          "line": 20,
          "column": 24,
          "position": 274
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/supplier-scorecard.ts",
        "start": 76,
        "end": 82,
        "startLoc": {
          "line": 76,
          "column": 2,
          "position": 1224
        },
        "endLoc": {
          "line": 82,
          "column": 23,
          "position": 1311
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "]),\n  startDate: z.string().datetime(),\n  endDate: z.string().datetime(),\n  generatedBy: z.string().min(1),\n});\n\nconst GetStatsSchema = z.object({\n  organizationId: z.string().min(1),\n});\n\n// Routes\n\n// Transaction Management",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/sepa-robust.ts",
        "start": 86,
        "end": 98,
        "startLoc": {
          "line": 86,
          "column": 20,
          "position": 1333
        },
        "endLoc": {
          "line": 98,
          "column": 26,
          "position": 1424
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/supplier-scorecard.ts",
        "start": 134,
        "end": 84,
        "startLoc": {
          "line": 134,
          "column": 17,
          "position": 2126
        },
        "endLoc": {
          "line": 84,
          "column": 55,
          "position": 1026
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "(\n      reportData.organizationId,\n      reportData.reportType,\n      reportData.startDate,\n      reportData.endDate,\n      reportData.generatedBy\n    );\n    \n    res.status(201).json({\n      success: true,\n      data: report,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Error generating SEPA robust report'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/sepa-robust.ts",
        "start": 264,
        "end": 278,
        "startLoc": {
          "line": 264,
          "column": 15,
          "position": 2870
        },
        "endLoc": {
          "line": 278,
          "column": 38,
          "position": 2968
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/supplier-scorecard.ts",
        "start": 375,
        "end": 389,
        "startLoc": {
          "line": 375,
          "column": 23,
          "position": 4295
        },
        "endLoc": {
          "line": 389,
          "column": 35,
          "position": 4393
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "),\n  searchableFields: z.object({\n    name: z.string().optional(),\n    email: z.string().email().optional(),\n    phone: z.string().optional(),\n    company: z.string().optional(),\n    description: z.string().optional(),\n    notes: z.string().optional(),\n    tags: z.array(z.string()).optional()\n  }).",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/semantic-search-crm.ts",
        "start": 74,
        "end": 83,
        "startLoc": {
          "line": 74,
          "column": 2,
          "position": 1159
        },
        "endLoc": {
          "line": 83,
          "column": 2,
          "position": 1288
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/semantic-search-crm.ts",
        "start": 25,
        "end": 35,
        "startLoc": {
          "line": 25,
          "column": 2,
          "position": 347
        },
        "endLoc": {
          "line": 35,
          "column": 2,
          "position": 477
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ");\n    \n    if (!document) {\n      return res.status(404).json({\n        success: false,\n        error: 'Document not found'\n      });\n    }\n    \n    res.json({\n      success: true,\n      data: document,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Error updating document'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/semantic-search-crm.ts",
        "start": 186,
        "end": 201,
        "startLoc": {
          "line": 186,
          "column": 8,
          "position": 2484
        },
        "endLoc": {
          "line": 201,
          "column": 26,
          "position": 2592
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/semantic-search-crm.ts",
        "start": 158,
        "end": 173,
        "startLoc": {
          "line": 158,
          "column": 11,
          "position": 2217
        },
        "endLoc": {
          "line": 173,
          "column": 25,
          "position": 2325
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ", {\n      userId: req.params.userId,\n      error: error instanceof Error ? error.message : String(error),\n      requestId: req.headers['x-request-id'] as string || ''\n    });\n    \n    res.status(500).json({\n      success: false,\n      error: 'Failed to get user roles'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/security.ts",
        "start": 731,
        "end": 739,
        "startLoc": {
          "line": 731,
          "column": 27,
          "position": 6121
        },
        "endLoc": {
          "line": 739,
          "column": 27,
          "position": 6209
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/security.ts",
        "start": 481,
        "end": 489,
        "startLoc": {
          "line": 481,
          "column": 34,
          "position": 4080
        },
        "endLoc": {
          "line": 489,
          "column": 34,
          "position": 4168
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ", {\n      userId: req.params.userId,\n      error: error instanceof Error ? error.message : String(error),\n      requestId: req.headers['x-request-id'] as string || ''\n    });\n    \n    res.status(500).json({\n      success: false,\n      error: 'Failed to get user permissions'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/security.ts",
        "start": 763,
        "end": 771,
        "startLoc": {
          "line": 763,
          "column": 33,
          "position": 6399
        },
        "endLoc": {
          "line": 771,
          "column": 33,
          "position": 6487
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/security.ts",
        "start": 481,
        "end": 489,
        "startLoc": {
          "line": 481,
          "column": 34,
          "position": 4080
        },
        "endLoc": {
          "line": 489,
          "column": 34,
          "position": 4168
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", {\n      error: (error as Error).message\n    });\n\n    res.status(500).json({\n      success: false,\n      error: 'Health check failed',\n      message: (error as Error).message\n    });\n  }\n});\n\nexport default router;",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/rls-tenant-policies.ts",
        "start": 530,
        "end": 542,
        "startLoc": {
          "line": 530,
          "column": 22,
          "position": 4022
        },
        "endLoc": {
          "line": 542,
          "column": 2,
          "position": 4104
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/security-config.ts",
        "start": 515,
        "end": 527,
        "startLoc": {
          "line": 515,
          "column": 45,
          "position": 3845
        },
        "endLoc": {
          "line": 527,
          "column": 2,
          "position": 3927
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ").optional()\n  }),\n  metadata: z.object({\n    createdBy: z.string().min(1),\n    lastModifiedBy: z.string().min(1),\n    version: z.coerce.number().int().positive(),\n    tags: z.array(z.string()).optional()\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/rls-generativa.ts",
        "start": 112,
        "end": 119,
        "startLoc": {
          "line": 112,
          "column": 2,
          "position": 1534
        },
        "endLoc": {
          "line": 119,
          "column": 2,
          "position": 1628
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/rls-generativa.ts",
        "start": 58,
        "end": 64,
        "startLoc": {
          "line": 58,
          "column": 2,
          "position": 835
        },
        "endLoc": {
          "line": 64,
          "column": 2,
          "position": 927
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "z.object({\n    userId: z.string().min(1),\n    organizationId: z.string().min(1),\n    role: z.string().min(1),\n    permissions: z.array(z.string()),\n    sessionId: z.string().min(1),\n    ipAddress: z.string().ip(),\n    userAgent: z.string().min(1)\n  }),",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/rls-generativa.ts",
        "start": 123,
        "end": 131,
        "startLoc": {
          "line": 123,
          "column": 2,
          "position": 1652
        },
        "endLoc": {
          "line": 131,
          "column": 2,
          "position": 1771
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/rls-generativa.ts",
        "start": 9,
        "end": 17,
        "startLoc": {
          "line": 9,
          "column": 2,
          "position": 73
        },
        "endLoc": {
          "line": 17,
          "column": 2,
          "position": 191
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "(filters.organizationId, filters);\n    \n    res.json({\n      success: true,\n      data: {\n        rules,\n        total: rules.length,\n        filters\n      },\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Error getting RLS rules'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/rls-generativa.ts",
        "start": 254,
        "end": 266,
        "startLoc": {
          "line": 254,
          "column": 12,
          "position": 2911
        },
        "endLoc": {
          "line": 266,
          "column": 26,
          "position": 2998
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/sepa-robust.ts",
        "start": 174,
        "end": 186,
        "startLoc": {
          "line": 174,
          "column": 9,
          "position": 2108
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2195
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ");\n    \n    if (!reporte) {\n      return res.status(404).json({\n        success: false,\n        error: 'Reporte not found'\n      });\n    }\n    \n    res.json({\n      success: true,\n      data: reporte,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Error updating reporte'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/reportes-mensuales.ts",
        "start": 303,
        "end": 318,
        "startLoc": {
          "line": 303,
          "column": 8,
          "position": 3002
        },
        "endLoc": {
          "line": 318,
          "column": 25,
          "position": 3110
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/reportes-mensuales.ts",
        "start": 273,
        "end": 288,
        "startLoc": {
          "line": 273,
          "column": 3,
          "position": 2736
        },
        "endLoc": {
          "line": 288,
          "column": 24,
          "position": 2844
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ", authenticateToken, async (req: Request, res: Response): Promise<void> => {\n  const startTime = Date.now();\n  const requestId = req.headers['x-request-id'] as string || `req_${Date.now()}`;\n\n  try {\n    // Validate request body",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 128,
        "end": 133,
        "startLoc": {
          "line": 128,
          "column": 9,
          "position": 1048
        },
        "endLoc": {
          "line": 133,
          "column": 25,
          "position": 1130
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 61,
        "end": 66,
        "startLoc": {
          "line": 61,
          "column": 10,
          "position": 525
        },
        "endLoc": {
          "line": 66,
          "column": 29,
          "position": 607
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ");\n    if (!validation.success) {\n      res.status(400).json({\n        error: 'Validation error',\n        message: validation.error.errors.map(e => e.message).join(', '),\n        requestId,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    const { key } = validation.data;\n\n    // Reset rate limit",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 134,
        "end": 147,
        "startLoc": {
          "line": 134,
          "column": 5,
          "position": 1146
        },
        "endLoc": {
          "line": 147,
          "column": 20,
          "position": 1256
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 67,
        "end": 80,
        "startLoc": {
          "line": 67,
          "column": 6,
          "position": 623
        },
        "endLoc": {
          "line": 80,
          "column": 30,
          "position": 733
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "},\n      requestId,\n      timestamp: new Date().toISOString(),\n      processingTime\n    });\n\n  } catch (error) {\n    const processingTime = Date.now() - startTime;\n    const errorMessage = error instanceof Error ? error.message : 'Unknown error';\n\n    structuredLogger.error('Failed to reset rate limit'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 162,
        "end": 172,
        "startLoc": {
          "line": 162,
          "column": 2,
          "position": 1372
        },
        "endLoc": {
          "line": 172,
          "column": 29,
          "position": 1462
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 98,
        "end": 108,
        "startLoc": {
          "line": 98,
          "column": 7,
          "position": 862
        },
        "endLoc": {
          "line": 108,
          "column": 34,
          "position": 952
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ", authenticateToken, async (req: Request, res: Response): Promise<void> => {\n  const startTime = Date.now();\n  const requestId = req.headers['x-request-id'] as string || `req_${Date.now()}`;\n\n  try {\n    // Get rate limiting statistics",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 193,
        "end": 198,
        "startLoc": {
          "line": 193,
          "column": 9,
          "position": 1570
        },
        "endLoc": {
          "line": 198,
          "column": 32,
          "position": 1652
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 61,
        "end": 66,
        "startLoc": {
          "line": 61,
          "column": 10,
          "position": 525
        },
        "endLoc": {
          "line": 66,
          "column": 29,
          "position": 607
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "},\n      requestId,\n      timestamp: new Date().toISOString(),\n      processingTime\n    });\n\n  } catch (error) {\n    const processingTime = Date.now() - startTime;\n    const errorMessage = error instanceof Error ? error.message : 'Unknown error';\n\n    structuredLogger.error('Failed to get rate limit stats'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 216,
        "end": 226,
        "startLoc": {
          "line": 216,
          "column": 7,
          "position": 1780
        },
        "endLoc": {
          "line": 226,
          "column": 33,
          "position": 1870
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 98,
        "end": 108,
        "startLoc": {
          "line": 98,
          "column": 7,
          "position": 862
        },
        "endLoc": {
          "line": 108,
          "column": 34,
          "position": 952
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ", authenticateToken, async (req: Request, res: Response): Promise<void> => {\n  const startTime = Date.now();\n  const requestId = req.headers['x-request-id'] as string || `req_${Date.now()}`;\n\n  try {\n    const",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 247,
        "end": 252,
        "startLoc": {
          "line": 247,
          "column": 9,
          "position": 1978
        },
        "endLoc": {
          "line": 252,
          "column": 6,
          "position": 2060
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 61,
        "end": 66,
        "startLoc": {
          "line": 61,
          "column": 10,
          "position": 525
        },
        "endLoc": {
          "line": 66,
          "column": 29,
          "position": 607
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "},\n      requestId,\n      timestamp: new Date().toISOString(),\n      processingTime\n    });\n\n  } catch (error) {\n    const processingTime = Date.now() - startTime;\n    const errorMessage = error instanceof Error ? error.message : 'Unknown error';\n\n    structuredLogger.error('Failed to get rate limit rules'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 258,
        "end": 268,
        "startLoc": {
          "line": 258,
          "column": 2,
          "position": 2115
        },
        "endLoc": {
          "line": 268,
          "column": 33,
          "position": 2205
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 98,
        "end": 108,
        "startLoc": {
          "line": 98,
          "column": 7,
          "position": 862
        },
        "endLoc": {
          "line": 108,
          "column": 34,
          "position": 952
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "('/rules', authenticateToken, async (req: Request, res: Response): Promise<void> => {\n  const startTime = Date.now();\n  const requestId = req.headers['x-request-id'] as string || `req_${Date.now()}`;\n\n  try {\n    // Validate request body\n    const validation = addRuleSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 284,
        "end": 290,
        "startLoc": {
          "line": 284,
          "column": 5,
          "position": 2292
        },
        "endLoc": {
          "line": 290,
          "column": 14,
          "position": 2385
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 247,
        "end": 134,
        "startLoc": {
          "line": 247,
          "column": 4,
          "position": 1976
        },
        "endLoc": {
          "line": 134,
          "column": 17,
          "position": 1139
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ".safeParse(req.body);\n    if (!validation.success) {\n      res.status(400).json({\n        error: 'Validation error',\n        message: validation.error.errors.map(e => e.message).join(', '),\n        requestId,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    const ruleData",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 290,
        "end": 301,
        "startLoc": {
          "line": 290,
          "column": 14,
          "position": 2386
        },
        "endLoc": {
          "line": 301,
          "column": 9,
          "position": 2487
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 134,
        "end": 78,
        "startLoc": {
          "line": 134,
          "column": 17,
          "position": 1140
        },
        "endLoc": {
          "line": 78,
          "column": 2,
          "position": 718
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "},\n      requestId,\n      timestamp: new Date().toISOString(),\n      processingTime\n    });\n\n  } catch (error) {\n    const processingTime = Date.now() - startTime;\n    const errorMessage = error instanceof Error ? error.message : 'Unknown error';\n\n    structuredLogger.error('Failed to add rate limit rule'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 330,
        "end": 340,
        "startLoc": {
          "line": 330,
          "column": 2,
          "position": 2702
        },
        "endLoc": {
          "line": 340,
          "column": 32,
          "position": 2792
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 98,
        "end": 108,
        "startLoc": {
          "line": 98,
          "column": 7,
          "position": 862
        },
        "endLoc": {
          "line": 108,
          "column": 34,
          "position": 952
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ", authenticateToken, async (req: Request, res: Response): Promise<void> => {\n  const startTime = Date.now();\n  const requestId = req.headers['x-request-id'] as string || `req_${Date.now()}`;\n\n  try {\n    const {",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 357,
        "end": 362,
        "startLoc": {
          "line": 357,
          "column": 13,
          "position": 2893
        },
        "endLoc": {
          "line": 362,
          "column": 2,
          "position": 2977
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 61,
        "end": 252,
        "startLoc": {
          "line": 61,
          "column": 10,
          "position": 525
        },
        "endLoc": {
          "line": 252,
          "column": 6,
          "position": 2062
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ".safeParse(req.body);\n    if (!validation.success) {\n      res.status(400).json({\n        error: 'Validation error',\n        message: validation.error.errors.map(e => e.message).join(', '),\n        requestId,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    // Check if rule exists",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 365,
        "end": 376,
        "startLoc": {
          "line": 365,
          "column": 17,
          "position": 3002
        },
        "endLoc": {
          "line": 376,
          "column": 24,
          "position": 3101
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 134,
        "end": 78,
        "startLoc": {
          "line": 134,
          "column": 17,
          "position": 1140
        },
        "endLoc": {
          "line": 78,
          "column": 6,
          "position": 716
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "},\n      requestId,\n      timestamp: new Date().toISOString(),\n      processingTime\n    });\n\n  } catch (error) {\n    const processingTime = Date.now() - startTime;\n    const errorMessage = error instanceof Error ? error.message : 'Unknown error';\n\n    structuredLogger.error('Failed to update rate limit rule'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 405,
        "end": 415,
        "startLoc": {
          "line": 405,
          "column": 2,
          "position": 3325
        },
        "endLoc": {
          "line": 415,
          "column": 35,
          "position": 3415
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 98,
        "end": 108,
        "startLoc": {
          "line": 98,
          "column": 7,
          "position": 862
        },
        "endLoc": {
          "line": 108,
          "column": 34,
          "position": 952
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "('/rules/:id', authenticateToken, async (req: Request, res: Response): Promise<void> => {\n  const startTime = Date.now();\n  const requestId = req.headers['x-request-id'] as string || `req_${Date.now()}`;\n\n  try {\n    const { id } = req.params;\n\n    // Check if rule exists",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 433,
        "end": 440,
        "startLoc": {
          "line": 433,
          "column": 7,
          "position": 3525
        },
        "endLoc": {
          "line": 440,
          "column": 24,
          "position": 3626
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 357,
        "end": 364,
        "startLoc": {
          "line": 357,
          "column": 4,
          "position": 2891
        },
        "endLoc": {
          "line": 364,
          "column": 25,
          "position": 2992
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "// Check if rule exists\n    const existingRule = globalRateLimiter.getRule(id);\n    if (!existingRule) {\n      res.status(404).json({\n        error: 'Rule not found',\n        message: `Rule with ID '${id}' not found`,\n        requestId,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    // Remove rule",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 440,
        "end": 452,
        "startLoc": {
          "line": 440,
          "column": 5,
          "position": 3626
        },
        "endLoc": {
          "line": 452,
          "column": 15,
          "position": 3715
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 376,
        "end": 388,
        "startLoc": {
          "line": 376,
          "column": 5,
          "position": 3101
        },
        "endLoc": {
          "line": 388,
          "column": 53,
          "position": 3190
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "},\n      requestId,\n      timestamp: new Date().toISOString(),\n      processingTime\n    });\n\n  } catch (error) {\n    const processingTime = Date.now() - startTime;\n    const errorMessage = error instanceof Error ? error.message : 'Unknown error';\n\n    structuredLogger.error('Failed to remove rate limit rule'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 467,
        "end": 477,
        "startLoc": {
          "line": 467,
          "column": 2,
          "position": 3829
        },
        "endLoc": {
          "line": 477,
          "column": 35,
          "position": 3919
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 98,
        "end": 108,
        "startLoc": {
          "line": 98,
          "column": 7,
          "position": 862
        },
        "endLoc": {
          "line": 108,
          "column": 34,
          "position": 952
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ", authenticateToken, async (req: Request, res: Response): Promise<void> => {\n  const startTime = Date.now();\n  const requestId = req.headers['x-request-id'] as string || `req_${Date.now()}`;\n\n  try {\n    // Clear all rate limits",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 499,
        "end": 504,
        "startLoc": {
          "line": 499,
          "column": 9,
          "position": 4038
        },
        "endLoc": {
          "line": 504,
          "column": 25,
          "position": 4120
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 61,
        "end": 66,
        "startLoc": {
          "line": 61,
          "column": 10,
          "position": 525
        },
        "endLoc": {
          "line": 66,
          "column": 29,
          "position": 607
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ",\n      requestId,\n      timestamp: new Date().toISOString(),\n      processingTime\n    });\n\n  } catch (error) {\n    const processingTime = Date.now() - startTime;\n    const errorMessage = error instanceof Error ? error.message : 'Unknown error';\n\n    structuredLogger.error('Failed to clear all rate limits'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 517,
        "end": 527,
        "startLoc": {
          "line": 517,
          "column": 39,
          "position": 4206
        },
        "endLoc": {
          "line": 527,
          "column": 34,
          "position": 4295
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 98,
        "end": 108,
        "startLoc": {
          "line": 98,
          "column": 2,
          "position": 863
        },
        "endLoc": {
          "line": 108,
          "column": 34,
          "position": 952
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Error starting deployment'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/project-completion-deployment.ts",
        "start": 139,
        "end": 149,
        "startLoc": {
          "line": 139,
          "column": 5,
          "position": 1411
        },
        "endLoc": {
          "line": 149,
          "column": 28,
          "position": 1491
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/sepa.ts",
        "start": 39,
        "end": 49,
        "startLoc": {
          "line": 39,
          "column": 5,
          "position": 369
        },
        "endLoc": {
          "line": 49,
          "column": 34,
          "position": 450
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Error creating health check'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/project-completion-deployment.ts",
        "start": 303,
        "end": 313,
        "startLoc": {
          "line": 303,
          "column": 5,
          "position": 2776
        },
        "endLoc": {
          "line": 313,
          "column": 30,
          "position": 2856
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/sepa.ts",
        "start": 39,
        "end": 49,
        "startLoc": {
          "line": 39,
          "column": 5,
          "position": 369
        },
        "endLoc": {
          "line": 49,
          "column": 34,
          "position": 450
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Error updating configuration'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/project-completion-deployment.ts",
        "start": 460,
        "end": 470,
        "startLoc": {
          "line": 460,
          "column": 5,
          "position": 4082
        },
        "endLoc": {
          "line": 470,
          "column": 31,
          "position": 4162
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/sepa.ts",
        "start": 39,
        "end": 49,
        "startLoc": {
          "line": 39,
          "column": 5,
          "position": 369
        },
        "endLoc": {
          "line": 49,
          "column": 34,
          "position": 450
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "router.get('/status', async (req, res) => {\n  const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n\n  try {\n    const status = performanceOptimizerV2",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/performance-v2.ts",
        "start": 40,
        "end": 45,
        "startLoc": {
          "line": 40,
          "column": 1,
          "position": 426
        },
        "endLoc": {
          "line": 45,
          "column": 23,
          "position": 529
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/warmup.ts",
        "start": 31,
        "end": 36,
        "startLoc": {
          "line": 31,
          "column": 1,
          "position": 239
        },
        "endLoc": {
          "line": 36,
          "column": 13,
          "position": 342
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ", async (req, res) => {\n  const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n\n  try {\n    const status = performanceOptimizerV2.getStatus();\n    \n    // Análisis detallado de métricas",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/performance-v2.ts",
        "start": 89,
        "end": 96,
        "startLoc": {
          "line": 89,
          "column": 11,
          "position": 806
        },
        "endLoc": {
          "line": 96,
          "column": 34,
          "position": 914
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/warmup.ts",
        "start": 31,
        "end": 47,
        "startLoc": {
          "line": 31,
          "column": 10,
          "position": 244
        },
        "endLoc": {
          "line": 47,
          "column": 17,
          "position": 539
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ", async (req, res) => {\n  const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n\n  try {\n    const {",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/performance-v2.ts",
        "start": 169,
        "end": 174,
        "startLoc": {
          "line": 169,
          "column": 12,
          "position": 1631
        },
        "endLoc": {
          "line": 174,
          "column": 2,
          "position": 1725
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/warmup.ts",
        "start": 31,
        "end": 36,
        "startLoc": {
          "line": 31,
          "column": 10,
          "position": 244
        },
        "endLoc": {
          "line": 36,
          "column": 7,
          "position": 338
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ", async (req, res) => {\n  const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n\n  try {\n    const configData",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/performance-v2.ts",
        "start": 237,
        "end": 242,
        "startLoc": {
          "line": 237,
          "column": 10,
          "position": 2193
        },
        "endLoc": {
          "line": 242,
          "column": 11,
          "position": 2287
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/warmup.ts",
        "start": 31,
        "end": 36,
        "startLoc": {
          "line": 31,
          "column": 10,
          "position": 244
        },
        "endLoc": {
          "line": 36,
          "column": 7,
          "position": 338
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ", async (req, res) => {\n  const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n\n  try {\n    const { limit",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/performance-v2.ts",
        "start": 298,
        "end": 303,
        "startLoc": {
          "line": 298,
          "column": 17,
          "position": 2625
        },
        "endLoc": {
          "line": 303,
          "column": 6,
          "position": 2721
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/warmup.ts",
        "start": 31,
        "end": 174,
        "startLoc": {
          "line": 31,
          "column": 10,
          "position": 244
        },
        "endLoc": {
          "line": 174,
          "column": 5,
          "position": 1727
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ", async (req, res) => {\n  const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n\n  try {\n    const status = performanceOptimizerV2.getStatus();\n    \n    // Evaluar salud del sistema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/performance-v2.ts",
        "start": 373,
        "end": 380,
        "startLoc": {
          "line": 373,
          "column": 10,
          "position": 3350
        },
        "endLoc": {
          "line": 380,
          "column": 29,
          "position": 3458
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/warmup.ts",
        "start": 31,
        "end": 47,
        "startLoc": {
          "line": 31,
          "column": 10,
          "position": 244
        },
        "endLoc": {
          "line": 47,
          "column": 17,
          "position": 539
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ", async (req, res) => {\n  const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n\n  try {\n    const status = performanceOptimizerV2.getStatus();\n    const",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/performance-v2.ts",
        "start": 431,
        "end": 437,
        "startLoc": {
          "line": 431,
          "column": 19,
          "position": 3890
        },
        "endLoc": {
          "line": 437,
          "column": 6,
          "position": 3996
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/warmup.ts",
        "start": 31,
        "end": 47,
        "startLoc": {
          "line": 31,
          "column": 10,
          "position": 244
        },
        "endLoc": {
          "line": 47,
          "column": 17,
          "position": 539
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "attributes: attributes || {}\n    });\n\n    res.json({\n      success: true,\n      data: {\n        spanId: span.spanContext().spanId,\n        traceId: span.spanContext().traceId,\n        name: span.name,\n        attributes: span.attributes\n      },\n      message: 'Business span created successfully'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/observability-otel.ts",
        "start": 256,
        "end": 267,
        "startLoc": {
          "line": 256,
          "column": 7,
          "position": 1930
        },
        "endLoc": {
          "line": 267,
          "column": 37,
          "position": 2017
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/observability-otel.ts",
        "start": 214,
        "end": 225,
        "startLoc": {
          "line": 214,
          "column": 7,
          "position": 1583
        },
        "endLoc": {
          "line": 225,
          "column": 28,
          "position": 1670
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", {\n      attributes: attributes || {}\n    });\n\n    res.json({\n      success: true,\n      data: {\n        spanId: span.spanContext().spanId,\n        traceId: span.spanContext().traceId,\n        name: span.name,\n        attributes: span.attributes\n      },\n      message: 'Database span created successfully'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/observability-otel.ts",
        "start": 297,
        "end": 309,
        "startLoc": {
          "line": 297,
          "column": 6,
          "position": 2272
        },
        "endLoc": {
          "line": 309,
          "column": 37,
          "position": 2364
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/observability-otel.ts",
        "start": 255,
        "end": 225,
        "startLoc": {
          "line": 255,
          "column": 15,
          "position": 1925
        },
        "endLoc": {
          "line": 225,
          "column": 28,
          "position": 1670
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", {\n      attributes: attributes || {}\n    });\n\n    res.json({\n      success: true,\n      data: {\n        spanId: span.spanContext().spanId,\n        traceId: span.spanContext().traceId,\n        name: span.name,\n        attributes: span.attributes\n      },\n      message: 'External API span created successfully'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/observability-otel.ts",
        "start": 339,
        "end": 351,
        "startLoc": {
          "line": 339,
          "column": 9,
          "position": 2619
        },
        "endLoc": {
          "line": 351,
          "column": 41,
          "position": 2711
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/observability-otel.ts",
        "start": 255,
        "end": 225,
        "startLoc": {
          "line": 255,
          "column": 15,
          "position": 1925
        },
        "endLoc": {
          "line": 225,
          "column": 28,
          "position": 1670
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", {\n      error: (error as Error).message\n    });\n\n    res.status(500).json({\n      success: false,\n      error: 'Health check failed',\n      message: (error as Error).message\n    });\n  }\n});\n\nexport default router;",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/observability-otel.ts",
        "start": 597,
        "end": 609,
        "startLoc": {
          "line": 597,
          "column": 36,
          "position": 4556
        },
        "endLoc": {
          "line": 609,
          "column": 2,
          "position": 4638
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/security-config.ts",
        "start": 515,
        "end": 527,
        "startLoc": {
          "line": 515,
          "column": 45,
          "position": 3845
        },
        "endLoc": {
          "line": 527,
          "column": 2,
          "position": 3927
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "= z.object({\n  userId: z.string().uuid(),\n  orgId: z.string().uuid(),\n  type: z.enum(['info', 'success', 'warning', 'error', 'alert', 'reminder', 'update', 'announcement']),\n  priority: z.enum(['low', 'medium', 'high', 'urgent']),\n  title: z.string().min(1).max(200),\n  message: z.string().min(1).max(1000),\n  data: z.record(z.any()).optional(),\n  channels: z.array(z.enum(['email', 'sms', 'push', 'in_app', 'webhook'])),\n  templateId: z.string().optional(),\n  templateVariables",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/notifications.ts",
        "start": 45,
        "end": 55,
        "startLoc": {
          "line": 45,
          "column": 2,
          "position": 562
        },
        "endLoc": {
          "line": 55,
          "column": 18,
          "position": 767
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/notifications.ts",
        "start": 32,
        "end": 42,
        "startLoc": {
          "line": 32,
          "column": 2,
          "position": 331
        },
        "endLoc": {
          "line": 42,
          "column": 12,
          "position": 536
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "error: (error as Error).message,\n      userId: req.user?.id\n    });\n\n    res.status(400).json({\n      success: false,\n      error: (error as Error).message\n    });\n  }\n});\n\n// Delete template",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/notifications.ts",
        "start": 210,
        "end": 221,
        "startLoc": {
          "line": 210,
          "column": 7,
          "position": 2091
        },
        "endLoc": {
          "line": 221,
          "column": 19,
          "position": 2168
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/notifications.ts",
        "start": 114,
        "end": 125,
        "startLoc": {
          "line": 114,
          "column": 7,
          "position": 1344
        },
        "endLoc": {
          "line": 125,
          "column": 16,
          "position": 1421
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", {\n      templateId: req.params.id,\n      error: (error as Error).message,\n      userId: req.user?.id\n    });\n\n    res.status(400).json({\n      success: false,\n      error: (error as Error).message\n    });\n  }\n});\n\n// ============================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/notifications.ts",
        "start": 238,
        "end": 251,
        "startLoc": {
          "line": 238,
          "column": 28,
          "position": 2302
        },
        "endLoc": {
          "line": 251,
          "column": 80,
          "position": 2395
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/notifications.ts",
        "start": 208,
        "end": 125,
        "startLoc": {
          "line": 208,
          "column": 28,
          "position": 2075
        },
        "endLoc": {
          "line": 125,
          "column": 16,
          "position": 1421
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", {\n      error: (error as Error).message,\n      userId: req.user?.id\n    });\n\n    res.status(400).json({\n      success: false,\n      error: (error as Error).message\n    });\n  }\n});\n\n// Get notification",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/notifications.ts",
        "start": 275,
        "end": 287,
        "startLoc": {
          "line": 275,
          "column": 32,
          "position": 2572
        },
        "endLoc": {
          "line": 287,
          "column": 20,
          "position": 2654
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/notifications.ts",
        "start": 113,
        "end": 125,
        "startLoc": {
          "line": 113,
          "column": 28,
          "position": 1339
        },
        "endLoc": {
          "line": 125,
          "column": 16,
          "position": 1421
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ": req.params.id,\n      error: (error as Error).message,\n      userId: req.user?.id\n    });\n\n    res.status(500).json({\n      success: false,\n      error: 'Internal server error'\n    });\n  }\n});\n\n// List notifications",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/notifications.ts",
        "start": 307,
        "end": 319,
        "startLoc": {
          "line": 307,
          "column": 15,
          "position": 2812
        },
        "endLoc": {
          "line": 319,
          "column": 22,
          "position": 2891
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/notifications.ts",
        "start": 145,
        "end": 157,
        "startLoc": {
          "line": 145,
          "column": 11,
          "position": 1579
        },
        "endLoc": {
          "line": 157,
          "column": 18,
          "position": 1658
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ": req.params.id,\n      error: (error as Error).message,\n      userId: req.user?.id\n    });\n\n    res.status(400).json({\n      success: false,\n      error: (error as Error).message\n    });\n  }\n});\n\n// Delete notification",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/notifications.ts",
        "start": 375,
        "end": 387,
        "startLoc": {
          "line": 375,
          "column": 15,
          "position": 3375
        },
        "endLoc": {
          "line": 387,
          "column": 23,
          "position": 3462
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/notifications.ts",
        "start": 209,
        "end": 125,
        "startLoc": {
          "line": 209,
          "column": 11,
          "position": 2081
        },
        "endLoc": {
          "line": 125,
          "column": 16,
          "position": 1421
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", {\n      notificationId: req.params.id,\n      error: (error as Error).message,\n      userId: req.user?.id\n    });\n\n    res.status(400).json({\n      success: false,\n      error: (error as Error).message\n    });\n  }\n});\n\n// Mark as read",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/notifications.ts",
        "start": 404,
        "end": 417,
        "startLoc": {
          "line": 404,
          "column": 32,
          "position": 3596
        },
        "endLoc": {
          "line": 417,
          "column": 16,
          "position": 3689
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/notifications.ts",
        "start": 374,
        "end": 125,
        "startLoc": {
          "line": 374,
          "column": 32,
          "position": 3369
        },
        "endLoc": {
          "line": 125,
          "column": 16,
          "position": 1421
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", {\n      notificationId: req.params.id,\n      error: (error as Error).message,\n      userId: req.user?.id\n    });\n\n    res.status(400).json({\n      success: false,\n      error: (error as Error).message\n    });\n  }\n});\n\n// Mark all as read",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/notifications.ts",
        "start": 435,
        "end": 448,
        "startLoc": {
          "line": 435,
          "column": 38,
          "position": 3836
        },
        "endLoc": {
          "line": 448,
          "column": 20,
          "position": 3929
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/notifications.ts",
        "start": 374,
        "end": 125,
        "startLoc": {
          "line": 374,
          "column": 32,
          "position": 3369
        },
        "endLoc": {
          "line": 125,
          "column": 16,
          "position": 1421
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", {\n      error: (error as Error).message,\n      userId: req.user?.id\n    });\n\n    res.status(400).json({\n      success: false,\n      error: (error as Error).message\n    });\n  }\n});\n\n// Send bulk notifications",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/notifications.ts",
        "start": 531,
        "end": 543,
        "startLoc": {
          "line": 531,
          "column": 30,
          "position": 4560
        },
        "endLoc": {
          "line": 543,
          "column": 27,
          "position": 4642
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/notifications.ts",
        "start": 113,
        "end": 125,
        "startLoc": {
          "line": 113,
          "column": 28,
          "position": 1339
        },
        "endLoc": {
          "line": 125,
          "column": 16,
          "position": 1421
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", {\n      error: (error as Error).message,\n      userId: req.user?.id\n    });\n\n    res.status(400).json({\n      success: false,\n      error: (error as Error).message\n    });\n  }\n});\n\n// Schedule notification",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/notifications.ts",
        "start": 567,
        "end": 579,
        "startLoc": {
          "line": 567,
          "column": 36,
          "position": 4904
        },
        "endLoc": {
          "line": 579,
          "column": 25,
          "position": 4986
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/notifications.ts",
        "start": 113,
        "end": 125,
        "startLoc": {
          "line": 113,
          "column": 28,
          "position": 1339
        },
        "endLoc": {
          "line": 125,
          "column": 16,
          "position": 1421
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", {\n      error: (error as Error).message,\n      userId: req.user?.id\n    });\n\n    res.status(400).json({\n      success: false,\n      error: (error as Error).message\n    });\n  }\n});\n\n// ============================================================================\n// PREFERENCES ROUTES",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/notifications.ts",
        "start": 615,
        "end": 628,
        "startLoc": {
          "line": 615,
          "column": 34,
          "position": 5288
        },
        "endLoc": {
          "line": 628,
          "column": 22,
          "position": 5372
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/notifications.ts",
        "start": 113,
        "end": 252,
        "startLoc": {
          "line": 113,
          "column": 28,
          "position": 1339
        },
        "endLoc": {
          "line": 252,
          "column": 23,
          "position": 2397
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", async (req, res) => {\n  try {\n    const userId = req.user?.id || req.query.userId as string;\n    const orgId = req.user?.orgId || req.query.orgId as string;\n    \n    if (!userId || !orgId) {\n      return res.status(400).json({\n        success: false,\n        error: 'User ID and Organization ID are required'\n      });\n    }\n\n    const preferences",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/notifications.ts",
        "start": 632,
        "end": 644,
        "startLoc": {
          "line": 632,
          "column": 15,
          "position": 5384
        },
        "endLoc": {
          "line": 644,
          "column": 12,
          "position": 5514
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/notifications.ts",
        "start": 320,
        "end": 332,
        "startLoc": {
          "line": 320,
          "column": 17,
          "position": 2898
        },
        "endLoc": {
          "line": 332,
          "column": 8,
          "position": 3028
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", async (req, res) => {\n  try {\n    const userId = req.user?.id || req.body.userId;\n    const orgId = req.user?.orgId || req.body.orgId;\n    \n    if (!userId || !orgId) {\n      return res.status(400).json({\n        success: false,\n        error: 'User ID and Organization ID are required'\n      });\n    }\n\n    const",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/notifications.ts",
        "start": 664,
        "end": 676,
        "startLoc": {
          "line": 664,
          "column": 15,
          "position": 5656
        },
        "endLoc": {
          "line": 676,
          "column": 6,
          "position": 5776
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/notifications.ts",
        "start": 449,
        "end": 461,
        "startLoc": {
          "line": 449,
          "column": 26,
          "position": 3936
        },
        "endLoc": {
          "line": 461,
          "column": 6,
          "position": 4056
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", {\n      error: (error as Error).message,\n      userId: req.user?.id\n    });\n\n    res.status(400).json({\n      success: false,\n      error: (error as Error).message\n    });\n  }\n});\n\n// ============================================================================\n// STATISTICS ROUTES",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/notifications.ts",
        "start": 691,
        "end": 704,
        "startLoc": {
          "line": 691,
          "column": 31,
          "position": 5891
        },
        "endLoc": {
          "line": 704,
          "column": 21,
          "position": 5975
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/notifications.ts",
        "start": 113,
        "end": 252,
        "startLoc": {
          "line": 113,
          "column": 28,
          "position": 1339
        },
        "endLoc": {
          "line": 252,
          "column": 23,
          "position": 2397
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", async (req, res) => {\n  try {\n    const orgId = req.user?.orgId || req.query.orgId as string;\n    \n    if (!orgId) {\n      return res.status(400).json({\n        success: false,\n        error: 'Organization ID is required'\n      });\n    }\n\n    const stats",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/notifications.ts",
        "start": 708,
        "end": 719,
        "startLoc": {
          "line": 708,
          "column": 14,
          "position": 5987
        },
        "endLoc": {
          "line": 719,
          "column": 6,
          "position": 6085
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/notifications.ts",
        "start": 158,
        "end": 169,
        "startLoc": {
          "line": 158,
          "column": 13,
          "position": 1665
        },
        "endLoc": {
          "line": 169,
          "column": 10,
          "position": 1763
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", async (req, res) => {\n  try {\n    const userId = req.user?.id || req.query.userId as string;\n    const orgId = req.user?.orgId || req.query.orgId as string;\n    \n    if (!userId || !orgId) {\n      return res.status(400).json({\n        success: false,\n        error: 'User ID and Organization ID are required'\n      });\n    }\n\n    const count",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/notifications.ts",
        "start": 739,
        "end": 751,
        "startLoc": {
          "line": 739,
          "column": 16,
          "position": 6224
        },
        "endLoc": {
          "line": 751,
          "column": 6,
          "position": 6354
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/notifications.ts",
        "start": 320,
        "end": 332,
        "startLoc": {
          "line": 320,
          "column": 17,
          "position": 2898
        },
        "endLoc": {
          "line": 332,
          "column": 8,
          "position": 3028
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", {\n      error: (error as Error).message,\n      userId: req.user?.id\n    });\n\n    res.status(400).json({\n      success: false,\n      error: (error as Error).message\n    });\n  }\n});\n\n// Test SMS provider",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/notifications.ts",
        "start": 788,
        "end": 800,
        "startLoc": {
          "line": 788,
          "column": 29,
          "position": 6631
        },
        "endLoc": {
          "line": 800,
          "column": 21,
          "position": 6713
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/notifications.ts",
        "start": 113,
        "end": 125,
        "startLoc": {
          "line": 113,
          "column": 28,
          "position": 1339
        },
        "endLoc": {
          "line": 125,
          "column": 16,
          "position": 1421
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", {\n      error: (error as Error).message,\n      userId: req.user?.id\n    });\n\n    res.status(400).json({\n      success: false,\n      error: (error as Error).message\n    });\n  }\n});\n\n// Test push provider",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/notifications.ts",
        "start": 814,
        "end": 826,
        "startLoc": {
          "line": 814,
          "column": 27,
          "position": 6844
        },
        "endLoc": {
          "line": 826,
          "column": 22,
          "position": 6926
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/notifications.ts",
        "start": 113,
        "end": 125,
        "startLoc": {
          "line": 113,
          "column": 28,
          "position": 1339
        },
        "endLoc": {
          "line": 125,
          "column": 16,
          "position": 1421
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", {\n      error: (error as Error).message,\n      userId: req.user?.id\n    });\n\n    res.status(400).json({\n      success: false,\n      error: (error as Error).message\n    });\n  }\n});\n\n// ============================================================================\n// TEMPLATE ENGINE ROUTES",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/notifications.ts",
        "start": 840,
        "end": 853,
        "startLoc": {
          "line": 840,
          "column": 28,
          "position": 7057
        },
        "endLoc": {
          "line": 853,
          "column": 26,
          "position": 7141
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/notifications.ts",
        "start": 113,
        "end": 252,
        "startLoc": {
          "line": 113,
          "column": 28,
          "position": 1339
        },
        "endLoc": {
          "line": 252,
          "column": 23,
          "position": 2397
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", {\n      error: (error as Error).message,\n      userId: req.user?.id\n    });\n\n    res.status(400).json({\n      success: false,\n      error: (error as Error).message\n    });\n  }\n});\n\n// Validate template",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/notifications.ts",
        "start": 885,
        "end": 897,
        "startLoc": {
          "line": 885,
          "column": 25,
          "position": 7365
        },
        "endLoc": {
          "line": 897,
          "column": 21,
          "position": 7447
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/notifications.ts",
        "start": 113,
        "end": 125,
        "startLoc": {
          "line": 113,
          "column": 28,
          "position": 1339
        },
        "endLoc": {
          "line": 125,
          "column": 16,
          "position": 1421
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "= req.body;\n    \n    const templateEngine = TemplateEngineFactory.create({\n      engine: 'handlebars',\n      defaultLanguage: 'es',\n      supportedLanguages: ['es', 'en'],\n      cacheEnabled: true,\n      cacheSize: 100,\n      strictMode: true,\n      escapeHtml: true\n    });\n\n    const result = await templateEngine.validateTemplate",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/notifications.ts",
        "start": 900,
        "end": 912,
        "startLoc": {
          "line": 900,
          "column": 2,
          "position": 7479
        },
        "endLoc": {
          "line": 912,
          "column": 17,
          "position": 7571
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/notifications.ts",
        "start": 859,
        "end": 871,
        "startLoc": {
          "line": 859,
          "column": 2,
          "position": 7194
        },
        "endLoc": {
          "line": 871,
          "column": 7,
          "position": 7286
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", {\n      error: (error as Error).message,\n      userId: req.user?.id\n    });\n\n    res.status(400).json({\n      success: false,\n      error: (error as Error).message\n    });\n  }\n});\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/notifications.ts",
        "start": 920,
        "end": 932,
        "startLoc": {
          "line": 920,
          "column": 29,
          "position": 7628
        },
        "endLoc": {
          "line": 932,
          "column": 7,
          "position": 7710
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/notifications.ts",
        "start": 113,
        "end": 125,
        "startLoc": {
          "line": 113,
          "column": 28,
          "position": 1339
        },
        "endLoc": {
          "line": 125,
          "column": 16,
          "position": 1421
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", authMiddleware, async (req, res) => {\n  try {\n    const { sessionId, userId, organizationId, data, context, options } = req.body;\n    \n    if (!sessionId || !userId || !organizationId || !data) {\n      return res.status(400).json({\n        success: false,\n        error: 'Missing required fields: sessionId, userId, organizationId, data',\n      });\n    }\n\n    const request = {\n      sessionId,\n      userId,\n      organizationId,\n      requestType: 'prediction'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/next-ai-platform.ts",
        "start": 644,
        "end": 659,
        "startLoc": {
          "line": 644,
          "column": 11,
          "position": 1819
        },
        "endLoc": {
          "line": 659,
          "column": 13,
          "position": 1962
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/next-ai-platform.ts",
        "start": 562,
        "end": 577,
        "startLoc": {
          "line": 562,
          "column": 11,
          "position": 1519
        },
        "endLoc": {
          "line": 577,
          "column": 11,
          "position": 1662
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ",\n        timestamp: new Date().toISOString()\n      },\n      requestId: req.headers['x-request-id'] as string || `req_${Date.now()}`,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Failed to get business metrics'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/metrics.ts",
        "start": 94,
        "end": 101,
        "startLoc": {
          "line": 94,
          "column": 16,
          "position": 691
        },
        "endLoc": {
          "line": 101,
          "column": 33,
          "position": 774
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/metrics.ts",
        "start": 53,
        "end": 60,
        "startLoc": {
          "line": 53,
          "column": 14,
          "position": 317
        },
        "endLoc": {
          "line": 60,
          "column": 31,
          "position": 400
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ",\n        timestamp: new Date().toISOString()\n      },\n      requestId: req.headers['x-request-id'] as string || `req_${Date.now()}`,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Failed to get performance metrics'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/metrics.ts",
        "start": 134,
        "end": 141,
        "startLoc": {
          "line": 134,
          "column": 19,
          "position": 1053
        },
        "endLoc": {
          "line": 141,
          "column": 36,
          "position": 1136
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/metrics.ts",
        "start": 53,
        "end": 60,
        "startLoc": {
          "line": 53,
          "column": 14,
          "position": 317
        },
        "endLoc": {
          "line": 60,
          "column": 31,
          "position": 400
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ",\n        timestamp: new Date().toISOString()\n      },\n      requestId: req.headers['x-request-id'] as string || `req_${Date.now()}`,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Failed to get error metrics'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/metrics.ts",
        "start": 173,
        "end": 180,
        "startLoc": {
          "line": 173,
          "column": 13,
          "position": 1403
        },
        "endLoc": {
          "line": 180,
          "column": 30,
          "position": 1486
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/metrics.ts",
        "start": 53,
        "end": 60,
        "startLoc": {
          "line": 53,
          "column": 14,
          "position": 317
        },
        "endLoc": {
          "line": 60,
          "column": 31,
          "position": 400
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ",\n        timestamp: new Date().toISOString()\n      },\n      requestId: req.headers['x-request-id'] as string || `req_${Date.now()}`,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Metrics health check failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/metrics.ts",
        "start": 287,
        "end": 294,
        "startLoc": {
          "line": 287,
          "column": 7,
          "position": 2375
        },
        "endLoc": {
          "line": 294,
          "column": 30,
          "position": 2458
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/metrics.ts",
        "start": 53,
        "end": 60,
        "startLoc": {
          "line": 53,
          "column": 14,
          "position": 317
        },
        "endLoc": {
          "line": 60,
          "column": 31,
          "position": 400
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "router.get('/status', async (req, res) => {\n  const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n\n  try {\n    const status = memoryManager",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/memory-management.ts",
        "start": 37,
        "end": 42,
        "startLoc": {
          "line": 37,
          "column": 1,
          "position": 375
        },
        "endLoc": {
          "line": 42,
          "column": 14,
          "position": 478
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/warmup.ts",
        "start": 31,
        "end": 36,
        "startLoc": {
          "line": 31,
          "column": 1,
          "position": 239
        },
        "endLoc": {
          "line": 36,
          "column": 13,
          "position": 342
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "router.get('/metrics', async (req, res) => {\n  const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n\n  try {\n    const status = memoryManager.getStatus();\n    \n    // Análisis detallado de métricas de memoria",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/memory-management.ts",
        "start": 88,
        "end": 95,
        "startLoc": {
          "line": 88,
          "column": 1,
          "position": 762
        },
        "endLoc": {
          "line": 95,
          "column": 45,
          "position": 875
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/performance-v2.ts",
        "start": 89,
        "end": 44,
        "startLoc": {
          "line": 89,
          "column": 1,
          "position": 801
        },
        "endLoc": {
          "line": 44,
          "column": 17,
          "position": 488
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ", {\n      traceId,\n      spanId,\n      analysis\n    });\n\n    res.json({\n      success: true,\n      data: {\n        metrics: status.metrics,\n        analysis,\n        timestamp: new Date().toISOString(),\n        traceId\n      }\n    });\n\n  } catch (error) {\n    structuredLogger.error('Failed to get memory metrics'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/memory-management.ts",
        "start": 142,
        "end": 159,
        "startLoc": {
          "line": 142,
          "column": 27,
          "position": 1492
        },
        "endLoc": {
          "line": 159,
          "column": 31,
          "position": 1589
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/performance-v2.ts",
        "start": 134,
        "end": 151,
        "startLoc": {
          "line": 134,
          "column": 32,
          "position": 1443
        },
        "endLoc": {
          "line": 151,
          "column": 36,
          "position": 1540
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "router.post('/optimize', async (req, res) => {\n  const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n\n  try {\n    const { type } = req.body;\n    \n    // Validar tipo de optimización\n    if (type && !OptimizationTypeSchema.safeParse(type).success) {\n      return res.status(400).json({\n        success: false,\n        error: 'Invalid optimization type',\n        validTypes: ['gc'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/memory-management.ts",
        "start": 177,
        "end": 189,
        "startLoc": {
          "line": 177,
          "column": 1,
          "position": 1675
        },
        "endLoc": {
          "line": 189,
          "column": 5,
          "position": 1846
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/performance-v2.ts",
        "start": 169,
        "end": 181,
        "startLoc": {
          "line": 169,
          "column": 1,
          "position": 1626
        },
        "endLoc": {
          "line": 181,
          "column": 9,
          "position": 1797
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "router.put('/config', async (req, res) => {\n  const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n\n  try {\n    const configData = MemoryConfigSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/memory-management.ts",
        "start": 246,
        "end": 251,
        "startLoc": {
          "line": 246,
          "column": 1,
          "position": 2209
        },
        "endLoc": {
          "line": 251,
          "column": 19,
          "position": 2312
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/performance-v2.ts",
        "start": 237,
        "end": 242,
        "startLoc": {
          "line": 237,
          "column": 1,
          "position": 2188
        },
        "endLoc": {
          "line": 242,
          "column": 24,
          "position": 2291
        }
      }
    },
    {
      "format": "typescript",
      "lines": 27,
      "fragment": ", {\n      traceId,\n      spanId,\n      newConfig: newStatus.config\n    });\n\n    res.json({\n      success: true,\n      data: {\n        config: newStatus.config,\n        message: 'Configuration updated successfully',\n        timestamp: new Date().toISOString(),\n        traceId\n      }\n    });\n\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Invalid configuration data',\n        details: error.errors,\n        traceId\n      });\n    }\n\n    structuredLogger.error('Failed to update memory config'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/memory-management.ts",
        "start": 263,
        "end": 289,
        "startLoc": {
          "line": 263,
          "column": 24,
          "position": 2386
        },
        "endLoc": {
          "line": 289,
          "column": 33,
          "position": 2555
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/performance-v2.ts",
        "start": 254,
        "end": 280,
        "startLoc": {
          "line": 254,
          "column": 29,
          "position": 2365
        },
        "endLoc": {
          "line": 280,
          "column": 38,
          "position": 2534
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ", async (req, res) => {\n  const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n\n  try {\n    const { type,",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/memory-management.ts",
        "start": 307,
        "end": 312,
        "startLoc": {
          "line": 307,
          "column": 9,
          "position": 2646
        },
        "endLoc": {
          "line": 312,
          "column": 2,
          "position": 2743
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/warmup.ts",
        "start": 31,
        "end": 174,
        "startLoc": {
          "line": 31,
          "column": 10,
          "position": 244
        },
        "endLoc": {
          "line": 174,
          "column": 2,
          "position": 1729
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ", async (req, res) => {\n  const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n\n  try {\n    const { limit = 50, type }",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/memory-management.ts",
        "start": 382,
        "end": 387,
        "startLoc": {
          "line": 382,
          "column": 14,
          "position": 3432
        },
        "endLoc": {
          "line": 387,
          "column": 2,
          "position": 3537
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/warmup.ts",
        "start": 31,
        "end": 303,
        "startLoc": {
          "line": 31,
          "column": 10,
          "position": 244
        },
        "endLoc": {
          "line": 303,
          "column": 2,
          "position": 2729
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "router.get('/health', async (req, res) => {\n  const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n\n  try {\n    const status = memoryManager.getStatus();\n    \n    // Evaluar salud de la memoria",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/memory-management.ts",
        "start": 452,
        "end": 459,
        "startLoc": {
          "line": 452,
          "column": 1,
          "position": 4123
        },
        "endLoc": {
          "line": 459,
          "column": 31,
          "position": 4236
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/performance-v2.ts",
        "start": 373,
        "end": 44,
        "startLoc": {
          "line": 373,
          "column": 1,
          "position": 3345
        },
        "endLoc": {
          "line": 44,
          "column": 17,
          "position": 488
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ", {\n      traceId,\n      spanId,\n      healthStatus,\n      healthChecks\n    });\n\n    res.status(isHealthy ? 200 : 503).json({\n      success: true,\n      data: {\n        status: healthStatus,\n        checks: healthChecks,\n        metrics: status.metrics,\n        isOptimizing: status.isOptimizing,\n        timestamp: new Date().toISOString(),\n        traceId\n      }\n    });\n\n  } catch (error) {\n    structuredLogger.error('Memory health check failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/memory-management.ts",
        "start": 471,
        "end": 491,
        "startLoc": {
          "line": 471,
          "column": 22,
          "position": 4413
        },
        "endLoc": {
          "line": 491,
          "column": 29,
          "position": 4546
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/performance-v2.ts",
        "start": 393,
        "end": 413,
        "startLoc": {
          "line": 393,
          "column": 27,
          "position": 3666
        },
        "endLoc": {
          "line": 413,
          "column": 34,
          "position": 3799
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "router.get('/recommendations', async (req, res) => {\n  const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n\n  try {\n    const status = memoryManager.getStatus();\n    const",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/memory-management.ts",
        "start": 509,
        "end": 515,
        "startLoc": {
          "line": 509,
          "column": 1,
          "position": 4632
        },
        "endLoc": {
          "line": 515,
          "column": 6,
          "position": 4743
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/performance-v2.ts",
        "start": 431,
        "end": 44,
        "startLoc": {
          "line": 431,
          "column": 1,
          "position": 3885
        },
        "endLoc": {
          "line": 44,
          "column": 17,
          "position": 488
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ", {\n      traceId,\n      spanId,\n      recommendationsCount: recommendations.length\n    });\n\n    res.json({\n      success: true,\n      data: {\n        recommendations,\n        count: recommendations.length,\n        timestamp: new Date().toISOString(),\n        traceId\n      }\n    });\n\n  } catch (error) {\n    structuredLogger.error('Failed to get memory recommendations'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/memory-management.ts",
        "start": 573,
        "end": 590,
        "startLoc": {
          "line": 573,
          "column": 35,
          "position": 5181
        },
        "endLoc": {
          "line": 590,
          "column": 39,
          "position": 5283
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/performance-v2.ts",
        "start": 484,
        "end": 501,
        "startLoc": {
          "line": 484,
          "column": 40,
          "position": 4346
        },
        "endLoc": {
          "line": 501,
          "column": 44,
          "position": 4448
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "const orgId = req.headers['x-org-id'] as string;\n    const userId = req.headers['x-user-id'] as string;\n    \n    if (!orgId) {\n      return res.status(400).json({ error: 'Missing x-org-id header' });\n    }\n\n    // Validate request body\n    const updateData",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/invoices.ts",
        "start": 284,
        "end": 292,
        "startLoc": {
          "line": 284,
          "column": 5,
          "position": 2433
        },
        "endLoc": {
          "line": 292,
          "column": 11,
          "position": 2515
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/invoices.ts",
        "start": 190,
        "end": 198,
        "startLoc": {
          "line": 190,
          "column": 5,
          "position": 1591
        },
        "endLoc": {
          "line": 198,
          "column": 12,
          "position": 1673
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ", async (req, res) => {\n  try {\n    const { id } = req.params;\n    const orgId = req.headers['x-org-id'] as string;\n    const userId = req.headers['x-user-id'] as string;\n    \n    if (!orgId) {\n      return res.status(400).json({ error: 'Missing x-org-id header' });\n    }\n\n    // Set RLS context",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/invoices.ts",
        "start": 383,
        "end": 393,
        "startLoc": {
          "line": 383,
          "column": 12,
          "position": 3284
        },
        "endLoc": {
          "line": 393,
          "column": 19,
          "position": 3398
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/invoices.ts",
        "start": 281,
        "end": 291,
        "startLoc": {
          "line": 281,
          "column": 7,
          "position": 2396
        },
        "endLoc": {
          "line": 291,
          "column": 25,
          "position": 2510
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ",\n        updatedAt: new Date().toISOString()\n      })\n      .where(eq(invoices.id, id))\n      .returning();\n\n    if (!updatedInvoice) {\n      return res.status(404).json({ \n        error: 'Invoice not found',\n        message: `Invoice with ID ${id} not found or access denied`\n      });\n    }\n\n    structuredLogger.info('Invoice sent'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/invoices.ts",
        "start": 400,
        "end": 413,
        "startLoc": {
          "line": 400,
          "column": 2,
          "position": 3462
        },
        "endLoc": {
          "line": 413,
          "column": 15,
          "position": 3561
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/invoices.ts",
        "start": 335,
        "end": 348,
        "startLoc": {
          "line": 335,
          "column": 11,
          "position": 2941
        },
        "endLoc": {
          "line": 348,
          "column": 18,
          "position": 3040
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "('/:id', async (req, res) => {\n  try {\n    const { id } = req.params;\n    const orgId = req.headers['x-org-id'] as string;\n    const userId = req.headers['x-user-id'] as string;\n    \n    if (!orgId) {\n      return res.status(400).json({ error: 'Missing x-org-id header' });\n    }\n\n    // Set RLS context\n    await db.execute(`SET LOCAL app.org_id = '${orgId}'`);\n\n    const [deletedInvoice",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/invoices.ts",
        "start": 441,
        "end": 454,
        "startLoc": {
          "line": 441,
          "column": 7,
          "position": 3750
        },
        "endLoc": {
          "line": 454,
          "column": 15,
          "position": 3888
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/invoices.ts",
        "start": 281,
        "end": 396,
        "startLoc": {
          "line": 281,
          "column": 4,
          "position": 2394
        },
        "endLoc": {
          "line": 396,
          "column": 15,
          "position": 3420
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ").optional(),\n  search: z.string().optional(),\n  limit: z.coerce.number().int().positive().max(100).default(50).optional(),\n});\n\nconst CreateProductSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/inventory-kardex.ts",
        "start": 13,
        "end": 18,
        "startLoc": {
          "line": 13,
          "column": 2,
          "position": 135
        },
        "endLoc": {
          "line": 18,
          "column": 20,
          "position": 199
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/supplier-scorecard.ts",
        "start": 15,
        "end": 20,
        "startLoc": {
          "line": 15,
          "column": 2,
          "position": 232
        },
        "endLoc": {
          "line": 20,
          "column": 21,
          "position": 296
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "]).optional(),\n  startDate: z.string().datetime().optional(),\n  endDate: z.string().datetime().optional(),\n  limit: z.coerce.number().int().positive().max(100).default(50).optional(),\n});\n\nconst CreateKardexEntrySchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/inventory-kardex.ts",
        "start": 42,
        "end": 48,
        "startLoc": {
          "line": 42,
          "column": 14,
          "position": 599
        },
        "endLoc": {
          "line": 48,
          "column": 24,
          "position": 687
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/supplier-scorecard.ts",
        "start": 76,
        "end": 82,
        "startLoc": {
          "line": 76,
          "column": 11,
          "position": 1223
        },
        "endLoc": {
          "line": 82,
          "column": 23,
          "position": 1311
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ": z.string().optional(),\n  startDate: z.string().datetime().optional(),\n  endDate: z.string().datetime().optional(),\n  limit: z.coerce.number().int().positive().max(100).default(50).optional(),\n});\n\nconst CreateCycleCountSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/inventory-kardex.ts",
        "start": 87,
        "end": 93,
        "startLoc": {
          "line": 87,
          "column": 11,
          "position": 1296
        },
        "endLoc": {
          "line": 93,
          "column": 23,
          "position": 1389
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/sepa-robust.ts",
        "start": 14,
        "end": 82,
        "startLoc": {
          "line": 14,
          "column": 10,
          "position": 181
        },
        "endLoc": {
          "line": 82,
          "column": 23,
          "position": 1311
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "]),\n  startDate: z.string().datetime(),\n  endDate: z.string().datetime(),\n  generatedBy: z.string().min(1),\n});\n\nconst GetStatsSchema = z.object({\n  organizationId: z.string().min(1),\n});\n\n// Routes\n\n// Product Management",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/inventory-kardex.ts",
        "start": 110,
        "end": 122,
        "startLoc": {
          "line": 110,
          "column": 22,
          "position": 1622
        },
        "endLoc": {
          "line": 122,
          "column": 22,
          "position": 1713
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/supplier-scorecard.ts",
        "start": 134,
        "end": 84,
        "startLoc": {
          "line": 134,
          "column": 17,
          "position": 2126
        },
        "endLoc": {
          "line": 84,
          "column": 55,
          "position": 1026
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "(\n      reportData.organizationId,\n      reportData.reportType,\n      reportData.startDate,\n      reportData.endDate,\n      reportData.generatedBy\n    );\n    \n    res.status(201).json({\n      success: true,\n      data: report,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Error generating inventory report'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/inventory-kardex.ts",
        "start": 423,
        "end": 437,
        "startLoc": {
          "line": 423,
          "column": 24,
          "position": 4360
        },
        "endLoc": {
          "line": 437,
          "column": 36,
          "position": 4458
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/supplier-scorecard.ts",
        "start": 375,
        "end": 389,
        "startLoc": {
          "line": 375,
          "column": 23,
          "position": 4295
        },
        "endLoc": {
          "line": 389,
          "column": 35,
          "position": 4393
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ".parse({\n      ...req.query,\n      limit: req.query.limit ? parseInt(req.query.limit as string) : 50,\n      offset: req.query.offset ? parseInt(req.query.offset as string) : 0,\n    });\n    \n    const result = await interactionsService",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/interactions.ts",
        "start": 14,
        "end": 20,
        "startLoc": {
          "line": 14,
          "column": 25,
          "position": 157
        },
        "endLoc": {
          "line": 20,
          "column": 20,
          "position": 245
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/sepa.ts",
        "start": 17,
        "end": 23,
        "startLoc": {
          "line": 17,
          "column": 17,
          "position": 162
        },
        "endLoc": {
          "line": 23,
          "column": 12,
          "position": 250
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "(orgId, filters);\n    \n    res.set({\n      'X-Est-Cost-EUR': '0.0010',\n      'X-Budget-Pct': '0.1',\n      'X-Latency-ms': '25',\n      'X-Route': 'local',\n      'X-Correlation-Id': `req_${Date.now()}`\n    });\n    \n    res.json({\n      success: true,\n      data: result.interactions",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/interactions.ts",
        "start": 20,
        "end": 32,
        "startLoc": {
          "line": 20,
          "column": 16,
          "position": 248
        },
        "endLoc": {
          "line": 32,
          "column": 13,
          "position": 334
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/sepa.ts",
        "start": 23,
        "end": 35,
        "startLoc": {
          "line": 23,
          "column": 16,
          "position": 253
        },
        "endLoc": {
          "line": 35,
          "column": 13,
          "position": 339
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ".length,\n      total: result.total,\n      filters: filters\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n    \n    logger.error('Failed to get interactions'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/interactions.ts",
        "start": 33,
        "end": 46,
        "startLoc": {
          "line": 33,
          "column": 13,
          "position": 344
        },
        "endLoc": {
          "line": 46,
          "column": 29,
          "position": 445
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/sepa.ts",
        "start": 36,
        "end": 49,
        "startLoc": {
          "line": 36,
          "column": 13,
          "position": 349
        },
        "endLoc": {
          "line": 49,
          "column": 34,
          "position": 450
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "});\n    }\n    \n    res.set({\n      'X-Est-Cost-EUR': '0.0005',\n      'X-Budget-Pct': '0.05',\n      'X-Latency-ms': '15',\n      'X-Route': 'local',\n      'X-Correlation-Id': `req_${Date.now()}`\n    });\n    \n    res.json({\n      success: true,\n      data: interaction",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/interactions.ts",
        "start": 71,
        "end": 84,
        "startLoc": {
          "line": 71,
          "column": 7,
          "position": 661
        },
        "endLoc": {
          "line": 84,
          "column": 12,
          "position": 744
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/sepa.ts",
        "start": 74,
        "end": 87,
        "startLoc": {
          "line": 74,
          "column": 7,
          "position": 666
        },
        "endLoc": {
          "line": 87,
          "column": 12,
          "position": 749
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "(orgId, userId, data);\n    \n    res.set({\n      'X-Est-Cost-EUR': '0.0020',\n      'X-Budget-Pct': '0.2',\n      'X-Latency-ms': '45',\n      'X-Route': 'local',\n      'X-Correlation-Id': `req_${Date.now()}`\n    });\n    \n    res.status(201).json({\n      success: true,\n      data: interaction",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/interactions.ts",
        "start": 107,
        "end": 119,
        "startLoc": {
          "line": 107,
          "column": 18,
          "position": 961
        },
        "endLoc": {
          "line": 119,
          "column": 12,
          "position": 1053
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/sepa.ts",
        "start": 110,
        "end": 122,
        "startLoc": {
          "line": 110,
          "column": 18,
          "position": 966
        },
        "endLoc": {
          "line": 122,
          "column": 12,
          "position": 1058
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n    \n    logger.error('Failed to create interaction'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/interactions.ts",
        "start": 120,
        "end": 130,
        "startLoc": {
          "line": 120,
          "column": 5,
          "position": 1056
        },
        "endLoc": {
          "line": 130,
          "column": 31,
          "position": 1137
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/sepa.ts",
        "start": 39,
        "end": 49,
        "startLoc": {
          "line": 39,
          "column": 5,
          "position": 369
        },
        "endLoc": {
          "line": 49,
          "column": 34,
          "position": 450
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ", async (req, res) => {\n  try {\n    const orgId = req.headers['x-org-id'] as string || 'demo-org-1';\n    const userId = req.headers['x-user-id'] as string || 'demo-user';\n    const { id } = req.params;\n    \n    const data = UpdateInteractionSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/interactions.ts",
        "start": 144,
        "end": 150,
        "startLoc": {
          "line": 144,
          "column": 7,
          "position": 1232
        },
        "endLoc": {
          "line": 150,
          "column": 24,
          "position": 1323
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/sepa.ts",
        "start": 147,
        "end": 153,
        "startLoc": {
          "line": 147,
          "column": 20,
          "position": 1237
        },
        "endLoc": {
          "line": 153,
          "column": 22,
          "position": 1328
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "});\n    }\n    \n    res.set({\n      'X-Est-Cost-EUR': '0.0015',\n      'X-Budget-Pct': '0.15',\n      'X-Latency-ms': '35',\n      'X-Route': 'local',\n      'X-Correlation-Id': `req_${Date.now()}`\n    });\n    \n    res.json({\n      success: true,\n      data: interaction",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/interactions.ts",
        "start": 157,
        "end": 170,
        "startLoc": {
          "line": 157,
          "column": 7,
          "position": 1399
        },
        "endLoc": {
          "line": 170,
          "column": 12,
          "position": 1482
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/sepa.ts",
        "start": 160,
        "end": 173,
        "startLoc": {
          "line": 160,
          "column": 7,
          "position": 1408
        },
        "endLoc": {
          "line": 173,
          "column": 12,
          "position": 1491
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ".json({\n      success: true,\n      data: interaction\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n    \n    logger.error('Failed to update interaction'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/interactions.ts",
        "start": 168,
        "end": 181,
        "startLoc": {
          "line": 168,
          "column": 4,
          "position": 1466
        },
        "endLoc": {
          "line": 181,
          "column": 31,
          "position": 1566
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/interactions.ts",
        "start": 117,
        "end": 49,
        "startLoc": {
          "line": 117,
          "column": 2,
          "position": 1037
        },
        "endLoc": {
          "line": 49,
          "column": 34,
          "position": 450
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "('/:id', async (req, res) => {\n  try {\n    const orgId = req.headers['x-org-id'] as string || 'demo-org-1';\n    const userId = req.headers['x-user-id'] as string || 'demo-user';\n    const { id } = req.params;\n    \n    const deleted = await interactionsService",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/interactions.ts",
        "start": 196,
        "end": 202,
        "startLoc": {
          "line": 196,
          "column": 7,
          "position": 1670
        },
        "endLoc": {
          "line": 202,
          "column": 20,
          "position": 1765
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/interactions.ts",
        "start": 144,
        "end": 205,
        "startLoc": {
          "line": 144,
          "column": 4,
          "position": 1230
        },
        "endLoc": {
          "line": 205,
          "column": 12,
          "position": 1774
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "});\n    }\n    \n    res.set({\n      'X-Est-Cost-EUR': '0.0005',\n      'X-Budget-Pct': '0.05',\n      'X-Latency-ms': '20',\n      'X-Route': 'local',\n      'X-Correlation-Id': `req_${Date.now()}`\n    });\n    \n    res.json({\n      success: true,\n      message: 'Interaction deleted successfully'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/interactions.ts",
        "start": 208,
        "end": 221,
        "startLoc": {
          "line": 208,
          "column": 7,
          "position": 1819
        },
        "endLoc": {
          "line": 221,
          "column": 35,
          "position": 1902
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/sepa.ts",
        "start": 211,
        "end": 224,
        "startLoc": {
          "line": 211,
          "column": 7,
          "position": 1828
        },
        "endLoc": {
          "line": 224,
          "column": 40,
          "position": 1911
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "(orgId);\n    \n    res.set({\n      'X-Est-Cost-EUR': '0.0020',\n      'X-Budget-Pct': '0.2',\n      'X-Latency-ms': '40',\n      'X-Route': 'local',\n      'X-Correlation-Id': `req_${Date.now()}`\n    });\n    \n    res.json({\n      success: true,\n      data: summary\n    });\n  } catch (error) {\n    logger.error('Failed to get interaction summary'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/interactions.ts",
        "start": 242,
        "end": 257,
        "startLoc": {
          "line": 242,
          "column": 22,
          "position": 2079
        },
        "endLoc": {
          "line": 257,
          "column": 36,
          "position": 2183
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/sepa.ts",
        "start": 279,
        "end": 294,
        "startLoc": {
          "line": 279,
          "column": 15,
          "position": 2362
        },
        "endLoc": {
          "line": 294,
          "column": 29,
          "position": 2466
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "(orgId);\n    \n    res.set({\n      'X-Est-Cost-EUR': '0.0030',\n      'X-Budget-Pct': '0.3',\n      'X-Latency-ms': '60',\n      'X-Route': 'local',\n      'X-Correlation-Id': `req_${Date.now()}`\n    });\n    \n    res.json({\n      success: true,\n      data: analytics\n    });\n  } catch (error) {\n    logger.error('Failed to get interaction analytics'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/interactions.ts",
        "start": 274,
        "end": 289,
        "startLoc": {
          "line": 274,
          "column": 24,
          "position": 2326
        },
        "endLoc": {
          "line": 289,
          "column": 38,
          "position": 2430
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/sepa.ts",
        "start": 311,
        "end": 326,
        "startLoc": {
          "line": 311,
          "column": 17,
          "position": 2609
        },
        "endLoc": {
          "line": 326,
          "column": 31,
          "position": 2713
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "]).optional(),\n  isActive: z.coerce.boolean().optional(),\n  limit: z.coerce.number().int().positive().max(100).default(50).optional(),\n});\n\nconst GetVoiceInsightsSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/interactions-sas-av.ts",
        "start": 142,
        "end": 147,
        "startLoc": {
          "line": 142,
          "column": 11,
          "position": 2240
        },
        "endLoc": {
          "line": 147,
          "column": 23,
          "position": 2307
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/rls-generativa.ts",
        "start": 22,
        "end": 27,
        "startLoc": {
          "line": 22,
          "column": 6,
          "position": 259
        },
        "endLoc": {
          "line": 27,
          "column": 22,
          "position": 326
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "]).optional(),\n  severity: z.enum(['low', 'medium', 'high', 'critical']).optional(),\n  isActive: z.coerce.boolean().optional(),\n  limit: z.coerce.number().int().positive().max(100).default(50).optional(),\n});\n\nconst GenerateReportSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/interactions-sas-av.ts",
        "start": 149,
        "end": 155,
        "startLoc": {
          "line": 149,
          "column": 19,
          "position": 2352
        },
        "endLoc": {
          "line": 155,
          "column": 21,
          "position": 2446
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/interactions-sas-av.ts",
        "start": 141,
        "end": 27,
        "startLoc": {
          "line": 141,
          "column": 17,
          "position": 2213
        },
        "endLoc": {
          "line": 27,
          "column": 22,
          "position": 326
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "]),\n  startDate: z.string().datetime(),\n  endDate: z.string().datetime(),\n  generatedBy: z.string().min(1),\n});\n\nconst GetStatsSchema = z.object({\n  organizationId: z.string().min(1),\n});\n\n// Routes\n\n// Interaction Management",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/interactions-sas-av.ts",
        "start": 157,
        "end": 169,
        "startLoc": {
          "line": 157,
          "column": 24,
          "position": 2494
        },
        "endLoc": {
          "line": 169,
          "column": 26,
          "position": 2585
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/supplier-scorecard.ts",
        "start": 134,
        "end": 84,
        "startLoc": {
          "line": 134,
          "column": 17,
          "position": 2126
        },
        "endLoc": {
          "line": 84,
          "column": 55,
          "position": 1026
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "(filters.organizationId, filters);\n    \n    res.json({\n      success: true,\n      data: {\n        insights,\n        total: insights.length,\n        filters\n      },\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Error getting voice insights'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/interactions-sas-av.ts",
        "start": 312,
        "end": 324,
        "startLoc": {
          "line": 312,
          "column": 17,
          "position": 3838
        },
        "endLoc": {
          "line": 324,
          "column": 31,
          "position": 3925
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/interactions-sas-av.ts",
        "start": 287,
        "end": 299,
        "startLoc": {
          "line": 287,
          "column": 21,
          "position": 3637
        },
        "endLoc": {
          "line": 299,
          "column": 35,
          "position": 3724
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "(\n      reportData.organizationId,\n      reportData.reportType,\n      reportData.startDate,\n      reportData.endDate,\n      reportData.generatedBy\n    );\n    \n    res.status(201).json({\n      success: true,\n      data: report,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Error generating interaction report'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/interactions-sas-av.ts",
        "start": 337,
        "end": 351,
        "startLoc": {
          "line": 337,
          "column": 26,
          "position": 4039
        },
        "endLoc": {
          "line": 351,
          "column": 38,
          "position": 4137
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/supplier-scorecard.ts",
        "start": 375,
        "end": 389,
        "startLoc": {
          "line": 375,
          "column": 23,
          "position": 4295
        },
        "endLoc": {
          "line": 389,
          "column": 35,
          "position": 4393
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ");\n\n    if (!task) {\n      res.status(404).json({\n        success: false,\n        error: 'Task not found',\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    res.json({\n      success: true,\n      data: task,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    if",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/hitl-v2.ts",
        "start": 195,
        "end": 212,
        "startLoc": {
          "line": 195,
          "column": 14,
          "position": 2071
        },
        "endLoc": {
          "line": 212,
          "column": 3,
          "position": 2190
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/hitl-v2.ts",
        "start": 122,
        "end": 139,
        "startLoc": {
          "line": 122,
          "column": 7,
          "position": 1453
        },
        "endLoc": {
          "line": 139,
          "column": 17,
          "position": 1572
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "res.json({\n      success: true,\n      data: task,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({\n        success: false,\n        error: 'Invalid request data',\n        details: error.errors,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    structuredLogger.error('Failed to update HITL task'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/hitl-v2.ts",
        "start": 206,
        "end": 222,
        "startLoc": {
          "line": 206,
          "column": 5,
          "position": 2139
        },
        "endLoc": {
          "line": 222,
          "column": 29,
          "position": 2271
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/hitl-v2.ts",
        "start": 160,
        "end": 176,
        "startLoc": {
          "line": 160,
          "column": 5,
          "position": 1756
        },
        "endLoc": {
          "line": 176,
          "column": 29,
          "position": 1888
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      taskId: req.params.taskId,\n      requestId: req.headers['x-request-id'] as string || ''\n    });\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to update HITL task'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/hitl-v2.ts",
        "start": 222,
        "end": 230,
        "startLoc": {
          "line": 222,
          "column": 29,
          "position": 2272
        },
        "endLoc": {
          "line": 230,
          "column": 29,
          "position": 2356
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/hitl-v2.ts",
        "start": 139,
        "end": 147,
        "startLoc": {
          "line": 139,
          "column": 26,
          "position": 1577
        },
        "endLoc": {
          "line": 147,
          "column": 26,
          "position": 1661
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ",\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({\n        success: false,\n        error: 'Invalid request data',\n        details: error.errors,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    structuredLogger.error('Failed to add HITL comment'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/hitl-v2.ts",
        "start": 255,
        "end": 269,
        "startLoc": {
          "line": 255,
          "column": 8,
          "position": 2551
        },
        "endLoc": {
          "line": 269,
          "column": 29,
          "position": 2665
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/hitl-v2.ts",
        "start": 162,
        "end": 176,
        "startLoc": {
          "line": 162,
          "column": 5,
          "position": 1774
        },
        "endLoc": {
          "line": 176,
          "column": 29,
          "position": 1888
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      taskId: req.params.taskId,\n      requestId: req.headers['x-request-id'] as string || ''\n    });\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to add HITL comment'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/hitl-v2.ts",
        "start": 269,
        "end": 277,
        "startLoc": {
          "line": 269,
          "column": 29,
          "position": 2666
        },
        "endLoc": {
          "line": 277,
          "column": 29,
          "position": 2750
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/hitl-v2.ts",
        "start": 139,
        "end": 147,
        "startLoc": {
          "line": 139,
          "column": 26,
          "position": 1577
        },
        "endLoc": {
          "line": 147,
          "column": 26,
          "position": 1661
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ",\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({\n        success: false,\n        error: 'Invalid request data',\n        details: error.errors,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    structuredLogger.error('Failed to add HITL attachment'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/hitl-v2.ts",
        "start": 302,
        "end": 316,
        "startLoc": {
          "line": 302,
          "column": 11,
          "position": 2945
        },
        "endLoc": {
          "line": 316,
          "column": 32,
          "position": 3059
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/hitl-v2.ts",
        "start": 162,
        "end": 176,
        "startLoc": {
          "line": 162,
          "column": 5,
          "position": 1774
        },
        "endLoc": {
          "line": 176,
          "column": 29,
          "position": 1888
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      taskId: req.params.taskId,\n      requestId: req.headers['x-request-id'] as string || ''\n    });\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to add HITL attachment'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/hitl-v2.ts",
        "start": 316,
        "end": 324,
        "startLoc": {
          "line": 316,
          "column": 32,
          "position": 3060
        },
        "endLoc": {
          "line": 324,
          "column": 32,
          "position": 3144
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/hitl-v2.ts",
        "start": 139,
        "end": 147,
        "startLoc": {
          "line": 139,
          "column": 26,
          "position": 1577
        },
        "endLoc": {
          "line": 147,
          "column": 26,
          "position": 1661
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": ",\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    res.json({\n      success: true,\n      data: task,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({\n        success: false,\n        error: 'Invalid request data',\n        details: error.errors,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    structuredLogger.error('Failed to advance HITL workflow'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/hitl-v2.ts",
        "start": 341,
        "end": 363,
        "startLoc": {
          "line": 341,
          "column": 34,
          "position": 3298
        },
        "endLoc": {
          "line": 363,
          "column": 34,
          "position": 3460
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/hitl-v2.ts",
        "start": 200,
        "end": 176,
        "startLoc": {
          "line": 200,
          "column": 17,
          "position": 2109
        },
        "endLoc": {
          "line": 176,
          "column": 29,
          "position": 1888
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      taskId: req.params.taskId,\n      requestId: req.headers['x-request-id'] as string || ''\n    });\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to advance HITL workflow'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/hitl-v2.ts",
        "start": 363,
        "end": 371,
        "startLoc": {
          "line": 363,
          "column": 34,
          "position": 3461
        },
        "endLoc": {
          "line": 371,
          "column": 34,
          "position": 3545
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/hitl-v2.ts",
        "start": 139,
        "end": 147,
        "startLoc": {
          "line": 139,
          "column": 26,
          "position": 1577
        },
        "endLoc": {
          "line": 147,
          "column": 26,
          "position": 1661
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ",\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({\n        success: false,\n        error: 'Invalid request data',\n        details: error.errors,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    structuredLogger.error('Failed to create HITL batch'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/hitl-v2.ts",
        "start": 386,
        "end": 400,
        "startLoc": {
          "line": 386,
          "column": 6,
          "position": 3658
        },
        "endLoc": {
          "line": 400,
          "column": 30,
          "position": 3772
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/hitl-v2.ts",
        "start": 162,
        "end": 176,
        "startLoc": {
          "line": 162,
          "column": 5,
          "position": 1774
        },
        "endLoc": {
          "line": 176,
          "column": 29,
          "position": 1888
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "res.json({\n      success: true,\n      data: batch,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({\n        success: false,\n        error: 'Invalid request data',\n        details: error.errors,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    structuredLogger.error('Failed to add tasks to HITL batch'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/hitl-v2.ts",
        "start": 430,
        "end": 446,
        "startLoc": {
          "line": 430,
          "column": 5,
          "position": 4025
        },
        "endLoc": {
          "line": 446,
          "column": 36,
          "position": 4157
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/hitl-v2.ts",
        "start": 384,
        "end": 176,
        "startLoc": {
          "line": 384,
          "column": 5,
          "position": 3640
        },
        "endLoc": {
          "line": 176,
          "column": 29,
          "position": 1888
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "]).optional(),\n  startDate: z.string().datetime().optional(),\n  endDate: z.string().datetime().optional(),\n  limit: z.coerce.number().int().positive().max(100).default(50).optional(),\n});\n\nconst CreateTaskSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/hitl-ownership-sla.ts",
        "start": 109,
        "end": 115,
        "startLoc": {
          "line": 109,
          "column": 12,
          "position": 1704
        },
        "endLoc": {
          "line": 115,
          "column": 17,
          "position": 1792
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/supplier-scorecard.ts",
        "start": 76,
        "end": 82,
        "startLoc": {
          "line": 76,
          "column": 11,
          "position": 1223
        },
        "endLoc": {
          "line": 82,
          "column": 23,
          "position": 1311
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "]),\n  startDate: z.string().datetime(),\n  endDate: z.string().datetime(),\n  generatedBy: z.string().min(1),\n});\n\nconst GetStatsSchema = z.object({\n  organizationId: z.string().min(1),\n});\n\n// Routes\n\n// Agent Management",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/hitl-ownership-sla.ts",
        "start": 229,
        "end": 241,
        "startLoc": {
          "line": 229,
          "column": 18,
          "position": 3591
        },
        "endLoc": {
          "line": 241,
          "column": 20,
          "position": 3682
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/supplier-scorecard.ts",
        "start": 134,
        "end": 84,
        "startLoc": {
          "line": 134,
          "column": 17,
          "position": 2126
        },
        "endLoc": {
          "line": 84,
          "column": 55,
          "position": 1026
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", filters);\n    \n    res.json({\n      success: true,\n      data: {\n        tasks,\n        total: tasks.length,\n        filters\n      },\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Error getting HITL tasks'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/hitl-ownership-sla.ts",
        "start": 407,
        "end": 419,
        "startLoc": {
          "line": 407,
          "column": 15,
          "position": 5132
        },
        "endLoc": {
          "line": 419,
          "column": 27,
          "position": 5215
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/hitl-v2.ts",
        "start": 92,
        "end": 104,
        "startLoc": {
          "line": 92,
          "column": 7,
          "position": 1208
        },
        "endLoc": {
          "line": 104,
          "column": 27,
          "position": 1290
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ".generateReport(\n      reportData.organizationId,\n      reportData.reportType,\n      reportData.startDate,\n      reportData.endDate,\n      reportData.generatedBy\n    );\n    \n    res.status(201).json({\n      success: true,\n      data: report,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Error generating HITL report'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/hitl-ownership-sla.ts",
        "start": 561,
        "end": 575,
        "startLoc": {
          "line": 561,
          "column": 24,
          "position": 6413
        },
        "endLoc": {
          "line": 575,
          "column": 31,
          "position": 6513
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/sepa-robust.ts",
        "start": 264,
        "end": 389,
        "startLoc": {
          "line": 264,
          "column": 18,
          "position": 2868
        },
        "endLoc": {
          "line": 389,
          "column": 35,
          "position": 4393
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "};\n  } catch (error) {\n    return {\n      status: 'unhealthy',\n      responseTime: Date.now() - startTime,\n      lastCheck: new Date().toISOString(),\n      error: error instanceof Error ? error.message : 'Unknown error'\n    };\n  }\n}\n\nasync function checkAzureOpenAIHealth",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/health.ts",
        "start": 243,
        "end": 254,
        "startLoc": {
          "line": 243,
          "column": 5,
          "position": 1973
        },
        "endLoc": {
          "line": 254,
          "column": 23,
          "position": 2063
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/health.ts",
        "start": 215,
        "end": 226,
        "startLoc": {
          "line": 215,
          "column": 5,
          "position": 1765
        },
        "endLoc": {
          "line": 226,
          "column": 17,
          "position": 1855
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "return {\n      status: 'healthy',\n      responseTime: Date.now() - startTime,\n      lastCheck: new Date().toISOString()\n    };\n  } catch (error) {\n    return {\n      status: 'unhealthy',\n      responseTime: Date.now() - startTime,\n      lastCheck: new Date().toISOString(),\n      error: error instanceof Error ? error.message : 'Unknown error'\n    };\n  }\n}\n\nasync function checkExternalAPIsHealth",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/health.ts",
        "start": 267,
        "end": 282,
        "startLoc": {
          "line": 267,
          "column": 5,
          "position": 2140
        },
        "endLoc": {
          "line": 282,
          "column": 24,
          "position": 2271
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/health.ts",
        "start": 239,
        "end": 226,
        "startLoc": {
          "line": 239,
          "column": 5,
          "position": 1932
        },
        "endLoc": {
          "line": 226,
          "column": 17,
          "position": 1855
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ",\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({\n        success: false,\n        error: 'Invalid request data',\n        details: error.errors,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    structuredLogger.error('Failed to get users'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/graph-wrappers.ts",
        "start": 74,
        "end": 88,
        "startLoc": {
          "line": 74,
          "column": 2,
          "position": 783
        },
        "endLoc": {
          "line": 88,
          "column": 22,
          "position": 897
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/hitl-v2.ts",
        "start": 162,
        "end": 176,
        "startLoc": {
          "line": 162,
          "column": 5,
          "position": 1774
        },
        "endLoc": {
          "line": 176,
          "column": 29,
          "position": 1888
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ",\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({\n        success: false,\n        error: 'Invalid request data',\n        details: error.errors,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    structuredLogger.error('Failed to get user'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/graph-wrappers.ts",
        "start": 122,
        "end": 136,
        "startLoc": {
          "line": 122,
          "column": 5,
          "position": 1168
        },
        "endLoc": {
          "line": 136,
          "column": 21,
          "position": 1282
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/hitl-v2.ts",
        "start": 162,
        "end": 176,
        "startLoc": {
          "line": 162,
          "column": 5,
          "position": 1774
        },
        "endLoc": {
          "line": 176,
          "column": 29,
          "position": 1888
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "},\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({\n        success: false,\n        error: 'Invalid request data',\n        details: error.errors,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    structuredLogger.error('Failed to get messages'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/graph-wrappers.ts",
        "start": 167,
        "end": 181,
        "startLoc": {
          "line": 167,
          "column": 7,
          "position": 1521
        },
        "endLoc": {
          "line": 181,
          "column": 25,
          "position": 1636
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/graph-wrappers.ts",
        "start": 74,
        "end": 176,
        "startLoc": {
          "line": 74,
          "column": 7,
          "position": 782
        },
        "endLoc": {
          "line": 176,
          "column": 29,
          "position": 1888
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ".length\n      },\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({\n        success: false,\n        error: 'Invalid request data',\n        details: error.errors,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    structuredLogger.error('Failed to get calendar events'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/graph-wrappers.ts",
        "start": 210,
        "end": 225,
        "startLoc": {
          "line": 210,
          "column": 7,
          "position": 1857
        },
        "endLoc": {
          "line": 225,
          "column": 32,
          "position": 1976
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/graph-wrappers.ts",
        "start": 73,
        "end": 176,
        "startLoc": {
          "line": 73,
          "column": 6,
          "position": 778
        },
        "endLoc": {
          "line": 176,
          "column": 29,
          "position": 1888
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ".length\n      },\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({\n        success: false,\n        error: 'Invalid request data',\n        details: error.errors,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    structuredLogger.error('Failed to get drive items'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/graph-wrappers.ts",
        "start": 253,
        "end": 268,
        "startLoc": {
          "line": 253,
          "column": 6,
          "position": 2191
        },
        "endLoc": {
          "line": 268,
          "column": 28,
          "position": 2310
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/graph-wrappers.ts",
        "start": 73,
        "end": 176,
        "startLoc": {
          "line": 73,
          "column": 6,
          "position": 778
        },
        "endLoc": {
          "line": 176,
          "column": 29,
          "position": 1888
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ".length\n      },\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({\n        success: false,\n        error: 'Invalid request data',\n        details: error.errors,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    structuredLogger.error('Failed to get teams'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/graph-wrappers.ts",
        "start": 292,
        "end": 307,
        "startLoc": {
          "line": 292,
          "column": 6,
          "position": 2509
        },
        "endLoc": {
          "line": 307,
          "column": 22,
          "position": 2628
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/graph-wrappers.ts",
        "start": 73,
        "end": 176,
        "startLoc": {
          "line": 73,
          "column": 6,
          "position": 778
        },
        "endLoc": {
          "line": 176,
          "column": 29,
          "position": 1888
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ".length\n      },\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({\n        success: false,\n        error: 'Invalid request data',\n        details: error.errors,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    structuredLogger.error('Failed to get team channels'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/graph-wrappers.ts",
        "start": 337,
        "end": 352,
        "startLoc": {
          "line": 337,
          "column": 9,
          "position": 2851
        },
        "endLoc": {
          "line": 352,
          "column": 30,
          "position": 2970
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/graph-wrappers.ts",
        "start": 73,
        "end": 176,
        "startLoc": {
          "line": 73,
          "column": 6,
          "position": 778
        },
        "endLoc": {
          "line": 176,
          "column": 29,
          "position": 1888
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ",\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({\n        success: false,\n        error: 'Invalid request data',\n        details: error.errors,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    structuredLogger.error('Failed to add message to outbox'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/graph-wrappers.ts",
        "start": 375,
        "end": 389,
        "startLoc": {
          "line": 375,
          "column": 8,
          "position": 3168
        },
        "endLoc": {
          "line": 389,
          "column": 34,
          "position": 3282
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/hitl-v2.ts",
        "start": 162,
        "end": 176,
        "startLoc": {
          "line": 162,
          "column": 5,
          "position": 1774
        },
        "endLoc": {
          "line": 176,
          "column": 29,
          "position": 1888
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "},\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({\n        success: false,\n        error: 'Invalid request data',\n        details: error.errors,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    structuredLogger.error('Failed to get outbox messages'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/graph-wrappers.ts",
        "start": 418,
        "end": 432,
        "startLoc": {
          "line": 418,
          "column": 7,
          "position": 3508
        },
        "endLoc": {
          "line": 432,
          "column": 32,
          "position": 3623
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/graph-wrappers.ts",
        "start": 74,
        "end": 176,
        "startLoc": {
          "line": 74,
          "column": 7,
          "position": 782
        },
        "endLoc": {
          "line": 176,
          "column": 29,
          "position": 1888
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ",\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    if (error instanceof Error && error.message.includes('not found')) {\n      res.status(404).json({\n        success: false,\n        error: 'Message not found',\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    if (error instanceof Error && error.message.includes('cannot be cancelled'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/graph-wrappers.ts",
        "start": 500,
        "end": 513,
        "startLoc": {
          "line": 500,
          "column": 27,
          "position": 4216
        },
        "endLoc": {
          "line": 513,
          "column": 22,
          "position": 4343
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/graph-wrappers.ts",
        "start": 454,
        "end": 467,
        "startLoc": {
          "line": 454,
          "column": 25,
          "position": 3814
        },
        "endLoc": {
          "line": 467,
          "column": 24,
          "position": 3941
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      messageId: req.params.messageId,\n      requestId: req.headers['x-request-id'] as string || ''\n    });\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to cancel outbox message'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/graph-wrappers.ts",
        "start": 523,
        "end": 531,
        "startLoc": {
          "line": 523,
          "column": 34,
          "position": 4417
        },
        "endLoc": {
          "line": 531,
          "column": 34,
          "position": 4501
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/graph-wrappers.ts",
        "start": 477,
        "end": 485,
        "startLoc": {
          "line": 477,
          "column": 32,
          "position": 4015
        },
        "endLoc": {
          "line": 485,
          "column": 32,
          "position": 4099
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ", error as Error);\n    res.status(503).json({\n      status: 'unhealthy',\n      timestamp: new Date().toISOString(),\n      error: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\nexport default router;",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/gdpr-compliance.ts",
        "start": 966,
        "end": 975,
        "startLoc": {
          "line": 966,
          "column": 46,
          "position": 7640
        },
        "endLoc": {
          "line": 975,
          "column": 2,
          "position": 7722
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/gdpr-hitl.ts",
        "start": 608,
        "end": 617,
        "startLoc": {
          "line": 608,
          "column": 40,
          "position": 4720
        },
        "endLoc": {
          "line": 617,
          "column": 2,
          "position": 4802
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "(filters.organizationId, filters);\n    \n    res.json({\n      success: true,\n      data: {\n        transactions,\n        total: transactions.length,\n        filters\n      },\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Error getting VAT transactions'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/fiscalidad-regional.ts",
        "start": 245,
        "end": 257,
        "startLoc": {
          "line": 245,
          "column": 19,
          "position": 2907
        },
        "endLoc": {
          "line": 257,
          "column": 33,
          "position": 2994
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/sepa-robust.ts",
        "start": 102,
        "end": 114,
        "startLoc": {
          "line": 102,
          "column": 16,
          "position": 1480
        },
        "endLoc": {
          "line": 114,
          "column": 41,
          "position": 1567
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ");\n    \n    if (!region) {\n      return res.status(404).json({\n        success: false,\n        error: 'Tax region not found'\n      });\n    }\n    \n    res.json({\n      success: true,\n      data: region,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Failed to get tax region'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/fiscalidad-regional-ue.ts",
        "start": 149,
        "end": 164,
        "startLoc": {
          "line": 149,
          "column": 2,
          "position": 1337
        },
        "endLoc": {
          "line": 164,
          "column": 27,
          "position": 1445
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/fiscalidad-regional.ts",
        "start": 197,
        "end": 212,
        "startLoc": {
          "line": 197,
          "column": 3,
          "position": 2505
        },
        "endLoc": {
          "line": 212,
          "column": 27,
          "position": 2613
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ", error as Error, {\n      org_id: req.params.orgId,\n      requested_by: req.ip\n    });\n    \n    res.status(400).json({\n      success: false,\n      error: 'INVALID_REQUEST',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n/**\n * GET /v1/finops-admin/kill-switch/:orgId/status\n * Check kill switch status for an organization\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/finops-admin.ts",
        "start": 153,
        "end": 169,
        "startLoc": {
          "line": 153,
          "column": 30,
          "position": 1199
        },
        "endLoc": {
          "line": 169,
          "column": 4,
          "position": 1295
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/finops-admin.ts",
        "start": 72,
        "end": 88,
        "startLoc": {
          "line": 72,
          "column": 30,
          "position": 574
        },
        "endLoc": {
          "line": 88,
          "column": 4,
          "position": 670
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ", error as Error, {\n      org_id: req.params.orgId,\n      requested_by: req.ip\n    });\n    \n    res.status(400).json({\n      success: false,\n      error: 'INVALID_REQUEST',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n/**\n * POST /v1/finops-admin/test-budget-exceeded\n * Test endpoint to trigger budget exceeded scenario\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/finops-admin.ts",
        "start": 189,
        "end": 205,
        "startLoc": {
          "line": 189,
          "column": 36,
          "position": 1488
        },
        "endLoc": {
          "line": 205,
          "column": 4,
          "position": 1584
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/finops-admin.ts",
        "start": 72,
        "end": 88,
        "startLoc": {
          "line": 72,
          "column": 30,
          "position": 574
        },
        "endLoc": {
          "line": 88,
          "column": 4,
          "position": 670
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ", async (req, res) => {\n  const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n\n  try {\n    const validatedData",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/external-integrations.ts",
        "start": 75,
        "end": 80,
        "startLoc": {
          "line": 75,
          "column": 18,
          "position": 741
        },
        "endLoc": {
          "line": 80,
          "column": 14,
          "position": 835
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/warmup.ts",
        "start": 31,
        "end": 36,
        "startLoc": {
          "line": 31,
          "column": 10,
          "position": 244
        },
        "endLoc": {
          "line": 36,
          "column": 7,
          "position": 338
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ", async (req, res) => {\n  const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n\n  try {\n    const validatedData = TrackingSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/external-integrations.ts",
        "start": 141,
        "end": 146,
        "startLoc": {
          "line": 141,
          "column": 46,
          "position": 1239
        },
        "endLoc": {
          "line": 146,
          "column": 15,
          "position": 1337
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/warmup.ts",
        "start": 31,
        "end": 80,
        "startLoc": {
          "line": 31,
          "column": 10,
          "position": 244
        },
        "endLoc": {
          "line": 80,
          "column": 20,
          "position": 839
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", error as Error, {\n      traceId,\n      spanId\n    });\n    res.status(500).json({\n      success: false,\n      error: 'Internal server error',\n      message: (error as Error).message,\n      timestamp: new Date().toISOString(),\n      traceId\n    });\n  }\n})",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/external-integrations.ts",
        "start": 170,
        "end": 182,
        "startLoc": {
          "line": 170,
          "column": 27,
          "position": 1502
        },
        "endLoc": {
          "line": 182,
          "column": 2,
          "position": 1593
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/external-integrations.ts",
        "start": 122,
        "end": 135,
        "startLoc": {
          "line": 122,
          "column": 24,
          "position": 1134
        },
        "endLoc": {
          "line": 135,
          "column": 2,
          "position": 1227
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ", async (req, res) => {\n  const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n\n  try {\n    const validatedData = PaymentSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/external-integrations.ts",
        "start": 192,
        "end": 197,
        "startLoc": {
          "line": 192,
          "column": 19,
          "position": 1611
        },
        "endLoc": {
          "line": 197,
          "column": 14,
          "position": 1709
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/warmup.ts",
        "start": 31,
        "end": 80,
        "startLoc": {
          "line": 31,
          "column": 10,
          "position": 244
        },
        "endLoc": {
          "line": 80,
          "column": 20,
          "position": 839
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", {\n        traceId,\n        spanId,\n        errors: error.errors\n      });\n      res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors,\n        timestamp: new Date().toISOString(),\n        traceId\n      });\n    } else {\n      structuredLogger.error('Payment processing failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/external-integrations.ts",
        "start": 226,
        "end": 239,
        "startLoc": {
          "line": 226,
          "column": 28,
          "position": 1913
        },
        "endLoc": {
          "line": 239,
          "column": 28,
          "position": 2008
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/external-integrations.ts",
        "start": 109,
        "end": 122,
        "startLoc": {
          "line": 109,
          "column": 35,
          "position": 1038
        },
        "endLoc": {
          "line": 122,
          "column": 24,
          "position": 1133
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": ", error as Error, {\n        traceId,\n        spanId\n      });\n      res.status(500).json({\n        success: false,\n        error: 'Internal server error',\n        message: (error as Error).message,\n        timestamp: new Date().toISOString(),\n        traceId\n      });\n    }\n  }\n});\n\n/**\n * POST /v1/integrations/payment/refund\n * Refund payment\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/external-integrations.ts",
        "start": 239,
        "end": 257,
        "startLoc": {
          "line": 239,
          "column": 28,
          "position": 2009
        },
        "endLoc": {
          "line": 257,
          "column": 4,
          "position": 2107
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/external-integrations.ts",
        "start": 122,
        "end": 140,
        "startLoc": {
          "line": 122,
          "column": 24,
          "position": 1134
        },
        "endLoc": {
          "line": 140,
          "column": 4,
          "position": 1232
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ", async (req, res) => {\n  const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n\n  try {\n    const validatedData = RefundSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/external-integrations.ts",
        "start": 258,
        "end": 263,
        "startLoc": {
          "line": 258,
          "column": 18,
          "position": 2114
        },
        "endLoc": {
          "line": 263,
          "column": 13,
          "position": 2212
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/warmup.ts",
        "start": 31,
        "end": 80,
        "startLoc": {
          "line": 31,
          "column": 10,
          "position": 244
        },
        "endLoc": {
          "line": 80,
          "column": 20,
          "position": 839
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n\n    res.json({\n      success: true,\n      data: result,\n      timestamp: new Date().toISOString(),\n      traceId\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      structuredLogger.warn('Refund validation failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/external-integrations.ts",
        "start": 278,
        "end": 288,
        "startLoc": {
          "line": 278,
          "column": 5,
          "position": 2308
        },
        "endLoc": {
          "line": 288,
          "column": 27,
          "position": 2388
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/external-integrations.ts",
        "start": 216,
        "end": 226,
        "startLoc": {
          "line": 216,
          "column": 5,
          "position": 1832
        },
        "endLoc": {
          "line": 226,
          "column": 28,
          "position": 1912
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", {\n        traceId,\n        spanId,\n        errors: error.errors\n      });\n      res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors,\n        timestamp: new Date().toISOString(),\n        traceId\n      });\n    } else {\n      structuredLogger.error('Payment refund failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/external-integrations.ts",
        "start": 288,
        "end": 301,
        "startLoc": {
          "line": 288,
          "column": 27,
          "position": 2389
        },
        "endLoc": {
          "line": 301,
          "column": 24,
          "position": 2484
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/external-integrations.ts",
        "start": 109,
        "end": 122,
        "startLoc": {
          "line": 109,
          "column": 35,
          "position": 1038
        },
        "endLoc": {
          "line": 122,
          "column": 24,
          "position": 1133
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", error as Error, {\n        traceId,\n        spanId\n      });\n      res.status(500).json({\n        success: false,\n        error: 'Internal server error',\n        message: (error as Error).message,\n        timestamp: new Date().toISOString(),\n        traceId\n      });\n    }\n  }\n});\n\n// ============================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/external-integrations.ts",
        "start": 301,
        "end": 316,
        "startLoc": {
          "line": 301,
          "column": 24,
          "position": 2485
        },
        "endLoc": {
          "line": 316,
          "column": 80,
          "position": 2583
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/external-integrations.ts",
        "start": 122,
        "end": 140,
        "startLoc": {
          "line": 122,
          "column": 24,
          "position": 1134
        },
        "endLoc": {
          "line": 140,
          "column": 4,
          "position": 1232
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ", async (req, res) => {\n  const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n\n  try {\n    const validatedData = MarketDataSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/external-integrations.ts",
        "start": 324,
        "end": 329,
        "startLoc": {
          "line": 324,
          "column": 35,
          "position": 2597
        },
        "endLoc": {
          "line": 329,
          "column": 17,
          "position": 2695
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/warmup.ts",
        "start": 31,
        "end": 80,
        "startLoc": {
          "line": 31,
          "column": 10,
          "position": 244
        },
        "endLoc": {
          "line": 80,
          "column": 20,
          "position": 839
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ", error as Error, {\n      traceId,\n      spanId\n    });\n    res.status(500).json({\n      success: false,\n      error: 'Internal server error',\n      message: (error as Error).message,\n      timestamp: new Date().toISOString(),\n      traceId\n    });\n  }\n});\n\n/**\n * POST /v1/integrations/market-data/batch\n * Get market data for multiple symbols\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/external-integrations.ts",
        "start": 354,
        "end": 371,
        "startLoc": {
          "line": 354,
          "column": 29,
          "position": 2866
        },
        "endLoc": {
          "line": 371,
          "column": 4,
          "position": 2961
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/external-integrations.ts",
        "start": 122,
        "end": 184,
        "startLoc": {
          "line": 122,
          "column": 24,
          "position": 1134
        },
        "endLoc": {
          "line": 184,
          "column": 80,
          "position": 1597
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ", async (req, res) => {\n  const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n\n  try {\n    const validatedData = MarketDataBatchSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/external-integrations.ts",
        "start": 372,
        "end": 377,
        "startLoc": {
          "line": 372,
          "column": 21,
          "position": 2968
        },
        "endLoc": {
          "line": 377,
          "column": 22,
          "position": 3066
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/warmup.ts",
        "start": 31,
        "end": 80,
        "startLoc": {
          "line": 31,
          "column": 10,
          "position": 244
        },
        "endLoc": {
          "line": 80,
          "column": 20,
          "position": 839
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", {\n        traceId,\n        spanId,\n        errors: error.errors\n      });\n      res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors,\n        timestamp: new Date().toISOString(),\n        traceId\n      });\n    } else {\n      structuredLogger.error('Market data batch request failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/external-integrations.ts",
        "start": 400,
        "end": 413,
        "startLoc": {
          "line": 400,
          "column": 38,
          "position": 3229
        },
        "endLoc": {
          "line": 413,
          "column": 35,
          "position": 3324
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/external-integrations.ts",
        "start": 109,
        "end": 122,
        "startLoc": {
          "line": 109,
          "column": 35,
          "position": 1038
        },
        "endLoc": {
          "line": 122,
          "column": 24,
          "position": 1133
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ", error as Error, {\n        traceId,\n        spanId\n      });\n      res.status(500).json({\n        success: false,\n        error: 'Internal server error',\n        message: (error as Error).message,\n        timestamp: new Date().toISOString(),\n        traceId\n      });\n    }\n  }\n});\n\n// ============================================================================\n// WEATHER ROUTES",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/external-integrations.ts",
        "start": 413,
        "end": 429,
        "startLoc": {
          "line": 413,
          "column": 35,
          "position": 3325
        },
        "endLoc": {
          "line": 429,
          "column": 18,
          "position": 3425
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/external-integrations.ts",
        "start": 122,
        "end": 317,
        "startLoc": {
          "line": 122,
          "column": 24,
          "position": 1134
        },
        "endLoc": {
          "line": 317,
          "column": 22,
          "position": 2585
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ", async (req, res) => {\n  const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n\n  try {\n    const validatedData = WeatherSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/external-integrations.ts",
        "start": 436,
        "end": 441,
        "startLoc": {
          "line": 436,
          "column": 33,
          "position": 3437
        },
        "endLoc": {
          "line": 441,
          "column": 14,
          "position": 3535
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/warmup.ts",
        "start": 31,
        "end": 80,
        "startLoc": {
          "line": 31,
          "column": 10,
          "position": 244
        },
        "endLoc": {
          "line": 80,
          "column": 20,
          "position": 839
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ", error as Error, {\n      traceId,\n      spanId\n    });\n    res.status(500).json({\n      success: false,\n      error: 'Internal server error',\n      message: (error as Error).message,\n      timestamp: new Date().toISOString(),\n      traceId\n    });\n  }\n});\n\n/**\n * GET /v1/integrations/weather/forecast/:providerId/:location\n * Get weather forecast for location\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/external-integrations.ts",
        "start": 466,
        "end": 483,
        "startLoc": {
          "line": 466,
          "column": 30,
          "position": 3706
        },
        "endLoc": {
          "line": 483,
          "column": 4,
          "position": 3801
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/external-integrations.ts",
        "start": 122,
        "end": 184,
        "startLoc": {
          "line": 122,
          "column": 24,
          "position": 1134
        },
        "endLoc": {
          "line": 184,
          "column": 80,
          "position": 1597
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ", async (req, res) => {\n  const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n\n  try {\n    const validatedData = WeatherForecastSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/external-integrations.ts",
        "start": 484,
        "end": 489,
        "startLoc": {
          "line": 484,
          "column": 42,
          "position": 3808
        },
        "endLoc": {
          "line": 489,
          "column": 22,
          "position": 3906
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/warmup.ts",
        "start": 31,
        "end": 80,
        "startLoc": {
          "line": 31,
          "column": 10,
          "position": 244
        },
        "endLoc": {
          "line": 80,
          "column": 20,
          "position": 839
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", {\n        traceId,\n        spanId,\n        errors: error.errors\n      });\n      res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors,\n        timestamp: new Date().toISOString(),\n        traceId\n      });\n    } else {\n      structuredLogger.error('Weather forecast request failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/external-integrations.ts",
        "start": 517,
        "end": 530,
        "startLoc": {
          "line": 517,
          "column": 37,
          "position": 4128
        },
        "endLoc": {
          "line": 530,
          "column": 34,
          "position": 4223
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/external-integrations.ts",
        "start": 109,
        "end": 122,
        "startLoc": {
          "line": 109,
          "column": 35,
          "position": 1038
        },
        "endLoc": {
          "line": 122,
          "column": 24,
          "position": 1133
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ", error as Error, {\n        traceId,\n        spanId\n      });\n      res.status(500).json({\n        success: false,\n        error: 'Internal server error',\n        message: (error as Error).message,\n        timestamp: new Date().toISOString(),\n        traceId\n      });\n    }\n  }\n});\n\n// ============================================================================\n// HEALTH AND STATUS ROUTES",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/external-integrations.ts",
        "start": 530,
        "end": 546,
        "startLoc": {
          "line": 530,
          "column": 34,
          "position": 4224
        },
        "endLoc": {
          "line": 546,
          "column": 28,
          "position": 4324
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/external-integrations.ts",
        "start": 122,
        "end": 317,
        "startLoc": {
          "line": 122,
          "column": 24,
          "position": 1134
        },
        "endLoc": {
          "line": 317,
          "column": 22,
          "position": 2585
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "router.get('/health', async (req, res) => {\n  const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n\n  try {\n    const health",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/external-integrations.ts",
        "start": 553,
        "end": 558,
        "startLoc": {
          "line": 553,
          "column": 1,
          "position": 4331
        },
        "endLoc": {
          "line": 558,
          "column": 7,
          "position": 4430
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/performance-v2.ts",
        "start": 373,
        "end": 36,
        "startLoc": {
          "line": 373,
          "column": 1,
          "position": 3345
        },
        "endLoc": {
          "line": 36,
          "column": 7,
          "position": 338
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ", error as Error, {\n      traceId,\n      spanId\n    });\n    res.status(500).json({\n      success: false,\n      error: 'Internal server error',\n      message: (error as Error).message,\n      timestamp: new Date().toISOString(),\n      traceId\n    });\n  }\n});\n\n/**\n * GET /v1/integrations/health/:providerId\n * Get health status of specific provider\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/external-integrations.ts",
        "start": 581,
        "end": 598,
        "startLoc": {
          "line": 581,
          "column": 36,
          "position": 4634
        },
        "endLoc": {
          "line": 598,
          "column": 4,
          "position": 4729
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/external-integrations.ts",
        "start": 122,
        "end": 184,
        "startLoc": {
          "line": 122,
          "column": 24,
          "position": 1134
        },
        "endLoc": {
          "line": 184,
          "column": 80,
          "position": 1597
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ", async (req, res) => {\n  const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n\n  try {\n    const health = externalIntegrations.getProviderHealth",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/external-integrations.ts",
        "start": 599,
        "end": 604,
        "startLoc": {
          "line": 599,
          "column": 22,
          "position": 4736
        },
        "endLoc": {
          "line": 604,
          "column": 18,
          "position": 4836
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/warmup.ts",
        "start": 31,
        "end": 558,
        "startLoc": {
          "line": 31,
          "column": 10,
          "position": 244
        },
        "endLoc": {
          "line": 558,
          "column": 21,
          "position": 4436
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ", error as Error, {\n      traceId,\n      spanId\n    });\n    res.status(500).json({\n      success: false,\n      error: 'Internal server error',\n      message: (error as Error).message,\n      timestamp: new Date().toISOString(),\n      traceId\n    });\n  }\n});\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/external-integrations.ts",
        "start": 629,
        "end": 643,
        "startLoc": {
          "line": 629,
          "column": 33,
          "position": 5016
        },
        "endLoc": {
          "line": 643,
          "column": 7,
          "position": 5111
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/external-integrations.ts",
        "start": 122,
        "end": 184,
        "startLoc": {
          "line": 122,
          "column": 24,
          "position": 1134
        },
        "endLoc": {
          "line": 184,
          "column": 80,
          "position": 1597
        }
      }
    },
    {
      "format": "typescript",
      "lines": 27,
      "fragment": "),\n  abTest: z.object({\n    enabled: z.boolean().default(false),\n    variants: z.array(z.object({\n      id: z.string(),\n      subject: z.string(),\n      htmlContent: z.string(),\n      percentage: z.number().min(0).max(100)\n    })).default([]),\n    winner: z.string().optional(),\n    testDuration: z.number().optional()\n  }).optional(),\n  automation: z.object({\n    enabled: z.boolean().default(false),\n    triggers: z.array(z.object({\n      type: z.string(),\n      conditions: z.record(z.any()),\n      delay: z.number().optional()\n    })).default([]),\n    actions: z.array(z.object({\n      type: z.string(),\n      config: z.record(z.any())\n    })).default([])\n  }).optional()\n});\n\nconst CreateSubscriberSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/email-marketing.ts",
        "start": 102,
        "end": 128,
        "startLoc": {
          "line": 102,
          "column": 2,
          "position": 1114
        },
        "endLoc": {
          "line": 128,
          "column": 23,
          "position": 1419
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/email-marketing.ts",
        "start": 61,
        "end": 87,
        "startLoc": {
          "line": 61,
          "column": 5,
          "position": 460
        },
        "endLoc": {
          "line": 87,
          "column": 21,
          "position": 765
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "])).optional(),\n    dateRange: z.object({\n      from: z.string().datetime().optional(),\n      to: z.string().datetime().optional()\n    }).optional(),\n    tags: z.array(z.string()).optional()\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/email-marketing.ts",
        "start": 170,
        "end": 176,
        "startLoc": {
          "line": 170,
          "column": 12,
          "position": 2134
        },
        "endLoc": {
          "line": 176,
          "column": 2,
          "position": 2219
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/social-media-management.ts",
        "start": 118,
        "end": 123,
        "startLoc": {
          "line": 118,
          "column": 10,
          "position": 1478
        },
        "endLoc": {
          "line": 123,
          "column": 2,
          "position": 1561
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "]),\n    direction: z.enum(['asc', 'desc'])\n  }).optional(),\n  pagination: z.object({\n    page: z.number().min(1).default(1),\n    limit: z.number().min(1).max(100).default(20)\n  }).optional()\n});\n\n// ============================================================================\n// CAMPAIGN ROUTES",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/email-marketing.ts",
        "start": 178,
        "end": 188,
        "startLoc": {
          "line": 178,
          "column": 12,
          "position": 2259
        },
        "endLoc": {
          "line": 188,
          "column": 19,
          "position": 2359
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/document-management.service.ts",
        "start": 121,
        "end": 137,
        "startLoc": {
          "line": 121,
          "column": 7,
          "position": 1383
        },
        "endLoc": {
          "line": 137,
          "column": 18,
          "position": 1727
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      organizationId: req.user?.organizationId\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to create email campaign'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/email-marketing.ts",
        "start": 224,
        "end": 239,
        "startLoc": {
          "line": 224,
          "column": 42,
          "position": 2626
        },
        "endLoc": {
          "line": 239,
          "column": 34,
          "position": 2751
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/social-media-management.ts",
        "start": 171,
        "end": 186,
        "startLoc": {
          "line": 171,
          "column": 42,
          "position": 1971
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ".parse(req.query);\n\n    // Convert date strings to Date objects\n    if (searchParams.filters?.dateRange) {\n      if (searchParams.filters.dateRange.from) {\n        searchParams.filters.dateRange.from = new Date(searchParams.filters.dateRange.from);\n      }\n      if (searchParams.filters.dateRange.to) {\n        searchParams.filters.dateRange.to = new Date(searchParams.filters.dateRange.to);\n      }\n    }\n\n    const result = await emailMarketingService",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/email-marketing.ts",
        "start": 248,
        "end": 260,
        "startLoc": {
          "line": 248,
          "column": 22,
          "position": 2823
        },
        "endLoc": {
          "line": 260,
          "column": 22,
          "position": 2949
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/social-media-management.ts",
        "start": 387,
        "end": 399,
        "startLoc": {
          "line": 387,
          "column": 18,
          "position": 3649
        },
        "endLoc": {
          "line": 399,
          "column": 29,
          "position": 3775
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      organizationId: req.user?.organizationId\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to list email campaigns'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/email-marketing.ts",
        "start": 268,
        "end": 283,
        "startLoc": {
          "line": 268,
          "column": 41,
          "position": 3010
        },
        "endLoc": {
          "line": 283,
          "column": 33,
          "position": 3135
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/social-media-management.ts",
        "start": 171,
        "end": 186,
        "startLoc": {
          "line": 171,
          "column": 42,
          "position": 1971
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ": req.params.id,\n      organizationId: req.user?.organizationId\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to update email campaign'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/email-marketing.ts",
        "start": 364,
        "end": 378,
        "startLoc": {
          "line": 364,
          "column": 11,
          "position": 3753
        },
        "endLoc": {
          "line": 378,
          "column": 34,
          "position": 3862
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/social-media-management.ts",
        "start": 281,
        "end": 186,
        "startLoc": {
          "line": 281,
          "column": 10,
          "position": 2854
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      organizationId: req.user?.organizationId\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to create email subscriber'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/email-marketing.ts",
        "start": 495,
        "end": 510,
        "startLoc": {
          "line": 495,
          "column": 44,
          "position": 4720
        },
        "endLoc": {
          "line": 510,
          "column": 36,
          "position": 4845
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/social-media-management.ts",
        "start": 171,
        "end": 186,
        "startLoc": {
          "line": 171,
          "column": 42,
          "position": 1971
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ": req.params.id,\n      organizationId: req.user?.organizationId\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to update email subscriber'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/email-marketing.ts",
        "start": 599,
        "end": 613,
        "startLoc": {
          "line": 599,
          "column": 13,
          "position": 5558
        },
        "endLoc": {
          "line": 613,
          "column": 36,
          "position": 5667
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/social-media-management.ts",
        "start": 281,
        "end": 186,
        "startLoc": {
          "line": 281,
          "column": 10,
          "position": 2854
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "]).optional(),\n  limit: z.number().min(1).max(100).default(50),\n  offset: z.number().min(0).default(0)\n});\n\nconst getRetriesSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/dunning-solid.ts",
        "start": 72,
        "end": 77,
        "startLoc": {
          "line": 72,
          "column": 11,
          "position": 913
        },
        "endLoc": {
          "line": 77,
          "column": 17,
          "position": 974
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/dunning-solid.ts",
        "start": 65,
        "end": 70,
        "startLoc": {
          "line": 65,
          "column": 12,
          "position": 793
        },
        "endLoc": {
          "line": 70,
          "column": 21,
          "position": 854
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "]).optional(),\n  limit: z.number().min(1).max(100).default(50),\n  offset: z.number().min(0).default(0)\n});\n\nconst updateConfigSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/dunning-solid.ts",
        "start": 79,
        "end": 84,
        "startLoc": {
          "line": 79,
          "column": 9,
          "position": 1022
        },
        "endLoc": {
          "line": 84,
          "column": 19,
          "position": 1083
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/dunning-solid.ts",
        "start": 65,
        "end": 70,
        "startLoc": {
          "line": 65,
          "column": 12,
          "position": 793
        },
        "endLoc": {
          "line": 70,
          "column": 21,
          "position": 854
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ", {\n      segmentId: req.params.segmentId,\n      error: error instanceof Error ? error.message : String(error),\n      requestId: req.headers['x-request-id'] as string || ''\n    });\n    \n    res.status(500).json({\n      success: false,\n      error: 'Failed to update dunning segment'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/dunning-solid.ts",
        "start": 250,
        "end": 258,
        "startLoc": {
          "line": 250,
          "column": 35,
          "position": 2566
        },
        "endLoc": {
          "line": 258,
          "column": 35,
          "position": 2654
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/dunning-solid.ts",
        "start": 176,
        "end": 184,
        "startLoc": {
          "line": 176,
          "column": 32,
          "position": 1940
        },
        "endLoc": {
          "line": 184,
          "column": 32,
          "position": 2028
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ".getStats();\n    \n    res.json({\n      success: true,\n      data: stats,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Failed to get dunning stats', {\n      error: error instanceof Error ? error.message : String(error),\n      requestId: req.headers['x-request-id'] as string || ''\n    });\n    \n    res.status(500).json({\n      success: false,\n      error: 'Failed to get dunning stats',\n      message: error instanceof Error ? error.message : String(error)\n    });\n  }\n});\n\n/**\n * POST /dunning-3-toques/process\n * Inicia el procesamiento de campañas de dunning\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/dunning-3-toques.ts",
        "start": 50,
        "end": 74,
        "startLoc": {
          "line": 50,
          "column": 22,
          "position": 515
        },
        "endLoc": {
          "line": 74,
          "column": 4,
          "position": 696
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/dunning-solid.ts",
        "start": 105,
        "end": 129,
        "startLoc": {
          "line": 105,
          "column": 20,
          "position": 1377
        },
        "endLoc": {
          "line": 129,
          "column": 4,
          "position": 1558
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ", {\n      campaignId: req.params.campaignId,\n      error: error instanceof Error ? error.message : String(error),\n      requestId: req.headers['x-request-id'] as string || ''\n    });\n    \n    res.status(500).json({\n      success: false,\n      error: 'Failed to get dunning campaign steps'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/dunning-3-toques.ts",
        "start": 195,
        "end": 203,
        "startLoc": {
          "line": 195,
          "column": 39,
          "position": 1676
        },
        "endLoc": {
          "line": 203,
          "column": 39,
          "position": 1764
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/dunning-3-toques.ts",
        "start": 164,
        "end": 172,
        "startLoc": {
          "line": 164,
          "column": 33,
          "position": 1421
        },
        "endLoc": {
          "line": 172,
          "column": 33,
          "position": 1509
        }
      }
    },
    {
      "format": "typescript",
      "lines": 31,
      "fragment": ".updateConfig(validatedData);\n    \n    structuredLogger.info('Dunning configuration updated', {\n      config: validatedData,\n      requestId: req.headers['x-request-id'] as string || ''\n    });\n    \n    res.json({\n      success: true,\n      message: 'Dunning configuration updated successfully',\n      data: validatedData,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Failed to update dunning config', {\n      error: error instanceof Error ? error.message : String(error),\n      requestId: req.headers['x-request-id'] as string || ''\n    });\n    \n    res.status(500).json({\n      success: false,\n      error: 'Failed to update dunning configuration',\n      message: error instanceof Error ? error.message : String(error)\n    });\n  }\n});\n\n/**\n * GET /dunning-3-toques/config\n * Obtiene la configuración actual del servicio de dunning\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/dunning-3-toques.ts",
        "start": 311,
        "end": 341,
        "startLoc": {
          "line": 311,
          "column": 22,
          "position": 2591
        },
        "endLoc": {
          "line": 341,
          "column": 4,
          "position": 2823
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/dunning-solid.ts",
        "start": 480,
        "end": 510,
        "startLoc": {
          "line": 480,
          "column": 20,
          "position": 4471
        },
        "endLoc": {
          "line": 510,
          "column": 4,
          "position": 4703
        }
      }
    },
    {
      "format": "typescript",
      "lines": 27,
      "fragment": ",\n      notificationEnabled: true\n    };\n    \n    res.json({\n      success: true,\n      data: config,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Failed to get dunning config', {\n      error: error instanceof Error ? error.message : String(error),\n      requestId: req.headers['x-request-id'] as string || ''\n    });\n    \n    res.status(500).json({\n      success: false,\n      error: 'Failed to get dunning configuration',\n      message: error instanceof Error ? error.message : String(error)\n    });\n  }\n});\n\n/**\n * POST /dunning-3-toques/campaigns/:campaignId/cancel\n * Cancela una campaña de dunning\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/dunning-3-toques.ts",
        "start": 357,
        "end": 383,
        "startLoc": {
          "line": 357,
          "column": 3,
          "position": 2947
        },
        "endLoc": {
          "line": 383,
          "column": 4,
          "position": 3134
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/dunning-solid.ts",
        "start": 525,
        "end": 551,
        "startLoc": {
          "line": 525,
          "column": 2,
          "position": 4826
        },
        "endLoc": {
          "line": 551,
          "column": 4,
          "position": 5013
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ", {\n      campaignId: req.params.campaignId,\n      error: error instanceof Error ? error.message : String(error),\n      requestId: req.headers['x-request-id'] as string || ''\n    });\n    \n    res.status(500).json({\n      success: false,\n      error: 'Failed to cancel dunning campaign'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/dunning-3-toques.ts",
        "start": 427,
        "end": 435,
        "startLoc": {
          "line": 427,
          "column": 36,
          "position": 3456
        },
        "endLoc": {
          "line": 435,
          "column": 36,
          "position": 3544
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/dunning-3-toques.ts",
        "start": 164,
        "end": 172,
        "startLoc": {
          "line": 164,
          "column": 33,
          "position": 1421
        },
        "endLoc": {
          "line": 172,
          "column": 33,
          "position": 1509
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "z.object({\n    title: z.string().min(1).max(255),\n    description: z.string().optional(),\n    tags: z.array(z.string()).default([]),\n    category: z.string().optional(),\n    author: z.string().min(1),\n    language: z.string().default('es'),\n    keywords: z.array(z.string()).default([]),\n    customFields: z.record(z.any()).default({})\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/document-management.ts",
        "start": 47,
        "end": 56,
        "startLoc": {
          "line": 47,
          "column": 2,
          "position": 269
        },
        "endLoc": {
          "line": 56,
          "column": 2,
          "position": 424
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/document-management.service.ts",
        "start": 32,
        "end": 40,
        "startLoc": {
          "line": 32,
          "column": 2,
          "position": 178
        },
        "endLoc": {
          "line": 40,
          "column": 2,
          "position": 331
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "),\n  size: z.number().positive(),\n  mimeType: z.string(),\n  checksum: z.string(),\n  isPublic: z.boolean().default(false),\n  isEncrypted: z.boolean().default(false),\n  retentionPolicy: z.object({\n    retentionDays: z.number().positive().optional(),\n    autoDelete: z.boolean().default(false),\n    legalHold: z.boolean().default(false)\n  }).optional()\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/document-management.ts",
        "start": 58,
        "end": 69,
        "startLoc": {
          "line": 58,
          "column": 8,
          "position": 464
        },
        "endLoc": {
          "line": 69,
          "column": 2,
          "position": 604
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/document-management.service.ts",
        "start": 86,
        "end": 96,
        "startLoc": {
          "line": 86,
          "column": 2,
          "position": 924
        },
        "endLoc": {
          "line": 96,
          "column": 2,
          "position": 1063
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ").optional(),\n    author: z.array(z.string()).optional(),\n    tags: z.array(z.string()).optional(),\n    category: z.string().optional(),\n    dateRange: z.object({\n      from: z.string",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/document-management.ts",
        "start": 110,
        "end": 115,
        "startLoc": {
          "line": 110,
          "column": 2,
          "position": 1205
        },
        "endLoc": {
          "line": 115,
          "column": 7,
          "position": 1283
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/document-management.service.ts",
        "start": 107,
        "end": 112,
        "startLoc": {
          "line": 107,
          "column": 21,
          "position": 1185
        },
        "endLoc": {
          "line": 112,
          "column": 5,
          "position": 1263
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ").optional(),\n    dateRange: z.object({\n      from: z.string().datetime().optional(),\n      to: z.string().datetime().optional()\n    }).optional(),\n    sizeRange",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/document-management.ts",
        "start": 113,
        "end": 118,
        "startLoc": {
          "line": 113,
          "column": 2,
          "position": 1260
        },
        "endLoc": {
          "line": 118,
          "column": 10,
          "position": 1324
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/social-media-management.ts",
        "start": 118,
        "end": 123,
        "startLoc": {
          "line": 118,
          "column": 2,
          "position": 1480
        },
        "endLoc": {
          "line": 123,
          "column": 5,
          "position": 1544
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "().optional()\n    }).optional(),\n    sizeRange: z.object({\n      min: z.number().optional(),\n      max: z.number().optional()\n    }).optional()\n  }).optional(),\n  sort: z.object({\n    field: z.enum(['name', 'createdAt', 'updatedAt', 'size', 'type']),\n    direction: z.enum(['asc', 'desc'])\n  }).optional(),\n  pagination: z.object({\n    page: z.number().min(1).default(1),\n    limit: z.number().min(1).max(100).default(20)\n  }).optional()\n});\n\n// ============================================================================\n// DOCUMENT ROUTES",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/document-management.ts",
        "start": 116,
        "end": 134,
        "startLoc": {
          "line": 116,
          "column": 9,
          "position": 1307
        },
        "endLoc": {
          "line": 134,
          "column": 19,
          "position": 1511
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/document-management.service.ts",
        "start": 113,
        "end": 137,
        "startLoc": {
          "line": 113,
          "column": 5,
          "position": 1279
        },
        "endLoc": {
          "line": 137,
          "column": 18,
          "position": 1727
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      organizationId: req.user?.organizationId\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to create document'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/document-management.ts",
        "start": 164,
        "end": 179,
        "startLoc": {
          "line": 164,
          "column": 36,
          "position": 1733
        },
        "endLoc": {
          "line": 179,
          "column": 28,
          "position": 1858
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/social-media-management.ts",
        "start": 171,
        "end": 186,
        "startLoc": {
          "line": 171,
          "column": 42,
          "position": 1971
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      organizationId: req.user?.organizationId\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to list documents'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/document-management.ts",
        "start": 198,
        "end": 213,
        "startLoc": {
          "line": 198,
          "column": 35,
          "position": 2010
        },
        "endLoc": {
          "line": 213,
          "column": 27,
          "position": 2135
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/social-media-management.ts",
        "start": 171,
        "end": 186,
        "startLoc": {
          "line": 171,
          "column": 42,
          "position": 1971
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ": req.params.id,\n      organizationId: req.user?.organizationId\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to update document'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/document-management.ts",
        "start": 288,
        "end": 302,
        "startLoc": {
          "line": 288,
          "column": 11,
          "position": 2708
        },
        "endLoc": {
          "line": 302,
          "column": 28,
          "position": 2817
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/social-media-management.ts",
        "start": 281,
        "end": 186,
        "startLoc": {
          "line": 281,
          "column": 10,
          "position": 2854
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      documentId: req.params.id,\n      organizationId: req.user?.organizationId\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to create document version'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/document-management.ts",
        "start": 381,
        "end": 397,
        "startLoc": {
          "line": 381,
          "column": 44,
          "position": 3380
        },
        "endLoc": {
          "line": 397,
          "column": 36,
          "position": 3516
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/document-management.ts",
        "start": 286,
        "end": 186,
        "startLoc": {
          "line": 286,
          "column": 36,
          "position": 2681
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ", async (req: AuthenticatedRequest, res) => {\n  try {\n    const { id } = req.params;\n    const organizationId = req.user?.organizationId || 'demo-org';\n\n    const document = await documentManagementService.getDocument(id, organizationId);\n\n    if (!document) {\n      return res.status(404).json({\n        success: false,\n        error: 'Document not found'\n      });\n    }\n\n    res.json({\n      success: true,\n      data: document.",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/document-management.ts",
        "start": 403,
        "end": 419,
        "startLoc": {
          "line": 403,
          "column": 16,
          "position": 3538
        },
        "endLoc": {
          "line": 419,
          "column": 2,
          "position": 3683
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/document-management.ts",
        "start": 219,
        "end": 235,
        "startLoc": {
          "line": 219,
          "column": 7,
          "position": 2157
        },
        "endLoc": {
          "line": 235,
          "column": 2,
          "position": 2302
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      documentId: req.params.id,\n      organizationId: req.user?.organizationId\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to grant document permission'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/document-management.ts",
        "start": 476,
        "end": 492,
        "startLoc": {
          "line": 476,
          "column": 46,
          "position": 4090
        },
        "endLoc": {
          "line": 492,
          "column": 38,
          "position": 4226
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/document-management.ts",
        "start": 286,
        "end": 186,
        "startLoc": {
          "line": 286,
          "column": 36,
          "position": 2681
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ", async (req: AuthenticatedRequest, res) => {\n  try {\n    const organizationId = req.user?.organizationId || 'demo-org';\n    const searchParams = SearchDocumentsSchema.parse(req.query);\n\n    const result = await documentManagementService.searchDocuments(organizationId, searchParams);\n\n    res.json({\n      success: true,\n      data: result,\n      message: 'Document search completed successfully'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/document-management.ts",
        "start": 502,
        "end": 512,
        "startLoc": {
          "line": 502,
          "column": 10,
          "position": 4255
        },
        "endLoc": {
          "line": 512,
          "column": 41,
          "position": 4361
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/document-management.ts",
        "start": 185,
        "end": 195,
        "startLoc": {
          "line": 185,
          "column": 4,
          "position": 1880
        },
        "endLoc": {
          "line": 195,
          "column": 35,
          "position": 1986
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      organizationId: req.user?.organizationId\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to search documents'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/document-management.ts",
        "start": 515,
        "end": 530,
        "startLoc": {
          "line": 515,
          "column": 37,
          "position": 4385
        },
        "endLoc": {
          "line": 530,
          "column": 29,
          "position": 4510
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/social-media-management.ts",
        "start": 171,
        "end": 186,
        "startLoc": {
          "line": 171,
          "column": 42,
          "position": 1971
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "]).optional(),\n  startDate: z.string().datetime().optional(),\n  endDate: z.string().datetime().optional(),\n  limit: z.coerce.number().int().positive().max(100).default(50).optional(),\n});\n\nconst CreateDLQMessageSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/dlg-grooming.ts",
        "start": 14,
        "end": 20,
        "startLoc": {
          "line": 14,
          "column": 11,
          "position": 192
        },
        "endLoc": {
          "line": 20,
          "column": 23,
          "position": 280
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/supplier-scorecard.ts",
        "start": 76,
        "end": 82,
        "startLoc": {
          "line": 76,
          "column": 11,
          "position": 1223
        },
        "endLoc": {
          "line": 82,
          "column": 23,
          "position": 1311
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "]),\n  startDate: z.string().datetime(),\n  endDate: z.string().datetime(),\n  generatedBy: z.string().min(1),\n});\n\nconst GetStatsSchema = z.object({\n  organizationId: z.string().min(1),\n});\n\n// Routes\n\n// DLQ Message Management",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/dlg-grooming.ts",
        "start": 113,
        "end": 125,
        "startLoc": {
          "line": 113,
          "column": 9,
          "position": 1746
        },
        "endLoc": {
          "line": 125,
          "column": 26,
          "position": 1837
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/supplier-scorecard.ts",
        "start": 134,
        "end": 84,
        "startLoc": {
          "line": 134,
          "column": 17,
          "position": 2126
        },
        "endLoc": {
          "line": 84,
          "column": 55,
          "position": 1026
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ".generateReport(\n      reportData.organizationId,\n      reportData.reportType,\n      reportData.startDate,\n      reportData.endDate,\n      reportData.generatedBy\n    );\n    \n    res.status(201).json({\n      success: true,\n      data: report,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Error generating DLQ report'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/dlg-grooming.ts",
        "start": 326,
        "end": 340,
        "startLoc": {
          "line": 326,
          "column": 19,
          "position": 3643
        },
        "endLoc": {
          "line": 340,
          "column": 30,
          "position": 3743
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/sepa-robust.ts",
        "start": 264,
        "end": 389,
        "startLoc": {
          "line": 264,
          "column": 18,
          "position": 2868
        },
        "endLoc": {
          "line": 389,
          "column": 35,
          "position": 4393
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "router.get('/', async (req, res) => {\n  try {\n    const orgId = req.headers['x-org-id'] as string;\n    if (!orgId) {\n      return res.status(400).json({ error: 'Missing x-org-id header' });\n    }\n\n    // Validate query parameters\n    const filters = DealFilterSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/deals.ts",
        "start": 19,
        "end": 27,
        "startLoc": {
          "line": 19,
          "column": 1,
          "position": 158
        },
        "endLoc": {
          "line": 27,
          "column": 17,
          "position": 249
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/invoices.ts",
        "start": 18,
        "end": 26,
        "startLoc": {
          "line": 18,
          "column": 1,
          "position": 155
        },
        "endLoc": {
          "line": 26,
          "column": 20,
          "position": 246
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "));\n    }\n\n    if (conditions.length > 0) {\n      query = query.where(and(...conditions));\n    }\n\n    // Apply pagination\n    const offset = (pagination.page - 1) * pagination.limit;\n    query = query.limit(pagination.limit).offset(offset);\n\n    const result = await query;\n\n    // Get total count for pagination\n    const totalQuery = db.select({ count: count() }).from(deals",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/deals.ts",
        "start": 68,
        "end": 82,
        "startLoc": {
          "line": 68,
          "column": 10,
          "position": 610
        },
        "endLoc": {
          "line": 82,
          "column": 6,
          "position": 743
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/invoices.ts",
        "start": 75,
        "end": 90,
        "startLoc": {
          "line": 75,
          "column": 9,
          "position": 669
        },
        "endLoc": {
          "line": 90,
          "column": 9,
          "position": 804
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "router.get('/:id', async (req, res) => {\n  try {\n    const { id } = req.params;\n    const orgId = req.headers['x-org-id'] as string;\n    \n    if (!orgId) {\n      return res.status(400).json({ error: 'Missing x-org-id header' });\n    }\n\n    // Set RLS context\n    await db.execute(`SET LOCAL app.org_id = '${orgId}'`);\n\n    const [deal",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/deals.ts",
        "start": 120,
        "end": 132,
        "startLoc": {
          "line": 120,
          "column": 1,
          "position": 1016
        },
        "endLoc": {
          "line": 132,
          "column": 5,
          "position": 1138
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/invoices.ts",
        "start": 142,
        "end": 154,
        "startLoc": {
          "line": 142,
          "column": 1,
          "position": 1190
        },
        "endLoc": {
          "line": 154,
          "column": 8,
          "position": 1312
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "router.post('/', async (req, res) => {\n  try {\n    const orgId = req.headers['x-org-id'] as string;\n    const userId = req.headers['x-user-id'] as string;\n    \n    if (!orgId) {\n      return res.status(400).json({ error: 'Missing x-org-id header' });\n    }\n\n    // Validate request body\n    const dealData",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/deals.ts",
        "start": 166,
        "end": 176,
        "startLoc": {
          "line": 166,
          "column": 1,
          "position": 1391
        },
        "endLoc": {
          "line": 176,
          "column": 9,
          "position": 1499
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/invoices.ts",
        "start": 188,
        "end": 198,
        "startLoc": {
          "line": 188,
          "column": 1,
          "position": 1565
        },
        "endLoc": {
          "line": 198,
          "column": 12,
          "position": 1673
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "router.put('/:id', async (req, res) => {\n  try {\n    const { id } = req.params;\n    const orgId = req.headers['x-org-id'] as string;\n    const userId = req.headers['x-user-id'] as string;\n    \n    if (!orgId) {\n      return res.status(400).json({ error: 'Missing x-org-id header' });\n    }\n\n    // Validate request body\n    const updateData = UpdateDealSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/deals.ts",
        "start": 229,
        "end": 240,
        "startLoc": {
          "line": 229,
          "column": 1,
          "position": 1880
        },
        "endLoc": {
          "line": 240,
          "column": 17,
          "position": 2008
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/invoices.ts",
        "start": 281,
        "end": 292,
        "startLoc": {
          "line": 281,
          "column": 1,
          "position": 2391
        },
        "endLoc": {
          "line": 292,
          "column": 20,
          "position": 2519
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", async (req, res) => {\n  try {\n    const { id } = req.params;\n    const orgId = req.headers['x-org-id'] as string;\n    const userId = req.headers['x-user-id'] as string;\n    \n    if (!orgId) {\n      return res.status(400).json({ error: 'Missing x-org-id header' });\n    }\n\n    // Validate request body\n    const {",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/deals.ts",
        "start": 296,
        "end": 307,
        "startLoc": {
          "line": 296,
          "column": 18,
          "position": 2410
        },
        "endLoc": {
          "line": 307,
          "column": 2,
          "position": 2529
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/invoices.ts",
        "start": 281,
        "end": 198,
        "startLoc": {
          "line": 281,
          "column": 7,
          "position": 2396
        },
        "endLoc": {
          "line": 198,
          "column": 12,
          "position": 1673
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ")\n      .where(eq(deals.id, id))\n      .returning();\n\n    if (!updatedDeal) {\n      return res.status(404).json({ \n        error: 'Deal not found',\n        message: `Deal with ID ${id} not found or access denied`\n      });\n    }\n\n    structuredLogger.info('Deal stage moved'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/deals.ts",
        "start": 332,
        "end": 343,
        "startLoc": {
          "line": 332,
          "column": 11,
          "position": 2748
        },
        "endLoc": {
          "line": 343,
          "column": 19,
          "position": 2829
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/deals.ts",
        "start": 250,
        "end": 261,
        "startLoc": {
          "line": 250,
          "column": 2,
          "position": 2085
        },
        "endLoc": {
          "line": 261,
          "column": 15,
          "position": 2166
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "});\n\n    res.json({\n      success: true,\n      data: updatedDeal\n    });\n\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    structuredLogger.error('Failed to move deal stage'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/deals.ts",
        "start": 350,
        "end": 365,
        "startLoc": {
          "line": 350,
          "column": 5,
          "position": 2869
        },
        "endLoc": {
          "line": 365,
          "column": 28,
          "position": 2969
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/deals.ts",
        "start": 266,
        "end": 281,
        "startLoc": {
          "line": 266,
          "column": 5,
          "position": 2193
        },
        "endLoc": {
          "line": 281,
          "column": 24,
          "position": 2293
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ", error as Error, {\n      orgId: req.headers['x-org-id'],\n      userId: req.headers['x-user-id'],\n      dealId: req.params.id,\n      body: req.body\n    });\n    \n    res.status(500).json({ \n      error: 'Failed to move deal stage'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/deals.ts",
        "start": 365,
        "end": 373,
        "startLoc": {
          "line": 365,
          "column": 28,
          "position": 2970
        },
        "endLoc": {
          "line": 373,
          "column": 28,
          "position": 3048
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/deals.ts",
        "start": 281,
        "end": 289,
        "startLoc": {
          "line": 281,
          "column": 24,
          "position": 2294
        },
        "endLoc": {
          "line": 289,
          "column": 24,
          "position": 2372
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "router.delete('/:id', async (req, res) => {\n  try {\n    const { id } = req.params;\n    const orgId = req.headers['x-org-id'] as string;\n    const userId = req.headers['x-user-id'] as string;\n    \n    if (!orgId) {\n      return res.status(400).json({ error: 'Missing x-org-id header' });\n    }\n\n    // Set RLS context\n    await db.execute(`SET LOCAL app.org_id = '${orgId}'`);\n\n    const [deletedDeal",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/deals.ts",
        "start": 380,
        "end": 393,
        "startLoc": {
          "line": 380,
          "column": 1,
          "position": 3081
        },
        "endLoc": {
          "line": 393,
          "column": 12,
          "position": 3222
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/invoices.ts",
        "start": 441,
        "end": 396,
        "startLoc": {
          "line": 441,
          "column": 1,
          "position": 3747
        },
        "endLoc": {
          "line": 396,
          "column": 15,
          "position": 3420
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ";\n\n    res.set({\n      'X-Est-Cost-EUR': '0.0020',\n      'X-Budget-Pct': '0.2',\n      'X-Latency-ms': '40',\n      'X-Route': 'local',\n      'X-Correlation-Id': `req_${Date.now()}`\n    });\n\n    res.json({\n      success: true,\n      data: summary\n    });\n\n  } catch (error) {\n    structuredLogger",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/deals.ts",
        "start": 475,
        "end": 491,
        "startLoc": {
          "line": 475,
          "column": 2,
          "position": 4038
        },
        "endLoc": {
          "line": 491,
          "column": 17,
          "position": 4134
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/sepa.ts",
        "start": 279,
        "end": 294,
        "startLoc": {
          "line": 279,
          "column": 2,
          "position": 2365
        },
        "endLoc": {
          "line": 294,
          "column": 7,
          "position": 2462
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", async (req, res) => {\n  try {\n    const orgId = req.headers['x-org-id'] as string;\n    \n    if (!orgId) {\n      return res.status(400).json({ error: 'Missing x-org-id header' });\n    }\n\n    // Set RLS context\n    await db.execute(`SET LOCAL app.org_id = '${orgId}'`);\n\n    // Get analytics data",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/deals.ts",
        "start": 503,
        "end": 514,
        "startLoc": {
          "line": 503,
          "column": 13,
          "position": 4223
        },
        "endLoc": {
          "line": 514,
          "column": 22,
          "position": 4321
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/deals.ts",
        "start": 433,
        "end": 444,
        "startLoc": {
          "line": 433,
          "column": 11,
          "position": 3528
        },
        "endLoc": {
          "line": 444,
          "column": 20,
          "position": 3626
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ";\n\n    res.set({\n      'X-Est-Cost-EUR': '0.0030',\n      'X-Budget-Pct': '0.3',\n      'X-Latency-ms': '60',\n      'X-Route': 'local',\n      'X-Correlation-Id': `req_${Date.now()}`\n    });\n\n    res.json({\n      success: true,\n      data: analytics\n    });\n\n  } catch (error) {\n    structuredLogger",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/deals.ts",
        "start": 559,
        "end": 575,
        "startLoc": {
          "line": 559,
          "column": 2,
          "position": 4955
        },
        "endLoc": {
          "line": 575,
          "column": 17,
          "position": 5051
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/sepa.ts",
        "start": 311,
        "end": 326,
        "startLoc": {
          "line": 311,
          "column": 2,
          "position": 2612
        },
        "endLoc": {
          "line": 326,
          "column": 7,
          "position": 2709
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ", async (req, res) => {\n  try {\n    const orgId = req.headers['x-org-id'] as string;\n    const userId = req.headers['x-user-id'] as string;\n    \n    if (!orgId) {\n      return res.status(400).json({ error: 'Missing x-org-id header' });\n    }\n\n    const",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/deals.ts",
        "start": 587,
        "end": 596,
        "startLoc": {
          "line": 587,
          "column": 15,
          "position": 5140
        },
        "endLoc": {
          "line": 596,
          "column": 6,
          "position": 5238
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/invoices.ts",
        "start": 188,
        "end": 197,
        "startLoc": {
          "line": 188,
          "column": 4,
          "position": 1570
        },
        "endLoc": {
          "line": 197,
          "column": 25,
          "position": 1668
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", async (req, res) => {\n  try {\n    const { organizationId, limit = 100, offset = 0 } = req.query;\n    \n    if (!organizationId) {\n      return res.status(400).json({\n        success: false,\n        error: 'organizationId is required'\n      });\n    }\n\n    // En un sistema real, esto vendría de la base de datos\n    const recommendations",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/deals-nba.ts",
        "start": 207,
        "end": 219,
        "startLoc": {
          "line": 207,
          "column": 19,
          "position": 1715
        },
        "endLoc": {
          "line": 219,
          "column": 16,
          "position": 1819
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/dunning-3-toques.ts",
        "start": 263,
        "end": 275,
        "startLoc": {
          "line": 263,
          "column": 20,
          "position": 2207
        },
        "endLoc": {
          "line": 275,
          "column": 16,
          "position": 2311
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "error: error instanceof Error ? error.message : String(error),\n      requestId: req.headers['x-request-id'] as string || ''\n    });\n    \n    res.status(500).json({\n      success: false,\n      error: 'Failed to get NBA recommendations',\n      message: error instanceof Error ? error.message : String(error)\n    });\n  }\n});\n\n/**\n * GET /deals-nba/explanation/:recommendationId\n * Obtiene la explicación detallada de una recomendación\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/deals-nba.ts",
        "start": 235,
        "end": 250,
        "startLoc": {
          "line": 235,
          "column": 7,
          "position": 1937
        },
        "endLoc": {
          "line": 250,
          "column": 4,
          "position": 2048
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/deals-nba.ts",
        "start": 142,
        "end": 157,
        "startLoc": {
          "line": 142,
          "column": 7,
          "position": 1209
        },
        "endLoc": {
          "line": 157,
          "column": 4,
          "position": 1320
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ", {\n      recommendationId: req.params.recommendationId,\n      error: error instanceof Error ? error.message : String(error),\n      requestId: req.headers['x-request-id'] as string || ''\n    });\n    \n    res.status(500).json({\n      success: false,\n      error: 'Failed to get NBA recommendation explanation'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/deals-nba.ts",
        "start": 271,
        "end": 279,
        "startLoc": {
          "line": 271,
          "column": 47,
          "position": 2214
        },
        "endLoc": {
          "line": 279,
          "column": 47,
          "position": 2302
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/deals-nba.ts",
        "start": 189,
        "end": 197,
        "startLoc": {
          "line": 189,
          "column": 39,
          "position": 1581
        },
        "endLoc": {
          "line": 197,
          "column": 39,
          "position": 1669
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "),\n  tags: z.array(z.string()).default([]),\n  attachments: z.array(z.object({\n    id: z.string(),\n    name: z.string(),\n    url: z.string().url(),\n    size: z.number(),\n    type: z.string()\n  })).default([])\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/customer-support.ts",
        "start": 37,
        "end": 46,
        "startLoc": {
          "line": 37,
          "column": 9,
          "position": 263
        },
        "endLoc": {
          "line": 46,
          "column": 2,
          "position": 371
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/customer-support.service.ts",
        "start": 43,
        "end": 51,
        "startLoc": {
          "line": 43,
          "column": 2,
          "position": 390
        },
        "endLoc": {
          "line": 51,
          "column": 2,
          "position": 497
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "senderId: z.string().uuid(),\n  senderType: z.enum(['customer', 'agent', 'bot']),\n  message: z.string().min(1),\n  messageType: z.enum(['text', 'image', 'file', 'system']).default('text'),\n  attachments: z.array(z.object({\n    id: z.string(),\n    name: z.string(),\n    url: z.string().url(),\n    size: z.number(),\n    type: z.string()\n  })).default([])\n});\n\nconst CreateArticleSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/customer-support.ts",
        "start": 59,
        "end": 72,
        "startLoc": {
          "line": 59,
          "column": 3,
          "position": 579
        },
        "endLoc": {
          "line": 72,
          "column": 20,
          "position": 747
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/customer-support.service.ts",
        "start": 60,
        "end": 48,
        "startLoc": {
          "line": 60,
          "column": 3,
          "position": 592
        },
        "endLoc": {
          "line": 48,
          "column": 19,
          "position": 378
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "title: z.string().min(1).max(255),\n  content: z.string().min(1),\n  category: z.string().min(1),\n  tags: z.array(z.string()).default([]),\n  isPublished: z.boolean().default(true),\n  authorId",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/customer-support.ts",
        "start": 73,
        "end": 78,
        "startLoc": {
          "line": 73,
          "column": 3,
          "position": 758
        },
        "endLoc": {
          "line": 78,
          "column": 9,
          "position": 849
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/customer-support.service.ts",
        "start": 79,
        "end": 84,
        "startLoc": {
          "line": 79,
          "column": 3,
          "position": 845
        },
        "endLoc": {
          "line": 84,
          "column": 10,
          "position": 936
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "),\n  skills: z.array(z.string()).default([]),\n  languages: z.array(z.string()).default(['en']),\n  workingHours: z.object({\n    timezone: z.string().default('UTC'),\n    schedule: z.record(z.object({\n      start: z.string(),\n      end: z.string(),\n      isWorking: z.boolean().default(true)\n    }))\n  }).optional()\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/customer-support.ts",
        "start": 86,
        "end": 97,
        "startLoc": {
          "line": 86,
          "column": 3,
          "position": 964
        },
        "endLoc": {
          "line": 97,
          "column": 2,
          "position": 1102
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/customer-support.service.ts",
        "start": 100,
        "end": 110,
        "startLoc": {
          "line": 100,
          "column": 2,
          "position": 1159
        },
        "endLoc": {
          "line": 110,
          "column": 2,
          "position": 1296
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "});\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to create support ticket'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/customer-support.ts",
        "start": 129,
        "end": 141,
        "startLoc": {
          "line": 129,
          "column": 5,
          "position": 1322
        },
        "endLoc": {
          "line": 141,
          "column": 34,
          "position": 1410
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/social-media-management.ts",
        "start": 174,
        "end": 186,
        "startLoc": {
          "line": 174,
          "column": 5,
          "position": 2008
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "});\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to update support ticket'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/customer-support.ts",
        "start": 237,
        "end": 249,
        "startLoc": {
          "line": 237,
          "column": 5,
          "position": 2230
        },
        "endLoc": {
          "line": 249,
          "column": 34,
          "position": 2318
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/social-media-management.ts",
        "start": 174,
        "end": 186,
        "startLoc": {
          "line": 174,
          "column": 5,
          "position": 2008
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      ticketId: req.params.id\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to send message'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/customer-support.ts",
        "start": 324,
        "end": 339,
        "startLoc": {
          "line": 324,
          "column": 33,
          "position": 2832
        },
        "endLoc": {
          "line": 339,
          "column": 25,
          "position": 2956
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/customer-support.ts",
        "start": 234,
        "end": 186,
        "startLoc": {
          "line": 234,
          "column": 42,
          "position": 2194
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error'\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to create knowledge base article'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/customer-support.ts",
        "start": 400,
        "end": 414,
        "startLoc": {
          "line": 400,
          "column": 50,
          "position": 3364
        },
        "endLoc": {
          "line": 414,
          "column": 42,
          "position": 3477
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/customer-support.ts",
        "start": 127,
        "end": 186,
        "startLoc": {
          "line": 127,
          "column": 42,
          "position": 1297
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error'\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to create support agent'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/customer-support.ts",
        "start": 479,
        "end": 493,
        "startLoc": {
          "line": 479,
          "column": 41,
          "position": 3914
        },
        "endLoc": {
          "line": 493,
          "column": 33,
          "position": 4027
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/customer-support.ts",
        "start": 127,
        "end": 186,
        "startLoc": {
          "line": 127,
          "column": 42,
          "position": 1297
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      body: req.body,\n      requestId: req.headers['x-request-id'] as string || ''\n    });\n\n    res.status(400).json({\n      success: false,\n      error: 'Failed to update CSP policy'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/csp-sri-banking.ts",
        "start": 358,
        "end": 366,
        "startLoc": {
          "line": 358,
          "column": 30,
          "position": 3207
        },
        "endLoc": {
          "line": 366,
          "column": 30,
          "position": 3289
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/csp-sri-banking.ts",
        "start": 110,
        "end": 118,
        "startLoc": {
          "line": 110,
          "column": 35,
          "position": 1130
        },
        "endLoc": {
          "line": 118,
          "column": 27,
          "position": 1212
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      body: req.body,\n      requestId: req.headers['x-request-id'] as string || ''\n    });\n\n    res.status(400).json({\n      success: false,\n      error: 'Failed to generate SRI hashes'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/csp-sri-banking.ts",
        "start": 396,
        "end": 404,
        "startLoc": {
          "line": 396,
          "column": 32,
          "position": 3516
        },
        "endLoc": {
          "line": 404,
          "column": 32,
          "position": 3598
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/csp-sri-banking.ts",
        "start": 110,
        "end": 118,
        "startLoc": {
          "line": 110,
          "column": 35,
          "position": 1130
        },
        "endLoc": {
          "line": 118,
          "column": 27,
          "position": 1212
        }
      }
    },
    {
      "format": "typescript",
      "lines": 32,
      "fragment": "z.object({\n    title: z.string().min(1).max(255),\n    description: z.string().optional(),\n    excerpt: z.string().optional(),\n    tags: z.array(z.string()).default([]),\n    categories: z.array(z.string()).default([]),\n    author: z.string().min(1),\n    language: z.string().default('es'),\n    keywords: z.array(z.string()).default([]),\n    customFields: z.record(z.any()).default({}),\n    seo: z.object({\n      metaTitle: z.string().optional(),\n      metaDescription: z.string().optional(),\n      metaKeywords: z.array(z.string()).default([]),\n      canonicalUrl: z.string().optional(),\n      ogTitle: z.string().optional(),\n      ogDescription: z.string().optional(),\n      ogImage: z.string().optional(),\n      twitterCard: z.string().optional(),\n      structuredData: z.record(z.any()).optional()\n    }).optional(),\n    analytics: z.object({\n      views: z.number().default(0),\n      uniqueViews: z.number().default(0),\n      shares: z.number().default(0),\n      comments: z.number().default(0),\n      likes: z.number().default(0),\n      engagement: z.number().default(0),\n      bounceRate: z.number().default(0),\n      timeOnPage: z.number().default(0)\n    }).optional()\n  }),",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/content-management.ts",
        "start": 50,
        "end": 81,
        "startLoc": {
          "line": 50,
          "column": 2,
          "position": 297
        },
        "endLoc": {
          "line": 81,
          "column": 2,
          "position": 787
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/content-management.service.ts",
        "start": 33,
        "end": 64,
        "startLoc": {
          "line": 33,
          "column": 2,
          "position": 178
        },
        "endLoc": {
          "line": 64,
          "column": 2,
          "position": 667
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "),\n  htmlContent: z.string().optional(),\n  markdownContent: z.string().optional(),\n  featuredImage: z.string().optional(),\n  images: z.array(z.string()).default([]),\n  attachments: z.array(z.string()).default([]),\n  publishedAt",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/content-management.ts",
        "start": 82,
        "end": 88,
        "startLoc": {
          "line": 82,
          "column": 2,
          "position": 802
        },
        "endLoc": {
          "line": 88,
          "column": 12,
          "position": 895
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/content-management.service.ts",
        "start": 88,
        "end": 94,
        "startLoc": {
          "line": 88,
          "column": 2,
          "position": 949
        },
        "endLoc": {
          "line": 94,
          "column": 9,
          "position": 1042
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "().optional(),\n  isPublic: z.boolean().default(false),\n  isFeatured: z.boolean().default(false),\n  isSticky: z.boolean().default(false),\n  allowComments: z.boolean().default(true),\n  allowSharing: z.boolean().default(true),\n  workflow: z.object({\n    currentStep: z.string(),\n    steps: z.array(z.object({\n      step: z.string(),\n      status: z.enum(['pending', 'in_progress', 'completed', 'rejected']),\n      assignedTo: z.string().uuid().optional(),\n      completedAt: z.string",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/content-management.ts",
        "start": 90,
        "end": 102,
        "startLoc": {
          "line": 90,
          "column": 9,
          "position": 943
        },
        "endLoc": {
          "line": 102,
          "column": 7,
          "position": 1125
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/content-management.service.ts",
        "start": 98,
        "end": 110,
        "startLoc": {
          "line": 98,
          "column": 5,
          "position": 1107
        },
        "endLoc": {
          "line": 110,
          "column": 5,
          "position": 1289
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "),\n      canonicalUrl: z.string().optional(),\n      ogTitle: z.string().optional(),\n      ogDescription: z.string().optional(),\n      ogImage: z.string().optional(),\n      twitterCard: z.string().optional(),\n      structuredData: z.record(z.any()).optional()\n    }).optional(),\n    analytics: z.object({\n      views: z.number().optional",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/content-management.ts",
        "start": 128,
        "end": 137,
        "startLoc": {
          "line": 128,
          "column": 2,
          "position": 1579
        },
        "endLoc": {
          "line": 137,
          "column": 9,
          "position": 1705
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/content-management.service.ts",
        "start": 46,
        "end": 55,
        "startLoc": {
          "line": 46,
          "column": 2,
          "position": 414
        },
        "endLoc": {
          "line": 55,
          "column": 8,
          "position": 540
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "),\n  workflow: z.object({\n    currentStep: z.string(),\n    steps: z.array(z.object({\n      step: z.string(),\n      status: z.enum(['pending', 'in_progress', 'completed', 'rejected']),\n      assignedTo: z.string().uuid().optional(),\n      completedAt: z.string().datetime().optional(),\n      comments: z.string().optional()\n    })).default([]),\n    approvedBy: z.string().uuid().optional(),\n    approvedAt: z.string().datetime().optional()\n  }).optional()\n});\n\nconst CreateVersionSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/content-management.ts",
        "start": 160,
        "end": 175,
        "startLoc": {
          "line": 160,
          "column": 2,
          "position": 2065
        },
        "endLoc": {
          "line": 175,
          "column": 20,
          "position": 2253
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/content-management.service.ts",
        "start": 103,
        "end": 110,
        "startLoc": {
          "line": 103,
          "column": 5,
          "position": 1192
        },
        "endLoc": {
          "line": 110,
          "column": 20,
          "position": 1216
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "version: z.string(),\n  content: z.string(),\n  htmlContent: z.string().optional(),\n  markdownContent: z.string().optional(),\n  changes: z.string().optional()\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/content-management.ts",
        "start": 176,
        "end": 181,
        "startLoc": {
          "line": 176,
          "column": 3,
          "position": 2264
        },
        "endLoc": {
          "line": 181,
          "column": 2,
          "position": 2329
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/content-management.service.ts",
        "start": 69,
        "end": 73,
        "startLoc": {
          "line": 69,
          "column": 3,
          "position": 715
        },
        "endLoc": {
          "line": 73,
          "column": 2,
          "position": 779
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "])).optional(),\n    dateRange: z.object({\n      from: z.string().datetime().optional(),\n      to: z.string().datetime().optional()\n    }).optional(),\n    isPublic",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/content-management.ts",
        "start": 191,
        "end": 196,
        "startLoc": {
          "line": 191,
          "column": 9,
          "position": 2551
        },
        "endLoc": {
          "line": 196,
          "column": 9,
          "position": 2617
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/social-media-management.ts",
        "start": 118,
        "end": 123,
        "startLoc": {
          "line": 118,
          "column": 10,
          "position": 1478
        },
        "endLoc": {
          "line": 123,
          "column": 5,
          "position": 1544
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "().optional()\n    }).optional(),\n    isPublic: z.boolean().optional(),\n    isFeatured: z.boolean().optional()\n  }).optional(),\n  sort: z.object({\n    field: z.enum(['title', 'createdAt', 'updatedAt', 'publishedAt', 'views', 'engagement']),\n    direction: z.enum(['asc', 'desc'])\n  }).optional(),\n  pagination: z.object({\n    page: z.number().min(1).default(1),\n    limit: z.number().min(1).max(100).default(20)\n  }).optional()\n});\n\n// ============================================================================\n// CONTENT ROUTES",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/content-management.ts",
        "start": 194,
        "end": 210,
        "startLoc": {
          "line": 194,
          "column": 9,
          "position": 2600
        },
        "endLoc": {
          "line": 210,
          "column": 18,
          "position": 2789
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/content-management.service.ts",
        "start": 133,
        "end": 137,
        "startLoc": {
          "line": 133,
          "column": 5,
          "position": 1601
        },
        "endLoc": {
          "line": 137,
          "column": 18,
          "position": 1727
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      organizationId: req.user?.organizationId\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to create content'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/content-management.ts",
        "start": 256,
        "end": 271,
        "startLoc": {
          "line": 256,
          "column": 35,
          "position": 3211
        },
        "endLoc": {
          "line": 271,
          "column": 27,
          "position": 3336
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/social-media-management.ts",
        "start": 171,
        "end": 186,
        "startLoc": {
          "line": 171,
          "column": 42,
          "position": 1971
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ".parse(req.query);\n\n    // Convert date strings to Date objects\n    if (searchParams.filters?.dateRange) {\n      if (searchParams.filters.dateRange.from) {\n        searchParams.filters.dateRange.from = new Date(searchParams.filters.dateRange.from);\n      }\n      if (searchParams.filters.dateRange.to) {\n        searchParams.filters.dateRange.to = new Date(searchParams.filters.dateRange.to);\n      }\n    }\n\n    const result = await contentManagementService",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/content-management.ts",
        "start": 280,
        "end": 292,
        "startLoc": {
          "line": 280,
          "column": 20,
          "position": 3408
        },
        "endLoc": {
          "line": 292,
          "column": 25,
          "position": 3534
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/social-media-management.ts",
        "start": 387,
        "end": 399,
        "startLoc": {
          "line": 387,
          "column": 18,
          "position": 3649
        },
        "endLoc": {
          "line": 399,
          "column": 29,
          "position": 3775
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      organizationId: req.user?.organizationId\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to list content'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/content-management.ts",
        "start": 300,
        "end": 315,
        "startLoc": {
          "line": 300,
          "column": 33,
          "position": 3595
        },
        "endLoc": {
          "line": 315,
          "column": 25,
          "position": 3720
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/social-media-management.ts",
        "start": 171,
        "end": 186,
        "startLoc": {
          "line": 171,
          "column": 42,
          "position": 1971
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", organizationId);\n\n    if (!content) {\n      return res.status(404).json({\n        success: false,\n        error: 'Content not found'\n      });\n    }\n\n    res.json({\n      success: true,\n      data: content,\n      message: 'Content retrieved successfully'\n    });\n  } catch (error) {\n    structuredLogger.error('Failed to get content by slug via API'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/content-management.ts",
        "start": 360,
        "end": 375,
        "startLoc": {
          "line": 360,
          "column": 5,
          "position": 4088
        },
        "endLoc": {
          "line": 375,
          "column": 40,
          "position": 4189
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/content-management.ts",
        "start": 326,
        "end": 341,
        "startLoc": {
          "line": 326,
          "column": 3,
          "position": 3815
        },
        "endLoc": {
          "line": 341,
          "column": 32,
          "position": 3916
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "router.put('/:id', async (req: AuthenticatedRequest, res) => {\n  try {\n    const { id } = req.params;\n    const organizationId = req.user?.organizationId || 'demo-org';\n    const updatedBy = req.user?.id || 'demo-user';\n\n    const validatedData = UpdateContentSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/content-management.ts",
        "start": 389,
        "end": 395,
        "startLoc": {
          "line": 389,
          "column": 1,
          "position": 4283
        },
        "endLoc": {
          "line": 395,
          "column": 20,
          "position": 4373
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/document-management.ts",
        "start": 253,
        "end": 259,
        "startLoc": {
          "line": 253,
          "column": 1,
          "position": 2425
        },
        "endLoc": {
          "line": 259,
          "column": 21,
          "position": 2515
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "= {\n      ...validatedData,\n      publishedAt: validatedData.publishedAt ? new Date(validatedData.publishedAt) : undefined,\n      scheduledAt: validatedData.scheduledAt ? new Date(validatedData.scheduledAt) : undefined,\n      expiresAt: validatedData.expiresAt ? new Date(validatedData.expiresAt) : undefined,\n      workflow: validatedData.workflow ? {\n        ...validatedData.workflow,\n        steps: validatedData.workflow.steps.map(step => ({\n          ...step,\n          completedAt: step.completedAt ? new Date(step.completedAt) : undefined\n        })),\n        approvedAt: validatedData.workflow.approvedAt ? new Date(validatedData.workflow.approvedAt) : undefined\n      } : undefined\n    };\n\n    const content = await contentManagementService.updateContent",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/content-management.ts",
        "start": 398,
        "end": 413,
        "startLoc": {
          "line": 398,
          "column": 2,
          "position": 4392
        },
        "endLoc": {
          "line": 413,
          "column": 14,
          "position": 4595
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/content-management.ts",
        "start": 222,
        "end": 237,
        "startLoc": {
          "line": 222,
          "column": 2,
          "position": 2889
        },
        "endLoc": {
          "line": 237,
          "column": 14,
          "position": 3092
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ": req.params.id,\n      organizationId: req.user?.organizationId\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to update content'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/content-management.ts",
        "start": 440,
        "end": 454,
        "startLoc": {
          "line": 440,
          "column": 10,
          "position": 4766
        },
        "endLoc": {
          "line": 454,
          "column": 27,
          "position": 4875
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/social-media-management.ts",
        "start": 281,
        "end": 186,
        "startLoc": {
          "line": 281,
          "column": 10,
          "position": 2854
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "router.post('/:id/versions', async (req: AuthenticatedRequest, res) => {\n  try {\n    const { id } = req.params;\n    const organizationId = req.user?.organizationId || 'demo-org';\n    const createdBy = req.user?.id || 'demo-user';\n\n    const validatedData = CreateVersionSchema.parse(req.body);\n\n    const version = await contentManagementService",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/content-management.ts",
        "start": 502,
        "end": 510,
        "startLoc": {
          "line": 502,
          "column": 1,
          "position": 5191
        },
        "endLoc": {
          "line": 510,
          "column": 25,
          "position": 5301
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/document-management.ts",
        "start": 350,
        "end": 358,
        "startLoc": {
          "line": 350,
          "column": 1,
          "position": 3133
        },
        "endLoc": {
          "line": 358,
          "column": 26,
          "position": 3243
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      contentId: req.params.id,\n      organizationId: req.user?.organizationId\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to create content version'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/content-management.ts",
        "start": 533,
        "end": 549,
        "startLoc": {
          "line": 533,
          "column": 43,
          "position": 5438
        },
        "endLoc": {
          "line": 549,
          "column": 35,
          "position": 5574
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/content-management.ts",
        "start": 438,
        "end": 186,
        "startLoc": {
          "line": 438,
          "column": 35,
          "position": 4739
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ", async (req: AuthenticatedRequest, res) => {\n  try {\n    const { id } = req.params;\n    const organizationId = req.user?.organizationId || 'demo-org';\n\n    const content = await contentManagementService.getContent(id, organizationId);\n\n    if (!content) {\n      return res.status(404).json({\n        success: false,\n        error: 'Content not found'\n      });\n    }\n\n    res.json({\n      success: true,\n      data: content.",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/content-management.ts",
        "start": 555,
        "end": 571,
        "startLoc": {
          "line": 555,
          "column": 16,
          "position": 5596
        },
        "endLoc": {
          "line": 571,
          "column": 2,
          "position": 5741
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/content-management.ts",
        "start": 321,
        "end": 337,
        "startLoc": {
          "line": 321,
          "column": 7,
          "position": 3742
        },
        "endLoc": {
          "line": 337,
          "column": 2,
          "position": 3887
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ", async (req: AuthenticatedRequest, res) => {\n  try {\n    const organizationId = req.user?.organizationId || 'demo-org';\n    const searchParams = SearchContentSchema.parse(req.query);\n\n    // Convert date strings to Date objects\n    if (searchParams.filters?.dateRange) {\n      if (searchParams.filters.dateRange.from) {\n        searchParams.filters.dateRange.from = new Date(searchParams.filters.dateRange.from);\n      }\n      if (searchParams.filters.dateRange.to) {\n        searchParams.filters.dateRange.to = new Date(searchParams.filters.dateRange.to);\n      }\n    }\n\n    const result = await contentManagementService.searchContent(organizationId, searchParams);\n\n    res.json({\n      success: true,\n      data: result,\n      message: 'Content search completed successfully'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/content-management.ts",
        "start": 677,
        "end": 697,
        "startLoc": {
          "line": 677,
          "column": 10,
          "position": 6521
        },
        "endLoc": {
          "line": 697,
          "column": 40,
          "position": 6734
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/content-management.ts",
        "start": 277,
        "end": 297,
        "startLoc": {
          "line": 277,
          "column": 4,
          "position": 3358
        },
        "endLoc": {
          "line": 297,
          "column": 33,
          "position": 3571
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      organizationId: req.user?.organizationId\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to search content'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/content-management.ts",
        "start": 700,
        "end": 715,
        "startLoc": {
          "line": 700,
          "column": 35,
          "position": 6758
        },
        "endLoc": {
          "line": 715,
          "column": 27,
          "position": 6883
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/social-media-management.ts",
        "start": 171,
        "end": 186,
        "startLoc": {
          "line": 171,
          "column": 42,
          "position": 1971
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "router.get('/', async (req, res) => {\n  try {\n    const orgId = req.headers['x-org-id'] as string;\n    if (!orgId) {\n      return res.status(400).json({ error: 'Missing x-org-id header' });\n    }\n\n    // Validate query parameters\n    const filters = ContactFilterSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/contacts.ts",
        "start": 18,
        "end": 26,
        "startLoc": {
          "line": 18,
          "column": 1,
          "position": 149
        },
        "endLoc": {
          "line": 26,
          "column": 20,
          "position": 240
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/invoices.ts",
        "start": 18,
        "end": 26,
        "startLoc": {
          "line": 18,
          "column": 1,
          "position": 155
        },
        "endLoc": {
          "line": 26,
          "column": 20,
          "position": 246
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "));\n    }\n\n    if (conditions.length > 0) {\n      query = query.where(and(...conditions));\n    }\n\n    // Apply pagination\n    const offset = (pagination.page - 1) * pagination.limit;\n    query = query.limit(pagination.limit).offset(offset);\n\n    const result = await query;\n\n    // Get total count for pagination\n    const totalQuery = db.select({ count: count() }).from(contacts",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/contacts.ts",
        "start": 60,
        "end": 74,
        "startLoc": {
          "line": 60,
          "column": 11,
          "position": 545
        },
        "endLoc": {
          "line": 74,
          "column": 9,
          "position": 678
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/invoices.ts",
        "start": 75,
        "end": 90,
        "startLoc": {
          "line": 75,
          "column": 9,
          "position": 669
        },
        "endLoc": {
          "line": 90,
          "column": 9,
          "position": 804
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ", {\n      orgId,\n      count: result.length,\n      total,\n      filters\n    });\n\n    res.json({\n      success: true,\n      data: result,\n      pagination: {\n        page: pagination.page,\n        limit: pagination.limit,\n        total,\n        totalPages: Math.ceil(total / pagination.limit)\n      }\n    });\n\n  } catch (error) {\n    structuredLogger.error('Failed to retrieve contacts'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/contacts.ts",
        "start": 80,
        "end": 99,
        "startLoc": {
          "line": 80,
          "column": 21,
          "position": 741
        },
        "endLoc": {
          "line": 99,
          "column": 30,
          "position": 862
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/deals.ts",
        "start": 88,
        "end": 107,
        "startLoc": {
          "line": 88,
          "column": 18,
          "position": 806
        },
        "endLoc": {
          "line": 107,
          "column": 27,
          "position": 927
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "router.get('/:id', async (req, res) => {\n  try {\n    const { id } = req.params;\n    const orgId = req.headers['x-org-id'] as string;\n    \n    if (!orgId) {\n      return res.status(400).json({ error: 'Missing x-org-id header' });\n    }\n\n    // Set RLS context\n    await db.execute(`SET LOCAL app.org_id = '${orgId}'`);\n\n    const [contact",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/contacts.ts",
        "start": 112,
        "end": 124,
        "startLoc": {
          "line": 112,
          "column": 1,
          "position": 951
        },
        "endLoc": {
          "line": 124,
          "column": 8,
          "position": 1073
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/invoices.ts",
        "start": 142,
        "end": 154,
        "startLoc": {
          "line": 142,
          "column": 1,
          "position": 1190
        },
        "endLoc": {
          "line": 154,
          "column": 8,
          "position": 1312
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "router.post('/', async (req, res) => {\n  try {\n    const orgId = req.headers['x-org-id'] as string;\n    const userId = req.headers['x-user-id'] as string;\n    \n    if (!orgId) {\n      return res.status(400).json({ error: 'Missing x-org-id header' });\n    }\n\n    // Validate request body\n    const contactData",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/contacts.ts",
        "start": 158,
        "end": 168,
        "startLoc": {
          "line": 158,
          "column": 1,
          "position": 1326
        },
        "endLoc": {
          "line": 168,
          "column": 12,
          "position": 1434
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/invoices.ts",
        "start": 188,
        "end": 198,
        "startLoc": {
          "line": 188,
          "column": 1,
          "position": 1565
        },
        "endLoc": {
          "line": 198,
          "column": 12,
          "position": 1673
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "router.put('/:id', async (req, res) => {\n  try {\n    const { id } = req.params;\n    const orgId = req.headers['x-org-id'] as string;\n    const userId = req.headers['x-user-id'] as string;\n    \n    if (!orgId) {\n      return res.status(400).json({ error: 'Missing x-org-id header' });\n    }\n\n    // Validate request body\n    const updateData = UpdateContactSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/contacts.ts",
        "start": 220,
        "end": 231,
        "startLoc": {
          "line": 220,
          "column": 1,
          "position": 1816
        },
        "endLoc": {
          "line": 231,
          "column": 20,
          "position": 1944
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/invoices.ts",
        "start": 281,
        "end": 292,
        "startLoc": {
          "line": 281,
          "column": 1,
          "position": 2391
        },
        "endLoc": {
          "line": 292,
          "column": 20,
          "position": 2519
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "router.delete('/:id', async (req, res) => {\n  try {\n    const { id } = req.params;\n    const orgId = req.headers['x-org-id'] as string;\n    const userId = req.headers['x-user-id'] as string;\n    \n    if (!orgId) {\n      return res.status(400).json({ error: 'Missing x-org-id header' });\n    }\n\n    // Set RLS context\n    await db.execute(`SET LOCAL app.org_id = '${orgId}'`);\n\n    const [deletedContact",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/contacts.ts",
        "start": 287,
        "end": 300,
        "startLoc": {
          "line": 287,
          "column": 1,
          "position": 2341
        },
        "endLoc": {
          "line": 300,
          "column": 15,
          "position": 2482
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/invoices.ts",
        "start": 441,
        "end": 396,
        "startLoc": {
          "line": 441,
          "column": 1,
          "position": 3747
        },
        "endLoc": {
          "line": 396,
          "column": 15,
          "position": 3420
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "});\n    \n    res.status(500).json({ \n      error: 'Failed to retrieve contacts',\n      message: (error as Error).message \n    });\n  }\n});\n\n// GET /v1/contacts/:id - Get single contact\nrouter.get('/:id', async (req, res) => {\n  try {\n    const { id } = req.params;\n    const orgId = req.headers['x-org-id'] as string ||",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/contacts-simple.ts",
        "start": 74,
        "end": 87,
        "startLoc": {
          "line": 74,
          "column": 5,
          "position": 615
        },
        "endLoc": {
          "line": 87,
          "column": 3,
          "position": 730
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/contacts.ts",
        "start": 102,
        "end": 115,
        "startLoc": {
          "line": 102,
          "column": 5,
          "position": 895
        },
        "endLoc": {
          "line": 115,
          "column": 2,
          "position": 1009
        }
      }
    },
    {
      "format": "typescript",
      "lines": 28,
      "fragment": ") {\n      return res.status(404).json({ \n        error: 'Contact not found',\n        message: `Contact with ID ${id} not found or access denied`\n      });\n    }\n\n    structuredLogger.info('Contact retrieved', { orgId, contactId: id });\n\n    res.json({\n      success: true,\n      data: contact\n    });\n\n  } catch (error) {\n    structuredLogger.error('Failed to retrieve contact', error as Error, {\n      orgId: req.headers['x-org-id'],\n      contactId: req.params.id\n    });\n    \n    res.status(500).json({ \n      error: 'Failed to retrieve contact',\n      message: (error as Error).message \n    });\n  }\n});\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/contacts-simple.ts",
        "start": 91,
        "end": 118,
        "startLoc": {
          "line": 91,
          "column": 10,
          "position": 775
        },
        "endLoc": {
          "line": 118,
          "column": 7,
          "position": 974
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/contacts.ts",
        "start": 130,
        "end": 157,
        "startLoc": {
          "line": 130,
          "column": 8,
          "position": 1125
        },
        "endLoc": {
          "line": 157,
          "column": 38,
          "position": 1324
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ", {\n      error: (error as Error).message,\n      contactId: req.params.id,\n      requestId: req.headers['x-request-id'] as string || ''\n    });\n    res.status(500).json({ success: false, error: 'Failed to remove contact'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/contacts-dedupe.ts",
        "start": 136,
        "end": 141,
        "startLoc": {
          "line": 136,
          "column": 27,
          "position": 1508
        },
        "endLoc": {
          "line": 141,
          "column": 27,
          "position": 1583
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/contacts-dedupe.ts",
        "start": 120,
        "end": 125,
        "startLoc": {
          "line": 120,
          "column": 24,
          "position": 1326
        },
        "endLoc": {
          "line": 125,
          "column": 24,
          "position": 1401
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({ success: false, error: 'Invalid request data', details: error.errors });\n      return;\n    }\n    \n    structuredLogger.error('Failed to execute merge'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/contacts-dedupe.ts",
        "start": 219,
        "end": 226,
        "startLoc": {
          "line": 219,
          "column": 2,
          "position": 2484
        },
        "endLoc": {
          "line": 226,
          "column": 26,
          "position": 2563
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/contacts-dedupe.ts",
        "start": 196,
        "end": 203,
        "startLoc": {
          "line": 196,
          "column": 2,
          "position": 2209
        },
        "endLoc": {
          "line": 203,
          "column": 26,
          "position": 2288
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ", {\n      error: (error as Error).message,\n      mergeId: req.params.mergeId,\n      requestId: req.headers['x-request-id'] as string || ''\n    });\n    res.status(500).json({ success: false, error: 'Failed to execute merge'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/contacts-dedupe.ts",
        "start": 226,
        "end": 231,
        "startLoc": {
          "line": 226,
          "column": 26,
          "position": 2564
        },
        "endLoc": {
          "line": 231,
          "column": 26,
          "position": 2639
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/contacts-dedupe.ts",
        "start": 203,
        "end": 208,
        "startLoc": {
          "line": 203,
          "column": 26,
          "position": 2289
        },
        "endLoc": {
          "line": 208,
          "column": 26,
          "position": 2364
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({ success: false, error: 'Invalid request data', details: error.errors });\n      return;\n    }\n    \n    structuredLogger.error('Failed to revert merge'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/contacts-dedupe.ts",
        "start": 242,
        "end": 249,
        "startLoc": {
          "line": 242,
          "column": 2,
          "position": 2759
        },
        "endLoc": {
          "line": 249,
          "column": 25,
          "position": 2838
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/contacts-dedupe.ts",
        "start": 196,
        "end": 203,
        "startLoc": {
          "line": 196,
          "column": 2,
          "position": 2209
        },
        "endLoc": {
          "line": 203,
          "column": 26,
          "position": 2288
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ", {\n      error: (error as Error).message,\n      mergeId: req.params.mergeId,\n      requestId: req.headers['x-request-id'] as string || ''\n    });\n    res.status(500).json({ success: false, error: 'Failed to revert merge'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/contacts-dedupe.ts",
        "start": 249,
        "end": 254,
        "startLoc": {
          "line": 249,
          "column": 25,
          "position": 2839
        },
        "endLoc": {
          "line": 254,
          "column": 25,
          "position": 2914
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/contacts-dedupe.ts",
        "start": 203,
        "end": 208,
        "startLoc": {
          "line": 203,
          "column": 26,
          "position": 2289
        },
        "endLoc": {
          "line": 208,
          "column": 26,
          "position": 2364
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ", async (req, res) => {\n  const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n\n  try {\n    const stats",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/connection-pool.ts",
        "start": 41,
        "end": 46,
        "startLoc": {
          "line": 41,
          "column": 9,
          "position": 462
        },
        "endLoc": {
          "line": 46,
          "column": 6,
          "position": 556
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/warmup.ts",
        "start": 31,
        "end": 36,
        "startLoc": {
          "line": 31,
          "column": 10,
          "position": 244
        },
        "endLoc": {
          "line": 36,
          "column": 7,
          "position": 338
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ", async (req, res) => {\n  const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n\n  try {\n    const { name",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/connection-pool.ts",
        "start": 195,
        "end": 200,
        "startLoc": {
          "line": 195,
          "column": 10,
          "position": 1943
        },
        "endLoc": {
          "line": 200,
          "column": 5,
          "position": 2039
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/warmup.ts",
        "start": 31,
        "end": 174,
        "startLoc": {
          "line": 31,
          "column": 10,
          "position": 244
        },
        "endLoc": {
          "line": 174,
          "column": 5,
          "position": 1727
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ", async (req, res) => {\n  const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n  const { poolName } = req.params;\n\n  try {\n    const configData",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/connection-pool.ts",
        "start": 270,
        "end": 276,
        "startLoc": {
          "line": 270,
          "column": 20,
          "position": 2473
        },
        "endLoc": {
          "line": 276,
          "column": 11,
          "position": 2583
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/warmup.ts",
        "start": 31,
        "end": 112,
        "startLoc": {
          "line": 31,
          "column": 10,
          "position": 244
        },
        "endLoc": {
          "line": 112,
          "column": 10,
          "position": 1224
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ",\n        timestamp: new Date().toISOString(),\n        traceId\n      }\n    });\n\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Invalid configuration data',\n        details: error.errors,\n        poolName",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/connection-pool.ts",
        "start": 310,
        "end": 322,
        "startLoc": {
          "line": 310,
          "column": 42,
          "position": 2794
        },
        "endLoc": {
          "line": 322,
          "column": 9,
          "position": 2887
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/performance-v2.ts",
        "start": 264,
        "end": 276,
        "startLoc": {
          "line": 264,
          "column": 37,
          "position": 2425
        },
        "endLoc": {
          "line": 276,
          "column": 8,
          "position": 2518
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ", async (req, res) => {\n  const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n  const { poolName } = req.params;\n\n  try {\n    const poolStats = connectionPoolService.getPoolStats(poolName);\n    \n    if (!poolStats) {\n      return res.status(404).json({\n        success: false,\n        error: 'Pool not found',\n        poolName,\n        traceId\n      });\n    }\n\n    // Evaluar salud del pool",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/connection-pool.ts",
        "start": 592,
        "end": 609,
        "startLoc": {
          "line": 592,
          "column": 20,
          "position": 5033
        },
        "endLoc": {
          "line": 609,
          "column": 26,
          "position": 5212
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/warmup.ts",
        "start": 31,
        "end": 123,
        "startLoc": {
          "line": 31,
          "column": 10,
          "position": 244
        },
        "endLoc": {
          "line": 123,
          "column": 31,
          "position": 1293
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "router.get('/health', async (req, res) => {\n  const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n\n  try {\n    const stats = connectionPoolService.getStats();\n    const pools",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/connection-pool.ts",
        "start": 666,
        "end": 672,
        "startLoc": {
          "line": 666,
          "column": 1,
          "position": 5653
        },
        "endLoc": {
          "line": 672,
          "column": 6,
          "position": 5766
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/performance-v2.ts",
        "start": 373,
        "end": 47,
        "startLoc": {
          "line": 373,
          "column": 1,
          "position": 3345
        },
        "endLoc": {
          "line": 47,
          "column": 10,
          "position": 570
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ".omit({ id: true, createdAt: true, updatedAt: true }).parse(req.body);\n    next();\n  } catch (error) {\n    res.status(400).json({\n      success: false,\n      error: 'Invalid feature flag data'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/configuration.ts",
        "start": 10,
        "end": 15,
        "startLoc": {
          "line": 10,
          "column": 18,
          "position": 108
        },
        "endLoc": {
          "line": 15,
          "column": 28,
          "position": 181
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/workflows.ts",
        "start": 10,
        "end": 15,
        "startLoc": {
          "line": 10,
          "column": 15,
          "position": 102
        },
        "endLoc": {
          "line": 15,
          "column": 24,
          "position": 175
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "router.get('/', async (req, res) => {\n  try {\n    const orgId = req.headers['x-org-id'] as string;\n    if (!orgId) {\n      return res.status(400).json({ error: 'Missing x-org-id header' });\n    }\n\n    // Validate query parameters\n    const filters = CompanyFilterSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/companies.ts",
        "start": 16,
        "end": 24,
        "startLoc": {
          "line": 16,
          "column": 1,
          "position": 114
        },
        "endLoc": {
          "line": 24,
          "column": 20,
          "position": 205
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/invoices.ts",
        "start": 18,
        "end": 26,
        "startLoc": {
          "line": 18,
          "column": 1,
          "position": 155
        },
        "endLoc": {
          "line": 26,
          "column": 20,
          "position": 246
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ", {\n      orgId,\n      count: result.length,\n      total,\n      filters\n    });\n\n    res.json({\n      success: true,\n      data: result,\n      pagination: {\n        page: pagination.page,\n        limit: pagination.limit,\n        total,\n        totalPages: Math.ceil(total / pagination.limit)\n      }\n    });\n\n  } catch (error) {\n    structuredLogger.error('Failed to retrieve companies'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/companies.ts",
        "start": 61,
        "end": 80,
        "startLoc": {
          "line": 61,
          "column": 22,
          "position": 524
        },
        "endLoc": {
          "line": 80,
          "column": 31,
          "position": 645
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/deals.ts",
        "start": 88,
        "end": 107,
        "startLoc": {
          "line": 88,
          "column": 18,
          "position": 806
        },
        "endLoc": {
          "line": 107,
          "column": 27,
          "position": 927
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "router.get('/:id', async (req, res) => {\n  try {\n    const { id } = req.params;\n    const orgId = req.headers['x-org-id'] as string;\n    \n    if (!orgId) {\n      return res.status(400).json({ error: 'Missing x-org-id header' });\n    }\n\n    // Set RLS context\n    await db.execute(`SET LOCAL app.org_id = '${orgId}'`);\n\n    const [company",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/companies.ts",
        "start": 93,
        "end": 105,
        "startLoc": {
          "line": 93,
          "column": 1,
          "position": 734
        },
        "endLoc": {
          "line": 105,
          "column": 8,
          "position": 856
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/invoices.ts",
        "start": 142,
        "end": 154,
        "startLoc": {
          "line": 142,
          "column": 1,
          "position": 1190
        },
        "endLoc": {
          "line": 154,
          "column": 8,
          "position": 1312
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "router.post('/', async (req, res) => {\n  try {\n    const orgId = req.headers['x-org-id'] as string;\n    const userId = req.headers['x-user-id'] as string;\n    \n    if (!orgId) {\n      return res.status(400).json({ error: 'Missing x-org-id header' });\n    }\n\n    // Validate request body\n    const companyData",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/companies.ts",
        "start": 139,
        "end": 149,
        "startLoc": {
          "line": 139,
          "column": 1,
          "position": 1109
        },
        "endLoc": {
          "line": 149,
          "column": 12,
          "position": 1217
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/invoices.ts",
        "start": 188,
        "end": 198,
        "startLoc": {
          "line": 188,
          "column": 1,
          "position": 1565
        },
        "endLoc": {
          "line": 198,
          "column": 12,
          "position": 1673
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "router.put('/:id', async (req, res) => {\n  try {\n    const { id } = req.params;\n    const orgId = req.headers['x-org-id'] as string;\n    const userId = req.headers['x-user-id'] as string;\n    \n    if (!orgId) {\n      return res.status(400).json({ error: 'Missing x-org-id header' });\n    }\n\n    // Validate request body\n    const updateData = UpdateCompanySchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/companies.ts",
        "start": 200,
        "end": 211,
        "startLoc": {
          "line": 200,
          "column": 1,
          "position": 1580
        },
        "endLoc": {
          "line": 211,
          "column": 20,
          "position": 1708
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/invoices.ts",
        "start": 281,
        "end": 292,
        "startLoc": {
          "line": 281,
          "column": 1,
          "position": 2391
        },
        "endLoc": {
          "line": 292,
          "column": 20,
          "position": 2519
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "router.delete('/:id', async (req, res) => {\n  try {\n    const { id } = req.params;\n    const orgId = req.headers['x-org-id'] as string;\n    const userId = req.headers['x-user-id'] as string;\n    \n    if (!orgId) {\n      return res.status(400).json({ error: 'Missing x-org-id header' });\n    }\n\n    // Set RLS context\n    await db.execute(`SET LOCAL app.org_id = '${orgId}'`);\n\n    const [deletedCompany",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/companies.ts",
        "start": 267,
        "end": 280,
        "startLoc": {
          "line": 267,
          "column": 1,
          "position": 2105
        },
        "endLoc": {
          "line": 280,
          "column": 15,
          "position": 2246
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/invoices.ts",
        "start": 441,
        "end": 396,
        "startLoc": {
          "line": 441,
          "column": 1,
          "position": 3747
        },
        "endLoc": {
          "line": 396,
          "column": 15,
          "position": 3420
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ", async (req, res) => {\n  const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n\n  try {\n    const taxonomies",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/companies-taxonomy.ts",
        "start": 39,
        "end": 44,
        "startLoc": {
          "line": 39,
          "column": 14,
          "position": 357
        },
        "endLoc": {
          "line": 44,
          "column": 11,
          "position": 451
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/warmup.ts",
        "start": 31,
        "end": 36,
        "startLoc": {
          "line": 31,
          "column": 10,
          "position": 244
        },
        "endLoc": {
          "line": 36,
          "column": 7,
          "position": 338
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ", async (req, res) => {\n  const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n\n  try {\n    const companyData",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/companies-taxonomy.ts",
        "start": 81,
        "end": 86,
        "startLoc": {
          "line": 81,
          "column": 12,
          "position": 663
        },
        "endLoc": {
          "line": 86,
          "column": 12,
          "position": 757
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/warmup.ts",
        "start": 31,
        "end": 36,
        "startLoc": {
          "line": 31,
          "column": 10,
          "position": 244
        },
        "endLoc": {
          "line": 36,
          "column": 7,
          "position": 338
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ", async (req, res) => {\n  const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n\n  try {\n    const viewData",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/companies-taxonomy.ts",
        "start": 188,
        "end": 193,
        "startLoc": {
          "line": 188,
          "column": 9,
          "position": 1434
        },
        "endLoc": {
          "line": 193,
          "column": 9,
          "position": 1528
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/warmup.ts",
        "start": 31,
        "end": 36,
        "startLoc": {
          "line": 31,
          "column": 10,
          "position": 244
        },
        "endLoc": {
          "line": 36,
          "column": 7,
          "position": 338
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "router.get('/health', async (req, res) => {\n  const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n\n  try {\n    const taxonomies = companiesTaxonomyService.getTaxonomies();\n    const",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/companies-taxonomy.ts",
        "start": 319,
        "end": 325,
        "startLoc": {
          "line": 319,
          "column": 1,
          "position": 2367
        },
        "endLoc": {
          "line": 325,
          "column": 6,
          "position": 2478
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/performance-v2.ts",
        "start": 373,
        "end": 46,
        "startLoc": {
          "line": 373,
          "column": 1,
          "position": 3345
        },
        "endLoc": {
          "line": 46,
          "column": 17,
          "position": 465
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ".deletedAt);\n\n    const page = parseInt(req.query.page as string) || 1;\n    const limit = parseInt(req.query.limit as string) || 10;\n    const skip = (page - 1) * limit;\n\n    const paginatedResults = companies",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/companies-simple.ts",
        "start": 42,
        "end": 48,
        "startLoc": {
          "line": 42,
          "column": 8,
          "position": 353
        },
        "endLoc": {
          "line": 48,
          "column": 10,
          "position": 437
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/contacts-simple.ts",
        "start": 45,
        "end": 51,
        "startLoc": {
          "line": 45,
          "column": 8,
          "position": 368
        },
        "endLoc": {
          "line": 51,
          "column": 9,
          "position": 452
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": ", {\n      orgId,\n      count: paginatedResults.length,\n      total\n    });\n\n    res.json({\n      success: true,\n      data: paginatedResults,\n      pagination: {\n        page,\n        limit,\n        total,\n        totalPages: Math.ceil(total / limit)\n      }\n    });\n\n  } catch (error) {\n    structuredLogger.error('Failed to retrieve companies'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/companies-simple.ts",
        "start": 51,
        "end": 69,
        "startLoc": {
          "line": 51,
          "column": 22,
          "position": 471
        },
        "endLoc": {
          "line": 69,
          "column": 31,
          "position": 576
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/contacts-simple.ts",
        "start": 54,
        "end": 72,
        "startLoc": {
          "line": 54,
          "column": 21,
          "position": 486
        },
        "endLoc": {
          "line": 72,
          "column": 30,
          "position": 591
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "limit)\n      }\n    });\n\n  } catch (error) {\n    structuredLogger.error('Failed to retrieve companies', error as Error, {\n      orgId: req.headers['x-org-id'],\n      query: req.query\n    });\n    \n    res.status(500).json({ \n      error: 'Failed to retrieve companies',\n      message: (error as Error).message \n    });\n  }\n});\n\n// GET /v1/companies/:id - Get single company\nrouter.get('/:id', async (req, res) => {\n  try {\n    const { id } = req.params;\n    const orgId = req.headers['x-org-id'] as string ||",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/companies-simple.ts",
        "start": 64,
        "end": 85,
        "startLoc": {
          "line": 64,
          "column": 2,
          "position": 548
        },
        "endLoc": {
          "line": 85,
          "column": 3,
          "position": 724
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/companies.ts",
        "start": 75,
        "end": 96,
        "startLoc": {
          "line": 75,
          "column": 2,
          "position": 617
        },
        "endLoc": {
          "line": 96,
          "column": 2,
          "position": 792
        }
      }
    },
    {
      "format": "typescript",
      "lines": 31,
      "fragment": ") {\n      return res.status(404).json({ \n        error: 'Company not found',\n        message: `Company with ID ${id} not found or access denied`\n      });\n    }\n\n    structuredLogger.info('Company retrieved', { orgId, companyId: id });\n\n    res.json({\n      success: true,\n      data: company\n    });\n\n  } catch (error) {\n    structuredLogger.error('Failed to retrieve company', error as Error, {\n      orgId: req.headers['x-org-id'],\n      companyId: req.params.id\n    });\n    \n    res.status(500).json({ \n      error: 'Failed to retrieve company',\n      message: (error as Error).message \n    });\n  }\n});\n\n// POST /v1/companies - Create company\nrouter.post('/', async (req, res) => {\n  try {\n    const orgId = req.headers['x-org-id'] as string ||",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/companies-simple.ts",
        "start": 89,
        "end": 119,
        "startLoc": {
          "line": 89,
          "column": 10,
          "position": 769
        },
        "endLoc": {
          "line": 119,
          "column": 3,
          "position": 1013
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/companies.ts",
        "start": 111,
        "end": 141,
        "startLoc": {
          "line": 111,
          "column": 8,
          "position": 908
        },
        "endLoc": {
          "line": 141,
          "column": 2,
          "position": 1151
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "structuredLogger.error('Failed to create company', error as Error, {\n      orgId: req.headers['x-org-id'],\n      userId: req.headers['x-user-id'],\n      body: req.body\n    });\n    \n    res.status(500).json({ \n      error: 'Failed to create company',\n      message: (error as Error).message \n    });\n  }\n});\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/companies-simple.ts",
        "start": 148,
        "end": 161,
        "startLoc": {
          "line": 148,
          "column": 5,
          "position": 1225
        },
        "endLoc": {
          "line": 161,
          "column": 7,
          "position": 1328
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/companies.ts",
        "start": 186,
        "end": 199,
        "startLoc": {
          "line": 186,
          "column": 5,
          "position": 1475
        },
        "endLoc": {
          "line": 199,
          "column": 42,
          "position": 1578
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "= z.object({\n  agentId: z.string(),\n  department: z.enum(['ceo', 'ia', 'cso', 'cto', 'ciso', 'coo', 'chro', 'cgo', 'cfo', 'cdo']),\n  action: z.enum(['run', 'pause', 'stop', 'status']),\n  parameters: z.record(z.any()).optional(),\n});\n\nconst MetricsRequestSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/cockpit-integration.ts",
        "start": 15,
        "end": 22,
        "startLoc": {
          "line": 15,
          "column": 2,
          "position": 116
        },
        "endLoc": {
          "line": 22,
          "column": 21,
          "position": 226
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/cockpit-integration.service.ts",
        "start": 16,
        "end": 23,
        "startLoc": {
          "line": 16,
          "column": 2,
          "position": 110
        },
        "endLoc": {
          "line": 23,
          "column": 28,
          "position": 220
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "= z.object({\n  department: z.enum(['ceo', 'ia', 'cso', 'cto', 'ciso', 'coo', 'chro', 'cgo', 'cfo', 'cdo']),\n  timeframe: z.enum(['1h', '24h', '7d', '30d']).default('24h'),\n  includeDetails: z.boolean().default(false),\n});\n\nconst ChatRequestSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/cockpit-integration.ts",
        "start": 22,
        "end": 28,
        "startLoc": {
          "line": 22,
          "column": 2,
          "position": 228
        },
        "endLoc": {
          "line": 28,
          "column": 18,
          "position": 328
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/cockpit-integration.service.ts",
        "start": 23,
        "end": 29,
        "startLoc": {
          "line": 23,
          "column": 2,
          "position": 222
        },
        "endLoc": {
          "line": 29,
          "column": 25,
          "position": 322
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "= z.object({\n  department: z.enum(['ceo', 'ia', 'cso', 'cto', 'ciso', 'coo', 'chro', 'cgo', 'cfo', 'cdo']),\n  message: z.string().min(1).max(1000),\n  context: z.object({\n    agentId: z.string().optional(),\n    previousMessages: z.array(z.string()).optional(),\n    includeMetrics: z.boolean().default(true),\n  }).optional(),\n});\n\n/**\n * POST /v1/cockpit-integration/agent-action\n * Ejecuta una acción en un agente del cockpit\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/cockpit-integration.ts",
        "start": 28,
        "end": 41,
        "startLoc": {
          "line": 28,
          "column": 2,
          "position": 330
        },
        "endLoc": {
          "line": 41,
          "column": 4,
          "position": 475
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/cockpit-integration.service.ts",
        "start": 29,
        "end": 39,
        "startLoc": {
          "line": 29,
          "column": 2,
          "position": 324
        },
        "endLoc": {
          "line": 39,
          "column": 7,
          "position": 469
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", async (req, res) => {\n  try {\n    const department = req.params.department as any;\n    \n    if (!['ceo', 'ia', 'cso', 'cto', 'ciso', 'coo', 'chro', 'cgo', 'cfo', 'cdo'].includes(department)) {\n      return res.status(400).json({\n        success: false,\n        error: 'Invalid department',\n      });\n    }\n\n    const agentId",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/cockpit-integration.ts",
        "start": 188,
        "end": 199,
        "startLoc": {
          "line": 188,
          "column": 28,
          "position": 1663
        },
        "endLoc": {
          "line": 199,
          "column": 8,
          "position": 1787
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/cockpit-integration.ts",
        "start": 74,
        "end": 85,
        "startLoc": {
          "line": 74,
          "column": 23,
          "position": 736
        },
        "endLoc": {
          "line": 85,
          "column": 15,
          "position": 860
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", { error, department: req.params.department });\n    res.status(500).json({\n      success: false,\n      error: 'Internal server error',\n      details: error instanceof Error ? error.message : 'Unknown error',\n    });\n  }\n});\n\n/**\n * GET /v1/cockpit-integration/departments\n * Obtiene información de todos los departamentos\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/cockpit-integration.ts",
        "start": 220,
        "end": 232,
        "startLoc": {
          "line": 220,
          "column": 29,
          "position": 1942
        },
        "endLoc": {
          "line": 232,
          "column": 4,
          "position": 2022
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/cockpit-integration.ts",
        "start": 106,
        "end": 118,
        "startLoc": {
          "line": 106,
          "column": 32,
          "position": 1041
        },
        "endLoc": {
          "line": 118,
          "column": 4,
          "position": 1121
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", async (req, res) => {\n  try {\n    const department = req.params.department as any;\n    \n    if (!['ceo', 'ia', 'cso', 'cto', 'ciso', 'coo', 'chro', 'cgo', 'cfo', 'cdo'].includes(department)) {\n      return res.status(400).json({\n        success: false,\n        error: 'Invalid department',\n      });\n    }\n\n    logger",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/cockpit-integration.ts",
        "start": 272,
        "end": 283,
        "startLoc": {
          "line": 272,
          "column": 22,
          "position": 2469
        },
        "endLoc": {
          "line": 283,
          "column": 7,
          "position": 2591
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/cockpit-integration.ts",
        "start": 74,
        "end": 85,
        "startLoc": {
          "line": 74,
          "column": 23,
          "position": 736
        },
        "endLoc": {
          "line": 85,
          "column": 6,
          "position": 858
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", { error, department: req.params.department });\n    res.status(500).json({\n      success: false,\n      error: 'Internal server error',\n      details: error instanceof Error ? error.message : 'Unknown error',\n    });\n  }\n});\n\n/**\n * GET /v1/cockpit-integration/health\n * Health check del servicio\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/cockpit-integration.ts",
        "start": 307,
        "end": 319,
        "startLoc": {
          "line": 307,
          "column": 34,
          "position": 2773
        },
        "endLoc": {
          "line": 319,
          "column": 4,
          "position": 2853
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/cockpit-integration.ts",
        "start": 106,
        "end": 118,
        "startLoc": {
          "line": 106,
          "column": 32,
          "position": 1041
        },
        "endLoc": {
          "line": 118,
          "column": 4,
          "position": 1121
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", error as Error, {\n      orgId: req.headers['x-org-id'],\n      userId: Array.isArray(req.headers['x-user-id']) ? req.headers['x-user-id'][0] : req.headers['x-user-id']\n    });\n\n    res.status(500).json({\n      error: 'Failed to establish SSE connection',\n      message: (error as Error).message\n    });\n  }\n});\n\n// ============================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/cockpit-bff-live.ts",
        "start": 79,
        "end": 91,
        "startLoc": {
          "line": 79,
          "column": 45,
          "position": 648
        },
        "endLoc": {
          "line": 91,
          "column": 80,
          "position": 760
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/events.ts",
        "start": 50,
        "end": 62,
        "startLoc": {
          "line": 50,
          "column": 37,
          "position": 421
        },
        "endLoc": {
          "line": 62,
          "column": 76,
          "position": 533
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", error as Error, {\n      department: req.params.department\n    });\n\n    res.status(400).json({\n      success: false,\n      error: 'INVALID_REQUEST',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n// ============================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/cockpit-bff-live.ts",
        "start": 160,
        "end": 172,
        "startLoc": {
          "line": 160,
          "column": 40,
          "position": 1276
        },
        "endLoc": {
          "line": 172,
          "column": 80,
          "position": 1362
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/cockpit-bff-live.ts",
        "start": 123,
        "end": 138,
        "startLoc": {
          "line": 123,
          "column": 32,
          "position": 993
        },
        "endLoc": {
          "line": 138,
          "column": 4,
          "position": 1079
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", error as Error, {\n      department: req.params.department\n    });\n\n    res.status(400).json({\n      success: false,\n      error: 'INVALID_REQUEST',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n// ============================================================================\n// EVENT ENDPOINTS",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/cockpit-bff-live.ts",
        "start": 240,
        "end": 253,
        "startLoc": {
          "line": 240,
          "column": 34,
          "position": 1856
        },
        "endLoc": {
          "line": 253,
          "column": 19,
          "position": 1944
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/cockpit-bff-live.ts",
        "start": 123,
        "end": 173,
        "startLoc": {
          "line": 123,
          "column": 32,
          "position": 993
        },
        "endLoc": {
          "line": 173,
          "column": 26,
          "position": 1364
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", error as Error, {\n      department: req.params.department\n    });\n\n    res.status(400).json({\n      success: false,\n      error: 'INVALID_REQUEST',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n// ============================================================================\n// WEBSOCKET ENDPOINTS",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/cockpit-bff-live.ts",
        "start": 295,
        "end": 308,
        "startLoc": {
          "line": 295,
          "column": 30,
          "position": 2257
        },
        "endLoc": {
          "line": 308,
          "column": 23,
          "position": 2345
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/cockpit-bff-live.ts",
        "start": 123,
        "end": 173,
        "startLoc": {
          "line": 123,
          "column": 32,
          "position": 993
        },
        "endLoc": {
          "line": 173,
          "column": 26,
          "position": 1364
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ").optional(),\n  userId: z.string().optional(),\n  organizationId: z.string().optional(),\n  requestId: z.string().optional(),\n  sessionId: z.string().optional(),\n  correlationId: z.string().optional(),\n  tags: z.array(z.string()).optional(),\n  source: z.string().optional(),\n  startTime",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/centralized-logging.ts",
        "start": 59,
        "end": 67,
        "startLoc": {
          "line": 59,
          "column": 2,
          "position": 600
        },
        "endLoc": {
          "line": 67,
          "column": 10,
          "position": 718
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/centralized-logging.ts",
        "start": 43,
        "end": 51,
        "startLoc": {
          "line": 43,
          "column": 2,
          "position": 369
        },
        "endLoc": {
          "line": 51,
          "column": 9,
          "position": 487
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Error writing log entry'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/centralized-logging.ts",
        "start": 144,
        "end": 154,
        "startLoc": {
          "line": 144,
          "column": 5,
          "position": 1753
        },
        "endLoc": {
          "line": 154,
          "column": 26,
          "position": 1833
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/sepa.ts",
        "start": 39,
        "end": 49,
        "startLoc": {
          "line": 39,
          "column": 5,
          "position": 369
        },
        "endLoc": {
          "line": 49,
          "column": 34,
          "position": 450
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Error searching logs'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/centralized-logging.ts",
        "start": 183,
        "end": 193,
        "startLoc": {
          "line": 183,
          "column": 5,
          "position": 2172
        },
        "endLoc": {
          "line": 193,
          "column": 23,
          "position": 2252
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/sepa.ts",
        "start": 39,
        "end": 49,
        "startLoc": {
          "line": 39,
          "column": 5,
          "position": 369
        },
        "endLoc": {
          "line": 49,
          "column": 34,
          "position": 450
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Error aggregating logs'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/centralized-logging.ts",
        "start": 219,
        "end": 229,
        "startLoc": {
          "line": 219,
          "column": 5,
          "position": 2481
        },
        "endLoc": {
          "line": 229,
          "column": 25,
          "position": 2561
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/sepa.ts",
        "start": 39,
        "end": 49,
        "startLoc": {
          "line": 39,
          "column": 5,
          "position": 369
        },
        "endLoc": {
          "line": 49,
          "column": 34,
          "position": 450
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Error creating alert rule'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/centralized-logging.ts",
        "start": 309,
        "end": 319,
        "startLoc": {
          "line": 309,
          "column": 5,
          "position": 3227
        },
        "endLoc": {
          "line": 319,
          "column": 28,
          "position": 3307
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/sepa.ts",
        "start": 39,
        "end": 49,
        "startLoc": {
          "line": 39,
          "column": 5,
          "position": 369
        },
        "endLoc": {
          "line": 49,
          "column": 34,
          "position": 450
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Error creating retention policy'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/centralized-logging.ts",
        "start": 455,
        "end": 465,
        "startLoc": {
          "line": 455,
          "column": 5,
          "position": 4435
        },
        "endLoc": {
          "line": 465,
          "column": 34,
          "position": 4515
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/sepa.ts",
        "start": 39,
        "end": 49,
        "startLoc": {
          "line": 39,
          "column": 5,
          "position": 369
        },
        "endLoc": {
          "line": 49,
          "column": 34,
          "position": 450
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ".getConfig();\n\n    res.json({\n      success: true,\n      data: config\n    });\n  } catch (error) {\n    logger.error('Error getting configuration', { error });\n    res.status(500).json({\n      success: false,\n      error: 'Failed to get configuration',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n// PUT /api/centralized-logging/config",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/centralized-logging.ts",
        "start": 605,
        "end": 621,
        "startLoc": {
          "line": 605,
          "column": 15,
          "position": 5701
        },
        "endLoc": {
          "line": 621,
          "column": 39,
          "position": 5819
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/project-completion-deployment.ts",
        "start": 433,
        "end": 449,
        "startLoc": {
          "line": 433,
          "column": 25,
          "position": 3867
        },
        "endLoc": {
          "line": 449,
          "column": 49,
          "position": 3985
        }
      }
    },
    {
      "format": "typescript",
      "lines": 28,
      "fragment": ".updateConfig(validatedData);\n\n    res.json({\n      success: true,\n      data: updatedConfig,\n      message: 'Configuration updated successfully'\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Error updating configuration', { error });\n    res.status(500).json({\n      success: false,\n      error: 'Failed to update configuration',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n// ===== HEALTH CHECK =====\n\n// GET /api/centralized-logging/health",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/centralized-logging.ts",
        "start": 626,
        "end": 653,
        "startLoc": {
          "line": 626,
          "column": 15,
          "position": 5880
        },
        "endLoc": {
          "line": 653,
          "column": 39,
          "position": 6069
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/project-completion-deployment.ts",
        "start": 454,
        "end": 481,
        "startLoc": {
          "line": 454,
          "column": 25,
          "position": 4046
        },
        "endLoc": {
          "line": 481,
          "column": 49,
          "position": 4235
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": "}\n    };\n\n    res.json({\n      success: true,\n      data: health\n    });\n  } catch (error) {\n    logger.error('Error checking health', { error });\n    res.status(500).json({\n      success: false,\n      error: 'Health check failed',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n// ===== UTILIDADES =====\n\n// POST /api/centralized-logging/logs/bulk",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/centralized-logging.ts",
        "start": 676,
        "end": 695,
        "startLoc": {
          "line": 676,
          "column": 7,
          "position": 6328
        },
        "endLoc": {
          "line": 695,
          "column": 43,
          "position": 6449
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/project-completion-deployment.ts",
        "start": 503,
        "end": 522,
        "startLoc": {
          "line": 503,
          "column": 7,
          "position": 4469
        },
        "endLoc": {
          "line": 522,
          "column": 51,
          "position": 4590
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ");\n    \n    if (!environment) {\n      return res.status(404).json({\n        success: false,\n        error: 'Environment not found'\n      });\n    }\n    \n    res.json({\n      success: true,\n      data: environment,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Error updating environment metrics'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/blue-green-deployment.ts",
        "start": 129,
        "end": 144,
        "startLoc": {
          "line": 129,
          "column": 8,
          "position": 1610
        },
        "endLoc": {
          "line": 144,
          "column": 37,
          "position": 1718
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/blue-green-deployment.ts",
        "start": 93,
        "end": 108,
        "startLoc": {
          "line": 93,
          "column": 14,
          "position": 1184
        },
        "endLoc": {
          "line": 108,
          "column": 28,
          "position": 1292
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "),\n  source: z.object({\n    type: z.enum(['database', 'filesystem', 'api', 'config']),\n    path: z.string().optional(),\n    connectionString: z.string().optional(),\n    tables: z.array(z.string()).optional(),\n    includeData: z.boolean().default(true),\n    includeSchema: z.boolean().default(true)\n  }).",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/backup-recovery.ts",
        "start": 51,
        "end": 59,
        "startLoc": {
          "line": 51,
          "column": 2,
          "position": 733
        },
        "endLoc": {
          "line": 59,
          "column": 2,
          "position": 853
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/backup-recovery.ts",
        "start": 12,
        "end": 20,
        "startLoc": {
          "line": 12,
          "column": 2,
          "position": 143
        },
        "endLoc": {
          "line": 20,
          "column": 2,
          "position": 263
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "),\n  destination: z.object({\n    type: z.enum(['local', 'azure_blob', 's3', 'ftp', 'sftp']),\n    path: z.string(),\n    credentials: z.record(z.string(), z.string()).optional(),\n    compression: z.boolean().default(true),\n    encryption: z.boolean().default(true)\n  }).",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/backup-recovery.ts",
        "start": 59,
        "end": 66,
        "startLoc": {
          "line": 59,
          "column": 2,
          "position": 856
        },
        "endLoc": {
          "line": 66,
          "column": 2,
          "position": 967
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/backup-recovery.ts",
        "start": 20,
        "end": 27,
        "startLoc": {
          "line": 20,
          "column": 2,
          "position": 262
        },
        "endLoc": {
          "line": 27,
          "column": 2,
          "position": 373
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "),\n  schedule: z.object({\n    enabled: z.boolean().default(false),\n    cron: z.string().optional(),\n    timezone: z.string().default('UTC'),\n    retention: z.object({\n      days: z.number().min(1).max(365).default(30),\n      maxBackups: z.number().min(1).max(1000).default(100)\n    })\n  }).",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/backup-recovery.ts",
        "start": 66,
        "end": 75,
        "startLoc": {
          "line": 66,
          "column": 2,
          "position": 970
        },
        "endLoc": {
          "line": 75,
          "column": 2,
          "position": 1098
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/backup-recovery.ts",
        "start": 27,
        "end": 36,
        "startLoc": {
          "line": 27,
          "column": 2,
          "position": 372
        },
        "endLoc": {
          "line": 36,
          "column": 2,
          "position": 500
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "),\n  filters: z.object({\n    include: z.array(z.string()).default([]),\n    exclude: z.array(z.string()).default([]),\n    maxFileSize: z.number().optional(),\n    fileTypes: z.array(z.string()).optional()\n  }).optional(),\n  isActive: z.boolean().optional",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/backup-recovery.ts",
        "start": 75,
        "end": 82,
        "startLoc": {
          "line": 75,
          "column": 2,
          "position": 1101
        },
        "endLoc": {
          "line": 82,
          "column": 9,
          "position": 1211
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/backup-recovery.ts",
        "start": 36,
        "end": 43,
        "startLoc": {
          "line": 36,
          "column": 2,
          "position": 499
        },
        "endLoc": {
          "line": 43,
          "column": 8,
          "position": 609
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Failed to create backup configuration'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/backup-recovery.ts",
        "start": 185,
        "end": 195,
        "startLoc": {
          "line": 185,
          "column": 5,
          "position": 2105
        },
        "endLoc": {
          "line": 195,
          "column": 40,
          "position": 2185
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/sepa.ts",
        "start": 39,
        "end": 49,
        "startLoc": {
          "line": 39,
          "column": 5,
          "position": 369
        },
        "endLoc": {
          "line": 49,
          "column": 34,
          "position": 450
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Failed to update backup configuration'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/backup-recovery.ts",
        "start": 234,
        "end": 244,
        "startLoc": {
          "line": 234,
          "column": 5,
          "position": 2477
        },
        "endLoc": {
          "line": 244,
          "column": 40,
          "position": 2557
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/sepa.ts",
        "start": 39,
        "end": 49,
        "startLoc": {
          "line": 39,
          "column": 5,
          "position": 369
        },
        "endLoc": {
          "line": 49,
          "column": 34,
          "position": 450
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", async (req, res) => {\n  try {\n    const { id } = req.params;\n    const config = await backupRecoveryService.getBackupConfig(id);\n\n    if (!config) {\n      return res.status(404).json({\n        success: false,\n        error: 'Backup configuration not found'\n      });\n    }\n\n    const",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/backup-recovery.ts",
        "start": 298,
        "end": 310,
        "startLoc": {
          "line": 298,
          "column": 24,
          "position": 2975
        },
        "endLoc": {
          "line": 310,
          "column": 6,
          "position": 3076
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/backup-recovery.ts",
        "start": 135,
        "end": 147,
        "startLoc": {
          "line": 135,
          "column": 15,
          "position": 1697
        },
        "endLoc": {
          "line": 147,
          "column": 7,
          "position": 1798
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Failed to execute backup'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/backup-recovery.ts",
        "start": 356,
        "end": 366,
        "startLoc": {
          "line": 356,
          "column": 5,
          "position": 3452
        },
        "endLoc": {
          "line": 366,
          "column": 27,
          "position": 3532
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/sepa.ts",
        "start": 39,
        "end": 49,
        "startLoc": {
          "line": 39,
          "column": 5,
          "position": 369
        },
        "endLoc": {
          "line": 49,
          "column": 34,
          "position": 450
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Failed to execute recovery'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/backup-recovery.ts",
        "start": 507,
        "end": 517,
        "startLoc": {
          "line": 507,
          "column": 5,
          "position": 4676
        },
        "endLoc": {
          "line": 517,
          "column": 29,
          "position": 4756
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/sepa.ts",
        "start": 39,
        "end": 49,
        "startLoc": {
          "line": 39,
          "column": 5,
          "position": 369
        },
        "endLoc": {
          "line": 49,
          "column": 34,
          "position": 450
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ".id\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Internal server error'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/azure-integration.ts",
        "start": 87,
        "end": 100,
        "startLoc": {
          "line": 87,
          "column": 2,
          "position": 870
        },
        "endLoc": {
          "line": 100,
          "column": 24,
          "position": 962
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/customer-support.ts",
        "start": 236,
        "end": 186,
        "startLoc": {
          "line": 236,
          "column": 7,
          "position": 2226
        },
        "endLoc": {
          "line": 186,
          "column": 34,
          "position": 2096
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": ", error as Error, {\n      userId: req.user?.id\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Internal server error',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n// ============================================================================\n// TEXT TO SPEECH ENDPOINTS",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/azure-integration.ts",
        "start": 138,
        "end": 159,
        "startLoc": {
          "line": 138,
          "column": 26,
          "position": 1219
        },
        "endLoc": {
          "line": 159,
          "column": 28,
          "position": 1368
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/azure-integration.ts",
        "start": 86,
        "end": 107,
        "startLoc": {
          "line": 86,
          "column": 25,
          "position": 851
        },
        "endLoc": {
          "line": 107,
          "column": 30,
          "position": 1000
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": ", error as Error, {\n      userId: req.user?.id\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Internal server error',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n// ============================================================================\n// HEALTH AND STATUS ENDPOINTS",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/azure-integration.ts",
        "start": 187,
        "end": 208,
        "startLoc": {
          "line": 187,
          "column": 26,
          "position": 1570
        },
        "endLoc": {
          "line": 208,
          "column": 31,
          "position": 1719
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/azure-integration.ts",
        "start": 86,
        "end": 107,
        "startLoc": {
          "line": 86,
          "column": 25,
          "position": 851
        },
        "endLoc": {
          "line": 107,
          "column": 30,
          "position": 1000
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Error creating test suite'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/automated-testing.ts",
        "start": 136,
        "end": 146,
        "startLoc": {
          "line": 136,
          "column": 5,
          "position": 1334
        },
        "endLoc": {
          "line": 146,
          "column": 28,
          "position": 1414
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/sepa.ts",
        "start": 39,
        "end": 49,
        "startLoc": {
          "line": 39,
          "column": 5,
          "position": 369
        },
        "endLoc": {
          "line": 49,
          "column": 34,
          "position": 450
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Error creating secret rotation'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/automated-testing.ts",
        "start": 299,
        "end": 309,
        "startLoc": {
          "line": 299,
          "column": 5,
          "position": 2765
        },
        "endLoc": {
          "line": 309,
          "column": 33,
          "position": 2845
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/sepa.ts",
        "start": 39,
        "end": 49,
        "startLoc": {
          "line": 39,
          "column": 5,
          "position": 369
        },
        "endLoc": {
          "line": 49,
          "column": 34,
          "position": 450
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Error creating security checklist'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/automated-testing.ts",
        "start": 428,
        "end": 438,
        "startLoc": {
          "line": 428,
          "column": 5,
          "position": 3890
        },
        "endLoc": {
          "line": 438,
          "column": 36,
          "position": 3970
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/sepa.ts",
        "start": 39,
        "end": 49,
        "startLoc": {
          "line": 39,
          "column": 5,
          "position": 369
        },
        "endLoc": {
          "line": 49,
          "column": 34,
          "position": 450
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "});\n  } catch (error) {\n    logger.error('Error getting configuration', { error });\n    res.status(500).json({\n      success: false,\n      error: 'Failed to get configuration',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n// PUT /api/automated-testing/config",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/automated-testing.ts",
        "start": 546,
        "end": 557,
        "startLoc": {
          "line": 546,
          "column": 5,
          "position": 4895
        },
        "endLoc": {
          "line": 557,
          "column": 37,
          "position": 4985
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/project-completion-deployment.ts",
        "start": 438,
        "end": 449,
        "startLoc": {
          "line": 438,
          "column": 5,
          "position": 3895
        },
        "endLoc": {
          "line": 449,
          "column": 49,
          "position": 3985
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": ",\n      message: 'Configuration updated successfully'\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Error updating configuration', { error });\n    res.status(500).json({\n      success: false,\n      error: 'Failed to update configuration',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n// ===== HEALTH CHECK =====\n\n// GET /api/automated-testing/health",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/automated-testing.ts",
        "start": 567,
        "end": 590,
        "startLoc": {
          "line": 567,
          "column": 14,
          "position": 5073
        },
        "endLoc": {
          "line": 590,
          "column": 37,
          "position": 5235
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/project-completion-deployment.ts",
        "start": 458,
        "end": 481,
        "startLoc": {
          "line": 458,
          "column": 14,
          "position": 4073
        },
        "endLoc": {
          "line": 481,
          "column": 49,
          "position": 4235
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "}\n    };\n\n    res.json({\n      success: true,\n      data: health\n    });\n  } catch (error) {\n    logger.error('Error checking health', { error });\n    res.status(500).json({\n      success: false,\n      error: 'Health check failed',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/automated-testing.ts",
        "start": 607,
        "end": 624,
        "startLoc": {
          "line": 607,
          "column": 7,
          "position": 5394
        },
        "endLoc": {
          "line": 624,
          "column": 7,
          "position": 5512
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/project-completion-deployment.ts",
        "start": 503,
        "end": 520,
        "startLoc": {
          "line": 503,
          "column": 7,
          "position": 4469
        },
        "endLoc": {
          "line": 520,
          "column": 26,
          "position": 4587
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Error creating documentation'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/automated-documentation.ts",
        "start": 140,
        "end": 150,
        "startLoc": {
          "line": 140,
          "column": 5,
          "position": 1396
        },
        "endLoc": {
          "line": 150,
          "column": 31,
          "position": 1476
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/sepa.ts",
        "start": 39,
        "end": 49,
        "startLoc": {
          "line": 39,
          "column": 5,
          "position": 369
        },
        "endLoc": {
          "line": 49,
          "column": 34,
          "position": 450
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Error creating runbook'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/automated-documentation.ts",
        "start": 386,
        "end": 396,
        "startLoc": {
          "line": 386,
          "column": 5,
          "position": 3435
        },
        "endLoc": {
          "line": 396,
          "column": 25,
          "position": 3515
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/sepa.ts",
        "start": 39,
        "end": 49,
        "startLoc": {
          "line": 39,
          "column": 5,
          "position": 369
        },
        "endLoc": {
          "line": 49,
          "column": 34,
          "position": 450
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "router.get('/reports/:period', async (req: Request, res: Response) => {\n  try {\n    const { period } = req.params;\n    \n    if (!['daily', 'weekly', 'monthly'].includes(period)) {\n      return res.status(400).json({\n        success: false,\n        error: 'Invalid period. Must be: daily, weekly, or monthly'\n      });\n    }\n\n    const report = await documentationService",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/automated-documentation.ts",
        "start": 484,
        "end": 495,
        "startLoc": {
          "line": 484,
          "column": 1,
          "position": 4226
        },
        "endLoc": {
          "line": 495,
          "column": 21,
          "position": 4343
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/project-completion-deployment.ts",
        "start": 401,
        "end": 412,
        "startLoc": {
          "line": 401,
          "column": 1,
          "position": 3563
        },
        "endLoc": {
          "line": 412,
          "column": 25,
          "position": 3679
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "router.get('/config', async (req: Request, res: Response) => {\n  try {\n    res.json({\n      success: true,\n      data: defaultConfig\n    });\n  } catch (error) {\n    logger.error('Error getting configuration', { error });\n    res.status(500).json({\n      success: false,\n      error: 'Failed to get configuration',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n// PUT /api/automated-documentation/config",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/automated-documentation.ts",
        "start": 514,
        "end": 530,
        "startLoc": {
          "line": 514,
          "column": 1,
          "position": 4491
        },
        "endLoc": {
          "line": 530,
          "column": 43,
          "position": 4633
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/automated-testing.ts",
        "start": 541,
        "end": 449,
        "startLoc": {
          "line": 541,
          "column": 1,
          "position": 4843
        },
        "endLoc": {
          "line": 449,
          "column": 49,
          "position": 3985
        }
      }
    },
    {
      "format": "typescript",
      "lines": 33,
      "fragment": "router.put('/config', async (req: Request, res: Response) => {\n  try {\n    const validatedData = UpdateConfigSchema.parse(req.body);\n    \n    // Actualizar configuración (en una implementación real, esto se persistiría)\n    Object.assign(defaultConfig, validatedData);\n    \n    res.json({\n      success: true,\n      data: defaultConfig,\n      message: 'Configuration updated successfully'\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Error updating configuration', { error });\n    res.status(500).json({\n      success: false,\n      error: 'Failed to update configuration',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n// ===== HEALTH CHECK =====\n\n// GET /api/automated-documentation/health",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/automated-documentation.ts",
        "start": 531,
        "end": 563,
        "startLoc": {
          "line": 531,
          "column": 1,
          "position": 4635
        },
        "endLoc": {
          "line": 563,
          "column": 43,
          "position": 4883
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/automated-testing.ts",
        "start": 558,
        "end": 481,
        "startLoc": {
          "line": 558,
          "column": 1,
          "position": 4987
        },
        "endLoc": {
          "line": 481,
          "column": 49,
          "position": 4235
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "}\n    };\n\n    res.json({\n      success: true,\n      data: health\n    });\n  } catch (error) {\n    logger.error('Error checking health', { error });\n    res.status(500).json({\n      success: false,\n      error: 'Health check failed',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\nexport default router;",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/automated-documentation.ts",
        "start": 583,
        "end": 600,
        "startLoc": {
          "line": 583,
          "column": 7,
          "position": 5109
        },
        "endLoc": {
          "line": 600,
          "column": 2,
          "position": 5232
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/project-completion-deployment.ts",
        "start": 503,
        "end": 624,
        "startLoc": {
          "line": 503,
          "column": 7,
          "position": 4469
        },
        "endLoc": {
          "line": 624,
          "column": 2,
          "position": 5517
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "= z.object({\n  email: z.string().email('Invalid email format'),\n  password: z.string().min(1, 'Password is required'),\n  organizationId: z.string().uuid().optional(),\n  rememberMe: z.boolean().default(false),\n  mfaToken: z.string().optional()\n});\n\nconst",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/auth.ts",
        "start": 16,
        "end": 24,
        "startLoc": {
          "line": 16,
          "column": 2,
          "position": 123
        },
        "endLoc": {
          "line": 24,
          "column": 6,
          "position": 220
        }
      },
      "secondFile": {
        "name": "packages/shared/src/contracts/index.ts",
        "start": 39,
        "end": 47,
        "startLoc": {
          "line": 39,
          "column": 2,
          "position": 318
        },
        "endLoc": {
          "line": 47,
          "column": 7,
          "position": 415
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "= z.object({\n  permissions: z.array(z.string()).min(1, 'At least one permission is required'),\n  expiresIn: z.number().min(1).max(365).default(90) // days\n});\n\nconst",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/auth.ts",
        "start": 32,
        "end": 37,
        "startLoc": {
          "line": 32,
          "column": 2,
          "position": 290
        },
        "endLoc": {
          "line": 37,
          "column": 6,
          "position": 354
        }
      },
      "secondFile": {
        "name": "packages/shared/src/contracts/index.ts",
        "start": 77,
        "end": 82,
        "startLoc": {
          "line": 77,
          "column": 2,
          "position": 719
        },
        "endLoc": {
          "line": 82,
          "column": 7,
          "position": 783
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ", async (req: Request, res: Response): Promise<void> => {\n  const startTime = Date.now();\n  const requestId = req.headers['x-request-id'] as string || `req_${Date.now()}`;\n\n  try {\n    // Validate request",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/auth.ts",
        "start": 51,
        "end": 56,
        "startLoc": {
          "line": 51,
          "column": 9,
          "position": 478
        },
        "endLoc": {
          "line": 56,
          "column": 20,
          "position": 557
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 61,
        "end": 66,
        "startLoc": {
          "line": 61,
          "column": 18,
          "position": 528
        },
        "endLoc": {
          "line": 66,
          "column": 29,
          "position": 607
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ".safeParse(req.body);\n    if (!validation.success) {\n      res.status(400).json({\n        error: 'Validation error',\n        message: validation.error.errors.map(e => e.message).join(', '),\n        requestId,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    const loginData",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/auth.ts",
        "start": 57,
        "end": 68,
        "startLoc": {
          "line": 57,
          "column": 12,
          "position": 567
        },
        "endLoc": {
          "line": 68,
          "column": 10,
          "position": 668
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 134,
        "end": 78,
        "startLoc": {
          "line": 134,
          "column": 17,
          "position": 1140
        },
        "endLoc": {
          "line": 78,
          "column": 2,
          "position": 718
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ", async (req: Request, res: Response): Promise<void> => {\n  const startTime = Date.now();\n  const requestId = req.headers['x-request-id'] as string || `req_${Date.now()}`;\n\n  try {\n    // Validate request\n    const validation = refreshTokenSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/auth.ts",
        "start": 111,
        "end": 117,
        "startLoc": {
          "line": 111,
          "column": 11,
          "position": 976
        },
        "endLoc": {
          "line": 117,
          "column": 19,
          "position": 1064
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 61,
        "end": 57,
        "startLoc": {
          "line": 61,
          "column": 18,
          "position": 528
        },
        "endLoc": {
          "line": 57,
          "column": 12,
          "position": 566
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ".safeParse(req.body);\n    if (!validation.success) {\n      res.status(400).json({\n        error: 'Validation error',\n        message: validation.error.errors.map(e => e.message).join(', '),\n        requestId,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    const { refreshToken",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/auth.ts",
        "start": 117,
        "end": 128,
        "startLoc": {
          "line": 117,
          "column": 19,
          "position": 1065
        },
        "endLoc": {
          "line": 128,
          "column": 13,
          "position": 1168
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 134,
        "end": 78,
        "startLoc": {
          "line": 134,
          "column": 17,
          "position": 1140
        },
        "endLoc": {
          "line": 78,
          "column": 4,
          "position": 720
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ",\n      requestId,\n      timestamp: new Date().toISOString()\n    });\n\n  } catch (error) {\n    const processingTime = Date.now() - startTime;\n    const errorMessage = error instanceof Error ? error.message : 'Unknown error';\n\n    structuredLogger.error('Token refresh failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/auth.ts",
        "start": 142,
        "end": 151,
        "startLoc": {
          "line": 142,
          "column": 12,
          "position": 1262
        },
        "endLoc": {
          "line": 151,
          "column": 23,
          "position": 1347
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/auth.ts",
        "start": 85,
        "end": 94,
        "startLoc": {
          "line": 85,
          "column": 12,
          "position": 791
        },
        "endLoc": {
          "line": 94,
          "column": 15,
          "position": 876
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ", authenticateToken, async (req: Request, res: Response): Promise<void> => {\n  const startTime = Date.now();\n  const requestId = req.headers['x-request-id'] as string || `req_${Date.now()}`;\n\n  try {\n    // Validate request\n    const validation = logoutSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/auth.ts",
        "start": 167,
        "end": 173,
        "startLoc": {
          "line": 167,
          "column": 10,
          "position": 1436
        },
        "endLoc": {
          "line": 173,
          "column": 13,
          "position": 1527
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 61,
        "end": 57,
        "startLoc": {
          "line": 61,
          "column": 10,
          "position": 525
        },
        "endLoc": {
          "line": 57,
          "column": 12,
          "position": 566
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ".safeParse(req.body);\n    if (!validation.success) {\n      res.status(400).json({\n        error: 'Validation error',\n        message: validation.error.errors.map(e => e.message).join(', '),\n        requestId,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    const { sessionId",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/auth.ts",
        "start": 173,
        "end": 184,
        "startLoc": {
          "line": 173,
          "column": 13,
          "position": 1528
        },
        "endLoc": {
          "line": 184,
          "column": 10,
          "position": 1631
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 134,
        "end": 78,
        "startLoc": {
          "line": 134,
          "column": 17,
          "position": 1140
        },
        "endLoc": {
          "line": 78,
          "column": 4,
          "position": 720
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ",\n      requestId,\n      timestamp: new Date().toISOString()\n    });\n\n  } catch (error) {\n    const processingTime = Date.now() - startTime;\n    const errorMessage = error instanceof Error ? error.message : 'Unknown error';\n\n    structuredLogger.error('Logout failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/auth.ts",
        "start": 211,
        "end": 220,
        "startLoc": {
          "line": 211,
          "column": 26,
          "position": 1824
        },
        "endLoc": {
          "line": 220,
          "column": 16,
          "position": 1909
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/auth.ts",
        "start": 85,
        "end": 94,
        "startLoc": {
          "line": 85,
          "column": 12,
          "position": 791
        },
        "endLoc": {
          "line": 94,
          "column": 15,
          "position": 876
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ", authenticateToken, async (req: Request, res: Response): Promise<void> => {\n  const startTime = Date.now();\n  const requestId = req.headers['x-request-id'] as string || `req_${Date.now()}`;\n\n  try {\n    if",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/auth.ts",
        "start": 237,
        "end": 242,
        "startLoc": {
          "line": 237,
          "column": 14,
          "position": 2010
        },
        "endLoc": {
          "line": 242,
          "column": 3,
          "position": 2092
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 61,
        "end": 66,
        "startLoc": {
          "line": 61,
          "column": 10,
          "position": 525
        },
        "endLoc": {
          "line": 66,
          "column": 29,
          "position": 607
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ",\n      requestId,\n      timestamp: new Date().toISOString()\n    });\n\n  } catch (error) {\n    const processingTime = Date.now() - startTime;\n    const errorMessage = error instanceof Error ? error.message : 'Unknown error';\n\n    structuredLogger.error('Logout all failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/auth.ts",
        "start": 265,
        "end": 274,
        "startLoc": {
          "line": 265,
          "column": 44,
          "position": 2254
        },
        "endLoc": {
          "line": 274,
          "column": 20,
          "position": 2339
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/auth.ts",
        "start": 85,
        "end": 94,
        "startLoc": {
          "line": 85,
          "column": 12,
          "position": 791
        },
        "endLoc": {
          "line": 94,
          "column": 15,
          "position": 876
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ", authenticateToken, async (req: Request, res: Response): Promise<void> => {\n  const startTime = Date.now();\n  const requestId = req.headers['x-request-id'] as string || `req_${Date.now()}`;\n\n  try {\n    if (!req.user?.id ||",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/auth.ts",
        "start": 295,
        "end": 300,
        "startLoc": {
          "line": 295,
          "column": 12,
          "position": 2447
        },
        "endLoc": {
          "line": 300,
          "column": 3,
          "position": 2540
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 61,
        "end": 242,
        "startLoc": {
          "line": 61,
          "column": 10,
          "position": 525
        },
        "endLoc": {
          "line": 242,
          "column": 2,
          "position": 2102
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ".safeParse(req.body);\n    if (!validation.success) {\n      res.status(400).json({\n        error: 'Validation error',\n        message: validation.error.errors.map(e => e.message).join(', '),\n        requestId,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    const { permissions",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/auth.ts",
        "start": 311,
        "end": 322,
        "startLoc": {
          "line": 311,
          "column": 19,
          "position": 2621
        },
        "endLoc": {
          "line": 322,
          "column": 12,
          "position": 2724
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 134,
        "end": 78,
        "startLoc": {
          "line": 134,
          "column": 17,
          "position": 1140
        },
        "endLoc": {
          "line": 78,
          "column": 4,
          "position": 720
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ",\n      requestId,\n      timestamp: new Date().toISOString()\n    });\n\n  } catch (error) {\n    const processingTime = Date.now() - startTime;\n    const errorMessage = error instanceof Error ? error.message : 'Unknown error';\n\n    structuredLogger.error('API key creation failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/auth.ts",
        "start": 343,
        "end": 352,
        "startLoc": {
          "line": 343,
          "column": 13,
          "position": 2864
        },
        "endLoc": {
          "line": 352,
          "column": 26,
          "position": 2949
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/auth.ts",
        "start": 85,
        "end": 94,
        "startLoc": {
          "line": 85,
          "column": 12,
          "position": 791
        },
        "endLoc": {
          "line": 94,
          "column": 15,
          "position": 876
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ", authenticateToken, async (req: Request, res: Response): Promise<void> => {\n  const startTime = Date.now();\n  const requestId = req.headers['x-request-id'] as string || `req_${Date.now()}`;\n\n  try {\n    if (!req.user)",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/auth.ts",
        "start": 373,
        "end": 378,
        "startLoc": {
          "line": 373,
          "column": 6,
          "position": 3057
        },
        "endLoc": {
          "line": 378,
          "column": 2,
          "position": 3146
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 61,
        "end": 242,
        "startLoc": {
          "line": 61,
          "column": 10,
          "position": 525
        },
        "endLoc": {
          "line": 242,
          "column": 2,
          "position": 2099
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ",\n      requestId,\n      timestamp: new Date().toISOString()\n    });\n\n  } catch (error) {\n    const processingTime = Date.now() - startTime;\n    const errorMessage = error instanceof Error ? error.message : 'Unknown error';\n\n    structuredLogger.error('Get user info failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/auth.ts",
        "start": 400,
        "end": 409,
        "startLoc": {
          "line": 400,
          "column": 2,
          "position": 3330
        },
        "endLoc": {
          "line": 409,
          "column": 23,
          "position": 3415
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/auth.ts",
        "start": 85,
        "end": 94,
        "startLoc": {
          "line": 85,
          "column": 12,
          "position": 791
        },
        "endLoc": {
          "line": 94,
          "column": 15,
          "position": 876
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", authenticateToken, async (req: Request, res: Response): Promise<void> => {\n  const startTime = Date.now();\n  const requestId = req.headers['x-request-id'] as string || `req_${Date.now()}`;\n\n  try {\n    if (!req.user?.id || !req.user?.organizationId) {\n      res.status(400).json({\n        error: 'User context required',\n        message: 'User ID and organization ID are required',\n        requestId,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    // Get user permissions",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/auth.ts",
        "start": 426,
        "end": 441,
        "startLoc": {
          "line": 426,
          "column": 15,
          "position": 3516
        },
        "endLoc": {
          "line": 441,
          "column": 24,
          "position": 3680
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 61,
        "end": 310,
        "startLoc": {
          "line": 61,
          "column": 10,
          "position": 525
        },
        "endLoc": {
          "line": 310,
          "column": 20,
          "position": 2611
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "},\n      requestId,\n      timestamp: new Date().toISOString()\n    });\n\n  } catch (error) {\n    const processingTime = Date.now() - startTime;\n    const errorMessage = error instanceof Error ? error.message : 'Unknown error';\n\n    structuredLogger.error('Get permissions failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/auth.ts",
        "start": 457,
        "end": 466,
        "startLoc": {
          "line": 457,
          "column": 7,
          "position": 3824
        },
        "endLoc": {
          "line": 466,
          "column": 25,
          "position": 3910
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/auth.ts",
        "start": 400,
        "end": 94,
        "startLoc": {
          "line": 400,
          "column": 7,
          "position": 3329
        },
        "endLoc": {
          "line": 94,
          "column": 15,
          "position": 876
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ", authenticateToken, async (req: Request, res: Response): Promise<void> => {\n  const startTime = Date.now();\n  const requestId = req.headers['x-request-id'] as string || `req_${Date.now()}`;\n\n  try {\n    if (!req.user?.id) {\n      res.status(400).json({\n        error: 'User context required'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/auth.ts",
        "start": 487,
        "end": 494,
        "startLoc": {
          "line": 487,
          "column": 19,
          "position": 4018
        },
        "endLoc": {
          "line": 494,
          "column": 24,
          "position": 4130
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 61,
        "end": 244,
        "startLoc": {
          "line": 61,
          "column": 10,
          "position": 525
        },
        "endLoc": {
          "line": 244,
          "column": 19,
          "position": 2122
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ".safeParse(req.body);\n    if (!validation.success) {\n      res.status(400).json({\n        error: 'Validation error',\n        message: validation.error.errors.map(e => e.message).join(', '),\n        requestId,\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    const { currentPassword",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/auth.ts",
        "start": 503,
        "end": 514,
        "startLoc": {
          "line": 503,
          "column": 21,
          "position": 4182
        },
        "endLoc": {
          "line": 514,
          "column": 16,
          "position": 4285
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 134,
        "end": 78,
        "startLoc": {
          "line": 134,
          "column": 17,
          "position": 1140
        },
        "endLoc": {
          "line": 78,
          "column": 4,
          "position": 720
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ",\n      requestId,\n      timestamp: new Date().toISOString()\n    });\n\n  } catch (error) {\n    const processingTime = Date.now() - startTime;\n    const errorMessage = error instanceof Error ? error.message : 'Unknown error';\n\n    structuredLogger.error('Password change failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/auth.ts",
        "start": 533,
        "end": 542,
        "startLoc": {
          "line": 533,
          "column": 52,
          "position": 4391
        },
        "endLoc": {
          "line": 542,
          "column": 25,
          "position": 4476
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/auth.ts",
        "start": 85,
        "end": 94,
        "startLoc": {
          "line": 85,
          "column": 12,
          "position": 791
        },
        "endLoc": {
          "line": 94,
          "column": 15,
          "position": 876
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ", async (req: Request, res: Response): Promise<void> => {\n  const startTime = Date.now();\n  const requestId = req.headers['x-request-id'] as string || `req_${Date.now()}`;\n\n  try {\n    const processingTime",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/auth.ts",
        "start": 563,
        "end": 568,
        "startLoc": {
          "line": 563,
          "column": 13,
          "position": 4587
        },
        "endLoc": {
          "line": 568,
          "column": 15,
          "position": 4668
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/rate-limiting.ts",
        "start": 61,
        "end": 252,
        "startLoc": {
          "line": 61,
          "column": 18,
          "position": 528
        },
        "endLoc": {
          "line": 252,
          "column": 6,
          "position": 2062
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "},\n      requestId,\n      timestamp: new Date().toISOString()\n    });\n\n  } catch (error) {\n    const processingTime = Date.now() - startTime;\n    const errorMessage = error instanceof Error ? error.message : 'Unknown error';\n\n    structuredLogger.error('Auth health check failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/auth.ts",
        "start": 579,
        "end": 588,
        "startLoc": {
          "line": 579,
          "column": 7,
          "position": 4755
        },
        "endLoc": {
          "line": 588,
          "column": 27,
          "position": 4841
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/auth.ts",
        "start": 400,
        "end": 94,
        "startLoc": {
          "line": 400,
          "column": 7,
          "position": 3329
        },
        "endLoc": {
          "line": 94,
          "column": 15,
          "position": 876
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ").optional(),\n  limit: z.number().min(1).max(100).default(50),\n  offset: z.number().min(0).default(0)\n});\n\nconst getUndoOperationsSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/audit-trail-crm-undo.ts",
        "start": 42,
        "end": 47,
        "startLoc": {
          "line": 42,
          "column": 2,
          "position": 502
        },
        "endLoc": {
          "line": 47,
          "column": 24,
          "position": 562
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/dunning-solid.ts",
        "start": 65,
        "end": 70,
        "startLoc": {
          "line": 65,
          "column": 2,
          "position": 794
        },
        "endLoc": {
          "line": 70,
          "column": 21,
          "position": 854
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ").optional(),\n  userId: z.string().uuid().optional(),\n  startDate: z.string().datetime().optional(),\n  endDate: z.string().datetime().optional(),\n  limit: z.number().min(1).max(100).default(50),\n  offset: z.number().min(0).default(0)\n});\n\nconst updateConfigSchema = z.object({\n  enabled: z.boolean().optional(),\n  retentionDays",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/audit-trail-crm-undo.ts",
        "start": 48,
        "end": 58,
        "startLoc": {
          "line": 48,
          "column": 2,
          "position": 589
        },
        "endLoc": {
          "line": 58,
          "column": 14,
          "position": 732
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/audit-trail-crm-undo.ts",
        "start": 39,
        "end": 86,
        "startLoc": {
          "line": 39,
          "column": 2,
          "position": 445
        },
        "endLoc": {
          "line": 86,
          "column": 11,
          "position": 1109
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ", {\n      entryId: req.params.entryId,\n      error: error instanceof Error ? error.message : String(error),\n      requestId: req.headers['x-request-id'] as string || ''\n    });\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to undo change'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/audit-trail-crm-undo.ts",
        "start": 222,
        "end": 230,
        "startLoc": {
          "line": 222,
          "column": 24,
          "position": 2142
        },
        "endLoc": {
          "line": 230,
          "column": 24,
          "position": 2229
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/audit-trail-crm-undo.ts",
        "start": 176,
        "end": 184,
        "startLoc": {
          "line": 176,
          "column": 28,
          "position": 1773
        },
        "endLoc": {
          "line": 184,
          "column": 28,
          "position": 1860
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ", {\n      quarantineId: req.params.quarantineId,\n      error: error instanceof Error ? error.message : String(error),\n      requestId: req.headers['x-request-id'] as string || ''\n    });\n    \n    res.status(500).json({\n      success: false,\n      error: 'Failed to perform quarantine action'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/antivirus-global.ts",
        "start": 287,
        "end": 295,
        "startLoc": {
          "line": 287,
          "column": 38,
          "position": 2475
        },
        "endLoc": {
          "line": 295,
          "column": 38,
          "position": 2563
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/antivirus-global.ts",
        "start": 232,
        "end": 240,
        "startLoc": {
          "line": 232,
          "column": 32,
          "position": 2037
        },
        "endLoc": {
          "line": 240,
          "column": 32,
          "position": 2125
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ", error as Error, {\n      userId: req.user?.id\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Internal server error',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n/**\n * @route GET /v1/ai-training/datasets\n * @desc List all training datasets\n * @access Private\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-training.ts",
        "start": 105,
        "end": 129,
        "startLoc": {
          "line": 105,
          "column": 26,
          "position": 1008
        },
        "endLoc": {
          "line": 129,
          "column": 4,
          "position": 1155
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/azure-integration.ts",
        "start": 86,
        "end": 106,
        "startLoc": {
          "line": 86,
          "column": 25,
          "position": 851
        },
        "endLoc": {
          "line": 106,
          "column": 80,
          "position": 998
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ", error as Error, {\n      userId: req.user?.id\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Internal server error',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n/**\n * @route GET /v1/ai-training/jobs\n * @desc List all training jobs\n * @access Private\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-training.ts",
        "start": 274,
        "end": 298,
        "startLoc": {
          "line": 274,
          "column": 31,
          "position": 2189
        },
        "endLoc": {
          "line": 298,
          "column": 4,
          "position": 2336
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/azure-integration.ts",
        "start": 86,
        "end": 106,
        "startLoc": {
          "line": 86,
          "column": 25,
          "position": 851
        },
        "endLoc": {
          "line": 106,
          "column": 80,
          "position": 998
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ",\n        timestamp: new Date().toISOString()\n      }\n    });\n\n  } catch (error) {\n    structuredLogger.error('Health check failed', error as Error);\n\n    res.status(500).json({\n      success: false,\n      error: 'Health check failed',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n/**\n * @route GET /v1/ai-training/status\n * @desc Get service status and statistics\n * @access Private\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-training.ts",
        "start": 497,
        "end": 517,
        "startLoc": {
          "line": 497,
          "column": 23,
          "position": 3663
        },
        "endLoc": {
          "line": 517,
          "column": 4,
          "position": 3775
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/azure-integration.ts",
        "start": 234,
        "end": 254,
        "startLoc": {
          "line": 234,
          "column": 2,
          "position": 1923
        },
        "endLoc": {
          "line": 254,
          "column": 4,
          "position": 2035
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ",\n        timestamp: new Date().toISOString()\n      }\n    });\n\n  } catch (error) {\n    structuredLogger.error('Status check failed', error as Error);\n\n    res.status(500).json({\n      success: false,\n      error: 'Status check failed',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n// ============================================================================\n// CONFIGURATION ENDPOINTS\n// ============================================================================\n\n/**\n * @route POST /v1/ai-training/configure\n * @desc Configure training parameters\n * @access Private\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-training.ts",
        "start": 554,
        "end": 578,
        "startLoc": {
          "line": 554,
          "column": 2,
          "position": 3987
        },
        "endLoc": {
          "line": 578,
          "column": 4,
          "position": 4106
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/azure-integration.ts",
        "start": 265,
        "end": 289,
        "startLoc": {
          "line": 265,
          "column": 7,
          "position": 2146
        },
        "endLoc": {
          "line": 289,
          "column": 4,
          "position": 2265
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": ");\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Internal server error',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-training.ts",
        "start": 601,
        "end": 619,
        "startLoc": {
          "line": 601,
          "column": 6,
          "position": 4288
        },
        "endLoc": {
          "line": 619,
          "column": 7,
          "position": 4411
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/social-media-management.ts",
        "start": 174,
        "end": 106,
        "startLoc": {
          "line": 174,
          "column": 2,
          "position": 2009
        },
        "endLoc": {
          "line": 106,
          "column": 80,
          "position": 998
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "name: z.string().min(1).max(100),\n  description: z.string().min(1).max(500),\n  type: z.enum(['data_protection', 'access_control', 'content_filter', 'audit', 'compliance']),\n  rules: z.array(z.object({\n    field: z.string(),\n    operator: z.enum(['equals', 'contains', 'regex', 'range', 'exists']),\n    value: z.any(),\n    action: z.enum(['allow', 'deny', 'log', 'encrypt', 'anonymize'])\n  })),\n  severity: z.enum(['low', 'medium', 'high', 'critical']),\n  isActive: z.boolean().",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-security-compliance.ts",
        "start": 13,
        "end": 23,
        "startLoc": {
          "line": 13,
          "column": 3,
          "position": 119
        },
        "endLoc": {
          "line": 23,
          "column": 2,
          "position": 311
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/ai-security-compliance.service.ts",
        "start": 8,
        "end": 18,
        "startLoc": {
          "line": 8,
          "column": 3,
          "position": 70
        },
        "endLoc": {
          "line": 18,
          "column": 2,
          "position": 262
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "name: z.string().min(1).max(100),\n  description: z.string().min(1).max(500),\n  condition: z.object({\n    metric: z.string(),\n    operator: z.enum(['gt', 'lt', 'eq', 'gte', 'lte']),\n    threshold: z.number(),\n    duration: z.number().",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-performance-optimization.ts",
        "start": 21,
        "end": 27,
        "startLoc": {
          "line": 21,
          "column": 3,
          "position": 247
        },
        "endLoc": {
          "line": 27,
          "column": 2,
          "position": 355
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/ai-performance-optimization.service.ts",
        "start": 18,
        "end": 24,
        "startLoc": {
          "line": 18,
          "column": 3,
          "position": 210
        },
        "endLoc": {
          "line": 24,
          "column": 15,
          "position": 319
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "}),\n  action: z.object({\n    type: z.enum(['scale_up', 'scale_down', 'cache_clear', 'model_switch', 'retry', 'fallback']),\n    parameters: z.record(z.any()),\n    priority: z.enum(['low', 'medium', 'high', 'critical'])\n  }),\n  isActive: z.boolean().",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-performance-optimization.ts",
        "start": 28,
        "end": 34,
        "startLoc": {
          "line": 28,
          "column": 3,
          "position": 361
        },
        "endLoc": {
          "line": 34,
          "column": 2,
          "position": 456
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/ai-performance-optimization.service.ts",
        "start": 25,
        "end": 31,
        "startLoc": {
          "line": 25,
          "column": 3,
          "position": 322
        },
        "endLoc": {
          "line": 31,
          "column": 2,
          "position": 417
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "),\n  period: z.object({\n    start: z.string().datetime(),\n    end: z.string().datetime()\n  })\n});\n\n// Middleware de autenticación y rate limiting\nrouter.use(authenticateToken);\nrouter.use(rateLimiter);\n\n// ===== GESTIÓN DE MÉTRICAS DE PERFORMANCE =====",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-performance-optimization.ts",
        "start": 48,
        "end": 59,
        "startLoc": {
          "line": 48,
          "column": 2,
          "position": 623
        },
        "endLoc": {
          "line": 59,
          "column": 50,
          "position": 693
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/ai-security-compliance.ts",
        "start": 58,
        "end": 69,
        "startLoc": {
          "line": 58,
          "column": 3,
          "position": 775
        },
        "endLoc": {
          "line": 69,
          "column": 49,
          "position": 845
        }
      }
    },
    {
      "format": "typescript",
      "lines": 27,
      "fragment": ".getHealthStatus();\n    \n    const statusCode = health.status === 'healthy' ? 200 : \n                      health.status === 'degraded' ? 200 : 503;\n    \n    res.status(statusCode).json({\n      success: true,\n      data: health,\n      message: `Service is ${health.status}`\n    });\n  } catch (error: any) {\n    logger.error('Health check failed', { \n      error: error.message, \n      userId: req.user?.id \n    });\n    \n    res.status(503).json({\n      success: false,\n      error: 'Health check failed',\n      message: error.message\n    });\n  }\n});\n\n// ===== ESTADÍSTICAS =====\n\n// GET /v1/ai-performance-optimization/stats - Estadísticas del servicio",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-performance-optimization.ts",
        "start": 527,
        "end": 553,
        "startLoc": {
          "line": 527,
          "column": 33,
          "position": 4199
        },
        "endLoc": {
          "line": 553,
          "column": 73,
          "position": 4396
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/ai-security-compliance.ts",
        "start": 422,
        "end": 448,
        "startLoc": {
          "line": 422,
          "column": 28,
          "position": 3446
        },
        "endLoc": {
          "line": 448,
          "column": 68,
          "position": 3643
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": ", { \n      userId: req.user?.id \n    });\n    \n    res.json({\n      success: true,\n      data: stats,\n      message: 'Statistics retrieved successfully'\n    });\n  } catch (error: any) {\n    logger.error('Failed to get statistics', { \n      error: error.message, \n      userId: req.user?.id \n    });\n    \n    res.status(500).json({\n      success: false,\n      error: 'Failed to retrieve statistics',\n      message: error.message\n    });\n  }\n});\n\nexport { router as aiPerformanceOptimizationRoutes",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-performance-optimization.ts",
        "start": 601,
        "end": 624,
        "startLoc": {
          "line": 601,
          "column": 43,
          "position": 4702
        },
        "endLoc": {
          "line": 624,
          "column": 32,
          "position": 4867
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/ai-security-compliance.ts",
        "start": 487,
        "end": 510,
        "startLoc": {
          "line": 487,
          "column": 38,
          "position": 3891
        },
        "endLoc": {
          "line": 510,
          "column": 27,
          "position": 4056
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ", error as Error, {\n      userId: req.user?.id\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Internal server error',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n/**\n * @route GET /v1/ai-model-management/models\n * @desc List all AI models\n * @access Private\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-model-management.ts",
        "start": 168,
        "end": 192,
        "startLoc": {
          "line": 168,
          "column": 27,
          "position": 1824
        },
        "endLoc": {
          "line": 192,
          "column": 4,
          "position": 1971
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/azure-integration.ts",
        "start": 86,
        "end": 106,
        "startLoc": {
          "line": 86,
          "column": 25,
          "position": 851
        },
        "endLoc": {
          "line": 106,
          "column": 80,
          "position": 998
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ", error as Error);\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Internal server error',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n// ============================================================================\n// DEPLOYMENT ENDPOINTS",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-model-management.ts",
        "start": 328,
        "end": 347,
        "startLoc": {
          "line": 328,
          "column": 37,
          "position": 2989
        },
        "endLoc": {
          "line": 347,
          "column": 24,
          "position": 3121
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/ai-training.ts",
        "start": 601,
        "end": 107,
        "startLoc": {
          "line": 601,
          "column": 32,
          "position": 4281
        },
        "endLoc": {
          "line": 107,
          "column": 30,
          "position": 1000
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ", error as Error, {\n      userId: req.user?.id\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Internal server error',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n/**\n * @route GET /v1/ai-model-management/deployments\n * @desc List all model deployments\n * @access Private\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-model-management.ts",
        "start": 378,
        "end": 402,
        "startLoc": {
          "line": 378,
          "column": 26,
          "position": 3336
        },
        "endLoc": {
          "line": 402,
          "column": 4,
          "position": 3483
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/azure-integration.ts",
        "start": 86,
        "end": 106,
        "startLoc": {
          "line": 86,
          "column": 25,
          "position": 851
        },
        "endLoc": {
          "line": 106,
          "column": 80,
          "position": 998
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ", error as Error, {\n      userId: req.user?.id\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Internal server error',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n/**\n * @route POST /v1/ai-model-management/ab-tests/:id/start\n * @desc Start an A/B test\n * @access Private\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-model-management.ts",
        "start": 504,
        "end": 528,
        "startLoc": {
          "line": 504,
          "column": 27,
          "position": 4210
        },
        "endLoc": {
          "line": 528,
          "column": 4,
          "position": 4357
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/azure-integration.ts",
        "start": 86,
        "end": 106,
        "startLoc": {
          "line": 86,
          "column": 25,
          "position": 851
        },
        "endLoc": {
          "line": 106,
          "column": 80,
          "position": 998
        }
      }
    },
    {
      "format": "typescript",
      "lines": 29,
      "fragment": ", error as Error, {\n      userId: req.user?.id\n    });\n\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    res.status(500).json({\n      success: false,\n      error: 'Internal server error',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n// ============================================================================\n// HEALTH AND STATUS ENDPOINTS\n// ============================================================================\n\n/**\n * @route GET /v1/ai-model-management/health\n * @desc Check health status of AI Model Management\n * @access Private\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-model-management.ts",
        "start": 601,
        "end": 629,
        "startLoc": {
          "line": 601,
          "column": 24,
          "position": 4861
        },
        "endLoc": {
          "line": 629,
          "column": 4,
          "position": 5015
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/azure-integration.ts",
        "start": 86,
        "end": 215,
        "startLoc": {
          "line": 86,
          "column": 25,
          "position": 851
        },
        "endLoc": {
          "line": 215,
          "column": 4,
          "position": 1724
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ",\n        timestamp: new Date().toISOString()\n      }\n    });\n\n  } catch (error) {\n    structuredLogger.error('Health check failed', error as Error);\n\n    res.status(500).json({\n      success: false,\n      error: 'Health check failed',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n/**\n * @route GET /v1/ai-model-management/status\n * @desc Get service status and statistics\n * @access Private\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-model-management.ts",
        "start": 638,
        "end": 658,
        "startLoc": {
          "line": 638,
          "column": 22,
          "position": 5092
        },
        "endLoc": {
          "line": 658,
          "column": 4,
          "position": 5204
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/azure-integration.ts",
        "start": 234,
        "end": 254,
        "startLoc": {
          "line": 234,
          "column": 2,
          "position": 1923
        },
        "endLoc": {
          "line": 254,
          "column": 4,
          "position": 2035
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "],\n        timestamp: new Date().toISOString()\n      }\n    });\n\n  } catch (error) {\n    structuredLogger.error('Status check failed', error as Error);\n\n    res.status(500).json({\n      success: false,\n      error: 'Status check failed',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-model-management.ts",
        "start": 692,
        "end": 708,
        "startLoc": {
          "line": 692,
          "column": 9,
          "position": 5403
        },
        "endLoc": {
          "line": 708,
          "column": 7,
          "position": 5516
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/ai-training.ts",
        "start": 554,
        "end": 281,
        "startLoc": {
          "line": 554,
          "column": 9,
          "position": 3986
        },
        "endLoc": {
          "line": 281,
          "column": 80,
          "position": 2258
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ";\n\n// Schemas de validación\nconst DashboardMetricsSchema = z.object({\n  department: z.enum(['ceo', 'ia', 'cso', 'cto', 'ciso', 'coo', 'chro', 'cgo', 'cfo', 'cdo']),\n  timeframe: z.enum(['1h', '24h', '7d', '30d']).default('24h'),\n  includePredictions: z.boolean().default(true),\n  includeOptimizations: z.boolean().default(true),\n  includeSecurity: z.boolean().default(true),\n});\n\nconst RealTimeMetricsSchema = z.object({\n  department: z.enum(['ceo', 'ia', 'cso', 'cto', 'ciso', 'coo', 'chro', 'cgo', 'cfo', 'cdo']),\n  agentId: z.string().optional(),\n});\n\nconst AgentStatusSchema = z.object({\n  agentId: z.string(),\n  department: z.enum(['ceo', 'ia', 'cso', 'cto', 'ciso', 'coo', 'chro', 'cgo', 'cfo', 'cdo']),\n  status: z.enum(['active', 'paused', 'error', 'maintenance']),\n  lastActivity: z.string",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-dashboard-consolidation.ts",
        "start": 12,
        "end": 32,
        "startLoc": {
          "line": 12,
          "column": 2,
          "position": 107
        },
        "endLoc": {
          "line": 32,
          "column": 7,
          "position": 412
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/ai-dashboard-consolidation.service.ts",
        "start": 13,
        "end": 33,
        "startLoc": {
          "line": 13,
          "column": 16,
          "position": 101
        },
        "endLoc": {
          "line": 33,
          "column": 5,
          "position": 406
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "router.get('/agents/:department', async (req, res) => {\n  try {\n    const department = req.params.department as any;\n    \n    if (!['ceo', 'ia', 'cso', 'cto', 'ciso', 'coo', 'chro', 'cgo', 'cfo', 'cdo'].includes(department)) {\n      return res.status(400).json({\n        success: false,\n        error: 'Invalid department',\n      });\n    }\n\n    logger.info('Getting agents for department'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-dashboard-consolidation.ts",
        "start": 151,
        "end": 162,
        "startLoc": {
          "line": 151,
          "column": 1,
          "position": 1344
        },
        "endLoc": {
          "line": 162,
          "column": 32,
          "position": 1475
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/cockpit-integration.ts",
        "start": 272,
        "end": 283,
        "startLoc": {
          "line": 272,
          "column": 1,
          "position": 2464
        },
        "endLoc": {
          "line": 283,
          "column": 28,
          "position": 2595
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", { error, department: req.params.department });\n    res.status(500).json({\n      success: false,\n      error: 'Internal server error',\n      details: error instanceof Error ? error.message : 'Unknown error',\n    });\n  }\n});\n\n/**\n * GET /v1/ai-dashboard-consolidation/kpis/:department\n * Obtiene KPIs específicos de un departamento\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-dashboard-consolidation.ts",
        "start": 182,
        "end": 194,
        "startLoc": {
          "line": 182,
          "column": 23,
          "position": 1638
        },
        "endLoc": {
          "line": 194,
          "column": 4,
          "position": 1718
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/cockpit-integration.ts",
        "start": 106,
        "end": 118,
        "startLoc": {
          "line": 106,
          "column": 32,
          "position": 1041
        },
        "endLoc": {
          "line": 118,
          "column": 4,
          "position": 1121
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", async (req, res) => {\n  try {\n    const department = req.params.department as any;\n    \n    if (!['ceo', 'ia', 'cso', 'cto', 'ciso', 'coo', 'chro', 'cgo', 'cfo', 'cdo'].includes(department)) {\n      return res.status(400).json({\n        success: false,\n        error: 'Invalid department',\n      });\n    }\n\n    const timeframe",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-dashboard-consolidation.ts",
        "start": 195,
        "end": 206,
        "startLoc": {
          "line": 195,
          "column": 20,
          "position": 1725
        },
        "endLoc": {
          "line": 206,
          "column": 10,
          "position": 1849
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/cockpit-integration.ts",
        "start": 74,
        "end": 85,
        "startLoc": {
          "line": 74,
          "column": 23,
          "position": 736
        },
        "endLoc": {
          "line": 85,
          "column": 15,
          "position": 860
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", { error, department: req.params.department });\n    res.status(500).json({\n      success: false,\n      error: 'Internal server error',\n      details: error instanceof Error ? error.message : 'Unknown error',\n    });\n  }\n});\n\n/**\n * GET /v1/ai-dashboard-consolidation/timeline/:department\n * Obtiene timeline de eventos de un departamento\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-dashboard-consolidation.ts",
        "start": 233,
        "end": 245,
        "startLoc": {
          "line": 233,
          "column": 21,
          "position": 2051
        },
        "endLoc": {
          "line": 245,
          "column": 4,
          "position": 2131
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/cockpit-integration.ts",
        "start": 106,
        "end": 118,
        "startLoc": {
          "line": 106,
          "column": 32,
          "position": 1041
        },
        "endLoc": {
          "line": 118,
          "column": 4,
          "position": 1121
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", async (req, res) => {\n  try {\n    const department = req.params.department as any;\n    \n    if (!['ceo', 'ia', 'cso', 'cto', 'ciso', 'coo', 'chro', 'cgo', 'cfo', 'cdo'].includes(department)) {\n      return res.status(400).json({\n        success: false,\n        error: 'Invalid department',\n      });\n    }\n\n    const timeframe = (req.query.timeframe as string) || '24h';\n\n    logger.info('Getting timeline for department'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-dashboard-consolidation.ts",
        "start": 246,
        "end": 259,
        "startLoc": {
          "line": 246,
          "column": 24,
          "position": 2138
        },
        "endLoc": {
          "line": 259,
          "column": 34,
          "position": 2289
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/cockpit-integration.ts",
        "start": 74,
        "end": 208,
        "startLoc": {
          "line": 74,
          "column": 23,
          "position": 736
        },
        "endLoc": {
          "line": 208,
          "column": 30,
          "position": 1876
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ", {\n      department,\n      timeframe,\n      userId: req.user?.id,\n    });\n\n    const metrics = await aiDashboardConsolidationService.getDashboardMetrics({\n      department,\n      timeframe: timeframe as any,\n      includePredictions: false,\n      includeOptimizations: false,\n      includeSecurity: false,\n    });\n\n    res.json({\n      success: true,\n      data: {\n        department,\n        timeframe,\n        timeline",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-dashboard-consolidation.ts",
        "start": 259,
        "end": 278,
        "startLoc": {
          "line": 259,
          "column": 34,
          "position": 2290
        },
        "endLoc": {
          "line": 278,
          "column": 9,
          "position": 2406
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/ai-dashboard-consolidation.ts",
        "start": 208,
        "end": 227,
        "startLoc": {
          "line": 208,
          "column": 30,
          "position": 1877
        },
        "endLoc": {
          "line": 227,
          "column": 5,
          "position": 1993
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", { error, department: req.params.department });\n    res.status(500).json({\n      success: false,\n      error: 'Internal server error',\n      details: error instanceof Error ? error.message : 'Unknown error',\n    });\n  }\n});\n\n/**\n * GET /v1/ai-dashboard-consolidation/health\n * Health check del servicio\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-dashboard-consolidation.ts",
        "start": 284,
        "end": 296,
        "startLoc": {
          "line": 284,
          "column": 25,
          "position": 2466
        },
        "endLoc": {
          "line": 296,
          "column": 4,
          "position": 2546
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/cockpit-integration.ts",
        "start": 106,
        "end": 118,
        "startLoc": {
          "line": 106,
          "column": 32,
          "position": 1041
        },
        "endLoc": {
          "line": 118,
          "column": 4,
          "position": 1121
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ",\n    };\n\n    logger.info('Health check requested', { userId: req.user?.id });\n\n    res.json({\n      success: true,\n      data: health,\n    });\n  } catch (error) {\n    logger.error('Error in health check', { error });\n    res.status(500).json({\n      success: false,\n      error: 'Health check failed',\n      details: error instanceof Error ? error.message : 'Unknown error',\n    });\n  }\n});\n\nexport { router as aiDashboardConsolidationRoutes",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-dashboard-consolidation.ts",
        "start": 305,
        "end": 324,
        "startLoc": {
          "line": 305,
          "column": 2,
          "position": 2638
        },
        "endLoc": {
          "line": 324,
          "column": 31,
          "position": 2791
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/cockpit-integration.ts",
        "start": 334,
        "end": 353,
        "startLoc": {
          "line": 334,
          "column": 2,
          "position": 2983
        },
        "endLoc": {
          "line": 353,
          "column": 25,
          "position": 3136
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "name: z.string().min(1).max(100),\n  description: z.string().min(1).max(500),\n  type: z.enum(['time_series', 'regression', 'neural_network', 'ensemble']),\n  algorithm: z.enum(['arima', 'lstm', 'linear_regression', 'random_forest', 'xgboost', 'prophet']),\n  features: z.array(z.string()),\n  hyperparameters: z.record(z.any()),\n  isActive",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-cost-prediction.ts",
        "start": 13,
        "end": 19,
        "startLoc": {
          "line": 13,
          "column": 3,
          "position": 119
        },
        "endLoc": {
          "line": 19,
          "column": 9,
          "position": 245
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/ai-cost-prediction.service.ts",
        "start": 8,
        "end": 14,
        "startLoc": {
          "line": 8,
          "column": 3,
          "position": 70
        },
        "endLoc": {
          "line": 14,
          "column": 9,
          "position": 196
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", async (req, res) => {\n  try {\n    const { organizationId, limit = 10 } = req.query;\n    \n    if (!organizationId) {\n      return res.status(400).json({\n        success: false,\n        error: 'Organization ID is required'\n      });\n    }\n    \n    // Implementar obtención de pronósticos",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-cost-prediction.ts",
        "start": 299,
        "end": 310,
        "startLoc": {
          "line": 299,
          "column": 13,
          "position": 2507
        },
        "endLoc": {
          "line": 310,
          "column": 40,
          "position": 2600
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/ai-cost-prediction.ts",
        "start": 221,
        "end": 232,
        "startLoc": {
          "line": 221,
          "column": 15,
          "position": 1929
        },
        "endLoc": {
          "line": 232,
          "column": 41,
          "position": 2022
        }
      }
    },
    {
      "format": "typescript",
      "lines": 27,
      "fragment": ".getHealthStatus();\n    \n    const statusCode = health.status === 'healthy' ? 200 : \n                      health.status === 'degraded' ? 200 : 503;\n    \n    res.status(statusCode).json({\n      success: true,\n      data: health,\n      message: `Service is ${health.status}`\n    });\n  } catch (error: any) {\n    logger.error('Health check failed', { \n      error: error.message, \n      userId: req.user?.id \n    });\n    \n    res.status(503).json({\n      success: false,\n      error: 'Health check failed',\n      message: error.message\n    });\n  }\n});\n\n// ===== ESTADÍSTICAS =====\n\n// GET /v1/ai-cost-prediction/stats - Estadísticas del servicio",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-cost-prediction.ts",
        "start": 667,
        "end": 693,
        "startLoc": {
          "line": 667,
          "column": 24,
          "position": 5031
        },
        "endLoc": {
          "line": 693,
          "column": 64,
          "position": 5228
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/ai-security-compliance.ts",
        "start": 422,
        "end": 448,
        "startLoc": {
          "line": 422,
          "column": 28,
          "position": 3446
        },
        "endLoc": {
          "line": 448,
          "column": 68,
          "position": 3643
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": ", { \n      userId: req.user?.id \n    });\n    \n    res.json({\n      success: true,\n      data: stats,\n      message: 'Statistics retrieved successfully'\n    });\n  } catch (error: any) {\n    logger.error('Failed to get statistics', { \n      error: error.message, \n      userId: req.user?.id \n    });\n    \n    res.status(500).json({\n      success: false,\n      error: 'Failed to retrieve statistics',\n      message: error.message\n    });\n  }\n});\n\nexport { router as aiCostPredictionRoutes",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-cost-prediction.ts",
        "start": 745,
        "end": 768,
        "startLoc": {
          "line": 745,
          "column": 34,
          "position": 5557
        },
        "endLoc": {
          "line": 768,
          "column": 23,
          "position": 5722
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/ai-security-compliance.ts",
        "start": 487,
        "end": 510,
        "startLoc": {
          "line": 487,
          "column": 38,
          "position": 3891
        },
        "endLoc": {
          "line": 510,
          "column": 27,
          "position": 4056
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "),\n    operator: z.enum(['gt', 'lt', 'eq', 'gte', 'lte']),\n    threshold: z.number(),\n    duration: z.number().positive()\n  }),\n  action: z.object({\n    type: z.enum(['switch_to_cheaper_model'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-cost-optimization.ts",
        "start": 17,
        "end": 23,
        "startLoc": {
          "line": 17,
          "column": 2,
          "position": 222
        },
        "endLoc": {
          "line": 23,
          "column": 26,
          "position": 300
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/ai-performance-optimization.ts",
        "start": 24,
        "end": 30,
        "startLoc": {
          "line": 24,
          "column": 2,
          "position": 306
        },
        "endLoc": {
          "line": 30,
          "column": 11,
          "position": 384
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "]),\n    parameters: z.record(z.any()),\n    priority: z.enum(['low', 'medium', 'high', 'critical'])\n  }),\n  isActive: z.boolean().default(true)\n});\n\nconst UpdateOptimizationRuleSchema = CreateOptimizationRuleSchema.partial();\n\nconst OptimizeCostsSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-cost-optimization.ts",
        "start": 23,
        "end": 32,
        "startLoc": {
          "line": 23,
          "column": 13,
          "position": 316
        },
        "endLoc": {
          "line": 32,
          "column": 20,
          "position": 399
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/ai-performance-optimization.ts",
        "start": 30,
        "end": 39,
        "startLoc": {
          "line": 30,
          "column": 11,
          "position": 400
        },
        "endLoc": {
          "line": 39,
          "column": 26,
          "position": 483
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ": z.enum(['daily', 'weekly', 'monthly', 'custom']),\n  period: z.object({\n    start: z.string().datetime(),\n    end: z.string().datetime()\n  })\n});\n\n// Middleware de autenticación y rate limiting\nrouter.use(authenticateToken);\nrouter.use(rateLimiter);\n\n// ===== GESTIÓN DE REGLAS DE OPTIMIZACIÓN =====",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-cost-optimization.ts",
        "start": 50,
        "end": 61,
        "startLoc": {
          "line": 50,
          "column": 13,
          "position": 607
        },
        "endLoc": {
          "line": 61,
          "column": 49,
          "position": 695
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/ai-performance-optimization.ts",
        "start": 48,
        "end": 69,
        "startLoc": {
          "line": 48,
          "column": 11,
          "position": 605
        },
        "endLoc": {
          "line": 69,
          "column": 49,
          "position": 845
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", { \n      userId: req.user?.id, \n      count: rules.length \n    });\n    \n    res.json({\n      success: true,\n      data: rules,\n      count: rules.length\n    });\n  } catch (error: any) {\n    logger.error('Failed to get cost optimization rules'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-cost-optimization.ts",
        "start": 68,
        "end": 79,
        "startLoc": {
          "line": 68,
          "column": 36,
          "position": 749
        },
        "endLoc": {
          "line": 79,
          "column": 40,
          "position": 836
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/ai-performance-optimization.ts",
        "start": 138,
        "end": 149,
        "startLoc": {
          "line": 138,
          "column": 31,
          "position": 1292
        },
        "endLoc": {
          "line": 149,
          "column": 35,
          "position": 1379
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "router.get('/recommendations', async (req, res) => {\n  try {\n    const { organizationId } = req.query;\n    \n    if (!organizationId) {\n      return res.status(400).json({\n        success: false,\n        error: 'Organization ID is required'\n      });\n    }\n    \n    // Generar análisis para obtener recomendaciones",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-cost-optimization.ts",
        "start": 428,
        "end": 439,
        "startLoc": {
          "line": 428,
          "column": 1,
          "position": 3514
        },
        "endLoc": {
          "line": 439,
          "column": 49,
          "position": 3605
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/ai-cost-prediction.ts",
        "start": 568,
        "end": 579,
        "startLoc": {
          "line": 568,
          "column": 1,
          "position": 4373
        },
        "endLoc": {
          "line": 579,
          "column": 45,
          "position": 4464
        }
      }
    },
    {
      "format": "typescript",
      "lines": 27,
      "fragment": ".getHealthStatus();\n    \n    const statusCode = health.status === 'healthy' ? 200 : \n                      health.status === 'degraded' ? 200 : 503;\n    \n    res.status(statusCode).json({\n      success: true,\n      data: health,\n      message: `Service is ${health.status}`\n    });\n  } catch (error: any) {\n    logger.error('Health check failed', { \n      error: error.message, \n      userId: req.user?.id \n    });\n    \n    res.status(503).json({\n      success: false,\n      error: 'Health check failed',\n      message: error.message\n    });\n  }\n});\n\n// ===== ESTADÍSTICAS =====\n\n// GET /v1/ai-cost-optimization/stats - Estadísticas del servicio",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-cost-optimization.ts",
        "start": 573,
        "end": 599,
        "startLoc": {
          "line": 573,
          "column": 26,
          "position": 4704
        },
        "endLoc": {
          "line": 599,
          "column": 66,
          "position": 4901
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/ai-security-compliance.ts",
        "start": 422,
        "end": 448,
        "startLoc": {
          "line": 422,
          "column": 28,
          "position": 3446
        },
        "endLoc": {
          "line": 448,
          "column": 68,
          "position": 3643
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": ", { \n      userId: req.user?.id \n    });\n    \n    res.json({\n      success: true,\n      data: stats,\n      message: 'Statistics retrieved successfully'\n    });\n  } catch (error: any) {\n    logger.error('Failed to get statistics', { \n      error: error.message, \n      userId: req.user?.id \n    });\n    \n    res.status(500).json({\n      success: false,\n      error: 'Failed to retrieve statistics',\n      message: error.message\n    });\n  }\n});\n\nexport { router as aiCostOptimizationRoutes",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-cost-optimization.ts",
        "start": 650,
        "end": 673,
        "startLoc": {
          "line": 650,
          "column": 36,
          "position": 5223
        },
        "endLoc": {
          "line": 673,
          "column": 25,
          "position": 5388
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/ai-security-compliance.ts",
        "start": 487,
        "end": 510,
        "startLoc": {
          "line": 487,
          "column": 38,
          "position": 3891
        },
        "endLoc": {
          "line": 510,
          "column": 27,
          "position": 4056
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "),\n  context: z.object({\n    domain: z.string().optional(),\n    intent: z.string().optional(),\n    entities: z.record(z.any()).optional(),\n    preferences: z.record(z.any()).optional(),\n    sessionData: z.record(z.any()).optional()\n  }).optional()\n});\n\nconst GetConversationsSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-chat-advanced.ts",
        "start": 32,
        "end": 42,
        "startLoc": {
          "line": 32,
          "column": 2,
          "position": 366
        },
        "endLoc": {
          "line": 42,
          "column": 23,
          "position": 483
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/ai-chat-advanced.ts",
        "start": 18,
        "end": 28,
        "startLoc": {
          "line": 18,
          "column": 2,
          "position": 168
        },
        "endLoc": {
          "line": 28,
          "column": 25,
          "position": 285
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "context: z.object({\n    currentTopic: z.string().optional(),\n    userPreferences: z.record(z.any()).optional(),\n    conversationHistory: z.array(z.any()).optional(),\n    activeEntities: z.record(z.any()).optional(),\n    sessionVariables: z.record(z.any()).optional()\n  }).optional(),",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-chat-advanced.ts",
        "start": 100,
        "end": 106,
        "startLoc": {
          "line": 100,
          "column": 3,
          "position": 1291
        },
        "endLoc": {
          "line": 106,
          "column": 2,
          "position": 1401
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/ai-chat-advanced.ts",
        "start": 90,
        "end": 97,
        "startLoc": {
          "line": 90,
          "column": 3,
          "position": 1162
        },
        "endLoc": {
          "line": 97,
          "column": 2,
          "position": 1273
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ");\n    \n    if (!conversation) {\n      return res.status(404).json({\n        success: false,\n        error: 'Conversation not found'\n      });\n    }\n    \n    res.json({\n      success: true,\n      data: conversation,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Error updating conversation'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-chat-advanced.ts",
        "start": 206,
        "end": 221,
        "startLoc": {
          "line": 206,
          "column": 8,
          "position": 2317
        },
        "endLoc": {
          "line": 221,
          "column": 30,
          "position": 2425
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/ai-chat-advanced.ts",
        "start": 176,
        "end": 191,
        "startLoc": {
          "line": 176,
          "column": 3,
          "position": 2046
        },
        "endLoc": {
          "line": 191,
          "column": 29,
          "position": 2154
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "id);\n    \n    if (!message) {\n      return res.status(404).json({\n        success: false,\n        error: 'Message not found'\n      });\n    }\n    \n    res.json({\n      success: true,\n      data: message,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Error getting message'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-chat-advanced.ts",
        "start": 320,
        "end": 335,
        "startLoc": {
          "line": 320,
          "column": 2,
          "position": 3295
        },
        "endLoc": {
          "line": 335,
          "column": 24,
          "position": 3404
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/dlg-grooming.ts",
        "start": 154,
        "end": 169,
        "startLoc": {
          "line": 154,
          "column": 2,
          "position": 2153
        },
        "endLoc": {
          "line": 169,
          "column": 28,
          "position": 2262
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ");\n    \n    if (!session) {\n      return res.status(404).json({\n        success: false,\n        error: 'Session not found'\n      });\n    }\n    \n    res.json({\n      success: true,\n      data: session,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Error updating session'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-chat-advanced.ts",
        "start": 458,
        "end": 473,
        "startLoc": {
          "line": 458,
          "column": 8,
          "position": 4455
        },
        "endLoc": {
          "line": 473,
          "column": 25,
          "position": 4563
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/ai-chat-advanced.ts",
        "start": 428,
        "end": 443,
        "startLoc": {
          "line": 428,
          "column": 3,
          "position": 4184
        },
        "endLoc": {
          "line": 443,
          "column": 24,
          "position": 4292
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      organizationId: req.params.organizationId,\n      requestId: req.headers['x-request-id'] as string || ''\n    });\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to get budget insights'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-budget-ux.ts",
        "start": 103,
        "end": 111,
        "startLoc": {
          "line": 103,
          "column": 32,
          "position": 990
        },
        "endLoc": {
          "line": 111,
          "column": 32,
          "position": 1074
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/ai-budget-ux.ts",
        "start": 66,
        "end": 74,
        "startLoc": {
          "line": 66,
          "column": 32,
          "position": 722
        },
        "endLoc": {
          "line": 74,
          "column": 32,
          "position": 806
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      organizationId: req.params.organizationId,\n      requestId: req.headers['x-request-id'] as string || ''\n    });\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to get budget config'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-budget-ux.ts",
        "start": 140,
        "end": 148,
        "startLoc": {
          "line": 140,
          "column": 30,
          "position": 1258
        },
        "endLoc": {
          "line": 148,
          "column": 30,
          "position": 1342
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/ai-budget-ux.ts",
        "start": 66,
        "end": 74,
        "startLoc": {
          "line": 66,
          "column": 32,
          "position": 722
        },
        "endLoc": {
          "line": 74,
          "column": 32,
          "position": 806
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      body: req.body,\n      requestId: req.headers['x-request-id'] as string || ''\n    });\n\n    res.status(400).json({\n      success: false,\n      error: 'Failed to set budget config'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-budget-ux.ts",
        "start": 174,
        "end": 182,
        "startLoc": {
          "line": 174,
          "column": 30,
          "position": 1527
        },
        "endLoc": {
          "line": 182,
          "column": 30,
          "position": 1609
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/csp-sri-banking.ts",
        "start": 110,
        "end": 118,
        "startLoc": {
          "line": 110,
          "column": 35,
          "position": 1130
        },
        "endLoc": {
          "line": 118,
          "column": 27,
          "position": 1212
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      organizationId: req.params.organizationId,\n      requestId: req.headers['x-request-id'] as string || ''\n    });\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to get active alerts'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-budget-ux.ts",
        "start": 275,
        "end": 283,
        "startLoc": {
          "line": 275,
          "column": 30,
          "position": 2309
        },
        "endLoc": {
          "line": 283,
          "column": 30,
          "position": 2393
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/ai-budget-ux.ts",
        "start": 66,
        "end": 74,
        "startLoc": {
          "line": 66,
          "column": 32,
          "position": 722
        },
        "endLoc": {
          "line": 74,
          "column": 32,
          "position": 806
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      organizationId: req.params.organizationId,\n      requestId: req.headers['x-request-id'] as string || ''\n    });\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to activate read-only mode'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-budget-ux.ts",
        "start": 354,
        "end": 362,
        "startLoc": {
          "line": 354,
          "column": 36,
          "position": 2915
        },
        "endLoc": {
          "line": 362,
          "column": 36,
          "position": 2999
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/ai-budget-ux.ts",
        "start": 66,
        "end": 74,
        "startLoc": {
          "line": 66,
          "column": 32,
          "position": 722
        },
        "endLoc": {
          "line": 74,
          "column": 32,
          "position": 806
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ", async (req: Request, res: Response) => {\n  try {\n    const { organizationId } = req.params;\n    const { reason } = req.body;\n\n    if (!reason || typeof reason !== 'string') {\n      res.status(400).json({\n        success: false,\n        error: 'Reason is required',\n        code: 'REASON_REQUIRED'\n      });\n      return;\n    }\n\n    await aiBudgetUXService.deactivateReadOnlyMode",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-budget-ux.ts",
        "start": 372,
        "end": 386,
        "startLoc": {
          "line": 372,
          "column": 40,
          "position": 3028
        },
        "endLoc": {
          "line": 386,
          "column": 23,
          "position": 3157
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/ai-budget-ux.ts",
        "start": 333,
        "end": 347,
        "startLoc": {
          "line": 333,
          "column": 38,
          "position": 2734
        },
        "endLoc": {
          "line": 347,
          "column": 21,
          "position": 2863
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      organizationId: req.params.organizationId,\n      requestId: req.headers['x-request-id'] as string || ''\n    });\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to deactivate read-only mode'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-budget-ux.ts",
        "start": 393,
        "end": 401,
        "startLoc": {
          "line": 393,
          "column": 38,
          "position": 3209
        },
        "endLoc": {
          "line": 401,
          "column": 38,
          "position": 3293
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/ai-budget-ux.ts",
        "start": 66,
        "end": 74,
        "startLoc": {
          "line": 66,
          "column": 32,
          "position": 722
        },
        "endLoc": {
          "line": 74,
          "column": 32,
          "position": 806
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ", {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      organizationId: req.params.organizationId,\n      requestId: req.headers['x-request-id'] as string || ''\n    });\n\n    res.status(500).json({\n      success: false,\n      error: 'Failed to get budget dashboard'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-budget-ux.ts",
        "start": 472,
        "end": 480,
        "startLoc": {
          "line": 472,
          "column": 33,
          "position": 3811
        },
        "endLoc": {
          "line": 480,
          "column": 33,
          "position": 3895
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/ai-budget-ux.ts",
        "start": 66,
        "end": 74,
        "startLoc": {
          "line": 66,
          "column": 32,
          "position": 722
        },
        "endLoc": {
          "line": 74,
          "column": 32,
          "position": 806
        }
      }
    },
    {
      "format": "typescript",
      "lines": 74,
      "fragment": ",\n    });\n  } catch (error) {\n    console.error('Error getting insights:', error);\n    res.status(500).json({\n      success: false,\n      error: 'Failed to get insights',\n      message: error instanceof Error ? error.message : 'Unknown error',\n    });\n  }\n});\n\n/**\n * @swagger\n * /v1/ai-analytics/trends:\n *   get:\n *     summary: Get AI trends\n *     description: Get trend data for an organization\n *     tags: [AI Analytics]\n *     security:\n *       - bearerAuth: []\n *     parameters:\n *       - in: query\n *         name: organizationId\n *         required: true\n *         schema:\n *           type: string\n *           format: uuid\n *         description: Organization ID\n *       - in: query\n *         name: trendType\n *         schema:\n *           type: string\n *         description: Filter by trend type\n *       - in: query\n *         name: period\n *         schema:\n *           type: string\n *           enum: [daily, weekly, monthly]\n *         description: Filter by trend period\n *     responses:\n *       200:\n *         description: Trends retrieved successfully\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 success:\n *                   type: boolean\n *                 data:\n *                   type: array\n *                   items:\n *                     type: object\n *                     properties:\n *                       id:\n *                         type: string\n *                       name:\n *                         type: string\n *                       type:\n *                         type: string\n *                       data:\n *                         type: object\n *                       period:\n *                         type: string\n *                       createdAt:\n *                         type: string\n *       400:\n *         description: Invalid request parameters\n *       401:\n *         description: Unauthorized\n *       500:\n *         description: Internal server error\n */",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-analytics.ts",
        "start": 428,
        "end": 501,
        "startLoc": {
          "line": 428,
          "column": 9,
          "position": 1404
        },
        "endLoc": {
          "line": 501,
          "column": 4,
          "position": 1494
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/next-ai-platform.ts",
        "start": 422,
        "end": 479,
        "startLoc": {
          "line": 422,
          "column": 17,
          "position": 1119
        },
        "endLoc": {
          "line": 479,
          "column": 4,
          "position": 1209
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ".getHealthStatus();\n    \n    res.status(200).json({\n      success: true,\n      data: healthStatus,\n    });\n  } catch (error) {\n    console.error('Error getting health status:', error);\n    res.status(500).json({\n      success: false,\n      error: 'Failed to get health status',\n      message: error instanceof Error ? error.message : 'Unknown error',\n    });\n  }\n});\n\nexport { router as aiAnalyticsRoutes",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/ai-analytics.ts",
        "start": 735,
        "end": 751,
        "startLoc": {
          "line": 735,
          "column": 19,
          "position": 2546
        },
        "endLoc": {
          "line": 751,
          "column": 18,
          "position": 2676
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/next-ai-platform.ts",
        "start": 795,
        "end": 811,
        "startLoc": {
          "line": 795,
          "column": 22,
          "position": 2452
        },
        "endLoc": {
          "line": 811,
          "column": 21,
          "position": 2582
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "router.get('/', async (req, res) => {\n  try {\n    const orgId = req.headers['x-org-id'] as string;\n    if (!orgId) {\n      return res.status(400).json({ error: 'Missing x-org-id header' });\n    }\n\n    // Get agents from registry",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/agents.ts",
        "start": 19,
        "end": 26,
        "startLoc": {
          "line": 19,
          "column": 1,
          "position": 199
        },
        "endLoc": {
          "line": 26,
          "column": 28,
          "position": 281
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/invoices.ts",
        "start": 18,
        "end": 25,
        "startLoc": {
          "line": 18,
          "column": 1,
          "position": 155
        },
        "endLoc": {
          "line": 25,
          "column": 29,
          "position": 237
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", async (req, res) => {\n  try {\n    const { id } = req.params;\n    const orgId = req.headers['x-org-id'] as string;\n    \n    if (!orgId) {\n      return res.status(400).json({ error: 'Missing x-org-id header' });\n    }\n\n    // Set RLS context\n    await db.execute(`SET LOCAL app.org_id = '${orgId}'`);\n\n    // Try to get from database first",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/agents.ts",
        "start": 164,
        "end": 176,
        "startLoc": {
          "line": 164,
          "column": 12,
          "position": 1404
        },
        "endLoc": {
          "line": 176,
          "column": 34,
          "position": 1518
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/invoices.ts",
        "start": 142,
        "end": 154,
        "startLoc": {
          "line": 142,
          "column": 7,
          "position": 1195
        },
        "endLoc": {
          "line": 154,
          "column": 6,
          "position": 1309
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "// Apply pagination\n    const offset = (pagination.page - 1) * pagination.limit;\n    query = query.limit(pagination.limit).offset(offset);\n\n    const result = await query;\n\n    // Get total count for pagination\n    const totalQuery = db.select({ count: count() }).from(agentRuns",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/agents.ts",
        "start": 272,
        "end": 279,
        "startLoc": {
          "line": 272,
          "column": 5,
          "position": 2298
        },
        "endLoc": {
          "line": 279,
          "column": 10,
          "position": 2386
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/invoices.ts",
        "start": 83,
        "end": 90,
        "startLoc": {
          "line": 83,
          "column": 5,
          "position": 716
        },
        "endLoc": {
          "line": 90,
          "column": 9,
          "position": 804
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ".filter(a => a.category === 'soporte_qa').length\n      }\n    });\n\n  } catch (error) {\n    structuredLogger.error('Failed to retrieve agent registry', error as Error, {\n      orgId: req.headers['x-org-id']\n    });\n    \n    res.status(500).json({ \n      error: 'Failed to retrieve agent registry',\n      message: (error as Error).message \n    });\n  }\n});\n\n// POST /v1/agents/run - Execute an agent\nrouter.post('/run', async (req, res) => {\n  try {\n    const orgId = req.headers['x-org-id'] as string ||",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/agents-simple.ts",
        "start": 114,
        "end": 133,
        "startLoc": {
          "line": 114,
          "column": 14,
          "position": 2513
        },
        "endLoc": {
          "line": 133,
          "column": 3,
          "position": 2679
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/agents.ts",
        "start": 56,
        "end": 75,
        "startLoc": {
          "line": 56,
          "column": 7,
          "position": 578
        },
        "endLoc": {
          "line": 75,
          "column": 2,
          "position": 743
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "],\n      body: req.body\n    });\n    \n    res.status(500).json({ \n      error: 'Failed to start agent execution',\n      message: (error as Error).message \n    });\n  }\n});\n\n// GET /v1/agents/runs/:id - Get agent execution status\nrouter.get('/runs/:id', async (req, res) => {\n  try {\n    const { id } = req.params;\n    const orgId = req.headers['x-org-id'] as string ||",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/agents-simple.ts",
        "start": 232,
        "end": 247,
        "startLoc": {
          "line": 232,
          "column": 11,
          "position": 3440
        },
        "endLoc": {
          "line": 247,
          "column": 3,
          "position": 3567
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/agents.ts",
        "start": 152,
        "end": 167,
        "startLoc": {
          "line": 152,
          "column": 12,
          "position": 1331
        },
        "endLoc": {
          "line": 167,
          "column": 2,
          "position": 1457
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "});\n\n  } catch (error) {\n    structuredLogger.error('Failed to retrieve agent execution', error as Error, {\n      orgId: req.headers['x-org-id'],\n      executionId: req.params.id\n    });\n    \n    res.status(500).json({ \n      error: 'Failed to retrieve agent execution',\n      message: (error as Error).message \n    });\n  }\n});\n\n// GET /v1/agents/runs - List agent executions\nrouter.get('/runs', async (req, res) => {\n  try {\n    const orgId = req.headers['x-org-id'] as string ||",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/agents-simple.ts",
        "start": 287,
        "end": 305,
        "startLoc": {
          "line": 287,
          "column": 5,
          "position": 3872
        },
        "endLoc": {
          "line": 305,
          "column": 3,
          "position": 4027
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/agents.ts",
        "start": 222,
        "end": 240,
        "startLoc": {
          "line": 222,
          "column": 5,
          "position": 1881
        },
        "endLoc": {
          "line": 240,
          "column": 2,
          "position": 2035
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "});\n\n  } catch (error) {\n    // Update status to failed\n    const record = executionStore.get(executionId);\n    if (record) {\n      record.status = 'failed';\n      record.error = (error as Error).message;\n      record.completedAt = new Date().",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/agents-simple.ts",
        "start": 456,
        "end": 464,
        "startLoc": {
          "line": 456,
          "column": 5,
          "position": 5336
        },
        "endLoc": {
          "line": 464,
          "column": 2,
          "position": 5419
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/agents.ts",
        "start": 440,
        "end": 448,
        "startLoc": {
          "line": 440,
          "column": 5,
          "position": 3590
        },
        "endLoc": {
          "line": 448,
          "column": 2,
          "position": 3673
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": ", {\n      traceId,\n      filters,\n      count: rules.length\n    });\n\n    res.json({\n      success: true,\n      data: {\n        rules,\n        count: rules.length,\n        filters\n      },\n      timestamp: new Date().toISOString(),\n      traceId\n    });\n\n  } catch (error) {\n    structuredLogger.error('Failed to get threat detection rules'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-security.ts",
        "start": 286,
        "end": 304,
        "startLoc": {
          "line": 286,
          "column": 35,
          "position": 2457
        },
        "endLoc": {
          "line": 304,
          "column": 39,
          "position": 2563
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/advanced-security.ts",
        "start": 189,
        "end": 207,
        "startLoc": {
          "line": 189,
          "column": 29,
          "position": 1717
        },
        "endLoc": {
          "line": 207,
          "column": 33,
          "position": 1823
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": "});\n\n    res.status(201).json({\n      success: true,\n      data: rule,\n      timestamp: new Date().toISOString(),\n      traceId\n    });\n\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Invalid rule data',\n        details: error.errors,\n        traceId\n      });\n    }\n\n    structuredLogger.error('Failed to create threat detection rule'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-security.ts",
        "start": 333,
        "end": 352,
        "startLoc": {
          "line": 333,
          "column": 5,
          "position": 2788
        },
        "endLoc": {
          "line": 352,
          "column": 41,
          "position": 2923
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/advanced-security.ts",
        "start": 236,
        "end": 255,
        "startLoc": {
          "line": 236,
          "column": 5,
          "position": 2048
        },
        "endLoc": {
          "line": 255,
          "column": 35,
          "position": 2183
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ",\n      body: req.body\n    });\n    \n    if (error instanceof z.ZodError) {\n      res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    } else {\n      res.status(500).json({\n        success: false,\n        error: 'Failed to update report'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-reporting.ts",
        "start": 214,
        "end": 227,
        "startLoc": {
          "line": 214,
          "column": 9,
          "position": 1759
        },
        "endLoc": {
          "line": 227,
          "column": 26,
          "position": 1860
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/advanced-reporting.ts",
        "start": 94,
        "end": 107,
        "startLoc": {
          "line": 94,
          "column": 16,
          "position": 860
        },
        "endLoc": {
          "line": 107,
          "column": 26,
          "position": 961
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ",\n      reportId: req.params.reportId,\n      body: req.body\n    });\n    \n    if (error instanceof z.ZodError) {\n      res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    } else {\n      res.status(500).json({\n        success: false,\n        error: error",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-reporting.ts",
        "start": 305,
        "end": 319,
        "startLoc": {
          "line": 305,
          "column": 18,
          "position": 2373
        },
        "endLoc": {
          "line": 319,
          "column": 6,
          "position": 2485
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/advanced-reporting.ts",
        "start": 213,
        "end": 107,
        "startLoc": {
          "line": 213,
          "column": 16,
          "position": 1748
        },
        "endLoc": {
          "line": 107,
          "column": 26,
          "position": 961
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ");\n    \n    if (!dashboard) {\n      return res.status(404).json({\n        success: false,\n        error: 'Dashboard not found'\n      });\n    }\n    \n    res.json({\n      success: true,\n      data: dashboard\n    });\n  } catch (error) {\n    logger",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-performance-monitoring.ts",
        "start": 242,
        "end": 256,
        "startLoc": {
          "line": 242,
          "column": 8,
          "position": 2309
        },
        "endLoc": {
          "line": 256,
          "column": 7,
          "position": 2398
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/data-analytics-dashboard.ts",
        "start": 75,
        "end": 89,
        "startLoc": {
          "line": 75,
          "column": 12,
          "position": 841
        },
        "endLoc": {
          "line": 89,
          "column": 17,
          "position": 928
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ": z.string().optional(),\n  startTime: z.string().datetime().optional(),\n  endTime: z.string().datetime().optional(),\n  limit: z.number().int().min(1).max(1000).optional()\n});\n\nconst CreateTraceSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-observability.ts",
        "start": 45,
        "end": 51,
        "startLoc": {
          "line": 45,
          "column": 14,
          "position": 386
        },
        "endLoc": {
          "line": 51,
          "column": 18,
          "position": 472
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/advanced-observability.ts",
        "start": 26,
        "end": 32,
        "startLoc": {
          "line": 26,
          "column": 8,
          "position": 119
        },
        "endLoc": {
          "line": 32,
          "column": 16,
          "position": 205
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ".parse(req.query);\n    \n    // Convertir strings de fecha a objetos Date\n    if (filters.startTime) {\n      filters.startTime = new Date(filters.startTime as string);\n    }\n    if (filters.endTime) {\n      filters.endTime = new Date(filters.endTime as string);\n    }\n    \n    const traces",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-observability.ts",
        "start": 297,
        "end": 307,
        "startLoc": {
          "line": 297,
          "column": 19,
          "position": 2676
        },
        "endLoc": {
          "line": 307,
          "column": 7,
          "position": 2765
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/advanced-observability.ts",
        "start": 201,
        "end": 211,
        "startLoc": {
          "line": 201,
          "column": 17,
          "position": 1938
        },
        "endLoc": {
          "line": 211,
          "column": 5,
          "position": 2027
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ", error as Error);\n    res.status(503).json({\n      status: 'unhealthy',\n      timestamp: new Date().toISOString(),\n      error: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\nexport default router;",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-observability.ts",
        "start": 613,
        "end": 622,
        "startLoc": {
          "line": 613,
          "column": 36,
          "position": 5062
        },
        "endLoc": {
          "line": 622,
          "column": 2,
          "position": 5144
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/gdpr-hitl.ts",
        "start": 608,
        "end": 617,
        "startLoc": {
          "line": 608,
          "column": 40,
          "position": 4720
        },
        "endLoc": {
          "line": 617,
          "column": 2,
          "position": 4802
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ").optional(),\n  actions: z.array(z.object({\n    type: z.enum(['EMAIL', 'SLACK', 'WEBHOOK', 'SMS']),\n    config: z.record(z.any())\n  }))\n});\n\nconst CreateSLASchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-metrics-alerts.ts",
        "start": 44,
        "end": 51,
        "startLoc": {
          "line": 44,
          "column": 2,
          "position": 436
        },
        "endLoc": {
          "line": 51,
          "column": 16,
          "position": 507
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/centralized-logging.ts",
        "start": 95,
        "end": 102,
        "startLoc": {
          "line": 95,
          "column": 2,
          "position": 1158
        },
        "endLoc": {
          "line": 102,
          "column": 28,
          "position": 1229
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ".listAlertRules();\n    \n    res.json({\n      success: true,\n      data: rules,\n      count: rules.length\n    });\n  } catch (error) {\n    logger.error('Error listing alert rules', { error });\n    res.status(500).json({\n      success: false,\n      error: 'Failed to list alert rules',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n// GET /api/advanced-metrics-alerts/alert-rules/:id",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-metrics-alerts.ts",
        "start": 177,
        "end": 194,
        "startLoc": {
          "line": 177,
          "column": 21,
          "position": 1788
        },
        "endLoc": {
          "line": 194,
          "column": 52,
          "position": 1916
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/centralized-logging.ts",
        "start": 243,
        "end": 260,
        "startLoc": {
          "line": 243,
          "column": 15,
          "position": 2677
        },
        "endLoc": {
          "line": 260,
          "column": 48,
          "position": 2804
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": ".getAlertRule(id);\n    \n    if (!rule) {\n      return res.status(404).json({\n        success: false,\n        error: 'Alert rule not found'\n      });\n    }\n\n    res.json({\n      success: true,\n      data: rule\n    });\n  } catch (error) {\n    logger.error('Error getting alert rule', { error });\n    res.status(500).json({\n      success: false,\n      error: 'Failed to get alert rule',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n// POST /api/advanced-metrics-alerts/alert-rules",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-metrics-alerts.ts",
        "start": 198,
        "end": 221,
        "startLoc": {
          "line": 198,
          "column": 21,
          "position": 1975
        },
        "endLoc": {
          "line": 221,
          "column": 49,
          "position": 2141
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/centralized-logging.ts",
        "start": 264,
        "end": 287,
        "startLoc": {
          "line": 264,
          "column": 15,
          "position": 2863
        },
        "endLoc": {
          "line": 287,
          "column": 45,
          "position": 3028
        }
      }
    },
    {
      "format": "typescript",
      "lines": 28,
      "fragment": ",\n      actions: validatedData.actions\n    });\n\n    res.status(201).json({\n      success: true,\n      data: rule,\n      message: 'Alert rule created successfully'\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Error creating alert rule', { error });\n    res.status(500).json({\n      success: false,\n      error: 'Failed to create alert rule',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n// PUT /api/advanced-metrics-alerts/alert-rules/:id",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-metrics-alerts.ts",
        "start": 234,
        "end": 261,
        "startLoc": {
          "line": 234,
          "column": 7,
          "position": 2290
        },
        "endLoc": {
          "line": 261,
          "column": 52,
          "position": 2489
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/centralized-logging.ts",
        "start": 301,
        "end": 328,
        "startLoc": {
          "line": 301,
          "column": 5,
          "position": 3178
        },
        "endLoc": {
          "line": 328,
          "column": 48,
          "position": 3377
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ".updateAlertRule(id, updates);\n    \n    if (!updatedRule) {\n      return res.status(404).json({\n        success: false,\n        error: 'Alert rule not found'\n      });\n    }\n\n    res.json({\n      success: true,\n      data: updatedRule,\n      message: 'Alert rule updated successfully'\n    });\n  } catch (error) {\n    logger.error('Error updating alert rule', { error });\n    res.status(500).json({\n      success: false,\n      error: 'Failed to update alert rule',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n// DELETE /api/advanced-metrics-alerts/alert-rules/:id",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-metrics-alerts.ts",
        "start": 267,
        "end": 291,
        "startLoc": {
          "line": 267,
          "column": 21,
          "position": 2562
        },
        "endLoc": {
          "line": 291,
          "column": 55,
          "position": 2738
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/centralized-logging.ts",
        "start": 334,
        "end": 358,
        "startLoc": {
          "line": 334,
          "column": 15,
          "position": 3449
        },
        "endLoc": {
          "line": 358,
          "column": 51,
          "position": 3624
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": ".deleteAlertRule(id);\n    \n    if (!deleted) {\n      return res.status(404).json({\n        success: false,\n        error: 'Alert rule not found'\n      });\n    }\n\n    res.json({\n      success: true,\n      message: 'Alert rule deleted successfully'\n    });\n  } catch (error) {\n    logger.error('Error deleting alert rule', { error });\n    res.status(500).json({\n      success: false,\n      error: 'Failed to delete alert rule',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n// POST /api/advanced-metrics-alerts/alert-rules/evaluate",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-metrics-alerts.ts",
        "start": 295,
        "end": 318,
        "startLoc": {
          "line": 295,
          "column": 21,
          "position": 2797
        },
        "endLoc": {
          "line": 318,
          "column": 58,
          "position": 2963
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/centralized-logging.ts",
        "start": 362,
        "end": 385,
        "startLoc": {
          "line": 362,
          "column": 15,
          "position": 3683
        },
        "endLoc": {
          "line": 385,
          "column": 49,
          "position": 3848
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ");\n    \n    if (!alert) {\n      return res.status(404).json({\n        success: false,\n        error: 'Alert not found'\n      });\n    }\n\n    res.json({\n      success: true,\n      data: alert\n    });\n  } catch (error) {\n    logger.error('Error getting alert'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-metrics-alerts.ts",
        "start": 373,
        "end": 387,
        "startLoc": {
          "line": 373,
          "column": 3,
          "position": 3502
        },
        "endLoc": {
          "line": 387,
          "column": 22,
          "position": 3594
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/advanced-performance-monitoring.ts",
        "start": 153,
        "end": 167,
        "startLoc": {
          "line": 153,
          "column": 8,
          "position": 1600
        },
        "endLoc": {
          "line": 167,
          "column": 24,
          "position": 1693
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Error creating SLA'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-metrics-alerts.ts",
        "start": 530,
        "end": 540,
        "startLoc": {
          "line": 530,
          "column": 5,
          "position": 4776
        },
        "endLoc": {
          "line": 540,
          "column": 21,
          "position": 4856
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/sepa.ts",
        "start": 39,
        "end": 49,
        "startLoc": {
          "line": 39,
          "column": 5,
          "position": 369
        },
        "endLoc": {
          "line": 49,
          "column": 34,
          "position": 450
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "router.get('/reports/:period', async (req: Request, res: Response) => {\n  try {\n    const { period } = req.params;\n    \n    if (!['hourly', 'daily', 'weekly', 'monthly'].includes(period)) {\n      return res.status(400).json({\n        success: false,\n        error: 'Invalid period. Must be: hourly, daily, weekly, or monthly'\n      });\n    }\n\n    const report = await metricsAlertsService",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-metrics-alerts.ts",
        "start": 598,
        "end": 609,
        "startLoc": {
          "line": 598,
          "column": 1,
          "position": 5353
        },
        "endLoc": {
          "line": 609,
          "column": 21,
          "position": 5473
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/centralized-logging.ts",
        "start": 573,
        "end": 584,
        "startLoc": {
          "line": 573,
          "column": 1,
          "position": 5390
        },
        "endLoc": {
          "line": 584,
          "column": 15,
          "position": 5509
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "router.get('/config', async (req: Request, res: Response) => {\n  try {\n    res.json({\n      success: true,\n      data: defaultConfig\n    });\n  } catch (error) {\n    logger.error('Error getting configuration', { error });\n    res.status(500).json({\n      success: false,\n      error: 'Failed to get configuration',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n// PUT /api/advanced-metrics-alerts/config",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-metrics-alerts.ts",
        "start": 628,
        "end": 644,
        "startLoc": {
          "line": 628,
          "column": 1,
          "position": 5625
        },
        "endLoc": {
          "line": 644,
          "column": 43,
          "position": 5767
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/automated-testing.ts",
        "start": 541,
        "end": 449,
        "startLoc": {
          "line": 541,
          "column": 1,
          "position": 4843
        },
        "endLoc": {
          "line": 449,
          "column": 49,
          "position": 3985
        }
      }
    },
    {
      "format": "typescript",
      "lines": 33,
      "fragment": "router.put('/config', async (req: Request, res: Response) => {\n  try {\n    const validatedData = UpdateConfigSchema.parse(req.body);\n    \n    // Actualizar configuración (en una implementación real, esto se persistiría)\n    Object.assign(defaultConfig, validatedData);\n    \n    res.json({\n      success: true,\n      data: defaultConfig,\n      message: 'Configuration updated successfully'\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Error updating configuration', { error });\n    res.status(500).json({\n      success: false,\n      error: 'Failed to update configuration',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\n// ===== HEALTH CHECK =====\n\n// GET /api/advanced-metrics-alerts/health",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-metrics-alerts.ts",
        "start": 645,
        "end": 677,
        "startLoc": {
          "line": 645,
          "column": 1,
          "position": 5769
        },
        "endLoc": {
          "line": 677,
          "column": 43,
          "position": 6017
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/automated-testing.ts",
        "start": 558,
        "end": 481,
        "startLoc": {
          "line": 558,
          "column": 1,
          "position": 4987
        },
        "endLoc": {
          "line": 481,
          "column": 49,
          "position": 4235
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "}\n    };\n\n    res.json({\n      success: true,\n      data: health\n    });\n  } catch (error) {\n    logger.error('Error checking health', { error });\n    res.status(500).json({\n      success: false,\n      error: 'Health check failed',\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\nexport default router;",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-metrics-alerts.ts",
        "start": 696,
        "end": 713,
        "startLoc": {
          "line": 696,
          "column": 7,
          "position": 6222
        },
        "endLoc": {
          "line": 713,
          "column": 2,
          "position": 6345
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/project-completion-deployment.ts",
        "start": 503,
        "end": 624,
        "startLoc": {
          "line": 503,
          "column": 7,
          "position": 4469
        },
        "endLoc": {
          "line": 624,
          "column": 2,
          "position": 5517
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "maxTokens: z.number().min(1).max(4000).optional(),\n    temperature: z.number().min(0).max(2).optional(),\n    topP: z.number().min(0).max(1).optional(),\n    frequencyPenalty: z.number().min(-2).max(2).optional(),\n    presencePenalty: z.number().min(-2).max(2).optional()\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-features.ts",
        "start": 53,
        "end": 58,
        "startLoc": {
          "line": 53,
          "column": 5,
          "position": 560
        },
        "endLoc": {
          "line": 58,
          "column": 2,
          "position": 686
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/azure-integration.ts",
        "start": 29,
        "end": 33,
        "startLoc": {
          "line": 29,
          "column": 3,
          "position": 216
        },
        "endLoc": {
          "line": 33,
          "column": 2,
          "position": 340
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "(req, res);\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({ error: 'Validation error', details: error.errors });\n    } else {\n      res.status(500).json({ error: 'Internal server error' });\n    }\n  }\n});\n\nrouter.post('/ai/analyze-seasonality'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-features.ts",
        "start": 103,
        "end": 113,
        "startLoc": {
          "line": 103,
          "column": 18,
          "position": 1258
        },
        "endLoc": {
          "line": 113,
          "column": 26,
          "position": 1364
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/advanced-features.ts",
        "start": 90,
        "end": 100,
        "startLoc": {
          "line": 90,
          "column": 14,
          "position": 1108
        },
        "endLoc": {
          "line": 100,
          "column": 25,
          "position": 1214
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "(req, res);\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({ error: 'Validation error', details: error.errors });\n    } else {\n      res.status(500).json({ error: 'Internal server error' });\n    }\n  }\n});\n\nrouter.post('/ai/generate-recommendations'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-features.ts",
        "start": 116,
        "end": 126,
        "startLoc": {
          "line": 116,
          "column": 19,
          "position": 1408
        },
        "endLoc": {
          "line": 126,
          "column": 31,
          "position": 1514
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/advanced-features.ts",
        "start": 90,
        "end": 100,
        "startLoc": {
          "line": 90,
          "column": 14,
          "position": 1108
        },
        "endLoc": {
          "line": 100,
          "column": 25,
          "position": 1214
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "(req, res);\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({ error: 'Validation error', details: error.errors });\n    } else {\n      res.status(500).json({ error: 'Internal server error' });\n    }\n  }\n});\n\n// PR-13: Metrics routes",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-features.ts",
        "start": 129,
        "end": 139,
        "startLoc": {
          "line": 129,
          "column": 24,
          "position": 1558
        },
        "endLoc": {
          "line": 139,
          "column": 25,
          "position": 1660
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/advanced-features.ts",
        "start": 90,
        "end": 100,
        "startLoc": {
          "line": 90,
          "column": 14,
          "position": 1108
        },
        "endLoc": {
          "line": 100,
          "column": 7,
          "position": 1210
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "(req, res);\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({ error: 'Validation error', details: error.errors });\n    } else {\n      res.status(500).json({ error: 'Internal server error' });\n    }\n  }\n});\n\n// PR-14: AutoML routes",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-features.ts",
        "start": 167,
        "end": 177,
        "startLoc": {
          "line": 167,
          "column": 13,
          "position": 1947
        },
        "endLoc": {
          "line": 177,
          "column": 24,
          "position": 2049
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/advanced-features.ts",
        "start": 90,
        "end": 100,
        "startLoc": {
          "line": 90,
          "column": 14,
          "position": 1108
        },
        "endLoc": {
          "line": 100,
          "column": 7,
          "position": 1210
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "(req, res);\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({ error: 'Validation error', details: error.errors });\n    } else {\n      res.status(500).json({ error: 'Internal server error' });\n    }\n  }\n});\n\nrouter.post('/ml/predict'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-features.ts",
        "start": 181,
        "end": 191,
        "startLoc": {
          "line": 181,
          "column": 11,
          "position": 2099
        },
        "endLoc": {
          "line": 191,
          "column": 14,
          "position": 2205
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/advanced-features.ts",
        "start": 90,
        "end": 100,
        "startLoc": {
          "line": 90,
          "column": 14,
          "position": 1108
        },
        "endLoc": {
          "line": 100,
          "column": 25,
          "position": 1214
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "(req, res);\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({ error: 'Validation error', details: error.errors });\n    } else {\n      res.status(500).json({ error: 'Internal server error' });\n    }\n  }\n});\n\nrouter.post('/ml/evaluate'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-features.ts",
        "start": 194,
        "end": 204,
        "startLoc": {
          "line": 194,
          "column": 8,
          "position": 2249
        },
        "endLoc": {
          "line": 204,
          "column": 15,
          "position": 2355
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/advanced-features.ts",
        "start": 90,
        "end": 100,
        "startLoc": {
          "line": 90,
          "column": 14,
          "position": 1108
        },
        "endLoc": {
          "line": 100,
          "column": 25,
          "position": 1214
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ": z.object({\n        features: z.array(z.array(z.number())),\n        labels: z.array(z.number()),\n        featureNames: z.array(z.string())\n      })\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-features.ts",
        "start": 208,
        "end": 213,
        "startLoc": {
          "line": 208,
          "column": 9,
          "position": 2410
        },
        "endLoc": {
          "line": 213,
          "column": 2,
          "position": 2475
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/advanced-features.ts",
        "start": 24,
        "end": 28,
        "startLoc": {
          "line": 24,
          "column": 5,
          "position": 233
        },
        "endLoc": {
          "line": 28,
          "column": 2,
          "position": 296
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "(req, res);\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({ error: 'Validation error', details: error.errors });\n    } else {\n      res.status(500).json({ error: 'Internal server error' });\n    }\n  }\n});\n\nrouter.get",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-features.ts",
        "start": 214,
        "end": 224,
        "startLoc": {
          "line": 214,
          "column": 14,
          "position": 2492
        },
        "endLoc": {
          "line": 224,
          "column": 4,
          "position": 2596
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/advanced-features.ts",
        "start": 90,
        "end": 100,
        "startLoc": {
          "line": 90,
          "column": 14,
          "position": 1108
        },
        "endLoc": {
          "line": 100,
          "column": 5,
          "position": 1212
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "(req, res);\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({ error: 'Validation error', details: error.errors });\n    } else {\n      res.status(500).json({ error: 'Internal server error' });\n    }\n  }\n});\n\nrouter.post('/sentiment/batch'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-features.ts",
        "start": 236,
        "end": 246,
        "startLoc": {
          "line": 236,
          "column": 17,
          "position": 2723
        },
        "endLoc": {
          "line": 246,
          "column": 19,
          "position": 2829
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/advanced-features.ts",
        "start": 90,
        "end": 100,
        "startLoc": {
          "line": 90,
          "column": 14,
          "position": 1108
        },
        "endLoc": {
          "line": 100,
          "column": 25,
          "position": 1214
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "(req, res);\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({ error: 'Validation error', details: error.errors });\n    } else {\n      res.status(500).json({ error: 'Internal server error' });\n    }\n  }\n});\n\nrouter.get('/sentiment/trends'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-features.ts",
        "start": 249,
        "end": 259,
        "startLoc": {
          "line": 249,
          "column": 22,
          "position": 2873
        },
        "endLoc": {
          "line": 259,
          "column": 20,
          "position": 2979
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/advanced-features.ts",
        "start": 90,
        "end": 224,
        "startLoc": {
          "line": 90,
          "column": 14,
          "position": 1108
        },
        "endLoc": {
          "line": 224,
          "column": 13,
          "position": 2598
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "(req, res);\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({ error: 'Validation error', details: error.errors });\n    } else {\n      res.status(500).json({ error: 'Internal server error' });\n    }\n  }\n});\n\nrouter.post('/azure/generate-image'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-features.ts",
        "start": 271,
        "end": 281,
        "startLoc": {
          "line": 271,
          "column": 5,
          "position": 3104
        },
        "endLoc": {
          "line": 281,
          "column": 24,
          "position": 3210
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/advanced-features.ts",
        "start": 90,
        "end": 100,
        "startLoc": {
          "line": 90,
          "column": 14,
          "position": 1108
        },
        "endLoc": {
          "line": 100,
          "column": 25,
          "position": 1214
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "(req, res);\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({ error: 'Validation error', details: error.errors });\n    } else {\n      res.status(500).json({ error: 'Internal server error' });\n    }\n  }\n});\n\nrouter.post('/azure/text-to-speech'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-features.ts",
        "start": 284,
        "end": 294,
        "startLoc": {
          "line": 284,
          "column": 14,
          "position": 3254
        },
        "endLoc": {
          "line": 294,
          "column": 24,
          "position": 3360
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/advanced-features.ts",
        "start": 90,
        "end": 100,
        "startLoc": {
          "line": 90,
          "column": 14,
          "position": 1108
        },
        "endLoc": {
          "line": 100,
          "column": 25,
          "position": 1214
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "(req, res);\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({ error: 'Validation error', details: error.errors });\n    } else {\n      res.status(500).json({ error: 'Internal server error' });\n    }\n  }\n});\n\nrouter.get('/azure/usage-stats'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-features.ts",
        "start": 297,
        "end": 307,
        "startLoc": {
          "line": 297,
          "column": 13,
          "position": 3404
        },
        "endLoc": {
          "line": 307,
          "column": 21,
          "position": 3510
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/advanced-features.ts",
        "start": 90,
        "end": 224,
        "startLoc": {
          "line": 90,
          "column": 14,
          "position": 1108
        },
        "endLoc": {
          "line": 224,
          "column": 13,
          "position": 2598
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "(req, res);\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({ error: 'Validation error', details: error.errors });\n    } else {\n      res.status(500).json({ error: 'Internal server error' });\n    }\n  }\n});\n\nrouter.post('/search/news'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-features.ts",
        "start": 319,
        "end": 329,
        "startLoc": {
          "line": 319,
          "column": 7,
          "position": 3635
        },
        "endLoc": {
          "line": 329,
          "column": 15,
          "position": 3741
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/advanced-features.ts",
        "start": 90,
        "end": 100,
        "startLoc": {
          "line": 90,
          "column": 14,
          "position": 1108
        },
        "endLoc": {
          "line": 100,
          "column": 25,
          "position": 1214
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "(req, res);\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({ error: 'Validation error', details: error.errors });\n    } else {\n      res.status(500).json({ error: 'Internal server error' });\n    }\n  }\n});\n\nrouter.get('/search/trending'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-features.ts",
        "start": 332,
        "end": 342,
        "startLoc": {
          "line": 332,
          "column": 11,
          "position": 3785
        },
        "endLoc": {
          "line": 342,
          "column": 19,
          "position": 3891
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/advanced-features.ts",
        "start": 90,
        "end": 224,
        "startLoc": {
          "line": 90,
          "column": 14,
          "position": 1108
        },
        "endLoc": {
          "line": 224,
          "column": 13,
          "position": 2598
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "]).optional(),\n  startDate: z.string().datetime().optional(),\n  endDate: z.string().datetime().optional(),\n  limit: z.coerce.number().int().positive().max(100).default(50).optional(),\n});\n\nconst CreateErrorSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-error-management.ts",
        "start": 14,
        "end": 20,
        "startLoc": {
          "line": 14,
          "column": 9,
          "position": 195
        },
        "endLoc": {
          "line": 20,
          "column": 18,
          "position": 283
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/supplier-scorecard.ts",
        "start": 76,
        "end": 82,
        "startLoc": {
          "line": 76,
          "column": 11,
          "position": 1223
        },
        "endLoc": {
          "line": 82,
          "column": 23,
          "position": 1311
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "),\n  }).optional(),\n});\n\nconst GetPatternsSchema = z.object({\n  organizationId: z.string().min(1),\n  enabled: z.coerce.boolean().optional(),\n  actionType: z.enum(['alert'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-error-management.ts",
        "start": 64,
        "end": 71,
        "startLoc": {
          "line": 64,
          "column": 2,
          "position": 1062
        },
        "endLoc": {
          "line": 71,
          "column": 8,
          "position": 1133
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/dlg-grooming.ts",
        "start": 61,
        "end": 68,
        "startLoc": {
          "line": 61,
          "column": 2,
          "position": 996
        },
        "endLoc": {
          "line": 68,
          "column": 13,
          "position": 1067
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "]).optional(),\n  limit: z.coerce.number().int().positive().max(100).default(50).optional(),\n});\n\nconst CreatePatternSchema = z.object({\n  organizationId: z.string().min(1),\n  name: z.string().min(1),\n  description: z.string().min(1),\n  pattern: z.object({\n    errorType: z.string().optional",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-error-management.ts",
        "start": 71,
        "end": 80,
        "startLoc": {
          "line": 71,
          "column": 14,
          "position": 1146
        },
        "endLoc": {
          "line": 80,
          "column": 9,
          "position": 1274
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/dlg-grooming.ts",
        "start": 68,
        "end": 77,
        "startLoc": {
          "line": 68,
          "column": 16,
          "position": 1077
        },
        "endLoc": {
          "line": 77,
          "column": 4,
          "position": 1205
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ": z.coerce.number().min(0).max(100).optional(),\n    lastMatch: z.string().optional(),\n    averageResolutionTime: z.coerce.number().int().min(0).optional(),\n  }).optional(),\n  enabled: z.coerce.boolean().default(true),\n});\n\nconst GetPerformanceMetricsSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-error-management.ts",
        "start": 103,
        "end": 110,
        "startLoc": {
          "line": 103,
          "column": 9,
          "position": 1647
        },
        "endLoc": {
          "line": 110,
          "column": 28,
          "position": 1747
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/dlg-grooming.ts",
        "start": 98,
        "end": 105,
        "startLoc": {
          "line": 98,
          "column": 12,
          "position": 1530
        },
        "endLoc": {
          "line": 105,
          "column": 19,
          "position": 1630
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ", 'critical']).optional(),\n  startDate: z.string().datetime().optional(),\n  endDate: z.string().datetime().optional(),\n  limit: z.coerce.number().int().positive().max(100).default(50).optional(),\n});\n\nconst CreatePerformanceMetricSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-error-management.ts",
        "start": 114,
        "end": 120,
        "startLoc": {
          "line": 114,
          "column": 10,
          "position": 1831
        },
        "endLoc": {
          "line": 120,
          "column": 30,
          "position": 1922
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/dlg-grooming.ts",
        "start": 14,
        "end": 82,
        "startLoc": {
          "line": 14,
          "column": 7,
          "position": 189
        },
        "endLoc": {
          "line": 82,
          "column": 23,
          "position": 1311
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "]).optional(),\n  startDate: z.string().datetime().optional(),\n  endDate: z.string().datetime().optional(),\n  limit: z.coerce.number().int().positive().max(100).default(50).optional(),\n});\n\nconst CreateAlertSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-error-management.ts",
        "start": 144,
        "end": 150,
        "startLoc": {
          "line": 144,
          "column": 13,
          "position": 2281
        },
        "endLoc": {
          "line": 150,
          "column": 18,
          "position": 2369
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/supplier-scorecard.ts",
        "start": 76,
        "end": 82,
        "startLoc": {
          "line": 76,
          "column": 11,
          "position": 1223
        },
        "endLoc": {
          "line": 82,
          "column": 23,
          "position": 1311
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "= z.object({\n  organizationId: z.string().min(1),\n  reportType: z.enum(['daily', 'weekly', 'monthly', 'ad_hoc']),\n  startDate: z.string().datetime(),\n  endDate: z.string().datetime(),\n  generatedBy: z.string().min(1),\n});\n\nconst GetStatsSchema = z.object({\n  organizationId: z.string().min(1),\n});\n\n// Routes\n\n// Error Management",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-error-management.ts",
        "start": 185,
        "end": 199,
        "startLoc": {
          "line": 185,
          "column": 2,
          "position": 2910
        },
        "endLoc": {
          "line": 199,
          "column": 20,
          "position": 3044
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/dlg-grooming.ts",
        "start": 111,
        "end": 84,
        "startLoc": {
          "line": 111,
          "column": 2,
          "position": 1703
        },
        "endLoc": {
          "line": 84,
          "column": 55,
          "position": 1026
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ".getPatterns(filters.organizationId, filters);\n    \n    res.json({\n      success: true,\n      data: {\n        patterns,\n        total: patterns.length,\n        filters\n      },\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Error getting patterns'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-error-management.ts",
        "start": 276,
        "end": 288,
        "startLoc": {
          "line": 276,
          "column": 31,
          "position": 3761
        },
        "endLoc": {
          "line": 288,
          "column": 25,
          "position": 3850
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/dlg-grooming.ts",
        "start": 202,
        "end": 214,
        "startLoc": {
          "line": 202,
          "column": 19,
          "position": 2554
        },
        "endLoc": {
          "line": 214,
          "column": 29,
          "position": 2643
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": ".getAlerts(filters.organizationId, filters);\n    \n    res.json({\n      success: true,\n      data: {\n        alerts,\n        total: alerts.length,\n        filters\n      },\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Error getting alerts', { error });\n    res.status(400).json({\n      success: false,\n      error: 'Invalid request data',\n      details: error.errors\n    });\n  }\n});\n\nadvancedErrorManagementRouter",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-error-management.ts",
        "start": 366,
        "end": 387,
        "startLoc": {
          "line": 366,
          "column": 31,
          "position": 4523
        },
        "endLoc": {
          "line": 387,
          "column": 30,
          "position": 4670
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/inventory-kardex.ts",
        "start": 295,
        "end": 316,
        "startLoc": {
          "line": 295,
          "column": 23,
          "position": 3224
        },
        "endLoc": {
          "line": 316,
          "column": 22,
          "position": 3371
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "(\n      reportData.organizationId,\n      reportData.reportType,\n      reportData.startDate,\n      reportData.endDate,\n      reportData.generatedBy\n    );\n    \n    res.status(201).json({\n      success: true,\n      data: report,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Error generating error report'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-error-management.ts",
        "start": 487,
        "end": 501,
        "startLoc": {
          "line": 487,
          "column": 20,
          "position": 5536
        },
        "endLoc": {
          "line": 501,
          "column": 32,
          "position": 5634
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/supplier-scorecard.ts",
        "start": 375,
        "end": 389,
        "startLoc": {
          "line": 375,
          "column": 23,
          "position": 4295
        },
        "endLoc": {
          "line": 389,
          "column": 35,
          "position": 4393
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "},\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Error checking health', { error });\n    res.status(500).json({\n      success: false,\n      error: 'Health check failed'\n    });\n  }\n});\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-error-management.ts",
        "start": 546,
        "end": 558,
        "startLoc": {
          "line": 546,
          "column": 7,
          "position": 6006
        },
        "endLoc": {
          "line": 558,
          "column": 7,
          "position": 6093
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/reportes-mensuales.ts",
        "start": 257,
        "end": 269,
        "startLoc": {
          "line": 257,
          "column": 7,
          "position": 2571
        },
        "endLoc": {
          "line": 269,
          "column": 30,
          "position": 2658
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ");\n    \n    if (!environment) {\n      return res.status(404).json({\n        success: false,\n        error: 'Environment not found'\n      });\n    }\n    \n    res.json({\n      success: true,\n      data: environment\n    });\n  } catch (error) {\n    logger",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-deployment-automation.ts",
        "start": 231,
        "end": 245,
        "startLoc": {
          "line": 231,
          "column": 8,
          "position": 2343
        },
        "endLoc": {
          "line": 245,
          "column": 7,
          "position": 2432
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/configuration.ts",
        "start": 228,
        "end": 242,
        "startLoc": {
          "line": 228,
          "column": 5,
          "position": 1829
        },
        "endLoc": {
          "line": 242,
          "column": 4,
          "position": 1918
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ");\n    \n    if (!job) {\n      return res.status(404).json({\n        success: false,\n        error: 'Job not found'\n      });\n    }\n    \n    res.json({\n      success: true,\n      data: job\n    });\n  } catch (error) {\n    logger.error('Error updating job status:'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-deployment-automation.ts",
        "start": 374,
        "end": 388,
        "startLoc": {
          "line": 374,
          "column": 9,
          "position": 3533
        },
        "endLoc": {
          "line": 388,
          "column": 29,
          "position": 3626
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/advanced-deployment-automation.ts",
        "start": 347,
        "end": 361,
        "startLoc": {
          "line": 347,
          "column": 3,
          "position": 3313
        },
        "endLoc": {
          "line": 361,
          "column": 21,
          "position": 3406
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": ".getStatistics();\n    \n    res.json({\n      success: true,\n      data: statistics\n    });\n  } catch (error) {\n    logger.error('Error getting statistics:', error);\n    res.status(500).json({\n      success: false,\n      error: 'Failed to retrieve statistics'\n    });\n  }\n});\n\n// Health check endpoint\nrouter.get('/health', async (req, res) => {\n  try {\n    const statistics = await advancedDeploymentAutomationService",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-deployment-automation.ts",
        "start": 640,
        "end": 658,
        "startLoc": {
          "line": 640,
          "column": 36,
          "position": 5617
        },
        "endLoc": {
          "line": 658,
          "column": 36,
          "position": 5747
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/advanced-performance-monitoring.ts",
        "start": 410,
        "end": 428,
        "startLoc": {
          "line": 410,
          "column": 37,
          "position": 3699
        },
        "endLoc": {
          "line": 428,
          "column": 37,
          "position": 3829
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "}\n    });\n  } catch (error) {\n    logger.error('Error checking health:', error);\n    res.status(500).json({\n      success: false,\n      status: 'unhealthy',\n      error: 'Health check failed'\n    });\n  }\n});\n\nexport default router;",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-deployment-automation.ts",
        "start": 669,
        "end": 681,
        "startLoc": {
          "line": 669,
          "column": 7,
          "position": 5834
        },
        "endLoc": {
          "line": 681,
          "column": 2,
          "position": 5914
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/advanced-performance-monitoring.ts",
        "start": 438,
        "end": 450,
        "startLoc": {
          "line": 438,
          "column": 7,
          "position": 3907
        },
        "endLoc": {
          "line": 450,
          "column": 2,
          "position": 3987
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "),\n  isRequired: z.boolean().default(false),\n  validation: z.object({\n    min: z.number().optional(),\n    max: z.number().optional(),\n    pattern: z.string().optional(),",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-configuration-management.ts",
        "start": 17,
        "end": 22,
        "startLoc": {
          "line": 17,
          "column": 6,
          "position": 236
        },
        "endLoc": {
          "line": 22,
          "column": 2,
          "position": 308
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/data-analytics-dashboard.ts",
        "start": 30,
        "end": 36,
        "startLoc": {
          "line": 30,
          "column": 2,
          "position": 380
        },
        "endLoc": {
          "line": 36,
          "column": 2,
          "position": 454
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "),\n  validation: z.object({\n    min: z.number().optional(),\n    max: z.number().optional(),\n    pattern: z.string().optional(),\n    enum: z.array(z.any()).optional(),\n    custom: z.string().optional()\n  }).optional(),\n  dependencies: z.array(z.string()).optional",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-configuration-management.ts",
        "start": 43,
        "end": 51,
        "startLoc": {
          "line": 43,
          "column": 2,
          "position": 670
        },
        "endLoc": {
          "line": 51,
          "column": 9,
          "position": 786
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/advanced-configuration-management.ts",
        "start": 18,
        "end": 26,
        "startLoc": {
          "line": 18,
          "column": 6,
          "position": 252
        },
        "endLoc": {
          "line": 26,
          "column": 8,
          "position": 368
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Failed to create configuration'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-configuration-management.ts",
        "start": 235,
        "end": 245,
        "startLoc": {
          "line": 235,
          "column": 5,
          "position": 2599
        },
        "endLoc": {
          "line": 245,
          "column": 33,
          "position": 2679
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/sepa.ts",
        "start": 39,
        "end": 49,
        "startLoc": {
          "line": 39,
          "column": 5,
          "position": 369
        },
        "endLoc": {
          "line": 49,
          "column": 34,
          "position": 450
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ",\n      message: 'Configuration updated successfully'\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Failed to update configuration'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-configuration-management.ts",
        "start": 284,
        "end": 296,
        "startLoc": {
          "line": 284,
          "column": 7,
          "position": 2987
        },
        "endLoc": {
          "line": 296,
          "column": 33,
          "position": 3076
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/project-completion-deployment.ts",
        "start": 458,
        "end": 49,
        "startLoc": {
          "line": 458,
          "column": 14,
          "position": 4073
        },
        "endLoc": {
          "line": 49,
          "column": 34,
          "position": 450
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ",\n      message: error instanceof Error ? error.message : 'Unknown error'\n    });\n  }\n});\n\nrouter.delete('/configs/:id', async (req, res) => {\n  try {\n    const { id } = req.params;\n    const { userId } = req.body;\n\n    const success = await advancedConfigurationManagementService",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-configuration-management.ts",
        "start": 303,
        "end": 314,
        "startLoc": {
          "line": 303,
          "column": 33,
          "position": 3142
        },
        "endLoc": {
          "line": 314,
          "column": 39,
          "position": 3244
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/backup-recovery.ts",
        "start": 251,
        "end": 262,
        "startLoc": {
          "line": 251,
          "column": 40,
          "position": 2623
        },
        "endLoc": {
          "line": 262,
          "column": 22,
          "position": 2725
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", async (req, res) => {\n  try {\n    const { id } = req.params;\n    const config = await advancedConfigurationManagementService.getConfig(id);\n\n    if (!config) {\n      return res.status(404).json({\n        success: false,\n        error: 'Configuration not found'\n      });\n    }\n\n    const",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-configuration-management.ts",
        "start": 350,
        "end": 362,
        "startLoc": {
          "line": 350,
          "column": 24,
          "position": 3494
        },
        "endLoc": {
          "line": 362,
          "column": 6,
          "position": 3595
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/advanced-configuration-management.ts",
        "start": 143,
        "end": 155,
        "startLoc": {
          "line": 143,
          "column": 15,
          "position": 1870
        },
        "endLoc": {
          "line": 155,
          "column": 7,
          "position": 1971
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", {\n      configId: id,\n      isValid: validation.isValid,\n      errorsCount: validation.errors.length,\n      warningsCount: validation.warnings.length\n    });\n\n    res.json({\n      success: true,\n      data: validation\n    });\n  } catch (error) {\n    logger.error('Failed to validate configuration'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-configuration-management.ts",
        "start": 364,
        "end": 376,
        "startLoc": {
          "line": 364,
          "column": 26,
          "position": 3618
        },
        "endLoc": {
          "line": 376,
          "column": 35,
          "position": 3706
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/backup-recovery.ts",
        "start": 312,
        "end": 324,
        "startLoc": {
          "line": 312,
          "column": 33,
          "position": 3099
        },
        "endLoc": {
          "line": 324,
          "column": 42,
          "position": 3187
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Failed to create template'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-configuration-management.ts",
        "start": 466,
        "end": 476,
        "startLoc": {
          "line": 466,
          "column": 5,
          "position": 4428
        },
        "endLoc": {
          "line": 476,
          "column": 28,
          "position": 4508
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/sepa.ts",
        "start": 39,
        "end": 49,
        "startLoc": {
          "line": 39,
          "column": 5,
          "position": 369
        },
        "endLoc": {
          "line": 49,
          "column": 34,
          "position": 450
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Failed to generate configurations from template'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-configuration-management.ts",
        "start": 508,
        "end": 518,
        "startLoc": {
          "line": 508,
          "column": 5,
          "position": 4756
        },
        "endLoc": {
          "line": 518,
          "column": 50,
          "position": 4836
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/sepa.ts",
        "start": 39,
        "end": 49,
        "startLoc": {
          "line": 39,
          "column": 5,
          "position": 369
        },
        "endLoc": {
          "line": 49,
          "column": 34,
          "position": 450
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Failed to create deployment'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-configuration-management.ts",
        "start": 547,
        "end": 557,
        "startLoc": {
          "line": 547,
          "column": 5,
          "position": 5074
        },
        "endLoc": {
          "line": 557,
          "column": 30,
          "position": 5154
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/sepa.ts",
        "start": 39,
        "end": 49,
        "startLoc": {
          "line": 39,
          "column": 5,
          "position": 369
        },
        "endLoc": {
          "line": 49,
          "column": 34,
          "position": 450
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ".length\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Failed to export configurations'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-configuration-management.ts",
        "start": 746,
        "end": 757,
        "startLoc": {
          "line": 746,
          "column": 2,
          "position": 6708
        },
        "endLoc": {
          "line": 757,
          "column": 34,
          "position": 6792
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/centralized-logging.ts",
        "start": 182,
        "end": 49,
        "startLoc": {
          "line": 182,
          "column": 5,
          "position": 2168
        },
        "endLoc": {
          "line": 49,
          "column": 34,
          "position": 450
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "});\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    }\n\n    logger.error('Failed to import configurations'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-configuration-management.ts",
        "start": 792,
        "end": 802,
        "startLoc": {
          "line": 792,
          "column": 5,
          "position": 7065
        },
        "endLoc": {
          "line": 802,
          "column": 34,
          "position": 7145
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/sepa.ts",
        "start": 39,
        "end": 49,
        "startLoc": {
          "line": 39,
          "column": 5,
          "position": 369
        },
        "endLoc": {
          "line": 49,
          "column": 34,
          "position": 450
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ",\n      body: req.body\n    });\n    \n    if (error instanceof z.ZodError) {\n      res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    } else {\n      res.status(500).json({\n        success: false,\n        error: 'Failed to create deployment'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-cicd.ts",
        "start": 107,
        "end": 120,
        "startLoc": {
          "line": 107,
          "column": 24,
          "position": 1046
        },
        "endLoc": {
          "line": 120,
          "column": 30,
          "position": 1147
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/advanced-reporting.ts",
        "start": 94,
        "end": 107,
        "startLoc": {
          "line": 94,
          "column": 16,
          "position": 860
        },
        "endLoc": {
          "line": 107,
          "column": 26,
          "position": 961
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ",\n      body: req.body\n    });\n    \n    if (error instanceof z.ZodError) {\n      res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    } else {\n      res.status(500).json({\n        success: false,\n        error: 'Failed to create artifact'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-cicd.ts",
        "start": 320,
        "end": 333,
        "startLoc": {
          "line": 320,
          "column": 22,
          "position": 2658
        },
        "endLoc": {
          "line": 333,
          "column": 28,
          "position": 2759
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/advanced-reporting.ts",
        "start": 94,
        "end": 107,
        "startLoc": {
          "line": 94,
          "column": 16,
          "position": 860
        },
        "endLoc": {
          "line": 107,
          "column": 26,
          "position": 961
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ",\n      body: req.body\n    });\n    \n    if (error instanceof z.ZodError) {\n      res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    } else {\n      res.status(500).json({\n        success: false,\n        error: 'Failed to record test result'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-cicd.ts",
        "start": 416,
        "end": 429,
        "startLoc": {
          "line": 416,
          "column": 25,
          "position": 3361
        },
        "endLoc": {
          "line": 429,
          "column": 31,
          "position": 3462
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/advanced-reporting.ts",
        "start": 94,
        "end": 107,
        "startLoc": {
          "line": 94,
          "column": 16,
          "position": 860
        },
        "endLoc": {
          "line": 107,
          "column": 26,
          "position": 961
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ",\n      body: req.body\n    });\n    \n    if (error instanceof z.ZodError) {\n      res.status(400).json({\n        success: false,\n        error: 'Validation error',\n        details: error.errors\n      });\n    } else {\n      res.status(500).json({\n        success: false,\n        error: 'Failed to update configuration'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-cicd.ts",
        "start": 513,
        "end": 526,
        "startLoc": {
          "line": 513,
          "column": 12,
          "position": 4113
        },
        "endLoc": {
          "line": 526,
          "column": 33,
          "position": 4214
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/advanced-reporting.ts",
        "start": 94,
        "end": 107,
        "startLoc": {
          "line": 94,
          "column": 16,
          "position": 860
        },
        "endLoc": {
          "line": 107,
          "column": 26,
          "position": 961
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": ".getServiceStats();\n    \n    res.json({\n      success: true,\n      data: stats\n    });\n  } catch (error) {\n    structuredLogger.error('Failed to get service stats', error as Error, {\n      operation: 'stats_get'\n    });\n    \n    res.status(500).json({\n      success: false,\n      error: 'Failed to get service stats'\n    });\n  }\n});\n\n// ============================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-cicd.ts",
        "start": 569,
        "end": 587,
        "startLoc": {
          "line": 569,
          "column": 12,
          "position": 4469
        },
        "endLoc": {
          "line": 587,
          "column": 80,
          "position": 4581
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/advanced-reporting.ts",
        "start": 453,
        "end": 471,
        "startLoc": {
          "line": 453,
          "column": 17,
          "position": 3365
        },
        "endLoc": {
          "line": 471,
          "column": 7,
          "position": 3477
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ": z.string().optional(),\n  limit: z.number().int().min(1).max(1000).default(50),\n  offset: z.number().int().min(0).default(0)\n});\n\nconst AuditReportSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-audit-compliance.ts",
        "start": 70,
        "end": 75,
        "startLoc": {
          "line": 70,
          "column": 7,
          "position": 839
        },
        "endLoc": {
          "line": 75,
          "column": 18,
          "position": 913
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/advanced-audit-compliance.ts",
        "start": 61,
        "end": 66,
        "startLoc": {
          "line": 61,
          "column": 8,
          "position": 708
        },
        "endLoc": {
          "line": 66,
          "column": 23,
          "position": 782
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ", async (req, res) => {\n  const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n\n  try {\n    const eventData",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-audit-compliance.ts",
        "start": 102,
        "end": 107,
        "startLoc": {
          "line": 102,
          "column": 10,
          "position": 1200
        },
        "endLoc": {
          "line": 107,
          "column": 10,
          "position": 1294
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/warmup.ts",
        "start": 31,
        "end": 36,
        "startLoc": {
          "line": 31,
          "column": 10,
          "position": 244
        },
        "endLoc": {
          "line": 36,
          "column": 7,
          "position": 338
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "('/events', async (req, res) => {\n  const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n\n  try {\n    const filters",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-audit-compliance.ts",
        "start": 164,
        "end": 169,
        "startLoc": {
          "line": 164,
          "column": 4,
          "position": 1651
        },
        "endLoc": {
          "line": 169,
          "column": 8,
          "position": 1747
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/advanced-audit-compliance.ts",
        "start": 102,
        "end": 36,
        "startLoc": {
          "line": 102,
          "column": 5,
          "position": 1198
        },
        "endLoc": {
          "line": 36,
          "column": 7,
          "position": 338
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ", async (req, res) => {\n  const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n\n  try {\n    const rules",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-audit-compliance.ts",
        "start": 225,
        "end": 230,
        "startLoc": {
          "line": 225,
          "column": 9,
          "position": 2091
        },
        "endLoc": {
          "line": 230,
          "column": 6,
          "position": 2185
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/warmup.ts",
        "start": 31,
        "end": 36,
        "startLoc": {
          "line": 31,
          "column": 10,
          "position": 244
        },
        "endLoc": {
          "line": 36,
          "column": 7,
          "position": 338
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "('/rules', async (req, res) => {\n  const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n\n  try {\n    const ruleData",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-audit-compliance.ts",
        "start": 267,
        "end": 272,
        "startLoc": {
          "line": 267,
          "column": 5,
          "position": 2397
        },
        "endLoc": {
          "line": 272,
          "column": 9,
          "position": 2493
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/advanced-audit-compliance.ts",
        "start": 225,
        "end": 36,
        "startLoc": {
          "line": 225,
          "column": 4,
          "position": 2089
        },
        "endLoc": {
          "line": 36,
          "column": 7,
          "position": 338
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ", async (req, res) => {\n  const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n\n  try {\n    const filters = ViolationFiltersSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-audit-compliance.ts",
        "start": 328,
        "end": 333,
        "startLoc": {
          "line": 328,
          "column": 14,
          "position": 2843
        },
        "endLoc": {
          "line": 333,
          "column": 23,
          "position": 2941
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/warmup.ts",
        "start": 31,
        "end": 169,
        "startLoc": {
          "line": 31,
          "column": 10,
          "position": 244
        },
        "endLoc": {
          "line": 169,
          "column": 19,
          "position": 1751
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": ",\n        total: result.total,\n        filters,\n        timestamp: new Date().toISOString(),\n        traceId\n      }\n    });\n\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return res.status(400).json({\n        success: false,\n        error: 'Invalid filter parameters',\n        details: error.errors,\n        traceId\n      });\n    }\n\n    structuredLogger.error('Failed to get compliance violations'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-audit-compliance.ts",
        "start": 353,
        "end": 371,
        "startLoc": {
          "line": 353,
          "column": 11,
          "position": 3068
        },
        "endLoc": {
          "line": 371,
          "column": 38,
          "position": 3190
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/advanced-audit-compliance.ts",
        "start": 189,
        "end": 207,
        "startLoc": {
          "line": 189,
          "column": 7,
          "position": 1878
        },
        "endLoc": {
          "line": 207,
          "column": 29,
          "position": 2000
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ", async (req, res) => {\n  const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n\n  try {\n    const reportData",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-audit-compliance.ts",
        "start": 465,
        "end": 470,
        "startLoc": {
          "line": 465,
          "column": 11,
          "position": 3824
        },
        "endLoc": {
          "line": 470,
          "column": 11,
          "position": 3918
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/warmup.ts",
        "start": 31,
        "end": 36,
        "startLoc": {
          "line": 31,
          "column": 10,
          "position": 244
        },
        "endLoc": {
          "line": 36,
          "column": 7,
          "position": 338
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ", async (req, res) => {\n  const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n  const { organizationId } = req.params;\n\n  try {\n    const reports",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-audit-compliance.ts",
        "start": 527,
        "end": 533,
        "startLoc": {
          "line": 527,
          "column": 27,
          "position": 4281
        },
        "endLoc": {
          "line": 533,
          "column": 8,
          "position": 4391
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/warmup.ts",
        "start": 31,
        "end": 147,
        "startLoc": {
          "line": 31,
          "column": 10,
          "position": 244
        },
        "endLoc": {
          "line": 147,
          "column": 6,
          "position": 1205
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ", async (req, res) => {\n  const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n  const { organizationId } = req.params;\n\n  try {\n    const metrics",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-audit-compliance.ts",
        "start": 574,
        "end": 580,
        "startLoc": {
          "line": 574,
          "column": 27,
          "position": 4622
        },
        "endLoc": {
          "line": 580,
          "column": 8,
          "position": 4732
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/warmup.ts",
        "start": 31,
        "end": 147,
        "startLoc": {
          "line": 31,
          "column": 10,
          "position": 244
        },
        "endLoc": {
          "line": 147,
          "column": 6,
          "position": 1205
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "router.get('/health', async (req, res) => {\n  const traceId = `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  const spanId = `span_${Math.random().toString(36).substr(2, 9)}`;\n\n  try {\n    const rules = await advancedAuditComplianceService.getComplianceRules();\n    \n    const",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-audit-compliance.ts",
        "start": 621,
        "end": 628,
        "startLoc": {
          "line": 621,
          "column": 1,
          "position": 4958
        },
        "endLoc": {
          "line": 628,
          "column": 6,
          "position": 5073
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/performance-v2.ts",
        "start": 373,
        "end": 232,
        "startLoc": {
          "line": 373,
          "column": 1,
          "position": 3345
        },
        "endLoc": {
          "line": 232,
          "column": 17,
          "position": 2201
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "}-${new Date().toISOString().split('T')[0]}.${format}`;\n    \n    res.setHeader('Content-Type', contentType);\n    res.setHeader('Content-Disposition', `attachment; filename=\"${filename}\"`);\n    res.send(data);\n  } catch (error) {\n    structuredLogger.error('Failed to export analytics data'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/routes/advanced-analytics.ts",
        "start": 174,
        "end": 180,
        "startLoc": {
          "line": 174,
          "column": 6,
          "position": 1602
        },
        "endLoc": {
          "line": 180,
          "column": 34,
          "position": 1685
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/data-analytics-dashboard.ts",
        "start": 486,
        "end": 492,
        "startLoc": {
          "line": 486,
          "column": 9,
          "position": 4377
        },
        "endLoc": {
          "line": 492,
          "column": 26,
          "position": 4459
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ",\n            content: {\n              'application/json': {\n                schema: {\n                  type: 'object',\n                  properties: {\n                    success: { type: 'boolean', example: true },\n                    data: {\n                      type: 'array',\n                      items: {\n                        type: 'object',\n                        properties: {\n                          id: { type: 'string',",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/openapi/spec.ts",
        "start": 434,
        "end": 446,
        "startLoc": {
          "line": 434,
          "column": 33,
          "position": 3155
        },
        "endLoc": {
          "line": 446,
          "column": 2,
          "position": 3250
        }
      },
      "secondFile": {
        "name": "apps/api/src/openapi/spec.ts",
        "start": 226,
        "end": 238,
        "startLoc": {
          "line": 226,
          "column": 32,
          "position": 1518
        },
        "endLoc": {
          "line": 238,
          "column": 2,
          "position": 1614
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "}\n\n  if (errors.length > 0) {\n    const problemDetails: ProblemDetails = {\n      type: 'https://econeura.com/errors/validation-failed',\n      title: 'Validation Failed',\n      status: 400,\n      detail: 'Request validation failed',\n      instance: req.url,\n      timestamp: new Date().toISOString(),\n      errors: errors\n    };\n\n    res.status(400).json(problemDetails);\n    return;\n  }\n\n  next();\n};",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/middleware/validation.middleware.ts",
        "start": 130,
        "end": 148,
        "startLoc": {
          "line": 130,
          "column": 3,
          "position": 1342
        },
        "endLoc": {
          "line": 148,
          "column": 2,
          "position": 1464
        }
      },
      "secondFile": {
        "name": "apps/api/src/middleware/validation.middleware.ts",
        "start": 66,
        "end": 84,
        "startLoc": {
          "line": 66,
          "column": 3,
          "position": 725
        },
        "endLoc": {
          "line": 84,
          "column": 2,
          "position": 847
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": "= (req: Request, res: Response, next: NextFunction): void => {\n  // Sanitizar body\n  if (req.body && typeof req.body === 'object') {\n    req.body = sanitizeObject(req.body);\n  }\n\n  // Sanitizar query parameters\n  if (req.query && typeof req.query === 'object') {\n    req.query = sanitizeObject(req.query);\n  }\n\n  // Sanitizar params\n  if (req.params && typeof req.params === 'object') {\n    req.params = sanitizeObject(req.params);\n  }\n\n  next();\n};\n\n// ========================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/middleware/security.middleware.ts",
        "start": 85,
        "end": 104,
        "startLoc": {
          "line": 85,
          "column": 2,
          "position": 568
        },
        "endLoc": {
          "line": 104,
          "column": 76,
          "position": 741
        }
      },
      "secondFile": {
        "name": "apps/api/src/middleware/security.ts",
        "start": 107,
        "end": 126,
        "startLoc": {
          "line": 107,
          "column": 2,
          "position": 886
        },
        "endLoc": {
          "line": 126,
          "column": 31,
          "position": 1062
        }
      }
    },
    {
      "format": "typescript",
      "lines": 41,
      "fragment": ": ['GET', 'POST', 'PUT', 'PATCH', 'DELETE', 'OPTIONS', 'HEAD'],\n  allowedHeaders: [\n    'Content-Type',\n    'Authorization',\n    'X-Requested-With',\n    'X-Org-ID',\n    'X-User-ID',\n    'X-Correlation-ID',\n    'X-Tenant-ID',\n    'X-User-Role',\n    'X-Permissions',\n    'X-Session-ID',\n    'X-Request-ID',\n    'X-CSRF-Token',\n    'X-API-Key',\n    'X-Client-Version',\n    'X-Client-Platform',\n    'Accept',\n    'Accept-Language',\n    'Accept-Encoding',\n    'Cache-Control',\n    'Pragma'\n  ],\n  exposedHeaders: [\n    'X-System-Mode',\n    'X-Est-Cost-EUR',\n    'X-Budget-Pct',\n    'X-Latency-ms',\n    'X-Route',\n    'X-RLS-Policies-Applied',\n    'X-RLS-Rules-Evaluated',\n    'X-RLS-Execution-Time',\n    'X-RLS-Tenant-Isolation',\n    'X-RateLimit-Limit',\n    'X-RateLimit-Remaining',\n    'X-RateLimit-Reset',\n    'X-Cache-Status',\n    'X-Response-Time',\n    'X-Request-ID'\n  ],\n  maxAge",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/middleware/security-enhanced.middleware.ts",
        "start": 48,
        "end": 88,
        "startLoc": {
          "line": 48,
          "column": 8,
          "position": 288
        },
        "endLoc": {
          "line": 88,
          "column": 7,
          "position": 472
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/security-config.service.ts",
        "start": 77,
        "end": 117,
        "startLoc": {
          "line": 77,
          "column": 15,
          "position": 449
        },
        "endLoc": {
          "line": 117,
          "column": 12,
          "position": 633
        }
      }
    },
    {
      "format": "typescript",
      "lines": 40,
      "fragment": "\"https://cdn.jsdelivr.net\",\n        \"https://unpkg.com\"\n      ],\n      styleSrc: [\n        \"'self'\",\n        \"'unsafe-inline'\",\n        \"https://fonts.googleapis.com\",\n        \"https://cdn.jsdelivr.net\"\n      ],\n      fontSrc: [\n        \"'self'\",\n        \"https://fonts.gstatic.com\",\n        \"data:\"\n      ],\n      imgSrc: [\n        \"'self'\",\n        \"data:\",\n        \"https:\",\n        \"blob:\"\n      ],\n      connectSrc: [\n        \"'self'\",\n        \"https:\",\n        \"wss:\",\n        \"ws:\"\n      ],\n      mediaSrc: [\n        \"'self'\",\n        \"data:\",\n        \"blob:\"\n      ],\n      objectSrc: [\"'none'\"],\n      baseUri: [\"'self'\"],\n      formAction: [\"'self'\"],\n      frameAncestors: [\"'none'\"],\n      upgradeInsecureRequests: []\n    },\n    reportOnly: false\n  },\n  crossOriginEmbedderPolicy",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/middleware/security-enhanced.middleware.ts",
        "start": 102,
        "end": 141,
        "startLoc": {
          "line": 102,
          "column": 9,
          "position": 549
        },
        "endLoc": {
          "line": 141,
          "column": 26,
          "position": 734
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/security-config.service.ts",
        "start": 128,
        "end": 167,
        "startLoc": {
          "line": 128,
          "column": 15,
          "position": 695
        },
        "endLoc": {
          "line": 167,
          "column": 5,
          "position": 880
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ";\n    \n    const userId = req.headers['x-user-id'] as string || \n                   req.headers['x-subject'] as string;\n    \n    const role = req.headers['x-user-role'] as string || \n                 req.headers['x-role'] as string || \n                 'user';\n    \n    const permissions = req.headers['x-permissions'] as string ? \n                       (req.headers['x-permissions'] as string).split(',') : \n                       [",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/middleware/rls-tenant.middleware.ts",
        "start": 34,
        "end": 45,
        "startLoc": {
          "line": 34,
          "column": 15,
          "position": 244
        },
        "endLoc": {
          "line": 45,
          "column": 2,
          "position": 370
        }
      },
      "secondFile": {
        "name": "apps/api/src/middleware/rls.ts",
        "start": 19,
        "end": 30,
        "startLoc": {
          "line": 19,
          "column": 10,
          "position": 189
        },
        "endLoc": {
          "line": 30,
          "column": 10,
          "position": 315
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "= (maxRequests: number, windowMs: number = 15 * 60 * 1000) => {\n  return rateLimit({\n    windowMs,\n    max: maxRequests,\n    standardHeaders: true,\n    legacyHeaders: false,\n    keyGenerator: (req: Request) => {\n      const orgId = req.headers['x-org-id'] as string;\n      const userId",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/middleware/rate-limit-org.ts",
        "start": 381,
        "end": 389,
        "startLoc": {
          "line": 381,
          "column": 2,
          "position": 3089
        },
        "endLoc": {
          "line": 389,
          "column": 7,
          "position": 3189
        }
      },
      "secondFile": {
        "name": "apps/api/src/middleware/rate-limit-org.ts",
        "start": 349,
        "end": 357,
        "startLoc": {
          "line": 349,
          "column": 2,
          "position": 2806
        },
        "endLoc": {
          "line": 357,
          "column": 9,
          "position": 2906
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ",\n        timestamp: new Date().toISOString()\n      },\n      requestId: req.headers['x-request-id'] as string || `req_${Date.now()}`,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    structuredLogger.error('Failed to get metrics data'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/middleware/metrics.ts",
        "start": 225,
        "end": 232,
        "startLoc": {
          "line": 225,
          "column": 6,
          "position": 1643
        },
        "endLoc": {
          "line": 232,
          "column": 29,
          "position": 1726
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/metrics.ts",
        "start": 53,
        "end": 60,
        "startLoc": {
          "line": 53,
          "column": 14,
          "position": 317
        },
        "endLoc": {
          "line": 60,
          "column": 31,
          "position": 400
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "if (req.gatewayInfo?.serviceId) {\n          apiGateway.recordRequest(req.gatewayInfo.serviceId, responseTime, success);\n        }\n\n        // Decrementar contador de conexiones activas\n        if (req.gatewayInfo?.serviceId) {\n          const service = apiGateway.getService(req.gatewayInfo.serviceId);\n          if (service) {\n            service.currentConnections = Math.max(0, service.currentConnections - 1);\n          }\n        }\n\n        logger",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/middleware/gateway.ts",
        "start": 197,
        "end": 209,
        "startLoc": {
          "line": 197,
          "column": 9,
          "position": 1713
        },
        "endLoc": {
          "line": 209,
          "column": 7,
          "position": 1826
        }
      },
      "secondFile": {
        "name": "apps/api/src/middleware/gateway.ts",
        "start": 149,
        "end": 161,
        "startLoc": {
          "line": 149,
          "column": 9,
          "position": 1296
        },
        "endLoc": {
          "line": 161,
          "column": 22,
          "position": 1409
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ", contextExtractor?: (req: Request) => FeatureFlagContext) => {\n  return (req: FeatureFlagRequest, res: Response, next: NextFunction): void => {\n    try {\n      const context = contextExtractor ? contextExtractor(req) : extractDefaultContext(req);\n      req.featureFlagContext = context;\n\n      const flagResults",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/middleware/feature-flags.ts",
        "start": 117,
        "end": 123,
        "startLoc": {
          "line": 117,
          "column": 2,
          "position": 965
        },
        "endLoc": {
          "line": 123,
          "column": 12,
          "position": 1059
        }
      },
      "secondFile": {
        "name": "apps/api/src/middleware/feature-flags.ts",
        "start": 77,
        "end": 83,
        "startLoc": {
          "line": 77,
          "column": 7,
          "position": 631
        },
        "endLoc": {
          "line": 83,
          "column": 10,
          "position": 725
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "return (req: AuthenticatedRequest, res: Response, next: NextFunction): void => {\n    if (!req.user) {\n      res.status(401).json({\n        error: 'Authentication required',\n        message: 'User must be authenticated',\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    if (!allowedRoles",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/middleware/auth.ts",
        "start": 252,
        "end": 262,
        "startLoc": {
          "line": 252,
          "column": 3,
          "position": 1983
        },
        "endLoc": {
          "line": 262,
          "column": 13,
          "position": 2081
        }
      },
      "secondFile": {
        "name": "apps/api/src/middleware/auth.ts",
        "start": 218,
        "end": 228,
        "startLoc": {
          "line": 218,
          "column": 3,
          "position": 1688
        },
        "endLoc": {
          "line": 228,
          "column": 4,
          "position": 1786
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "(req: AuthenticatedRequest, res: Response, next: NextFunction): void => {\n  if (!req.user) {\n    res.status(401).json({\n      error: 'Authentication required',\n      message: 'User must be authenticated',\n      timestamp: new Date().toISOString()\n    });\n    return;\n  }\n\n  const",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/middleware/auth.ts",
        "start": 283,
        "end": 293,
        "startLoc": {
          "line": 283,
          "column": 2,
          "position": 2241
        },
        "endLoc": {
          "line": 293,
          "column": 6,
          "position": 2333
        }
      },
      "secondFile": {
        "name": "apps/api/src/middleware/auth.ts",
        "start": 218,
        "end": 228,
        "startLoc": {
          "line": 218,
          "column": 2,
          "position": 1690
        },
        "endLoc": {
          "line": 228,
          "column": 3,
          "position": 1782
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "const db = getDatabaseService().getDatabase();\n        const session = await db.select()\n          .from(sessions)\n          .where(and(\n            eq(sessions.id, payload.sessionId),\n            eq(sessions.isActive, true),\n            gte(sessions.expiresAt, new Date())\n          ))\n          .limit(1);\n\n        if (session.length >",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/middleware/auth.ts",
        "start": 337,
        "end": 347,
        "startLoc": {
          "line": 337,
          "column": 9,
          "position": 2719
        },
        "endLoc": {
          "line": 347,
          "column": 2,
          "position": 2825
        }
      },
      "secondFile": {
        "name": "apps/api/src/middleware/auth.ts",
        "start": 74,
        "end": 84,
        "startLoc": {
          "line": 74,
          "column": 5,
          "position": 571
        },
        "endLoc": {
          "line": 84,
          "column": 4,
          "position": 677
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "const userResult = await db.select()\n            .from(users)\n            .innerJoin(organizations, eq(users.organizationId, organizations.id))\n            .where(and(\n              eq(users.id, payload.userId),\n              eq(users.isActive, true)\n            ))\n            .limit(1);\n\n          if (userResult.length >",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/middleware/auth.ts",
        "start": 348,
        "end": 357,
        "startLoc": {
          "line": 348,
          "column": 11,
          "position": 2833
        },
        "endLoc": {
          "line": 357,
          "column": 2,
          "position": 2927
        }
      },
      "secondFile": {
        "name": "apps/api/src/middleware/auth.ts",
        "start": 94,
        "end": 103,
        "startLoc": {
          "line": 94,
          "column": 5,
          "position": 741
        },
        "endLoc": {
          "line": 103,
          "column": 4,
          "position": 835
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ".sessionId),\n        eq(sessions.isActive, true),\n        gte(sessions.expiresAt, new Date())\n      ))\n      .limit(1);\n\n    if (session.length === 0) {\n      res.status(401).json({\n        error: 'Session expired',\n        message: 'Session has expired or been invalidated',\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    // Update last activity",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/middleware/auth.ts",
        "start": 398,
        "end": 413,
        "startLoc": {
          "line": 398,
          "column": 5,
          "position": 3242
        },
        "endLoc": {
          "line": 413,
          "column": 24,
          "position": 3356
        }
      },
      "secondFile": {
        "name": "apps/api/src/middleware/auth.ts",
        "start": 78,
        "end": 93,
        "startLoc": {
          "line": 78,
          "column": 8,
          "position": 624
        },
        "endLoc": {
          "line": 93,
          "column": 20,
          "position": 738
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ") {\n      instance.status = 'completed';\n      instance.completedAt = new Date();\n      instance.updatedAt = new Date();\n      instance.history.push({\n        timestamp: new Date(),\n        action: 'workflow_completed',\n        message: 'Workflow completed successfully',\n      });\n      return;\n    }\n\n    // Encontrar transiciones disponibles",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/workflows.ts",
        "start": 758,
        "end": 770,
        "startLoc": {
          "line": 758,
          "column": 8,
          "position": 7337
        },
        "endLoc": {
          "line": 770,
          "column": 38,
          "position": 7427
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/workflows.ts",
        "start": 703,
        "end": 715,
        "startLoc": {
          "line": 703,
          "column": 11,
          "position": 6856
        },
        "endLoc": {
          "line": 715,
          "column": 32,
          "position": 6946
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "): Promise<Workflow[]> {\n    let workflows = Array.from(this.workflows.values());\n    \n    if (filters?.type) {\n      workflows = workflows.filter(w => w.type === filters.type);\n    }\n    \n    if (filters?.status) {\n      workflows = workflows.filter(w => w.status === filters.status);\n    }\n    \n    return",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/workflows.service.ts",
        "start": 231,
        "end": 242,
        "startLoc": {
          "line": 231,
          "column": 2,
          "position": 2640
        },
        "endLoc": {
          "line": 242,
          "column": 7,
          "position": 2760
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/workflows.ts",
        "start": 284,
        "end": 295,
        "startLoc": {
          "line": 284,
          "column": 16,
          "position": 2751
        },
        "endLoc": {
          "line": 295,
          "column": 3,
          "position": 2868
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", { service, duration });\n      metrics.warmupServiceDuration.observe({ service, status: 'success' }, duration);\n\n    } catch (error) {\n      const duration = Date.now() - startTime;\n      this.results.set(service, {\n        service,\n        status: 'error',\n        duration,\n        error: error instanceof Error ? error.message : String(error)\n      });\n\n      structuredLogger.error('Cache warmup failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/warmup-system.service.ts",
        "start": 202,
        "end": 214,
        "startLoc": {
          "line": 202,
          "column": 25,
          "position": 1527
        },
        "endLoc": {
          "line": 214,
          "column": 22,
          "position": 1655
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/warmup-system.service.ts",
        "start": 161,
        "end": 173,
        "startLoc": {
          "line": 161,
          "column": 28,
          "position": 1178
        },
        "endLoc": {
          "line": 173,
          "column": 25,
          "position": 1306
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", { service, duration });\n      metrics.warmupServiceDuration.observe({ service, status: 'success' }, duration);\n\n    } catch (error) {\n      const duration = Date.now() - startTime;\n      this.results.set(service, {\n        service,\n        status: 'error',\n        duration,\n        error: error instanceof Error ? error.message : String(error)\n      });\n\n      structuredLogger.error('AI Router warmup failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/warmup-system.service.ts",
        "start": 243,
        "end": 255,
        "startLoc": {
          "line": 243,
          "column": 29,
          "position": 1881
        },
        "endLoc": {
          "line": 255,
          "column": 26,
          "position": 2009
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/warmup-system.service.ts",
        "start": 161,
        "end": 173,
        "startLoc": {
          "line": 161,
          "column": 28,
          "position": 1178
        },
        "endLoc": {
          "line": 173,
          "column": 25,
          "position": 1306
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", { service, duration });\n      metrics.warmupServiceDuration.observe({ service, status: 'success' }, duration);\n\n    } catch (error) {\n      const duration = Date.now() - startTime;\n      this.results.set(service, {\n        service,\n        status: 'error',\n        duration,\n        error: error instanceof Error ? error.message : String(error)\n      });\n\n      structuredLogger.error('Analytics warmup failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/warmup-system.service.ts",
        "start": 284,
        "end": 296,
        "startLoc": {
          "line": 284,
          "column": 29,
          "position": 2230
        },
        "endLoc": {
          "line": 296,
          "column": 26,
          "position": 2358
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/warmup-system.service.ts",
        "start": 161,
        "end": 173,
        "startLoc": {
          "line": 161,
          "column": 28,
          "position": 1178
        },
        "endLoc": {
          "line": 173,
          "column": 25,
          "position": 1306
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", { service, duration });\n      metrics.warmupServiceDuration.observe({ service, status: 'success' }, duration);\n\n    } catch (error) {\n      const duration = Date.now() - startTime;\n      this.results.set(service, {\n        service,\n        status: 'error',\n        duration,\n        error: error instanceof Error ? error.message : String(error)\n      });\n\n      structuredLogger.error('Security warmup failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/warmup-system.service.ts",
        "start": 325,
        "end": 337,
        "startLoc": {
          "line": 325,
          "column": 28,
          "position": 2579
        },
        "endLoc": {
          "line": 337,
          "column": 25,
          "position": 2707
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/warmup-system.service.ts",
        "start": 161,
        "end": 173,
        "startLoc": {
          "line": 161,
          "column": 28,
          "position": 1178
        },
        "endLoc": {
          "line": 173,
          "column": 25,
          "position": 1306
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", { service, duration });\n      metrics.warmupServiceDuration.observe({ service, status: 'success' }, duration);\n\n    } catch (error) {\n      const duration = Date.now() - startTime;\n      this.results.set(service, {\n        service,\n        status: 'error',\n        duration,\n        error: error instanceof Error ? error.message : String(error)\n      });\n\n      structuredLogger.error('FinOps warmup failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/warmup-system.service.ts",
        "start": 366,
        "end": 378,
        "startLoc": {
          "line": 366,
          "column": 26,
          "position": 2928
        },
        "endLoc": {
          "line": 378,
          "column": 23,
          "position": 3056
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/warmup-system.service.ts",
        "start": 161,
        "end": 173,
        "startLoc": {
          "line": 161,
          "column": 28,
          "position": 1178
        },
        "endLoc": {
          "line": 173,
          "column": 25,
          "position": 1306
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", { service, duration });\n      metrics.warmupServiceDuration.observe({ service, status: 'success' }, duration);\n\n    } catch (error) {\n      const duration = Date.now() - startTime;\n      this.results.set(service, {\n        service,\n        status: 'error',\n        duration,\n        error: error instanceof Error ? error.message : String(error)\n      });\n\n      structuredLogger.error('Health Monitor warmup failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/warmup-system.service.ts",
        "start": 407,
        "end": 419,
        "startLoc": {
          "line": 407,
          "column": 34,
          "position": 3277
        },
        "endLoc": {
          "line": 419,
          "column": 31,
          "position": 3405
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/warmup-system.service.ts",
        "start": 161,
        "end": 173,
        "startLoc": {
          "line": 161,
          "column": 28,
          "position": 1178
        },
        "endLoc": {
          "line": 173,
          "column": 25,
          "position": 1306
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", { service, duration });\n      metrics.warmupServiceDuration.observe({ service, status: 'success' }, duration);\n\n    } catch (error) {\n      const duration = Date.now() - startTime;\n      this.results.set(service, {\n        service,\n        status: 'error',\n        duration,\n        error: error instanceof Error ? error.message : String(error)\n      });\n\n      structuredLogger.error('Endpoints warmup failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/warmup-system.service.ts",
        "start": 448,
        "end": 460,
        "startLoc": {
          "line": 448,
          "column": 29,
          "position": 3632
        },
        "endLoc": {
          "line": 460,
          "column": 26,
          "position": 3760
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/warmup-system.service.ts",
        "start": 161,
        "end": 173,
        "startLoc": {
          "line": 161,
          "column": 28,
          "position": 1178
        },
        "endLoc": {
          "line": 173,
          "column": 25,
          "position": 1306
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ");\n\n    const startTime = Date.now();\n\n    return handler()\n      .then((result) => {\n        const duration = Date.now() - startTime;\n        this.addTag(context.spanId, 'duration_ms', duration);\n        this.addLog(context.spanId, 'Database query completed successfully'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/tracing.ts",
        "start": 186,
        "end": 194,
        "startLoc": {
          "line": 186,
          "column": 11,
          "position": 1897
        },
        "endLoc": {
          "line": 194,
          "column": 40,
          "position": 1980
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/tracing.ts",
        "start": 157,
        "end": 165,
        "startLoc": {
          "line": 157,
          "column": 5,
          "position": 1568
        },
        "endLoc": {
          "line": 165,
          "column": 36,
          "position": 1651
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ");\n        this.endSpan(context.spanId);\n        return result;\n      })\n      .catch((error) => {\n        const duration = Date.now() - startTime;\n        this.addTag(context.spanId, 'duration_ms', duration);\n        this.addTag(context.spanId, 'error', true);\n        this.addLog(context.spanId, 'Database query failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/tracing.ts",
        "start": 194,
        "end": 202,
        "startLoc": {
          "line": 194,
          "column": 40,
          "position": 1981
        },
        "endLoc": {
          "line": 202,
          "column": 24,
          "position": 2079
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/tracing.ts",
        "start": 165,
        "end": 173,
        "startLoc": {
          "line": 165,
          "column": 36,
          "position": 1652
        },
        "endLoc": {
          "line": 173,
          "column": 20,
          "position": 1750
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ",\n        lastEvaluated: oneMonthAgo.toISOString(),\n        nextEvaluation: new Date(now.getTime() + 30 * 24 * 60 * 60 * 1000).toISOString(),\n        evaluationHistory: []\n      },\n      createdAt: twoMonthsAgo.toISOString(),\n      updatedAt: oneMonthAgo.toISOString()\n    };\n\n    const supplier3",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/supplier-scorecard.service.ts",
        "start": 334,
        "end": 343,
        "startLoc": {
          "line": 334,
          "column": 5,
          "position": 2560
        },
        "endLoc": {
          "line": 343,
          "column": 10,
          "position": 2653
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/supplier-scorecard.service.ts",
        "start": 271,
        "end": 280,
        "startLoc": {
          "line": 271,
          "column": 4,
          "position": 2097
        },
        "endLoc": {
          "line": 280,
          "column": 10,
          "position": 2190
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ",\n        lastEvaluated: oneMonthAgo.toISOString(),\n        nextEvaluation: new Date(now.getTime() + 30 * 24 * 60 * 60 * 1000).toISOString(),\n        evaluationHistory: []\n      },\n      createdAt: twoMonthsAgo.toISOString(),\n      updatedAt: oneMonthAgo.toISOString()\n    };\n\n    this",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/supplier-scorecard.service.ts",
        "start": 397,
        "end": 406,
        "startLoc": {
          "line": 397,
          "column": 5,
          "position": 3027
        },
        "endLoc": {
          "line": 406,
          "column": 5,
          "position": 3118
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/supplier-scorecard.service.ts",
        "start": 271,
        "end": 280,
        "startLoc": {
          "line": 271,
          "column": 4,
          "position": 2097
        },
        "endLoc": {
          "line": 280,
          "column": 6,
          "position": 2188
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "summary = {\n          totalSuppliers: suppliers.length,\n          evaluatedSuppliers: evaluations.length,\n          averageScore: suppliers.reduce((sum, s) => sum + s.scorecard.overallScore, 0) / suppliers.length,\n          topPerformers: suppliers.filter(s => s.scorecard.grade === 'A+' || s.scorecard.grade === 'A').length,\n          underPerformers: suppliers.filter(s => s.scorecard.grade === 'D' || s.scorecard.grade === 'F').length,\n          riskSuppliers: suppliers.filter(s => s.riskAssessment.overallRisk === 'high').length\n        };\n        data = { scoreDistribution",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/supplier-scorecard.service.ts",
        "start": 766,
        "end": 774,
        "startLoc": {
          "line": 766,
          "column": 9,
          "position": 6836
        },
        "endLoc": {
          "line": 774,
          "column": 18,
          "position": 7010
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/supplier-scorecard.service.ts",
        "start": 744,
        "end": 752,
        "startLoc": {
          "line": 744,
          "column": 9,
          "position": 6482
        },
        "endLoc": {
          "line": 752,
          "column": 10,
          "position": 6656
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ");\n        summary = {\n          totalSuppliers: suppliers.length,\n          evaluatedSuppliers: evaluations.length,\n          averageScore: suppliers.reduce((sum, s) => sum + s.scorecard.overallScore, 0) / suppliers.length,\n          topPerformers: suppliers.filter(s => s.scorecard.grade === 'A+' || s.scorecard.grade === 'A').length,\n          underPerformers: suppliers.filter(s => s.scorecard.grade === 'D' || s.scorecard.grade === 'F').length,\n          riskSuppliers: riskSuppliers",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/supplier-scorecard.service.ts",
        "start": 778,
        "end": 785,
        "startLoc": {
          "line": 778,
          "column": 9,
          "position": 7068
        },
        "endLoc": {
          "line": 785,
          "column": 14,
          "position": 7214
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/supplier-scorecard.service.ts",
        "start": 764,
        "end": 750,
        "startLoc": {
          "line": 764,
          "column": 2,
          "position": 6831
        },
        "endLoc": {
          "line": 750,
          "column": 10,
          "position": 6624
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "(),\n  currency: z.string().length(3).default('EUR'),\n  date: z.string().datetime(),\n  valueDate: z.string().datetime(),\n  description: z.string().min(1),\n  reference: z.string().optional(),\n  counterparty: z.object({\n    name: z.string().optional",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/sepa.service.ts",
        "start": 13,
        "end": 20,
        "startLoc": {
          "line": 13,
          "column": 7,
          "position": 134
        },
        "endLoc": {
          "line": 20,
          "column": 9,
          "position": 240
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/sepa-robust.ts",
        "start": 24,
        "end": 31,
        "startLoc": {
          "line": 24,
          "column": 9,
          "position": 345
        },
        "endLoc": {
          "line": 31,
          "column": 4,
          "position": 451
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "().optional(),\n  limit: z.number().min(1).max(100).default(50),\n  offset: z.number().min(0).default(0)\n});\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/sepa.service.ts",
        "start": 61,
        "end": 66,
        "startLoc": {
          "line": 61,
          "column": 7,
          "position": 868
        },
        "endLoc": {
          "line": 66,
          "column": 7,
          "position": 927
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/audit-trail-crm-undo.ts",
        "start": 42,
        "end": 47,
        "startLoc": {
          "line": 42,
          "column": 9,
          "position": 501
        },
        "endLoc": {
          "line": 47,
          "column": 6,
          "position": 560
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ");\n  }\n\n  private createDemoData() {\n    const now = new Date();\n    const oneDayAgo = new Date(now.getTime() - 24 * 60 * 60 * 1000);\n    const twoDaysAgo = new Date(now.getTime() - 2 * 24 * 60 * 60 * 1000);\n\n    // Demo transactions",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/sepa-robust.service.ts",
        "start": 114,
        "end": 122,
        "startLoc": {
          "line": 114,
          "column": 34,
          "position": 889
        },
        "endLoc": {
          "line": 122,
          "column": 21,
          "position": 995
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/stripe-receipts.service.ts",
        "start": 102,
        "end": 109,
        "startLoc": {
          "line": 102,
          "column": 38,
          "position": 728
        },
        "endLoc": {
          "line": 109,
          "column": 6,
          "position": 833
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "= {\n      id: `report_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`,\n      organizationId,\n      reportType: reportType as any,\n      period: { startDate, endDate },\n      summary,\n      data,\n      generatedBy,\n      createdAt: new Date().toISOString()\n    };\n\n    structuredLogger.info('SEPA robust report generated'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/sepa-robust.service.ts",
        "start": 726,
        "end": 737,
        "startLoc": {
          "line": 726,
          "column": 2,
          "position": 6623
        },
        "endLoc": {
          "line": 737,
          "column": 31,
          "position": 6728
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/supplier-scorecard.service.ts",
        "start": 791,
        "end": 802,
        "startLoc": {
          "line": 791,
          "column": 2,
          "position": 7261
        },
        "endLoc": {
          "line": 802,
          "column": 28,
          "position": 7366
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ",\n        transactionsCount: transactions.length,\n        processedCount: transactions.length - errors.length,\n        errorsCount: errors.length,\n        status: errors.length === 0 ? 'success' : errors.length < transactions.length ? 'partial' : 'failed',\n        errors,\n        createdAt: new Date()\n      };\n    } catch (error) {\n      return {\n        fileId: `mt940_error_",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/sepa-parser.service.ts",
        "start": 100,
        "end": 110,
        "startLoc": {
          "line": 100,
          "column": 17,
          "position": 869
        },
        "endLoc": {
          "line": 110,
          "column": 14,
          "position": 979
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/sepa-parser.service.ts",
        "start": 35,
        "end": 45,
        "startLoc": {
          "line": 35,
          "column": 16,
          "position": 313
        },
        "endLoc": {
          "line": 45,
          "column": 13,
          "position": 423
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ".organizationId === organizationId);\n\n    const now = new Date();\n    const last24Hours = new Date(now.getTime() - 24 * 60 * 60 * 1000);\n    const last7Days = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\n\n    return",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/semantic-search-crm.service.ts",
        "start": 763,
        "end": 769,
        "startLoc": {
          "line": 763,
          "column": 2,
          "position": 6434
        },
        "endLoc": {
          "line": 769,
          "column": 7,
          "position": 6534
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/sepa-robust.service.ts",
        "start": 751,
        "end": 757,
        "startLoc": {
          "line": 751,
          "column": 2,
          "position": 6897
        },
        "endLoc": {
          "line": 757,
          "column": 6,
          "position": 6997
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ";\n  category: string;\n  subcategory?: string;\n  tags: string[];\n  metadata: Record<string, any>;\n  ipAddress?: string;\n  userAgent?: string;\n  sessionId?: string;\n  resource?: string;\n  action?: string;\n  result?: SecurityEvent",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/security-types.ts",
        "start": 515,
        "end": 525,
        "startLoc": {
          "line": 515,
          "column": 2,
          "position": 4193
        },
        "endLoc": {
          "line": 525,
          "column": 14,
          "position": 4277
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/security-types.ts",
        "start": 22,
        "end": 32,
        "startLoc": {
          "line": 22,
          "column": 12,
          "position": 145
        },
        "endLoc": {
          "line": 32,
          "column": 10,
          "position": 229
        }
      }
    },
    {
      "format": "typescript",
      "lines": 30,
      "fragment": ",\n        variables: [\n          {\n            id: 'policy_name',\n            name: 'policy_name',\n            type: 'string',\n            required: true,\n            description: 'Name of the policy'\n          },\n          {\n            id: 'schema_name',\n            name: 'schema_name',\n            type: 'string',\n            required: true,\n            description: 'Database schema name'\n          },\n          {\n            id: 'table_name',\n            name: 'table_name',\n            type: 'string',\n            required: true,\n            description: 'Database table name'\n          },\n          {\n            id: 'policy_type',\n            name: 'policy_type',\n            type: 'string',\n            required: true,\n            defaultValue: 'SELECT',\n            description: 'Type of policy'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/rls-policy-generator.service.ts",
        "start": 103,
        "end": 132,
        "startLoc": {
          "line": 103,
          "column": 34,
          "position": 600
        },
        "endLoc": {
          "line": 132,
          "column": 17,
          "position": 773
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/rls-policy-generator.service.ts",
        "start": 33,
        "end": 62,
        "startLoc": {
          "line": 33,
          "column": 38,
          "position": 213
        },
        "endLoc": {
          "line": 62,
          "column": 55,
          "position": 386
        }
      }
    },
    {
      "format": "typescript",
      "lines": 39,
      "fragment": ",\n        variables: [\n          {\n            id: 'policy_name',\n            name: 'policy_name',\n            type: 'string',\n            required: true,\n            description: 'Name of the policy'\n          },\n          {\n            id: 'schema_name',\n            name: 'schema_name',\n            type: 'string',\n            required: true,\n            description: 'Database schema name'\n          },\n          {\n            id: 'table_name',\n            name: 'table_name',\n            type: 'string',\n            required: true,\n            description: 'Database table name'\n          },\n          {\n            id: 'policy_type',\n            name: 'policy_type',\n            type: 'string',\n            required: true,\n            defaultValue: 'SELECT',\n            description: 'Type of policy'\n          },\n          {\n            id: 'roles',\n            name: 'roles',\n            type: 'array',\n            required: true,\n            description: 'Roles that can access this policy'\n          }\n        ]",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/rls-policy-generator.service.ts",
        "start": 181,
        "end": 219,
        "startLoc": {
          "line": 181,
          "column": 59,
          "position": 1035
        },
        "endLoc": {
          "line": 219,
          "column": 2,
          "position": 1255
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/rls-policy-generator.service.ts",
        "start": 33,
        "end": 140,
        "startLoc": {
          "line": 33,
          "column": 38,
          "position": 213
        },
        "endLoc": {
          "line": 140,
          "column": 2,
          "position": 818
        }
      }
    },
    {
      "format": "typescript",
      "lines": 42,
      "fragment": ",\n        variables: [\n          {\n            id: 'policy_name',\n            name: 'policy_name',\n            type: 'string',\n            required: true,\n            description: 'Name of the policy'\n          },\n          {\n            id: 'schema_name',\n            name: 'schema_name',\n            type: 'string',\n            required: true,\n            description: 'Database schema name'\n          },\n          {\n            id: 'table_name',\n            name: 'table_name',\n            type: 'string',\n            required: true,\n            description: 'Database table name'\n          },\n          {\n            id: 'policy_type',\n            name: 'policy_type',\n            type: 'string',\n            required: true,\n            defaultValue: 'SELECT',\n            description: 'Type of policy'\n          },\n          {\n            id: 'roles',\n            name: 'roles',\n            type: 'array',\n            required: true,\n            description: 'Roles that can access this policy'\n          }\n        ],\n        examples: [\n          {\n            id: 'sensitivity_policy_example'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/rls-policy-generator.service.ts",
        "start": 251,
        "end": 292,
        "startLoc": {
          "line": 251,
          "column": 67,
          "position": 1422
        },
        "endLoc": {
          "line": 292,
          "column": 29,
          "position": 1658
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/rls-policy-generator.service.ts",
        "start": 33,
        "end": 222,
        "startLoc": {
          "line": 33,
          "column": 38,
          "position": 213
        },
        "endLoc": {
          "line": 222,
          "column": 21,
          "position": 1271
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "},\n          trends: this.generateSampleTrends(),\n          recommendations: this.generateSampleRecommendations(),\n          budgetStatus: this.generateSampleBudgetStatus(),\n          anomalies: this.generateSampleAnomalies(),\n          forecasts: this.generateSampleForecasts()\n        },\n        generatedAt: new Date(now.getTime() - 2",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/reporting-engine.service.ts",
        "start": 107,
        "end": 114,
        "startLoc": {
          "line": 107,
          "column": 11,
          "position": 818
        },
        "endLoc": {
          "line": 114,
          "column": 2,
          "position": 895
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/reporting-engine.service.ts",
        "start": 65,
        "end": 72,
        "startLoc": {
          "line": 65,
          "column": 11,
          "position": 483
        },
        "endLoc": {
          "line": 72,
          "column": 3,
          "position": 560
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "] = {\n            amount,\n            percentage: (amount / latestReport.data.totalCosts) * 100,\n            trend: Math.random() > 0.5 ? 'up' : 'down'\n          };\n          return acc;\n        }, {} as Record<string, { amount: number; percentage: number; trend: 'up' | 'down' | 'stable' }>),\n        budgetAdherence",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/reporting-engine.service.ts",
        "start": 567,
        "end": 574,
        "startLoc": {
          "line": 567,
          "column": 9,
          "position": 5266
        },
        "endLoc": {
          "line": 574,
          "column": 16,
          "position": 5376
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/reporting-engine.service.ts",
        "start": 559,
        "end": 566,
        "startLoc": {
          "line": 559,
          "column": 8,
          "position": 5120
        },
        "endLoc": {
          "line": 566,
          "column": 16,
          "position": 5230
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "} = data;\n    \n    if (!this.rooms.has(roomId)) {\n      this.sendToConnection(connectionId, {\n        type: 'error',\n        message: 'Room not found',\n        roomId\n      });\n      return;\n    }\n\n    const room = this.rooms.get(roomId)!;\n    this",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/real-time-collaboration.ts",
        "start": 415,
        "end": 427,
        "startLoc": {
          "line": 415,
          "column": 2,
          "position": 3696
        },
        "endLoc": {
          "line": 427,
          "column": 5,
          "position": 3781
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/real-time-collaboration.ts",
        "start": 245,
        "end": 258,
        "startLoc": {
          "line": 245,
          "column": 2,
          "position": 2391
        },
        "endLoc": {
          "line": 258,
          "column": 26,
          "position": 2478
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "{\n  private permissions: Map<string, Permission> = new Map();\n  private roles: Map<string, Role> = new Map();\n  private userRoles: Map<string, UserRole[]> = new Map();\n\n  constructor() {\n    this.initializeDefaultPermissions",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/rbac-granular.ts",
        "start": 38,
        "end": 44,
        "startLoc": {
          "line": 38,
          "column": 2,
          "position": 246
        },
        "endLoc": {
          "line": 44,
          "column": 29,
          "position": 330
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/rbac-simple.ts",
        "start": 23,
        "end": 29,
        "startLoc": {
          "line": 23,
          "column": 2,
          "position": 132
        },
        "endLoc": {
          "line": 29,
          "column": 22,
          "position": 216
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ");\n      return false;\n    }\n  }\n\n  // Check if user has role\n  async hasRole(userId: string, orgId: string, roleName: string): Promise<boolean> {\n    const userRoles = this.getUserRoles(userId, orgId);\n    return userRoles.some(userRole => {\n      const role = this.roles.get(userRole.roleId);\n      return role && role.name === roleName;\n    });\n  }\n\n  // Get user permissions\n  async getUserPermissions(userId: string, orgId: string): Promise<Permission[]> {\n    const userRoles = this.getUserRoles(userId, orgId);\n    return this.getUserPermissionsFromRoles(userRoles);\n  }\n\n  // Create permission",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/rbac-granular.ts",
        "start": 100,
        "end": 120,
        "startLoc": {
          "line": 100,
          "column": 2,
          "position": 760
        },
        "endLoc": {
          "line": 120,
          "column": 21,
          "position": 949
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/rbac-simple.ts",
        "start": 48,
        "end": 68,
        "startLoc": {
          "line": 48,
          "column": 6,
          "position": 379
        },
        "endLoc": {
          "line": 68,
          "column": 18,
          "position": 568
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ");\n  }\n\n  // Create permission\n  async createPermission(permission: Omit<Permission, 'id'>): Promise<string> {\n    const id = `perm_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    const newPermission: Permission = {\n      ...permission,\n      id\n    };\n\n    this.permissions.set(id, newPermission);\n    \n    structuredLogger",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/rbac-granular.ts",
        "start": 117,
        "end": 130,
        "startLoc": {
          "line": 117,
          "column": 10,
          "position": 941
        },
        "endLoc": {
          "line": 130,
          "column": 17,
          "position": 1057
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/rbac-simple.ts",
        "start": 73,
        "end": 81,
        "startLoc": {
          "line": 73,
          "column": 10,
          "position": 662
        },
        "endLoc": {
          "line": 81,
          "column": 7,
          "position": 772
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ");\n  }\n\n  // Get all permissions\n  async getAllPermissions(): Promise<Permission[]> {\n    return Array.from(this.permissions.values());\n  }\n\n  // Get all roles\n  async getAllRoles(): Promise<Role[]> {\n    return Array.from(this.roles.values());\n  }\n\n  // Get user roles",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/rbac-granular.ts",
        "start": 212,
        "end": 225,
        "startLoc": {
          "line": 212,
          "column": 2,
          "position": 1716
        },
        "endLoc": {
          "line": 225,
          "column": 18,
          "position": 1806
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/rbac-simple.ts",
        "start": 98,
        "end": 111,
        "startLoc": {
          "line": 98,
          "column": 14,
          "position": 1010
        },
        "endLoc": {
          "line": 111,
          "column": 26,
          "position": 1100
        }
      }
    },
    {
      "format": "typescript",
      "lines": 28,
      "fragment": ";\n  }\n\n  // Private helper methods\n  private getUserRoles(userId: string, orgId: string): UserRole[] {\n    const key = `${userId}:${orgId}`;\n    return this.userRoles.get(key) || [];\n  }\n\n  private getUserPermissionsFromRoles(userRoles: UserRole[]): Permission[] {\n    const permissions: Permission[] = [];\n    \n    for (const userRole of userRoles) {\n      const role = this.roles.get(userRole.roleId);\n      if (role) {\n        for (const permissionId of role.permissions) {\n          const permission = this.permissions.get(permissionId);\n          if (permission) {\n            permissions.push(permission);\n          }\n        }\n      }\n    }\n    \n    return permissions;\n  }\n\n  private evaluateConditions",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/rbac-granular.ts",
        "start": 251,
        "end": 278,
        "startLoc": {
          "line": 251,
          "column": 2,
          "position": 2130
        },
        "endLoc": {
          "line": 278,
          "column": 19,
          "position": 2363
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/rbac-simple.ts",
        "start": 108,
        "end": 135,
        "startLoc": {
          "line": 108,
          "column": 2,
          "position": 1093
        },
        "endLoc": {
          "line": 135,
          "column": 22,
          "position": 1326
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "getStats(): any {\n    return {\n      totalPermissions: this.permissions.size,\n      totalRoles: this.roles.size,\n      totalUserRoles: Array.from(this.userRoles.values()).flat().length,\n      lastUpdated: new Date().toISOString()\n    };\n  }\n}\n\nexport const granularRBAC",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/rbac-granular.ts",
        "start": 373,
        "end": 383,
        "startLoc": {
          "line": 373,
          "column": 3,
          "position": 3281
        },
        "endLoc": {
          "line": 383,
          "column": 13,
          "position": 3369
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/rbac-simple.ts",
        "start": 180,
        "end": 190,
        "startLoc": {
          "line": 180,
          "column": 3,
          "position": 1706
        },
        "endLoc": {
          "line": 190,
          "column": 11,
          "position": 1794
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "import { structuredLogger } from './structured-logger.js';\n\nexport interface Permission {\n  id: string;\n  name: string;\n  resource: string;\n  action: string;\n}\n\nexport interface Role {\n  id: string;\n  name: string;\n  description: string;\n  permissions: string[];\n}\n\nexport class",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/rbac-basic.ts",
        "start": 1,
        "end": 17,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 17,
          "column": 6,
          "position": 96
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/rbac-simple.ts",
        "start": 1,
        "end": 17,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 17,
          "column": 10,
          "position": 96
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ");\n      return userPermissions.some(permission => \n        permission.resource === resource && permission.action === action\n      );\n    } catch (error) {\n      structuredLogger.error('Error checking permission', error as Error);\n      return false;\n    }\n  }\n\n  // Check if user has role\n  async hasRole(userId: string, orgId: string, roleName: string): Promise<boolean> {\n    // For demo purposes, return true for admin users",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/rbac-basic.ts",
        "start": 40,
        "end": 52,
        "startLoc": {
          "line": 40,
          "column": 6,
          "position": 284
        },
        "endLoc": {
          "line": 52,
          "column": 50,
          "position": 397
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/rbac-simple.ts",
        "start": 42,
        "end": 55,
        "startLoc": {
          "line": 42,
          "column": 10,
          "position": 316
        },
        "endLoc": {
          "line": 55,
          "column": 6,
          "position": 430
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": ");\n  }\n\n  // Create permission\n  async createPermission(permission: Omit<Permission, 'id'>): Promise<string> {\n    const id = `perm_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    const newPermission: Permission = { ...permission, id };\n    this.permissions.set(id, newPermission);\n    return id;\n  }\n\n  // Create role\n  async createRole(role: Omit<Role, 'id'>): Promise<string> {\n    const id = `role_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    const newRole: Role = { ...role, id };\n    this.roles.set(id, newRole);\n    return id;\n  }\n\n  // Assign role to user\n  async assignRole(userId: string, roleId: string, orgId: string): Promise<void> {\n    // Simplified implementation - just log the assignment",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/rbac-basic.ts",
        "start": 81,
        "end": 102,
        "startLoc": {
          "line": 81,
          "column": 7,
          "position": 684
        },
        "endLoc": {
          "line": 102,
          "column": 55,
          "position": 950
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/rbac-simple.ts",
        "start": 73,
        "end": 94,
        "startLoc": {
          "line": 73,
          "column": 10,
          "position": 662
        },
        "endLoc": {
          "line": 94,
          "column": 6,
          "position": 928
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", { userId, roleId, orgId });\n  }\n\n  // Get all permissions\n  async getAllPermissions(): Promise<Permission[]> {\n    return Array.from(this.permissions.values());\n  }\n\n  // Get all roles\n  async getAllRoles(): Promise<Role[]> {\n    return Array.from(this.roles.values());\n  }\n\n  private",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/rbac-basic.ts",
        "start": 103,
        "end": 116,
        "startLoc": {
          "line": 103,
          "column": 16,
          "position": 958
        },
        "endLoc": {
          "line": 116,
          "column": 8,
          "position": 1061
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/rbac-granular.ts",
        "start": 208,
        "end": 111,
        "startLoc": {
          "line": 208,
          "column": 25,
          "position": 1699
        },
        "endLoc": {
          "line": 111,
          "column": 26,
          "position": 1100
        }
      }
    },
    {
      "format": "typescript",
      "lines": 41,
      "fragment": ";\n  }\n\n  private initializeDefaultData(): void {\n    // Create default permissions\n    const defaultPermissions = [\n      { name: 'analytics:read', resource: 'analytics', action: 'read' },\n      { name: 'analytics:write', resource: 'analytics', action: 'write' },\n      { name: 'security:read', resource: 'security', action: 'read' },\n      { name: 'security:write', resource: 'security', action: 'write' },\n      { name: 'finops:read', resource: 'finops', action: 'read' },\n      { name: 'finops:write', resource: 'finops', action: 'write' },\n      { name: 'admin:all', resource: '*', action: '*' }\n    ];\n\n    defaultPermissions.forEach(permission => {\n      this.createPermission(permission);\n    });\n\n    // Create default roles\n    const defaultRoles = [\n      {\n        name: 'admin',\n        description: 'System administrator',\n        permissions: ['admin:all']\n      },\n      {\n        name: 'analyst',\n        description: 'Data analyst',\n        permissions: ['analytics:read']\n      },\n      {\n        name: 'security_officer',\n        description: 'Security officer',\n        permissions: ['security:read', 'security:write']\n      },\n      {\n        name: 'finance_manager',\n        description: 'Finance manager',\n        permissions: ['finops:read', 'finops:write']\n      },",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/rbac-basic.ts",
        "start": 113,
        "end": 153,
        "startLoc": {
          "line": 113,
          "column": 2,
          "position": 1054
        },
        "endLoc": {
          "line": 153,
          "column": 2,
          "position": 1407
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/rbac-simple.ts",
        "start": 132,
        "end": 173,
        "startLoc": {
          "line": 132,
          "column": 12,
          "position": 1317
        },
        "endLoc": {
          "line": 173,
          "column": 2,
          "position": 1672
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "> = new Map();\n  private slowQueries: Array<{query: string, time: number, timestamp: number}> = [];\n  private isOptimizing = false;\n  private optimizationInterval: NodeJS.Timeout | null = null;\n\n  private constructor() {\n    this.config = this.getDefaultConfig();\n    this.startOptimization",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/performance-optimizer.service.ts",
        "start": 73,
        "end": 80,
        "startLoc": {
          "line": 73,
          "column": 4,
          "position": 460
        },
        "endLoc": {
          "line": 80,
          "column": 18,
          "position": 561
        }
      },
      "secondFile": {
        "name": "apps/api/src/db/optimization/database-optimizer.service.ts",
        "start": 75,
        "end": 82,
        "startLoc": {
          "line": 75,
          "column": 18,
          "position": 514
        },
        "endLoc": {
          "line": 82,
          "column": 25,
          "position": 615
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "public async optimizeQuery(\n    query: string,\n    params: any[] = []\n  ): Promise<QueryOptimization> {\n    const startTime = Date.now();\n    \n    try {\n      // Verificar caché de consultas\n      const cacheKey = this.generateQueryCacheKey(query, params);\n      const cachedResult = this.queryCache.get(cacheKey);\n      \n      if (cachedResult && this.isQueryCacheValid(cachedResult)) {\n        return {",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/performance-optimizer.service.ts",
        "start": 191,
        "end": 203,
        "startLoc": {
          "line": 191,
          "column": 3,
          "position": 1303
        },
        "endLoc": {
          "line": 203,
          "column": 2,
          "position": 1423
        }
      },
      "secondFile": {
        "name": "apps/api/src/db/optimization/database-optimizer.service.ts",
        "start": 407,
        "end": 416,
        "startLoc": {
          "line": 407,
          "column": 3,
          "position": 2578
        },
        "endLoc": {
          "line": 416,
          "column": 13,
          "position": 2693
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "private generateQueryCacheKey(query: string, params: any[]): string {\n    const normalizedQuery = query.replace(/\\s+/g, ' ').trim();\n    const paramsHash = JSON.stringify(params);\n    return `${normalizedQuery}:${paramsHash}`;\n  }\n\n  /**\n   * Verifica si el caché de consulta es válido\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/performance-optimizer.service.ts",
        "start": 359,
        "end": 367,
        "startLoc": {
          "line": 359,
          "column": 3,
          "position": 2518
        },
        "endLoc": {
          "line": 367,
          "column": 6,
          "position": 2597
        }
      },
      "secondFile": {
        "name": "apps/api/src/db/optimization/database-optimizer.service.ts",
        "start": 687,
        "end": 693,
        "startLoc": {
          "line": 687,
          "column": 3,
          "position": 4815
        },
        "endLoc": {
          "line": 693,
          "column": 8,
          "position": 4894
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "time: executionTime,\n      timestamp: Date.now()\n    });\n\n    // Mantener solo las últimas 100 consultas lentas\n    if (this.slowQueries.length > 100) {\n      this.slowQueries = this.slowQueries.slice(-100);\n    }\n\n    structuredLogger.warn('Slow query detected', {\n      query: query.substring(0, 200),\n      executionTime,\n      threshold: this.config.queryOptimization",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/performance-optimizer.service.ts",
        "start": 401,
        "end": 413,
        "startLoc": {
          "line": 401,
          "column": 7,
          "position": 2906
        },
        "endLoc": {
          "line": 413,
          "column": 18,
          "position": 3007
        }
      },
      "secondFile": {
        "name": "apps/api/src/db/optimization/database-optimizer.service.ts",
        "start": 715,
        "end": 727,
        "startLoc": {
          "line": 715,
          "column": 7,
          "position": 5220
        },
        "endLoc": {
          "line": 727,
          "column": 19,
          "position": 5321
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "let cleanedCount = 0;\n\n    for (const [key, value] of this.queryCache.entries()) {\n      if (!this.isQueryCacheValid(value)) {\n        this.queryCache.delete(key);\n        cleanedCount++;\n      }\n    }\n\n    if (cleanedCount > 0) {\n      structuredLogger.debug('Cache cleanup completed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/performance-optimizer.service.ts",
        "start": 489,
        "end": 499,
        "startLoc": {
          "line": 489,
          "column": 5,
          "position": 3482
        },
        "endLoc": {
          "line": 499,
          "column": 26,
          "position": 3574
        }
      },
      "secondFile": {
        "name": "apps/api/src/db/optimization/database-optimizer.service.ts",
        "start": 769,
        "end": 779,
        "startLoc": {
          "line": 769,
          "column": 5,
          "position": 5622
        },
        "endLoc": {
          "line": 779,
          "column": 32,
          "position": 5714
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "private analyzeSlowQueries(): void {\n    if (this.slowQueries.length === 0) return;\n\n    const recentSlowQueries = this.slowQueries.filter(\n      q => (Date.now() - q.timestamp) < 3600000 // Última hora\n    );\n\n    if (recentSlowQueries.length > 10) {\n      structuredLogger.warn('High number of slow queries detected', {\n        count: recentSlowQueries.length,\n        threshold: 10\n      });\n    }\n  }\n\n  /**\n   * Optimiza uso de memoria\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/performance-optimizer.service.ts",
        "start": 506,
        "end": 523,
        "startLoc": {
          "line": 506,
          "column": 3,
          "position": 3596
        },
        "endLoc": {
          "line": 523,
          "column": 6,
          "position": 3723
        }
      },
      "secondFile": {
        "name": "apps/api/src/db/optimization/database-optimizer.service.ts",
        "start": 783,
        "end": 800,
        "startLoc": {
          "line": 783,
          "column": 3,
          "position": 5733
        },
        "endLoc": {
          "line": 800,
          "column": 6,
          "position": 5860
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "heapTotal: Math.round(memUsage.heapTotal / 1024 / 1024),\n        heapUsed: Math.round(memUsage.heapUsed / 1024 / 1024),\n        external: Math.round(memUsage.external / 1024 / 1024),\n        arrayBuffers: Math.round(memUsage.arrayBuffers / 1024 / 1024)\n      },\n      cpuUsage: {\n        user: cpuUsage.user / 1000000,\n        system",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/performance-optimizer-v2.service.ts",
        "start": 197,
        "end": 204,
        "startLoc": {
          "line": 197,
          "column": 9,
          "position": 1333
        },
        "endLoc": {
          "line": 204,
          "column": 7,
          "position": 1443
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/performance-optimizer-v2.service.ts",
        "start": 128,
        "end": 134,
        "startLoc": {
          "line": 128,
          "column": 9,
          "position": 835
        },
        "endLoc": {
          "line": 134,
          "column": 11,
          "position": 944
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "],\n        availability: [\n          { dayOfWeek: 0, startTime: '00:00', endTime: '23:59', timezone: 'UTC' },\n          { dayOfWeek: 1, startTime: '00:00', endTime: '23:59', timezone: 'UTC' },\n          { dayOfWeek: 2, startTime: '00:00', endTime: '23:59', timezone: 'UTC' },\n          { dayOfWeek: 3, startTime: '00:00', endTime: '23:59', timezone: 'UTC' },\n          { dayOfWeek: 4, startTime: '00:00', endTime: '23:59', timezone: 'UTC' },\n          { dayOfWeek: 5, startTime: '00:00', endTime: '23:59', timezone: 'UTC' },\n          { dayOfWeek: 6, startTime: '00:00', endTime: '23:59', timezone: 'UTC' }\n        ]\n      }\n    ]",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/oncall.service.ts",
        "start": 336,
        "end": 347,
        "startLoc": {
          "line": 336,
          "column": 26,
          "position": 2736
        },
        "endLoc": {
          "line": 347,
          "column": 2,
          "position": 2954
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/oncall.service.ts",
        "start": 319,
        "end": 329,
        "startLoc": {
          "line": 319,
          "column": 24,
          "position": 2471
        },
        "endLoc": {
          "line": 329,
          "column": 2,
          "position": 2687
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ") {\n      if (!rule.enabled) continue;\n\n      try {\n        const shouldTrigger = await this.evaluateRule(rule);\n        \n        if (shouldTrigger) {\n          await this.triggerAlert(rule);\n        } else {\n          await this.resolveAlert(ruleId);\n        }\n      } catch (error) {\n        structuredLogger",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/monitoring-alerts.service.ts",
        "start": 336,
        "end": 348,
        "startLoc": {
          "line": 336,
          "column": 2,
          "position": 2485
        },
        "endLoc": {
          "line": 348,
          "column": 17,
          "position": 2580
        }
      },
      "secondFile": {
        "name": "apps/api/src/infrastructure/observability/alerting.service.ts",
        "start": 319,
        "end": 331,
        "startLoc": {
          "line": 319,
          "column": 11,
          "position": 2515
        },
        "endLoc": {
          "line": 331,
          "column": 5,
          "position": 2610
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "): boolean {\n    switch (condition.operator) {\n      case 'gt':\n        return value > condition.threshold;\n      case 'lt':\n        return value < condition.threshold;\n      case 'eq':\n        return value === condition.threshold;\n      case 'gte':\n        return value >= condition.threshold;\n      case 'lte':\n        return value <= condition.threshold;\n      case",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/monitoring-alerts.service.ts",
        "start": 395,
        "end": 407,
        "startLoc": {
          "line": 395,
          "column": 15,
          "position": 3069
        },
        "endLoc": {
          "line": 407,
          "column": 5,
          "position": 3178
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/ai-performance-optimization.service.ts",
        "start": 542,
        "end": 549,
        "startLoc": {
          "line": 542,
          "column": 7,
          "position": 4429
        },
        "endLoc": {
          "line": 549,
          "column": 8,
          "position": 4533
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "{\n      total: this.config.maxMemoryMB,\n      used: Math.round(memUsage.rss / 1024 / 1024),\n      free: this.config.maxMemoryMB - Math.round(memUsage.rss / 1024 / 1024),\n      heap: {\n        total: Math.round(memUsage.heapTotal / 1024 / 1024),\n        used: Math.round(memUsage.heapUsed / 1024 / 1024),\n        free: Math.round((memUsage.heapTotal - memUsage.heapUsed) / 1024 / 1024),\n        external: Math.round(memUsage.external / 1024 / 1024),\n        arrayBuffers: Math.round(memUsage.arrayBuffers / 1024 / 1024)\n      },\n      rss: Math.round(memUsage.rss / 1024 / 1024),\n      external: Math.round(memUsage.external / 1024 / 1024),\n      arrayBuffers: Math.round(memUsage.arrayBuffers / 1024 / 1024),\n      gc: {\n        major: this",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/memory-manager.service.ts",
        "start": 234,
        "end": 249,
        "startLoc": {
          "line": 234,
          "column": 2,
          "position": 1771
        },
        "endLoc": {
          "line": 249,
          "column": 5,
          "position": 2039
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/memory-manager.service.ts",
        "start": 129,
        "end": 144,
        "startLoc": {
          "line": 129,
          "column": 2,
          "position": 891
        },
        "endLoc": {
          "line": 144,
          "column": 2,
          "position": 1159
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ";\n  }\n\n  deleteRule(ruleId: string): boolean {\n    const ruleIndex = this.rules.findIndex(rule => rule.id === ruleId);\n    if (ruleIndex === -1) return false;\n\n    this.rules.splice(ruleIndex, 1);\n    return true;\n  }\n\n  getRules",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/matching-engine.service.ts",
        "start": 199,
        "end": 210,
        "startLoc": {
          "line": 199,
          "column": 5,
          "position": 1782
        },
        "endLoc": {
          "line": 210,
          "column": 9,
          "position": 1872
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/rule-engine.service.ts",
        "start": 156,
        "end": 167,
        "startLoc": {
          "line": 156,
          "column": 2,
          "position": 1124
        },
        "endLoc": {
          "line": 167,
          "column": 8,
          "position": 1214
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ");\n  }\n\n  private createDemoData() {\n    const now = new Date();\n    const oneDayAgo = new Date(now.getTime() - 24 * 60 * 60 * 1000);\n    const twoDaysAgo = new Date(now.getTime() - 2 * 24 * 60 * 60 * 1000);\n    const threeDaysAgo = new Date(now.getTime() - 3 * 24 * 60 * 60 * 1000);\n\n    // Demo products",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/inventory-kardex.service.ts",
        "start": 132,
        "end": 141,
        "startLoc": {
          "line": 132,
          "column": 39,
          "position": 1020
        },
        "endLoc": {
          "line": 141,
          "column": 17,
          "position": 1165
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/stripe-receipts.service.ts",
        "start": 102,
        "end": 111,
        "startLoc": {
          "line": 102,
          "column": 38,
          "position": 728
        },
        "endLoc": {
          "line": 111,
          "column": 17,
          "position": 873
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "= {\n      id: `report_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`,\n      organizationId,\n      reportType: reportType as any,\n      period: { startDate, endDate },\n      summary,\n      data,\n      generatedBy,\n      createdAt: new Date().toISOString()\n    };\n\n    structuredLogger.info('Inventory report generated'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/inventory-kardex.service.ts",
        "start": 873,
        "end": 884,
        "startLoc": {
          "line": 873,
          "column": 2,
          "position": 8043
        },
        "endLoc": {
          "line": 884,
          "column": 29,
          "position": 8148
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/supplier-scorecard.service.ts",
        "start": 791,
        "end": 802,
        "startLoc": {
          "line": 791,
          "column": 2,
          "position": 7261
        },
        "endLoc": {
          "line": 802,
          "column": 28,
          "position": 7366
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ".organizationId === organizationId);\n\n    const now = new Date();\n    const last30Days = new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000);\n    const last7Days = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\n\n    const recentMovements",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/inventory-kardex.service.ts",
        "start": 899,
        "end": 905,
        "startLoc": {
          "line": 899,
          "column": 2,
          "position": 8353
        },
        "endLoc": {
          "line": 905,
          "column": 16,
          "position": 8459
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/stripe-receipts.service.ts",
        "start": 562,
        "end": 568,
        "startLoc": {
          "line": 562,
          "column": 2,
          "position": 5255
        },
        "endLoc": {
          "line": 568,
          "column": 15,
          "position": 5361
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "a.isActive).length,\n      lowStockItems: stockLevels.filter(s => {\n        const product = this.products.get(s.productId);\n        return product && s.currentStock <= product.minStock;\n      }).length,\n      overstockItems: stockLevels.filter(s => {\n        const product = this.products.get(s.productId);\n        return product && s.currentStock >= product.maxStock;\n      }).length,",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/inventory-kardex.service.ts",
        "start": 912,
        "end": 920,
        "startLoc": {
          "line": 912,
          "column": 2,
          "position": 8575
        },
        "endLoc": {
          "line": 920,
          "column": 2,
          "position": 8697
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/inventory-kardex.service.ts",
        "start": 810,
        "end": 819,
        "startLoc": {
          "line": 810,
          "column": 2,
          "position": 7391
        },
        "endLoc": {
          "line": 819,
          "column": 2,
          "position": 7515
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ";\n      for (let i = 6; i >= 0; i--) {\n        const date = new Date(now.getTime() - i * 24 * 60 * 60 * 1000);\n        const dayStart = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n        const dayEnd = new Date(dayStart.getTime() + 24 * 60 * 60 * 1000);\n        \n        const count = interactions",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/interactions.service.ts",
        "start": 454,
        "end": 460,
        "startLoc": {
          "line": 454,
          "column": 2,
          "position": 4758
        },
        "endLoc": {
          "line": 460,
          "column": 13,
          "position": 4902
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/sepa.service.ts",
        "start": 692,
        "end": 698,
        "startLoc": {
          "line": 692,
          "column": 2,
          "position": 7033
        },
        "endLoc": {
          "line": 698,
          "column": 13,
          "position": 7177
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ",\n          period: 'monthly',\n          trend: 'increasing',\n          changePercentage: Math.random() * 20 - 10,\n          confidence: 0.8 + Math.random() * 0.2,\n          forecast: [],\n          seasonality: {\n            hasSeasonality: false,\n            period: 0,\n            strength: 0,\n            pattern: []\n          },\n          anomalies: [],\n          organizationId: 'sample'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/intelligent-reporting.service.ts",
        "start": 536,
        "end": 549,
        "startLoc": {
          "line": 536,
          "column": 3,
          "position": 4765
        },
        "endLoc": {
          "line": 549,
          "column": 9,
          "position": 4877
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/intelligent-reporting.service.ts",
        "start": 205,
        "end": 218,
        "startLoc": {
          "line": 205,
          "column": 9,
          "position": 1684
        },
        "endLoc": {
          "line": 218,
          "column": 7,
          "position": 1796
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ".filter(task => {\n      if (task.status === 'completed' || task.status === 'cancelled') return false;\n      const createdAt = new Date(task.createdAt);\n      const hoursElapsed = (now.getTime() - createdAt.getTime()) / (1000 * 60 * 60);\n      return hoursElapsed > task.slaHours;\n    }).length;\n\n    const slaCompliance",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/hitl-v2.service.ts",
        "start": 590,
        "end": 597,
        "startLoc": {
          "line": 590,
          "column": 9,
          "position": 5344
        },
        "endLoc": {
          "line": 597,
          "column": 14,
          "position": 5459
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/hitl-v2.service.ts",
        "start": 529,
        "end": 536,
        "startLoc": {
          "line": 529,
          "column": 6,
          "position": 4532
        },
        "endLoc": {
          "line": 536,
          "column": 15,
          "position": 4647
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "async getLivenessProbe(): Promise<{ status: string; timestamp: string }> {\n    return {\n      status: 'alive',\n      timestamp: new Date().toISOString()\n    };\n  }\n\n  async getReadinessProbe(): Promise<{ status: string; timestamp: string; checks: HealthCheck",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/health-monitor.ts",
        "start": 398,
        "end": 405,
        "startLoc": {
          "line": 398,
          "column": 3,
          "position": 3479
        },
        "endLoc": {
          "line": 405,
          "column": 12,
          "position": 3567
        }
      },
      "secondFile": {
        "name": "apps/api/src/infrastructure/observability/health.service.ts",
        "start": 443,
        "end": 450,
        "startLoc": {
          "line": 443,
          "column": 3,
          "position": 3359
        },
        "endLoc": {
          "line": 450,
          "column": 7,
          "position": 3447
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "(messageId: string): Promise<boolean> {\n    const message = this.outbox.get(messageId);\n    \n    if (!message) {\n      throw new Error(`Message not found in outbox: ${messageId}`);\n    }\n\n    if (message.status !== 'pending') {\n      throw new Error(`Message cannot be cancelled: ",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/graph-wrappers.service.ts",
        "start": 580,
        "end": 588,
        "startLoc": {
          "line": 580,
          "column": 20,
          "position": 4403
        },
        "endLoc": {
          "line": 588,
          "column": 31,
          "position": 4488
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/graph-wrappers.service.ts",
        "start": 551,
        "end": 559,
        "startLoc": {
          "line": 551,
          "column": 18,
          "position": 4187
        },
        "endLoc": {
          "line": 559,
          "column": 36,
          "position": 4272
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "const metricId = widget.config?.metricId || 'default';\n    const baseValue = this.getBaseValueForMetric(metricId);\n    \n    return {\n      value: baseValue + (Math.random() - 0.5) * baseValue * 0.1,\n      unit: this.getUnitForMetric(metricId),\n      min",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/executive-dashboard.service.ts",
        "start": 441,
        "end": 447,
        "startLoc": {
          "line": 441,
          "column": 5,
          "position": 3985
        },
        "endLoc": {
          "line": 447,
          "column": 4,
          "position": 4067
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/executive-dashboard.service.ts",
        "start": 353,
        "end": 359,
        "startLoc": {
          "line": 353,
          "column": 5,
          "position": 3151
        },
        "endLoc": {
          "line": 359,
          "column": 6,
          "position": 3233
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ";\n    \n    if (fromTimestamp) {\n      events = events.filter(event => event.timestamp >= fromTimestamp);\n    }\n\n    return events.sort((a, b) => a.timestamp.getTime() - b.timestamp.getTime());\n  }\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/events.ts",
        "start": 159,
        "end": 167,
        "startLoc": {
          "line": 159,
          "column": 2,
          "position": 1454
        },
        "endLoc": {
          "line": 167,
          "column": 2,
          "position": 1533
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/events.ts",
        "start": 149,
        "end": 158,
        "startLoc": {
          "line": 149,
          "column": 7,
          "position": 1321
        },
        "endLoc": {
          "line": 158,
          "column": 6,
          "position": 1402
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "(): void {\n    const now = new Date();\n    const oneHourAgo = new Date(now.getTime() - 60 * 60 * 1000);\n    const oneDayAgo = new Date(now.getTime() - 24 * 60 * 60 * 1000);\n\n    this.errorStats",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/error-manager.service.ts",
        "start": 493,
        "end": 498,
        "startLoc": {
          "line": 493,
          "column": 17,
          "position": 4276
        },
        "endLoc": {
          "line": 498,
          "column": 11,
          "position": 4368
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/security-manager.service.ts",
        "start": 573,
        "end": 578,
        "startLoc": {
          "line": 573,
          "column": 20,
          "position": 5252
        },
        "endLoc": {
          "line": 578,
          "column": 14,
          "position": 5344
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "const dealsByStage = deals.reduce((acc, deal) => {\n        acc[deal.stage] = (acc[deal.stage] || 0) + 1;\n        return acc;\n      }, {} as Record<string, number>);\n\n      // Distribución por status",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/deals.service.ts",
        "start": 453,
        "end": 458,
        "startLoc": {
          "line": 453,
          "column": 7,
          "position": 4475
        },
        "endLoc": {
          "line": 458,
          "column": 27,
          "position": 4551
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/deals.ts",
        "start": 455,
        "end": 460,
        "startLoc": {
          "line": 455,
          "column": 5,
          "position": 3830
        },
        "endLoc": {
          "line": 460,
          "column": 6,
          "position": 3906
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "const dealsByStatus = deals.reduce((acc, deal) => {\n        acc[deal.status] = (acc[deal.status] || 0) + 1;\n        return acc;\n      }, {} as Record<string, number>);\n\n      // Deals por mes (últimos 12 meses)",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/deals.service.ts",
        "start": 459,
        "end": 464,
        "startLoc": {
          "line": 459,
          "column": 7,
          "position": 4554
        },
        "endLoc": {
          "line": 464,
          "column": 36,
          "position": 4630
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/deals.ts",
        "start": 460,
        "end": 465,
        "startLoc": {
          "line": 460,
          "column": 5,
          "position": 3906
        },
        "endLoc": {
          "line": 465,
          "column": 6,
          "position": 3982
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ");\n\n      // Deals por mes (últimos 12 meses)\n      const dealsByMonth = [];\n      for (let i = 11; i >= 0; i--) {\n        const date = new Date(currentYear, currentMonth - i, 1);\n        const monthKey = date.toISOString().substring(0, 7); // YYYY-MM",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/deals.service.ts",
        "start": 462,
        "end": 468,
        "startLoc": {
          "line": 462,
          "column": 2,
          "position": 4625
        },
        "endLoc": {
          "line": 468,
          "column": 11,
          "position": 4716
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/deals.ts",
        "start": 519,
        "end": 527,
        "startLoc": {
          "line": 519,
          "column": 2,
          "position": 4385
        },
        "endLoc": {
          "line": 527,
          "column": 6,
          "position": 4479
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ");\n          return dealDate.getFullYear() === date.getFullYear() && \n                 dealDate.getMonth() === date.getMonth();\n        });\n\n        dealsByMonth.push({\n          month: monthKey,\n          count: monthDeals.length,\n          value: monthDeals.reduce((sum, deal) => sum + deal",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/deals.service.ts",
        "start": 471,
        "end": 479,
        "startLoc": {
          "line": 471,
          "column": 2,
          "position": 4752
        },
        "endLoc": {
          "line": 479,
          "column": 5,
          "position": 4841
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/deals.ts",
        "start": 528,
        "end": 536,
        "startLoc": {
          "line": 528,
          "column": 10,
          "position": 4509
        },
        "endLoc": {
          "line": 536,
          "column": 2,
          "position": 4598
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ");\n\n      // Actividad reciente (últimos 7 días)\n      const recentActivity = [];\n      for (let i = 6; i >= 0; i--) {\n        const date = new Date(now.getTime() - i * 24 * 60 * 60 * 1000);\n        const dayStart = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n        const dayEnd = new Date(dayStart.getTime() + 24 * 60 * 60 * 1000);\n        \n        const count = deals",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/deals.service.ts",
        "start": 583,
        "end": 592,
        "startLoc": {
          "line": 583,
          "column": 14,
          "position": 5823
        },
        "endLoc": {
          "line": 592,
          "column": 6,
          "position": 5983
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/interactions.service.ts",
        "start": 451,
        "end": 698,
        "startLoc": {
          "line": 451,
          "column": 2,
          "position": 4742
        },
        "endLoc": {
          "line": 698,
          "column": 13,
          "position": 7177
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ";\n  }>): Promise<{ updated: number; failed: number; errors: string[] }> {\n    try {\n      let updated = 0;\n      let failed = 0;\n      const errors: string[] = [];\n\n      for (const update of updates) {\n        try {\n          const result = await this.updateDeal",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/deals.service.ts",
        "start": 639,
        "end": 648,
        "startLoc": {
          "line": 639,
          "column": 11,
          "position": 6363
        },
        "endLoc": {
          "line": 648,
          "column": 11,
          "position": 6472
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/interactions.service.ts",
        "start": 587,
        "end": 596,
        "startLoc": {
          "line": 587,
          "column": 2,
          "position": 5978
        },
        "endLoc": {
          "line": 596,
          "column": 18,
          "position": 6087
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ") {\n            updated++;\n          } else {\n            failed++;\n            errors.push(`Deal ${update.id} not found or access denied`);\n          }\n        } catch (error) {\n          failed++;\n          errors.push(`Failed to update deal ${update.id}: ${(error as Error).message}`);\n        }\n      }\n\n      logger",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/deals.service.ts",
        "start": 649,
        "end": 661,
        "startLoc": {
          "line": 649,
          "column": 7,
          "position": 6496
        },
        "endLoc": {
          "line": 661,
          "column": 7,
          "position": 6584
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/deals.ts",
        "start": 625,
        "end": 637,
        "startLoc": {
          "line": 625,
          "column": 12,
          "position": 5490
        },
        "endLoc": {
          "line": 637,
          "column": 4,
          "position": 5578
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "${update.id}: ${(error as Error).message}`);\n        }\n      }\n\n      logger.info('Bulk update completed', {\n        orgId,\n        userId,\n        updated,\n        failed,\n        total: updates.length\n      });\n\n      return { updated, failed, errors };\n    } catch (error) {\n      logger.error('Failed to bulk update deals'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/deals.service.ts",
        "start": 657,
        "end": 671,
        "startLoc": {
          "line": 657,
          "column": 24,
          "position": 6557
        },
        "endLoc": {
          "line": 671,
          "column": 30,
          "position": 6655
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/interactions.service.ts",
        "start": 605,
        "end": 619,
        "startLoc": {
          "line": 605,
          "column": 31,
          "position": 6172
        },
        "endLoc": {
          "line": 619,
          "column": 37,
          "position": 6270
        }
      }
    },
    {
      "format": "typescript",
      "lines": 27,
      "fragment": "config = {\n      enabled: true,\n      modelVersion: 'v1.0',\n      confidenceThreshold: 0.7,\n      maxRecommendations: 5,\n      expirationHours: 24,\n      factors: {\n        dealValue: 0.15,\n        stage: 0.20,\n        timeInStage: 0.10,\n        ownerExperience: 0.12,\n        companySize: 0.08,\n        industry: 0.10,\n        seasonality: 0.05,\n        competitorActivity: 0.08,\n        lastActivity: 0.07,\n        marketConditions: 0.05\n      },\n      actions: {\n        call: { enabled: true, weight: 0.25 },\n        email: { enabled: true, weight: 0.20 },\n        meeting: { enabled: true, weight: 0.20 },\n        proposal: { enabled: true, weight: 0.15 },\n        follow_up: { enabled: true, weight: 0.10 },\n        negotiation: { enabled: true, weight: 0.05 },\n        close: { enabled: true, weight: 0.05 }\n      },",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/deals-nba.service.ts",
        "start": 112,
        "end": 138,
        "startLoc": {
          "line": 112,
          "column": 2,
          "position": 897
        },
        "endLoc": {
          "line": 138,
          "column": 2,
          "position": 1164
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/deals-nba.ts",
        "start": 327,
        "end": 354,
        "startLoc": {
          "line": 327,
          "column": 2,
          "position": 2654
        },
        "endLoc": {
          "line": 354,
          "column": 2,
          "position": 2923
        }
      }
    },
    {
      "format": "typescript",
      "lines": 31,
      "fragment": "const CreateDashboardSchema = z.object({\n  name: z.string().min(1).max(100),\n  description: z.string().max(500).optional(),\n  layout: z.object({\n    columns: z.number().min(1).max(12).default(4),\n    rows: z.number().min(1).max(20).default(10),\n    responsive: z.boolean().default(true),\n    theme: z.enum(['light', 'dark', 'auto']).default('auto')\n  }),\n  filters: z.array(z.object({\n    field: z.string(),\n    label: z.string(),\n    type: z.enum(['select', 'multiselect', 'date', 'daterange', 'number', 'text']),\n    options: z.array(z.string()).optional(),\n    defaultValue: z.any().optional(),\n    isRequired: z.boolean().default(false),\n    validation: z.object({\n      min: z.number().optional(),\n      max: z.number().optional(),\n      pattern: z.string().optional()\n    }).optional()\n  })).default([]),\n  permissions: z.object({\n    isPublic: z.boolean().default(false),\n    allowedUsers: z.array(z.string()).default([]),\n    allowedRoles: z.array(z.string()).default([])\n  }),\n  tags: z.array(z.string()).default([])\n});\n\nconst CreateWidgetSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/data-analytics-dashboard.service.ts",
        "start": 190,
        "end": 220,
        "startLoc": {
          "line": 190,
          "column": 1,
          "position": 1356
        },
        "endLoc": {
          "line": 220,
          "column": 19,
          "position": 1808
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/data-analytics-dashboard.ts",
        "start": 16,
        "end": 46,
        "startLoc": {
          "line": 16,
          "column": 5,
          "position": 123
        },
        "endLoc": {
          "line": 46,
          "column": 14,
          "position": 577
        }
      }
    },
    {
      "format": "typescript",
      "lines": 31,
      "fragment": ";\n\nconst CreateWidgetSchema = z.object({\n  type: z.enum(['chart', 'metric', 'table', 'gauge', 'map', 'heatmap', 'trend']),\n  title: z.string().min(1).max(100),\n  description: z.string().max(500).optional(),\n  dataSource: z.string(),\n  configuration: z.object({\n    chartType: z.enum(['line', 'bar', 'pie', 'area', 'scatter', 'doughnut']).optional(),\n    metrics: z.array(z.string()),\n    dimensions: z.array(z.string()).optional(),\n    filters: z.record(z.any()).optional(),\n    timeRange: z.string().optional(),\n    refreshInterval: z.number().optional(),\n    colors: z.array(z.string()).optional(),\n    showLegend: z.boolean().optional(),\n    showDataLabels: z.boolean().optional(),\n    yAxisLabel: z.string().optional(),\n    xAxisLabel: z.string().optional()\n  }),\n  position: z.object({\n    x: z.number().min(0),\n    y: z.number().min(0),\n    width: z.number().min(1).max(12),\n    height: z.number().min(1).max(20)\n  }),\n  isVisible: z.boolean().default(true),\n  isEditable: z.boolean().default(true)\n});\n\nconst CreateAlertSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/data-analytics-dashboard.service.ts",
        "start": 218,
        "end": 248,
        "startLoc": {
          "line": 218,
          "column": 2,
          "position": 1803
        },
        "endLoc": {
          "line": 248,
          "column": 18,
          "position": 2241
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/data-analytics-dashboard.ts",
        "start": 200,
        "end": 229,
        "startLoc": {
          "line": 200,
          "column": 3,
          "position": 1842
        },
        "endLoc": {
          "line": 229,
          "column": 11,
          "position": 2282
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ";\n\nconst CreateAlertSchema = z.object({\n  name: z.string().min(1).max(100),\n  description: z.string().max(500).optional(),\n  metric: z.string(),\n  condition: z.object({\n    operator: z.enum(['greater_than', 'less_than', 'equals', 'not_equals', 'contains']),\n    value: z.union([z.number(), z.string()]),\n    threshold: z.number()\n  }),\n  severity: z.enum(['low', 'medium', 'high', 'critical']),\n  recipients: z.array(z.string())\n});\n\n// ============================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/data-analytics-dashboard.service.ts",
        "start": 246,
        "end": 261,
        "startLoc": {
          "line": 246,
          "column": 2,
          "position": 2236
        },
        "endLoc": {
          "line": 261,
          "column": 80,
          "position": 2422
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/data-analytics-dashboard.ts",
        "start": 507,
        "end": 521,
        "startLoc": {
          "line": 507,
          "column": 11,
          "position": 4563
        },
        "endLoc": {
          "line": 521,
          "column": 6,
          "position": 4751
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ";\n    isPublic?: boolean;\n  }): Promise<Dashboard[]> {\n    let dashboards = Array.from(this.dashboards.values())\n      .filter(d => d.organizationId === organizationId);\n\n    if (filters) {\n      if (filters.isActive",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/data-analytics-dashboard.service.ts",
        "start": 317,
        "end": 324,
        "startLoc": {
          "line": 317,
          "column": 2,
          "position": 2893
        },
        "endLoc": {
          "line": 324,
          "column": 9,
          "position": 2971
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/executive-dashboard.service.ts",
        "start": 102,
        "end": 109,
        "startLoc": {
          "line": 102,
          "column": 8,
          "position": 716
        },
        "endLoc": {
          "line": 109,
          "column": 5,
          "position": 794
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ">): Promise<Dashboard | null> {\n    const dashboard = this.dashboards.get(dashboardId);\n    if (!dashboard) return null;\n\n    const updatedDashboard: Dashboard = {\n      ...dashboard,\n      ...updates,\n      updatedAt: new Date()\n    };\n\n    this.dashboards.set(dashboardId, updatedDashboard);\n\n    structuredLogger",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/data-analytics-dashboard.service.ts",
        "start": 340,
        "end": 352,
        "startLoc": {
          "line": 340,
          "column": 10,
          "position": 3150
        },
        "endLoc": {
          "line": 352,
          "column": 17,
          "position": 3249
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/executive-dashboard.service.ts",
        "start": 75,
        "end": 87,
        "startLoc": {
          "line": 75,
          "column": 23,
          "position": 491
        },
        "endLoc": {
          "line": 87,
          "column": 36,
          "position": 590
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "= z.object({\n  'csp-report': z.object({\n    'document-uri': z.string(),\n    'referrer': z.string().optional(),\n    'violated-directive': z.string(),\n    'effective-directive': z.string().optional(),\n    'original-policy': z.string(),\n    'disposition': z.enum(['enforce', 'report']),\n    'blocked-uri': z.string().optional(),\n    'line-number': z.number().optional(),\n    'column-number': z.number().optional(),\n    'source-file': z.string().optional(),\n    'status-code': z.number().optional(),\n    'script-sample': z.string().optional(),\n  })\n});\n\nconst",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/csp-sri-banking.service.ts",
        "start": 5,
        "end": 22,
        "startLoc": {
          "line": 5,
          "column": 2,
          "position": 33
        },
        "endLoc": {
          "line": 22,
          "column": 6,
          "position": 230
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/csp-sri-banking.ts",
        "start": 9,
        "end": 26,
        "startLoc": {
          "line": 9,
          "column": 2,
          "position": 77
        },
        "endLoc": {
          "line": 26,
          "column": 42,
          "position": 274
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "= z.object({\n  'sri-report': z.object({\n    'document-uri': z.string(),\n    'referrer': z.string().optional(),\n    'blocked-uri': z.string(),\n    'violation-type': z.enum(['integrity-mismatch', 'missing-integrity', 'invalid-integrity']),\n    'expected-hash': z.string().optional(),\n    'actual-hash': z.string().optional(),\n    'algorithm': z.enum(['sha256', 'sha384', 'sha512']).optional(),\n  })\n});\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/csp-sri-banking.service.ts",
        "start": 22,
        "end": 34,
        "startLoc": {
          "line": 22,
          "column": 2,
          "position": 234
        },
        "endLoc": {
          "line": 34,
          "column": 7,
          "position": 372
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/csp-sri-banking.ts",
        "start": 27,
        "end": 39,
        "startLoc": {
          "line": 27,
          "column": 2,
          "position": 280
        },
        "endLoc": {
          "line": 39,
          "column": 35,
          "position": 418
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "for (let i = 29; i >= 0; i--) {\n      const date = new Date(now.getTime() - i * 24 * 60 * 60 * 1000);\n      const baseAmount = 100 + Math.random() * 50;\n      \n      trends.push({\n        date,\n        amount: baseAmount,\n        service: 'compute',\n        category: 'compute'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/cost-tracker.service.ts",
        "start": 96,
        "end": 104,
        "startLoc": {
          "line": 96,
          "column": 5,
          "position": 799
        },
        "endLoc": {
          "line": 104,
          "column": 10,
          "position": 916
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/reporting-engine.service.ts",
        "start": 135,
        "end": 143,
        "startLoc": {
          "line": 135,
          "column": 5,
          "position": 1044
        },
        "endLoc": {
          "line": 143,
          "column": 17,
          "position": 1161
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "for (let i = 0; i < contacts.length; i++) {\n          for (let j = i + 1; j < contacts.length; j++) {\n            const contact1 = contacts[i];\n            const contact2 = contacts[j];\n\n            duplicates",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/contacts-dedupe.service.ts",
        "start": 212,
        "end": 217,
        "startLoc": {
          "line": 212,
          "column": 9,
          "position": 1622
        },
        "endLoc": {
          "line": 217,
          "column": 11,
          "position": 1709
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/contacts-dedupe.service.ts",
        "start": 172,
        "end": 177,
        "startLoc": {
          "line": 172,
          "column": 5,
          "position": 1220
        },
        "endLoc": {
          "line": 177,
          "column": 3,
          "position": 1307
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ") {\n      if (contacts.length > 1) {\n        for (let i = 0; i < contacts.length; i++) {\n          for (let j = i + 1; j < contacts.length; j++) {\n            const contact1 = contacts[i];\n            const contact2 = contacts[j];\n\n            duplicates.push({\n              contactId: contact1.id,\n              duplicateId: contact2.id,\n              confidence: 0.9",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/contacts-dedupe.service.ts",
        "start": 249,
        "end": 259,
        "startLoc": {
          "line": 249,
          "column": 9,
          "position": 1980
        },
        "endLoc": {
          "line": 259,
          "column": 4,
          "position": 2115
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/contacts-dedupe.service.ts",
        "start": 210,
        "end": 220,
        "startLoc": {
          "line": 210,
          "column": 9,
          "position": 1602
        },
        "endLoc": {
          "line": 220,
          "column": 5,
          "position": 1737
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "(): Promise<DuplicateMatch[]> {\n    const duplicates: DuplicateMatch[] = [];\n    const contacts = Array.from(this.contacts.values());\n\n    for (let i = 0; i < contacts.length; i++) {\n      for (let j = i + 1; j < contacts.length; j++) {\n        const contact1 = contacts[i];\n        const contact2 = contacts[j];\n\n        const",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/contacts-dedupe.service.ts",
        "start": 343,
        "end": 352,
        "startLoc": {
          "line": 343,
          "column": 20,
          "position": 2805
        },
        "endLoc": {
          "line": 352,
          "column": 6,
          "position": 2944
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/contacts-dedupe.service.ts",
        "start": 168,
        "end": 177,
        "startLoc": {
          "line": 168,
          "column": 20,
          "position": 1168
        },
        "endLoc": {
          "line": 177,
          "column": 3,
          "position": 1307
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "for (let i = 0; i < contacts.length; i++) {\n      for (let j = i + 1; j < contacts.length; j++) {\n        const contact1 = contacts[i];\n        const contact2 = contacts[j];\n\n        const mlScore",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/contacts-dedupe.service.ts",
        "start": 376,
        "end": 381,
        "startLoc": {
          "line": 376,
          "column": 5,
          "position": 3144
        },
        "endLoc": {
          "line": 381,
          "column": 8,
          "position": 3233
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/contacts-dedupe.service.ts",
        "start": 172,
        "end": 352,
        "startLoc": {
          "line": 172,
          "column": 5,
          "position": 1220
        },
        "endLoc": {
          "line": 352,
          "column": 11,
          "position": 2946
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "{\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      const char = str.charCodeAt(i);\n      hash = ((hash << 5) - hash) + char;\n      hash = hash & hash; // Convert to 32-bit integer\n    }\n    return Math.abs(hash);",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/configuration.service.ts",
        "start": 447,
        "end": 454,
        "startLoc": {
          "line": 447,
          "column": 2,
          "position": 4266
        },
        "endLoc": {
          "line": 454,
          "column": 2,
          "position": 4371
        }
      },
      "secondFile": {
        "name": "apps/api/src/services/sentiment-analysis.service.ts",
        "start": 247,
        "end": 254,
        "startLoc": {
          "line": 247,
          "column": 2,
          "position": 2162
        },
        "endLoc": {
          "line": 254,
          "column": 2,
          "position": 2267
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "| null> {\n    const requirement = this.requirements.get(requirementId);\n    if (!requirement) return null;\n\n    const controlIndex = requirement.controls.findIndex(c => c.id === controlId);\n    if (controlIndex === -1) return null;\n\n    const newTestResult",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/compliance-management.service.ts",
        "start": 246,
        "end": 253,
        "startLoc": {
          "line": 246,
          "column": 2,
          "position": 2165
        },
        "endLoc": {
          "line": 253,
          "column": 14,
          "position": 2251
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/compliance-management.service.ts",
        "start": 227,
        "end": 234,
        "startLoc": {
          "line": 227,
          "column": 2,
          "position": 1965
        },
        "endLoc": {
          "line": 234,
          "column": 15,
          "position": 2051
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "[] = [];\n    \n    const criticalFindings = findings.filter(f => f.severity === 'critical');\n    const highFindings = findings.filter(f => f.severity === 'high');\n    \n    if (criticalFindings.length > 0) {\n      recommendations.push(`Address ",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/compliance-management.service.ts",
        "start": 428,
        "end": 434,
        "startLoc": {
          "line": 428,
          "column": 7,
          "position": 3796
        },
        "endLoc": {
          "line": 434,
          "column": 10,
          "position": 3879
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/comprehensive-audit.service.ts",
        "start": 513,
        "end": 519,
        "startLoc": {
          "line": 513,
          "column": 20,
          "position": 4718
        },
        "endLoc": {
          "line": 519,
          "column": 2,
          "position": 4799
        }
      }
    },
    {
      "format": "typescript",
      "lines": 27,
      "fragment": "),\n  context: z.record(z.any()).optional(),\n  metadata: z.record(z.any()).optional(),\n  userId: z.string().optional(),\n  organizationId: z.string().optional(),\n  requestId: z.string().optional(),\n  sessionId: z.string().optional(),\n  correlationId: z.string().optional(),\n  tags: z.array(z.string()).optional(),\n  source: z.string().optional(),\n  hostname: z.string().optional(),\n  pid: z.number().optional(),\n  version: z.string().optional()\n});\n\nconst LogQuerySchema = z.object({\n  level: z.enum(['DEBUG', 'INFO', 'WARN', 'ERROR', 'FATAL']).optional(),\n  service: z.string().optional(),\n  environment: z.string().optional(),\n  userId: z.string().optional(),\n  organizationId: z.string().optional(),\n  requestId: z.string().optional(),\n  sessionId: z.string().optional(),\n  correlationId: z.string().optional(),\n  tags: z.array(z.string()).optional(),\n  source: z.string().optional(),\n  startTime: z.coerce",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/centralized-logging.service.ts",
        "start": 37,
        "end": 63,
        "startLoc": {
          "line": 37,
          "column": 2,
          "position": 424
        },
        "endLoc": {
          "line": 63,
          "column": 7,
          "position": 814
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/centralized-logging.ts",
        "start": 41,
        "end": 67,
        "startLoc": {
          "line": 41,
          "column": 2,
          "position": 333
        },
        "endLoc": {
          "line": 67,
          "column": 7,
          "position": 723
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "().optional(),\n  message: z.string().optional(),\n  limit: z.number().min(1).max(10000).optional(),\n  offset: z.number().min(0).optional(),\n  sort: z.enum(['timestamp', 'level', 'service']).optional(),\n  order: z.enum(['asc', 'desc']).optional()\n});\n\nconst LogAggregationSchema = z.object({\n  groupBy: z.array(z.enum(['level', 'service', 'environment', 'userId', 'organizationId', 'source', 'tags'])),\n  timeRange: z.object({\n    start: z.coerce",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/centralized-logging.service.ts",
        "start": 64,
        "end": 75,
        "startLoc": {
          "line": 64,
          "column": 5,
          "position": 834
        },
        "endLoc": {
          "line": 75,
          "column": 7,
          "position": 1016
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/centralized-logging.ts",
        "start": 68,
        "end": 79,
        "startLoc": {
          "line": 68,
          "column": 7,
          "position": 739
        },
        "endLoc": {
          "line": 79,
          "column": 7,
          "position": 921
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "()\n  }),\n  interval: z.enum(['1m', '5m', '15m', '1h', '6h', '1d']).optional(),\n  filters: z.record(z.any()).optional()\n});\n\nconst LogAlertRuleSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/centralized-logging.service.ts",
        "start": 76,
        "end": 82,
        "startLoc": {
          "line": 76,
          "column": 5,
          "position": 1032
        },
        "endLoc": {
          "line": 82,
          "column": 19,
          "position": 1099
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/centralized-logging.ts",
        "start": 80,
        "end": 86,
        "startLoc": {
          "line": 80,
          "column": 7,
          "position": 933
        },
        "endLoc": {
          "line": 86,
          "column": 22,
          "position": 1000
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "(),\n  actions: z.array(z.object({\n    type: z.enum(['EMAIL', 'SLACK', 'WEBHOOK', 'SMS']),\n    config: z.record(z.any())\n  }))\n});\n\nconst LogRetentionPolicySchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/centralized-logging.service.ts",
        "start": 92,
        "end": 99,
        "startLoc": {
          "line": 92,
          "column": 8,
          "position": 1256
        },
        "endLoc": {
          "line": 99,
          "column": 25,
          "position": 1324
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/centralized-logging.ts",
        "start": 95,
        "end": 102,
        "startLoc": {
          "line": 95,
          "column": 9,
          "position": 1161
        },
        "endLoc": {
          "line": 102,
          "column": 28,
          "position": 1229
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "),\n  service: z.string().optional(),\n  environment: z.string().optional(),\n  level: z.enum(['DEBUG', 'INFO', 'WARN', 'ERROR', 'FATAL']).optional(),\n  retentionDays: z.number().min(1),\n  enabled: z.boolean(),",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/centralized-logging.service.ts",
        "start": 102,
        "end": 107,
        "startLoc": {
          "line": 102,
          "column": 2,
          "position": 1364
        },
        "endLoc": {
          "line": 107,
          "column": 2,
          "position": 1452
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/centralized-logging.ts",
        "start": 104,
        "end": 109,
        "startLoc": {
          "line": 104,
          "column": 2,
          "position": 1268
        },
        "endLoc": {
          "line": 109,
          "column": 2,
          "position": 1356
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ",\n          properties: {\n            service: logEntry.service,\n            environment: logEntry.environment,\n            userId: logEntry.userId,\n            organizationId: logEntry.organizationId,\n            requestId: logEntry.requestId,\n            correlationId: logEntry.correlationId,\n            ...logEntry.context,\n            ...logEntry.metadata\n          }\n        });\n      }\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/centralized-logging.service.ts",
        "start": 601,
        "end": 614,
        "startLoc": {
          "line": 601,
          "column": 6,
          "position": 6283
        },
        "endLoc": {
          "line": 614,
          "column": 2,
          "position": 6370
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/centralized-logging.service.ts",
        "start": 586,
        "end": 598,
        "startLoc": {
          "line": 586,
          "column": 2,
          "position": 6170
        },
        "endLoc": {
          "line": 598,
          "column": 5,
          "position": 6256
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "{\n        '@timestamp': logEntry.timestamp.toISOString(),\n        level: logEntry.level,\n        message: logEntry.message,\n        service: logEntry.service,\n        environment: logEntry.environment,\n        context: logEntry.context,\n        metadata: logEntry.metadata,\n        userId: logEntry.userId,\n        organizationId: logEntry.organizationId,\n        requestId: logEntry.requestId,\n        sessionId: logEntry.sessionId,\n        correlationId: logEntry.correlationId,\n        tags: logEntry.tags,\n        source: logEntry.source,\n        hostname: logEntry.hostname,\n        pid: logEntry.pid,\n        version: logEntry.version\n      })",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/centralized-logging.service.ts",
        "start": 657,
        "end": 675,
        "startLoc": {
          "line": 657,
          "column": 2,
          "position": 6798
        },
        "endLoc": {
          "line": 675,
          "column": 2,
          "position": 6958
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/centralized-logging.service.ts",
        "start": 623,
        "end": 642,
        "startLoc": {
          "line": 623,
          "column": 2,
          "position": 6475
        },
        "endLoc": {
          "line": 642,
          "column": 2,
          "position": 6637
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ".reduce((acc, log) => {\n        const existing = acc.find(item => item.message === log.message);\n        if (existing) {\n          existing.count++;\n        } else {\n          acc.push({ message: log.message, count: 1 });\n        }\n        return acc;\n      }, [] as Array<{ message: string; count: number }>)\n      .sort((a, b) => b.count - a.count)\n      .slice(0, 10);\n\n    const serviceBreakdown",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/centralized-logging.service.ts",
        "start": 799,
        "end": 811,
        "startLoc": {
          "line": 799,
          "column": 7,
          "position": 8441
        },
        "endLoc": {
          "line": 811,
          "column": 17,
          "position": 8605
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/centralized-logging.service.ts",
        "start": 741,
        "end": 753,
        "startLoc": {
          "line": 741,
          "column": 10,
          "position": 7695
        },
        "endLoc": {
          "line": 753,
          "column": 10,
          "position": 7859
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ");\n\n    const now = new Date();\n    const last24Hours = new Date(now.getTime() - 24 * 60 * 60 * 1000);\n    const last7Days = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\n\n    return {\n      // Estadísticas generales\n      totalPipelines",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/blue-green-deployment.service.ts",
        "start": 777,
        "end": 785,
        "startLoc": {
          "line": 777,
          "column": 2,
          "position": 6556
        },
        "endLoc": {
          "line": 785,
          "column": 15,
          "position": 6658
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/sepa-robust.service.ts",
        "start": 751,
        "end": 771,
        "startLoc": {
          "line": 751,
          "column": 15,
          "position": 6903
        },
        "endLoc": {
          "line": 771,
          "column": 15,
          "position": 6542
        }
      }
    },
    {
      "format": "typescript",
      "lines": 35,
      "fragment": "name: z.string().min(1).max(100),\n  description: z.string().max(500).optional(),\n  type: z.enum(['database', 'files', 'configuration', 'full', 'incremental']),\n  source: z.object({\n    type: z.enum(['database', 'filesystem', 'api', 'config']),\n    path: z.string().optional(),\n    connectionString: z.string().optional(),\n    tables: z.array(z.string()).optional(),\n    includeData: z.boolean().default(true),\n    includeSchema: z.boolean().default(true)\n  }),\n  destination: z.object({\n    type: z.enum(['local', 'azure_blob', 's3', 'ftp', 'sftp']),\n    path: z.string(),\n    credentials: z.record(z.string(), z.string()).optional(),\n    compression: z.boolean().default(true),\n    encryption: z.boolean().default(true)\n  }),\n  schedule: z.object({\n    enabled: z.boolean().default(false),\n    cron: z.string().optional(),\n    timezone: z.string().default('UTC'),\n    retention: z.object({\n      days: z.number().min(1).max(365).default(30),\n      maxBackups: z.number().min(1).max(1000).default(100)\n    })\n  }),\n  filters: z.object({\n    include: z.array(z.string()).default([]),\n    exclude: z.array(z.string()).default([]),\n    maxFileSize: z.number().optional(),\n    fileTypes: z.array(z.string()).optional()\n  }).optional(),\n  isActive: z.boolean().default(true),\n  createdAt",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/backup-recovery.service.ts",
        "start": 10,
        "end": 44,
        "startLoc": {
          "line": 10,
          "column": 3,
          "position": 100
        },
        "endLoc": {
          "line": 44,
          "column": 10,
          "position": 636
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/backup-recovery.ts",
        "start": 10,
        "end": 44,
        "startLoc": {
          "line": 10,
          "column": 3,
          "position": 80
        },
        "endLoc": {
          "line": 44,
          "column": 10,
          "position": 616
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ": z.string(),\n  target: z.object({\n    type: z.enum(['database', 'filesystem', 'api']),\n    path: z.string().optional(),\n    connectionString: z.string().optional(),\n    tables: z.array(z.string()).optional()\n  }),\n  options: z.object({\n    overwrite: z.boolean().default(false),\n    verify: z.boolean().default(true),\n    restoreSchema: z.boolean().default(true),\n    restoreData: z.boolean().default(true)\n  }),\n  status",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/backup-recovery.service.ts",
        "start": 68,
        "end": 81,
        "startLoc": {
          "line": 68,
          "column": 9,
          "position": 975
        },
        "endLoc": {
          "line": 81,
          "column": 7,
          "position": 1147
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/backup-recovery.ts",
        "start": 92,
        "end": 105,
        "startLoc": {
          "line": 92,
          "column": 12,
          "position": 1298
        },
        "endLoc": {
          "line": 105,
          "column": 7,
          "position": 1470
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ": z.number().optional(),\n  error: z.string().optional(),\n  metadata: z.record(z.string(), z.any()).optional(),\n  createdAt: z.date().optional(),\n  createdBy: z.string().optional()\n});\n\n// Tipos",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/backup-recovery.service.ts",
        "start": 84,
        "end": 91,
        "startLoc": {
          "line": 84,
          "column": 9,
          "position": 1204
        },
        "endLoc": {
          "line": 91,
          "column": 9,
          "position": 1293
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/backup-recovery.service.ts",
        "start": 59,
        "end": 66,
        "startLoc": {
          "line": 59,
          "column": 11,
          "position": 851
        },
        "endLoc": {
          "line": 66,
          "column": 7,
          "position": 940
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": ";\n\n    let data = mockData;\n    \n    // Aplicar compresión si está habilitada\n    if (config.destination.compression) {\n      data = this.compressData(data);\n    }\n\n    // Aplicar encriptación si está habilitada\n    if (config.destination.encryption) {\n      data = this.encryptData(data);\n    }\n\n    await fs.writeFile(backupPath, data);\n\n    return {\n      size: Buffer.byteLength(data),\n      filesCount,",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/backup-recovery.service.ts",
        "start": 586,
        "end": 604,
        "startLoc": {
          "line": 586,
          "column": 8,
          "position": 5397
        },
        "endLoc": {
          "line": 604,
          "column": 2,
          "position": 5512
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/backup-recovery.service.ts",
        "start": 530,
        "end": 548,
        "startLoc": {
          "line": 530,
          "column": 51,
          "position": 4964
        },
        "endLoc": {
          "line": 548,
          "column": 2,
          "position": 5079
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ";\n    \n    // Aplicar compresión si está habilitada\n    if (config.destination.compression) {\n      data = this.compressData(data);\n    }\n\n    // Aplicar encriptación si está habilitada\n    if (config.destination.encryption) {\n      data = this.encryptData(data);\n    }\n\n    await fs.writeFile(backupPath, data);\n\n    return {\n      size: Buffer.byteLength(data),\n      filesCount: 1,\n      metadata: {\n        backupPath,\n        environment",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/backup-recovery.service.ts",
        "start": 640,
        "end": 659,
        "startLoc": {
          "line": 640,
          "column": 2,
          "position": 5843
        },
        "endLoc": {
          "line": 659,
          "column": 12,
          "position": 5963
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/backup-recovery.service.ts",
        "start": 532,
        "end": 551,
        "startLoc": {
          "line": 532,
          "column": 9,
          "position": 4975
        },
        "endLoc": {
          "line": 551,
          "column": 7,
          "position": 5095
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "});\n\n    } catch (error) {\n      job.status = 'failed';\n      job.endTime = new Date();\n      job.duration = job.endTime.getTime() - job.startTime!.getTime();\n      job.error = error instanceof Error ? error.message : 'Unknown error';\n\n      logger.error('Recovery job failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/backup-recovery.service.ts",
        "start": 813,
        "end": 821,
        "startLoc": {
          "line": 813,
          "column": 7,
          "position": 7410
        },
        "endLoc": {
          "line": 821,
          "column": 22,
          "position": 7507
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/backup-recovery.service.ts",
        "start": 502,
        "end": 510,
        "startLoc": {
          "line": 502,
          "column": 7,
          "position": 4686
        },
        "endLoc": {
          "line": 510,
          "column": 20,
          "position": 4783
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "&& j.status === 'running');\n      \n      if (job) {\n        job.status = 'failed';\n        job.endTime = new Date();\n        job.duration = job.endTime.getTime() - job.startTime.getTime();\n        job.error = (error as Error).message;\n        this.recoveryJobs",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/backup-recovery-automated.service.ts",
        "start": 699,
        "end": 706,
        "startLoc": {
          "line": 699,
          "column": 2,
          "position": 5790
        },
        "endLoc": {
          "line": 706,
          "column": 13,
          "position": 5884
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/backup-recovery-automated.service.ts",
        "start": 468,
        "end": 475,
        "startLoc": {
          "line": 468,
          "column": 2,
          "position": 3499
        },
        "endLoc": {
          "line": 475,
          "column": 11,
          "position": 3593
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ".getDatabase();\n      const session = await db.select()\n        .from(sessions)\n        .where(and(\n          eq(sessions.id, payload.sessionId),\n          eq(sessions.isActive, true),\n          gte(sessions.expiresAt, new Date())\n        ))\n        .limit(1);\n\n      if (session.length === 0) {\n        throw",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/auth.service.ts",
        "start": 239,
        "end": 250,
        "startLoc": {
          "line": 239,
          "column": 3,
          "position": 1879
        },
        "endLoc": {
          "line": 250,
          "column": 6,
          "position": 1984
        }
      },
      "secondFile": {
        "name": "apps/api/src/middleware/auth.ts",
        "start": 74,
        "end": 85,
        "startLoc": {
          "line": 74,
          "column": 2,
          "position": 580
        },
        "endLoc": {
          "line": 85,
          "column": 4,
          "position": 685
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "const userResult = await db.select()\n        .from(users)\n        .innerJoin(organizations, eq(users.organizationId, organizations.id))\n        .where(and(\n          eq(users.id, payload.userId),\n          eq(users.isActive, true)\n        ))\n        .limit(1);\n\n      if (userResult.length === 0) {\n        throw",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/auth.service.ts",
        "start": 254,
        "end": 264,
        "startLoc": {
          "line": 254,
          "column": 7,
          "position": 2002
        },
        "endLoc": {
          "line": 264,
          "column": 6,
          "position": 2104
        }
      },
      "secondFile": {
        "name": "apps/api/src/middleware/auth.ts",
        "start": 94,
        "end": 104,
        "startLoc": {
          "line": 94,
          "column": 5,
          "position": 741
        },
        "endLoc": {
          "line": 104,
          "column": 4,
          "position": 843
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ": any, sessionId: string): string {\n    const payload: Omit<TokenPayload, 'iat' | 'exp'> = {\n      userId: user.id,\n      organizationId: user.organizationId,\n      role: user.role,\n      permissions: this.getUserPermissions(user.role),\n      sessionId,\n      type: 'refresh'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/auth.service.ts",
        "start": 438,
        "end": 445,
        "startLoc": {
          "line": 438,
          "column": 5,
          "position": 3481
        },
        "endLoc": {
          "line": 445,
          "column": 10,
          "position": 3568
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/auth.service.ts",
        "start": 421,
        "end": 428,
        "startLoc": {
          "line": 421,
          "column": 13,
          "position": 3329
        },
        "endLoc": {
          "line": 428,
          "column": 9,
          "position": 3416
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "config = {\n      enabled: true,\n      retentionDays: 90,\n      undoWindowHours: 24,\n      maxUndoOperations: 1000,\n      autoExpire: true,\n      trackFields: ['name', 'email', 'phone', 'status', 'value', 'stage', 'priority', 'description'],\n      sensitiveFields: ['password', 'token', 'secret', 'key'],\n      excludeActions: ['view', 'list', 'search'],\n      includeMetadata: true,\n      compressionEnabled: true,",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/audit-trail-crm-undo.service.ts",
        "start": 96,
        "end": 106,
        "startLoc": {
          "line": 96,
          "column": 2,
          "position": 754
        },
        "endLoc": {
          "line": 106,
          "column": 2,
          "position": 870
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/audit-trail-crm-undo.ts",
        "start": 335,
        "end": 346,
        "startLoc": {
          "line": 335,
          "column": 2,
          "position": 3048
        },
        "endLoc": {
          "line": 346,
          "column": 2,
          "position": 3166
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ", // 100MB\n      allowedExtensions: ['.txt', '.pdf', '.doc', '.docx', '.xls', '.xlsx', '.jpg', '.png', '.gif'],\n      blockedExtensions: ['.exe', '.bat', '.cmd', '.scr', '.pif', '.com', '.vbs', '.js'],\n      quarantineRetentionDays: 30,\n      modules: {\n        file: true,\n        email: true,\n        api: true,\n        database: true,\n        cache: true,\n        queue: true\n      },\n      threatDatabase: {\n        enabled: true,\n        updateInterval: 24, // 24 horas",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/antivirus-global.service.ts",
        "start": 110,
        "end": 124,
        "startLoc": {
          "line": 110,
          "column": 5,
          "position": 892
        },
        "endLoc": {
          "line": 124,
          "column": 12,
          "position": 1037
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/antivirus-global.ts",
        "start": 440,
        "end": 455,
        "startLoc": {
          "line": 440,
          "column": 10,
          "position": 3748
        },
        "endLoc": {
          "line": 455,
          "column": 8,
          "position": 3894
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "= z.object({\n  id: z.string(),\n  name: z.string(),\n  description: z.string().optional(),\n  userId: z.string(),\n  orgId: z.string(),\n  query",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/analytics.ts",
        "start": 71,
        "end": 77,
        "startLoc": {
          "line": 71,
          "column": 2,
          "position": 680
        },
        "endLoc": {
          "line": 77,
          "column": 6,
          "position": 748
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/analytics.ts",
        "start": 48,
        "end": 54,
        "startLoc": {
          "line": 48,
          "column": 2,
          "position": 431
        },
        "endLoc": {
          "line": 54,
          "column": 8,
          "position": 499
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "().optional(),\n  limit: z.number().min(1).max(1000).default(100),\n  offset: z.number().min(0).default(0)\n});\n\n// Query response schema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/analytics-schemas.ts",
        "start": 67,
        "end": 72,
        "startLoc": {
          "line": 67,
          "column": 7,
          "position": 546
        },
        "endLoc": {
          "line": 72,
          "column": 25,
          "position": 605
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/csp-sri-banking.ts",
        "start": 45,
        "end": 50,
        "startLoc": {
          "line": 45,
          "column": 9,
          "position": 525
        },
        "endLoc": {
          "line": 50,
          "column": 38,
          "position": 584
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "(alert: Alert, config: Record<string, any>): Promise<void> {\n    const payload = {\n      alert: {\n        id: alert.id,\n        name: alert.name,\n        severity: alert.severity,\n        message: alert.message,\n        timestamp: alert.timestamp.toISOString(),\n        resolvedAt",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/alerting-system.ts",
        "start": 326,
        "end": 334,
        "startLoc": {
          "line": 326,
          "column": 22,
          "position": 2448
        },
        "endLoc": {
          "line": 334,
          "column": 11,
          "position": 2540
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/alerting-system.ts",
        "start": 296,
        "end": 304,
        "startLoc": {
          "line": 296,
          "column": 17,
          "position": 2224
        },
        "endLoc": {
          "line": 304,
          "column": 5,
          "position": 2316
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "};\n\n    const response = await fetch(config.url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        ...config.headers\n      },\n      body: JSON.stringify(payload)\n    });\n\n    if (!response.ok) {\n      throw new Error(`Webhook request failed with status ${response.status}`);\n    }\n  }\n\n  /**\n   * Send email alert\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/alerting-system.ts",
        "start": 338,
        "end": 356,
        "startLoc": {
          "line": 338,
          "column": 5,
          "position": 2572
        },
        "endLoc": {
          "line": 356,
          "column": 6,
          "position": 2678
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/alerting-system.ts",
        "start": 307,
        "end": 325,
        "startLoc": {
          "line": 307,
          "column": 5,
          "position": 2334
        },
        "endLoc": {
          "line": 325,
          "column": 6,
          "position": 2440
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "}]\n    };\n\n    const response = await fetch(config.webhookUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload)\n    });\n\n    if (!response.ok) {\n      throw new Error(`Slack request failed with status ${response.status}`);\n    }\n  }\n\n  /**\n   * Get severity color for Slack\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/alerting-system.ts",
        "start": 447,
        "end": 465,
        "startLoc": {
          "line": 447,
          "column": 7,
          "position": 3405
        },
        "endLoc": {
          "line": 465,
          "column": 6,
          "position": 3508
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/alerting-system.ts",
        "start": 405,
        "end": 423,
        "startLoc": {
          "line": 405,
          "column": 7,
          "position": 3081
        },
        "endLoc": {
          "line": 423,
          "column": 6,
          "position": 3184
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ".sort((a, b) => {\n      const priorityOrder = { critical: 4, high: 3, medium: 2, low: 1 };\n      const aPriority = priorityOrder[a.priority];\n      const bPriority = priorityOrder[b.priority];\n      \n      if (aPriority !== bPriority) {\n        return bPriority - aPriority;\n      }\n      \n      return new",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/agent-runtime.service.ts",
        "start": 425,
        "end": 434,
        "startLoc": {
          "line": 425,
          "column": 6,
          "position": 3403
        },
        "endLoc": {
          "line": 434,
          "column": 4,
          "position": 3515
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/deals-nba.service.ts",
        "start": 247,
        "end": 256,
        "startLoc": {
          "line": 247,
          "column": 16,
          "position": 2092
        },
        "endLoc": {
          "line": 256,
          "column": 2,
          "position": 2204
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "{\n        id: dbTask.id,\n        agentId: dbTask.agentId,\n        inputs: JSON.parse(dbTask.inputs),\n        context: JSON.parse(dbTask.context),\n        status: dbTask.status as any,\n        priority: dbTask.priority as any,\n        retryCount: dbTask.retryCount,\n        maxRetries: dbTask.maxRetries,\n        timeoutMs: dbTask.timeoutMs,\n        dependencies: dbTask.dependencies ? JSON.parse(dbTask.dependencies) : undefined,\n        outputs: dbTask.outputs ? JSON.parse(dbTask.outputs) : undefined,\n        error: dbTask.error || undefined,\n        costEur: dbTask.costEur || undefined,\n        executionTimeMs: dbTask.executionTimeMs || undefined,\n        createdAt: dbTask.createdAt,\n        updatedAt: dbTask.updatedAt\n      };\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/agent-runtime.service.ts",
        "start": 702,
        "end": 720,
        "startLoc": {
          "line": 702,
          "column": 2,
          "position": 5849
        },
        "endLoc": {
          "line": 720,
          "column": 2,
          "position": 6059
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/agent-runtime.service.ts",
        "start": 602,
        "end": 621,
        "startLoc": {
          "line": 602,
          "column": 2,
          "position": 4921
        },
        "endLoc": {
          "line": 621,
          "column": 5,
          "position": 5132
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", {\n        error: (error as Error).message\n      });\n    }\n  }\n\n  private async getCPUUsage(): Promise<number> {\n    const startUsage = process.cpuUsage();\n    await new Promise(resolve => setTimeout(resolve, 100));\n    const endUsage = process.cpuUsage(startUsage);\n    \n    const totalUsage = (endUsage.user + endUsage.system) / 1000000;\n    return",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/advanced-monitoring-alerts.service.ts",
        "start": 401,
        "end": 413,
        "startLoc": {
          "line": 401,
          "column": 28,
          "position": 3100
        },
        "endLoc": {
          "line": 413,
          "column": 7,
          "position": 3224
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/performance-optimizer-v3.service.ts",
        "start": 193,
        "end": 204,
        "startLoc": {
          "line": 193,
          "column": 40,
          "position": 1430
        },
        "endLoc": {
          "line": 204,
          "column": 22,
          "position": 1553
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "labels: z.record(z.string()).optional(),\n  actions: z.array(z.object({\n    type: z.enum(['EMAIL', 'SLACK', 'WEBHOOK', 'SMS']),\n    config: z.record(z.any())\n  }))\n});\n\nconst AlertSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/advanced-metrics-alerts.service.ts",
        "start": 50,
        "end": 57,
        "startLoc": {
          "line": 50,
          "column": 3,
          "position": 694
        },
        "endLoc": {
          "line": 57,
          "column": 12,
          "position": 777
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/advanced-metrics-alerts.ts",
        "start": 44,
        "end": 102,
        "startLoc": {
          "line": 44,
          "column": 3,
          "position": 424
        },
        "endLoc": {
          "line": 102,
          "column": 28,
          "position": 1229
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ";\n    \n    const mean = values.reduce((a, b) => a + b, 0) / values.length;\n    const variance = values.reduce((a, b) => a + Math.pow(b - mean, 2), 0) / values.length;\n    \n    return",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/advanced-metrics-alerts.service.ts",
        "start": 305,
        "end": 310,
        "startLoc": {
          "line": 305,
          "column": 2,
          "position": 3475
        },
        "endLoc": {
          "line": 310,
          "column": 7,
          "position": 3568
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/advanced-performance-monitoring.service.ts",
        "start": 586,
        "end": 589,
        "startLoc": {
          "line": 586,
          "column": 2,
          "position": 5418
        },
        "endLoc": {
          "line": 589,
          "column": 6,
          "position": 5507
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "| null> {\n    const rule = this.alertRules.get(ruleId);\n    if (!rule) return null;\n\n    const updatedRule = { ...rule, ...updates };\n    this.alertRules.set(ruleId, updatedRule);\n    logger.info(`Alert rule updated: ",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/advanced-metrics-alerts.service.ts",
        "start": 365,
        "end": 371,
        "startLoc": {
          "line": 365,
          "column": 2,
          "position": 4154
        },
        "endLoc": {
          "line": 371,
          "column": 22,
          "position": 4230
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/centralized-logging.service.ts",
        "start": 406,
        "end": 412,
        "startLoc": {
          "line": 406,
          "column": 2,
          "position": 4429
        },
        "endLoc": {
          "line": 412,
          "column": 26,
          "position": 4505
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "operator) {\n      case 'gt': return value > threshold;\n      case 'lt': return value < threshold;\n      case 'gte': return value >= threshold;\n      case 'lte': return value <= threshold;\n      case 'eq': return value === threshold;\n      case 'ne': return value !== threshold;\n      default: return false;\n    }\n  }\n\n  // ===== GESTIÓN DE ALERTAS =====",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/advanced-metrics-alerts.service.ts",
        "start": 484,
        "end": 495,
        "startLoc": {
          "line": 484,
          "column": 2,
          "position": 5332
        },
        "endLoc": {
          "line": 495,
          "column": 34,
          "position": 5444
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/alerts.ts",
        "start": 248,
        "end": 259,
        "startLoc": {
          "line": 248,
          "column": 2,
          "position": 2025
        },
        "endLoc": {
          "line": 259,
          "column": 8,
          "position": 2137
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ".values());\n\n    const metricsByType = metrics.reduce((acc, metric) => {\n      acc[metric.type] = (acc[metric.type] || 0) + 1;\n      return acc;\n    }, {} as Record<string, number>);\n\n    const activeAlerts",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/advanced-metrics-alerts.service.ts",
        "start": 640,
        "end": 647,
        "startLoc": {
          "line": 640,
          "column": 5,
          "position": 6936
        },
        "endLoc": {
          "line": 647,
          "column": 13,
          "position": 7023
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/advanced-performance-monitoring.service.ts",
        "start": 706,
        "end": 713,
        "startLoc": {
          "line": 706,
          "column": 10,
          "position": 6829
        },
        "endLoc": {
          "line": 713,
          "column": 17,
          "position": 6916
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": "name: z.string().min(1).max(100),\n  description: z.string().max(500).optional(),\n  category: z.enum(['system', 'feature', 'integration', 'security', 'performance', 'monitoring']),\n  type: z.enum(['string', 'number', 'boolean', 'object', 'array', 'json']),\n  value: z.any(),\n  defaultValue: z.any(),\n  environment: z.enum(['development', 'staging', 'production', 'all']),\n  isSecret: z.boolean().default(false),\n  isRequired: z.boolean().default(false),\n  validation: z.object({\n    min: z.number().optional(),\n    max: z.number().optional(),\n    pattern: z.string().optional(),\n    enum: z.array(z.any()).optional(),\n    custom: z.string().optional()\n  }).optional(),\n  dependencies: z.array(z.string()).default([]),\n  tags: z.array(z.string()).default([]),\n  version: z.string().default('1.0.0'),\n  isActive: z.boolean().default(true),\n  createdAt",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/advanced-configuration-management.service.ts",
        "start": 7,
        "end": 27,
        "startLoc": {
          "line": 7,
          "column": 3,
          "position": 63
        },
        "endLoc": {
          "line": 27,
          "column": 10,
          "position": 413
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/advanced-configuration-management.ts",
        "start": 10,
        "end": 30,
        "startLoc": {
          "line": 10,
          "column": 3,
          "position": 80
        },
        "endLoc": {
          "line": 30,
          "column": 10,
          "position": 430
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "),\n  isActive: z.boolean().default(true),\n  createdAt: z.date().optional(),\n  updatedAt: z.date().optional(),\n  createdBy: z.string().optional(),\n  updatedBy: z.string().optional()\n});\n\nexport const ConfigTemplateSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/advanced-configuration-management.service.ts",
        "start": 25,
        "end": 33,
        "startLoc": {
          "line": 25,
          "column": 8,
          "position": 393
        },
        "endLoc": {
          "line": 33,
          "column": 21,
          "position": 480
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/backup-recovery.service.ts",
        "start": 42,
        "end": 50,
        "startLoc": {
          "line": 42,
          "column": 2,
          "position": 616
        },
        "endLoc": {
          "line": 50,
          "column": 16,
          "position": 703
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "= z.object({\n  id: z.string().uuid().optional(),\n  name: z.string().min(1).max(100),\n  description: z.string().max(500).optional(),\n  category: z.enum(['system', 'feature', 'integration', 'security', 'performance', 'monitoring']),\n  template: z.record(z.string(), z.any()),\n  variables: z.array(z.object({\n    name: z.string(),\n    type: z.enum(['string', 'number', 'boolean', 'object', 'array']),\n    required: z.boolean().default(false),\n    defaultValue: z.any().optional(),\n    description: z.string().optional()\n  })).default([]),\n  isActive: z.boolean().default(true),",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/advanced-configuration-management.service.ts",
        "start": 33,
        "end": 46,
        "startLoc": {
          "line": 33,
          "column": 2,
          "position": 482
        },
        "endLoc": {
          "line": 46,
          "column": 2,
          "position": 724
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/configuration.service.ts",
        "start": 4,
        "end": 72,
        "startLoc": {
          "line": 4,
          "column": 2,
          "position": 22
        },
        "endLoc": {
          "line": 72,
          "column": 2,
          "position": 1103
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ")).default([]),\n  isActive: z.boolean().default(true),\n  createdAt: z.date().optional(),\n  updatedAt: z.date().optional()\n});\n\nexport const ConfigDeploymentSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/advanced-configuration-management.service.ts",
        "start": 45,
        "end": 51,
        "startLoc": {
          "line": 45,
          "column": 2,
          "position": 700
        },
        "endLoc": {
          "line": 51,
          "column": 23,
          "position": 764
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/configuration.service.ts",
        "start": 26,
        "end": 32,
        "startLoc": {
          "line": 26,
          "column": 2,
          "position": 441
        },
        "endLoc": {
          "line": 32,
          "column": 18,
          "position": 505
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "deploymentStrategy: z.enum(['immediate', 'gradual', 'canary', 'blue_green']),\n  rolloutPercentage: z.number().min(0).max(100).default(100),\n  schedule: z.object({\n    enabled: z.boolean().default(false),\n    cron: z.string().optional(),\n    timezone: z.string().default('UTC')\n  }).optional(),\n  rollbackConfig: z.object({\n    enabled: z.boolean().default(true),\n    autoRollback: z.boolean().default(false),\n    rollbackConditions: z.array(z.string()).default([])\n  }).optional(),",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/advanced-configuration-management.service.ts",
        "start": 57,
        "end": 68,
        "startLoc": {
          "line": 57,
          "column": 3,
          "position": 873
        },
        "endLoc": {
          "line": 68,
          "column": 2,
          "position": 1056
        }
      },
      "secondFile": {
        "name": "apps/api/src/routes/advanced-configuration-management.ts",
        "start": 79,
        "end": 91,
        "startLoc": {
          "line": 79,
          "column": 3,
          "position": 1198
        },
        "endLoc": {
          "line": 91,
          "column": 2,
          "position": 1382
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n      createdAt: new Date(),\n      updatedAt: new Date()\n    };\n\n    this.configs.set(newConfig.id!, newConfig);\n    \n    // Registrar en audit log",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/advanced-configuration-management.service.ts",
        "start": 397,
        "end": 404,
        "startLoc": {
          "line": 397,
          "column": 9,
          "position": 3911
        },
        "endLoc": {
          "line": 404,
          "column": 26,
          "position": 3988
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/backup-recovery.service.ts",
        "start": 262,
        "end": 269,
        "startLoc": {
          "line": 262,
          "column": 16,
          "position": 2612
        },
        "endLoc": {
          "line": 269,
          "column": 39,
          "position": 2688
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "async getOrSet<T>(\n    key: string,\n    factory: () => Promise<T>,\n    ttl?: number\n  ): Promise<T> {\n    const cached = this.get<T>(key);\n    if (cached !== null) {\n      return cached;\n    }\n\n    const value = await factory();\n    this.set(key, value, ttl);\n    return value;\n  }\n\n  async",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/advanced-cache.ts",
        "start": 304,
        "end": 319,
        "startLoc": {
          "line": 304,
          "column": 3,
          "position": 2543
        },
        "endLoc": {
          "line": 319,
          "column": 6,
          "position": 2672
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/cache.service.ts",
        "start": 178,
        "end": 195,
        "startLoc": {
          "line": 178,
          "column": 3,
          "position": 1247
        },
        "endLoc": {
          "line": 195,
          "column": 6,
          "position": 1378
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "[]): Array<{ action: string; count: number }> {\n    const actionCounts = events.reduce((acc, event) => {\n      acc[event.action] = (acc[event.action] || 0) + 1;\n      return acc;\n    }, {} as Record<string, number>);\n    \n    return Object.entries(actionCounts)\n      .map(([action, count]) => ({ action, count }))\n      .sort((a, b) => b.count - a.count)\n      .slice(0, 10);\n  }\n\n  private getTopEntities",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/advanced-analytics.ts",
        "start": 251,
        "end": 263,
        "startLoc": {
          "line": 251,
          "column": 15,
          "position": 2425
        },
        "endLoc": {
          "line": 263,
          "column": 15,
          "position": 2606
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/advanced-audit-compliance.service.ts",
        "start": 566,
        "end": 578,
        "startLoc": {
          "line": 566,
          "column": 11,
          "position": 5116
        },
        "endLoc": {
          "line": 578,
          "column": 16,
          "position": 5296
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "): boolean {\n    switch (operator) {\n      case 'equals': return value === filterValue;\n      case 'not_equals': return value !== filterValue;\n      case 'greater_than': return value > filterValue;\n      case 'less_than': return value < filterValue;\n      case 'contains': return String(value).includes",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/lib/advanced-analytics.service.ts",
        "start": 577,
        "end": 583,
        "startLoc": {
          "line": 577,
          "column": 4,
          "position": 5463
        },
        "endLoc": {
          "line": 583,
          "column": 9,
          "position": 5552
        }
      },
      "secondFile": {
        "name": "apps/api/src/lib/intelligent-reporting.service.ts",
        "start": 251,
        "end": 257,
        "startLoc": {
          "line": 251,
          "column": 2,
          "position": 2121
        },
        "endLoc": {
          "line": 257,
          "column": 12,
          "position": 2210
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "tenantId: z.string(),\n  userId: z.string().optional(),\n  agentId: z.string().optional(),\n  namespace: z.string(),\n  vector: z.array(z.number()).optional(),\n  text: z.string().optional(),\n  ttlSec: z.number().optional(),\n  meta: z.record(z.any()).optional(),\n  createdAt",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/db/memory.repo.ts",
        "start": 6,
        "end": 14,
        "startLoc": {
          "line": 6,
          "column": 3,
          "position": 42
        },
        "endLoc": {
          "line": 14,
          "column": 10,
          "position": 164
        }
      },
      "secondFile": {
        "name": "packages/sdk/src/client.ts",
        "start": 15,
        "end": 23,
        "startLoc": {
          "line": 15,
          "column": 3,
          "position": 102
        },
        "endLoc": {
          "line": 23,
          "column": 2,
          "position": 223
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "export const MemoryPutRequestSchema = z.object({\n  tenantId: z.string(),\n  userId: z.string().optional(),\n  agentId: z.string().optional(),\n  namespace: z.string(),\n  vector: z.array(z.number()).optional(),\n  text: z.string().optional(),\n  ttlSec: z.number().optional(),\n  meta: z.record(z.any()).optional(),\n});\n\nexport const MemoryQueryRequestSchema",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/db/memory.repo.ts",
        "start": 19,
        "end": 30,
        "startLoc": {
          "line": 19,
          "column": 1,
          "position": 205
        },
        "endLoc": {
          "line": 30,
          "column": 25,
          "position": 350
        }
      },
      "secondFile": {
        "name": "packages/sdk/src/client.ts",
        "start": 14,
        "end": 25,
        "startLoc": {
          "line": 14,
          "column": 1,
          "position": 87
        },
        "endLoc": {
          "line": 25,
          "column": 24,
          "position": 232
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "(),\n});\n\nexport const MemoryQueryRequestSchema = z.object({\n  tenantId: z.string(),\n  userId: z.string().optional(),\n  agentId: z.string().optional(),\n  namespace: z.string(),\n  query: z.string(),\n  topK: z.number().optional().default(10),\n});\n\nexport type",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/db/memory.repo.ts",
        "start": 27,
        "end": 39,
        "startLoc": {
          "line": 27,
          "column": 9,
          "position": 337
        },
        "endLoc": {
          "line": 39,
          "column": 5,
          "position": 450
        }
      },
      "secondFile": {
        "name": "packages/sdk/src/client.ts",
        "start": 28,
        "end": 40,
        "startLoc": {
          "line": 28,
          "column": 7,
          "position": 271
        },
        "endLoc": {
          "line": 40,
          "column": 6,
          "position": 384
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": ", error);\n      \n      if (error instanceof Error && error.message.includes('Validation error')) {\n        res.status(400).json({\n          type: 'https://econeura/errors/validation-error',\n          title: 'Validation Error',\n          status: 400,\n          detail: error.message,\n          instance: req.path,\n        });\n        return;\n      }\n\n      res.status(500).json({\n        type: 'https://econeura/errors/internal-error',\n        title: 'Internal Server Error',\n        status: 500,\n        detail: 'An unexpected error occurred',\n        instance: req.path,\n      });\n    }\n  }\n\n  async getMemoryStats",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/controllers/memory.controller.ts",
        "start": 46,
        "end": 69,
        "startLoc": {
          "line": 46,
          "column": 24,
          "position": 411
        },
        "endLoc": {
          "line": 69,
          "column": 15,
          "position": 571
        }
      },
      "secondFile": {
        "name": "apps/api/src/controllers/memory.controller.ts",
        "start": 15,
        "end": 38,
        "startLoc": {
          "line": 15,
          "column": 22,
          "position": 165
        },
        "endLoc": {
          "line": 38,
          "column": 12,
          "position": 325
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "),\n  source: z.string().optional(),\n  includeEmotions: z.boolean().default(true),\n  includeTopics: z.boolean().default(true),\n  includeKeywords: z.boolean().default(true)\n});\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/controllers/advanced-features.controller.ts",
        "start": 61,
        "end": 68,
        "startLoc": {
          "line": 61,
          "column": 17,
          "position": 628
        },
        "endLoc": {
          "line": 68,
          "column": 7,
          "position": 698
        }
      },
      "secondFile": {
        "name": "apps/api/src/controllers/advanced-features.controller.ts",
        "start": 53,
        "end": 60,
        "startLoc": {
          "line": 53,
          "column": 16,
          "position": 510
        },
        "endLoc": {
          "line": 60,
          "column": 6,
          "position": 580
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "(req: Request, res: Response): Promise<void> {\n    try {\n      const { productId } = req.body;\n      \n      if (!productId) {\n        res.status(400).json({ error: 'Product ID is required' });\n        return;\n      }\n\n      const analysis",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/controllers/advanced-features.controller.ts",
        "start": 235,
        "end": 244,
        "startLoc": {
          "line": 235,
          "column": 19,
          "position": 2168
        },
        "endLoc": {
          "line": 244,
          "column": 9,
          "position": 2254
        }
      },
      "secondFile": {
        "name": "apps/api/src/controllers/advanced-features.controller.ts",
        "start": 214,
        "end": 223,
        "startLoc": {
          "line": 214,
          "column": 18,
          "position": 1982
        },
        "endLoc": {
          "line": 223,
          "column": 13,
          "position": 2068
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "(req: Request, res: Response): Promise<void> {\n    try {\n      const { productId } = req.body;\n      \n      if (!productId) {\n        res.status(400).json({ error: 'Product ID is required' });\n        return;\n      }\n\n      const recommendations",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/controllers/advanced-features.controller.ts",
        "start": 256,
        "end": 265,
        "startLoc": {
          "line": 256,
          "column": 24,
          "position": 2354
        },
        "endLoc": {
          "line": 265,
          "column": 16,
          "position": 2440
        }
      },
      "secondFile": {
        "name": "apps/api/src/controllers/advanced-features.controller.ts",
        "start": 214,
        "end": 223,
        "startLoc": {
          "line": 214,
          "column": 18,
          "position": 1982
        },
        "endLoc": {
          "line": 223,
          "column": 13,
          "position": 2068
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "(req: Request, res: Response): Promise<void> {\n    try {\n      const { query, options } = req.body;\n      \n      if (!query) {\n        res.status(400).json({ error: 'Query is required' });\n        return;\n      }\n\n      const response = await webSearch.searchNews",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/controllers/advanced-features.controller.ts",
        "start": 604,
        "end": 613,
        "startLoc": {
          "line": 604,
          "column": 11,
          "position": 5534
        },
        "endLoc": {
          "line": 613,
          "column": 11,
          "position": 5631
        }
      },
      "secondFile": {
        "name": "apps/api/src/controllers/advanced-features.controller.ts",
        "start": 583,
        "end": 592,
        "startLoc": {
          "line": 583,
          "column": 7,
          "position": 5342
        },
        "endLoc": {
          "line": 592,
          "column": 7,
          "position": 5439
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ");\n    if (error instanceof z.ZodError) {\n      error.errors.forEach(err => {\n        console.error(`  - ${err.path.join('.')}: ${err.message}`);\n      });\n    } else {\n      console.error(`  - ${error",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/config/env.ts",
        "start": 88,
        "end": 94,
        "startLoc": {
          "line": 88,
          "column": 35,
          "position": 858
        },
        "endLoc": {
          "line": 94,
          "column": 6,
          "position": 934
        }
      },
      "secondFile": {
        "name": "apps/workers/src/config/env.ts",
        "start": 73,
        "end": 79,
        "startLoc": {
          "line": 73,
          "column": 42,
          "position": 682
        },
        "endLoc": {
          "line": 79,
          "column": 7,
          "position": 758
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ";\nimport { initFinOps, finalizeFinOps } from \"./middleware/finops\";\nimport { telemetryMiddleware } from \"./middleware/telemetry\";\n\nconst app = express();\napp.use(bodyParser.json());\n\n// CORS configuration with strict allowlist\nconst allow = (process.env.ALLOWED_ORIGINS || \"https://www.econeura.com\")\n  .split(\",\")\n  .map(s => s.trim());\n\napp.use(helmet({\n  contentSecurityPolicy: {\n    directives: {\n      defaultSrc: [\"'self'\"],\n      scriptSrc: [\"'self'\"],\n      styleSrc: [\"'self'\", \"'unsafe-inline'\"],\n      imgSrc: [\"'self'\", \"data:\", \"https:\"],\n      connectSrc: [\"'self'\"]",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api-agents-make/src/server.ts",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 18,
          "position": 52
        },
        "endLoc": {
          "line": 25,
          "column": 2,
          "position": 223
        }
      },
      "secondFile": {
        "name": "apps/api-neura-comet/src/server.ts",
        "start": 5,
        "end": 24,
        "startLoc": {
          "line": 5,
          "column": 14,
          "position": 43
        },
        "endLoc": {
          "line": 24,
          "column": 2,
          "position": 214
        }
      }
    },
    {
      "format": "typescript",
      "lines": 33,
      "fragment": "],\n      frameSrc: [\"'none'\"],\n      objectSrc: [\"'none'\"],\n      baseUri: [\"'self'\"],\n      formAction: [\"'self'\"]\n    }\n  },\n  crossOriginEmbedderPolicy: false,\n  hsts: {\n    maxAge: 31536000,\n    includeSubDomains: true,\n    preload: true\n  }\n}));\napp.use(cors({\n  origin: (origin, callback) => {\n    // Allow requests with no origin (mobile apps, curl, etc.)\n    if (!origin) return callback(null, true);\n    \n    if (allow.includes(origin)) {\n      callback(null, true);\n    } else {\n      callback(new Error('Not allowed by CORS'));\n    }\n  },\n  credentials: true\n}));\n\n// Health check\napp.get(\"/health\", (_, res) => {\n  res.json({ \n    ok: true, \n    service: \"agents-make\"",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api-agents-make/src/server.ts",
        "start": 25,
        "end": 57,
        "startLoc": {
          "line": 25,
          "column": 9,
          "position": 223
        },
        "endLoc": {
          "line": 57,
          "column": 14,
          "position": 458
        }
      },
      "secondFile": {
        "name": "apps/api-neura-comet/src/server.ts",
        "start": 24,
        "end": 57,
        "startLoc": {
          "line": 24,
          "column": 28,
          "position": 217
        },
        "endLoc": {
          "line": 57,
          "column": 14,
          "position": 453
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": ");\n\n// CORS configuration (PR-28)\napp.use(cors({\n  origin: ['http://localhost:3000', 'http://localhost:3001'],\n  credentials: true,\n  methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\n  allowedHeaders: ['Content-Type', 'Authorization', 'X-Org-ID', 'X-User-ID', 'X-Correlation-ID'],\n  exposedHeaders: ['X-System-Mode', 'X-Est-Cost-EUR', 'X-Budget-Pct', 'X-Latency-ms', 'X-Route']\n}));\n\n// Basic middleware\napp.use(express.json({ limit: '10mb' }));\napp.use(express.urlencoded({ extended: true }));\n\n// Apply observability middleware (PR-23)\napp.use(observabilityMiddleware);\n\n// Apply FinOps middleware (PR-29)\napp.use(finOpsMiddleware);\n\n// Rate limiting middleware (PR-29)",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/index.final.ts",
        "start": 56,
        "end": 77,
        "startLoc": {
          "line": 56,
          "column": 2,
          "position": 456
        },
        "endLoc": {
          "line": 77,
          "column": 36,
          "position": 622
        }
      },
      "secondFile": {
        "name": "packages/shared/src/backup/intermediate.ts",
        "start": 34,
        "end": 55,
        "startLoc": {
          "line": 34,
          "column": 2,
          "position": 290
        },
        "endLoc": {
          "line": 55,
          "column": 32,
          "position": 456
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": "const rateLimitStore = new Map();\napp.use((req, res, next) => {\n  const ip = req.ip || req.connection.remoteAddress || 'unknown';\n  const now = Date.now();\n  const windowMs = 15 * 60 * 1000; // 15 minutes\n  const maxRequests = 100;\n  \n  if (!rateLimitStore.has(ip)) {\n    rateLimitStore.set(ip, { count: 1, resetTime: now + windowMs });\n    return next();\n  }\n  \n  const record = rateLimitStore.get(ip);\n  if (now > record.resetTime) {\n    record.count = 1;\n    record.resetTime = now + windowMs;\n    return next();\n  }\n  \n  if (record.count >= maxRequests) {\n    return res.status(429).json({\n      error: 'Too Many Requests',\n      message: 'Rate limit exceeded',\n      retryAfter: Math.ceil((record.resetTime - now) / 1000),",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/index.final.ts",
        "start": 78,
        "end": 101,
        "startLoc": {
          "line": 78,
          "column": 1,
          "position": 624
        },
        "endLoc": {
          "line": 101,
          "column": 2,
          "position": 914
        }
      },
      "secondFile": {
        "name": "packages/shared/src/backup/intermediate.ts",
        "start": 56,
        "end": 80,
        "startLoc": {
          "line": 56,
          "column": 1,
          "position": 458
        },
        "endLoc": {
          "line": 80,
          "column": 2,
          "position": 750
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "app.get(\"/health\", (req, res) => {\n  const ts = new Date().toISOString();\n  const version = process.env.npm_package_version || \"1.0.0\";\n  const currentMode = healthModeManager.getCurrentMode();\n  res.set('X-System-Mode', currentMode);\n  res.status(200).json({\n    status: \"ok\",\n    ts,\n    version,\n    mode: currentMode,",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/index.final.ts",
        "start": 137,
        "end": 146,
        "startLoc": {
          "line": 137,
          "column": 1,
          "position": 1185
        },
        "endLoc": {
          "line": 146,
          "column": 2,
          "position": 1297
        }
      },
      "secondFile": {
        "name": "packages/shared/src/backup/intermediate.ts",
        "start": 102,
        "end": 112,
        "startLoc": {
          "line": 102,
          "column": 1,
          "position": 902
        },
        "endLoc": {
          "line": 112,
          "column": 2,
          "position": 1016
        }
      }
    },
    {
      "format": "typescript",
      "lines": 35,
      "fragment": "app.get(\"/health/live\", async (req, res) => {\n  try {\n    const result = await healthModeManager.getLivenessProbe();\n    const statusCode = result.status === 'ok' ? 200 : 503;\n    res.set('X-System-Mode', result.mode);\n    res.status(statusCode).json(result);\n  } catch (error) {\n    res.status(503).json({\n      status: \"error\",\n      mode: \"degraded\",\n      timestamp: new Date().toISOString(),\n      version: process.env.npm_package_version || '1.0.0',\n      error: (error as Error).message\n    });\n  }\n});\n\napp.get(\"/health/ready\", async (req, res) => {\n  try {\n    const result = await healthModeManager.getReadinessProbe();\n    const statusCode = result.status === 'ok' ? 200 : 503;\n    res.set('X-System-Mode', result.mode);\n    res.status(statusCode).json(result);\n  } catch (error) {\n    res.status(503).json({\n      status: \"error\",\n      mode: \"degraded\",\n      timestamp: new Date().toISOString(),\n      version: process.env.npm_package_version || '1.0.0',\n      error: (error as Error).message\n    });\n  }\n});\n\n// =============================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/index.final.ts",
        "start": 151,
        "end": 185,
        "startLoc": {
          "line": 151,
          "column": 1,
          "position": 1319
        },
        "endLoc": {
          "line": 185,
          "column": 81,
          "position": 1693
        }
      },
      "secondFile": {
        "name": "packages/shared/src/backup/intermediate.ts",
        "start": 116,
        "end": 133,
        "startLoc": {
          "line": 116,
          "column": 1,
          "position": 1027
        },
        "endLoc": {
          "line": 133,
          "column": 4,
          "position": 1214
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "}\n`;\n    \n    res.set('Content-Type', 'text/plain');\n    res.send(metrics.trim());\n  } catch (error) {\n    res.status(500).json({\n      error: 'Failed to get metrics',\n      message: (error as Error).message\n    });\n  }\n});\n\napp",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/index.final.ts",
        "start": 222,
        "end": 235,
        "startLoc": {
          "line": 222,
          "column": 5,
          "position": 1898
        },
        "endLoc": {
          "line": 235,
          "column": 4,
          "position": 1986
        }
      },
      "secondFile": {
        "name": "packages/shared/src/backup/intermediate.ts",
        "start": 176,
        "end": 189,
        "startLoc": {
          "line": 176,
          "column": 2,
          "position": 1547
        },
        "endLoc": {
          "line": 189,
          "column": 29,
          "position": 1635
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ",\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    res.status(500).json({\n      success: false,\n      error: 'Failed to get cache stats',\n      message: (error as Error).message\n    });\n  }\n});\n\n// =============================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/index.final.ts",
        "start": 253,
        "end": 265,
        "startLoc": {
          "line": 253,
          "column": 2,
          "position": 2269
        },
        "endLoc": {
          "line": 265,
          "column": 81,
          "position": 2354
        }
      },
      "secondFile": {
        "name": "packages/shared/src/backup/intermediate.ts",
        "start": 195,
        "end": 207,
        "startLoc": {
          "line": 195,
          "column": 6,
          "position": 1693
        },
        "endLoc": {
          "line": 207,
          "column": 53,
          "position": 1778
        }
      }
    },
    {
      "format": "typescript",
      "lines": 40,
      "fragment": "();\n\n// Security middleware (PR-28)\napp.use(helmet({\n  contentSecurityPolicy: {\n    directives: {\n      defaultSrc: [\"'self'\"],\n      scriptSrc: [\"'self'\", \"'unsafe-inline'\"],\n      styleSrc: [\"'self'\", \"'unsafe-inline'\"],\n      imgSrc: [\"'self'\", \"data:\", \"https:\"],\n      connectSrc: [\"'self'\", \"https:\"],\n    },\n  },\n  hsts: {\n    maxAge: 31536000,\n    includeSubDomains: true,\n    preload: true\n  }\n}));\n\n// CORS configuration (PR-28)\napp.use(cors({\n  origin: ['http://localhost:3000', 'http://localhost:3001'],\n  credentials: true,\n  methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\n  allowedHeaders: ['Content-Type', 'Authorization', 'X-Org-ID', 'X-User-ID', 'X-Correlation-ID'],\n  exposedHeaders: ['X-System-Mode', 'X-Est-Cost-EUR', 'X-Budget-Pct', 'X-Latency-ms', 'X-Route']\n}));\n\n// Basic middleware\napp.use(express.json({ limit: '10mb' }));\napp.use(express.urlencoded({ extended: true }));\n\n// Apply observability middleware (PR-23)\napp.use(observabilityMiddleware);\n\n// Apply FinOps middleware (PR-29)\napp.use(finOpsMiddleware);\n\n// Apply rate limiting middleware (PR-29)",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/index.expanded.ts",
        "start": 33,
        "end": 72,
        "startLoc": {
          "line": 33,
          "column": 13,
          "position": 300
        },
        "endLoc": {
          "line": 72,
          "column": 42,
          "position": 592
        }
      },
      "secondFile": {
        "name": "apps/api/src/index.final.ts",
        "start": 38,
        "end": 55,
        "startLoc": {
          "line": 38,
          "column": 18,
          "position": 330
        },
        "endLoc": {
          "line": 55,
          "column": 32,
          "position": 456
        }
      }
    },
    {
      "format": "typescript",
      "lines": 55,
      "fragment": "));\n\n// Basic health check endpoint (< 200ms, no external dependencies)\napp.get(\"/health\", (req, res) => {\n  const ts = new Date().toISOString();\n  const version = process.env.npm_package_version || \"1.0.0\";\n  const currentMode = healthModeManager.getCurrentMode();\n  res.set('X-System-Mode', currentMode);\n  res.status(200).json({\n    status: \"ok\",\n    ts,\n    version,\n    mode: currentMode\n  });\n});\n\n// Enhanced Health check endpoints (PR-22)\napp.get(\"/health/live\", async (req, res) => {\n  try {\n    const result = await healthModeManager.getLivenessProbe();\n    const statusCode = result.status === 'ok' ? 200 : 503;\n    res.set('X-System-Mode', result.mode);\n    res.status(statusCode).json(result);\n  } catch (error) {\n    res.status(503).json({\n      status: \"error\",\n      mode: \"degraded\",\n      timestamp: new Date().toISOString(),\n      version: process.env.npm_package_version || '1.0.0',\n      error: (error as Error).message\n    });\n  }\n});\n\napp.get(\"/health/ready\", async (req, res) => {\n  try {\n    const result = await healthModeManager.getReadinessProbe();\n    const statusCode = result.status === 'ok' ? 200 : 503;\n    res.set('X-System-Mode', result.mode);\n    res.status(statusCode).json(result);\n  } catch (error) {\n    res.status(503).json({\n      status: \"error\",\n      mode: \"degraded\",\n      timestamp: new Date().toISOString(),\n      version: process.env.npm_package_version || '1.0.0',\n      error: (error as Error).message\n    });\n  }\n});\n\n// System metrics endpoint\napp.get(\"/metrics\", async (req, res) => {\n  try {\n    const metrics",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/index.expanded.ts",
        "start": 83,
        "end": 137,
        "startLoc": {
          "line": 83,
          "column": 2,
          "position": 667
        },
        "endLoc": {
          "line": 137,
          "column": 8,
          "position": 1203
        }
      },
      "secondFile": {
        "name": "packages/shared/src/backup/basic.ts",
        "start": 21,
        "end": 153,
        "startLoc": {
          "line": 21,
          "column": 2,
          "position": 191
        },
        "endLoc": {
          "line": 153,
          "column": 11,
          "position": 1431
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ",\n      message: (error as Error).message\n    });\n  }\n});\n\n// API info endpoint with comprehensive feature list\napp.get(\"/\", (req, res) => {\n  res.json({\n    name: \"ECONEURA API\",\n    version: process.env.npm_package_version || \"1.0.0\",\n    status: \"running\",\n    timestamp: new Date().toISOString(),\n    features: [\n      \"PR-22: Health modes (live/ready/degraded)\",\n      \"PR-23: Observability coherente (logs + métricas + traces)\",\n      \"PR-24: Analytics events with Zod validation\", \n      \"PR-27: Validación Zod integral en routers\"",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/index.expanded.ts",
        "start": 142,
        "end": 159,
        "startLoc": {
          "line": 142,
          "column": 24,
          "position": 1265
        },
        "endLoc": {
          "line": 159,
          "column": 44,
          "position": 1385
        }
      },
      "secondFile": {
        "name": "packages/shared/src/backup/intermediate.ts",
        "start": 201,
        "end": 218,
        "startLoc": {
          "line": 201,
          "column": 28,
          "position": 1749
        },
        "endLoc": {
          "line": 218,
          "column": 39,
          "position": 1869
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ");\n\n// 404 handler\napp.use((req: express.Request, res: express.Response) => {\n  res.status(404).json({\n    error: 'Not found',\n    message: `Route ${req.method} ${req.path} not found`,\n    timestamp: new Date().toISOString(),\n    availableEndpoints: [\n      'GET /health', 'GET /health/live', 'GET /health/ready',\n      'GET /v1/analytics/*'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/index.expanded.ts",
        "start": 217,
        "end": 227,
        "startLoc": {
          "line": 217,
          "column": 2,
          "position": 1650
        },
        "endLoc": {
          "line": 227,
          "column": 22,
          "position": 1751
        }
      },
      "secondFile": {
        "name": "packages/shared/src/backup/intermediate.ts",
        "start": 273,
        "end": 282,
        "startLoc": {
          "line": 273,
          "column": 2,
          "position": 2212
        },
        "endLoc": {
          "line": 282,
          "column": 15,
          "position": 2312
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "]\n  });\n});\n\n// Start server\nconst server = app.listen(PORT, () => {\n  structuredLogger.info(`ECONEURA API Server running on port ${PORT}`, {\n    port: PORT,\n    environment: process.env.NODE_ENV || 'development',\n    version: process.env.npm_package_version || '1.0.0',\n    features: [\n      'PR-22: Health modes (live/ready/degraded)',\n      'PR-23: Observability coherente (logs + métricas + traces)',\n      'PR-24: Analytics events with Zod validation', \n      'PR-27: Validación Zod integral en routers'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/index.expanded.ts",
        "start": 230,
        "end": 244,
        "startLoc": {
          "line": 230,
          "column": 5,
          "position": 1777
        },
        "endLoc": {
          "line": 244,
          "column": 44,
          "position": 1882
        }
      },
      "secondFile": {
        "name": "packages/shared/src/backup/intermediate.ts",
        "start": 284,
        "end": 298,
        "startLoc": {
          "line": 284,
          "column": 5,
          "position": 2325
        },
        "endLoc": {
          "line": 298,
          "column": 39,
          "position": 2430
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": "});\n});\n\n// Graceful shutdown\nprocess.on('SIGTERM', () => {\n  structuredLogger.info('SIGTERM received, shutting down gracefully');\n  server.close(() => {\n    structuredLogger.info('Process terminated');\n    process.exit(0);\n  });\n});\n\nprocess.on('SIGINT', () => {\n  structuredLogger.info('SIGINT received, shutting down gracefully');\n  server.close(() => {\n    structuredLogger.info('Process terminated');\n    process.exit(0);\n  });\n});\n\nexport default app;",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/index.expanded.ts",
        "start": 253,
        "end": 273,
        "startLoc": {
          "line": 253,
          "column": 3,
          "position": 1916
        },
        "endLoc": {
          "line": 273,
          "column": 2,
          "position": 2058
        }
      },
      "secondFile": {
        "name": "packages/shared/src/backup/basic.ts",
        "start": 117,
        "end": 326,
        "startLoc": {
          "line": 117,
          "column": 3,
          "position": 1097
        },
        "endLoc": {
          "line": 326,
          "column": 2,
          "position": 2607
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ", error as Error);\n      process.exit(1);\n    }\n  };\n\n  process.on('SIGTERM', () => shutdownHandler('SIGTERM'));\n  process.on('SIGINT', () => shutdownHandler('SIGINT'));\n  \n  // Handle uncaught exceptions\n  process.on('uncaughtException', (error) => {\n    apiLogger",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/src/bootstrap.example.ts",
        "start": 122,
        "end": 132,
        "startLoc": {
          "line": 122,
          "column": 24,
          "position": 783
        },
        "endLoc": {
          "line": 132,
          "column": 10,
          "position": 872
        }
      },
      "secondFile": {
        "name": "apps/workers/src/bootstrap.example.ts",
        "start": 143,
        "end": 153,
        "startLoc": {
          "line": 143,
          "column": 31,
          "position": 1087
        },
        "endLoc": {
          "line": 153,
          "column": 13,
          "position": 1176
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "),\n    pagination: z.object({\n      cursor: z.string().nullable(),\n      hasMore: z.boolean(),\n      total: z.number().int().optional(),\n      limit: z.number().int(),\n    }),\n  });\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/scripts/openapi.ts",
        "start": 91,
        "end": 99,
        "startLoc": {
          "line": 91,
          "column": 11,
          "position": 429
        },
        "endLoc": {
          "line": 99,
          "column": 2,
          "position": 512
        }
      },
      "secondFile": {
        "name": "packages/shared/src/schemas/common.ts",
        "start": 11,
        "end": 20,
        "startLoc": {
          "line": 11,
          "column": 2,
          "position": 124
        },
        "endLoc": {
          "line": 20,
          "column": 30,
          "position": 207
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ".extend({\n      cursor: z.string().optional(),\n      limit: z.number().int().min(1).max(100).default(20),\n      sort: z.string().optional(),\n    }),\n  },\n  responses: {\n    200: {\n      description: 'Contacts list'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/scripts/openapi.ts",
        "start": 271,
        "end": 279,
        "startLoc": {
          "line": 271,
          "column": 20,
          "position": 1560
        },
        "endLoc": {
          "line": 279,
          "column": 16,
          "position": 1650
        }
      },
      "secondFile": {
        "name": "apps/api/scripts/openapi.ts",
        "start": 210,
        "end": 218,
        "startLoc": {
          "line": 210,
          "column": 20,
          "position": 1155
        },
        "endLoc": {
          "line": 218,
          "column": 17,
          "position": 1245
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ".extend({\n      cursor: z.string().optional(),\n      limit: z.number().int().min(1).max(100).default(20),\n      sort: z.string().optional(),\n    }),\n  },\n  responses: {\n    200: {\n      description: 'Deals list'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/scripts/openapi.ts",
        "start": 324,
        "end": 332,
        "startLoc": {
          "line": 324,
          "column": 17,
          "position": 1921
        },
        "endLoc": {
          "line": 332,
          "column": 13,
          "position": 2011
        }
      },
      "secondFile": {
        "name": "apps/api/scripts/openapi.ts",
        "start": 210,
        "end": 218,
        "startLoc": {
          "line": 210,
          "column": 20,
          "position": 1155
        },
        "endLoc": {
          "line": 218,
          "column": 17,
          "position": 1245
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ".extend({\n      cursor: z.string().optional(),\n      limit: z.number().int().min(1).max(100).default(20),\n      sort: z.string().optional(),\n    }),\n  },\n  responses: {\n    200: {\n      description: 'Products list'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/scripts/openapi.ts",
        "start": 380,
        "end": 388,
        "startLoc": {
          "line": 380,
          "column": 20,
          "position": 2312
        },
        "endLoc": {
          "line": 388,
          "column": 16,
          "position": 2402
        }
      },
      "secondFile": {
        "name": "apps/api/scripts/openapi.ts",
        "start": 210,
        "end": 218,
        "startLoc": {
          "line": 210,
          "column": 20,
          "position": 1155
        },
        "endLoc": {
          "line": 218,
          "column": 17,
          "position": 1245
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ".extend({\n      cursor: z.string().optional(),\n      limit: z.number().int().min(1).max(100).default(20),\n      sort: z.string().optional(),\n    }),\n  },\n  responses: {\n    200: {\n      description: 'Invoices list'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/scripts/openapi.ts",
        "start": 464,
        "end": 472,
        "startLoc": {
          "line": 464,
          "column": 20,
          "position": 2860
        },
        "endLoc": {
          "line": 472,
          "column": 16,
          "position": 2950
        }
      },
      "secondFile": {
        "name": "apps/api/scripts/openapi.ts",
        "start": 210,
        "end": 218,
        "startLoc": {
          "line": 210,
          "column": 20,
          "position": 1155
        },
        "endLoc": {
          "line": 218,
          "column": 17,
          "position": 1245
        }
      }
    },
    {
      "format": "typescript",
      "lines": 34,
      "fragment": "{\n  openapi: '3.1.0',\n  info: {\n    title: 'ECONEURA API',\n    version: '1.0.0',\n    description: 'Production-ready ERP+CRM API with AI capabilities',\n    contact: {\n      name: 'ECONEURA Team',\n      email: 'api@econeura.dev',\n      url: 'https://econeura.dev'\n    },\n    license: {\n      name: 'Proprietary',\n      url: 'https://econeura.dev/license'\n    }\n  },\n  servers: [\n    {\n      url: process.env.API_URL || 'http://localhost:4000',\n      description: 'Development server',\n    },\n    {\n      url: 'https://api.econeura.dev',\n      description: 'Production server',\n    },\n  ],\n  tags: [\n    { name: 'Authentication', description: 'User authentication and session management' },\n    { name: 'CRM - Companies', description: 'Company management' },\n    { name: 'CRM - Contacts', description: 'Contact management' },  \n    { name: 'CRM - Deals', description: 'Deal pipeline management' },\n    { name: 'ERP - Products', description: 'Product catalog management' },\n    { name: 'ERP - Inventory', description: 'Inventory tracking and adjustments' },\n    { name: 'Finance - Invoices'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/scripts/generate-openapi.ts",
        "start": 6,
        "end": 39,
        "startLoc": {
          "line": 6,
          "column": 2,
          "position": 46
        },
        "endLoc": {
          "line": 39,
          "column": 21,
          "position": 313
        }
      },
      "secondFile": {
        "name": "apps/api/scripts/openapi.ts",
        "start": 595,
        "end": 628,
        "startLoc": {
          "line": 595,
          "column": 2,
          "position": 3708
        },
        "endLoc": {
          "line": 628,
          "column": 18,
          "position": 3974
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "name: { type: 'string', minLength: 2, maxLength: 120 },\n          industry: { type: 'string', maxLength: 80 },\n          website: { type: 'string', format: 'uri' },\n          employees: { type: 'integer', minimum: 0, default: 0 },\n          status: { type: 'string', enum: ['active', 'inactive', 'prospect'], default: 'prospect' },\n          taxId: { type: 'string', maxLength: 50 },\n          email: { type: 'string', format: 'email' },\n          phone: { type: 'string', maxLength: 50 },\n          address: { type: 'string', maxLength: 500 },\n          city: { type: 'string', maxLength: 100 },\n          country: { type: 'string', maxLength: 100 },\n          tags: { type: 'array', items: { type: 'string' }, default: [] },\n        }",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/scripts/generate-openapi.ts",
        "start": 130,
        "end": 142,
        "startLoc": {
          "line": 130,
          "column": 11,
          "position": 1317
        },
        "endLoc": {
          "line": 142,
          "column": 2,
          "position": 1597
        }
      },
      "secondFile": {
        "name": "apps/api/scripts/generate-openapi.ts",
        "start": 109,
        "end": 121,
        "startLoc": {
          "line": 109,
          "column": 11,
          "position": 921
        },
        "endLoc": {
          "line": 121,
          "column": 10,
          "position": 1201
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ": {\n        type: 'object',\n        properties: {\n          name: { type: 'string', minLength: 2, maxLength: 120 },\n          industry: { type: 'string', maxLength: 80 },\n          website: { type: 'string', format: 'uri' },\n          employees: { type: 'integer', minimum: 0 }",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/scripts/generate-openapi.ts",
        "start": 145,
        "end": 151,
        "startLoc": {
          "line": 145,
          "column": 14,
          "position": 1614
        },
        "endLoc": {
          "line": 151,
          "column": 2,
          "position": 1714
        }
      },
      "secondFile": {
        "name": "apps/api/scripts/generate-openapi.ts",
        "start": 127,
        "end": 112,
        "startLoc": {
          "line": 127,
          "column": 14,
          "position": 1299
        },
        "endLoc": {
          "line": 112,
          "column": 2,
          "position": 1002
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "},\n          taxId: { type: 'string', maxLength: 50 },\n          email: { type: 'string', format: 'email' },\n          phone: { type: 'string', maxLength: 50 },\n          address: { type: 'string', maxLength: 500 },\n          city: { type: 'string', maxLength: 100 },\n          country: { type: 'string', maxLength: 100 },\n          tags: { type: 'array', items: { type: 'string' } }",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/scripts/generate-openapi.ts",
        "start": 152,
        "end": 159,
        "startLoc": {
          "line": 152,
          "column": 2,
          "position": 1742
        },
        "endLoc": {
          "line": 159,
          "column": 2,
          "position": 1889
        }
      },
      "secondFile": {
        "name": "apps/api/scripts/generate-openapi.ts",
        "start": 113,
        "end": 120,
        "startLoc": {
          "line": 113,
          "column": 2,
          "position": 1043
        },
        "endLoc": {
          "line": 120,
          "column": 2,
          "position": 1189
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ",\n        tags: ['CRM - Companies'],\n        security: [{ bearerAuth: [] }],\n        parameters: [\n          {\n            name: 'id',\n            in: 'path',\n            required: true,\n            schema: { type: 'string', format: 'uuid' }\n          }\n        ],\n        responses: {\n          '204'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/scripts/generate-openapi.ts",
        "start": 523,
        "end": 535,
        "startLoc": {
          "line": 523,
          "column": 17,
          "position": 4695
        },
        "endLoc": {
          "line": 535,
          "column": 6,
          "position": 4786
        }
      },
      "secondFile": {
        "name": "apps/api/scripts/generate-openapi.ts",
        "start": 461,
        "end": 473,
        "startLoc": {
          "line": 461,
          "column": 20,
          "position": 4289
        },
        "endLoc": {
          "line": 473,
          "column": 6,
          "position": 4380
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "],\n        security: [{ bearerAuth: [] }],\n        parameters: [\n          {\n            name: 'id',\n            in: 'path',\n            required: true,\n            schema: { type: 'string', format: 'uuid' }\n          }\n        ],\n        responses: {\n          '204': {\n            description: 'Company deleted'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/scripts/generate-openapi.ts",
        "start": 524,
        "end": 536,
        "startLoc": {
          "line": 524,
          "column": 18,
          "position": 4703
        },
        "endLoc": {
          "line": 536,
          "column": 18,
          "position": 4795
        }
      },
      "secondFile": {
        "name": "apps/api/scripts/generate-openapi.ts",
        "start": 373,
        "end": 385,
        "startLoc": {
          "line": 373,
          "column": 17,
          "position": 3573
        },
        "endLoc": {
          "line": 385,
          "column": 18,
          "position": 3665
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ");\nfs.writeFileSync(outputPath, JSON.stringify(openApiDocument, null, 2));\n\n\n// Also write a YAML version for human readability\nimport('js-yaml').then((yaml) => {\n  const yamlStr = yaml.dump(openApiDocument);\n  const yamlPath = path.resolve(process.cwd(), 'openapi.yaml'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/scripts/generate-openapi.ts",
        "start": 577,
        "end": 584,
        "startLoc": {
          "line": 577,
          "column": 15,
          "position": 5018
        },
        "endLoc": {
          "line": 584,
          "column": 15,
          "position": 5095
        }
      },
      "secondFile": {
        "name": "apps/api/scripts/openapi.ts",
        "start": 637,
        "end": 644,
        "startLoc": {
          "line": 637,
          "column": 24,
          "position": 4082
        },
        "endLoc": {
          "line": 644,
          "column": 24,
          "position": 4159
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": "import express from \"express\";\nimport cors from \"cors\";\nimport helmet from \"helmet\";\nimport { structuredLogger } from \"./lib/structured-logger.js\";\nimport { ErrorHandler } from \"./lib/error-handler.js\";\n\n// Import health modes (PR-22)\nimport { healthModeManager } from './lib/health-modes.js';\nimport { healthMonitor } from './lib/health-monitor.js';\nimport { cacheManager } from './lib/advanced-cache.js';\n\n// Import FinOps services (PR-45)\nimport { finOpsSystem } from './lib/finops.js';\nimport { BudgetManagerService } from './lib/budget-manager.service.js';\nimport { CostTrackerService } from './lib/cost-tracker.service.js';\nimport { CostOptimizerService } from './lib/cost-optimizer.service.js';\n\n// Import SEPA services (PR-42)\nimport { SEPAParserService } from './lib/sepa-parser.service.js';\n\n// Quiet Hours services (PR-46) - Using simplified endpoints",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/backup/index.working.backup.ts",
        "start": 1,
        "end": 21,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 21,
          "column": 61,
          "position": 167
        }
      },
      "secondFile": {
        "name": "apps/api/src/index.final.ts",
        "start": 1,
        "end": 21,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 21,
          "column": 44,
          "position": 167
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "// Import middlewares (PR-27, PR-28, PR-29)\nimport { observabilityMiddleware } from './middleware/observability.js';\nimport { finOpsMiddleware } from './middleware/finops.js';\n\n// Import routers for working PRs\nimport { analyticsRouter } from './routes/analytics.js';\nimport { eventsRouter } from './routes/events.js';\nimport { cockpitRouter } from './routes/cockpit.js';\n\nconst app = express();\nconst PORT = process.env.PORT || 3001;\n\n// Initialize services",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/backup/index.working.backup.ts",
        "start": 25,
        "end": 37,
        "startLoc": {
          "line": 25,
          "column": 1,
          "position": 173
        },
        "endLoc": {
          "line": 37,
          "column": 23,
          "position": 273
        }
      },
      "secondFile": {
        "name": "packages/shared/src/backup/intermediate.ts",
        "start": 11,
        "end": 23,
        "startLoc": {
          "line": 11,
          "column": 1,
          "position": 87
        },
        "endLoc": {
          "line": 23,
          "column": 28,
          "position": 187
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "import { analyticsRouter } from './routes/analytics.js';\nimport { eventsRouter } from './routes/events.js';\nimport { cockpitRouter } from './routes/cockpit.js';\n\nconst app = express();\nconst PORT = process.env.PORT || 3001;\n\n// Initialize services\nconst errorHandler = new ErrorHandler();\nconst budgetManager = new BudgetManagerService();\nconst costTracker = new CostTrackerService();\nconst costOptimizer = new CostOptimizerService();\nconst sepaParser = new SEPAParserService();\n// Quiet Hours services (PR-46) - Simplified implementation",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/backup/index.working.backup.ts",
        "start": 30,
        "end": 43,
        "startLoc": {
          "line": 30,
          "column": 1,
          "position": 204
        },
        "endLoc": {
          "line": 43,
          "column": 60,
          "position": 340
        }
      },
      "secondFile": {
        "name": "apps/api/src/index.final.ts",
        "start": 26,
        "end": 40,
        "startLoc": {
          "line": 26,
          "column": 1,
          "position": 198
        },
        "endLoc": {
          "line": 40,
          "column": 31,
          "position": 335
        }
      }
    },
    {
      "format": "typescript",
      "lines": 72,
      "fragment": "// Security middleware (PR-28)\napp.use(helmet({\n  contentSecurityPolicy: {\n    directives: {\n      defaultSrc: [\"'self'\"],\n      scriptSrc: [\"'self'\", \"'unsafe-inline'\"],\n      styleSrc: [\"'self'\", \"'unsafe-inline'\"],\n      imgSrc: [\"'self'\", \"data:\", \"https:\"],\n      connectSrc: [\"'self'\", \"https:\"],\n    },\n  },\n  hsts: {\n    maxAge: 31536000,\n    includeSubDomains: true,\n    preload: true\n  }\n}));\n\n// CORS configuration (PR-28)\napp.use(cors({\n  origin: ['http://localhost:3000', 'http://localhost:3001'],\n  credentials: true,\n  methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\n  allowedHeaders: ['Content-Type', 'Authorization', 'X-Org-ID', 'X-User-ID', 'X-Correlation-ID'],\n  exposedHeaders: ['X-System-Mode', 'X-Est-Cost-EUR', 'X-Budget-Pct', 'X-Latency-ms', 'X-Route']\n}));\n\n// Basic middleware\napp.use(express.json({ limit: '10mb' }));\napp.use(express.urlencoded({ extended: true }));\n\n// Apply observability middleware (PR-23)\napp.use(observabilityMiddleware);\n\n// Apply FinOps middleware (PR-29)\napp.use(finOpsMiddleware);\n\n// Simple rate limiting (PR-29)\nconst rateLimitStore = new Map();\napp.use((req, res, next) => {\n  const ip = req.ip || req.connection.remoteAddress || 'unknown';\n  const now = Date.now();\n  const windowMs = 15 * 60 * 1000; // 15 minutes\n  const maxRequests = 100;\n  \n  if (!rateLimitStore.has(ip)) {\n    rateLimitStore.set(ip, { count: 1, resetTime: now + windowMs });\n    return next();\n  }\n  \n  const record = rateLimitStore.get(ip);\n  if (now > record.resetTime) {\n    record.count = 1;\n    record.resetTime = now + windowMs;\n    return next();\n  }\n  \n  if (record.count >= maxRequests) {\n    return res.status(429).json({\n      error: 'Too Many Requests',\n      message: 'Rate limit exceeded',\n      retryAfter: Math.ceil((record.resetTime - now) / 1000)\n    });\n  }\n  \n  record.count++;\n  next();\n});\n\n// Basic validation middleware (PR-27)\napp.use((req, res, next) => {\n  if",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/backup/index.working.backup.ts",
        "start": 46,
        "end": 117,
        "startLoc": {
          "line": 46,
          "column": 1,
          "position": 345
        },
        "endLoc": {
          "line": 117,
          "column": 3,
          "position": 974
        }
      },
      "secondFile": {
        "name": "apps/api/src/index.final.ts",
        "start": 40,
        "end": 89,
        "startLoc": {
          "line": 40,
          "column": 1,
          "position": 335
        },
        "endLoc": {
          "line": 89,
          "column": 28,
          "position": 798
        }
      }
    },
    {
      "format": "typescript",
      "lines": 62,
      "fragment": "app.use((req, res, next) => {\n  if (req.headers['content-type'] && req.headers['content-type'].includes('application/json')) {\n    if (req.body && typeof req.body !== 'object') {\n      return res.status(400).json({\n        error: 'Invalid JSON',\n        message: 'Request body must be valid JSON'\n      });\n    }\n  }\n  next();\n});\n\n// Basic health check endpoint (< 200ms, no external dependencies)\napp.get(\"/health\", (req, res) => {\n  const ts = new Date().toISOString();\n  const version = process.env.npm_package_version || \"1.0.0\";\n  const currentMode = healthModeManager.getCurrentMode();\n  res.set('X-System-Mode', currentMode);\n  res.status(200).json({\n    status: \"ok\",\n    ts,\n    version,\n    mode: currentMode\n  });\n});\n\n// Enhanced Health check endpoints (PR-22)\napp.get(\"/health/live\", async (req, res) => {\n  try {\n    const result = await healthModeManager.getLivenessProbe();\n    const statusCode = result.status === 'ok' ? 200 : 503;\n    res.set('X-System-Mode', result.mode);\n    res.status(statusCode).json(result);\n  } catch (error) {\n    res.status(503).json({\n      status: \"error\",\n      mode: \"degraded\",\n      timestamp: new Date().toISOString(),\n      version: process.env.npm_package_version || '1.0.0',\n      error: (error as Error).message\n    });\n  }\n});\n\napp.get(\"/health/ready\", async (req, res) => {\n  try {\n    const result = await healthModeManager.getReadinessProbe();\n    const statusCode = result.status === 'ok' ? 200 : 503;\n    res.set('X-System-Mode', result.mode);\n    res.status(statusCode).json(result);\n  } catch (error) {\n    res.status(503).json({\n      status: \"error\",\n      mode: \"degraded\",\n      timestamp: new Date().toISOString(),\n      version: process.env.npm_package_version || '1.0.0',\n      error: (error as Error).message\n    });\n  }\n});\n\n// FinOps endpoints (PR-45)",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/backup/index.working.backup.ts",
        "start": 116,
        "end": 177,
        "startLoc": {
          "line": 116,
          "column": 1,
          "position": 955
        },
        "endLoc": {
          "line": 177,
          "column": 28,
          "position": 1574
        }
      },
      "secondFile": {
        "name": "apps/api/src/index.final.ts",
        "start": 120,
        "end": 133,
        "startLoc": {
          "line": 120,
          "column": 1,
          "position": 1045
        },
        "endLoc": {
          "line": 133,
          "column": 4,
          "position": 1214
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "app.get(\"/v1/finops/budgets\", async (req, res) => {\n  try {\n    const orgId = req.headers['x-org-id'] as string || 'demo-org';\n    const budgets = budgetManager.getBudgets(orgId);\n    \n    res.set({\n      'X-Est-Cost-EUR': '0.0020',\n      'X-Budget-Pct': '0.3',\n      'X-Latency-ms': '45',\n      'X-Route': 'local'\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/backup/index.working.backup.ts",
        "start": 178,
        "end": 188,
        "startLoc": {
          "line": 178,
          "column": 1,
          "position": 1576
        },
        "endLoc": {
          "line": 188,
          "column": 2,
          "position": 1676
        }
      },
      "secondFile": {
        "name": "apps/api/src/index.final.ts",
        "start": 269,
        "end": 278,
        "startLoc": {
          "line": 269,
          "column": 1,
          "position": 2361
        },
        "endLoc": {
          "line": 278,
          "column": 2,
          "position": 2459
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": "});\n  } catch (error) {\n    res.status(500).json({\n      success: false,\n      error: 'Failed to get budgets',\n      message: (error as Error).message\n    });\n  }\n});\n\napp.post(\"/v1/finops/budgets\", async (req, res) => {\n  try {\n    const budget = await budgetManager.createBudget(req.body);\n    \n    res.set({\n      'X-Est-Cost-EUR': '0.0050',\n      'X-Budget-Pct': '0.8',\n      'X-Latency-ms': '120',\n      'X-Route': 'local'\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/backup/index.working.backup.ts",
        "start": 194,
        "end": 213,
        "startLoc": {
          "line": 194,
          "column": 5,
          "position": 1712
        },
        "endLoc": {
          "line": 213,
          "column": 2,
          "position": 1861
        }
      },
      "secondFile": {
        "name": "apps/api/src/index.final.ts",
        "start": 291,
        "end": 309,
        "startLoc": {
          "line": 291,
          "column": 5,
          "position": 2580
        },
        "endLoc": {
          "line": 309,
          "column": 2,
          "position": 2727
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "});\n    \n    res.status(201).json({\n      success: true,\n      data: budget,\n      message: 'Budget created successfully'\n    });\n  } catch (error) {\n    res.status(500).json({\n      success: false,\n      error: 'Failed to create budget',\n      message: (error as Error).message\n    });\n  }\n});\n\napp.get(\"/v1/finops/costs\", async (req, res) => {\n  try {\n    const orgId = req.headers['x-org-id'] as string || 'demo-org';\n    const costs = costTracker.getCostsByService(orgId);\n    \n    res",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/backup/index.working.backup.ts",
        "start": 213,
        "end": 234,
        "startLoc": {
          "line": 213,
          "column": 5,
          "position": 1861
        },
        "endLoc": {
          "line": 234,
          "column": 4,
          "position": 2034
        }
      },
      "secondFile": {
        "name": "apps/api/src/index.final.ts",
        "start": 311,
        "end": 331,
        "startLoc": {
          "line": 311,
          "column": 5,
          "position": 2744
        },
        "endLoc": {
          "line": 331,
          "column": 6,
          "position": 2915
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "app.get(\"/v1/quiet-hours\", async (req, res) => {\n  const orgId = req.headers['x-org-id'] as string || 'demo-org';\n  const quietHoursConfig = {\n    orgId,\n    enabled: true,\n    timezone: 'Europe/Madrid',\n    weekdayHours: { start: '22:00', end: '08:00' },\n    weekendHours: { start: '20:00', end: '10:00' },\n    notifications: {\n      email: false,\n      sms: false,\n      teams: false\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/backup/index.working.backup.ts",
        "start": 330,
        "end": 342,
        "startLoc": {
          "line": 330,
          "column": 1,
          "position": 2738
        },
        "endLoc": {
          "line": 342,
          "column": 2,
          "position": 2875
        }
      },
      "secondFile": {
        "name": "apps/api/src/index.final.ts",
        "start": 515,
        "end": 526,
        "startLoc": {
          "line": 515,
          "column": 1,
          "position": 4508
        },
        "endLoc": {
          "line": 526,
          "column": 2,
          "position": 4643
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ",\n    lastUpdated: new Date().toISOString()\n  };\n  \n  res.json({\n    success: true,\n    data: quietHoursConfig\n  });\n});\n\napp.post(\"/v1/quiet-hours\", async (req, res) => {\n  const orgId = req.headers['x-org-id'] as string || 'demo-org';\n  const config = {\n    ...req.body,\n    orgId,\n    lastUpdated: new Date().toISOString()\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/backup/index.working.backup.ts",
        "start": 342,
        "end": 358,
        "startLoc": {
          "line": 342,
          "column": 2,
          "position": 2876
        },
        "endLoc": {
          "line": 358,
          "column": 2,
          "position": 3006
        }
      },
      "secondFile": {
        "name": "apps/api/src/index.final.ts",
        "start": 535,
        "end": 550,
        "startLoc": {
          "line": 535,
          "column": 2,
          "position": 4689
        },
        "endLoc": {
          "line": 550,
          "column": 2,
          "position": 4817
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": "}\n\n# HELP econeura_system_uptime_seconds System uptime in seconds\n# TYPE econeura_system_uptime_seconds counter\neconeura_system_uptime_seconds ${process.uptime()}\n`;\n    \n    res.set('Content-Type', 'text/plain');\n    res.send(metrics.trim());\n  } catch (error) {\n    res.status(500).json({\n      error: 'Failed to get metrics',\n      message: (error as Error).message\n    });\n  }\n});\n\n// Cache statistics endpoint\napp.get(\"/cache/stats\", (req, res) => {\n  try {\n    const stats = cacheManager",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/backup/index.working.backup.ts",
        "start": 438,
        "end": 458,
        "startLoc": {
          "line": 438,
          "column": 10,
          "position": 3722
        },
        "endLoc": {
          "line": 458,
          "column": 13,
          "position": 3850
        }
      },
      "secondFile": {
        "name": "packages/shared/src/backup/intermediate.ts",
        "start": 172,
        "end": 192,
        "startLoc": {
          "line": 172,
          "column": 11,
          "position": 1539
        },
        "endLoc": {
          "line": 192,
          "column": 21,
          "position": 1667
        }
      }
    },
    {
      "format": "typescript",
      "lines": 28,
      "fragment": ".getAllStats();\n    res.json({\n      success: true,\n      data: stats,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    res.status(500).json({\n      success: false,\n      error: 'Failed to get cache stats',\n      message: (error as Error).message\n    });\n  }\n});\n\n// API info endpoint with comprehensive feature list\napp.get(\"/\", (req, res) => {\n  res.json({\n    name: \"ECONEURA API\",\n    version: process.env.npm_package_version || \"1.0.0\",\n    status: \"running\",\n    timestamp: new Date().toISOString(),\n    features: [\n      \"PR-22: Health modes (live/ready/degraded)\",\n      \"PR-23: Observability coherente (logs + métricas + traces)\",\n      \"PR-24: Analytics events with Zod validation\", \n      \"PR-27: Validación básica en requests\",\n      \"PR-28: Security headers completos + CORS + Helmet\"",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/backup/index.working.backup.ts",
        "start": 458,
        "end": 485,
        "startLoc": {
          "line": 458,
          "column": 13,
          "position": 3851
        },
        "endLoc": {
          "line": 485,
          "column": 52,
          "position": 4056
        }
      },
      "secondFile": {
        "name": "packages/shared/src/backup/intermediate.ts",
        "start": 192,
        "end": 219,
        "startLoc": {
          "line": 192,
          "column": 21,
          "position": 1668
        },
        "endLoc": {
          "line": 219,
          "column": 41,
          "position": 1873
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "]\n  });\n});\n\n// Mount Analytics routes (PR-24)\napp.use('/v1/analytics', analyticsRouter);\n\n// Mount Events (SSE) routes\napp.use('/v1/events', eventsRouter);\n\n// Mount Cockpit routes\napp.use('/v1/cockpit', cockpitRouter);\n\n// Basic error handling middleware\napp.use((error: Error, req: express.Request, res: express.Response, next: express.NextFunction) => {\n  const errorId = `err_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  \n  structuredLogger.error('Unhandled error', error, {\n    errorId,\n    path: req.path,\n    method: req.method,\n    headers",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/backup/index.working.backup.ts",
        "start": 523,
        "end": 544,
        "startLoc": {
          "line": 523,
          "column": 5,
          "position": 4209
        },
        "endLoc": {
          "line": 544,
          "column": 8,
          "position": 4381
        }
      },
      "secondFile": {
        "name": "packages/shared/src/backup/intermediate.ts",
        "start": 241,
        "end": 765,
        "startLoc": {
          "line": 241,
          "column": 5,
          "position": 1962
        },
        "endLoc": {
          "line": 765,
          "column": 10,
          "position": 6429
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": ",\n    path: req.path,\n    method: req.method,\n    headers: req.headers\n  });\n\n  res.status(500).json({\n    error: 'Internal server error',\n    message: 'An unexpected error occurred',\n    errorId,\n    timestamp: new Date().toISOString()\n  });\n});\n\n// 404 handler\napp.use((req: express.Request, res: express.Response) => {\n  res.status(404).json({\n    error: 'Not found',\n    message: `Route ${req.method} ${req.path} not found`,\n    timestamp: new Date().toISOString(),\n    availableEndpoints: [\n      'GET /health', 'GET /health/live', 'GET /health/ready', 'GET /metrics',\n      'GET /v1/analytics/*', 'GET /v1/events/*'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/backup/index.working.backup.ts",
        "start": 541,
        "end": 563,
        "startLoc": {
          "line": 541,
          "column": 8,
          "position": 4360
        },
        "endLoc": {
          "line": 563,
          "column": 19,
          "position": 4551
        }
      },
      "secondFile": {
        "name": "packages/shared/src/backup/intermediate.ts",
        "start": 261,
        "end": 283,
        "startLoc": {
          "line": 261,
          "column": 6,
          "position": 2128
        },
        "endLoc": {
          "line": 283,
          "column": 17,
          "position": 2319
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "]\n  });\n});\n\n// Start server\nconst server = app.listen(PORT, () => {\n  structuredLogger.info(`ECONEURA API Server running on port ${PORT}`, {\n    port: PORT,\n    environment: process.env.NODE_ENV || 'development',\n    version: process.env.npm_package_version || '1.0.0',\n    features: [\n      'PR-22: Health modes (live/ready/degraded)',\n      'PR-23: Observability coherente (logs + métricas + traces)',\n      'PR-24: Analytics events with Zod validation', \n      'PR-27: Validación básica en requests',\n      'PR-28: Security headers completos + CORS + Helmet'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/backup/index.working.backup.ts",
        "start": 567,
        "end": 582,
        "startLoc": {
          "line": 567,
          "column": 5,
          "position": 4578
        },
        "endLoc": {
          "line": 582,
          "column": 52,
          "position": 4687
        }
      },
      "secondFile": {
        "name": "packages/shared/src/backup/intermediate.ts",
        "start": 284,
        "end": 299,
        "startLoc": {
          "line": 284,
          "column": 5,
          "position": 2325
        },
        "endLoc": {
          "line": 299,
          "column": 41,
          "position": 2434
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "]\n  });\n});\n\n// Graceful shutdown\nprocess.on('SIGTERM', () => {\n  structuredLogger.info('SIGTERM received, shutting down gracefully');\n  server.close(() => {\n    structuredLogger.info('Process terminated');\n    process.exit(0);\n  });\n});\n\nprocess.on('SIGINT', () => {\n  structuredLogger.info('SIGINT received, shutting down gracefully');\n  server.close(() => {\n    structuredLogger.info('Process terminated');\n    process.exit(0);\n  });\n});\n\nexport default app;",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/backup/index.working.backup.ts",
        "start": 601,
        "end": 622,
        "startLoc": {
          "line": 601,
          "column": 5,
          "position": 4763
        },
        "endLoc": {
          "line": 622,
          "column": 2,
          "position": 4913
        }
      },
      "secondFile": {
        "name": "packages/shared/src/backup/intermediate.ts",
        "start": 305,
        "end": 326,
        "startLoc": {
          "line": 305,
          "column": 5,
          "position": 2457
        },
        "endLoc": {
          "line": 326,
          "column": 2,
          "position": 2607
        }
      }
    },
    {
      "format": "typescript",
      "lines": 76,
      "fragment": ";\n\nconst app = express();\nconst PORT = process.env.PORT || 3001;\n\n// Basic middleware\napp.use(express.json({ limit: '10mb' }));\napp.use(express.urlencoded({ extended: true }));\n\n// CORS configuration\napp.use(cors({\n  origin: ['http://localhost:3000', 'http://localhost:3001'],\n  credentials: true,\n  methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\n  allowedHeaders: ['Content-Type', 'Authorization', 'X-Org-ID', 'X-User-ID', 'X-Correlation-ID']\n}));\n\n// Basic health check endpoint (< 200ms, no external dependencies)\napp.get(\"/health\", (req, res) => {\n  const ts = new Date().toISOString();\n  const version = process.env.npm_package_version || \"1.0.0\";\n  const currentMode = healthModeManager.getCurrentMode();\n  res.set('X-System-Mode', currentMode);\n  res.status(200).json({\n    status: \"ok\",\n    ts,\n    version,\n    mode: currentMode\n  });\n});\n\n// Enhanced Health check endpoints (PR-22)\napp.get(\"/health/live\", async (req, res) => {\n  try {\n    const result = await healthModeManager.getLivenessProbe();\n    const statusCode = result.status === 'ok' ? 200 : 503;\n    res.set('X-System-Mode', result.mode);\n    res.status(statusCode).json(result);\n  } catch (error) {\n    res.status(503).json({\n      status: \"error\",\n      mode: \"degraded\",\n      timestamp: new Date().toISOString(),\n      version: process.env.npm_package_version || '1.0.0',\n      error: (error as Error).message\n    });\n  }\n});\n\napp.get(\"/health/ready\", async (req, res) => {\n  try {\n    const result = await healthModeManager.getReadinessProbe();\n    const statusCode = result.status === 'ok' ? 200 : 503;\n    res.set('X-System-Mode', result.mode);\n    res.status(statusCode).json(result);\n  } catch (error) {\n    res.status(503).json({\n      status: \"error\",\n      mode: \"degraded\",\n      timestamp: new Date().toISOString(),\n      version: process.env.npm_package_version || '1.0.0',\n      error: (error as Error).message\n    });\n  }\n});\n\n// Basic API info endpoint\napp.get(\"/\", (req, res) => {\n  res.json({\n    name: \"ECONEURA API\",\n    version: process.env.npm_package_version || \"1.0.0\",\n    status: \"running\",\n    timestamp: new Date().toISOString(),\n    endpoints: [\n      \"GET /health - Basic health check\",\n      \"GET /health/live - Liveness probe (PR-22)\"",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/backup/index.restored.backup.ts",
        "start": 11,
        "end": 86,
        "startLoc": {
          "line": 11,
          "column": 22,
          "position": 87
        },
        "endLoc": {
          "line": 86,
          "column": 44,
          "position": 821
        }
      },
      "secondFile": {
        "name": "packages/shared/src/backup/basic.ts",
        "start": 6,
        "end": 81,
        "startLoc": {
          "line": 6,
          "column": 24,
          "position": 45
        },
        "endLoc": {
          "line": 81,
          "column": 36,
          "position": 779
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": ",\n      \"POST /v1/analytics/events - Track analytics events (PR-24)\",\n      \"GET /v1/analytics/events - Query analytics events (PR-24)\",\n      \"GET /v1/analytics/metrics - Get aggregated metrics (PR-24)\",\n      \"GET /v1/events - Server-Sent Events for real-time updates\",\n      \"POST /v1/events/broadcast - Broadcast events to organization\",\n      \"GET /v1/cockpit/overview - Operational overview dashboard\",\n      \"GET /v1/cockpit/agents - Agent execution details\",\n      \"GET /v1/cockpit/costs - Cost breakdown by org/playbook\",\n      \"GET /v1/cockpit/system - System metrics and health\"\n    ]\n  });\n});\n\n// Mount Analytics routes (PR-24)\napp.use('/v1/analytics', analyticsRouter);\n\n// Mount Events (SSE) routes\napp.use('/v1/events', eventsRouter);\n\n// Mount Cockpit routes\napp.use('/v1/cockpit', cockpitRouter);\n\n// Basic error handler",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/backup/index.restored.backup.ts",
        "start": 87,
        "end": 110,
        "startLoc": {
          "line": 87,
          "column": 46,
          "position": 827
        },
        "endLoc": {
          "line": 110,
          "column": 23,
          "position": 919
        }
      },
      "secondFile": {
        "name": "packages/shared/src/backup/intermediate.ts",
        "start": 231,
        "end": 254,
        "startLoc": {
          "line": 231,
          "column": 38,
          "position": 1924
        },
        "endLoc": {
          "line": 254,
          "column": 35,
          "position": 2016
        }
      }
    },
    {
      "format": "typescript",
      "lines": 35,
      "fragment": ");\n\n// Basic error handler\napp.use((error: Error, req: express.Request, res: express.Response, next: express.NextFunction) => {\n  structuredLogger.error('Unhandled error', error, {\n    path: req.path,\n    method: req.method,\n    headers: req.headers\n  });\n\n  res.status(500).json({\n    error: 'Internal server error',\n    message: 'An unexpected error occurred',\n    timestamp: new Date().toISOString()\n  });\n});\n\n// 404 handler\napp.use((req: express.Request, res: express.Response) => {\n  res.status(404).json({\n    error: 'Not found',\n    message: `Route ${req.method} ${req.path} not found`,\n    timestamp: new Date().toISOString()\n  });\n});\n\n// Start server\nconst server = app.listen(PORT, () => {\n  structuredLogger.info(`ECONEURA API Server running on port ${PORT}`, {\n    port: PORT,\n    environment: process.env.NODE_ENV || 'development',\n    version: process.env.npm_package_version || '1.0.0',\n    features: [\n      'PR-22: Health modes (live/ready/degraded)',\n      'PR-24: Analytics events with Zod validation'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/backup/index.restored.backup.ts",
        "start": 108,
        "end": 142,
        "startLoc": {
          "line": 108,
          "column": 14,
          "position": 915
        },
        "endLoc": {
          "line": 142,
          "column": 46,
          "position": 1228
        }
      },
      "secondFile": {
        "name": "packages/shared/src/backup/basic.ts",
        "start": 85,
        "end": 296,
        "startLoc": {
          "line": 85,
          "column": 2,
          "position": 795
        },
        "endLoc": {
          "line": 296,
          "column": 60,
          "position": 2421
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "]\n  });\n});\n\n// Graceful shutdown\nprocess.on('SIGTERM', () => {\n  structuredLogger.info('SIGTERM received, shutting down gracefully');\n  server.close(() => {\n    structuredLogger.info('Process terminated');\n    process.exit(0);\n  });\n});\n\nprocess.on('SIGINT', () => {\n  structuredLogger.info('SIGINT received, shutting down gracefully');\n  server.close(() => {\n    structuredLogger.info('Process terminated');\n    process.exit(0);\n  });\n});\n\nexport default app;",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/backup/index.restored.backup.ts",
        "start": 145,
        "end": 166,
        "startLoc": {
          "line": 145,
          "column": 5,
          "position": 1240
        },
        "endLoc": {
          "line": 166,
          "column": 2,
          "position": 1385
        }
      },
      "secondFile": {
        "name": "apps/api/src/index.expanded.ts",
        "start": 252,
        "end": 326,
        "startLoc": {
          "line": 252,
          "column": 5,
          "position": 1913
        },
        "endLoc": {
          "line": 326,
          "column": 2,
          "position": 2607
        }
      }
    },
    {
      "format": "typescript",
      "lines": 72,
      "fragment": "import { healthModeManager } from './lib/health-modes.js';\n\n// Import routers for working PRs\nimport { analyticsRouter } from './routes/analytics.js';\nimport { eventsRouter } from './routes/events.js';\nimport { cockpitRouter } from './routes/cockpit.js';\n\nconst app = express();\nconst PORT = process.env.PORT || 3001;\n\n// Basic middleware\napp.use(express.json({ limit: '10mb' }));\napp.use(express.urlencoded({ extended: true }));\n\n// CORS configuration\napp.use(cors({\n  origin: ['http://localhost:3000', 'http://localhost:3001'],\n  credentials: true,\n  methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\n  allowedHeaders: ['Content-Type', 'Authorization', 'X-Org-ID', 'X-User-ID', 'X-Correlation-ID']\n}));\n\n// Basic health check endpoint (< 200ms, no external dependencies)\napp.get(\"/health\", (req, res) => {\n  const ts = new Date().toISOString();\n  const version = process.env.npm_package_version || \"1.0.0\";\n  const currentMode = healthModeManager.getCurrentMode();\n  res.set('X-System-Mode', currentMode);\n  res.status(200).json({\n    status: \"ok\",\n    ts,\n    version,\n    mode: currentMode\n  });\n});\n\n// Enhanced Health check endpoints (PR-22)\napp.get(\"/health/live\", async (req, res) => {\n  try {\n    const result = await healthModeManager.getLivenessProbe();\n    const statusCode = result.status === 'ok' ? 200 : 503;\n    res.set('X-System-Mode', result.mode);\n    res.status(statusCode).json(result);\n  } catch (error) {\n    res.status(503).json({\n      status: \"error\",\n      mode: \"degraded\",\n      timestamp: new Date().toISOString(),\n      version: process.env.npm_package_version || '1.0.0',\n      error: (error as Error).message\n    });\n  }\n});\n\napp.get(\"/health/ready\", async (req, res) => {\n  try {\n    const result = await healthModeManager.getReadinessProbe();\n    const statusCode = result.status === 'ok' ? 200 : 503;\n    res.set('X-System-Mode', result.mode);\n    res.status(statusCode).json(result);\n  } catch (error) {\n    res.status(503).json({\n      status: \"error\",\n      mode: \"degraded\",\n      timestamp: new Date().toISOString(),\n      version: process.env.npm_package_version || '1.0.0',\n      error: (error as Error).message\n    });\n  }\n});\n\n// Mount Analytics routes (PR-24)",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/backup/index.minimal.ts",
        "start": 6,
        "end": 77,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 34
        },
        "endLoc": {
          "line": 77,
          "column": 34,
          "position": 739
        }
      },
      "secondFile": {
        "name": "apps/api/backup/index.restored.backup.ts",
        "start": 6,
        "end": 133,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 34
        },
        "endLoc": {
          "line": 133,
          "column": 4,
          "position": 1214
        }
      }
    },
    {
      "format": "typescript",
      "lines": 62,
      "fragment": "});\n\n// Mount Analytics routes (PR-24)\napp.use('/v1/analytics', analyticsRouter);\n\n// Mount Events (SSE) routes\napp.use('/v1/events', eventsRouter);\n\n// Mount Cockpit routes\napp.use('/v1/cockpit', cockpitRouter);\n\n// Basic error handler\napp.use((error: Error, req: express.Request, res: express.Response, next: express.NextFunction) => {\n  structuredLogger.error('Unhandled error', error, {\n    path: req.path,\n    method: req.method,\n    headers: req.headers\n  });\n\n  res.status(500).json({\n    error: 'Internal server error',\n    message: 'An unexpected error occurred',\n    timestamp: new Date().toISOString()\n  });\n});\n\n// 404 handler\napp.use((req: express.Request, res: express.Response) => {\n  res.status(404).json({\n    error: 'Not found',\n    message: `Route ${req.method} ${req.path} not found`,\n    timestamp: new Date().toISOString()\n  });\n});\n\n// Start server\nconst server = app.listen(PORT, () => {\n  structuredLogger.info(`ECONEURA API Server running on port ${PORT}`, {\n    port: PORT,\n    environment: process.env.NODE_ENV || 'development',\n    version: process.env.npm_package_version || '1.0.0'\n  });\n});\n\n// Graceful shutdown\nprocess.on('SIGTERM', () => {\n  structuredLogger.info('SIGTERM received, shutting down gracefully');\n  server.close(() => {\n    structuredLogger.info('Process terminated');\n    process.exit(0);\n  });\n});\n\nprocess.on('SIGINT', () => {\n  structuredLogger.info('SIGINT received, shutting down gracefully');\n  server.close(() => {\n    structuredLogger.info('Process terminated');\n    process.exit(0);\n  });\n});\n\nexport default app;",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/backup/index.minimal.ts",
        "start": 75,
        "end": 136,
        "startLoc": {
          "line": 75,
          "column": 1,
          "position": 734
        },
        "endLoc": {
          "line": 136,
          "column": 2,
          "position": 1221
        }
      },
      "secondFile": {
        "name": "apps/api/backup/index.restored.backup.ts",
        "start": 99,
        "end": 326,
        "startLoc": {
          "line": 99,
          "column": 1,
          "position": 872
        },
        "endLoc": {
          "line": 326,
          "column": 2,
          "position": 2607
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": "import express from \"express\";\nimport cors from \"cors\";\nimport helmet from \"helmet\";\nimport { structuredLogger } from \"./lib/structured-logger.js\";\nimport { ErrorHandler } from \"./lib/error-handler.js\";\n\n// Import health modes (PR-22)\nimport { healthModeManager } from './lib/health-modes.js';\nimport { healthMonitor } from './lib/health-monitor.js';\nimport { cacheManager } from './lib/advanced-cache.js';\n\n// Import FinOps services (PR-45)\nimport { finOpsSystem } from './lib/finops.js';\nimport { BudgetManagerService } from './lib/budget-manager.service.js';\nimport { CostTrackerService } from './lib/cost-tracker.service.js';\nimport { CostOptimizerService } from './lib/cost-optimizer.service.js';\n\n// Import SEPA services (PR-42)\nimport { SEPAParserService } from './lib/sepa-parser.service.js';\n\n// Import GDPR services (PR-43)",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/backup/index.mega.ts",
        "start": 1,
        "end": 21,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 21,
          "column": 32,
          "position": 167
        }
      },
      "secondFile": {
        "name": "apps/api/src/index.final.ts",
        "start": 1,
        "end": 21,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 21,
          "column": 44,
          "position": 167
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ";\n\n// Import middlewares (PR-27, PR-28, PR-29)\nimport { observabilityMiddleware } from './middleware/observability.js';\nimport { finOpsMiddleware } from './middleware/finops.js';\n\n// Import routers for working PRs\nimport { analyticsRouter } from './routes/analytics.js';\nimport { eventsRouter } from './routes/events.js';\nimport { cockpitRouter } from './routes/cockpit.js';\n\nconst app = express();\nconst PORT = process.env.PORT || 3001;\n\n// Initialize services\nconst errorHandler = new ErrorHandler();\nconst budgetManager = new BudgetManagerService();\nconst costTracker = new CostTrackerService();\nconst costOptimizer = new CostOptimizerService();\nconst sepaParser = new SEPAParserService();\nconst",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/backup/index.mega.ts",
        "start": 24,
        "end": 44,
        "startLoc": {
          "line": 24,
          "column": 30,
          "position": 206
        },
        "endLoc": {
          "line": 44,
          "column": 6,
          "position": 376
        }
      },
      "secondFile": {
        "name": "packages/shared/src/backup/intermediate.ts",
        "start": 9,
        "end": 40,
        "startLoc": {
          "line": 9,
          "column": 26,
          "position": 84
        },
        "endLoc": {
          "line": 40,
          "column": 31,
          "position": 335
        }
      }
    },
    {
      "format": "typescript",
      "lines": 138,
      "fragment": "();\n\n// Security middleware (PR-28)\napp.use(helmet({\n  contentSecurityPolicy: {\n    directives: {\n      defaultSrc: [\"'self'\"],\n      scriptSrc: [\"'self'\", \"'unsafe-inline'\"],\n      styleSrc: [\"'self'\", \"'unsafe-inline'\"],\n      imgSrc: [\"'self'\", \"data:\", \"https:\"],\n      connectSrc: [\"'self'\", \"https:\"],\n    },\n  },\n  hsts: {\n    maxAge: 31536000,\n    includeSubDomains: true,\n    preload: true\n  }\n}));\n\n// CORS configuration (PR-28)\napp.use(cors({\n  origin: ['http://localhost:3000', 'http://localhost:3001'],\n  credentials: true,\n  methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\n  allowedHeaders: ['Content-Type', 'Authorization', 'X-Org-ID', 'X-User-ID', 'X-Correlation-ID'],\n  exposedHeaders: ['X-System-Mode', 'X-Est-Cost-EUR', 'X-Budget-Pct', 'X-Latency-ms', 'X-Route']\n}));\n\n// Basic middleware\napp.use(express.json({ limit: '10mb' }));\napp.use(express.urlencoded({ extended: true }));\n\n// Apply observability middleware (PR-23)\napp.use(observabilityMiddleware);\n\n// Apply FinOps middleware (PR-29)\napp.use(finOpsMiddleware);\n\n// Simple rate limiting (PR-29)\nconst rateLimitStore = new Map();\napp.use((req, res, next) => {\n  const ip = req.ip || req.connection.remoteAddress || 'unknown';\n  const now = Date.now();\n  const windowMs = 15 * 60 * 1000; // 15 minutes\n  const maxRequests = 100;\n  \n  if (!rateLimitStore.has(ip)) {\n    rateLimitStore.set(ip, { count: 1, resetTime: now + windowMs });\n    return next();\n  }\n  \n  const record = rateLimitStore.get(ip);\n  if (now > record.resetTime) {\n    record.count = 1;\n    record.resetTime = now + windowMs;\n    return next();\n  }\n  \n  if (record.count >= maxRequests) {\n    return res.status(429).json({\n      error: 'Too Many Requests',\n      message: 'Rate limit exceeded',\n      retryAfter: Math.ceil((record.resetTime - now) / 1000)\n    });\n  }\n  \n  record.count++;\n  next();\n});\n\n// Basic validation middleware (PR-27)\napp.use((req, res, next) => {\n  if (req.headers['content-type'] && req.headers['content-type'].includes('application/json')) {\n    if (req.body && typeof req.body !== 'object') {\n      return res.status(400).json({\n        error: 'Invalid JSON',\n        message: 'Request body must be valid JSON'\n      });\n    }\n  }\n  next();\n});\n\n// Basic health check endpoint (< 200ms, no external dependencies)\napp.get(\"/health\", (req, res) => {\n  const ts = new Date().toISOString();\n  const version = process.env.npm_package_version || \"1.0.0\";\n  const currentMode = healthModeManager.getCurrentMode();\n  res.set('X-System-Mode', currentMode);\n  res.status(200).json({\n    status: \"ok\",\n    ts,\n    version,\n    mode: currentMode\n  });\n});\n\n// Enhanced Health check endpoints (PR-22)\napp.get(\"/health/live\", async (req, res) => {\n  try {\n    const result = await healthModeManager.getLivenessProbe();\n    const statusCode = result.status === 'ok' ? 200 : 503;\n    res.set('X-System-Mode', result.mode);\n    res.status(statusCode).json(result);\n  } catch (error) {\n    res.status(503).json({\n      status: \"error\",\n      mode: \"degraded\",\n      timestamp: new Date().toISOString(),\n      version: process.env.npm_package_version || '1.0.0',\n      error: (error as Error).message\n    });\n  }\n});\n\napp.get(\"/health/ready\", async (req, res) => {\n  try {\n    const result = await healthModeManager.getReadinessProbe();\n    const statusCode = result.status === 'ok' ? 200 : 503;\n    res.set('X-System-Mode', result.mode);\n    res.status(statusCode).json(result);\n  } catch (error) {\n    res.status(503).json({\n      status: \"error\",\n      mode: \"degraded\",\n      timestamp: new Date().toISOString(),\n      version: process.env.npm_package_version || '1.0.0',\n      error: (error as Error).message\n    });\n  }\n});\n\n// FinOps endpoints (PR-45)\napp.get(\"/v1/finops/budgets\", async (req, res) => {\n  try {\n    const orgId = req.headers['x-org-id'] as string || 'demo-org';\n    const budgets = await",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/backup/index.mega.ts",
        "start": 46,
        "end": 183,
        "startLoc": {
          "line": 46,
          "column": 17,
          "position": 411
        },
        "endLoc": {
          "line": 183,
          "column": 6,
          "position": 1702
        }
      },
      "secondFile": {
        "name": "apps/api/src/index.final.ts",
        "start": 38,
        "end": 181,
        "startLoc": {
          "line": 38,
          "column": 18,
          "position": 330
        },
        "endLoc": {
          "line": 181,
          "column": 14,
          "position": 1631
        }
      }
    },
    {
      "format": "typescript",
      "lines": 52,
      "fragment": "(orgId);\n    \n    res.set({\n      'X-Est-Cost-EUR': '0.0020',\n      'X-Budget-Pct': '0.3',\n      'X-Latency-ms': '45',\n      'X-Route': 'local'\n    });\n    \n    res.json({\n      success: true,\n      data: budgets,\n      count: budgets.length\n    });\n  } catch (error) {\n    res.status(500).json({\n      success: false,\n      error: 'Failed to get budgets',\n      message: (error as Error).message\n    });\n  }\n});\n\napp.post(\"/v1/finops/budgets\", async (req, res) => {\n  try {\n    const budget = await budgetManager.createBudget(req.body);\n    \n    res.set({\n      'X-Est-Cost-EUR': '0.0050',\n      'X-Budget-Pct': '0.8',\n      'X-Latency-ms': '120',\n      'X-Route': 'local'\n    });\n    \n    res.status(201).json({\n      success: true,\n      data: budget,\n      message: 'Budget created successfully'\n    });\n  } catch (error) {\n    res.status(500).json({\n      success: false,\n      error: 'Failed to create budget',\n      message: (error as Error).message\n    });\n  }\n});\n\napp.get(\"/v1/finops/costs\", async (req, res) => {\n  try {\n    const orgId = req.headers['x-org-id'] as string || 'demo-org';\n    const costs = await",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/backup/index.mega.ts",
        "start": 183,
        "end": 234,
        "startLoc": {
          "line": 183,
          "column": 25,
          "position": 1707
        },
        "endLoc": {
          "line": 234,
          "column": 6,
          "position": 2096
        }
      },
      "secondFile": {
        "name": "apps/api/backup/index.working.backup.ts",
        "start": 181,
        "end": 330,
        "startLoc": {
          "line": 181,
          "column": 11,
          "position": 1634
        },
        "endLoc": {
          "line": 330,
          "column": 12,
          "position": 2906
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": "(orgId);\n    \n    res.set({\n      'X-Est-Cost-EUR': '0.0030',\n      'X-Budget-Pct': '0.5',\n      'X-Latency-ms': '85',\n      'X-Route': 'local'\n    });\n    \n    res.json({\n      success: true,\n      data: costs\n    });\n  } catch (error) {\n    res.status(500).json({\n      success: false,\n      error: 'Failed to get costs',\n      message: (error as Error).message\n    });\n  }\n});\n\n// GDPR endpoints (PR-43)",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/backup/index.mega.ts",
        "start": 234,
        "end": 256,
        "startLoc": {
          "line": 234,
          "column": 23,
          "position": 2101
        },
        "endLoc": {
          "line": 256,
          "column": 26,
          "position": 2238
        }
      },
      "secondFile": {
        "name": "apps/api/backup/index.working.backup.ts",
        "start": 232,
        "end": 254,
        "startLoc": {
          "line": 232,
          "column": 18,
          "position": 2026
        },
        "endLoc": {
          "line": 254,
          "column": 47,
          "position": 2163
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "(xmlData);\n    \n    res.json({\n      success: true,\n      data: parsedData,\n      message: 'SEPA data parsed successfully'\n    });\n  } catch (error) {\n    res.status(500).json({\n      success: false,\n      error: 'Failed to parse SEPA data',\n      message: (error as Error).message\n    });\n  }\n});\n\n// System metrics endpoint",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/backup/index.mega.ts",
        "start": 316,
        "end": 332,
        "startLoc": {
          "line": 316,
          "column": 9,
          "position": 2748
        },
        "endLoc": {
          "line": 332,
          "column": 27,
          "position": 2851
        }
      },
      "secondFile": {
        "name": "apps/api/backup/index.working.backup.ts",
        "start": 313,
        "end": 329,
        "startLoc": {
          "line": 313,
          "column": 10,
          "position": 2633
        },
        "endLoc": {
          "line": 329,
          "column": 46,
          "position": 2736
        }
      }
    },
    {
      "format": "typescript",
      "lines": 76,
      "fragment": "});\n\n// System metrics endpoint\napp.get(\"/metrics\", async (req, res) => {\n  try {\n    const cacheStats = cacheManager.getAllStats();\n    const memoryUsage = process.memoryUsage();\n    \n    // Generate Prometheus-style metrics\n    const metrics = `\n# HELP econeura_cache_hits_total Total number of cache hits\n# TYPE econeura_cache_hits_total counter\neconeura_cache_hits_total{cache=\"all\"} ${Object.values(cacheStats).reduce((sum: number, stats: any) => sum + (stats?.hits || 0), 0)}\n\n# HELP econeura_cache_misses_total Total number of cache misses  \n# TYPE econeura_cache_misses_total counter\neconeura_cache_misses_total{cache=\"all\"} ${Object.values(cacheStats).reduce((sum: number, stats: any) => sum + (stats?.misses || 0), 0)}\n\n# HELP econeura_system_memory_heap_used_bytes Memory heap used in bytes\n# TYPE econeura_system_memory_heap_used_bytes gauge\neconeura_system_memory_heap_used_bytes ${memoryUsage.heapUsed}\n\n# HELP econeura_system_memory_heap_total_bytes Memory heap total in bytes\n# TYPE econeura_system_memory_heap_total_bytes gauge\neconeura_system_memory_heap_total_bytes ${memoryUsage.heapTotal}\n\n# HELP econeura_system_uptime_seconds System uptime in seconds\n# TYPE econeura_system_uptime_seconds counter\neconeura_system_uptime_seconds ${process.uptime()}\n`;\n    \n    res.set('Content-Type', 'text/plain');\n    res.send(metrics.trim());\n  } catch (error) {\n    res.status(500).json({\n      error: 'Failed to get metrics',\n      message: (error as Error).message\n    });\n  }\n});\n\n// Cache statistics endpoint\napp.get(\"/cache/stats\", (req, res) => {\n  try {\n    const stats = cacheManager.getAllStats();\n    res.json({\n      success: true,\n      data: stats,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    res.status(500).json({\n      success: false,\n      error: 'Failed to get cache stats',\n      message: (error as Error).message\n    });\n  }\n});\n\n// API info endpoint with comprehensive feature list\napp.get(\"/\", (req, res) => {\n  res.json({\n    name: \"ECONEURA API\",\n    version: process.env.npm_package_version || \"1.0.0\",\n    status: \"running\",\n    timestamp: new Date().toISOString(),\n    features: [\n      \"PR-22: Health modes (live/ready/degraded)\",\n      \"PR-23: Observability coherente (logs + métricas + traces)\",\n      \"PR-24: Analytics events with Zod validation\", \n      \"PR-27: Validación básica en requests\",\n      \"PR-28: Security headers completos + CORS + Helmet\",\n      \"PR-29: Rate limiting + Budget guard\",\n      \"PR-42: SEPA Ingest + Parsing\",\n      \"PR-43: GDPR Export/Erase + Audit\",\n      \"PR-45: FinOps Panel completo\"",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/backup/index.mega.ts",
        "start": 330,
        "end": 405,
        "startLoc": {
          "line": 330,
          "column": 1,
          "position": 2846
        },
        "endLoc": {
          "line": 405,
          "column": 31,
          "position": 3357
        }
      },
      "secondFile": {
        "name": "apps/api/backup/index.working.backup.ts",
        "start": 414,
        "end": 489,
        "startLoc": {
          "line": 414,
          "column": 1,
          "position": 3561
        },
        "endLoc": {
          "line": 489,
          "column": 42,
          "position": 4072
        }
      }
    },
    {
      "format": "typescript",
      "lines": 31,
      "fragment": ",\n      \"PR-45: FinOps Panel completo\",\n      \"SSE: Real-time events and notifications\",\n      \"Cockpit: Operational dashboard endpoints\",\n      \"Cache: Advanced caching with statistics\",\n      \"Metrics: Prometheus-compatible metrics endpoint\"\n    ],\n    endpoints: [\n      \"GET /health - Basic health check\",\n      \"GET /health/live - Liveness probe (PR-22)\", \n      \"GET /health/ready - Readiness probe (PR-22)\",\n      \"GET /metrics - Prometheus metrics (PR-23)\",\n      \"GET /cache/stats - Cache statistics\",\n      \"POST /v1/analytics/events - Track analytics events (PR-24)\",\n      \"GET /v1/analytics/events - Query analytics events (PR-24)\",\n      \"GET /v1/analytics/metrics - Get aggregated metrics (PR-24)\",\n      \"GET /v1/events - Server-Sent Events for real-time updates\",\n      \"POST /v1/events/broadcast - Broadcast events to organization\",\n      \"GET /v1/events/stats - SSE connection statistics\",\n      \"GET /v1/cockpit/overview - Operational overview dashboard\",\n      \"GET /v1/cockpit/agents - Agent execution details\",\n      \"GET /v1/cockpit/costs - Cost breakdown by org/playbook\",\n      \"GET /v1/cockpit/system - System metrics and health\",\n      \"GET /v1/finops/budgets - List budgets (PR-45)\",\n      \"POST /v1/finops/budgets - Create budget (PR-45)\",\n      \"GET /v1/finops/costs - Cost tracking (PR-45)\",\n      \"POST /v1/gdpr/export - Export user data (PR-43)\",\n      \"DELETE /v1/gdpr/erase/:userId - Erase user data (PR-43)\",\n      \"GET /v1/gdpr/audit - GDPR audit logs (PR-43)\",\n      \"POST /v1/sepa/parse - Parse SEPA XML data (PR-42)\"\n    ]",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/backup/index.mega.ts",
        "start": 404,
        "end": 434,
        "startLoc": {
          "line": 404,
          "column": 35,
          "position": 3354
        },
        "endLoc": {
          "line": 434,
          "column": 2,
          "position": 3474
        }
      },
      "secondFile": {
        "name": "apps/api/backup/index.working.backup.ts",
        "start": 489,
        "end": 518,
        "startLoc": {
          "line": 489,
          "column": 42,
          "position": 4073
        },
        "endLoc": {
          "line": 518,
          "column": 2,
          "position": 4191
        }
      }
    },
    {
      "format": "typescript",
      "lines": 64,
      "fragment": "]\n  });\n});\n\n// Mount Analytics routes (PR-24)\napp.use('/v1/analytics', analyticsRouter);\n\n// Mount Events (SSE) routes\napp.use('/v1/events', eventsRouter);\n\n// Mount Cockpit routes\napp.use('/v1/cockpit', cockpitRouter);\n\n// Basic error handling middleware\napp.use((error: Error, req: express.Request, res: express.Response, next: express.NextFunction) => {\n  const errorId = `err_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  \n  structuredLogger.error('Unhandled error', error, {\n    errorId,\n    path: req.path,\n    method: req.method,\n    headers: req.headers\n  });\n\n  res.status(500).json({\n    error: 'Internal server error',\n    message: 'An unexpected error occurred',\n    errorId,\n    timestamp: new Date().toISOString()\n  });\n});\n\n// 404 handler\napp.use((req: express.Request, res: express.Response) => {\n  res.status(404).json({\n    error: 'Not found',\n    message: `Route ${req.method} ${req.path} not found`,\n    timestamp: new Date().toISOString(),\n    availableEndpoints: [\n      'GET /health', 'GET /health/live', 'GET /health/ready', 'GET /metrics',\n      'GET /v1/analytics/*', 'GET /v1/events/*', 'GET /v1/cockpit/*',\n      'GET /v1/finops/*', 'POST /v1/finops/*',\n      'POST /v1/gdpr/*', 'DELETE /v1/gdpr/*', 'GET /v1/gdpr/*',\n      'POST /v1/sepa/*'\n    ]\n  });\n});\n\n// Start server\nconst server = app.listen(PORT, () => {\n  structuredLogger.info(`ECONEURA API Server running on port ${PORT}`, {\n    port: PORT,\n    environment: process.env.NODE_ENV || 'development',\n    version: process.env.npm_package_version || '1.0.0',\n    features: [\n      'PR-22: Health modes (live/ready/degraded)',\n      'PR-23: Observability coherente (logs + métricas + traces)',\n      'PR-24: Analytics events with Zod validation', \n      'PR-27: Validación básica en requests',\n      'PR-28: Security headers completos + CORS + Helmet',\n      'PR-29: Rate limiting + Budget guard',\n      'PR-42: SEPA Ingest + Parsing',\n      'PR-43: GDPR Export/Erase + Audit',\n      'PR-45: FinOps Panel completo'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/backup/index.mega.ts",
        "start": 434,
        "end": 497,
        "startLoc": {
          "line": 434,
          "column": 5,
          "position": 3474
        },
        "endLoc": {
          "line": 497,
          "column": 31,
          "position": 3968
        }
      },
      "secondFile": {
        "name": "packages/shared/src/backup/intermediate.ts",
        "start": 241,
        "end": 586,
        "startLoc": {
          "line": 241,
          "column": 5,
          "position": 1962
        },
        "endLoc": {
          "line": 586,
          "column": 42,
          "position": 4703
        }
      }
    },
    {
      "format": "typescript",
      "lines": 37,
      "fragment": ",\n      'PR-45: FinOps Panel completo',\n      'SSE: Real-time events and notifications',\n      'Cockpit: Operational dashboard endpoints',\n      'Cache: Advanced caching with statistics',\n      'Metrics: Prometheus-compatible metrics endpoint'\n    ],\n    services: [\n      'FinOps System: Budget management, cost tracking, optimization',\n      'GDPR Services: Export, erase, audit compliance',\n      'SEPA Parser: XML parsing and transaction matching',\n      'Analytics: Event tracking and metrics',\n      'Cache Manager: Multi-layer caching system',\n      'Health Monitor: System health and degradation detection',\n      'SSE Manager: Real-time event streaming'\n    ]\n  });\n});\n\n// Graceful shutdown\nprocess.on('SIGTERM', () => {\n  structuredLogger.info('SIGTERM received, shutting down gracefully');\n  server.close(() => {\n    structuredLogger.info('Process terminated');\n    process.exit(0);\n  });\n});\n\nprocess.on('SIGINT', () => {\n  structuredLogger.info('SIGINT received, shutting down gracefully');\n  server.close(() => {\n    structuredLogger.info('Process terminated');\n    process.exit(0);\n  });\n});\n\nexport default app;",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/backup/index.mega.ts",
        "start": 496,
        "end": 532,
        "startLoc": {
          "line": 496,
          "column": 35,
          "position": 3965
        },
        "endLoc": {
          "line": 532,
          "column": 2,
          "position": 4174
        }
      },
      "secondFile": {
        "name": "apps/api/backup/index.working.backup.ts",
        "start": 586,
        "end": 326,
        "startLoc": {
          "line": 586,
          "column": 42,
          "position": 4704
        },
        "endLoc": {
          "line": 326,
          "column": 2,
          "position": 2607
        }
      }
    },
    {
      "format": "typescript",
      "lines": 145,
      "fragment": "} from './lib/advanced-cache.js';\n\n// Import middlewares (PR-27, PR-28, PR-29)\nimport { observabilityMiddleware } from './middleware/observability.js';\nimport { finOpsMiddleware } from './middleware/finops.js';\n\n// Import routers for working PRs\nimport { analyticsRouter } from './routes/analytics.js';\nimport { eventsRouter } from './routes/events.js';\nimport { cockpitRouter } from './routes/cockpit.js';\n\nconst app = express();\nconst PORT = process.env.PORT || 3001;\n\n// Initialize error handler\nconst errorHandler = new ErrorHandler();\n\n// Basic security headers\napp.use((req, res, next) => {\n  res.setHeader('X-Content-Type-Options', 'nosniff');\n  res.setHeader('X-Frame-Options', 'DENY');\n  res.setHeader('X-XSS-Protection', '1; mode=block');\n  res.setHeader('Referrer-Policy', 'strict-origin-when-cross-origin');\n  res.setHeader('Permissions-Policy', 'camera=(), microphone=(), geolocation=()');\n  next();\n});\n\n// CORS configuration (PR-28)\napp.use(cors({\n  origin: ['http://localhost:3000', 'http://localhost:3001'],\n  credentials: true,\n  methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\n  allowedHeaders: ['Content-Type', 'Authorization', 'X-Org-ID', 'X-User-ID', 'X-Correlation-ID'],\n  exposedHeaders: ['X-System-Mode', 'X-Est-Cost-EUR', 'X-Budget-Pct', 'X-Latency-ms', 'X-Route']\n}));\n\n// Basic middleware\napp.use(express.json({ limit: '10mb' }));\napp.use(express.urlencoded({ extended: true }));\n\n// Apply observability middleware (PR-23)\napp.use(observabilityMiddleware);\n\n// Apply FinOps middleware (PR-29)\napp.use(finOpsMiddleware);\n\n// Simple rate limiting (PR-29)\nconst rateLimitStore = new Map();\napp.use((req, res, next) => {\n  const ip = req.ip || req.connection.remoteAddress || 'unknown';\n  const now = Date.now();\n  const windowMs = 15 * 60 * 1000; // 15 minutes\n  const maxRequests = 100;\n  \n  if (!rateLimitStore.has(ip)) {\n    rateLimitStore.set(ip, { count: 1, resetTime: now + windowMs });\n    return next();\n  }\n  \n  const record = rateLimitStore.get(ip);\n  if (now > record.resetTime) {\n    record.count = 1;\n    record.resetTime = now + windowMs;\n    return next();\n  }\n  \n  if (record.count >= maxRequests) {\n    return res.status(429).json({\n      error: 'Too Many Requests',\n      message: 'Rate limit exceeded',\n      retryAfter: Math.ceil((record.resetTime - now) / 1000)\n    });\n  }\n  \n  record.count++;\n  next();\n});\n\n// Basic validation middleware (PR-27)\napp.use((req, res, next) => {\n  // Basic request validation\n  if (req.headers['content-type'] && req.headers['content-type'].includes('application/json')) {\n    if (req.body && typeof req.body !== 'object') {\n      return res.status(400).json({\n        error: 'Invalid JSON',\n        message: 'Request body must be valid JSON'\n      });\n    }\n  }\n  next();\n});\n\n// Basic health check endpoint (< 200ms, no external dependencies)\napp.get(\"/health\", (req, res) => {\n  const ts = new Date().toISOString();\n  const version = process.env.npm_package_version || \"1.0.0\";\n  const currentMode = healthModeManager.getCurrentMode();\n  res.set('X-System-Mode', currentMode);\n  res.status(200).json({\n    status: \"ok\",\n    ts,\n    version,\n    mode: currentMode\n  });\n});\n\n// Enhanced Health check endpoints (PR-22)\napp.get(\"/health/live\", async (req, res) => {\n  try {\n    const result = await healthModeManager.getLivenessProbe();\n    const statusCode = result.status === 'ok' ? 200 : 503;\n    res.set('X-System-Mode', result.mode);\n    res.status(statusCode).json(result);\n  } catch (error) {\n    res.status(503).json({\n      status: \"error\",\n      mode: \"degraded\",\n      timestamp: new Date().toISOString(),\n      version: process.env.npm_package_version || '1.0.0',\n      error: (error as Error).message\n    });\n  }\n});\n\napp.get(\"/health/ready\", async (req, res) => {\n  try {\n    const result = await healthModeManager.getReadinessProbe();\n    const statusCode = result.status === 'ok' ? 200 : 503;\n    res.set('X-System-Mode', result.mode);\n    res.status(statusCode).json(result);\n  } catch (error) {\n    res.status(503).json({\n      status: \"error\",\n      mode: \"degraded\",\n      timestamp: new Date().toISOString(),\n      version: process.env.npm_package_version || '1.0.0',\n      error: (error as Error).message\n    });\n  }\n});\n\n// System metrics endpoint\napp.get(\"/metrics\", async (req, res) => {\n  try {\n    const cacheStats = cacheManager",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/backup/index.intermediate.backup.ts",
        "start": 9,
        "end": 153,
        "startLoc": {
          "line": 9,
          "column": 2,
          "position": 79
        },
        "endLoc": {
          "line": 153,
          "column": 13,
          "position": 1435
        }
      },
      "secondFile": {
        "name": "packages/shared/src/backup/intermediate.ts",
        "start": 9,
        "end": 153,
        "startLoc": {
          "line": 9,
          "column": 2,
          "position": 79
        },
        "endLoc": {
          "line": 153,
          "column": 21,
          "position": 1435
        }
      }
    },
    {
      "format": "typescript",
      "lines": 180,
      "fragment": ": (error as Error).message\n    });\n  }\n});\n\n// System metrics endpoint\napp.get(\"/metrics\", async (req, res) => {\n  try {\n    const cacheStats = cacheManager.getAllStats();\n    const memoryUsage = process.memoryUsage();\n    \n    // Generate Prometheus-style metrics\n    const metrics = `\n# HELP econeura_cache_hits_total Total number of cache hits\n# TYPE econeura_cache_hits_total counter\neconeura_cache_hits_total{cache=\"all\"} ${Object.values(cacheStats).reduce((sum: number, stats: any) => sum + (stats?.hits || 0), 0)}\n\n# HELP econeura_cache_misses_total Total number of cache misses  \n# TYPE econeura_cache_misses_total counter\neconeura_cache_misses_total{cache=\"all\"} ${Object.values(cacheStats).reduce((sum: number, stats: any) => sum + (stats?.misses || 0), 0)}\n\n# HELP econeura_system_memory_heap_used_bytes Memory heap used in bytes\n# TYPE econeura_system_memory_heap_used_bytes gauge\neconeura_system_memory_heap_used_bytes ${memoryUsage.heapUsed}\n\n# HELP econeura_system_memory_heap_total_bytes Memory heap total in bytes\n# TYPE econeura_system_memory_heap_total_bytes gauge\neconeura_system_memory_heap_total_bytes ${memoryUsage.heapTotal}\n\n# HELP econeura_system_uptime_seconds System uptime in seconds\n# TYPE econeura_system_uptime_seconds counter\neconeura_system_uptime_seconds ${process.uptime()}\n`;\n    \n    res.set('Content-Type', 'text/plain');\n    res.send(metrics.trim());\n  } catch (error) {\n    res.status(500).json({\n      error: 'Failed to get metrics',\n      message: (error as Error).message\n    });\n  }\n});\n\n// Cache statistics endpoint\napp.get(\"/cache/stats\", (req, res) => {\n  try {\n    const stats = cacheManager.getAllStats();\n    res.json({\n      success: true,\n      data: stats,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    res.status(500).json({\n      success: false,\n      error: 'Failed to get cache stats',\n      message: (error as Error).message\n    });\n  }\n});\n\n// API info endpoint with comprehensive feature list\napp.get(\"/\", (req, res) => {\n  res.json({\n    name: \"ECONEURA API\",\n    version: process.env.npm_package_version || \"1.0.0\",\n    status: \"running\",\n    timestamp: new Date().toISOString(),\n    features: [\n      \"PR-22: Health modes (live/ready/degraded)\",\n      \"PR-23: Observability coherente (logs + métricas + traces)\",\n      \"PR-24: Analytics events with Zod validation\", \n      \"PR-27: Validación básica en requests\",\n      \"PR-28: Security headers básicos + CORS\",\n      \"PR-29: Rate limiting básico\",\n      \"SSE: Real-time events and notifications\",\n      \"Cockpit: Operational dashboard endpoints\",\n      \"Cache: Advanced caching with statistics\",\n      \"Metrics: Prometheus-compatible metrics endpoint\"\n    ],\n    endpoints: [\n      \"GET /health - Basic health check\",\n      \"GET /health/live - Liveness probe (PR-22)\", \n      \"GET /health/ready - Readiness probe (PR-22)\",\n      \"GET /metrics - Prometheus metrics (PR-23)\",\n      \"GET /cache/stats - Cache statistics\",\n      \"POST /v1/analytics/events - Track analytics events (PR-24)\",\n      \"GET /v1/analytics/events - Query analytics events (PR-24)\",\n      \"GET /v1/analytics/metrics - Get aggregated metrics (PR-24)\",\n      \"GET /v1/events - Server-Sent Events for real-time updates\",\n      \"POST /v1/events/broadcast - Broadcast events to organization\",\n      \"GET /v1/cockpit/overview - Operational overview dashboard\",\n      \"GET /v1/cockpit/agents - Agent execution details\",\n      \"GET /v1/cockpit/costs - Cost breakdown by org/playbook\",\n      \"GET /v1/cockpit/system - System metrics and health\"\n    ]\n  });\n});\n\n// Mount Analytics routes (PR-24)\napp.use('/v1/analytics', analyticsRouter);\n\n// Mount Events (SSE) routes\napp.use('/v1/events', eventsRouter);\n\n// Mount Cockpit routes\napp.use('/v1/cockpit', cockpitRouter);\n\n// Basic error handling middleware\napp.use((error: Error, req: express.Request, res: express.Response, next: express.NextFunction) => {\n  const errorId = `err_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  \n  structuredLogger.error('Unhandled error', error, {\n    errorId,\n    path: req.path,\n    method: req.method,\n    headers: req.headers\n  });\n\n  res.status(500).json({\n    error: 'Internal server error',\n    message: 'An unexpected error occurred',\n    errorId,\n    timestamp: new Date().toISOString()\n  });\n});\n\n// 404 handler\napp.use((req: express.Request, res: express.Response) => {\n  res.status(404).json({\n    error: 'Not found',\n    message: `Route ${req.method} ${req.path} not found`,\n    timestamp: new Date().toISOString(),\n    availableEndpoints: [\n      'GET /health', 'GET /health/live', 'GET /health/ready', 'GET /metrics',\n      'GET /v1/analytics/*', 'GET /v1/events', 'GET /v1/cockpit/*'\n    ]\n  });\n});\n\n// Start server\nconst server = app.listen(PORT, () => {\n  structuredLogger.info(`ECONEURA API Server running on port ${PORT}`, {\n    port: PORT,\n    environment: process.env.NODE_ENV || 'development',\n    version: process.env.npm_package_version || '1.0.0',\n    features: [\n      'PR-22: Health modes (live/ready/degraded)',\n      'PR-23: Observability coherente (logs + métricas + traces)',\n      'PR-24: Analytics events with Zod validation', \n      'PR-27: Validación básica en requests',\n      'PR-28: Security headers básicos + CORS',\n      'PR-29: Rate limiting básico',\n      'SSE: Real-time events and notifications',\n      'Cockpit: Operational dashboard endpoints',\n      'Cache: Advanced caching with statistics',\n      'Metrics: Prometheus-compatible metrics endpoint'\n    ]\n  });\n});\n\n// Graceful shutdown\nprocess.on('SIGTERM', () => {\n  structuredLogger.info('SIGTERM received, shutting down gracefully');\n  server.close(() => {\n    structuredLogger.info('Process terminated');\n    process.exit(0);\n  });\n});\n\nprocess.on('SIGINT', () => {\n  structuredLogger.info('SIGINT received, shutting down gracefully');\n  server.close(() => {\n    structuredLogger.info('Process terminated');\n    process.exit(0);\n  });\n});\n\nexport default app;",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/backup/index.intermediate.backup.ts",
        "start": 145,
        "end": 324,
        "startLoc": {
          "line": 145,
          "column": 6,
          "position": 1376
        },
        "endLoc": {
          "line": 324,
          "column": 2,
          "position": 2610
        }
      },
      "secondFile": {
        "name": "apps/api/backup/index.mega.ts",
        "start": 327,
        "end": 326,
        "startLoc": {
          "line": 327,
          "column": 8,
          "position": 2826
        },
        "endLoc": {
          "line": 326,
          "column": 2,
          "position": 2607
        }
      }
    },
    {
      "format": "typescript",
      "lines": 273,
      "fragment": "import express from \"express\";\nimport cors from \"cors\";\nimport helmet from \"helmet\";\nimport { structuredLogger } from \"./lib/structured-logger.js\";\nimport { ErrorHandler } from \"./lib/error-handler.js\";\n\n// Import health modes (PR-22)\nimport { healthModeManager } from './lib/health-modes.js';\nimport { healthMonitor } from './lib/health-monitor.js';\n\n// Import middlewares (PR-27, PR-28, PR-29)\nimport { ValidationMiddleware } from './middleware/validation.js';\nimport { SecurityMiddleware } from './middleware/security.js';\nimport { RateLimitMiddleware } from './middleware/rate-limiter.js';\nimport { observabilityMiddleware } from './middleware/observability.js';\nimport { finOpsMiddleware } from './middleware/finops.js';\n\n// Import routers for working PRs\nimport { analyticsRouter } from './routes/analytics.js';\nimport { eventsRouter } from './routes/events.js';\nimport { cockpitRouter } from './routes/cockpit.js';\n// Import CRM routers\nimport { companiesRouter } from './routes/companies.js';\nimport { contactsRouter } from './routes/contacts.js';\nimport { dealsRouter } from './routes/deals.js';\nimport { invoicesRouter } from './routes/invoices.js';\nimport { agentsRouter } from './routes/agents.js';\n\nconst app = express();\nconst PORT = process.env.PORT || 3001;\n\n// Initialize error handler\nconst errorHandler = new ErrorHandler();\n\n// Security middleware (PR-28)\napp.use(helmet({\n  contentSecurityPolicy: {\n    directives: {\n      defaultSrc: [\"'self'\"],\n      scriptSrc: [\"'self'\", \"'unsafe-inline'\"],\n      styleSrc: [\"'self'\", \"'unsafe-inline'\"],\n      imgSrc: [\"'self'\", \"data:\", \"https:\"],\n      connectSrc: [\"'self'\", \"https:\"],\n    },\n  },\n  hsts: {\n    maxAge: 31536000,\n    includeSubDomains: true,\n    preload: true\n  }\n}));\n\n// CORS configuration (PR-28)\napp.use(cors({\n  origin: ['http://localhost:3000', 'http://localhost:3001'],\n  credentials: true,\n  methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\n  allowedHeaders: ['Content-Type', 'Authorization', 'X-Org-ID', 'X-User-ID', 'X-Correlation-ID'],\n  exposedHeaders: ['X-System-Mode', 'X-Est-Cost-EUR', 'X-Budget-Pct', 'X-Latency-ms', 'X-Route']\n}));\n\n// Basic middleware\napp.use(express.json({ limit: '10mb' }));\napp.use(express.urlencoded({ extended: true }));\n\n// Apply observability middleware (PR-23)\napp.use(observabilityMiddleware);\n\n// Apply FinOps middleware (PR-29)\napp.use(finOpsMiddleware);\n\n// Apply rate limiting middleware (PR-29)\napp.use(RateLimitMiddleware.createMiddleware({\n  windowMs: 15 * 60 * 1000, // 15 minutes\n  max: 100, // limit each IP to 100 requests per windowMs\n  keyGenerator: 'ip'\n}));\n\n// Apply validation middleware (PR-27)\napp.use(ValidationMiddleware.createMiddleware());\n\n// Apply security middleware (PR-28)\napp.use(SecurityMiddleware.createMiddleware());\n\n// Basic health check endpoint (< 200ms, no external dependencies)\napp.get(\"/health\", (req, res) => {\n  const ts = new Date().toISOString();\n  const version = process.env.npm_package_version || \"1.0.0\";\n  const currentMode = healthModeManager.getCurrentMode();\n  res.set('X-System-Mode', currentMode);\n  res.status(200).json({\n    status: \"ok\",\n    ts,\n    version,\n    mode: currentMode\n  });\n});\n\n// Enhanced Health check endpoints (PR-22)\napp.get(\"/health/live\", async (req, res) => {\n  try {\n    const result = await healthModeManager.getLivenessProbe();\n    const statusCode = result.status === 'ok' ? 200 : 503;\n    res.set('X-System-Mode', result.mode);\n    res.status(statusCode).json(result);\n  } catch (error) {\n    res.status(503).json({\n      status: \"error\",\n      mode: \"degraded\",\n      timestamp: new Date().toISOString(),\n      version: process.env.npm_package_version || '1.0.0',\n      error: (error as Error).message\n    });\n  }\n});\n\napp.get(\"/health/ready\", async (req, res) => {\n  try {\n    const result = await healthModeManager.getReadinessProbe();\n    const statusCode = result.status === 'ok' ? 200 : 503;\n    res.set('X-System-Mode', result.mode);\n    res.status(statusCode).json(result);\n  } catch (error) {\n    res.status(503).json({\n      status: \"error\",\n      mode: \"degraded\",\n      timestamp: new Date().toISOString(),\n      version: process.env.npm_package_version || '1.0.0',\n      error: (error as Error).message\n    });\n  }\n});\n\n// System metrics endpoint\napp.get(\"/metrics\", async (req, res) => {\n  try {\n    const metrics = await healthMonitor.getSystemMetrics();\n    res.set('Content-Type', 'text/plain');\n    res.send(metrics);\n  } catch (error) {\n    res.status(500).json({\n      error: 'Failed to get metrics',\n      message: (error as Error).message\n    });\n  }\n});\n\n// API info endpoint with comprehensive feature list\napp.get(\"/\", (req, res) => {\n  res.json({\n    name: \"ECONEURA API\",\n    version: process.env.npm_package_version || \"1.0.0\",\n    status: \"running\",\n    timestamp: new Date().toISOString(),\n    features: [\n      \"PR-22: Health modes (live/ready/degraded)\",\n      \"PR-23: Observability coherente (logs + métricas + traces)\",\n      \"PR-24: Analytics events with Zod validation\", \n      \"PR-27: Validación Zod integral en routers\",\n      \"PR-28: Security middlewares (Helmet + CORS + CSP)\",\n      \"PR-29: Rate limiting + Budget guard\",\n      \"SSE: Real-time events and notifications\",\n      \"Cockpit: Operational dashboard endpoints\",\n      \"CRM: Companies, Contacts, Deals management\",\n      \"ERP: Invoice processing and management\",\n      \"AI: Agents orchestration and execution\"\n    ],\n    endpoints: [\n      \"GET /health - Basic health check\",\n      \"GET /health/live - Liveness probe (PR-22)\", \n      \"GET /health/ready - Readiness probe (PR-22)\",\n      \"GET /metrics - Prometheus metrics (PR-23)\",\n      \"POST /v1/analytics/events - Track analytics events (PR-24)\",\n      \"GET /v1/analytics/events - Query analytics events (PR-24)\",\n      \"GET /v1/analytics/metrics - Get aggregated metrics (PR-24)\",\n      \"GET /v1/events - Server-Sent Events for real-time updates\",\n      \"POST /v1/events/broadcast - Broadcast events to organization\",\n      \"GET /v1/cockpit/overview - Operational overview dashboard\",\n      \"GET /v1/cockpit/agents - Agent execution details\",\n      \"GET /v1/cockpit/costs - Cost breakdown by org/playbook\",\n      \"GET /v1/cockpit/system - System metrics and health\",\n      \"GET /v1/companies - List companies (CRM)\",\n      \"POST /v1/companies - Create company (CRM)\",\n      \"GET /v1/contacts - List contacts (CRM)\",\n      \"POST /v1/contacts - Create contact (CRM)\",\n      \"GET /v1/deals - List deals (CRM)\",\n      \"POST /v1/deals - Create deal (CRM)\",\n      \"GET /v1/invoices - List invoices (ERP)\",\n      \"POST /v1/invoices - Create invoice (ERP)\",\n      \"GET /v1/agents - List AI agents\",\n      \"POST /v1/agents/run - Execute AI agent\"\n    ]\n  });\n});\n\n// Mount Analytics routes (PR-24)\napp.use('/v1/analytics', analyticsRouter);\n\n// Mount Events (SSE) routes\napp.use('/v1/events', eventsRouter);\n\n// Mount Cockpit routes\napp.use('/v1/cockpit', cockpitRouter);\n\n// Mount CRM routes\napp.use('/v1/companies', companiesRouter);\napp.use('/v1/contacts', contactsRouter);\napp.use('/v1/deals', dealsRouter);\n\n// Mount ERP routes\napp.use('/v1/invoices', invoicesRouter);\n\n// Mount AI routes\napp.use('/v1/agents', agentsRouter);\n\n// Error handling middleware\napp.use(errorHandler.handleError.bind(errorHandler));\n\n// 404 handler\napp.use((req: express.Request, res: express.Response) => {\n  res.status(404).json({\n    error: 'Not found',\n    message: `Route ${req.method} ${req.path} not found`,\n    timestamp: new Date().toISOString(),\n    availableEndpoints: [\n      'GET /health', 'GET /health/live', 'GET /health/ready',\n      'GET /v1/analytics/*', 'GET /v1/events', 'GET /v1/cockpit/*',\n      'GET /v1/companies', 'GET /v1/contacts', 'GET /v1/deals',\n      'GET /v1/invoices', 'GET /v1/agents'\n    ]\n  });\n});\n\n// Start server\nconst server = app.listen(PORT, () => {\n  structuredLogger.info(`ECONEURA API Server running on port ${PORT}`, {\n    port: PORT,\n    environment: process.env.NODE_ENV || 'development',\n    version: process.env.npm_package_version || '1.0.0',\n    features: [\n      'PR-22: Health modes (live/ready/degraded)',\n      'PR-23: Observability coherente (logs + métricas + traces)',\n      'PR-24: Analytics events with Zod validation', \n      'PR-27: Validación Zod integral en routers',\n      'PR-28: Security middlewares (Helmet + CORS + CSP)',\n      'PR-29: Rate limiting + Budget guard',\n      'SSE: Real-time events and notifications',\n      'Cockpit: Operational dashboard endpoints',\n      'CRM: Companies, Contacts, Deals management',\n      'ERP: Invoice processing and management',\n      'AI: Agents orchestration and execution'\n    ]\n  });\n});\n\n// Graceful shutdown\nprocess.on('SIGTERM', () => {\n  structuredLogger.info('SIGTERM received, shutting down gracefully');\n  server.close(() => {\n    structuredLogger.info('Process terminated');\n    process.exit(0);\n  });\n});\n\nprocess.on('SIGINT', () => {\n  structuredLogger.info('SIGINT received, shutting down gracefully');\n  server.close(() => {\n    structuredLogger.info('Process terminated');\n    process.exit(0);\n  });\n});\n\nexport default app;",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/backup/index.expanded.ts",
        "start": 1,
        "end": 273,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 273,
          "column": 2,
          "position": 2058
        }
      },
      "secondFile": {
        "name": "apps/api/src/index.expanded.ts",
        "start": 1,
        "end": 326,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 326,
          "column": 2,
          "position": 2607
        }
      }
    },
    {
      "format": "typescript",
      "lines": 273,
      "fragment": "import express from \"express\";\nimport cors from \"cors\";\nimport helmet from \"helmet\";\nimport { structuredLogger } from \"./lib/structured-logger.js\";\nimport { ErrorHandler } from \"./lib/error-handler.js\";\n\n// Import health modes (PR-22)\nimport { healthModeManager } from './lib/health-modes.js';\nimport { healthMonitor } from './lib/health-monitor.js';\n\n// Import middlewares (PR-27, PR-28, PR-29)\nimport { ValidationMiddleware } from './middleware/validation.js';\nimport { SecurityMiddleware } from './middleware/security.js';\nimport { RateLimitMiddleware } from './middleware/rate-limiter.js';\nimport { observabilityMiddleware } from './middleware/observability.js';\nimport { finOpsMiddleware } from './middleware/finops.js';\n\n// Import routers for working PRs\nimport { analyticsRouter } from './routes/analytics.js';\nimport { eventsRouter } from './routes/events.js';\nimport { cockpitRouter } from './routes/cockpit.js';\n// Import CRM routers\nimport { companiesRouter } from './routes/companies.js';\nimport { contactsRouter } from './routes/contacts.js';\nimport { dealsRouter } from './routes/deals.js';\nimport { invoicesRouter } from './routes/invoices.js';\nimport { agentsRouter } from './routes/agents.js';\n\nconst app = express();\nconst PORT = process.env.PORT || 3001;\n\n// Initialize error handler\nconst errorHandler = new ErrorHandler();\n\n// Security middleware (PR-28)\napp.use(helmet({\n  contentSecurityPolicy: {\n    directives: {\n      defaultSrc: [\"'self'\"],\n      scriptSrc: [\"'self'\", \"'unsafe-inline'\"],\n      styleSrc: [\"'self'\", \"'unsafe-inline'\"],\n      imgSrc: [\"'self'\", \"data:\", \"https:\"],\n      connectSrc: [\"'self'\", \"https:\"],\n    },\n  },\n  hsts: {\n    maxAge: 31536000,\n    includeSubDomains: true,\n    preload: true\n  }\n}));\n\n// CORS configuration (PR-28)\napp.use(cors({\n  origin: ['http://localhost:3000', 'http://localhost:3001'],\n  credentials: true,\n  methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\n  allowedHeaders: ['Content-Type', 'Authorization', 'X-Org-ID', 'X-User-ID', 'X-Correlation-ID'],\n  exposedHeaders: ['X-System-Mode', 'X-Est-Cost-EUR', 'X-Budget-Pct', 'X-Latency-ms', 'X-Route']\n}));\n\n// Basic middleware\napp.use(express.json({ limit: '10mb' }));\napp.use(express.urlencoded({ extended: true }));\n\n// Apply observability middleware (PR-23)\napp.use(observabilityMiddleware);\n\n// Apply FinOps middleware (PR-29)\napp.use(finOpsMiddleware);\n\n// Apply rate limiting middleware (PR-29)\napp.use(RateLimitMiddleware.createMiddleware({\n  windowMs: 15 * 60 * 1000, // 15 minutes\n  max: 100, // limit each IP to 100 requests per windowMs\n  keyGenerator: 'ip'\n}));\n\n// Apply validation middleware (PR-27)\napp.use(ValidationMiddleware.createMiddleware());\n\n// Apply security middleware (PR-28)\napp.use(SecurityMiddleware.createMiddleware());\n\n// Basic health check endpoint (< 200ms, no external dependencies)\napp.get(\"/health\", (req, res) => {\n  const ts = new Date().toISOString();\n  const version = process.env.npm_package_version || \"1.0.0\";\n  const currentMode = healthModeManager.getCurrentMode();\n  res.set('X-System-Mode', currentMode);\n  res.status(200).json({\n    status: \"ok\",\n    ts,\n    version,\n    mode: currentMode\n  });\n});\n\n// Enhanced Health check endpoints (PR-22)\napp.get(\"/health/live\", async (req, res) => {\n  try {\n    const result = await healthModeManager.getLivenessProbe();\n    const statusCode = result.status === 'ok' ? 200 : 503;\n    res.set('X-System-Mode', result.mode);\n    res.status(statusCode).json(result);\n  } catch (error) {\n    res.status(503).json({\n      status: \"error\",\n      mode: \"degraded\",\n      timestamp: new Date().toISOString(),\n      version: process.env.npm_package_version || '1.0.0',\n      error: (error as Error).message\n    });\n  }\n});\n\napp.get(\"/health/ready\", async (req, res) => {\n  try {\n    const result = await healthModeManager.getReadinessProbe();\n    const statusCode = result.status === 'ok' ? 200 : 503;\n    res.set('X-System-Mode', result.mode);\n    res.status(statusCode).json(result);\n  } catch (error) {\n    res.status(503).json({\n      status: \"error\",\n      mode: \"degraded\",\n      timestamp: new Date().toISOString(),\n      version: process.env.npm_package_version || '1.0.0',\n      error: (error as Error).message\n    });\n  }\n});\n\n// System metrics endpoint\napp.get(\"/metrics\", async (req, res) => {\n  try {\n    const metrics = await healthMonitor.getSystemMetrics();\n    res.set('Content-Type', 'text/plain');\n    res.send(metrics);\n  } catch (error) {\n    res.status(500).json({\n      error: 'Failed to get metrics',\n      message: (error as Error).message\n    });\n  }\n});\n\n// API info endpoint with comprehensive feature list\napp.get(\"/\", (req, res) => {\n  res.json({\n    name: \"ECONEURA API\",\n    version: process.env.npm_package_version || \"1.0.0\",\n    status: \"running\",\n    timestamp: new Date().toISOString(),\n    features: [\n      \"PR-22: Health modes (live/ready/degraded)\",\n      \"PR-23: Observability coherente (logs + métricas + traces)\",\n      \"PR-24: Analytics events with Zod validation\", \n      \"PR-27: Validación Zod integral en routers\",\n      \"PR-28: Security middlewares (Helmet + CORS + CSP)\",\n      \"PR-29: Rate limiting + Budget guard\",\n      \"SSE: Real-time events and notifications\",\n      \"Cockpit: Operational dashboard endpoints\",\n      \"CRM: Companies, Contacts, Deals management\",\n      \"ERP: Invoice processing and management\",\n      \"AI: Agents orchestration and execution\"\n    ],\n    endpoints: [\n      \"GET /health - Basic health check\",\n      \"GET /health/live - Liveness probe (PR-22)\", \n      \"GET /health/ready - Readiness probe (PR-22)\",\n      \"GET /metrics - Prometheus metrics (PR-23)\",\n      \"POST /v1/analytics/events - Track analytics events (PR-24)\",\n      \"GET /v1/analytics/events - Query analytics events (PR-24)\",\n      \"GET /v1/analytics/metrics - Get aggregated metrics (PR-24)\",\n      \"GET /v1/events - Server-Sent Events for real-time updates\",\n      \"POST /v1/events/broadcast - Broadcast events to organization\",\n      \"GET /v1/cockpit/overview - Operational overview dashboard\",\n      \"GET /v1/cockpit/agents - Agent execution details\",\n      \"GET /v1/cockpit/costs - Cost breakdown by org/playbook\",\n      \"GET /v1/cockpit/system - System metrics and health\",\n      \"GET /v1/companies - List companies (CRM)\",\n      \"POST /v1/companies - Create company (CRM)\",\n      \"GET /v1/contacts - List contacts (CRM)\",\n      \"POST /v1/contacts - Create contact (CRM)\",\n      \"GET /v1/deals - List deals (CRM)\",\n      \"POST /v1/deals - Create deal (CRM)\",\n      \"GET /v1/invoices - List invoices (ERP)\",\n      \"POST /v1/invoices - Create invoice (ERP)\",\n      \"GET /v1/agents - List AI agents\",\n      \"POST /v1/agents/run - Execute AI agent\"\n    ]\n  });\n});\n\n// Mount Analytics routes (PR-24)\napp.use('/v1/analytics', analyticsRouter);\n\n// Mount Events (SSE) routes\napp.use('/v1/events', eventsRouter);\n\n// Mount Cockpit routes\napp.use('/v1/cockpit', cockpitRouter);\n\n// Mount CRM routes\napp.use('/v1/companies', companiesRouter);\napp.use('/v1/contacts', contactsRouter);\napp.use('/v1/deals', dealsRouter);\n\n// Mount ERP routes\napp.use('/v1/invoices', invoicesRouter);\n\n// Mount AI routes\napp.use('/v1/agents', agentsRouter);\n\n// Error handling middleware\napp.use(errorHandler.handleError.bind(errorHandler));\n\n// 404 handler\napp.use((req: express.Request, res: express.Response) => {\n  res.status(404).json({\n    error: 'Not found',\n    message: `Route ${req.method} ${req.path} not found`,\n    timestamp: new Date().toISOString(),\n    availableEndpoints: [\n      'GET /health', 'GET /health/live', 'GET /health/ready',\n      'GET /v1/analytics/*', 'GET /v1/events', 'GET /v1/cockpit/*',\n      'GET /v1/companies', 'GET /v1/contacts', 'GET /v1/deals',\n      'GET /v1/invoices', 'GET /v1/agents'\n    ]\n  });\n});\n\n// Start server\nconst server = app.listen(PORT, () => {\n  structuredLogger.info(`ECONEURA API Server running on port ${PORT}`, {\n    port: PORT,\n    environment: process.env.NODE_ENV || 'development',\n    version: process.env.npm_package_version || '1.0.0',\n    features: [\n      'PR-22: Health modes (live/ready/degraded)',\n      'PR-23: Observability coherente (logs + métricas + traces)',\n      'PR-24: Analytics events with Zod validation', \n      'PR-27: Validación Zod integral en routers',\n      'PR-28: Security middlewares (Helmet + CORS + CSP)',\n      'PR-29: Rate limiting + Budget guard',\n      'SSE: Real-time events and notifications',\n      'Cockpit: Operational dashboard endpoints',\n      'CRM: Companies, Contacts, Deals management',\n      'ERP: Invoice processing and management',\n      'AI: Agents orchestration and execution'\n    ]\n  });\n});\n\n// Graceful shutdown\nprocess.on('SIGTERM', () => {\n  structuredLogger.info('SIGTERM received, shutting down gracefully');\n  server.close(() => {\n    structuredLogger.info('Process terminated');\n    process.exit(0);\n  });\n});\n\nprocess.on('SIGINT', () => {\n  structuredLogger.info('SIGINT received, shutting down gracefully');\n  server.close(() => {\n    structuredLogger.info('Process terminated');\n    process.exit(0);\n  });\n});\n\nexport default app;",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/backup/index.expanded.backup.ts",
        "start": 1,
        "end": 273,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 273,
          "column": 2,
          "position": 2058
        }
      },
      "secondFile": {
        "name": "apps/api/src/index.expanded.ts",
        "start": 1,
        "end": 326,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 326,
          "column": 2,
          "position": 2607
        }
      }
    },
    {
      "format": "json",
      "lines": 18,
      "fragment": ",\n  \"main\": \"dist/server.js\",\n  \"scripts\": {\n    \"dev\": \"tsx watch src/server.ts\",\n    \"build\": \"tsc\",\n    \"start\": \"node dist/server.js\",\n    \"test\": \"vitest\",\n    \"lint\": \"eslint src\",\n    \"typecheck\": \"tsc --noEmit\"\n  },\n  \"dependencies\": {\n    \"express\": \"^4.18.2\",\n    \"cors\": \"^2.8.5\",\n    \"helmet\": \"^7.1.0\",\n    \"body-parser\": \"^1.20.2\",\n    \"node-fetch\": \"^3.3.2\",\n    \"pg\": \"^8.11.3\",\n    \"crypto\"",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api-agents-make/package.json",
        "start": 4,
        "end": 21,
        "startLoc": {
          "line": 4,
          "column": 55,
          "position": 21
        },
        "endLoc": {
          "line": 21,
          "column": 9,
          "position": 130
        }
      },
      "secondFile": {
        "name": "apps/api-neura-comet/package.json",
        "start": 4,
        "end": 21,
        "startLoc": {
          "line": 4,
          "column": 41,
          "position": 21
        },
        "endLoc": {
          "line": 21,
          "column": 8,
          "position": 130
        }
      }
    },
    {
      "format": "yaml",
      "lines": 45,
      "fragment": "name:\n          type: string\n          minLength: 2\n          maxLength: 120\n        industry:\n          type: string\n          maxLength: 80\n        website:\n          type: string\n          format: uri\n        employees:\n          type: integer\n          minimum: 0\n          default: 0\n        status:\n          type: string\n          enum:\n            - active\n            - inactive\n            - prospect\n          default: prospect\n        taxId:\n          type: string\n          maxLength: 50\n        email:\n          type: string\n          format: email\n        phone:\n          type: string\n          maxLength: 50\n        address:\n          type: string\n          maxLength: 500\n        city:\n          type: string\n          maxLength: 100\n        country:\n          type: string\n          maxLength: 100\n        tags:\n          type: array\n          items:\n            type: string\n          default: []\n      required",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/openapi.yaml",
        "start": 182,
        "end": 226,
        "startLoc": {
          "line": 182,
          "column": 9,
          "position": 1079
        },
        "endLoc": {
          "line": 226,
          "column": 9,
          "position": 1313
        }
      },
      "secondFile": {
        "name": "apps/api/openapi.yaml",
        "start": 118,
        "end": 162,
        "startLoc": {
          "line": 118,
          "column": 9,
          "position": 737
        },
        "endLoc": {
          "line": 162,
          "column": 10,
          "position": 971
        }
      }
    },
    {
      "format": "yaml",
      "lines": 24,
      "fragment": "prospect\n        taxId:\n          type: string\n          maxLength: 50\n        email:\n          type: string\n          format: email\n        phone:\n          type: string\n          maxLength: 50\n        address:\n          type: string\n          maxLength: 500\n        city:\n          type: string\n          maxLength: 100\n        country:\n          type: string\n          maxLength: 100\n        tags:\n          type: array\n          items:\n            type: string\n    LoginRequest",
      "tokens": 0,
      "firstFile": {
        "name": "apps/api/openapi.yaml",
        "start": 249,
        "end": 272,
        "startLoc": {
          "line": 249,
          "column": 2,
          "position": 1432
        },
        "endLoc": {
          "line": 272,
          "column": 13,
          "position": 1551
        }
      },
      "secondFile": {
        "name": "apps/api/openapi.yaml",
        "start": 138,
        "end": 161,
        "startLoc": {
          "line": 138,
          "column": 2,
          "position": 845
        },
        "endLoc": {
          "line": 161,
          "column": 8,
          "position": 964
        }
      }
    }
  ]
}