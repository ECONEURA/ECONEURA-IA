{
  "statistics": {
    "detectionDate": "2025-09-13T10:13:52.042Z",
    "formats": {
      "typescript": {
        "sources": {
          "apps/workers/src/__tests__/unit/config/env.test.ts": {
            "lines": 70,
            "tokens": 599,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workers/src/utils/metrics.ts": {
            "lines": 313,
            "tokens": 2401,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workers/src/utils/logger.ts": {
            "lines": 140,
            "tokens": 1316,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workers/src/types/email.types.ts": {
            "lines": 263,
            "tokens": 2005,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workers/src/services/graph-service.ts": {
            "lines": 317,
            "tokens": 2341,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workers/src/services/cron-service.ts": {
            "lines": 441,
            "tokens": 3412,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workers/src/queues/job-queue.ts": {
            "lines": 429,
            "tokens": 4006,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 50,
            "duplicatedTokens": 617,
            "percentage": 11.66,
            "percentageTokens": 15.4,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workers/src/queues/job-queue-methods.ts": {
            "lines": 93,
            "tokens": 965,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 22,
            "duplicatedTokens": 281,
            "percentage": 23.66,
            "percentageTokens": 29.12,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workers/src/processors/email-processor.ts": {
            "lines": 371,
            "tokens": 3202,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workers/src/config/env.ts": {
            "lines": 108,
            "tokens": 987,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workers/src/__tests__/job-queue.test.ts": {
            "lines": 413,
            "tokens": 3294,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 149,
            "percentage": 4.6,
            "percentageTokens": 4.52,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workers/src/__tests__/integration.test.ts": {
            "lines": 424,
            "tokens": 3304,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workers/src/__tests__/email-processor.test.ts": {
            "lines": 302,
            "tokens": 2399,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 41,
            "duplicatedTokens": 325,
            "percentage": 13.58,
            "percentageTokens": 13.55,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workers/src/__tests__/cron-service.test.ts": {
            "lines": 335,
            "tokens": 2870,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 22,
            "duplicatedTokens": 176,
            "percentage": 6.57,
            "percentageTokens": 6.13,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workers/src/index.ts": {
            "lines": 572,
            "tokens": 5882,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workers/src/bootstrap.example.ts": {
            "lines": 220,
            "tokens": 1604,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/rate-limit/organizations/[organizationId]/reset/route.ts": {
            "lines": 32,
            "tokens": 256,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/finops/alerts/[alertId]/acknowledge/route.ts": {
            "lines": 34,
            "tokens": 281,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/security/mfa/verify/route.ts": {
            "lines": 46,
            "tokens": 443,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 105,
            "duplicatedTokens": 985,
            "percentage": 228.26,
            "percentageTokens": 222.35,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/security/mfa/setup/route.ts": {
            "lines": 49,
            "tokens": 479,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 197,
            "percentage": 42.86,
            "percentageTokens": 41.13,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/security/auth/login/route.ts": {
            "lines": 45,
            "tokens": 427,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 197,
            "percentage": 46.67,
            "percentageTokens": 46.14,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/rls/rules/[ruleId]/route.ts": {
            "lines": 70,
            "tokens": 533,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/rate-limit/organizations/[organizationId]/route.ts": {
            "lines": 99,
            "tokens": 774,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/observability/metrics/prometheus/route.ts": {
            "lines": 25,
            "tokens": 194,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/inventory/products/[id]/route.ts": {
            "lines": 200,
            "tokens": 1922,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 74,
            "duplicatedTokens": 635,
            "percentage": 37,
            "percentageTokens": 33.04,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/finops/budgets/[budgetId]/route.ts": {
            "lines": 65,
            "tokens": 506,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/cache/warmup/stop/route.ts": {
            "lines": 23,
            "tokens": 172,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/cache/warmup/start/route.ts": {
            "lines": 27,
            "tokens": 213,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/workflows/stats/route.ts": {
            "lines": 68,
            "tokens": 551,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 22,
            "duplicatedTokens": 171,
            "percentage": 32.35,
            "percentageTokens": 31.03,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/workflows/[...path]/route.ts": {
            "lines": 179,
            "tokens": 1365,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 99,
            "duplicatedTokens": 810,
            "percentage": 55.31,
            "percentageTokens": 59.34,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/security/users/route.ts": {
            "lines": 75,
            "tokens": 714,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 197,
            "percentage": 28,
            "percentageTokens": 27.59,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/security/threats/route.ts": {
            "lines": 46,
            "tokens": 435,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 24,
            "duplicatedTokens": 199,
            "percentage": 52.17,
            "percentageTokens": 45.75,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/security/stats/route.ts": {
            "lines": 27,
            "tokens": 240,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/security/roles/route.ts": {
            "lines": 74,
            "tokens": 685,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 197,
            "percentage": 28.38,
            "percentageTokens": 28.76,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/security/permissions/route.ts": {
            "lines": 75,
            "tokens": 691,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 197,
            "percentage": 28,
            "percentageTokens": 28.51,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/security/events/route.ts": {
            "lines": 46,
            "tokens": 447,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 48,
            "duplicatedTokens": 402,
            "percentage": 104.35,
            "percentageTokens": 89.93,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/security/audit/route.ts": {
            "lines": 46,
            "tokens": 447,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 24,
            "duplicatedTokens": 203,
            "percentage": 52.17,
            "percentageTokens": 45.41,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/rls/stats/route.ts": {
            "lines": 22,
            "tokens": 178,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/rls/rules/route.ts": {
            "lines": 52,
            "tokens": 423,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/rls/context/route.ts": {
            "lines": 44,
            "tokens": 333,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/rls/check-access/route.ts": {
            "lines": 28,
            "tokens": 230,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/rate-limit/stats/route.ts": {
            "lines": 21,
            "tokens": 174,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/rate-limit/organizations/route.ts": {
            "lines": 55,
            "tokens": 445,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/observability/stats/route.ts": {
            "lines": 23,
            "tokens": 190,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/observability/metrics/route.ts": {
            "lines": 44,
            "tokens": 426,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/microservices/stats/route.ts": {
            "lines": 22,
            "tokens": 178,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/microservices/services/route.ts": {
            "lines": 53,
            "tokens": 525,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/microservices/register/route.ts": {
            "lines": 26,
            "tokens": 226,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/inventory/transactions/route.ts": {
            "lines": 150,
            "tokens": 1466,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 26,
            "duplicatedTokens": 228,
            "percentage": 17.33,
            "percentageTokens": 15.55,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/inventory/report/route.ts": {
            "lines": 56,
            "tokens": 481,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 24,
            "duplicatedTokens": 203,
            "percentage": 42.86,
            "percentageTokens": 42.2,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/inventory/products/route.ts": {
            "lines": 170,
            "tokens": 1741,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 48,
            "duplicatedTokens": 411,
            "percentage": 28.24,
            "percentageTokens": 23.61,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/inventory/alerts/route.ts": {
            "lines": 155,
            "tokens": 1525,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 24,
            "duplicatedTokens": 207,
            "percentage": 15.48,
            "percentageTokens": 13.57,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/inventory/[...path]/route.ts": {
            "lines": 222,
            "tokens": 1783,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 179,
            "duplicatedTokens": 1508,
            "percentage": 80.63,
            "percentageTokens": 84.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/health/ready/route.ts": {
            "lines": 68,
            "tokens": 489,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/health/live/route.ts": {
            "lines": 18,
            "tokens": 120,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/health/degraded/route.ts": {
            "lines": 119,
            "tokens": 969,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/gateway/test-route/route.ts": {
            "lines": 38,
            "tokens": 323,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/gateway/stats/route.ts": {
            "lines": 22,
            "tokens": 178,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/gateway/services/route.ts": {
            "lines": 47,
            "tokens": 361,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/gateway/routes/route.ts": {
            "lines": 47,
            "tokens": 361,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/finops/stats/route.ts": {
            "lines": 18,
            "tokens": 153,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/finops/costs/route.ts": {
            "lines": 22,
            "tokens": 226,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/finops/budgets/route.ts": {
            "lines": 47,
            "tokens": 408,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/finops/alerts/route.ts": {
            "lines": 24,
            "tokens": 215,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/events/stats/route.ts": {
            "lines": 22,
            "tokens": 178,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/events/queries/route.ts": {
            "lines": 32,
            "tokens": 306,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/events/commands/route.ts": {
            "lines": 36,
            "tokens": 342,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/econeura/[...path]/route.ts": {
            "lines": 193,
            "tokens": 1406,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/econeura/[...path]/route.test.ts": {
            "lines": 391,
            "tokens": 3551,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/data-analytics/[...path]/route.ts": {
            "lines": 160,
            "tokens": 1495,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 82,
            "duplicatedTokens": 760,
            "percentage": 51.25,
            "percentageTokens": 50.84,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/config/stats/route.ts": {
            "lines": 22,
            "tokens": 178,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/config/feature-flags/route.ts": {
            "lines": 53,
            "tokens": 442,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/config/[...path]/route.ts": {
            "lines": 150,
            "tokens": 1167,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 99,
            "duplicatedTokens": 810,
            "percentage": 66,
            "percentageTokens": 69.41,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/companies-taxonomy/[...path]/route.ts": {
            "lines": 69,
            "tokens": 698,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 39,
            "duplicatedTokens": 414,
            "percentage": 56.52,
            "percentageTokens": 59.31,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/cache/warmup/route.ts": {
            "lines": 23,
            "tokens": 174,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/cache/stats/route.ts": {
            "lines": 21,
            "tokens": 169,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/cache/search/route.ts": {
            "lines": 23,
            "tokens": 178,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/cache/all/route.ts": {
            "lines": 24,
            "tokens": 192,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/cache/ai/route.ts": {
            "lines": 23,
            "tokens": 178,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/alerts/stats/route.ts": {
            "lines": 33,
            "tokens": 267,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/alerts/rules/route.ts": {
            "lines": 55,
            "tokens": 444,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/alerts/active/route.ts": {
            "lines": 32,
            "tokens": 258,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/ai-chat-advanced/[...path]/route.ts": {
            "lines": 222,
            "tokens": 1783,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 179,
            "duplicatedTokens": 1508,
            "percentage": 80.63,
            "percentageTokens": 84.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/advanced-audit-compliance/[...path]/route.ts": {
            "lines": 101,
            "tokens": 1023,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 79,
            "duplicatedTokens": 794,
            "percentage": 78.22,
            "percentageTokens": 77.61,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/pages/api/cockpit/bff.ts": {
            "lines": 277,
            "tokens": 2760,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/lib/telemetry/tests/telemetry.test.ts": {
            "lines": 498,
            "tokens": 4189,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/mediterranean/index.ts": {
            "lines": 5,
            "tokens": 60,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/workflows/route.ts": {
            "lines": 238,
            "tokens": 2338,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 36,
            "duplicatedTokens": 320,
            "percentage": 15.13,
            "percentageTokens": 13.69,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/search/route.ts": {
            "lines": 46,
            "tokens": 614,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/ia/route.ts": {
            "lines": 158,
            "tokens": 2033,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/health/route.ts": {
            "lines": 7,
            "tokens": 69,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/api/_utils.ts": {
            "lines": 43,
            "tokens": 440,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/types/econeura-shared.d.ts": {
            "lines": 30,
            "tokens": 232,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/test-utils/setup.ts": {
            "lines": 117,
            "tokens": 879,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/test-utils/accessibility-test-runner.ts": {
            "lines": 361,
            "tokens": 3066,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/lib/workflows.ts": {
            "lines": 600,
            "tokens": 5812,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 14,
            "duplicatedTokens": 149,
            "percentage": 2.33,
            "percentageTokens": 2.56,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/lib/utils.ts": {
            "lines": 44,
            "tokens": 448,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/lib/telemetry.ts": {
            "lines": 351,
            "tokens": 2637,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/lib/rls.ts": {
            "lines": 387,
            "tokens": 2814,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/lib/realtime.ts": {
            "lines": 427,
            "tokens": 3482,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/lib/rate-limiting.ts": {
            "lines": 308,
            "tokens": 2788,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/lib/query-client.ts": {
            "lines": 16,
            "tokens": 145,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/lib/prompts.ts": {
            "lines": 150,
            "tokens": 1126,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/lib/observability.ts": {
            "lines": 243,
            "tokens": 2480,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/lib/microservices.ts": {
            "lines": 311,
            "tokens": 2763,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/lib/metrics.ts": {
            "lines": 354,
            "tokens": 2449,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/lib/inventory.ts": {
            "lines": 296,
            "tokens": 2820,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/lib/ia.ts": {
            "lines": 17,
            "tokens": 548,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/lib/gateway.ts": {
            "lines": 428,
            "tokens": 3730,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/lib/finops.ts": {
            "lines": 387,
            "tokens": 3842,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/lib/feature-flags.ts": {
            "lines": 457,
            "tokens": 3980,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/lib/events.ts": {
            "lines": 178,
            "tokens": 1286,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/lib/correlation.ts": {
            "lines": 458,
            "tokens": 3341,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/lib/configuration.ts": {
            "lines": 493,
            "tokens": 4211,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/lib/cache.ts": {
            "lines": 330,
            "tokens": 2788,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/lib/api-client.ts": {
            "lines": 311,
            "tokens": 2473,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/lib/alerts.ts": {
            "lines": 499,
            "tokens": 4505,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/hooks/useCRM.ts": {
            "lines": 204,
            "tokens": 1577,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/hooks/useApi.ts": {
            "lines": 98,
            "tokens": 979,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/hooks/use-companies.ts": {
            "lines": 64,
            "tokens": 598,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/hooks/use-companies-taxonomy.ts": {
            "lines": 160,
            "tokens": 1510,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/hooks/use-advanced-audit-compliance.ts": {
            "lines": 324,
            "tokens": 3004,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/middleware.ts": {
            "lines": 43,
            "tokens": 380,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 19178,
          "tokens": 166114,
          "sources": 123,
          "clones": 30,
          "duplicatedLines": 742,
          "duplicatedTokens": 6625,
          "percentage": 3.87,
          "percentageTokens": 3.99,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "javascript": {
        "sources": {
          "apps/web/src/app/crm/interactions/analytics/page.tsx": {
            "lines": 222,
            "tokens": 2013,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/mediterranean/mediterranean-stats-card.tsx": {
            "lines": 37,
            "tokens": 256,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/mediterranean/mediterranean-showcase.tsx": {
            "lines": 88,
            "tokens": 668,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/mediterranean/mediterranean-feature-card.tsx": {
            "lines": 34,
            "tokens": 217,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/mediterranean/mediterranean-card.tsx": {
            "lines": 6,
            "tokens": 20,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/mediterranean/mediterranean-button.tsx": {
            "lines": 26,
            "tokens": 105,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/mediterranean/mediterranean-badge.tsx": {
            "lines": 7,
            "tokens": 32,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/inventory/suppliers/page.tsx": {
            "lines": 221,
            "tokens": 1784,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/inventory/products/page.tsx": {
            "lines": 146,
            "tokens": 1245,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/inventory/analytics/page.tsx": {
            "lines": 255,
            "tokens": 2303,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/erp/suppliers/page.tsx": {
            "lines": 442,
            "tokens": 3722,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 62,
            "duplicatedTokens": 505,
            "percentage": 14.03,
            "percentageTokens": 13.57,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/erp/products/page.tsx": {
            "lines": 315,
            "tokens": 2583,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 62,
            "duplicatedTokens": 505,
            "percentage": 19.68,
            "percentageTokens": 19.55,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/erp/inventory/page.tsx": {
            "lines": 405,
            "tokens": 3200,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/crm/interactions/page.tsx": {
            "lines": 190,
            "tokens": 1686,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/crm/deals/page.tsx": {
            "lines": 238,
            "tokens": 1982,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/crm/contacts/page.tsx": {
            "lines": 192,
            "tokens": 1561,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/crm/companies/page.tsx": {
            "lines": 150,
            "tokens": 1406,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/tabs.tsx": {
            "lines": 30,
            "tokens": 343,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/table.test.tsx": {
            "lines": 419,
            "tokens": 3969,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/select.tsx": {
            "lines": 123,
            "tokens": 816,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/progress.tsx": {
            "lines": 0,
            "tokens": 8,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/label.tsx": {
            "lines": 0,
            "tokens": 8,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/input.tsx": {
            "lines": 4,
            "tokens": 15,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/form.test.tsx": {
            "lines": 458,
            "tokens": 4258,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/card.tsx": {
            "lines": 63,
            "tokens": 436,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/card.test.tsx": {
            "lines": 460,
            "tokens": 3792,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/button.tsx": {
            "lines": 6,
            "tokens": 45,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/button.test.tsx": {
            "lines": 181,
            "tokens": 1948,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/badge.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/alert.tsx": {
            "lines": 11,
            "tokens": 156,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/StatusBadge.tsx": {
            "lines": 0,
            "tokens": 25,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/RealtimeNotifications.tsx": {
            "lines": 107,
            "tokens": 916,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/LoadingSpinner.tsx": {
            "lines": 0,
            "tokens": 14,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/InteractiveCharts.tsx": {
            "lines": 133,
            "tokens": 1369,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/AutoMLDashboard.tsx": {
            "lines": 153,
            "tokens": 1355,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/AdvancedSearch.tsx": {
            "lines": 213,
            "tokens": 1825,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/AdvancedDashboard.tsx": {
            "lines": 145,
            "tokens": 1487,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/layout/Navigation.tsx": {
            "lines": 108,
            "tokens": 734,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/dashboard/PerformanceChart.tsx": {
            "lines": 74,
            "tokens": 741,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/dashboard/MetricsDashboard.tsx": {
            "lines": 121,
            "tokens": 1070,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/dashboard/MetricsCard.tsx": {
            "lines": 17,
            "tokens": 164,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/dashboard/InvoicesTable.tsx": {
            "lines": 133,
            "tokens": 1192,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/dashboard/ErrorLog.tsx": {
            "lines": 140,
            "tokens": 1330,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/dashboard/AuditTrail.tsx": {
            "lines": 158,
            "tokens": 1507,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/dashboard/ActiveFlows.tsx": {
            "lines": 139,
            "tokens": 1223,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/crm/CompanyForm.tsx": {
            "lines": 153,
            "tokens": 946,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/auth/ProtectedRoute.tsx": {
            "lines": 8,
            "tokens": 92,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ai/PromptTemplates.tsx": {
            "lines": 126,
            "tokens": 1109,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ai/CFODashboard.tsx": {
            "lines": 306,
            "tokens": 2903,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ai/AIRouterDashboard.tsx": {
            "lines": 76,
            "tokens": 708,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ai/AIChatPlayground.tsx": {
            "lines": 201,
            "tokens": 1681,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ai/AIAdvancedChat.tsx": {
            "lines": 498,
            "tokens": 4584,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/Workflows/WorkflowsDashboard.tsx": {
            "lines": 261,
            "tokens": 2373,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/SocialMediaManagement/SocialMediaManagementDashboard.tsx": {
            "lines": 609,
            "tokens": 5461,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/Notifications/NotificationDashboard.tsx": {
            "lines": 497,
            "tokens": 4541,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/Inventory/InventoryKardexDashboard.tsx": {
            "lines": 359,
            "tokens": 3508,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/EmailMarketing/EmailMarketingDashboard.tsx": {
            "lines": 404,
            "tokens": 3796,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/DocumentManagement/DocumentManagementDashboard.tsx": {
            "lines": 334,
            "tokens": 2941,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/DataAnalytics/DataAnalyticsDashboard.tsx": {
            "lines": 340,
            "tokens": 3342,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ContentManagement/ContentManagementDashboard.tsx": {
            "lines": 411,
            "tokens": 3748,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/Configuration/ConfigurationDashboard.tsx": {
            "lines": 225,
            "tokens": 2043,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/CompaniesTaxonomy/CompaniesTaxonomyDashboard.tsx": {
            "lines": 274,
            "tokens": 2384,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/AdvancedReporting/AdvancedReportingDashboard.tsx": {
            "lines": 294,
            "tokens": 2701,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/AdvancedCICD/AdvancedCICDDashboard.tsx": {
            "lines": 408,
            "tokens": 3977,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/AdvancedAuditCompliance/AdvancedAuditComplianceDashboard.tsx": {
            "lines": 476,
            "tokens": 4304,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/reports/page.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/login/page.tsx": {
            "lines": 82,
            "tokens": 594,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/invoices/page.tsx": {
            "lines": 263,
            "tokens": 2079,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/flows/page.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/finance/page.tsx": {
            "lines": 254,
            "tokens": 2013,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/erp/page.tsx": {
            "lines": 247,
            "tokens": 1918,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 86,
            "duplicatedTokens": 654,
            "percentage": 34.82,
            "percentageTokens": 34.1,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/dashboard-advanced/page.tsx": {
            "lines": 205,
            "tokens": 1708,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/dashboard/page.tsx": {
            "lines": 155,
            "tokens": 1841,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/crm/page.tsx": {
            "lines": 184,
            "tokens": 1422,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 86,
            "duplicatedTokens": 654,
            "percentage": 46.74,
            "percentageTokens": 45.99,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/ai-enterprise/page.tsx": {
            "lines": 158,
            "tokens": 1461,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/test-utils/accessibility-helpers.tsx": {
            "lines": 16,
            "tokens": 143,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/lib/react-query.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/lib/query-client.tsx": {
            "lines": 2,
            "tokens": 19,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/lib/auth-context.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/navigation.test.tsx": {
            "lines": 417,
            "tokens": 4126,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/WorkflowStatus.tsx": {
            "lines": 243,
            "tokens": 2205,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/TelemetryProvider.tsx": {
            "lines": 272,
            "tokens": 1989,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/SystemStatus.tsx": {
            "lines": 69,
            "tokens": 760,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/RLSStatus.tsx": {
            "lines": 57,
            "tokens": 581,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/MicroservicesStatus.tsx": {
            "lines": 38,
            "tokens": 378,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/MetricsProvider.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/InventoryStatus.tsx": {
            "lines": 210,
            "tokens": 1785,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/GatewayStatus.tsx": {
            "lines": 42,
            "tokens": 489,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/FinOpsStatus.tsx": {
            "lines": 138,
            "tokens": 1344,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/EventSourcingStatus.tsx": {
            "lines": 40,
            "tokens": 312,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ConfigurationStatus.tsx": {
            "lines": 84,
            "tokens": 835,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/CacheStatus.tsx": {
            "lines": 127,
            "tokens": 1134,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/AdvancedSecurityDashboard.tsx": {
            "lines": 423,
            "tokens": 3922,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/page.tsx": {
            "lines": 88,
            "tokens": 672,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/layout.tsx": {
            "lines": 5,
            "tokens": 20,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 16449,
          "tokens": 146439,
          "sources": 95,
          "clones": 2,
          "duplicatedLines": 148,
          "duplicatedTokens": 1159,
          "percentage": 0.9,
          "percentageTokens": 0.79,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "tsx": {
        "sources": {
          "apps/web/src/app/crm/interactions/analytics/page.tsx": {
            "lines": 375,
            "tokens": 3278,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/mediterranean/mediterranean-stats-card.tsx": {
            "lines": 79,
            "tokens": 530,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/mediterranean/mediterranean-showcase.tsx": {
            "lines": 237,
            "tokens": 1987,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/mediterranean/mediterranean-feature-card.tsx": {
            "lines": 99,
            "tokens": 640,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/mediterranean/mediterranean-card.tsx": {
            "lines": 51,
            "tokens": 302,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/mediterranean/mediterranean-button.tsx": {
            "lines": 120,
            "tokens": 774,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/mediterranean/mediterranean-badge.tsx": {
            "lines": 53,
            "tokens": 335,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/inventory/suppliers/page.tsx": {
            "lines": 361,
            "tokens": 2965,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/inventory/products/page.tsx": {
            "lines": 327,
            "tokens": 2835,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/inventory/analytics/page.tsx": {
            "lines": 463,
            "tokens": 3996,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/erp/suppliers/page.tsx": {
            "lines": 847,
            "tokens": 6954,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 88,
            "duplicatedTokens": 652,
            "percentage": 10.39,
            "percentageTokens": 9.38,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/erp/products/page.tsx": {
            "lines": 785,
            "tokens": 6349,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 79,
            "duplicatedTokens": 598,
            "percentage": 10.06,
            "percentageTokens": 9.42,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/erp/inventory/page.tsx": {
            "lines": 756,
            "tokens": 5946,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 31,
            "duplicatedTokens": 221,
            "percentage": 4.1,
            "percentageTokens": 3.72,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/crm/interactions/page.tsx": {
            "lines": 407,
            "tokens": 3533,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/crm/deals/page.tsx": {
            "lines": 651,
            "tokens": 5556,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/crm/contacts/page.tsx": {
            "lines": 482,
            "tokens": 3763,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 142,
            "percentage": 3.94,
            "percentageTokens": 3.77,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/crm/companies/page.tsx": {
            "lines": 234,
            "tokens": 2032,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/tabs.tsx": {
            "lines": 55,
            "tokens": 600,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/table.test.tsx": {
            "lines": 582,
            "tokens": 5380,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/select.tsx": {
            "lines": 159,
            "tokens": 1038,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/progress.tsx": {
            "lines": 10,
            "tokens": 147,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/label.tsx": {
            "lines": 7,
            "tokens": 90,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/input.tsx": {
            "lines": 17,
            "tokens": 123,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/form.test.tsx": {
            "lines": 571,
            "tokens": 5310,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 52,
            "duplicatedTokens": 588,
            "percentage": 9.11,
            "percentageTokens": 11.07,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/card.tsx": {
            "lines": 77,
            "tokens": 552,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/card.test.tsx": {
            "lines": 506,
            "tokens": 4164,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/button.tsx": {
            "lines": 46,
            "tokens": 379,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/button.test.tsx": {
            "lines": 322,
            "tokens": 3145,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/badge.tsx": {
            "lines": 33,
            "tokens": 294,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/alert.tsx": {
            "lines": 17,
            "tokens": 255,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/StatusBadge.tsx": {
            "lines": 35,
            "tokens": 249,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/RealtimeNotifications.tsx": {
            "lines": 405,
            "tokens": 3862,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/LoadingSpinner.tsx": {
            "lines": 21,
            "tokens": 164,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/InteractiveCharts.tsx": {
            "lines": 454,
            "tokens": 3765,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/AutoMLDashboard.tsx": {
            "lines": 351,
            "tokens": 3034,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/AnalyticsDashboard.tsx": {
            "lines": 26,
            "tokens": 238,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/AdvancedSearch.tsx": {
            "lines": 438,
            "tokens": 3805,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ui/AdvancedDashboard.tsx": {
            "lines": 531,
            "tokens": 4459,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 52,
            "duplicatedTokens": 569,
            "percentage": 9.79,
            "percentageTokens": 12.76,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/layout/Navigation.tsx": {
            "lines": 247,
            "tokens": 1865,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/dashboard/PerformanceChart.tsx": {
            "lines": 248,
            "tokens": 2216,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/dashboard/MetricsDashboard.tsx": {
            "lines": 309,
            "tokens": 2448,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/dashboard/MetricsCard.tsx": {
            "lines": 75,
            "tokens": 662,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/dashboard/InvoicesTable.tsx": {
            "lines": 250,
            "tokens": 2294,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/dashboard/ErrorLog.tsx": {
            "lines": 354,
            "tokens": 3126,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 155,
            "percentage": 4.24,
            "percentageTokens": 4.96,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/dashboard/AuditTrail.tsx": {
            "lines": 461,
            "tokens": 4195,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 155,
            "percentage": 3.25,
            "percentageTokens": 3.69,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/dashboard/ActiveFlows.tsx": {
            "lines": 235,
            "tokens": 2094,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/crm/CompanyForm.tsx": {
            "lines": 225,
            "tokens": 1623,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/auth/ProtectedRoute.tsx": {
            "lines": 69,
            "tokens": 518,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ai/PromptTemplates.tsx": {
            "lines": 252,
            "tokens": 2190,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ai/CFODashboard.tsx": {
            "lines": 554,
            "tokens": 4953,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ai/AIRouterDashboard.tsx": {
            "lines": 274,
            "tokens": 2331,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ai/AIChatPlayground.tsx": {
            "lines": 457,
            "tokens": 3919,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ai/AIAdvancedChat.tsx": {
            "lines": 830,
            "tokens": 7475,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/Workflows/WorkflowsDashboard.tsx": {
            "lines": 481,
            "tokens": 4298,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 47,
            "duplicatedTokens": 357,
            "percentage": 9.77,
            "percentageTokens": 8.31,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/SocialMediaManagement/SocialMediaManagementDashboard.tsx": {
            "lines": 960,
            "tokens": 8605,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/Notifications/NotificationDashboard.tsx": {
            "lines": 912,
            "tokens": 7912,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/Inventory/InventoryKardexDashboard.tsx": {
            "lines": 653,
            "tokens": 6026,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 20,
            "duplicatedTokens": 208,
            "percentage": 3.06,
            "percentageTokens": 3.45,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/EmailMarketing/EmailMarketingDashboard.tsx": {
            "lines": 800,
            "tokens": 6972,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 62,
            "duplicatedTokens": 848,
            "percentage": 7.75,
            "percentageTokens": 12.16,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/DocumentManagement/DocumentManagementDashboard.tsx": {
            "lines": 574,
            "tokens": 5049,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 57,
            "duplicatedTokens": 549,
            "percentage": 9.93,
            "percentageTokens": 10.87,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/DataAnalytics/DataAnalyticsDashboard.tsx": {
            "lines": 574,
            "tokens": 5385,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 20,
            "duplicatedTokens": 213,
            "percentage": 3.48,
            "percentageTokens": 3.96,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ContentManagement/ContentManagementDashboard.tsx": {
            "lines": 693,
            "tokens": 6188,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 97,
            "duplicatedTokens": 1033,
            "percentage": 14,
            "percentageTokens": 16.69,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/Configuration/ConfigurationDashboard.tsx": {
            "lines": 375,
            "tokens": 3311,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 47,
            "duplicatedTokens": 357,
            "percentage": 12.53,
            "percentageTokens": 10.78,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/CompaniesTaxonomy/CompaniesTaxonomyDashboard.tsx": {
            "lines": 436,
            "tokens": 3867,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/AdvancedReporting/AdvancedReportingDashboard.tsx": {
            "lines": 619,
            "tokens": 5173,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 26,
            "duplicatedTokens": 200,
            "percentage": 4.2,
            "percentageTokens": 3.87,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/AdvancedCICD/AdvancedCICDDashboard.tsx": {
            "lines": 856,
            "tokens": 7767,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 26,
            "duplicatedTokens": 200,
            "percentage": 3.04,
            "percentageTokens": 2.57,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/AdvancedAuditCompliance/AdvancedAuditComplianceDashboard.tsx": {
            "lines": 719,
            "tokens": 6467,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/security/page.tsx": {
            "lines": 4,
            "tokens": 31,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/reports/page.tsx": {
            "lines": 39,
            "tokens": 355,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/login/page.tsx": {
            "lines": 172,
            "tokens": 1347,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/invoices/page.tsx": {
            "lines": 634,
            "tokens": 5310,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 41,
            "duplicatedTokens": 309,
            "percentage": 6.47,
            "percentageTokens": 5.82,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/flows/page.tsx": {
            "lines": 39,
            "tokens": 357,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/finance/page.tsx": {
            "lines": 505,
            "tokens": 3743,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 103,
            "duplicatedTokens": 751,
            "percentage": 20.4,
            "percentageTokens": 20.06,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/erp/page.tsx": {
            "lines": 499,
            "tokens": 3640,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 163,
            "duplicatedTokens": 1206,
            "percentage": 32.67,
            "percentageTokens": 33.13,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/dashboard-advanced/page.tsx": {
            "lines": 398,
            "tokens": 3534,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 148,
            "percentage": 3.02,
            "percentageTokens": 4.19,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/dashboard/page.tsx": {
            "lines": 327,
            "tokens": 3184,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/crm/page.tsx": {
            "lines": 358,
            "tokens": 2580,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 104,
            "duplicatedTokens": 785,
            "percentage": 29.05,
            "percentageTokens": 30.43,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/cfo/page.tsx": {
            "lines": 16,
            "tokens": 117,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/azure-ai-test/page.tsx": {
            "lines": 68,
            "tokens": 664,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/analytics/page.tsx": {
            "lines": 9,
            "tokens": 60,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/ai-router/page.tsx": {
            "lines": 16,
            "tokens": 117,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/ai-playground/page.tsx": {
            "lines": 18,
            "tokens": 133,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/ai-enterprise/page.tsx": {
            "lines": 338,
            "tokens": 2674,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/test-utils/accessibility-helpers.tsx": {
            "lines": 262,
            "tokens": 2328,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/lib/react-query.tsx": {
            "lines": 29,
            "tokens": 236,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/lib/query-client.tsx": {
            "lines": 31,
            "tokens": 250,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/lib/auth-context.tsx": {
            "lines": 304,
            "tokens": 2788,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/navigation.test.tsx": {
            "lines": 490,
            "tokens": 4767,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/WorkflowStatus.tsx": {
            "lines": 559,
            "tokens": 4781,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/TelemetryProvider.tsx": {
            "lines": 376,
            "tokens": 2666,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/SystemStatus.tsx": {
            "lines": 211,
            "tokens": 2119,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/RLSStatus.tsx": {
            "lines": 185,
            "tokens": 1720,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/MicroservicesStatus.tsx": {
            "lines": 330,
            "tokens": 2961,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/MetricsProvider.tsx": {
            "lines": 264,
            "tokens": 1907,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/InventoryStatus.tsx": {
            "lines": 462,
            "tokens": 3798,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/GatewayStatus.tsx": {
            "lines": 237,
            "tokens": 2232,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/FinOpsStatus.tsx": {
            "lines": 282,
            "tokens": 2609,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/EventSourcingStatus.tsx": {
            "lines": 267,
            "tokens": 2383,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/ConfigurationStatus.tsx": {
            "lines": 311,
            "tokens": 2803,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/CacheStatus.tsx": {
            "lines": 267,
            "tokens": 2403,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/components/AdvancedSecurityDashboard.tsx": {
            "lines": 690,
            "tokens": 6140,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/page.tsx": {
            "lines": 192,
            "tokens": 1464,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web/src/app/layout.tsx": {
            "lines": 91,
            "tokens": 700,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 33762,
          "tokens": 290658,
          "sources": 102,
          "clones": 25,
          "duplicatedLines": 588,
          "duplicatedTokens": 5122,
          "percentage": 1.74,
          "percentageTokens": 1.76,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "css": {
        "sources": {
          "apps/web/src/app/globals.css": {
            "lines": 352,
            "tokens": 3548,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 352,
          "tokens": 3548,
          "sources": 1,
          "clones": 0,
          "duplicatedLines": 0,
          "duplicatedTokens": 0,
          "percentage": 0,
          "percentageTokens": 0,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      }
    },
    "total": {
      "lines": 69741,
      "tokens": 606759,
      "sources": 321,
      "clones": 57,
      "duplicatedLines": 1478,
      "duplicatedTokens": 12906,
      "percentage": 2.12,
      "percentageTokens": 2.13,
      "newDuplicatedLines": 0,
      "newClones": 0
    }
  },
  "duplicates": [
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "): Promise<void> {\n    try {\n      const jobData = await this.redis.hgetall(`job:${jobId}`);\n      \n      if (!jobData || Object.keys(jobData).length === 0) {\n        throw new Error(`Job ${jobId} not found`);\n      }\n\n      const job: Job = {\n        id: jobData.id,\n        type: jobData.type as Job['type'],\n        payload: JSON.parse(jobData.payload || '{}'),\n        organizationId: jobData.organizationId,\n        priority: jobData.priority as Job['priority'],\n        status: 'failed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/workers/src/queues/job-queue.ts",
        "start": 231,
        "end": 245,
        "startLoc": {
          "line": 231,
          "column": 7,
          "position": 2156
        },
        "endLoc": {
          "line": 245,
          "column": 9,
          "position": 2324
        }
      },
      "secondFile": {
        "name": "apps/workers/src/queues/job-queue.ts",
        "start": 166,
        "end": 180,
        "startLoc": {
          "line": 166,
          "column": 4,
          "position": 1494
        },
        "endLoc": {
          "line": 180,
          "column": 12,
          "position": 1662
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": "(jobId: string): Promise<Job | null> {\n    try {\n      const jobData = await this.redis.hgetall(`job:${jobId}`);\n      if (!jobData || Object.keys(jobData).length === 0) {\n        return null;\n      }\n      return {\n        id: jobData.id,\n        type: jobData.type as Job['type'],\n        payload: JSON.parse(jobData.payload || '{}'),\n        organizationId: jobData.organizationId,\n        priority: jobData.priority as Job['priority'],\n        status: jobData.status as Job['status'],\n        createdAt: jobData.createdAt,\n        startedAt: jobData.startedAt,\n        completedAt: jobData.completedAt,\n        retryCount: parseInt(jobData.retryCount || '0'),\n        maxRetries: parseInt(jobData.maxRetries || '3'),\n        error: jobData.error,\n        metadata: jobData.metadata ? JSON.parse(jobData.metadata) : undefined\n      };\n    } catch (error) {\n      logger.error('Failed to get job status'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/workers/src/queues/job-queue-methods.ts",
        "start": 49,
        "end": 71,
        "startLoc": {
          "line": 49,
          "column": 13,
          "position": 502
        },
        "endLoc": {
          "line": 71,
          "column": 27,
          "position": 783
        }
      },
      "secondFile": {
        "name": "apps/workers/src/queues/job-queue.ts",
        "start": 314,
        "end": 338,
        "startLoc": {
          "line": 314,
          "column": 7,
          "position": 2907
        },
        "endLoc": {
          "line": 338,
          "column": 20,
          "position": 3191
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ")\n}));\n\nvi.mock('../utils/logger.js', () => ({\n  logger: {\n    info: vi.fn(),\n    error: vi.fn(),\n    warn: vi.fn()\n  }\n}));\n\nvi.mock('../utils/metrics.js', () => ({\n  prometheusMetrics: {\n    counter: vi.fn().mockReturnValue({\n      inc: vi.fn()\n    }),\n    histogram: vi.fn().mockReturnValue({\n      observe: vi.fn()\n    })\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "apps/workers/src/__tests__/email-processor.test.ts",
        "start": 13,
        "end": 32,
        "startLoc": {
          "line": 13,
          "column": 2,
          "position": 148
        },
        "endLoc": {
          "line": 32,
          "column": 2,
          "position": 297
        }
      },
      "secondFile": {
        "name": "apps/workers/src/__tests__/job-queue.test.ts",
        "start": 15,
        "end": 33,
        "startLoc": {
          "line": 15,
          "column": 10,
          "position": 157
        },
        "endLoc": {
          "line": 33,
          "column": 2,
          "position": 304
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": ": vi.fn().mockImplementation(() => ({}))\n}));\n\nvi.mock('../utils/logger.js', () => ({\n  logger: {\n    info: vi.fn(),\n    error: vi.fn(),\n    warn: vi.fn()\n  }\n}));\n\nvi.mock('../utils/metrics.js', () => ({\n  prometheusMetrics: {\n    counter: vi.fn().mockReturnValue({\n      inc: vi.fn()\n    }),\n    histogram: vi.fn().mockReturnValue({\n      observe: vi.fn()\n    })\n  }\n}));\n\n// Mock node-cron",
      "tokens": 0,
      "firstFile": {
        "name": "apps/workers/src/__tests__/cron-service.test.ts",
        "start": 23,
        "end": 45,
        "startLoc": {
          "line": 23,
          "column": 13,
          "position": 228
        },
        "endLoc": {
          "line": 45,
          "column": 18,
          "position": 404
        }
      },
      "secondFile": {
        "name": "apps/workers/src/__tests__/email-processor.test.ts",
        "start": 13,
        "end": 35,
        "startLoc": {
          "line": 13,
          "column": 9,
          "position": 129
        },
        "endLoc": {
          "line": 35,
          "column": 9,
          "position": 305
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": ", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-FinOps-Org': 'default',\n        'X-FinOps-Project': 'security',\n        'X-FinOps-Environment': process.env.NODE_ENV || 'development',\n      },\n      body: JSON.stringify(validatedData),\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      return NextResponse.json(errorData, { status: response.status });\n    }\n\n    const data = await response.json();\n    return NextResponse.json(data);\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        { error: 'Invalid MFA setup data'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/app/api/security/mfa/setup/route.ts",
        "start": 18,
        "end": 39,
        "startLoc": {
          "line": 18,
          "column": 24,
          "position": 203
        },
        "endLoc": {
          "line": 39,
          "column": 25,
          "position": 400
        }
      },
      "secondFile": {
        "name": "apps/web/src/app/api/security/mfa/verify/route.ts",
        "start": 15,
        "end": 36,
        "startLoc": {
          "line": 15,
          "column": 25,
          "position": 167
        },
        "endLoc": {
          "line": 36,
          "column": 32,
          "position": 364
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": ", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-FinOps-Org': 'default',\n        'X-FinOps-Project': 'security',\n        'X-FinOps-Environment': process.env.NODE_ENV || 'development',\n      },\n      body: JSON.stringify(validatedData),\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      return NextResponse.json(errorData, { status: response.status });\n    }\n\n    const data = await response.json();\n    return NextResponse.json(data);\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        { error: 'Invalid login credentials'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/app/api/security/auth/login/route.ts",
        "start": 14,
        "end": 35,
        "startLoc": {
          "line": 14,
          "column": 25,
          "position": 151
        },
        "endLoc": {
          "line": 35,
          "column": 28,
          "position": 348
        }
      },
      "secondFile": {
        "name": "apps/web/src/app/api/security/mfa/verify/route.ts",
        "start": 15,
        "end": 36,
        "startLoc": {
          "line": 15,
          "column": 25,
          "position": 167
        },
        "endLoc": {
          "line": 36,
          "column": 32,
          "position": 364
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": ", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-FinOps-Org': 'default',\n        'X-FinOps-Project': 'security',\n        'X-FinOps-Environment': process.env.NODE_ENV || 'development',\n      },\n      body: JSON.stringify(validatedData),\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      return NextResponse.json(errorData, { status: response.status });\n    }\n\n    const data = await response.json();\n    return NextResponse.json(data);\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        { error: 'Invalid request data'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/app/api/security/users/route.ts",
        "start": 44,
        "end": 65,
        "startLoc": {
          "line": 44,
          "column": 20,
          "position": 438
        },
        "endLoc": {
          "line": 65,
          "column": 23,
          "position": 635
        }
      },
      "secondFile": {
        "name": "apps/web/src/app/api/security/mfa/verify/route.ts",
        "start": 15,
        "end": 36,
        "startLoc": {
          "line": 15,
          "column": 25,
          "position": 167
        },
        "endLoc": {
          "line": 36,
          "column": 32,
          "position": 364
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": ", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-FinOps-Org': 'default',\n        'X-FinOps-Project': 'security',\n        'X-FinOps-Environment': process.env.NODE_ENV || 'development',\n      },\n      body: JSON.stringify(validatedData),\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      return NextResponse.json(errorData, { status: response.status });\n    }\n\n    const data = await response.json();\n    return NextResponse.json(data);\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        { error: 'Invalid role data'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/app/api/security/roles/route.ts",
        "start": 43,
        "end": 64,
        "startLoc": {
          "line": 43,
          "column": 20,
          "position": 409
        },
        "endLoc": {
          "line": 64,
          "column": 20,
          "position": 606
        }
      },
      "secondFile": {
        "name": "apps/web/src/app/api/security/mfa/verify/route.ts",
        "start": 15,
        "end": 36,
        "startLoc": {
          "line": 15,
          "column": 25,
          "position": 167
        },
        "endLoc": {
          "line": 36,
          "column": 32,
          "position": 364
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": ", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-FinOps-Org': 'default',\n        'X-FinOps-Project': 'security',\n        'X-FinOps-Environment': process.env.NODE_ENV || 'development',\n      },\n      body: JSON.stringify(validatedData),\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      return NextResponse.json(errorData, { status: response.status });\n    }\n\n    const data = await response.json();\n    return NextResponse.json(data);\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        { error: 'Invalid permission data'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/app/api/security/permissions/route.ts",
        "start": 44,
        "end": 65,
        "startLoc": {
          "line": 44,
          "column": 26,
          "position": 415
        },
        "endLoc": {
          "line": 65,
          "column": 26,
          "position": 612
        }
      },
      "secondFile": {
        "name": "apps/web/src/app/api/security/mfa/verify/route.ts",
        "start": 15,
        "end": 36,
        "startLoc": {
          "line": 15,
          "column": 25,
          "position": 167
        },
        "endLoc": {
          "line": 36,
          "column": 32,
          "position": 364
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ", {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-FinOps-Org': 'default',\n        'X-FinOps-Project': 'security',\n        'X-FinOps-Environment': process.env.NODE_ENV || 'development',\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(`Backend responded with ${response.status}`);\n    }\n\n    const data = await response.json();\n    return NextResponse.json(data);\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        { error: 'Invalid query parameters', details: error.errors },\n        { status: 400 }\n      );\n    }\n\n    console.error('Failed to fetch security events:'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/app/api/security/events/route.ts",
        "start": 17,
        "end": 41,
        "startLoc": {
          "line": 17,
          "column": 2,
          "position": 205
        },
        "endLoc": {
          "line": 41,
          "column": 35,
          "position": 404
        }
      },
      "secondFile": {
        "name": "apps/web/src/app/api/security/threats/route.ts",
        "start": 17,
        "end": 41,
        "startLoc": {
          "line": 17,
          "column": 9,
          "position": 193
        },
        "endLoc": {
          "line": 41,
          "column": 39,
          "position": 392
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": "${queryString}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-FinOps-Org': 'default',\n        'X-FinOps-Project': 'security',\n        'X-FinOps-Environment': process.env.NODE_ENV || 'development',\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(`Backend responded with ${response.status}`);\n    }\n\n    const data = await response.json();\n    return NextResponse.json(data);\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        { error: 'Invalid query parameters', details: error.errors },\n        { status: 400 }\n      );\n    }\n\n    console.error('Failed to fetch audit logs:'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/app/api/security/audit/route.ts",
        "start": 17,
        "end": 41,
        "startLoc": {
          "line": 17,
          "column": 20,
          "position": 201
        },
        "endLoc": {
          "line": 41,
          "column": 30,
          "position": 404
        }
      },
      "secondFile": {
        "name": "apps/web/src/app/api/security/events/route.ts",
        "start": 17,
        "end": 41,
        "startLoc": {
          "line": 17,
          "column": 21,
          "position": 201
        },
        "endLoc": {
          "line": 41,
          "column": 39,
          "position": 392
        }
      }
    },
    {
      "format": "typescript",
      "lines": 27,
      "fragment": "),\n  metadata: z.record(z.any()).optional(),\n});\n\n// ============================================================================\n// FUNCIONES AUXILIARES\n// ============================================================================\n\nfunction generateRequestId(): string {\n  return `req_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n}\n\nfunction addFinOpsHeaders(response: NextResponse, startTime: number): NextResponse {\n  const latency = Date.now() - startTime;\n  \n  response.headers.set('X-Request-Id', generateRequestId());\n  response.headers.set('X-Org-Id', 'demo-org');\n  response.headers.set('X-Latency-ms', latency.toString());\n  response.headers.set('X-AI-Provider', 'none');\n  response.headers.set('X-AI-Model', 'none');\n  response.headers.set('X-Est-Cost-EUR', '0.00');\n  \n  return response;\n}\n\n// ============================================================================\n// RUTAS DE TRANSACCIONES",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/app/api/inventory/transactions/route.ts",
        "start": 25,
        "end": 51,
        "startLoc": {
          "line": 25,
          "column": 2,
          "position": 274
        },
        "endLoc": {
          "line": 51,
          "column": 26,
          "position": 502
        }
      },
      "secondFile": {
        "name": "apps/web/src/app/api/inventory/products/[id]/route.ts",
        "start": 28,
        "end": 54,
        "startLoc": {
          "line": 28,
          "column": 2,
          "position": 399
        },
        "endLoc": {
          "line": 54,
          "column": 34,
          "position": 627
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ";\n\n// ============================================================================\n// FUNCIONES AUXILIARES\n// ============================================================================\n\nfunction generateRequestId(): string {\n  return `req_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n}\n\nfunction addFinOpsHeaders(response: NextResponse, startTime: number): NextResponse {\n  const latency = Date.now() - startTime;\n  \n  response.headers.set('X-Request-Id', generateRequestId());\n  response.headers.set('X-Org-Id', 'demo-org');\n  response.headers.set('X-Latency-ms', latency.toString());\n  response.headers.set('X-AI-Provider', 'none');\n  response.headers.set('X-AI-Model', 'none');\n  response.headers.set('X-Est-Cost-EUR', '0.00');\n  \n  return response;\n}\n\n// ============================================================================\n// RUTAS DE REPORTES",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/app/api/inventory/report/route.ts",
        "start": 4,
        "end": 28,
        "startLoc": {
          "line": 4,
          "column": 16,
          "position": 37
        },
        "endLoc": {
          "line": 28,
          "column": 21,
          "position": 240
        }
      },
      "secondFile": {
        "name": "apps/web/src/app/api/inventory/products/[id]/route.ts",
        "start": 30,
        "end": 54,
        "startLoc": {
          "line": 30,
          "column": 2,
          "position": 424
        },
        "endLoc": {
          "line": 54,
          "column": 34,
          "position": 627
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ");\n\n// ============================================================================\n// FUNCIONES AUXILIARES\n// ============================================================================\n\nfunction generateRequestId(): string {\n  return `req_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n}\n\nfunction addFinOpsHeaders(response: NextResponse, startTime: number): NextResponse {\n  const latency = Date.now() - startTime;\n  \n  response.headers.set('X-Request-Id', generateRequestId());\n  response.headers.set('X-Org-Id', 'demo-org');\n  response.headers.set('X-Latency-ms', latency.toString());\n  response.headers.set('X-AI-Provider', 'none');\n  response.headers.set('X-AI-Model', 'none');\n  response.headers.set('X-Est-Cost-EUR', '0.00');\n  \n  return response;\n}\n\n// ============================================================================\n// RUTAS DE PRODUCTOS",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/app/api/inventory/products/route.ts",
        "start": 34,
        "end": 58,
        "startLoc": {
          "line": 34,
          "column": 2,
          "position": 403
        },
        "endLoc": {
          "line": 58,
          "column": 22,
          "position": 607
        }
      },
      "secondFile": {
        "name": "apps/web/src/app/api/inventory/products/[id]/route.ts",
        "start": 30,
        "end": 54,
        "startLoc": {
          "line": 30,
          "column": 2,
          "position": 423
        },
        "endLoc": {
          "line": 54,
          "column": 34,
          "position": 627
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ".partial();\n\n// ============================================================================\n// FUNCIONES AUXILIARES\n// ============================================================================\n\nfunction generateRequestId(): string {\n  return `req_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n}\n\nfunction addFinOpsHeaders(response: NextResponse, startTime: number): NextResponse {\n  const latency = Date.now() - startTime;\n  \n  response.headers.set('X-Request-Id', generateRequestId());\n  response.headers.set('X-Org-Id', 'demo-org');\n  response.headers.set('X-Latency-ms', latency.toString());\n  response.headers.set('X-AI-Provider', 'none');\n  response.headers.set('X-AI-Model', 'none');\n  response.headers.set('X-Est-Cost-EUR', '0.00');\n  \n  return response;\n}\n\n// ============================================================================\n// RUTAS DE ALERTAS",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/app/api/inventory/alerts/route.ts",
        "start": 30,
        "end": 54,
        "startLoc": {
          "line": 30,
          "column": 18,
          "position": 323
        },
        "endLoc": {
          "line": 54,
          "column": 20,
          "position": 530
        }
      },
      "secondFile": {
        "name": "apps/web/src/app/api/inventory/products/route.ts",
        "start": 34,
        "end": 54,
        "startLoc": {
          "line": 34,
          "column": 20,
          "position": 400
        },
        "endLoc": {
          "line": 54,
          "column": 34,
          "position": 627
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": "(\n  request: NextRequest,\n  { params }: { params: { path: string[] } }\n) {\n  try {\n    const { path } = params;\n    const body = await request.json();\n    \n    // Build the API path\n    const apiPath = `/v1/inventory-kardex/${path.join('/')}`;\n    const fullUrl = `${API_BASE_URL}${apiPath}`;\n\n    // Add FinOps headers\n    const headers: Record<string, string> = {\n      'X-Request-Id': crypto.randomUUID(),\n      'X-Org-Id': 'demo-org-1',\n      'X-User-Id': 'web-user',\n      'X-Source': 'web-bff',\n      'Content-Type': 'application/json'\n    };\n\n    const startTime = Date.now();\n    \n    const response = await fetch(fullUrl, {\n      method: 'PUT'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/app/api/inventory/[...path]/route.ts",
        "start": 119,
        "end": 143,
        "startLoc": {
          "line": 119,
          "column": 4,
          "position": 949
        },
        "endLoc": {
          "line": 143,
          "column": 6,
          "position": 1165
        }
      },
      "secondFile": {
        "name": "apps/web/src/app/api/inventory/[...path]/route.ts",
        "start": 65,
        "end": 89,
        "startLoc": {
          "line": 65,
          "column": 5,
          "position": 513
        },
        "endLoc": {
          "line": 89,
          "column": 7,
          "position": 729
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": ",\n      headers: {\n        'Content-Type': 'application/json',\n        'x-org-id': request.headers.get('x-org-id') || 'demo-org',\n        'x-correlation-id': request.headers.get('x-correlation-id') || '',\n        'Authorization': request.headers.get('authorization') || ''\n      },\n      body: JSON.stringify(body)\n    });\n\n    if (!response.ok) {\n      throw new Error(`API request failed: ${response.status}`);\n    }\n\n    const data = await response.json();\n    return NextResponse.json(data);\n  } catch (error) {\n    console.error('Data Analytics BFF Error:', error);\n    return NextResponse.json(\n      { \n        success: false, \n        error: 'Failed to update data analytics resource'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/app/api/data-analytics/[...path]/route.ts",
        "start": 96,
        "end": 117,
        "startLoc": {
          "line": 96,
          "column": 6,
          "position": 913
        },
        "endLoc": {
          "line": 117,
          "column": 43,
          "position": 1109
        }
      },
      "secondFile": {
        "name": "apps/web/src/app/api/data-analytics/[...path]/route.ts",
        "start": 56,
        "end": 77,
        "startLoc": {
          "line": 56,
          "column": 7,
          "position": 543
        },
        "endLoc": {
          "line": 77,
          "column": 43,
          "position": 739
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ",\n      headers: {\n        'Content-Type': 'application/json',\n        'x-org-id': request.headers.get('x-org-id') || 'demo-org',\n        'x-correlation-id': request.headers.get('x-correlation-id') || '',\n        'Authorization': request.headers.get('authorization') || ''\n      }\n    });\n\n    if (!response.ok) {\n      throw new Error(`API request failed: ${response.status}`);\n    }\n\n    const data = await response.json();\n    return NextResponse.json(data);\n  } catch (error) {\n    console.error('Data Analytics BFF Error:', error);\n    return NextResponse.json(\n      { \n        success: false, \n        error: 'Failed to delete data analytics resource'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/app/api/data-analytics/[...path]/route.ts",
        "start": 135,
        "end": 155,
        "startLoc": {
          "line": 135,
          "column": 9,
          "position": 1267
        },
        "endLoc": {
          "line": 155,
          "column": 43,
          "position": 1451
        }
      },
      "secondFile": {
        "name": "apps/web/src/app/api/data-analytics/[...path]/route.ts",
        "start": 17,
        "end": 37,
        "startLoc": {
          "line": 17,
          "column": 6,
          "position": 185
        },
        "endLoc": {
          "line": 37,
          "column": 45,
          "position": 369
        }
      }
    },
    {
      "format": "typescript",
      "lines": 43,
      "fragment": "}${path}`;\n    \n    // Headers a enviar\n    const headers: Record<string, string> = {\n      'Content-Type': 'application/json',\n      'User-Agent': 'ECONEURA-Web-BFF/1.0'\n    };\n\n    // Copiar headers relevantes\n    FORWARD_HEADERS.forEach(headerName => {\n      const headerValue = request.headers.get(headerName);\n      if (headerValue) {\n        headers[headerName] = headerValue;\n      }\n    });\n\n    // Obtener body si existe\n    let body: string | undefined;\n    if (method !== 'GET' && method !== 'DELETE') {\n      try {\n        body = await request.text();\n      } catch (error) {\n        console.warn('Failed to read request body:', error);\n      }\n    }\n\n    // Hacer request al API\n    const response = await fetch(apiUrl, {\n      method,\n      headers,\n      body,\n      // Timeout de 30 segundos\n      signal: AbortSignal.timeout(30000)\n    });\n\n    // Obtener respuesta\n    const responseData = await response.text();\n    \n    // Headers de respuesta a copiar\n    const responseHeaders: Record<string, string> = {\n      'Content-Type': 'application/json',\n      'X-BFF-Proxy': 'true',\n      'X-API-Status'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/app/api/config/[...path]/route.ts",
        "start": 24,
        "end": 66,
        "startLoc": {
          "line": 24,
          "column": 16,
          "position": 143
        },
        "endLoc": {
          "line": 66,
          "column": 15,
          "position": 445
        }
      },
      "secondFile": {
        "name": "apps/web/src/app/api/workflows/[...path]/route.ts",
        "start": 24,
        "end": 66,
        "startLoc": {
          "line": 24,
          "column": 19,
          "position": 143
        },
        "endLoc": {
          "line": 66,
          "column": 20,
          "position": 445
        }
      }
    },
    {
      "format": "typescript",
      "lines": 58,
      "fragment": ",\n        'X-Error': 'proxy-failed'\n      }\n    });\n  }\n}\n\n// GET - Obtener recursos\nexport async function GET(\n  request: NextRequest,\n  { params }: { params: { path: string[] } }\n) {\n  const path = '/' + params.path.join('/');\n  const searchParams = request.nextUrl.searchParams.toString();\n  const fullPath = searchParams ? `${path}?${searchParams}` : path;\n  \n  return proxyRequest(request, fullPath, 'GET');\n}\n\n// POST - Crear recursos\nexport async function POST(\n  request: NextRequest,\n  { params }: { params: { path: string[] } }\n) {\n  const path = '/' + params.path.join('/');\n  \n  return proxyRequest(request, path, 'POST');\n}\n\n// PUT - Actualizar recursos\nexport async function PUT(\n  request: NextRequest,\n  { params }: { params: { path: string[] } }\n) {\n  const path = '/' + params.path.join('/');\n  \n  return proxyRequest(request, path, 'PUT');\n}\n\n// DELETE - Eliminar recursos\nexport async function DELETE(\n  request: NextRequest,\n  { params }: { params: { path: string[] } }\n) {\n  const path = '/' + params.path.join('/');\n  \n  return proxyRequest(request, path, 'DELETE');\n}\n\n// PATCH - Actualización parcial\nexport async function PATCH(\n  request: NextRequest,\n  { params }: { params: { path: string[] } }\n) {\n  const path = '/' + params.path.join('/');\n  \n  return proxyRequest(request, path, 'PATCH');\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/app/api/config/[...path]/route.ts",
        "start": 94,
        "end": 151,
        "startLoc": {
          "line": 94,
          "column": 7,
          "position": 659
        },
        "endLoc": {
          "line": 151,
          "column": 2,
          "position": 1167
        }
      },
      "secondFile": {
        "name": "apps/web/src/app/api/workflows/[...path]/route.ts",
        "start": 123,
        "end": 180,
        "startLoc": {
          "line": 123,
          "column": 25,
          "position": 857
        },
        "endLoc": {
          "line": 180,
          "column": 2,
          "position": 1365
        }
      }
    },
    {
      "format": "typescript",
      "lines": 34,
      "fragment": "${path.join('/')}`;\n    const queryString = searchParams.toString();\n    const fullUrl = `${API_BASE_URL}${apiPath}${queryString ? `?${queryString}` : ''}`;\n\n    // Add FinOps headers\n    const headers: Record<string, string> = {\n      'X-Request-Id': crypto.randomUUID(),\n      'X-Org-Id': 'demo-org-1',\n      'X-User-Id': 'web-user',\n      'X-Source': 'web-bff',\n      'Content-Type': 'application/json'\n    };\n\n    const startTime = Date.now();\n    \n    const response = await fetch(fullUrl, {\n      method: 'GET',\n      headers\n    });\n\n    const latency = Date.now() - startTime;\n    const data = await response.json();\n\n    return NextResponse.json(data, {\n      status: response.status,\n      headers: {\n        'X-Latency-ms': latency.toString(),\n        'X-Request-Id': headers['X-Request-Id'],\n        'X-Org-Id': headers['X-Org-Id']\n      }\n    });\n\n  } catch (error) {\n    console.error('AI Chat Advanced BFF GET error:'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/app/api/ai-chat-advanced/[...path]/route.ts",
        "start": 20,
        "end": 53,
        "startLoc": {
          "line": 20,
          "column": 23,
          "position": 156
        },
        "endLoc": {
          "line": 53,
          "column": 34,
          "position": 434
        }
      },
      "secondFile": {
        "name": "apps/web/src/app/api/inventory/[...path]/route.ts",
        "start": 20,
        "end": 53,
        "startLoc": {
          "line": 20,
          "column": 23,
          "position": 156
        },
        "endLoc": {
          "line": 53,
          "column": 27,
          "position": 434
        }
      }
    },
    {
      "format": "typescript",
      "lines": 34,
      "fragment": "${path.join('/')}`;\n    const fullUrl = `${API_BASE_URL}${apiPath}`;\n\n    // Add FinOps headers\n    const headers: Record<string, string> = {\n      'X-Request-Id': crypto.randomUUID(),\n      'X-Org-Id': 'demo-org-1',\n      'X-User-Id': 'web-user',\n      'X-Source': 'web-bff',\n      'Content-Type': 'application/json'\n    };\n\n    const startTime = Date.now();\n    \n    const response = await fetch(fullUrl, {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body)\n    });\n\n    const latency = Date.now() - startTime;\n    const data = await response.json();\n\n    return NextResponse.json(data, {\n      status: response.status,\n      headers: {\n        'X-Latency-ms': latency.toString(),\n        'X-Request-Id': headers['X-Request-Id'],\n        'X-Org-Id': headers['X-Org-Id']\n      }\n    });\n\n  } catch (error) {\n    console.error('AI Chat Advanced BFF POST error:'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/app/api/ai-chat-advanced/[...path]/route.ts",
        "start": 74,
        "end": 107,
        "startLoc": {
          "line": 74,
          "column": 23,
          "position": 600
        },
        "endLoc": {
          "line": 107,
          "column": 35,
          "position": 870
        }
      },
      "secondFile": {
        "name": "apps/web/src/app/api/inventory/[...path]/route.ts",
        "start": 74,
        "end": 107,
        "startLoc": {
          "line": 74,
          "column": 23,
          "position": 600
        },
        "endLoc": {
          "line": 107,
          "column": 28,
          "position": 870
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": "(\n  request: NextRequest,\n  { params }: { params: { path: string[] } }\n) {\n  try {\n    const { path } = params;\n    const body = await request.json();\n    \n    // Build the API path\n    const apiPath = `/v1/ai-chat-advanced/${path.join('/')}`;\n    const fullUrl = `${API_BASE_URL}${apiPath}`;\n\n    // Add FinOps headers\n    const headers: Record<string, string> = {\n      'X-Request-Id': crypto.randomUUID(),\n      'X-Org-Id': 'demo-org-1',\n      'X-User-Id': 'web-user',\n      'X-Source': 'web-bff',\n      'Content-Type': 'application/json'\n    };\n\n    const startTime = Date.now();\n    \n    const response = await fetch(fullUrl, {\n      method: 'PUT'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/app/api/ai-chat-advanced/[...path]/route.ts",
        "start": 119,
        "end": 143,
        "startLoc": {
          "line": 119,
          "column": 4,
          "position": 949
        },
        "endLoc": {
          "line": 143,
          "column": 6,
          "position": 1165
        }
      },
      "secondFile": {
        "name": "apps/web/src/app/api/ai-chat-advanced/[...path]/route.ts",
        "start": 65,
        "end": 89,
        "startLoc": {
          "line": 65,
          "column": 5,
          "position": 513
        },
        "endLoc": {
          "line": 89,
          "column": 7,
          "position": 729
        }
      }
    },
    {
      "format": "typescript",
      "lines": 34,
      "fragment": "${path.join('/')}`;\n    const fullUrl = `${API_BASE_URL}${apiPath}`;\n\n    // Add FinOps headers\n    const headers: Record<string, string> = {\n      'X-Request-Id': crypto.randomUUID(),\n      'X-Org-Id': 'demo-org-1',\n      'X-User-Id': 'web-user',\n      'X-Source': 'web-bff',\n      'Content-Type': 'application/json'\n    };\n\n    const startTime = Date.now();\n    \n    const response = await fetch(fullUrl, {\n      method: 'PUT',\n      headers,\n      body: JSON.stringify(body)\n    });\n\n    const latency = Date.now() - startTime;\n    const data = await response.json();\n\n    return NextResponse.json(data, {\n      status: response.status,\n      headers: {\n        'X-Latency-ms': latency.toString(),\n        'X-Request-Id': headers['X-Request-Id'],\n        'X-Org-Id': headers['X-Org-Id']\n      }\n    });\n\n  } catch (error) {\n    console.error('AI Chat Advanced BFF PUT error:'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/app/api/ai-chat-advanced/[...path]/route.ts",
        "start": 128,
        "end": 161,
        "startLoc": {
          "line": 128,
          "column": 23,
          "position": 1036
        },
        "endLoc": {
          "line": 161,
          "column": 34,
          "position": 1306
        }
      },
      "secondFile": {
        "name": "apps/web/src/app/api/inventory/[...path]/route.ts",
        "start": 128,
        "end": 161,
        "startLoc": {
          "line": 128,
          "column": 23,
          "position": 1036
        },
        "endLoc": {
          "line": 161,
          "column": 27,
          "position": 1306
        }
      }
    },
    {
      "format": "typescript",
      "lines": 33,
      "fragment": "${path.join('/')}`;\n    const fullUrl = `${API_BASE_URL}${apiPath}`;\n\n    // Add FinOps headers\n    const headers: Record<string, string> = {\n      'X-Request-Id': crypto.randomUUID(),\n      'X-Org-Id': 'demo-org-1',\n      'X-User-Id': 'web-user',\n      'X-Source': 'web-bff',\n      'Content-Type': 'application/json'\n    };\n\n    const startTime = Date.now();\n    \n    const response = await fetch(fullUrl, {\n      method: 'DELETE',\n      headers\n    });\n\n    const latency = Date.now() - startTime;\n    const data = await response.json();\n\n    return NextResponse.json(data, {\n      status: response.status,\n      headers: {\n        'X-Latency-ms': latency.toString(),\n        'X-Request-Id': headers['X-Request-Id'],\n        'X-Org-Id': headers['X-Org-Id']\n      }\n    });\n\n  } catch (error) {\n    console.error('AI Chat Advanced BFF DELETE error:'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/app/api/ai-chat-advanced/[...path]/route.ts",
        "start": 181,
        "end": 213,
        "startLoc": {
          "line": 181,
          "column": 23,
          "position": 1456
        },
        "endLoc": {
          "line": 213,
          "column": 37,
          "position": 1714
        }
      },
      "secondFile": {
        "name": "apps/web/src/app/api/inventory/[...path]/route.ts",
        "start": 181,
        "end": 213,
        "startLoc": {
          "line": 181,
          "column": 23,
          "position": 1456
        },
        "endLoc": {
          "line": 213,
          "column": 30,
          "position": 1714
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "${path}`, API_BASE_URL);\n    \n    // Forward query parameters\n    request.nextUrl.searchParams.forEach((value, key) => {\n      url.searchParams.set(key, value);\n    });\n\n    const response = await fetch(url.toString(), {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-org-id': request.headers.get('x-org-id') || 'default',\n        'x-user-id': request.headers.get('x-user-id') || 'default',\n        'Authorization': request.headers.get('authorization') || '',\n      },\n    });\n\n    const data = await response.json();\n\n    return NextResponse.json(data, { status: response.status });\n  } catch (error) {\n    console.error('Advanced audit compliance API error:'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/app/api/advanced-audit-compliance/[...path]/route.ts",
        "start": 11,
        "end": 32,
        "startLoc": {
          "line": 11,
          "column": 32,
          "position": 115
        },
        "endLoc": {
          "line": 32,
          "column": 39,
          "position": 330
        }
      },
      "secondFile": {
        "name": "apps/web/src/app/api/companies-taxonomy/[...path]/route.ts",
        "start": 11,
        "end": 32,
        "startLoc": {
          "line": 11,
          "column": 25,
          "position": 115
        },
        "endLoc": {
          "line": 32,
          "column": 32,
          "position": 330
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "${path}`, API_BASE_URL);\n    const body = await request.json();\n\n    const response = await fetch(url.toString(), {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-org-id': request.headers.get('x-org-id') || 'default',\n        'x-user-id': request.headers.get('x-user-id') || 'default',\n        'Authorization': request.headers.get('authorization') || '',\n      },\n      body: JSON.stringify(body),\n    });\n\n    const data = await response.json();\n\n    return NextResponse.json(data, { status: response.status });\n  } catch (error) {\n    console.error('Advanced audit compliance API error:'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/app/api/advanced-audit-compliance/[...path]/route.ts",
        "start": 46,
        "end": 64,
        "startLoc": {
          "line": 46,
          "column": 32,
          "position": 456
        },
        "endLoc": {
          "line": 64,
          "column": 39,
          "position": 655
        }
      },
      "secondFile": {
        "name": "apps/web/src/app/api/companies-taxonomy/[...path]/route.ts",
        "start": 46,
        "end": 64,
        "startLoc": {
          "line": 46,
          "column": 25,
          "position": 456
        },
        "endLoc": {
          "line": 64,
          "column": 32,
          "position": 655
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ",\n      headers: {\n        'Content-Type': 'application/json',\n        'x-org-id': request.headers.get('x-org-id') || 'default',\n        'x-user-id': request.headers.get('x-user-id') || 'default',\n        'Authorization': request.headers.get('authorization') || '',\n      },\n      body: JSON.stringify(body),\n    });\n\n    const data = await response.json();\n\n    return NextResponse.json(data, { status: response.status });\n  } catch (error) {\n    console.error('Advanced audit compliance API error:', error);\n    return NextResponse.json(\n      { error: 'Internal server error' },\n      { status: 500 }\n    );\n  }\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/app/api/advanced-audit-compliance/[...path]/route.ts",
        "start": 82,
        "end": 102,
        "startLoc": {
          "line": 82,
          "column": 6,
          "position": 833
        },
        "endLoc": {
          "line": 102,
          "column": 2,
          "position": 1023
        }
      },
      "secondFile": {
        "name": "apps/web/src/app/api/advanced-audit-compliance/[...path]/route.ts",
        "start": 50,
        "end": 70,
        "startLoc": {
          "line": 50,
          "column": 7,
          "position": 508
        },
        "endLoc": {
          "line": 70,
          "column": 2,
          "position": 698
        }
      }
    },
    {
      "format": "javascript",
      "lines": 63,
      "fragment": "(e.target.value)}\n                className=\"border border-mediterranean-200 rounded-xl px-3 py-2 focus:outline-none focus:ring-2 focus:ring-coral-500 focus:border-coral-500\"\n              >\n                <option value=\"all\">Todos los estados</option>\n                <option value=\"active\">Activo</option>\n                <option value=\"inactive\">Inactivo</option>\n                <option value=\"discontinued\">Descontinuado</option>\n              </select>\n              \n              {/* Sort */}\n              <select\n                value={`${sortBy}-${sortOrder}`}\n                onChange={(e) => {\n                  const [field, order] = e.target.value.split('-');\n                  setSortBy(field as any);\n                  setSortOrder(order as any);\n                }}\n                className=\"border border-mediterranean-200 rounded-xl px-3 py-2 focus:outline-none focus:ring-2 focus:ring-coral-500 focus:border-coral-500\"\n              >\n                <option value=\"name-asc\">Nombre A-Z</option>\n                <option value=\"name-desc\">Nombre Z-A</option>\n                <option value=\"price-asc\">Precio menor</option>\n                <option value=\"price-desc\">Precio mayor</option>\n                <option value=\"stock-asc\">Stock menor</option>\n                <option value=\"stock-desc\">Stock mayor</option>\n                <option value=\"sales-desc\">Más vendidos</option>\n              </select>\n              \n              {/* View Mode */}\n              <div className=\"flex bg-mediterranean-100 rounded-xl p-1\">\n                <button\n                  onClick={() => setViewMode('grid')}\n                  className={`px-3 py-2 rounded-lg text-sm font-medium transition-colors ${\n                    viewMode === 'grid' \n                      ? 'bg-white text-mediterranean-600 shadow-sm' \n                      : 'text-mediterranean-600 hover:bg-mediterranean-50'\n                  }`}\n                >\n                  Cuadrícula\n                </button>\n                <button\n                  onClick={() => setViewMode('list')}\n                  className={`px-3 py-2 rounded-lg text-sm font-medium transition-colors ${\n                    viewMode === 'list' \n                      ? 'bg-white text-mediterranean-600 shadow-sm' \n                      : 'text-mediterranean-600 hover:bg-mediterranean-50'\n                  }`}\n                >\n                  Lista\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Products Grid/List */}\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 pb-8\">\n        {viewMode === 'grid' ? (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n            {filteredAndSortedProducts.map((product) => (\n              <div\n                key={product",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/app/erp/products/page.tsx",
        "start": 488,
        "end": 550,
        "startLoc": {
          "line": 488,
          "column": 18,
          "position": 3944
        },
        "endLoc": {
          "line": 550,
          "column": 8,
          "position": 4449
        }
      },
      "secondFile": {
        "name": "apps/web/src/app/erp/suppliers/page.tsx",
        "start": 523,
        "end": 583,
        "startLoc": {
          "line": 523,
          "column": 18,
          "position": 4289
        },
        "endLoc": {
          "line": 583,
          "column": 9,
          "position": 4769
        }
      }
    },
    {
      "format": "tsx",
      "lines": 39,
      "fragment": "}\n          ].map((stat, index) => {\n            const IconComponent = stat.icon;\n            return (\n              <div\n                key={stat.label}\n                className={`relative overflow-hidden rounded-2xl p-6 shadow-lg backdrop-blur-sm transition-all duration-300 hover:scale-105 ${\n                  stat.color === 'coral' ? 'bg-gradient-to-br from-coral-500 to-coral-600' :\n                  stat.color === 'green' ? 'bg-gradient-to-br from-green-500 to-green-600' :\n                  stat.color === 'mediterranean' ? 'bg-gradient-to-br from-mediterranean-500 to-mediterranean-600' :\n                  'bg-gradient-to-br from-red-500 to-red-600'\n                }`}\n              >\n                <div className=\"absolute top-0 right-0 -mt-4 -mr-4 w-20 h-20 bg-white/10 rounded-full\"></div>\n                <div className=\"relative\">\n                  <IconComponent className=\"w-8 h-8 text-white mb-4\" />\n                  <div className=\"text-2xl font-bold text-white mb-1 font-playfair\">\n                    {stat.value}\n                  </div>\n                  <div className=\"text-white/80 text-sm font-medium\">\n                    {stat.label}\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n\n      {/* Filters and Search */}\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"bg-white/80 backdrop-blur-sm rounded-2xl shadow-lg p-6 mb-6\">\n          <div className=\"flex flex-col xl:flex-row xl:items-center xl:justify-between gap-4\">\n            {/* Search */}\n            <div className=\"relative flex-1 max-w-md\">\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-mediterranean-400\" />\n              <input\n                type=\"text\"\n                placeholder=\"Buscar productos...",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/app/erp/products/page.tsx",
        "start": 411,
        "end": 449,
        "startLoc": {
          "line": 411,
          "column": 13,
          "position": 3326
        },
        "endLoc": {
          "line": 449,
          "column": 20,
          "position": 3615
        }
      },
      "secondFile": {
        "name": "apps/web/src/app/erp/suppliers/page.tsx",
        "start": 445,
        "end": 483,
        "startLoc": {
          "line": 445,
          "column": 13,
          "position": 3651
        },
        "endLoc": {
          "line": 483,
          "column": 22,
          "position": 3940
        }
      }
    },
    {
      "format": "tsx",
      "lines": 32,
      "fragment": ",\n              color: 'terracotta'\n            }\n          ].map((stat, index) => {\n            const IconComponent = stat.icon;\n            return (\n              <div\n                key={stat.label}\n                className={`relative overflow-hidden rounded-2xl p-6 shadow-lg backdrop-blur-sm transition-all duration-300 hover:scale-105 ${\n                  stat.color === 'olive' ? 'bg-gradient-to-br from-olive-500 to-olive-600' :\n                  stat.color === 'mediterranean' ? 'bg-gradient-to-br from-mediterranean-500 to-mediterranean-600' :\n                  stat.color === 'red' ? 'bg-gradient-to-br from-red-500 to-red-600' :\n                  'bg-gradient-to-br from-terracotta-500 to-terracotta-600'\n                }`}\n              >\n                <div className=\"absolute top-0 right-0 -mt-4 -mr-4 w-20 h-20 bg-white/10 rounded-full\"></div>\n                <div className=\"relative\">\n                  <IconComponent className=\"w-8 h-8 text-white mb-4\" />\n                  <div className=\"text-2xl font-bold text-white mb-1 font-playfair\">\n                    {stat.value}\n                  </div>\n                  <div className=\"text-white/80 text-sm font-medium\">\n                    {stat.label}\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n\n      {!",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/app/erp/inventory/page.tsx",
        "start": 364,
        "end": 395,
        "startLoc": {
          "line": 364,
          "column": 6,
          "position": 2834
        },
        "endLoc": {
          "line": 395,
          "column": 2,
          "position": 3055
        }
      },
      "secondFile": {
        "name": "apps/web/src/app/erp/suppliers/page.tsx",
        "start": 443,
        "end": 474,
        "startLoc": {
          "line": 443,
          "column": 10,
          "position": 3642
        },
        "endLoc": {
          "line": 474,
          "column": 25,
          "position": 3863
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "\">\n                    <Mail className=\"w-4 h-4 inline mr-1\" />\n                    Contactar\n                  </button>\n                  <button className=\"px-3 py-2 border border-mediterranean-200 text-mediterranean-600 rounded-xl hover:bg-mediterranean-50 transition-colors\">\n                    <Pencil className=\"w-4 h-4\" />\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          /* List View */\n          <div className=\"bg-white/80 backdrop-blur-sm rounded-2xl shadow-lg overflow-hidden\">\n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full\">\n                <thead className=\"bg-mediterranean-50\">\n                  <tr>\n                    <th className=\"px-6 py-4 text-left text-xs font-medium text-mediterranean-600 uppercase tracking-wider\">\n                      Contacto",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/app/crm/contacts/page.tsx",
        "start": 358,
        "end": 377,
        "startLoc": {
          "line": 358,
          "column": 143,
          "position": 2750
        },
        "endLoc": {
          "line": 377,
          "column": 9,
          "position": 2892
        }
      },
      "secondFile": {
        "name": "apps/web/src/app/erp/suppliers/page.tsx",
        "start": 693,
        "end": 712,
        "startLoc": {
          "line": 693,
          "column": 159,
          "position": 5671
        },
        "endLoc": {
          "line": 712,
          "column": 10,
          "position": 5813
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": ";\n\n// ============================================================================\n// FUNCIONES AUXILIARES\n// ============================================================================\n\nfunction generateRequestId(): string {\n  return `req_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n}\n\nfunction addFinOpsHeaders(response: NextResponse, startTime: number): NextResponse {\n  const endTime = Date.now();\n  const latency = endTime - startTime;\n  \n  response.headers.set('X-Request-Id', generateRequestId());\n  response.headers.set('X-Latency-ms', latency.toString());\n  response.headers.set('X-Workflow-Engine', 'web-bff');\n  \n  return response;\n}\n\n// ============================================================================\n// ENDPOINTS",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/app/api/workflows/route.ts",
        "start": 103,
        "end": 125,
        "startLoc": {
          "line": 103,
          "column": 2,
          "position": 1140
        },
        "endLoc": {
          "line": 125,
          "column": 13,
          "position": 1311
        }
      },
      "secondFile": {
        "name": "apps/web/src/app/api/workflows/stats/route.ts",
        "start": 4,
        "end": 26,
        "startLoc": {
          "line": 4,
          "column": 16,
          "position": 37
        },
        "endLoc": {
          "line": 26,
          "column": 28,
          "position": 208
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": ", async () => {\n      const { container } = render(\n        <form>\n          <div>\n            <label htmlFor=\"email\">Email Address</label>\n            <input id=\"email\" type=\"email\" name=\"email\" required />\n          </div>\n          <div>\n            <label htmlFor=\"password\">Password</label>\n            <input id=\"password\" type=\"password\" name=\"password\" required />\n          </div>\n          <Button type=\"submit\">Submit</Button>\n        </form>\n      );\n      await runAllAccessibilityTests",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/components/ui/form.test.tsx",
        "start": 56,
        "end": 70,
        "startLoc": {
          "line": 56,
          "column": 38,
          "position": 563
        },
        "endLoc": {
          "line": 70,
          "column": 25,
          "position": 724
        }
      },
      "secondFile": {
        "name": "apps/web/src/components/ui/form.test.tsx",
        "start": 39,
        "end": 53,
        "startLoc": {
          "line": 39,
          "column": 42,
          "position": 386
        },
        "endLoc": {
          "line": 53,
          "column": 18,
          "position": 547
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": "render(\n        <form>\n          <fieldset>\n            <legend>Gender</legend>\n            <div>\n              <input id=\"male\" type=\"radio\" name=\"gender\" value=\"male\" />\n              <label htmlFor=\"male\">Male</label>\n            </div>\n            <div>\n              <input id=\"female\" type=\"radio\" name=\"gender\" value=\"female\" />\n              <label htmlFor=\"female\">Female</label>\n            </div>\n          </",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/components/ui/form.test.tsx",
        "start": 308,
        "end": 320,
        "startLoc": {
          "line": 308,
          "column": 7,
          "position": 2958
        },
        "endLoc": {
          "line": 320,
          "column": 3,
          "position": 3091
        }
      },
      "secondFile": {
        "name": "apps/web/src/components/ui/form.test.tsx",
        "start": 285,
        "end": 297,
        "startLoc": {
          "line": 285,
          "column": 2,
          "position": 2728
        },
        "endLoc": {
          "line": 297,
          "column": 2,
          "position": 2861
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": "}\n                  </span>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n        \n        <div className=\"flex space-x-2\">\n          <button className=\"text-gray-400 hover:text-gray-600\">\n            <svg className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\n            </svg>\n          </button>\n        </",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/components/dashboard/AuditTrail.tsx",
        "start": 291,
        "end": 306,
        "startLoc": {
          "line": 291,
          "column": 2,
          "position": 2593
        },
        "endLoc": {
          "line": 306,
          "column": 3,
          "position": 2748
        }
      },
      "secondFile": {
        "name": "apps/web/src/components/dashboard/ErrorLog.tsx",
        "start": 202,
        "end": 218,
        "startLoc": {
          "line": 202,
          "column": 6,
          "position": 1705
        },
        "endLoc": {
          "line": 218,
          "column": 2,
          "position": 1862
        }
      }
    },
    {
      "format": "tsx",
      "lines": 21,
      "fragment": ") {\n    return (\n      <div className={`animate-pulse ${className}`}>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n          {Array.from({ length: 4 }).map((_, i) => (\n            <div key={i} className=\"bg-sand-100 rounded-lg p-6 h-32\"></div>\n          ))}\n        </div>\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          {Array.from({ length: 2 }).map((_, i) => (\n            <div key={i} className=\"bg-sand-100 rounded-lg p-6 h-80\"></div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className={`text-center py-12 ${className}`}>\n        <div",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/components/Inventory/InventoryKardexDashboard.tsx",
        "start": 216,
        "end": 236,
        "startLoc": {
          "line": 216,
          "column": 6,
          "position": 1850
        },
        "endLoc": {
          "line": 236,
          "column": 4,
          "position": 2058
        }
      },
      "secondFile": {
        "name": "apps/web/src/components/ui/AdvancedDashboard.tsx",
        "start": 118,
        "end": 138,
        "startLoc": {
          "line": 118,
          "column": 8,
          "position": 889
        },
        "endLoc": {
          "line": 138,
          "column": 14,
          "position": 1097
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": ">\n                  <SelectItem value=\"newsletter\">Newsletter</SelectItem>\n                  <SelectItem value=\"promotional\">Promocional</SelectItem>\n                  <SelectItem value=\"transactional\">Transaccional</SelectItem>\n                  <SelectItem value=\"welcome\">Bienvenida</SelectItem>\n                  <SelectItem value=\"abandoned_cart\">Carrito Abandonado</SelectItem>\n                  <SelectItem value=\"re_engagement\">Re-engagement</SelectItem>\n                  <SelectItem value=\"announcement\">Anuncio</SelectItem>\n                  <SelectItem value=\"survey\">Encuesta</SelectItem>\n                </",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/components/EmailMarketing/EmailMarketingDashboard.tsx",
        "start": 762,
        "end": 771,
        "startLoc": {
          "line": 762,
          "column": 14,
          "position": 6626
        },
        "endLoc": {
          "line": 771,
          "column": 3,
          "position": 6753
        }
      },
      "secondFile": {
        "name": "apps/web/src/components/EmailMarketing/EmailMarketingDashboard.tsx",
        "start": 485,
        "end": 494,
        "startLoc": {
          "line": 485,
          "column": 11,
          "position": 4020
        },
        "endLoc": {
          "line": 494,
          "column": 2,
          "position": 4147
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": "'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Badge } from '@/components/ui/badge';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { Progress } from '@/components/ui/progress';\nimport { \n  FileText",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/components/DocumentManagement/DocumentManagementDashboard.tsx",
        "start": 15,
        "end": 28,
        "startLoc": {
          "line": 15,
          "column": 1,
          "position": 3
        },
        "endLoc": {
          "line": 28,
          "column": 9,
          "position": 212
        }
      },
      "secondFile": {
        "name": "apps/web/src/components/EmailMarketing/EmailMarketingDashboard.tsx",
        "start": 17,
        "end": 30,
        "startLoc": {
          "line": 17,
          "column": 1,
          "position": 3
        },
        "endLoc": {
          "line": 30,
          "column": 5,
          "position": 212
        }
      }
    },
    {
      "format": "tsx",
      "lines": 21,
      "fragment": ") {\n    return (\n      <div className={`animate-pulse ${className}`}>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n          {Array.from({ length: 4 }).map((_, i) => (\n            <div key={i} className=\"bg-sand-100 rounded-lg p-6 h-32\"></div>\n          ))}\n        </div>\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          {Array.from({ length: 2 }).map((_, i) => (\n            <div key={i} className=\"bg-sand-100 rounded-lg p-6 h-80\"></div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className={`text-center py-12 ${className}`}>\n        <AlertTriangle className=\"w-16 h-16 text-red-500 mx-auto mb-4",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/components/DataAnalytics/DataAnalyticsDashboard.tsx",
        "start": 218,
        "end": 238,
        "startLoc": {
          "line": 218,
          "column": 14,
          "position": 1880
        },
        "endLoc": {
          "line": 238,
          "column": 36,
          "position": 2093
        }
      },
      "secondFile": {
        "name": "apps/web/src/components/ui/AdvancedDashboard.tsx",
        "start": 118,
        "end": 138,
        "startLoc": {
          "line": 118,
          "column": 8,
          "position": 889
        },
        "endLoc": {
          "line": 138,
          "column": 36,
          "position": 1102
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": "'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Badge } from '@/components/ui/badge';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { Progress } from '@/components/ui/progress';\nimport { \n  FileText, \n  Plus",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/components/ContentManagement/ContentManagementDashboard.tsx",
        "start": 16,
        "end": 30,
        "startLoc": {
          "line": 16,
          "column": 1,
          "position": 3
        },
        "endLoc": {
          "line": 30,
          "column": 5,
          "position": 217
        }
      },
      "secondFile": {
        "name": "apps/web/src/components/EmailMarketing/EmailMarketingDashboard.tsx",
        "start": 17,
        "end": 29,
        "startLoc": {
          "line": 17,
          "column": 1,
          "position": 3
        },
        "endLoc": {
          "line": 29,
          "column": 7,
          "position": 217
        }
      }
    },
    {
      "format": "tsx",
      "lines": 18,
      "fragment": " className=\"h-4 w-4 text-gray-500\" />;\n    }\n  };\n\n  const formatDate = (dateString: string): string => {\n    return new Date(dateString).toLocaleDateString();\n  };\n\n  const formatNumber = (num: number): string => {\n    if (num >= 1000000) {\n      return (num / 1000000).toFixed(1) + 'M';\n    } else if (num >= 1000) {\n      return (num / 1000).toFixed(1) + 'K';\n    }\n    return num.toString();\n  };\n\n  if",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/components/ContentManagement/ContentManagementDashboard.tsx",
        "start": 236,
        "end": 253,
        "startLoc": {
          "line": 236,
          "column": 9,
          "position": 2044
        },
        "endLoc": {
          "line": 253,
          "column": 3,
          "position": 2215
        }
      },
      "secondFile": {
        "name": "apps/web/src/components/EmailMarketing/EmailMarketingDashboard.tsx",
        "start": 345,
        "end": 362,
        "startLoc": {
          "line": 345,
          "column": 5,
          "position": 2720
        },
        "endLoc": {
          "line": 362,
          "column": 6,
          "position": 2891
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": "</SelectItem>\n                <SelectItem value=\"other\">Otros</SelectItem>\n              </SelectContent>\n            </Select>\n            <Select value={selectedStatus} onValueChange={setSelectedStatus}>\n              <SelectTrigger className=\"w-full md:w-48\">\n                <SelectValue placeholder=\"Estado\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">Todos los estados</SelectItem>\n                <SelectItem value=\"draft\">Borrador</SelectItem>\n                <SelectItem value=\"review\">En revisión</SelectItem>\n                <SelectItem value=\"approved\">Aprobado</SelectItem>\n                <SelectItem value=\"published",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/components/ContentManagement/ContentManagementDashboard.tsx",
        "start": 370,
        "end": 383,
        "startLoc": {
          "line": 370,
          "column": 8,
          "position": 3274
        },
        "endLoc": {
          "line": 383,
          "column": 10,
          "position": 3426
        }
      },
      "secondFile": {
        "name": "apps/web/src/components/DocumentManagement/DocumentManagementDashboard.tsx",
        "start": 323,
        "end": 336,
        "startLoc": {
          "line": 323,
          "column": 9,
          "position": 2877
        },
        "endLoc": {
          "line": 336,
          "column": 9,
          "position": 3029
        }
      }
    },
    {
      "format": "tsx",
      "lines": 32,
      "fragment": ")}\n                        </span>\n                      </div>\n                    </TableCell>\n                    <TableCell>\n                      <div className=\"flex items-center space-x-1\">\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          onClick={() => setSelectedContent(content)}\n                        >\n                          <Eye className=\"h-3 w-3\" />\n                        </Button>\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          onClick={() => {\n                            setSelectedContent(content);\n                            setShowVersionDialog(true);\n                          }}\n                        >\n                          <History className=\"h-3 w-3\" />\n                        </Button>\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          onClick={() => {\n                            setSelectedContent(content);\n                            setShowPublishDialog(true);\n                          }}\n                        >\n                          <Share2",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/components/ContentManagement/ContentManagementDashboard.tsx",
        "start": 462,
        "end": 493,
        "startLoc": {
          "line": 462,
          "column": 2,
          "position": 4112
        },
        "endLoc": {
          "line": 493,
          "column": 7,
          "position": 4300
        }
      },
      "secondFile": {
        "name": "apps/web/src/components/DocumentManagement/DocumentManagementDashboard.tsx",
        "start": 398,
        "end": 429,
        "startLoc": {
          "line": 398,
          "column": 2,
          "position": 3551
        },
        "endLoc": {
          "line": 429,
          "column": 6,
          "position": 3739
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": ">\n                  <SelectItem value=\"article\">Artículo</SelectItem>\n                  <SelectItem value=\"blog\">Blog</SelectItem>\n                  <SelectItem value=\"page\">Página</SelectItem>\n                  <SelectItem value=\"product\">Producto</SelectItem>\n                  <SelectItem value=\"news\">Noticia</SelectItem>\n                  <SelectItem value=\"event\">Evento</SelectItem>\n                  <SelectItem value=\"faq\">FAQ</SelectItem>\n                  <SelectItem value=\"tutorial\">Tutorial</SelectItem>\n                  <SelectItem value=\"documentation\">Documentación</SelectItem>\n                  <SelectItem value=\"landing\">Landing</SelectItem>\n                </",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/components/ContentManagement/ContentManagementDashboard.tsx",
        "start": 657,
        "end": 668,
        "startLoc": {
          "line": 657,
          "column": 14,
          "position": 5862
        },
        "endLoc": {
          "line": 668,
          "column": 3,
          "position": 6016
        }
      },
      "secondFile": {
        "name": "apps/web/src/components/ContentManagement/ContentManagementDashboard.tsx",
        "start": 360,
        "end": 371,
        "startLoc": {
          "line": 360,
          "column": 11,
          "position": 3125
        },
        "endLoc": {
          "line": 371,
          "column": 2,
          "position": 3279
        }
      }
    },
    {
      "format": "tsx",
      "lines": 23,
      "fragment": ");\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n        <div className=\"flex\">\n          <div className=\"flex-shrink-0\">\n            <svg className=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n            </svg>\n          </div>\n          <div className=\"ml-3\">\n            <h3 className=\"text-sm font-medium text-red-800\">Error loading configuration",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/components/Configuration/ConfigurationDashboard.tsx",
        "start": 109,
        "end": 131,
        "startLoc": {
          "line": 109,
          "column": 38,
          "position": 932
        },
        "endLoc": {
          "line": 131,
          "column": 14,
          "position": 1124
        }
      },
      "secondFile": {
        "name": "apps/web/src/components/Workflows/WorkflowsDashboard.tsx",
        "start": 179,
        "end": 201,
        "startLoc": {
          "line": 179,
          "column": 28,
          "position": 1589
        },
        "endLoc": {
          "line": 201,
          "column": 10,
          "position": 1781
        }
      }
    },
    {
      "format": "tsx",
      "lines": 26,
      "fragment": "</h3>\n            <div className=\"mt-2 text-sm text-red-700\">\n              <p>{error}</p>\n            </div>\n            <div className=\"mt-4\">\n              <button\n                onClick={loadData}\n                className=\"bg-red-100 px-3 py-2 rounded-md text-sm font-medium text-red-800 hover:bg-red-200\"\n              >\n                Retry\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"bg-white shadow rounded-lg\">\n        <div className=\"px-4 py-5 sm:p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-2xl font-bold text-gray-900\">Configuration",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/components/Configuration/ConfigurationDashboard.tsx",
        "start": 131,
        "end": 156,
        "startLoc": {
          "line": 131,
          "column": 14,
          "position": 1125
        },
        "endLoc": {
          "line": 156,
          "column": 14,
          "position": 1290
        }
      },
      "secondFile": {
        "name": "apps/web/src/components/Workflows/WorkflowsDashboard.tsx",
        "start": 201,
        "end": 226,
        "startLoc": {
          "line": 201,
          "column": 10,
          "position": 1782
        },
        "endLoc": {
          "line": 226,
          "column": 10,
          "position": 1947
        }
      }
    },
    {
      "format": "tsx",
      "lines": 27,
      "fragment": "}\n            ].map(({ id, label, icon: Icon }) => (\n              <button\n                key={id}\n                onClick={() => setActiveTab(id as any)}\n                className={`flex items-center space-x-2 px-3 py-2 border-b-2 font-medium text-sm ${\n                  activeTab === id\n                    ? 'border-blue-500 text-blue-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                }`}\n              >\n                <Icon className=\"w-4 h-4\" />\n                <span>{label}</span>\n              </button>\n            ))}\n          </nav>\n        </div>\n\n        {/* Overview Tab */}\n        {activeTab === 'overview' && (\n          <div className=\"space-y-6\">\n            {/* Stats Cards */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n              <div className=\"bg-white p-6 rounded-lg shadow\">\n                <div className=\"flex items-center\">\n                  <div className=\"p-2 bg-blue-100 rounded-lg\">\n                    <GitBranch",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/components/AdvancedCICD/AdvancedCICDDashboard.tsx",
        "start": 428,
        "end": 454,
        "startLoc": {
          "line": 428,
          "column": 2,
          "position": 3640
        },
        "endLoc": {
          "line": 454,
          "column": 10,
          "position": 3840
        }
      },
      "secondFile": {
        "name": "apps/web/src/components/AdvancedReporting/AdvancedReportingDashboard.tsx",
        "start": 297,
        "end": 323,
        "startLoc": {
          "line": 297,
          "column": 2,
          "position": 2246
        },
        "endLoc": {
          "line": 323,
          "column": 9,
          "position": 2446
        }
      }
    },
    {
      "format": "tsx",
      "lines": 42,
      "fragment": ".toString(),\n              icon: AlertTriangle,\n              color: 'red'\n            }\n          ].map((stat, index) => {\n            const IconComponent = stat.icon;\n            return (\n              <div\n                key={stat.label}\n                className={`relative overflow-hidden rounded-2xl p-6 shadow-lg backdrop-blur-sm transition-all duration-300 hover:scale-105 ${\n                  stat.color === 'mediterranean' ? 'bg-gradient-to-br from-mediterranean-500 to-mediterranean-600' :\n                  stat.color === 'green' ? 'bg-gradient-to-br from-green-500 to-green-600' :\n                  stat.color === 'orange' ? 'bg-gradient-to-br from-orange-500 to-orange-600' :\n                  'bg-gradient-to-br from-red-500 to-red-600'\n                }`}\n              >\n                <div className=\"absolute top-0 right-0 -mt-4 -mr-4 w-20 h-20 bg-white/10 rounded-full\"></div>\n                <div className=\"relative\">\n                  <IconComponent className=\"w-8 h-8 text-white mb-4\" />\n                  <div className=\"text-2xl font-bold text-white mb-1 font-playfair\">\n                    {stat.value}\n                  </div>\n                  <div className=\"text-white/80 text-sm font-medium\">\n                    {stat.label}\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n\n      {/* Filters and Search */}\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"bg-white/80 backdrop-blur-sm rounded-2xl shadow-lg p-6 mb-6\">\n          <div className=\"flex flex-col xl:flex-row xl:items-center xl:justify-between gap-4\">\n            {/* Search */}\n            <div className=\"relative flex-1 max-w-md\">\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-mediterranean-400\" />\n              <input\n                type=\"text\"\n                placeholder=\"Buscar facturas...",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/app/invoices/page.tsx",
        "start": 313,
        "end": 354,
        "startLoc": {
          "line": 313,
          "column": 13,
          "position": 2834
        },
        "endLoc": {
          "line": 354,
          "column": 19,
          "position": 3143
        }
      },
      "secondFile": {
        "name": "apps/web/src/app/erp/products/page.tsx",
        "start": 408,
        "end": 483,
        "startLoc": {
          "line": 408,
          "column": 17,
          "position": 3306
        },
        "endLoc": {
          "line": 483,
          "column": 22,
          "position": 3940
        }
      }
    },
    {
      "format": "tsx",
      "lines": 23,
      "fragment": "\"\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  className=\"pl-10 pr-4 py-2 bg-white/20 backdrop-blur-sm border border-white/30 rounded-xl text-white placeholder-white/60 focus:outline-none focus:ring-2 focus:ring-white/50 focus:border-white/50 w-64\"\n                />\n              </div>\n              \n              <button className=\"bg-white/20 backdrop-blur-sm hover:bg-white/30 text-white px-4 py-2 rounded-xl font-medium transition-all duration-200 flex items-center gap-2\">\n                <Plus className=\"w-4 h-4\" />\n                Nuevo\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Navigation Tabs */}\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 -mt-4\">\n        <div className=\"bg-white/80 backdrop-blur-sm rounded-2xl shadow-lg p-2\">\n          <div className=\"flex space-x-1\">\n            {[\n              { id: 'overview', label: 'Resumen', icon: BarChart3 },\n              { id: 'inventory'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/app/erp/page.tsx",
        "start": 195,
        "end": 217,
        "startLoc": {
          "line": 195,
          "column": 33,
          "position": 1290
        },
        "endLoc": {
          "line": 217,
          "column": 12,
          "position": 1455
        }
      },
      "secondFile": {
        "name": "apps/web/src/app/finance/page.tsx",
        "start": 204,
        "end": 226,
        "startLoc": {
          "line": 204,
          "column": 26,
          "position": 1394
        },
        "endLoc": {
          "line": 226,
          "column": 11,
          "position": 1559
        }
      }
    },
    {
      "format": "tsx",
      "lines": 60,
      "fragment": ".label}\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n\n            {/* Content Grid */}\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-8\">\n              {/* Quick Actions */}\n              <div className=\"bg-white/80 backdrop-blur-sm rounded-2xl shadow-lg p-6\">\n                <h3 className=\"text-xl font-bold text-mediterranean-800 font-playfair mb-6\">\n                  Acciones Rápidas\n                </h3>\n                \n                <div className=\"grid grid-cols-1 gap-4\">\n                  {quickActions.map((action) => {\n                    const IconComponent = action.icon;\n                    return (\n                      <button\n                        key={action.title}\n                        className={`text-left p-4 rounded-xl transition-all duration-200 hover:scale-105 hover:shadow-md ${\n                          action.color === 'coral' ? 'bg-coral-50 hover:bg-coral-100' :\n                          action.color === 'olive' ? 'bg-olive-50 hover:bg-olive-100' :\n                          action.color === 'mediterranean' ? 'bg-mediterranean-50 hover:bg-mediterranean-100' :\n                          'bg-terracotta-50 hover:bg-terracotta-100'\n                        }`}\n                      >\n                        <div className=\"flex items-center mb-2\">\n                          <IconComponent className={`w-5 h-5 mr-2 ${\n                            action.color === 'coral' ? 'text-coral-600' :\n                            action.color === 'olive' ? 'text-olive-600' :\n                            action.color === 'mediterranean' ? 'text-mediterranean-600' :\n                            'text-terracotta-600'\n                          }`} />\n                          <span className={`font-medium ${\n                            action.color === 'coral' ? 'text-coral-800' :\n                            action.color === 'olive' ? 'text-olive-800' :\n                            action.color === 'mediterranean' ? 'text-mediterranean-800' :\n                            'text-terracotta-800'\n                          }`}>\n                            {action.title}\n                          </span>\n                        </div>\n                        <p className={`text-sm ${\n                          action.color === 'coral' ? 'text-coral-600' :\n                          action.color === 'olive' ? 'text-olive-600' :\n                          action.color === 'mediterranean' ? 'text-mediterranean-600' :\n                          'text-terracotta-600'\n                        }`}>\n                          {action.description}\n                        </p>\n                      </button>\n                    );\n                  })}\n                </div>\n              </div>\n\n              {/* Recent Activity */",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/app/erp/page.tsx",
        "start": 323,
        "end": 382,
        "startLoc": {
          "line": 323,
          "column": 5,
          "position": 2281
        },
        "endLoc": {
          "line": 382,
          "column": 22,
          "position": 2702
        }
      },
      "secondFile": {
        "name": "apps/web/src/app/finance/page.tsx",
        "start": 324,
        "end": 383,
        "startLoc": {
          "line": 324,
          "column": 4,
          "position": 2330
        },
        "endLoc": {
          "line": 383,
          "column": 26,
          "position": 2751
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": ">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n              {Array.from({ length: 4 }).map((_, i) => (\n                <div key={i} className=\"bg-sand-100 rounded-lg p-6 h-32\"></div>\n              ))}\n            </div>\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              {Array.from({ length: 2 }).map((_, i) => (\n                <div key={i} className=\"bg-sand-100 rounded-lg p-6 h-80\"></div>\n              ))}\n            </div>\n          </div>\n        </",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/app/dashboard-advanced/page.tsx",
        "start": 136,
        "end": 148,
        "startLoc": {
          "line": 136,
          "column": 4,
          "position": 1338
        },
        "endLoc": {
          "line": 148,
          "column": 3,
          "position": 1486
        }
      },
      "secondFile": {
        "name": "apps/web/src/components/ui/AdvancedDashboard.tsx",
        "start": 120,
        "end": 132,
        "startLoc": {
          "line": 120,
          "column": 2,
          "position": 911
        },
        "endLoc": {
          "line": 132,
          "column": 2,
          "position": 1059
        }
      }
    },
    {
      "format": "javascript",
      "lines": 87,
      "fragment": "}`}\n                  >\n                    <div className=\"absolute top-0 right-0 -mt-4 -mr-4 w-24 h-24 bg-white/10 rounded-full\"></div>\n                    \n                    <div className=\"relative\">\n                      <div className=\"flex items-center justify-between mb-4\">\n                        <IconComponent className=\"w-8 h-8 text-white\" />\n                        <span className=\"text-green-200 text-sm font-medium\">{stat.change}</span>\n                      </div>\n                      \n                      <div className=\"text-3xl font-bold text-white mb-1 font-playfair\">\n                        {stat.value}\n                      </div>\n                      \n                      <div className=\"text-white/80 text-sm font-medium\">\n                        {stat.label}\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n\n            {/* Content Grid */}\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n              {/* Quick Actions */}\n              <div className=\"bg-white/80 backdrop-blur-sm rounded-2xl shadow-lg p-6\">\n                <h3 className=\"text-xl font-bold text-mediterranean-800 font-playfair mb-6\">\n                  Acciones Rápidas\n                </h3>\n                \n                <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n                  {quickActions.map((action) => {\n                    const IconComponent = action.icon;\n                    return (\n                      <button\n                        key={action.title}\n                        className={`text-left p-4 rounded-xl transition-all duration-200 hover:scale-105 hover:shadow-md ${\n                          action.color === 'coral' ? 'bg-coral-50 hover:bg-coral-100' :\n                          action.color === 'olive' ? 'bg-olive-50 hover:bg-olive-100' :\n                          action.color === 'mediterranean' ? 'bg-mediterranean-50 hover:bg-mediterranean-100' :\n                          'bg-terracotta-50 hover:bg-terracotta-100'\n                        }`}\n                      >\n                        <div className=\"flex items-center mb-2\">\n                          <IconComponent className={`w-5 h-5 mr-2 ${\n                            action.color === 'coral' ? 'text-coral-600' :\n                            action.color === 'olive' ? 'text-olive-600' :\n                            action.color === 'mediterranean' ? 'text-mediterranean-600' :\n                            'text-terracotta-600'\n                          }`} />\n                          <span className={`font-medium ${\n                            action.color === 'coral' ? 'text-coral-800' :\n                            action.color === 'olive' ? 'text-olive-800' :\n                            action.color === 'mediterranean' ? 'text-mediterranean-800' :\n                            'text-terracotta-800'\n                          }`}>\n                            {action.title}\n                          </span>\n                        </div>\n                        <p className={`text-sm ${\n                          action.color === 'coral' ? 'text-coral-600' :\n                          action.color === 'olive' ? 'text-olive-600' :\n                          action.color === 'mediterranean' ? 'text-mediterranean-600' :\n                          'text-terracotta-600'\n                        }`}>\n                          {action.description}\n                        </p>\n                      </button>\n                    );\n                  })}\n                </div>\n              </div>\n\n              {/* Recent Activity */}\n              <div className=\"bg-white/80 backdrop-blur-sm rounded-2xl shadow-lg p-6\">\n                <h3 className=\"text-xl font-bold text-mediterranean-800 font-playfair mb-6\">\n                  Actividad Reciente\n                </h3>\n                \n                <div className=\"space-y-4\">\n                  {recentActivities.map((activity) => {\n                    const IconComponent = activity.icon;\n                    return (\n                      <div key={activity.id} className=\"flex items-start gap-4 p-3 rounded-xl hover:bg-mediterranean-50 transition-colors duration-200\">\n                        <div className={`p-2 rounded-full ${\n                          activity.color === 'coral'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/app/crm/page.tsx",
        "start": 211,
        "end": 297,
        "startLoc": {
          "line": 211,
          "column": 21,
          "position": 1481
        },
        "endLoc": {
          "line": 297,
          "column": 8,
          "position": 2135
        }
      },
      "secondFile": {
        "name": "apps/web/src/app/erp/page.tsx",
        "start": 313,
        "end": 394,
        "startLoc": {
          "line": 313,
          "column": 25,
          "position": 2218
        },
        "endLoc": {
          "line": 394,
          "column": 6,
          "position": 2814
        }
      }
    },
    {
      "format": "tsx",
      "lines": 23,
      "fragment": "\"\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  className=\"pl-10 pr-4 py-2 bg-white/20 backdrop-blur-sm border border-white/30 rounded-xl text-white placeholder-white/60 focus:outline-none focus:ring-2 focus:ring-white/50 focus:border-white/50 w-64\"\n                />\n              </div>\n              \n              <button className=\"bg-white/20 backdrop-blur-sm hover:bg-white/30 text-white px-4 py-2 rounded-xl font-medium transition-all duration-200 flex items-center gap-2\">\n                <Plus className=\"w-4 h-4\" />\n                Nuevo\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Navigation Tabs */}\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 -mt-4\">\n        <div className=\"bg-white/80 backdrop-blur-sm rounded-2xl shadow-lg p-2\">\n          <div className=\"flex space-x-1\">\n            {[\n              { id: 'overview', label: 'Resumen', icon: BarChart3 },\n              { id: 'contacts'",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/app/crm/page.tsx",
        "start": 120,
        "end": 142,
        "startLoc": {
          "line": 120,
          "column": 30,
          "position": 775
        },
        "endLoc": {
          "line": 142,
          "column": 11,
          "position": 940
        }
      },
      "secondFile": {
        "name": "apps/web/src/app/finance/page.tsx",
        "start": 204,
        "end": 226,
        "startLoc": {
          "line": 204,
          "column": 26,
          "position": 1394
        },
        "endLoc": {
          "line": 226,
          "column": 11,
          "position": 1559
        }
      }
    },
    {
      "format": "tsx",
      "lines": 51,
      "fragment": "\">\n                  {quickActions.map((action) => {\n                    const IconComponent = action.icon;\n                    return (\n                      <button\n                        key={action.title}\n                        className={`text-left p-4 rounded-xl transition-all duration-200 hover:scale-105 hover:shadow-md ${\n                          action.color === 'coral' ? 'bg-coral-50 hover:bg-coral-100' :\n                          action.color === 'olive' ? 'bg-olive-50 hover:bg-olive-100' :\n                          action.color === 'mediterranean' ? 'bg-mediterranean-50 hover:bg-mediterranean-100' :\n                          'bg-terracotta-50 hover:bg-terracotta-100'\n                        }`}\n                      >\n                        <div className=\"flex items-center mb-2\">\n                          <IconComponent className={`w-5 h-5 mr-2 ${\n                            action.color === 'coral' ? 'text-coral-600' :\n                            action.color === 'olive' ? 'text-olive-600' :\n                            action.color === 'mediterranean' ? 'text-mediterranean-600' :\n                            'text-terracotta-600'\n                          }`} />\n                          <span className={`font-medium ${\n                            action.color === 'coral' ? 'text-coral-800' :\n                            action.color === 'olive' ? 'text-olive-800' :\n                            action.color === 'mediterranean' ? 'text-mediterranean-800' :\n                            'text-terracotta-800'\n                          }`}>\n                            {action.title}\n                          </span>\n                        </div>\n                        <p className={`text-sm ${\n                          action.color === 'coral' ? 'text-coral-600' :\n                          action.color === 'olive' ? 'text-olive-600' :\n                          action.color === 'mediterranean' ? 'text-mediterranean-600' :\n                          'text-terracotta-600'\n                        }`}>\n                          {action.description}\n                        </p>\n                      </button>\n                    );\n                  })}\n                </div>\n              </div>\n\n              {/* Recent Activity */}\n              <div className=\"bg-white/80 backdrop-blur-sm rounded-2xl shadow-lg p-6\">\n                <h3 className=\"text-xl font-bold text-mediterranean-800 font-playfair mb-6\">\n                  Actividad Reciente\n                </h3>\n                \n                <div className=\"space-y-4\">\n                  {recentActivities",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/app/crm/page.tsx",
        "start": 242,
        "end": 292,
        "startLoc": {
          "line": 242,
          "column": 38,
          "position": 1700
        },
        "endLoc": {
          "line": 292,
          "column": 17,
          "position": 2073
        }
      },
      "secondFile": {
        "name": "apps/web/src/app/erp/page.tsx",
        "start": 339,
        "end": 389,
        "startLoc": {
          "line": 339,
          "column": 23,
          "position": 2379
        },
        "endLoc": {
          "line": 389,
          "column": 15,
          "position": 2752
        }
      }
    },
    {
      "format": "tsx",
      "lines": 33,
      "fragment": ".map((activity) => {\n                    const IconComponent = activity.icon;\n                    return (\n                      <div key={activity.id} className=\"flex items-start gap-4 p-3 rounded-xl hover:bg-mediterranean-50 transition-colors duration-200\">\n                        <div className={`p-2 rounded-full ${\n                          activity.color === 'coral' ? 'bg-coral-100' :\n                          activity.color === 'mediterranean' ? 'bg-mediterranean-100' :\n                          'bg-olive-100'\n                        }`}>\n                          <IconComponent className={`w-4 h-4 ${\n                            activity.color === 'coral' ? 'text-coral-600' :\n                            activity.color === 'mediterranean' ? 'text-mediterranean-600' :\n                            'text-olive-600'\n                          }`} />\n                        </div>\n                        \n                        <div className=\"flex-1 min-w-0\">\n                          <p className=\"font-medium text-mediterranean-800\">\n                            {activity.title}\n                          </p>\n                          <p className=\"text-mediterranean-600 text-sm\">\n                            {activity.description}\n                          </p>\n                          <p className=\"text-mediterranean-500 text-xs mt-1\">\n                            {activity.time}\n                          </p>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            </",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/app/crm/page.tsx",
        "start": 292,
        "end": 324,
        "startLoc": {
          "line": 292,
          "column": 17,
          "position": 2074
        },
        "endLoc": {
          "line": 324,
          "column": 3,
          "position": 2321
        }
      },
      "secondFile": {
        "name": "apps/web/src/app/erp/page.tsx",
        "start": 389,
        "end": 424,
        "startLoc": {
          "line": 389,
          "column": 15,
          "position": 2753
        },
        "endLoc": {
          "line": 424,
          "column": 2,
          "position": 3025
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "const ActionSchema = z.object({\n  id: z.string(),\n  name: z.string(),\n  type: ActionTypeSchema,\n  config: z.record(z.any()),\n  order: z.number(),\n  timeout: z.number().optional(),\n  retry: z.object({\n    maxAttempts: z.number(),\n    strategy: z.enum(['fixed', 'exponential', 'linear']),\n    delay: z.number(),\n  }).optional(),\n});\n\n// ============================================================================",
      "tokens": 0,
      "firstFile": {
        "name": "apps/web/src/lib/workflows.ts",
        "start": 86,
        "end": 100,
        "startLoc": {
          "line": 86,
          "column": 2,
          "position": 845
        },
        "endLoc": {
          "line": 100,
          "column": 80,
          "position": 994
        }
      },
      "secondFile": {
        "name": "apps/web/src/app/api/workflows/route.ts",
        "start": 65,
        "end": 79,
        "startLoc": {
          "line": 65,
          "column": 1,
          "position": 706
        },
        "endLoc": {
          "line": 79,
          "column": 6,
          "position": 855
        }
      }
    }
  ]
}